<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aqci006" std_prog="aqci006" erpver="1.0" module="AQC" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="construct.c.page1_info.qcafcrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcafcrtdp  #顯示到畫面上

            NEXT FIELD qcafcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1_info.qcafcrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcafcrtid  #顯示到畫面上

            NEXT FIELD qcafcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1_info.qcafmodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcafmodid  #顯示到畫面上

            NEXT FIELD qcafmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1_info.qcafowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcafowndp  #顯示到畫面上

            NEXT FIELD qcafowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1_info.qcafownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcafownid  #顯示到畫面上

            NEXT FIELD qcafownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.qcafcrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcafcrtdp  #顯示到畫面上

            NEXT FIELD qcafcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.qcafcrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcafcrtid  #顯示到畫面上

            NEXT FIELD qcafcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.qcafmodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcafmodid  #顯示到畫面上

            NEXT FIELD qcafmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.qcafowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcafowndp  #顯示到畫面上

            NEXT FIELD qcafowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.qcafownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcafownid  #顯示到畫面上

            NEXT FIELD qcafownid                     #返回原欄位

]]>
  </point>
  <point name="detail_show.body1_info.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_qcaf2_d[l_ac].qcafmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_qcaf2_d[l_ac].qcafmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_qcaf2_d[l_ac].qcafmodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_qcaf2_d[l_ac].qcafownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_qcaf2_d[l_ac].qcafownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_qcaf2_d[l_ac].qcafownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_qcaf2_d[l_ac].qcafowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_qcaf2_d[l_ac].qcafowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_qcaf2_d[l_ac].qcafowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_qcaf2_d[l_ac].qcafcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_qcaf2_d[l_ac].qcafcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_qcaf2_d[l_ac].qcafcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_qcaf2_d[l_ac].qcafcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_qcaf2_d[l_ac].qcafcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_qcaf2_d[l_ac].qcafcrtdp_desc
]]>
  </point>
  <point name="input.a.page1_info.qcaf001_2" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_qcaf1_info_d[g_detail_idx].qcaf001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_qcaf1_info_d[g_detail_idx].qcaf001 != g_qcaf1_info_d_t.qcaf001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM qcaf_t WHERE "||"qcafent = '" ||g_enterprise|| "' AND "||"qcaf001 = '"||g_qcaf1_info_d[g_detail_idx].qcaf001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.qcaf001_3" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_qcaf2_d[g_detail_idx].qcaf001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_qcaf2_d[g_detail_idx].qcaf001 != g_qcaf2_d_t.qcaf001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM qcaf_t WHERE "||"qcafent = '" ||g_enterprise|| "' AND "||"qcaf001 = '"||g_qcaf2_d[g_detail_idx].qcaf001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="function.aqci006_chk_qcaf" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[# KEY值重複檢查
PRIVATE FUNCTION aqci006_chk_qcaf(p_cmd)
DEFINE p_cmd       LIKE type_t.chr1
   
   IF NOT cl_null(g_qcaf_d[l_ac].qcaf001) THEN 
      IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_qcaf_d[l_ac].qcaf001 != g_qcaf_d_t.qcaf001))) THEN 
         IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM qcaf_t WHERE "||"qcafent = '" ||g_enterprise|| "' AND "||"qcaf001 = '"||g_qcaf_d[l_ac].qcaf001 ||"'",'std-00004',0) THEN 
            RETURN FALSE
         END IF
      END IF
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.aqci006_chk_qcaf001" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[# 數值大於0檢查
PRIVATE FUNCTION aqci006_chk_qcaf001(p_qcaf001)
DEFINE p_qcaf001      lIKE qcaf_t.qcaf001
  
  LET g_errno = ''
  
  IF NOT cl_null(p_qcaf001) AND p_qcaf001 < 0  THEN 
     LET g_errno = 'aqc-00004'
  END IF
END FUNCTION]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_qcaf2_d[l_ac].qcaf001 = g_qcaf_d[l_ac].qcaf001 
      DISPLAY g_qcaf2_d[l_ac].qcaf001 TO s_detail2[l_ac].qcaf001]]>
  </point>
  <point name="construct.c.page3.qcafcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcafcrtdp  #顯示到畫面上

            NEXT FIELD qcafcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page3.qcafcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcafcrtid  #顯示到畫面上

            NEXT FIELD qcafcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page3.qcafmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcafmodid  #顯示到畫面上

            NEXT FIELD qcafmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page3.qcafowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcafowndp  #顯示到畫面上

            NEXT FIELD qcafowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page3.qcafownid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcafownid  #顯示到畫面上

            NEXT FIELD qcafownid                     #返回原欄位

]]>
  </point>
  <point name="detail_show.body3.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_qcaf3_d[l_ac].qcafmodid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_qcaf3_d[l_ac].qcafmodid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_qcaf3_d[l_ac].qcafmodid_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_qcaf3_d[l_ac].qcafownid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_qcaf3_d[l_ac].qcafownid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_qcaf3_d[l_ac].qcafownid_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_qcaf3_d[l_ac].qcafowndp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_qcaf3_d[l_ac].qcafowndp_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_qcaf3_d[l_ac].qcafowndp_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_qcaf3_d[l_ac].qcafcrtid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_qcaf3_d[l_ac].qcafcrtid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_qcaf3_d[l_ac].qcafcrtid_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_qcaf3_d[l_ac].qcafcrtdp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_qcaf3_d[l_ac].qcafcrtdp_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_qcaf3_d[l_ac].qcafcrtdp_desc
   
   LET g_qcaf3_d[l_ac].qcaf001 = g_qcaf_d[l_ac].qcaf001 
   DISPLAY g_qcaf3_d[l_ac].qcaf001 TO s_detail2[l_ac].qcaf001]]>
  </point>
  <point name="input.a.page1.qcaf001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF NOT aqci006_chk_qcaf(l_cmd) THEN
               LET g_qcaf_d[l_ac].qcaf001 = g_qcaf_d_t.qcaf001
               NEXT FIELD qcaf001
            END IF
            CALL aqci006_chk_qcaf001(g_qcaf_d[l_ac].qcaf001)
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_qcaf_d[l_ac].qcaf001,g_errno,1)
               LET g_qcaf_d[l_ac].qcaf001 = g_qcaf_d_t.qcaf001
               NEXT FIELD qcaf001
            END IF
]]>
  </point>
  <point name="input.a.page1.qcaf002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aqci006_chk_qcaf001(g_qcaf_d[l_ac].qcaf002)
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_qcaf_d[l_ac].qcaf002,g_errno,1)
               LET g_qcaf_d[l_ac].qcaf002 = g_qcaf_d_t.qcaf002
               NEXT FIELD qcaf002
            END IF]]>
  </point>
  <point name="input.a.page1.qcaf003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aqci006_chk_qcaf001(g_qcaf_d[l_ac].qcaf003)
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_qcaf_d[l_ac].qcaf003,g_errno,1)
               LET g_qcaf_d[l_ac].qcaf003 = g_qcaf_d_t.qcaf003
               NEXT FIELD qcaf003
            END IF]]>
  </point>
  <point name="input.a.page1.qcaf004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aqci006_chk_qcaf001(g_qcaf_d[l_ac].qcaf004)
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_qcaf_d[l_ac].qcaf004,g_errno,1)
               LET g_qcaf_d[l_ac].qcaf004 = g_qcaf_d_t.qcaf004
               NEXT FIELD qcaf004
            END IF]]>
  </point>
  <point name="input.a.page1.qcaf010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aqci006_chk_qcaf001(g_qcaf_d[l_ac].qcaf010)
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_qcaf_d[l_ac].qcaf010,g_errno,1)
               LET g_qcaf_d[l_ac].qcaf010 = g_qcaf_d_t.qcaf010
               NEXT FIELD qcaf010
            END IF]]>
  </point>
  <point name="input.a.page1.qcaf011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aqci006_chk_qcaf001(g_qcaf_d[l_ac].qcaf011)
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_qcaf_d[l_ac].qcaf011,g_errno,1)
               LET g_qcaf_d[l_ac].qcaf011 = g_qcaf_d_t.qcaf011
               NEXT FIELD qcaf011
            END IF]]>
  </point>
  <point name="input.a.page1.qcaf012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aqci006_chk_qcaf001(g_qcaf_d[l_ac].qcaf012)
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_qcaf_d[l_ac].qcaf012,g_errno,1)
               LET g_qcaf_d[l_ac].qcaf012 = g_qcaf_d_t.qcaf012
               NEXT FIELD qcaf012
            END IF]]>
  </point>
  <point name="input.a.page1.qcaf013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aqci006_chk_qcaf001(g_qcaf_d[l_ac].qcaf013)
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_qcaf_d[l_ac].qcaf013,g_errno,1)
               LET g_qcaf_d[l_ac].qcaf013 = g_qcaf_d_t.qcaf013
               NEXT FIELD qcaf013
            END IF]]>
  </point>
  <point name="input.a.page1.qcaf014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aqci006_chk_qcaf001(g_qcaf_d[l_ac].qcaf014)
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_qcaf_d[l_ac].qcaf014,g_errno,1)
               LET g_qcaf_d[l_ac].qcaf014 = g_qcaf_d_t.qcaf014
               NEXT FIELD qcaf014
            END IF]]>
  </point>
  <point name="input.a.page1.qcaf015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aqci006_chk_qcaf001(g_qcaf_d[l_ac].qcaf015)
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_qcaf_d[l_ac].qcaf015,g_errno,1)
               LET g_qcaf_d[l_ac].qcaf015 = g_qcaf_d_t.qcaf015
               NEXT FIELD qcaf015
            END IF]]>
  </point>
  <point name="input.a.page2.qcaf001_2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_qcaf2_d[l_ac].qcaf001) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_qcaf2_d[l_ac].qcaf001 != g_qcaf2_d_t.qcaf001))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM qcaf_t WHERE "||"qcafent = '" ||g_enterprise|| "' AND "||"qcaf001 = '"||g_qcaf2_d[l_ac].qcaf001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.qcaf005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aqci006_chk_qcaf001(g_qcaf2_d[l_ac].qcaf005)
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_qcaf2_d[l_ac].qcaf005,g_errno,1)
               LET g_qcaf2_d[l_ac].qcaf005 = g_qcaf2_d_t.qcaf005
               NEXT FIELD qcaf005
            END IF]]>
  </point>
  <point name="input.a.page2.qcaf006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aqci006_chk_qcaf001(g_qcaf2_d[l_ac].qcaf006)
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_qcaf2_d[l_ac].qcaf006,g_errno,1)
               LET g_qcaf2_d[l_ac].qcaf006 = g_qcaf2_d_t.qcaf006
               NEXT FIELD qcaf006
            END IF]]>
  </point>
  <point name="input.a.page2.qcaf007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aqci006_chk_qcaf001(g_qcaf2_d[l_ac].qcaf007)
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_qcaf2_d[l_ac].qcaf007,g_errno,1)
               LET g_qcaf2_d[l_ac].qcaf007 = g_qcaf2_d_t.qcaf007
               NEXT FIELD qcaf007
            END IF]]>
  </point>
  <point name="input.a.page2.qcaf008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aqci006_chk_qcaf001(g_qcaf2_d[l_ac].qcaf008)
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_qcaf2_d[l_ac].qcaf008,g_errno,1)
               LET g_qcaf2_d[l_ac].qcaf008 = g_qcaf2_d_t.qcaf008
               NEXT FIELD qcaf008
            END IF]]>
  </point>
  <point name="input.a.page2.qcaf009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aqci006_chk_qcaf001(g_qcaf2_d[l_ac].qcaf009)
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_qcaf2_d[l_ac].qcaf009,g_errno,1)
               LET g_qcaf2_d[l_ac].qcaf009 = g_qcaf2_d_t.qcaf009
               NEXT FIELD qcaf009
            END IF]]>
  </point>
  <point name="input.a.page3.qcaf001_3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_qcaf3_d[l_ac].qcaf001) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_qcaf3_d[l_ac].qcaf001 != g_qcaf3_d_t.qcaf001))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM qcaf_t WHERE "||"qcafent = '" ||g_enterprise|| "' AND "||"qcaf001 = '"||g_qcaf3_d[l_ac].qcaf001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.qcafcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_qcaf3_d[l_ac].qcafcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_qcaf3_d[l_ac].qcafcrtdp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_qcaf3_d[l_ac].qcafcrtdp_desc
]]>
  </point>
  <point name="input.a.page3.qcafcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_qcaf3_d[l_ac].qcafcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_qcaf3_d[l_ac].qcafcrtid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_qcaf3_d[l_ac].qcafcrtid_desc
]]>
  </point>
  <point name="input.a.page3.qcafmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_qcaf3_d[l_ac].qcafmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_qcaf3_d[l_ac].qcafmodid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_qcaf3_d[l_ac].qcafmodid_desc
]]>
  </point>
  <point name="input.a.page3.qcafowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_qcaf3_d[l_ac].qcafowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_qcaf3_d[l_ac].qcafowndp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_qcaf3_d[l_ac].qcafowndp_desc
]]>
  </point>
  <point name="input.a.page3.qcafownid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_qcaf3_d[l_ac].qcafownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_qcaf3_d[l_ac].qcafownid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_qcaf3_d[l_ac].qcafownid_desc
]]>
  </point>
  <point name="input.b.page1.qcaf011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[ ]]>
  </point>
  <point name="input.body.a_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET l_key = g_qcaf_d[l_ac].qcaf001]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               LET l_key = g_qcaf_d[l_ac].qcaf001]]>
  </point>
  <point name="input.body.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF cl_null(g_qcaf_d[l_ac].qcaf001) THEN
                  NEXT FIELD qcaf001
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf002) THEN
                  LET g_qcaf_d[l_ac].qcaf002 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf003) THEN
                  LET g_qcaf_d[l_ac].qcaf003 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf004) THEN
                  LET g_qcaf_d[l_ac].qcaf004 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf010) THEN
                  LET g_qcaf_d[l_ac].qcaf010 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf011) THEN
                  LET g_qcaf_d[l_ac].qcaf011 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf012) THEN
                  LET g_qcaf_d[l_ac].qcaf012 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf013) THEN
                  LET g_qcaf_d[l_ac].qcaf013 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf014) THEN
                  LET g_qcaf_d[l_ac].qcaf014 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf015) THEN
                  LET g_qcaf_d[l_ac].qcaf015 = "0"
               END IF
               IF cl_null(g_qcaf2_d[l_ac].qcaf005) THEN
                  LET g_qcaf2_d[l_ac].qcaf005 = "0"
               END IF
               IF cl_null(g_qcaf2_d[l_ac].qcaf006) THEN
                  LET g_qcaf2_d[l_ac].qcaf006 = "0"
               END IF
               IF cl_null(g_qcaf2_d[l_ac].qcaf007) THEN
                  LET g_qcaf2_d[l_ac].qcaf007 = "0"
               END IF
               IF cl_null(g_qcaf2_d[l_ac].qcaf008) THEN
                  LET g_qcaf2_d[l_ac].qcaf008 = "0"
               END IF
               IF cl_null(g_qcaf2_d[l_ac].qcaf009) THEN
                  LET g_qcaf2_d[l_ac].qcaf009 = "0"
               END IF]]>
  </point>
  <point name="input.body.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF cl_null(g_qcaf_d[l_ac].qcaf002) THEN
                  LET g_qcaf_d[l_ac].qcaf002 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf003) THEN
                  LET g_qcaf_d[l_ac].qcaf003 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf004) THEN
                  LET g_qcaf_d[l_ac].qcaf004 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf010) THEN
                  LET g_qcaf_d[l_ac].qcaf010 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf011) THEN
                  LET g_qcaf_d[l_ac].qcaf011 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf012) THEN
                  LET g_qcaf_d[l_ac].qcaf012 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf013) THEN
                  LET g_qcaf_d[l_ac].qcaf013 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf014) THEN
                  LET g_qcaf_d[l_ac].qcaf014 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf015) THEN
                  LET g_qcaf_d[l_ac].qcaf015 = "0"
               END IF]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_qcaf3_d[l_ac].qcafownid = g_user
            LET g_qcaf3_d[l_ac].qcafowndp = g_dept
            LET g_qcaf3_d[l_ac].qcafcrtid = g_user
            LET g_qcaf3_d[l_ac].qcafcrtdp = g_dept 
            LET g_qcaf3_d[l_ac].qcafcrtdt = cl_get_current()
            LET g_qcaf3_d[l_ac].qcafmodid = g_user
            LET g_qcaf3_d[l_ac].qcafmoddt = cl_get_current()
            LET g_qcaf_d[l_ac].qcafstus = "Y"
            LET g_qcaf2_d[l_ac].qcaf005 = "0"
            LET g_qcaf2_d[l_ac].qcaf006 = "0"
            LET g_qcaf2_d[l_ac].qcaf007 = "0"
            LET g_qcaf2_d[l_ac].qcaf008 = "0"
            LET g_qcaf2_d[l_ac].qcaf009 = "0"]]>
  </point>
  <point name="input.body2.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF cl_null(g_qcaf2_d[l_ac].qcaf001) THEN
                  NEXT FIELD qcaf001
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf002) THEN
                  LET g_qcaf_d[l_ac].qcaf002 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf003) THEN
                  LET g_qcaf_d[l_ac].qcaf003 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf004) THEN
                  LET g_qcaf_d[l_ac].qcaf004 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf010) THEN
                  LET g_qcaf_d[l_ac].qcaf010 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf011) THEN
                  LET g_qcaf_d[l_ac].qcaf011 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf012) THEN
                  LET g_qcaf_d[l_ac].qcaf012 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf013) THEN
                  LET g_qcaf_d[l_ac].qcaf013 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf014) THEN
                  LET g_qcaf_d[l_ac].qcaf014 = "0"
               END IF
               IF cl_null(g_qcaf_d[l_ac].qcaf015) THEN
                  LET g_qcaf_d[l_ac].qcaf015 = "0"
               END IF
               IF cl_null(g_qcaf2_d[l_ac].qcaf005) THEN
                  LET g_qcaf2_d[l_ac].qcaf005 = "0"
               END IF
               IF cl_null(g_qcaf2_d[l_ac].qcaf006) THEN
                  LET g_qcaf2_d[l_ac].qcaf006 = "0"
               END IF
               IF cl_null(g_qcaf2_d[l_ac].qcaf007) THEN
                  LET g_qcaf2_d[l_ac].qcaf007 = "0"
               END IF
               IF cl_null(g_qcaf2_d[l_ac].qcaf008) THEN
                  LET g_qcaf2_d[l_ac].qcaf008 = "0"
               END IF
               IF cl_null(g_qcaf2_d[l_ac].qcaf009) THEN
                  LET g_qcaf2_d[l_ac].qcaf009 = "0"
               END IF]]>
  </point>
  <point name="input.body2.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF cl_null(g_qcaf2_d[l_ac].qcaf005) THEN
                  LET g_qcaf2_d[l_ac].qcaf005 = "0"
               END IF
               IF cl_null(g_qcaf2_d[l_ac].qcaf006) THEN
                  LET g_qcaf2_d[l_ac].qcaf006 = "0"
               END IF
               IF cl_null(g_qcaf2_d[l_ac].qcaf007) THEN
                  LET g_qcaf2_d[l_ac].qcaf007 = "0"
               END IF
               IF cl_null(g_qcaf2_d[l_ac].qcaf008) THEN
                  LET g_qcaf2_d[l_ac].qcaf008 = "0"
               END IF
               IF cl_null(g_qcaf2_d[l_ac].qcaf009) THEN
                  LET g_qcaf2_d[l_ac].qcaf009 = "0"
               END IF]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body2.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#            LET l_ac = 1
#            LET g_sql = "SELECT qcaf001 FROM qcaf_t",
#                        " WHERE qcafent = '",g_enterprise,"'",
#                        "  ORDER BY qcaf001"
#            PREPARE sel_qcaf001_pb FROM g_sql
#            DECLARE sel_qcaf001_curs CURSOR FOR sel_qcaf001_pb
#            FOREACH sel_qcaf001_curs INTO l_qcaf001
#               IF l_qcaf001 = l_key THEN
#                  CALL DIALOG.setCurrentRow("s_detail2",l_ac)
#                  EXIT FOREACH
#               END IF
#               LET l_ac = l_ac + 1
#            END FOREACH]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_qcaf001        LIKE qcaf_t.qcaf001
   DEFINE l_key            LIKE qcaf_t.qcaf001]]>
  </point>
  <section id="aqci006.b_fill" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aqci006_b_fill(p_wc2)              #BODY FILL UP
   {<Local define>}
   DEFINE p_wc2           STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE qcafstus,qcaf001,qcaf002,qcaf003,qcaf004,qcaf010,qcaf011,qcaf012,qcaf013, 
       qcaf014,qcaf015,'',qcaf005,qcaf006,qcaf007,qcaf008,qcaf009,'',qcafmodid,'',qcafmoddt,qcafownid, 
       '',qcafowndp,'',qcafcrtid,'',qcafcrtdp,'',qcafcrtdt FROM qcaf_t",
               "",
               " WHERE qcafent= ? AND 1=1 AND ", p_wc2
    
   LET g_sql = g_sql, " ORDER BY qcaf_t.qcaf001"
  
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
  
   PREPARE aqci006_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR aqci006_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_qcaf_d.clear()
   CALL g_qcaf2_d.clear()   
 
   CALL g_qcaf3_d.clear()   
 
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_qcaf_d[l_ac].qcafstus,g_qcaf_d[l_ac].qcaf001,g_qcaf_d[l_ac].qcaf002,g_qcaf_d[l_ac].qcaf003, 
       g_qcaf_d[l_ac].qcaf004,g_qcaf_d[l_ac].qcaf010,g_qcaf_d[l_ac].qcaf011,g_qcaf_d[l_ac].qcaf012,g_qcaf_d[l_ac].qcaf013, 
       g_qcaf_d[l_ac].qcaf014,g_qcaf_d[l_ac].qcaf015,g_qcaf2_d[l_ac].qcaf001,g_qcaf2_d[l_ac].qcaf005, 
       g_qcaf2_d[l_ac].qcaf006,g_qcaf2_d[l_ac].qcaf007,g_qcaf2_d[l_ac].qcaf008,g_qcaf2_d[l_ac].qcaf009, 
       g_qcaf3_d[l_ac].qcaf001,g_qcaf3_d[l_ac].qcafmodid,g_qcaf3_d[l_ac].qcafmodid_desc,g_qcaf3_d[l_ac].qcafmoddt, 
       g_qcaf3_d[l_ac].qcafownid,g_qcaf3_d[l_ac].qcafownid_desc,g_qcaf3_d[l_ac].qcafowndp,g_qcaf3_d[l_ac].qcafowndp_desc, 
       g_qcaf3_d[l_ac].qcafcrtid,g_qcaf3_d[l_ac].qcafcrtid_desc,g_qcaf3_d[l_ac].qcafcrtdp,g_qcaf3_d[l_ac].qcafcrtdp_desc, 
       g_qcaf3_d[l_ac].qcafcrtdt
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL aqci006_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec AND g_error_show = 1 THEN
      CALL cl_err("qcaf_t",9035,1)
   END IF 
   LET g_error_show = 0
   
 
  
   
   CALL g_qcaf_d.deleteElement(g_qcaf_d.getLength())   
   CALL g_qcaf2_d.deleteElement(g_qcaf2_d.getLength())
 
   CALL g_qcaf3_d.deleteElement(g_qcaf3_d.getLength())
 
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_qcaf_d.getLength()
      LET g_qcaf2_d[l_ac].qcaf001 = g_qcaf_d[l_ac].qcaf001 
 
      LET g_qcaf3_d[l_ac].qcaf001 = g_qcaf_d[l_ac].qcaf001 
 
 
   END FOR
   
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE aqci006_pb
   
END FUNCTION
]]>
  </section>
  <section id="aqci006.default_search" ver="1" status="" src="s">
    <![CDATA[#+ 外部參數搜尋, 施工中
PRIVATE FUNCTION aqci006_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   {</Local define>}
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " qcaf001 = '", g_argv[1], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aqci006.delete" ver="1" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aqci006_delete()
   DEFINE li_ac LIKE type_t.num5
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point 
   
   IF NOT cl_ask_delete() THEN
      LET INT_FLAG = 1 #不刪除
   ELSE
      LET INT_FLAG = 0 #要刪除
   END IF
   
   LET li_ac = ARR_CURR()
   
   CALL s_transaction_begin()  
 
   #add-point:delete段刪除前
   {<point name="delete.b_delete" mark="Y"/>}
   #end add-point 
   DELETE FROM qcaf_t 
         WHERE qcaf001 = g_qcaf_d[li_ac].qcaf001
 
   #add-point:delete段刪除中
   {<point name="delete.m_delete"/>}
   #end add-point 
   IF SQLCA.sqlcode THEN
      CALL cl_err("qcaf_t",SQLCA.sqlcode,1) 
      CALL s_transaction_end('N','0')
   ELSE
      CALL s_transaction_end('Y','0')
   END IF
   #add-point:delete段刪除後
   {<point name="delete.a_delete"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="aqci006.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aqci006_delete_b(ps_table,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "qcaf_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
   
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
      DELETE FROM qcaf_t
       WHERE qcafent = g_enterprise AND
         qcaf001 = ps_keys_bak[1]
 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="aqci006.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(版次:1) Build-000090
#+ 
#+ Filename...: aqci006
#+ Description: 管製圖管制因素表維護作業
#+ Creator....: 02482(13/07/01)
#+ Modifier...: 02482(14/01/15)
#+ Buildtype..: 應用 i02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="aqci006.detail_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION aqci006_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
   #帶出公用欄位reference值page2
   
 
   #帶出公用欄位reference值page3
   #此段落由子樣板a12產生
      #LET g_qcaf3_d[l_ac].qcafownid_desc = cl_get_username(g_qcaf3_d[l_ac].qcafownid)
      #LET g_qcaf3_d[l_ac].qcafowndp_desc = cl_get_deptname(g_qcaf3_d[l_ac].qcafowndp)
      #LET g_qcaf3_d[l_ac].qcafcrtid_desc = cl_get_username(g_qcaf3_d[l_ac].qcafcrtid)
      #LET g_qcaf3_d[l_ac].qcafcrtdp_desc = cl_get_deptname(g_qcaf3_d[l_ac].qcafcrtdp)
      #LET g_qcaf3_d[l_ac].qcafmodid_desc = cl_get_username(g_qcaf3_d[l_ac].qcafmodid)
      ##LET g_qcaf_d[l_ac].qcafcnfid_desc = cl_get_deptname(g_qcaf_d[l_ac].qcafcnfid)
      ##LET g_qcaf_d[l_ac].qcafpstid_desc = cl_get_deptname(g_qcaf_d[l_ac].qcafpstid)
      
 
 
 
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
   #add-point:show段單身reference
   {<point name="detail_show.body2.reference"/>}
   #end add-point
 
   #add-point:show段單身reference
   {<point name="detail_show.body3.reference"/>}
   #end add-point
 
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="aqci006.global" ver="1" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
{<Module define>}
 
#單身 type 宣告
PRIVATE TYPE type_g_qcaf_d RECORD
       qcafstus LIKE qcaf_t.qcafstus, 
   qcaf001 LIKE qcaf_t.qcaf001, 
   qcaf002 LIKE qcaf_t.qcaf002, 
   qcaf003 LIKE qcaf_t.qcaf003, 
   qcaf004 LIKE qcaf_t.qcaf004, 
   qcaf010 LIKE qcaf_t.qcaf010, 
   qcaf011 LIKE qcaf_t.qcaf011, 
   qcaf012 LIKE qcaf_t.qcaf012, 
   qcaf013 LIKE qcaf_t.qcaf013, 
   qcaf014 LIKE qcaf_t.qcaf014, 
   qcaf015 LIKE qcaf_t.qcaf015
       END RECORD
PRIVATE TYPE type_g_qcaf2_d RECORD
       qcaf001 LIKE qcaf_t.qcaf001, 
   qcaf005 LIKE qcaf_t.qcaf005, 
   qcaf006 LIKE qcaf_t.qcaf006, 
   qcaf007 LIKE qcaf_t.qcaf007, 
   qcaf008 LIKE qcaf_t.qcaf008, 
   qcaf009 LIKE qcaf_t.qcaf009
       END RECORD
 
PRIVATE TYPE type_g_qcaf3_d RECORD
       qcaf001 LIKE qcaf_t.qcaf001, 
   qcafmodid LIKE qcaf_t.qcafmodid, 
   qcafmodid_desc LIKE type_t.chr500, 
   qcafmoddt DATETIME YEAR TO SECOND, 
   qcafownid LIKE qcaf_t.qcafownid, 
   qcafownid_desc LIKE type_t.chr500, 
   qcafowndp LIKE qcaf_t.qcafowndp, 
   qcafowndp_desc LIKE type_t.chr500, 
   qcafcrtid LIKE qcaf_t.qcafcrtid, 
   qcafcrtid_desc LIKE type_t.chr500, 
   qcafcrtdp LIKE qcaf_t.qcafcrtdp, 
   qcafcrtdp_desc LIKE type_t.chr500, 
   qcafcrtdt DATETIME YEAR TO SECOND
       END RECORD
 
 
 
#無單身append欄位定義
 
#模組變數(Module Variables)
DEFINE g_qcaf_d          DYNAMIC ARRAY OF type_g_qcaf_d
DEFINE g_qcaf_d_t        type_g_qcaf_d
DEFINE g_qcaf2_d   DYNAMIC ARRAY OF type_g_qcaf2_d
DEFINE g_qcaf2_d_t type_g_qcaf2_d
 
DEFINE g_qcaf3_d   DYNAMIC ARRAY OF type_g_qcaf3_d
DEFINE g_qcaf3_d_t type_g_qcaf3_d
 
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
{</Module define>}
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aqci006.init" ver="1" status="" src="s">
    <![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION aqci006_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   
   
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL aqci006_default_search()
   
END FUNCTION
]]>
  </section>
  <section id="aqci006.insert" ver="1" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aqci006_insert()
   {<Local define>}
   DEFINE li_ac LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete段define
   {<point name="insert.define"/>}
   #end add-point 
   
   #輸入前動作  
   LET li_ac = l_ac 
   LET l_ac = 1   
   LET g_before_input_done = FALSE                                        
   CALL aqci006_set_entry_b("a")  
   
   CALL aqci006_set_no_entry_b("a")                                          
   LET g_before_input_done = TRUE                                            
   
   #append欄位         
      
 
      
 
      
 
 
   
   #add-point:insert段before insert
   {<point name="insert.before_insert"/>}
   #end add-point  
 
   #資料輸入
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM) 
      INPUT g_qcaf_d[1].* FROM s_detail1[1].*
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         BEFORE INPUT
         
      END INPUT
      
 
      
      BEFORE DIALOG 
   
   END DIALOG
   
   #輸入後動作
   IF INT_FLAG THEN
      CALL cl_err("",9001,0)
      LET INT_FLAG = 1
      RETURN
   END IF
   
   CALL s_transaction_begin()                    
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="aqci006.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aqci006_insert_b(ps_table,ps_keys,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "qcaf_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO qcaf_t
                  (qcafent,
                   qcaf001
                   ,qcafstus,qcaf002,qcaf003,qcaf004,qcaf010,qcaf011,qcaf012,qcaf013,qcaf014,qcaf015,qcaf005,qcaf006,qcaf007,qcaf008,qcaf009,qcafmodid,qcafmoddt,qcafownid,qcafowndp,qcafcrtid,qcafcrtdp,qcafcrtdt) 
            VALUES(g_enterprise,
                   ps_keys[1]
                   ,g_qcaf_d[l_ac].qcafstus,g_qcaf_d[l_ac].qcaf002,g_qcaf_d[l_ac].qcaf003,g_qcaf_d[l_ac].qcaf004, 
                       g_qcaf_d[l_ac].qcaf010,g_qcaf_d[l_ac].qcaf011,g_qcaf_d[l_ac].qcaf012,g_qcaf_d[l_ac].qcaf013, 
                       g_qcaf_d[l_ac].qcaf014,g_qcaf_d[l_ac].qcaf015,g_qcaf2_d[l_ac].qcaf005,g_qcaf2_d[l_ac].qcaf006, 
                       g_qcaf2_d[l_ac].qcaf007,g_qcaf2_d[l_ac].qcaf008,g_qcaf2_d[l_ac].qcaf009,g_qcaf3_d[l_ac].qcafmodid, 
                       g_qcaf3_d[l_ac].qcafmoddt,g_qcaf3_d[l_ac].qcafownid,g_qcaf3_d[l_ac].qcafowndp, 
                       g_qcaf3_d[l_ac].qcafcrtid,g_qcaf3_d[l_ac].qcafcrtdp,g_qcaf3_d[l_ac].qcafcrtdt) 

      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("qcaf_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="aqci006.link_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動單身idx
PRIVATE FUNCTION aqci006_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define
   {<point name="link_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
 
   END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="aqci006.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aqci006_lock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aqci006_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "qcaf_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aqci006_bcl USING g_enterprise,
                                       g_qcaf_d[g_detail_idx].qcaf001
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("aqci006_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aqci006.main" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aqc","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   #LET g_forupd_sql = ""
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   #LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   #DECLARE aqci006_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_aqci006 WITH FORM cl_ap_formpath("aqc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aqci006_init()   
 
      #進入選單 Menu (="N")
      CALL aqci006_ui_dialog() 
	  
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aqci006
      
   END IF 
   
   #CLOSE aqci006_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="aqci006.modify" ver="1" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aqci006_modify()
   {<Local define>}
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   {</Local define>}
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
 
   #add-point:modify段define_sql
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT qcafstus,qcaf001,qcaf002,qcaf003,qcaf004,qcaf010,qcaf011,qcaf012,qcaf013, 
       qcaf014,qcaf015,'',qcaf005,qcaf006,qcaf007,qcaf008,qcaf009,'',qcafmodid,'',qcafmoddt,qcafownid, 
       '',qcafowndp,'',qcafcrtid,'',qcafcrtdp,'',qcafcrtdt FROM qcaf_t WHERE qcafent=? AND qcaf001=?  
       FOR UPDATE"
   #add-point:modify段define_sql
   {<point name="modify.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE aqci006_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
   
 
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_qcaf_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_qcaf_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aqci006_b_fill(g_wc2)
            LET g_detail_cnt = g_qcaf_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_qcaf_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_qcaf_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_qcaf_d[l_ac].qcaf001 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_qcaf_d_t.* = g_qcaf_d[l_ac].*  #BACKUP
               IF NOT aqci006_lock_b("qcaf_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aqci006_bcl INTO g_qcaf_d[l_ac].qcafstus,g_qcaf_d[l_ac].qcaf001,g_qcaf_d[l_ac].qcaf002, 
                      g_qcaf_d[l_ac].qcaf003,g_qcaf_d[l_ac].qcaf004,g_qcaf_d[l_ac].qcaf010,g_qcaf_d[l_ac].qcaf011, 
                      g_qcaf_d[l_ac].qcaf012,g_qcaf_d[l_ac].qcaf013,g_qcaf_d[l_ac].qcaf014,g_qcaf_d[l_ac].qcaf015, 
                      g_qcaf2_d[l_ac].qcaf001,g_qcaf2_d[l_ac].qcaf005,g_qcaf2_d[l_ac].qcaf006,g_qcaf2_d[l_ac].qcaf007, 
                      g_qcaf2_d[l_ac].qcaf008,g_qcaf2_d[l_ac].qcaf009,g_qcaf3_d[l_ac].qcaf001,g_qcaf3_d[l_ac].qcafmodid, 
                      g_qcaf3_d[l_ac].qcafmodid_desc,g_qcaf3_d[l_ac].qcafmoddt,g_qcaf3_d[l_ac].qcafownid, 
                      g_qcaf3_d[l_ac].qcafownid_desc,g_qcaf3_d[l_ac].qcafowndp,g_qcaf3_d[l_ac].qcafowndp_desc, 
                      g_qcaf3_d[l_ac].qcafcrtid,g_qcaf3_d[l_ac].qcafcrtid_desc,g_qcaf3_d[l_ac].qcafcrtdp, 
                      g_qcaf3_d[l_ac].qcafcrtdp_desc,g_qcaf3_d[l_ac].qcafcrtdt
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_qcaf_d_t.qcaf001,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL aqci006_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_qcaf_d_t.* TO NULL
            INITIALIZE g_qcaf_d[l_ac].* TO NULL 
            
            LET g_qcaf_d_t.* = g_qcaf_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aqci006_set_entry_b("a")
            CALL aqci006_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_qcaf_d[li_reproduce_target].* = g_qcaf_d[li_reproduce].*
               LET g_qcaf2_d[li_reproduce_target].* = g_qcaf2_d[li_reproduce].*
               LET g_qcaf3_d[li_reproduce_target].* = g_qcaf3_d[li_reproduce].*
 
               LET g_qcaf_d[g_qcaf_d.getLength()].qcaf001 = NULL
 
            END IF
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_qcaf3_d[l_ac].qcafownid = g_user
      LET g_qcaf3_d[l_ac].qcafowndp = g_dept
      LET g_qcaf3_d[l_ac].qcafcrtid = g_user
      LET g_qcaf3_d[l_ac].qcafcrtdp = g_dept 
      LET g_qcaf3_d[l_ac].qcafcrtdt = cl_get_current()
      LET g_qcaf3_d[l_ac].qcafmodid = ""
      LET g_qcaf3_d[l_ac].qcafmoddt = ""
      #LET g_qcaf_d[l_ac].qcafstus = ""
 
 
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM qcaf_t 
             WHERE qcafent = g_enterprise AND qcaf001 = g_qcaf_d[l_ac].qcaf001
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_qcaf_d[g_detail_idx].qcaf001
               CALL aqci006_insert_b('qcaf_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_qcaf_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("qcaf_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aqci006_b_fill(g_wc2)
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (qcaf001 = '", g_qcaf_d[l_ac].qcaf001, "' "
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_qcaf_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_qcaf_d.deleteElement(l_ac)
               NEXT FIELD qcaf001
            END IF
            IF g_qcaf_d[l_ac].qcaf001 IS NOT NULL
 
               THEN     
			   
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM qcaf_t
                WHERE qcafent = g_enterprise AND 
                      qcaf001 = g_qcaf_d_t.qcaf001
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("qcaf_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aqci006_bcl
               LET l_count = g_qcaf_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_qcaf_d[g_detail_idx].qcaf001
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aqci006_delete_b('qcaf_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<qcafstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qcafstus
            #add-point:BEFORE FIELD qcafstus
            {<point name="input.b.page1.qcafstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcafstus
            
            #add-point:AFTER FIELD qcafstus
            {<point name="input.a.page1.qcafstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE qcafstus
            #add-point:ON CHANGE qcafstus
            {<point name="input.g.page1.qcafstus" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<qcafstus>>----
         #Ctrlp:input.c.page1.qcafstus
         ON ACTION controlp INFIELD qcafstus
            #add-point:ON ACTION controlp INFIELD qcafstus
            {<point name="input.c.page1.qcafstus" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_qcaf_d[l_ac].* = g_qcaf_d_t.*
               CLOSE aqci006_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_qcaf_d[l_ac].qcaf001,-263,1)
               LET g_qcaf_d[l_ac].* = g_qcaf_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               LET g_qcaf3_d[l_ac].qcafmodid = g_user 
LET g_qcaf3_d[l_ac].qcafmoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE qcaf_t SET (qcafstus,qcaf001,qcaf002,qcaf003,qcaf004,qcaf010,qcaf011,qcaf012,qcaf013, 
                   qcaf014,qcaf015,qcaf005,qcaf006,qcaf007,qcaf008,qcaf009,qcafmodid,qcafmoddt,qcafownid, 
                   qcafowndp,qcafcrtid,qcafcrtdp,qcafcrtdt) = (g_qcaf_d[l_ac].qcafstus,g_qcaf_d[l_ac].qcaf001, 
                   g_qcaf_d[l_ac].qcaf002,g_qcaf_d[l_ac].qcaf003,g_qcaf_d[l_ac].qcaf004,g_qcaf_d[l_ac].qcaf010, 
                   g_qcaf_d[l_ac].qcaf011,g_qcaf_d[l_ac].qcaf012,g_qcaf_d[l_ac].qcaf013,g_qcaf_d[l_ac].qcaf014, 
                   g_qcaf_d[l_ac].qcaf015,g_qcaf2_d[l_ac].qcaf005,g_qcaf2_d[l_ac].qcaf006,g_qcaf2_d[l_ac].qcaf007, 
                   g_qcaf2_d[l_ac].qcaf008,g_qcaf2_d[l_ac].qcaf009,g_qcaf3_d[l_ac].qcafmodid,g_qcaf3_d[l_ac].qcafmoddt, 
                   g_qcaf3_d[l_ac].qcafownid,g_qcaf3_d[l_ac].qcafowndp,g_qcaf3_d[l_ac].qcafcrtid,g_qcaf3_d[l_ac].qcafcrtdp, 
                   g_qcaf3_d[l_ac].qcafcrtdt)
                WHERE qcafent = g_enterprise AND
                  qcaf001 = g_qcaf_d_t.qcaf001 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("qcaf_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("qcaf_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_qcaf_d[g_detail_idx].qcaf001
               LET gs_keys_bak[1] = g_qcaf_d_t.qcaf001
               CALL aqci006_update_b('qcaf_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL aqci006_unlock_b("qcaf_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_qcaf_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_qcaf_d.getLength()+1
            
      END INPUT
      
 
      
      DISPLAY ARRAY g_qcaf2_d TO s_detail2.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL aqci006_b_fill(g_wc2)
            CALL FGL_SET_ARR_CURR(g_detail_idx)
      
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            LET g_temp_idx = l_ac
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL cl_show_fld_cont() 
            
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
            
      END DISPLAY
 
      DISPLAY ARRAY g_qcaf3_d TO s_detail3.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL aqci006_b_fill(g_wc2)
            CALL FGL_SET_ARR_CURR(g_detail_idx)
      
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail3")
            LET l_ac = g_detail_idx
            LET g_temp_idx = l_ac
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL cl_show_fld_cont() 
            
         #add-point:page3自定義行為
         {<point name="input.body3.action"/>}
         #end add-point
            
      END DISPLAY
 
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD qcafstus
            WHEN "s_detail2"
               NEXT FIELD qcaf001_2
 
            WHEN "s_detail3"
               NEXT FIELD qcaf001_3
 
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE aqci006_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
  </section>
  <section id="aqci006.modify_detail_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION aqci006_modify_detail_chk(ps_record)
   {<Local define>}
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   {</Local define>}
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "qcafstus"
      WHEN "s_detail2"
         LET ls_return = "qcaf001_2"
 
      WHEN "s_detail3"
         LET ls_return = "qcaf001_3"
 
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="aqci006.other_dialog" ver="1" status="" src="s">
    <![CDATA[ 
]]>
  </section>
  <section id="aqci006.other_function" ver="1" status="" src="s">
    <![CDATA[   
{<point name="other.function"/>}
]]>
  </section>
  <section id="aqci006.query" ver="1" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aqci006_query()
   {<Local define>}
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   {</Local define>}
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_qcaf_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON qcafstus,qcaf001,qcaf002,qcaf003,qcaf004,qcaf010,qcaf011,qcaf012,qcaf013,qcaf014, 
          qcaf015,qcaf005,qcaf006,qcaf007,qcaf008,qcaf009,qcafmodid,qcafmoddt,qcafownid,qcafowndp,qcafcrtid, 
          qcafcrtdp,qcafcrtdt 
 
         FROM s_detail1[1].qcafstus,s_detail1[1].qcaf001,s_detail1[1].qcaf002,s_detail1[1].qcaf003,s_detail1[1].qcaf004, 
             s_detail1[1].qcaf010,s_detail1[1].qcaf011,s_detail1[1].qcaf012,s_detail1[1].qcaf013,s_detail1[1].qcaf014, 
             s_detail1[1].qcaf015,s_detail2[1].qcaf005,s_detail2[1].qcaf006,s_detail2[1].qcaf007,s_detail2[1].qcaf008, 
             s_detail2[1].qcaf009,s_detail3[1].qcafmodid,s_detail3[1].qcafmoddt,s_detail3[1].qcafownid, 
             s_detail3[1].qcafowndp,s_detail3[1].qcafcrtid,s_detail3[1].qcafcrtdp,s_detail3[1].qcafcrtdt  

      
         #此段落由子樣板a11產生
         ##----<<qcafownid>>----
         #ON ACTION controlp INFIELD qcafownid
         #   CALL q_common('','qcafownid',TRUE,FALSE,g_qcaf3_d[1].qcafownid) RETURNING ls_return
         #   DISPLAY ls_return TO qcafownid
         #   NEXT FIELD qcafownid  
         #
         ##----<<qcafowndp>>----
         #ON ACTION controlp INFIELD qcafowndp
         #   CALL q_common('','qcafowndp',TRUE,FALSE,g_qcaf3_d[1].qcafowndp) RETURNING ls_return
         #   DISPLAY ls_return TO qcafowndp
         #   NEXT FIELD qcafowndp
         #
         ##----<<qcafcrtid>>----
         #ON ACTION controlp INFIELD qcafcrtid
         #   CALL q_common('','qcafcrtid',TRUE,FALSE,g_qcaf3_d[1].qcafcrtid) RETURNING ls_return
         #   DISPLAY ls_return TO qcafcrtid
         #   NEXT FIELD qcafcrtid
         #
         ##----<<qcafcrtdp>>----
         #ON ACTION controlp INFIELD qcafcrtdp
         #   CALL q_common('','qcafcrtdp',TRUE,FALSE,g_qcaf3_d[1].qcafcrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO qcafcrtdp
         #   NEXT FIELD qcafcrtdp
         #
         ##----<<qcafmodid>>----
         #ON ACTION controlp INFIELD qcafmodid
         #   CALL q_common('','qcafmodid',TRUE,FALSE,g_qcaf3_d[1].qcafmodid) RETURNING ls_return
         #   DISPLAY ls_return TO qcafmodid
         #   NEXT FIELD qcafmodid
         #
         ##----<<qcafcnfid>>----
         ##ON ACTION controlp INFIELD qcafcnfid
         ##   CALL q_common('','qcafcnfid',TRUE,FALSE,g_qcaf_d[1].qcafcnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO qcafcnfid
         ##   NEXT FIELD qcafcnfid
         #
         ##----<<qcafpstid>>----
         ##ON ACTION controlp INFIELD qcafpstid
         ##   CALL q_common('','qcafpstid',TRUE,FALSE,g_qcaf_d[1].qcafpstid) RETURNING ls_return
         ##   DISPLAY ls_return TO qcafpstid
         ##   NEXT FIELD qcafpstid
         
         ##----<<qcafcrtdt>>----
         AFTER FIELD qcafcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<qcafmoddt>>----
         AFTER FIELD qcafmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<qcafcnfdt>>----
         #AFTER FIELD qcafcnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<qcafpstdt>>----
         #AFTER FIELD qcafpstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
      
         #---------------------<  Detail: page1  >---------------------
         #----<<qcafstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qcafstus
            #add-point:BEFORE FIELD qcafstus
            {<point name="query.b.page1.qcafstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcafstus
            
            #add-point:AFTER FIELD qcafstus
            {<point name="query.a.page1.qcafstus" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.qcafstus
         ON ACTION controlp INFIELD qcafstus
            #add-point:ON ACTION controlp INFIELD qcafstus
            {<point name="query.c.page1.qcafstus" />}
            #END add-point
 
  
         
         #---------------------<  Detail: page2  >---------------------
  
 
         #---------------------<  Detail: page3  >---------------------
         #----<<qcafmodid>>----
         #Ctrlp:construct.c.page3.qcafmodid
         ON ACTION controlp INFIELD qcafmodid
            #add-point:ON ACTION controlp INFIELD qcafmodid
            {<point name="construct.c.page3.qcafmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD qcafmodid
            #add-point:BEFORE FIELD qcafmodid
            {<point name="query.b.page3.qcafmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcafmodid
            
            #add-point:AFTER FIELD qcafmodid
            {<point name="query.a.page3.qcafmodid" />}
            #END add-point
            
 
         #----<<qcafmoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qcafmoddt
            #add-point:BEFORE FIELD qcafmoddt
            {<point name="query.b.page3.qcafmoddt" />}
            #END add-point
 
         #----<<qcafownid>>----
         #Ctrlp:construct.c.page3.qcafownid
         ON ACTION controlp INFIELD qcafownid
            #add-point:ON ACTION controlp INFIELD qcafownid
            {<point name="construct.c.page3.qcafownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD qcafownid
            #add-point:BEFORE FIELD qcafownid
            {<point name="query.b.page3.qcafownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcafownid
            
            #add-point:AFTER FIELD qcafownid
            {<point name="query.a.page3.qcafownid" />}
            #END add-point
            
 
         #----<<qcafowndp>>----
         #Ctrlp:construct.c.page3.qcafowndp
         ON ACTION controlp INFIELD qcafowndp
            #add-point:ON ACTION controlp INFIELD qcafowndp
            {<point name="construct.c.page3.qcafowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD qcafowndp
            #add-point:BEFORE FIELD qcafowndp
            {<point name="query.b.page3.qcafowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcafowndp
            
            #add-point:AFTER FIELD qcafowndp
            {<point name="query.a.page3.qcafowndp" />}
            #END add-point
            
 
         #----<<qcafcrtid>>----
         #Ctrlp:construct.c.page3.qcafcrtid
         ON ACTION controlp INFIELD qcafcrtid
            #add-point:ON ACTION controlp INFIELD qcafcrtid
            {<point name="construct.c.page3.qcafcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD qcafcrtid
            #add-point:BEFORE FIELD qcafcrtid
            {<point name="query.b.page3.qcafcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcafcrtid
            
            #add-point:AFTER FIELD qcafcrtid
            {<point name="query.a.page3.qcafcrtid" />}
            #END add-point
            
 
         #----<<qcafcrtdp>>----
         #Ctrlp:construct.c.page3.qcafcrtdp
         ON ACTION controlp INFIELD qcafcrtdp
            #add-point:ON ACTION controlp INFIELD qcafcrtdp
            {<point name="construct.c.page3.qcafcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD qcafcrtdp
            #add-point:BEFORE FIELD qcafcrtdp
            {<point name="query.b.page3.qcafcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcafcrtdp
            
            #add-point:AFTER FIELD qcafcrtdp
            {<point name="query.a.page3.qcafcrtdp" />}
            #END add-point
            
 
         #----<<qcafcrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qcafcrtdt
            #add-point:BEFORE FIELD qcafcrtdt
            {<point name="query.b.page3.qcafcrtdt" />}
            #END add-point
 
  
 
 
      
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_init()
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
         ON ACTION qbe_select
#saki            CALL cl_qbe_select()
      
         ON ACTION qbe_save
#saki            CALL cl_qbe_save()
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
   
   #LET g_wc2 = g_wc2 CLIPPED, cl_get_extra_cond("", "")
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF
    
   LET g_error_show = 1
   CALL aqci006_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
]]>
  </section>
  <section id="aqci006.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aqci006_set_entry_b(p_cmd)                                                  
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1         
   {</Local define>}
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    
]]>
  </section>
  <section id="aqci006.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aqci006_set_no_entry_b(p_cmd)                                               
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1           
   {</Local define>}
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point  
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  
]]>
  </section>
  <section id="aqci006.state_change" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="aqci006.ui_dialog" ver="1" status="" src="s">
    <![CDATA[#+ 功能選單 
PRIVATE FUNCTION aqci006_ui_dialog()
   {<Local define>}
   DEFINE li_idx   LIKE type_t.num5
   {</Local define>}
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL aqci006_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_qcaf_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
      
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
         DISPLAY ARRAY g_qcaf2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
         DISPLAY ARRAY g_qcaf3_d TO s_detail3.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail3")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               
            #自訂ACTION(detail_show,page_3)
            
               
         END DISPLAY
 
 
      
         #add-point:ui_dialog段more_displayarray
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
 
 
 
         ON ACTION modify
 
            LET g_aw = ''
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL aqci006_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify_detail
 
            LET g_aw = g_curr_diag.getCurrentItem()
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN 
               CALL aqci006_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
 
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL aqci006_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
            
         
      
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
  </section>
  <section id="aqci006.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aqci006_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE aqci006_bcl
   #END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="aqci006.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aqci006_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #判斷是否是同一群組的table
   LET ls_group = "qcaf_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "qcaf_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE qcaf_t 
         SET (qcaf001
              ,qcafstus,qcaf002,qcaf003,qcaf004,qcaf010,qcaf011,qcaf012,qcaf013,qcaf014,qcaf015,qcaf005,qcaf006,qcaf007,qcaf008,qcaf009,qcafmodid,qcafmoddt,qcafownid,qcafowndp,qcafcrtid,qcafcrtdp,qcafcrtdt) 
              = 
             (ps_keys[1]
              ,g_qcaf_d[l_ac].qcafstus,g_qcaf_d[l_ac].qcaf002,g_qcaf_d[l_ac].qcaf003,g_qcaf_d[l_ac].qcaf004, 
                  g_qcaf_d[l_ac].qcaf010,g_qcaf_d[l_ac].qcaf011,g_qcaf_d[l_ac].qcaf012,g_qcaf_d[l_ac].qcaf013, 
                  g_qcaf_d[l_ac].qcaf014,g_qcaf_d[l_ac].qcaf015,g_qcaf2_d[l_ac].qcaf005,g_qcaf2_d[l_ac].qcaf006, 
                  g_qcaf2_d[l_ac].qcaf007,g_qcaf2_d[l_ac].qcaf008,g_qcaf2_d[l_ac].qcaf009,g_qcaf3_d[l_ac].qcafmodid, 
                  g_qcaf3_d[l_ac].qcafmoddt,g_qcaf3_d[l_ac].qcafownid,g_qcaf3_d[l_ac].qcafowndp,g_qcaf3_d[l_ac].qcafcrtid, 
                  g_qcaf3_d[l_ac].qcafcrtdp,g_qcaf3_d[l_ac].qcafcrtdt) 
         WHERE qcaf001 = ps_keys_bak[1]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("qcaf_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("qcaf_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
</add_points>
