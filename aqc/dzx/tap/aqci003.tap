<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aqci003" std_prog="aqci003" erpver="1.0" module="AQC" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="construct.c.page2.qcaccrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcaccrtdp  #顯示到畫面上

            NEXT FIELD qcaccrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.qcaccrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcaccrtid  #顯示到畫面上

            NEXT FIELD qcaccrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.qcacmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcacmodid  #顯示到畫面上

            NEXT FIELD qcacmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.qcacowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcacowndp  #顯示到畫面上

            NEXT FIELD qcacowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.qcacownid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcacownid  #顯示到畫面上

            NEXT FIELD qcacownid                     #返回原欄位

]]>
  </point>
  <point name="detail_show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_qcac2_d[l_ac].qcacmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_qcac2_d[l_ac].qcacmodid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_qcac2_d[l_ac].qcacmodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_qcac2_d[l_ac].qcacownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_qcac2_d[l_ac].qcacownid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_qcac2_d[l_ac].qcacownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_qcac2_d[l_ac].qcacowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_qcac2_d[l_ac].qcacowndp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_qcac2_d[l_ac].qcacowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_qcac2_d[l_ac].qcaccrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_qcac2_d[l_ac].qcaccrtid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_qcac2_d[l_ac].qcaccrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_qcac2_d[l_ac].qcaccrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_qcac2_d[l_ac].qcaccrtdp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_qcac2_d[l_ac].qcaccrtdp_desc
]]>
  </point>
  <point name="function.aqci003_chk_key" order="" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[# key重複性檢查
PRIVATE FUNCTION aqci003_chk_key(p_cmd,p_flag)
DEFINE p_cmd  LIKE type_t.chr1
DEFINE p_flag LIKE type_t.chr10 
 
   IF NOT cl_null(g_qcac_d[l_ac].qcac001) AND NOT cl_null(g_qcac_d[l_ac].qcac002) AND NOT cl_null(g_qcac_d[l_ac].qcac003) THEN 
      IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_qcac_d[l_ac].qcac001 != g_qcac_d_t.qcac001 OR g_qcac_d[l_ac].qcac002 != g_qcac_d_t.qcac002 OR g_qcac_d[l_ac].qcac003 != g_qcac_d_t.qcac003))) THEN 
         IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM qcac_t WHERE "||"qcacent = '" ||g_enterprise|| "' AND "||"qcac001 = '"||g_qcac_d[l_ac].qcac001 ||"' AND "|| "qcac002 = '"||g_qcac_d[l_ac].qcac002 ||"' AND "|| "qcac003 = '"||g_qcac_d[l_ac].qcac003 ||"'",'std-00004',0) THEN 
            CASE p_flag
               WHEN '001'
                  LET g_qcac_d[l_ac].qcac001 = g_qcac_d_t.qcac001
               WHEN '002'
                  LET g_qcac_d[l_ac].qcac002 = g_qcac_d_t.qcac002 
               WHEN '003'
                  LET g_qcac_d[l_ac].qcac003 = g_qcac_d_t.qcac003                                                                             
            END CASE
            RETURN FALSE
         END IF
      END IF
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc('qcac001_2','5051') ]]>
  </point>
  <point name="input.a.page1.qcac001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF NOT aqci003_chk_key(l_cmd,'001') THEN 
               NEXT FIELD CURRENT
            END IF


]]>
  </point>
  <point name="input.a.page1.qcac002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF NOT aqci003_chk_key(l_cmd,'002')  THEN 
               NEXT FIELD CURRENT
            END IF
            IF NOT cl_null(g_qcac_d[l_ac].qcac002) THEN 
               IF g_qcac_d[l_ac].qcac002 < 0 THEN 
                  CALL cl_err(g_qcac_d[l_ac].qcac002,'aqc-00004',0)
                  LET g_qcac_d[l_ac].qcac002 = g_qcac_d_t.qcac002 
                  NEXT FIELD qcac002
               END IF      
            END IF 

]]>
  </point>
  <point name="input.a.page1.qcac003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF NOT aqci003_chk_key(l_cmd,'003')  THEN 
               NEXT FIELD CURRENT
            END IF


]]>
  </point>
  <point name="input.a.page1.qcac005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_qcac_d[l_ac].qcac005) THEN 
               IF g_qcac_d[l_ac].qcac005 < 0 THEN 
                  CALL cl_err(g_qcac_d[l_ac].qcac005,'aqc-00004',0)
                  LET g_qcac_d[l_ac].qcac005 = g_qcac_d_t.qcac005 
                  NEXT FIELD qcac005
               END IF      
            END IF ]]>
  </point>
  <point name="input.a.page1.qcac006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_qcac_d[l_ac].qcac006) THEN 
               IF g_qcac_d[l_ac].qcac006 < 0 THEN 
                  CALL cl_err(g_qcac_d[l_ac].qcac006,'aqc-00004',0)
                  LET g_qcac_d[l_ac].qcac006 = g_qcac_d_t.qcac006 
                  NEXT FIELD qcac006
               END IF
            END IF]]>
  </point>
  <point name="input.a.page2.qcac001_2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_qcac2_d[l_ac].qcac001) AND NOT cl_null(g_qcac2_d[l_ac].qcac002) AND NOT cl_null(g_qcac2_d[l_ac].qcac003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_qcac2_d[l_ac].qcac001 != g_qcac2_d_t.qcac001 OR g_qcac2_d[l_ac].qcac002 != g_qcac2_d_t.qcac002 OR g_qcac2_d[l_ac].qcac003 != g_qcac2_d_t.qcac003))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM qcac_t WHERE "||"qcacent = '" ||g_enterprise|| "' AND "||"qcac001 = '"||g_qcac2_d[l_ac].qcac001 ||"' AND "|| "qcac002 = '"||g_qcac2_d[l_ac].qcac002 ||"' AND "|| "qcac003 = '"||g_qcac2_d[l_ac].qcac003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.qcac002_2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_qcac2_d[l_ac].qcac001) AND NOT cl_null(g_qcac2_d[l_ac].qcac002) AND NOT cl_null(g_qcac2_d[l_ac].qcac003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_qcac2_d[l_ac].qcac001 != g_qcac2_d_t.qcac001 OR g_qcac2_d[l_ac].qcac002 != g_qcac2_d_t.qcac002 OR g_qcac2_d[l_ac].qcac003 != g_qcac2_d_t.qcac003))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM qcac_t WHERE "||"qcacent = '" ||g_enterprise|| "' AND "||"qcac001 = '"||g_qcac2_d[l_ac].qcac001 ||"' AND "|| "qcac002 = '"||g_qcac2_d[l_ac].qcac002 ||"' AND "|| "qcac003 = '"||g_qcac2_d[l_ac].qcac003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.qcac003_2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_qcac2_d[l_ac].qcac001) AND NOT cl_null(g_qcac2_d[l_ac].qcac002) AND NOT cl_null(g_qcac2_d[l_ac].qcac003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_qcac2_d[l_ac].qcac001 != g_qcac2_d_t.qcac001 OR g_qcac2_d[l_ac].qcac002 != g_qcac2_d_t.qcac002 OR g_qcac2_d[l_ac].qcac003 != g_qcac2_d_t.qcac003))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM qcac_t WHERE "||"qcacent = '" ||g_enterprise|| "' AND "||"qcac001 = '"||g_qcac2_d[l_ac].qcac001 ||"' AND "|| "qcac002 = '"||g_qcac2_d[l_ac].qcac002 ||"' AND "|| "qcac003 = '"||g_qcac2_d[l_ac].qcac003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.qcaccrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page2.qcaccrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page2.qcacmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page2.qcacowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page2.qcacownid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.b.page1.qcac006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_qcac_d[l_ac].qcacstus = "Y"]]>
  </point>
  <section id="aqci003.b_fill" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aqci003_b_fill(p_wc2)              #BODY FILL UP
   {<Local define>}
   DEFINE p_wc2           STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE qcacstus,qcac001,qcac002,qcac003,qcac004,qcac005,qcac006,'','','',qcacmodid, 
       '',qcacmoddt,qcacownid,'',qcacowndp,'',qcaccrtid,'',qcaccrtdp,'',qcaccrtdt FROM qcac_t",
               "",
               " WHERE qcacent= ? AND 1=1 AND ", p_wc2
    
   LET g_sql = g_sql, " ORDER BY qcac_t.qcac001,qcac_t.qcac002,qcac_t.qcac003"
  
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
  
   PREPARE aqci003_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR aqci003_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_qcac_d.clear()
   CALL g_qcac2_d.clear()   
 
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_qcac_d[l_ac].qcacstus,g_qcac_d[l_ac].qcac001,g_qcac_d[l_ac].qcac002,g_qcac_d[l_ac].qcac003, 
       g_qcac_d[l_ac].qcac004,g_qcac_d[l_ac].qcac005,g_qcac_d[l_ac].qcac006,g_qcac2_d[l_ac].qcac001, 
       g_qcac2_d[l_ac].qcac002,g_qcac2_d[l_ac].qcac003,g_qcac2_d[l_ac].qcacmodid,g_qcac2_d[l_ac].qcacmodid_desc, 
       g_qcac2_d[l_ac].qcacmoddt,g_qcac2_d[l_ac].qcacownid,g_qcac2_d[l_ac].qcacownid_desc,g_qcac2_d[l_ac].qcacowndp, 
       g_qcac2_d[l_ac].qcacowndp_desc,g_qcac2_d[l_ac].qcaccrtid,g_qcac2_d[l_ac].qcaccrtid_desc,g_qcac2_d[l_ac].qcaccrtdp, 
       g_qcac2_d[l_ac].qcaccrtdp_desc,g_qcac2_d[l_ac].qcaccrtdt
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL aqci003_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec AND g_error_show = 1 THEN
      CALL cl_err("qcac_t",9035,1)
   END IF 
   LET g_error_show = 0
   
 
  
   
   CALL g_qcac_d.deleteElement(g_qcac_d.getLength())   
   CALL g_qcac2_d.deleteElement(g_qcac2_d.getLength())
 
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_qcac_d.getLength()
      LET g_qcac2_d[l_ac].qcac001 = g_qcac_d[l_ac].qcac001 
      LET g_qcac2_d[l_ac].qcac002 = g_qcac_d[l_ac].qcac002 
 
      LET g_qcac2_d[l_ac].qcac003 = g_qcac_d[l_ac].qcac003 
 
 
 
   END FOR
   
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE aqci003_pb
   
END FUNCTION
]]>
  </section>
  <section id="aqci003.default_search" ver="1" status="" src="s">
    <![CDATA[#+ 外部參數搜尋, 施工中
PRIVATE FUNCTION aqci003_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   {</Local define>}
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " qcac001 = '", g_argv[1], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " qcac002 = ", g_argv[02], " AND "
   END IF
 
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " qcac003 = ", g_argv[03], " AND "
   END IF
 
 
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aqci003.delete" ver="1" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aqci003_delete()
   DEFINE li_ac LIKE type_t.num5
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point 
   
   IF NOT cl_ask_delete() THEN
      LET INT_FLAG = 1 #不刪除
   ELSE
      LET INT_FLAG = 0 #要刪除
   END IF
   
   LET li_ac = ARR_CURR()
   
   CALL s_transaction_begin()  
 
   #add-point:delete段刪除前
   {<point name="delete.b_delete" mark="Y"/>}
   #end add-point 
   DELETE FROM qcac_t 
         WHERE qcac001 = g_qcac_d[li_ac].qcac001
           AND qcac002 = g_qcac_d[li_ac].qcac002
 
           AND qcac003 = g_qcac_d[li_ac].qcac003
 
 
   #add-point:delete段刪除中
   {<point name="delete.m_delete"/>}
   #end add-point 
   IF SQLCA.sqlcode THEN
      CALL cl_err("qcac_t",SQLCA.sqlcode,1) 
      CALL s_transaction_end('N','0')
   ELSE
      CALL s_transaction_end('Y','0')
   END IF
   #add-point:delete段刪除後
   {<point name="delete.a_delete"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="aqci003.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aqci003_delete_b(ps_table,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "qcac_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
   
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
      DELETE FROM qcac_t
       WHERE qcacent = g_enterprise AND
         qcac001 = ps_keys_bak[1] AND qcac002 = ps_keys_bak[2] AND qcac003 = ps_keys_bak[3]
 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="aqci003.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(版次:1) Build-000096
#+ 
#+ Filename...: aqci003
#+ Description: 單次抽樣計畫維護作業
#+ Creator....: 02295(13/07/15)
#+ Modifier...: 02295(13/07/15)
#+ Buildtype..: 應用 i02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="aqci003.detail_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION aqci003_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
   #帶出公用欄位reference值page2
   #此段落由子樣板a12產生
      #LET g_qcac2_d[l_ac].qcacownid_desc = cl_get_username(g_qcac2_d[l_ac].qcacownid)
      #LET g_qcac2_d[l_ac].qcacowndp_desc = cl_get_deptname(g_qcac2_d[l_ac].qcacowndp)
      #LET g_qcac2_d[l_ac].qcaccrtid_desc = cl_get_username(g_qcac2_d[l_ac].qcaccrtid)
      #LET g_qcac2_d[l_ac].qcaccrtdp_desc = cl_get_deptname(g_qcac2_d[l_ac].qcaccrtdp)
      #LET g_qcac2_d[l_ac].qcacmodid_desc = cl_get_username(g_qcac2_d[l_ac].qcacmodid)
      ##LET g_qcac_d[l_ac].qcaccnfid_desc = cl_get_deptname(g_qcac_d[l_ac].qcaccnfid)
      ##LET g_qcac_d[l_ac].qcacpstid_desc = cl_get_deptname(g_qcac_d[l_ac].qcacpstid)
      
 
 
 
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
   #add-point:show段單身reference
   {<point name="detail_show.body2.reference"/>}
   #end add-point
 
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="aqci003.global" ver="1" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
{<Module define>}
 
#單身 type 宣告
PRIVATE TYPE type_g_qcac_d RECORD
       qcacstus LIKE qcac_t.qcacstus, 
   qcac001 LIKE qcac_t.qcac001, 
   qcac002 LIKE qcac_t.qcac002, 
   qcac003 LIKE qcac_t.qcac003, 
   qcac004 LIKE qcac_t.qcac004, 
   qcac005 LIKE qcac_t.qcac005, 
   qcac006 LIKE qcac_t.qcac006
       END RECORD
PRIVATE TYPE type_g_qcac2_d RECORD
       qcac001 LIKE qcac_t.qcac001, 
   qcac002 LIKE qcac_t.qcac002, 
   qcac003 LIKE qcac_t.qcac003, 
   qcacmodid LIKE qcac_t.qcacmodid, 
   qcacmodid_desc LIKE type_t.chr500, 
   qcacmoddt DATETIME YEAR TO SECOND, 
   qcacownid LIKE qcac_t.qcacownid, 
   qcacownid_desc LIKE type_t.chr500, 
   qcacowndp LIKE qcac_t.qcacowndp, 
   qcacowndp_desc LIKE type_t.chr500, 
   qcaccrtid LIKE qcac_t.qcaccrtid, 
   qcaccrtid_desc LIKE type_t.chr500, 
   qcaccrtdp LIKE qcac_t.qcaccrtdp, 
   qcaccrtdp_desc LIKE type_t.chr500, 
   qcaccrtdt DATETIME YEAR TO SECOND
       END RECORD
 
 
 
#無單身append欄位定義
 
#模組變數(Module Variables)
DEFINE g_qcac_d          DYNAMIC ARRAY OF type_g_qcac_d
DEFINE g_qcac_d_t        type_g_qcac_d
DEFINE g_qcac2_d   DYNAMIC ARRAY OF type_g_qcac2_d
DEFINE g_qcac2_d_t type_g_qcac2_d
 
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
{</Module define>}
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aqci003.init" ver="1" status="" src="s">
    <![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION aqci003_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   
      CALL cl_set_combo_scc('qcac001','5051') 
 
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL aqci003_default_search()
   
END FUNCTION
]]>
  </section>
  <section id="aqci003.insert" ver="1" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aqci003_insert()
   {<Local define>}
   DEFINE li_ac LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete段define
   {<point name="insert.define"/>}
   #end add-point 
   
   #輸入前動作  
   LET li_ac = l_ac 
   LET l_ac = 1   
   LET g_before_input_done = FALSE                                        
   CALL aqci003_set_entry_b("a")  
   
   CALL aqci003_set_no_entry_b("a")                                          
   LET g_before_input_done = TRUE                                            
   
   #append欄位         
      
 
      
 
 
   
   #add-point:insert段before insert
   {<point name="insert.before_insert"/>}
   #end add-point  
 
   #資料輸入
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM) 
      INPUT g_qcac_d[1].* FROM s_detail1[1].*
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         BEFORE INPUT
         
      END INPUT
      
 
      
      BEFORE DIALOG 
   
   END DIALOG
   
   #輸入後動作
   IF INT_FLAG THEN
      CALL cl_err("",9001,0)
      LET INT_FLAG = 1
      RETURN
   END IF
   
   CALL s_transaction_begin()                    
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="aqci003.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aqci003_insert_b(ps_table,ps_keys,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "qcac_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO qcac_t
                  (qcacent,
                   qcac001,qcac002,qcac003
                   ,qcacstus,qcac004,qcac005,qcac006,qcacmodid,qcacmoddt,qcacownid,qcacowndp,qcaccrtid,qcaccrtdp,qcaccrtdt) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_qcac_d[l_ac].qcacstus,g_qcac_d[l_ac].qcac004,g_qcac_d[l_ac].qcac005,g_qcac_d[l_ac].qcac006, 
                       g_qcac2_d[l_ac].qcacmodid,g_qcac2_d[l_ac].qcacmoddt,g_qcac2_d[l_ac].qcacownid, 
                       g_qcac2_d[l_ac].qcacowndp,g_qcac2_d[l_ac].qcaccrtid,g_qcac2_d[l_ac].qcaccrtdp, 
                       g_qcac2_d[l_ac].qcaccrtdt)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("qcac_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="aqci003.link_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動單身idx
PRIVATE FUNCTION aqci003_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define
   {<point name="link_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
 
   END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="aqci003.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aqci003_lock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aqci003_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "qcac_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aqci003_bcl USING g_enterprise,
                                       g_qcac_d[g_detail_idx].qcac001,g_qcac_d[g_detail_idx].qcac002, 
                                           g_qcac_d[g_detail_idx].qcac003
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("aqci003_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aqci003.main" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aqc","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   #LET g_forupd_sql = ""
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   #LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   #DECLARE aqci003_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_aqci003 WITH FORM cl_ap_formpath("aqc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aqci003_init()   
 
      #進入選單 Menu (="N")
      CALL aqci003_ui_dialog() 
	  
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aqci003
      
   END IF 
   
   #CLOSE aqci003_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="aqci003.modify" ver="1" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aqci003_modify()
   {<Local define>}
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   {</Local define>}
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
 
   #add-point:modify段define_sql
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT qcacstus,qcac001,qcac002,qcac003,qcac004,qcac005,qcac006,'','','',qcacmodid, 
       '',qcacmoddt,qcacownid,'',qcacowndp,'',qcaccrtid,'',qcaccrtdp,'',qcaccrtdt FROM qcac_t WHERE  
       qcacent=? AND qcac001=? AND qcac002=? AND qcac003=? FOR UPDATE"
   #add-point:modify段define_sql
   {<point name="modify.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE aqci003_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
   
 
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_qcac_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_qcac_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aqci003_b_fill(g_wc2)
            LET g_detail_cnt = g_qcac_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_qcac_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_qcac_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_qcac_d[l_ac].qcac001 IS NOT NULL
               AND g_qcac_d[l_ac].qcac002 IS NOT NULL
 
               AND g_qcac_d[l_ac].qcac003 IS NOT NULL
 
 
            THEN
               LET l_cmd='u'
               LET g_qcac_d_t.* = g_qcac_d[l_ac].*  #BACKUP
               IF NOT aqci003_lock_b("qcac_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aqci003_bcl INTO g_qcac_d[l_ac].qcacstus,g_qcac_d[l_ac].qcac001,g_qcac_d[l_ac].qcac002, 
                      g_qcac_d[l_ac].qcac003,g_qcac_d[l_ac].qcac004,g_qcac_d[l_ac].qcac005,g_qcac_d[l_ac].qcac006, 
                      g_qcac2_d[l_ac].qcac001,g_qcac2_d[l_ac].qcac002,g_qcac2_d[l_ac].qcac003,g_qcac2_d[l_ac].qcacmodid, 
                      g_qcac2_d[l_ac].qcacmodid_desc,g_qcac2_d[l_ac].qcacmoddt,g_qcac2_d[l_ac].qcacownid, 
                      g_qcac2_d[l_ac].qcacownid_desc,g_qcac2_d[l_ac].qcacowndp,g_qcac2_d[l_ac].qcacowndp_desc, 
                      g_qcac2_d[l_ac].qcaccrtid,g_qcac2_d[l_ac].qcaccrtid_desc,g_qcac2_d[l_ac].qcaccrtdp, 
                      g_qcac2_d[l_ac].qcaccrtdp_desc,g_qcac2_d[l_ac].qcaccrtdt
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_qcac_d_t.qcac001,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL aqci003_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_qcac_d_t.* TO NULL
            INITIALIZE g_qcac_d[l_ac].* TO NULL 
            
            LET g_qcac_d_t.* = g_qcac_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aqci003_set_entry_b("a")
            CALL aqci003_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_qcac_d[li_reproduce_target].* = g_qcac_d[li_reproduce].*
               LET g_qcac2_d[li_reproduce_target].* = g_qcac2_d[li_reproduce].*
 
               LET g_qcac_d[g_qcac_d.getLength()].qcac001 = NULL
               LET g_qcac_d[g_qcac_d.getLength()].qcac002 = NULL
 
               LET g_qcac_d[g_qcac_d.getLength()].qcac003 = NULL
 
 
            END IF
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_qcac2_d[l_ac].qcacownid = g_user
      LET g_qcac2_d[l_ac].qcacowndp = g_dept
      LET g_qcac2_d[l_ac].qcaccrtid = g_user
      LET g_qcac2_d[l_ac].qcaccrtdp = g_dept 
      LET g_qcac2_d[l_ac].qcaccrtdt = cl_get_current()
      LET g_qcac2_d[l_ac].qcacmodid = ""
      LET g_qcac2_d[l_ac].qcacmoddt = ""
      #LET g_qcac_d[l_ac].qcacstus = ""
 
 
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM qcac_t 
             WHERE qcacent = g_enterprise AND qcac001 = g_qcac_d[l_ac].qcac001
                                       AND qcac002 = g_qcac_d[l_ac].qcac002
 
                                       AND qcac003 = g_qcac_d[l_ac].qcac003
 
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_qcac_d[g_detail_idx].qcac001
               LET gs_keys[2] = g_qcac_d[g_detail_idx].qcac002
               LET gs_keys[3] = g_qcac_d[g_detail_idx].qcac003
               CALL aqci003_insert_b('qcac_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_qcac_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("qcac_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aqci003_b_fill(g_wc2)
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (qcac001 = '", g_qcac_d[l_ac].qcac001, "' "
                                  ," AND qcac002 = '", g_qcac_d[l_ac].qcac002, "' "
 
                                  ," AND qcac003 = '", g_qcac_d[l_ac].qcac003, "' "
 
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_qcac_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_qcac_d.deleteElement(l_ac)
               NEXT FIELD qcac001
            END IF
            IF g_qcac_d[l_ac].qcac001 IS NOT NULL
               AND g_qcac_d_t.qcac002 IS NOT NULL
 
               AND g_qcac_d_t.qcac003 IS NOT NULL
 
 
               THEN     
			   
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM qcac_t
                WHERE qcacent = g_enterprise AND 
                      qcac001 = g_qcac_d_t.qcac001
                      AND qcac002 = g_qcac_d_t.qcac002
 
                      AND qcac003 = g_qcac_d_t.qcac003
 
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("qcac_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aqci003_bcl
               LET l_count = g_qcac_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_qcac_d[g_detail_idx].qcac001
               LET gs_keys[2] = g_qcac_d[g_detail_idx].qcac002
               LET gs_keys[3] = g_qcac_d[g_detail_idx].qcac003
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aqci003_delete_b('qcac_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<qcacstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qcacstus
            #add-point:BEFORE FIELD qcacstus
            {<point name="input.b.page1.qcacstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcacstus
            
            #add-point:AFTER FIELD qcacstus
            {<point name="input.a.page1.qcacstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE qcacstus
            #add-point:ON CHANGE qcacstus
            {<point name="input.g.page1.qcacstus" />}
            #END add-point
 
         #----<<qcac001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qcac001
            #add-point:BEFORE FIELD qcac001
            {<point name="input.b.page1.qcac001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcac001
            
            #add-point:AFTER FIELD qcac001
            {<point name="input.a.page1.qcac001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE qcac001
            #add-point:ON CHANGE qcac001
            {<point name="input.g.page1.qcac001" />}
            #END add-point
 
         #----<<qcac002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qcac002
            #add-point:BEFORE FIELD qcac002
            {<point name="input.b.page1.qcac002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcac002
            
            #add-point:AFTER FIELD qcac002
            {<point name="input.a.page1.qcac002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE qcac002
            #add-point:ON CHANGE qcac002
            {<point name="input.g.page1.qcac002" />}
            #END add-point
 
         #----<<qcac003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qcac003
            #add-point:BEFORE FIELD qcac003
            {<point name="input.b.page1.qcac003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcac003
            
            #add-point:AFTER FIELD qcac003
            {<point name="input.a.page1.qcac003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE qcac003
            #add-point:ON CHANGE qcac003
            {<point name="input.g.page1.qcac003" />}
            #END add-point
 
         #----<<qcac004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qcac004
            #add-point:BEFORE FIELD qcac004
            {<point name="input.b.page1.qcac004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcac004
            
            #add-point:AFTER FIELD qcac004
            {<point name="input.a.page1.qcac004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE qcac004
            #add-point:ON CHANGE qcac004
            {<point name="input.g.page1.qcac004" />}
            #END add-point
 
         #----<<qcac005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qcac005
            #add-point:BEFORE FIELD qcac005
            {<point name="input.b.page1.qcac005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcac005
            
            #add-point:AFTER FIELD qcac005
            {<point name="input.a.page1.qcac005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE qcac005
            #add-point:ON CHANGE qcac005
            {<point name="input.g.page1.qcac005" />}
            #END add-point
 
         #----<<qcac006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qcac006
            #add-point:BEFORE FIELD qcac006
            {<point name="input.b.page1.qcac006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcac006
            
            #add-point:AFTER FIELD qcac006
            {<point name="input.a.page1.qcac006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE qcac006
            #add-point:ON CHANGE qcac006
            {<point name="input.g.page1.qcac006" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<qcacstus>>----
         #Ctrlp:input.c.page1.qcacstus
         ON ACTION controlp INFIELD qcacstus
            #add-point:ON ACTION controlp INFIELD qcacstus
            {<point name="input.c.page1.qcacstus" />}
            #END add-point
 
         #----<<qcac001>>----
         #Ctrlp:input.c.page1.qcac001
         ON ACTION controlp INFIELD qcac001
            #add-point:ON ACTION controlp INFIELD qcac001
            {<point name="input.c.page1.qcac001" />}
            #END add-point
 
         #----<<qcac002>>----
         #Ctrlp:input.c.page1.qcac002
         ON ACTION controlp INFIELD qcac002
            #add-point:ON ACTION controlp INFIELD qcac002
            {<point name="input.c.page1.qcac002" />}
            #END add-point
 
         #----<<qcac003>>----
         #Ctrlp:input.c.page1.qcac003
         ON ACTION controlp INFIELD qcac003
            #add-point:ON ACTION controlp INFIELD qcac003
            {<point name="input.c.page1.qcac003" />}
            #END add-point
 
         #----<<qcac004>>----
         #Ctrlp:input.c.page1.qcac004
         ON ACTION controlp INFIELD qcac004
            #add-point:ON ACTION controlp INFIELD qcac004
            {<point name="input.c.page1.qcac004" />}
            #END add-point
 
         #----<<qcac005>>----
         #Ctrlp:input.c.page1.qcac005
         ON ACTION controlp INFIELD qcac005
            #add-point:ON ACTION controlp INFIELD qcac005
            {<point name="input.c.page1.qcac005" />}
            #END add-point
 
         #----<<qcac006>>----
         #Ctrlp:input.c.page1.qcac006
         ON ACTION controlp INFIELD qcac006
            #add-point:ON ACTION controlp INFIELD qcac006
            {<point name="input.c.page1.qcac006" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_qcac_d[l_ac].* = g_qcac_d_t.*
               CLOSE aqci003_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_qcac_d[l_ac].qcac001,-263,1)
               LET g_qcac_d[l_ac].* = g_qcac_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               LET g_qcac2_d[l_ac].qcacmodid = g_user 
LET g_qcac2_d[l_ac].qcacmoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE qcac_t SET (qcacstus,qcac001,qcac002,qcac003,qcac004,qcac005,qcac006,qcacmodid, 
                   qcacmoddt,qcacownid,qcacowndp,qcaccrtid,qcaccrtdp,qcaccrtdt) = (g_qcac_d[l_ac].qcacstus, 
                   g_qcac_d[l_ac].qcac001,g_qcac_d[l_ac].qcac002,g_qcac_d[l_ac].qcac003,g_qcac_d[l_ac].qcac004, 
                   g_qcac_d[l_ac].qcac005,g_qcac_d[l_ac].qcac006,g_qcac2_d[l_ac].qcacmodid,g_qcac2_d[l_ac].qcacmoddt, 
                   g_qcac2_d[l_ac].qcacownid,g_qcac2_d[l_ac].qcacowndp,g_qcac2_d[l_ac].qcaccrtid,g_qcac2_d[l_ac].qcaccrtdp, 
                   g_qcac2_d[l_ac].qcaccrtdt)
                WHERE qcacent = g_enterprise AND
                  qcac001 = g_qcac_d_t.qcac001 #項次   
                  AND qcac002 = g_qcac_d_t.qcac002  
 
                  AND qcac003 = g_qcac_d_t.qcac003  
 
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("qcac_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("qcac_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_qcac_d[g_detail_idx].qcac001
               LET gs_keys_bak[1] = g_qcac_d_t.qcac001
               LET gs_keys[2] = g_qcac_d[g_detail_idx].qcac002
               LET gs_keys_bak[2] = g_qcac_d_t.qcac002
               LET gs_keys[3] = g_qcac_d[g_detail_idx].qcac003
               LET gs_keys_bak[3] = g_qcac_d_t.qcac003
               CALL aqci003_update_b('qcac_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL aqci003_unlock_b("qcac_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_qcac_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_qcac_d.getLength()+1
            
      END INPUT
      
 
      
      DISPLAY ARRAY g_qcac2_d TO s_detail2.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL aqci003_b_fill(g_wc2)
            CALL FGL_SET_ARR_CURR(g_detail_idx)
      
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            LET g_temp_idx = l_ac
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL cl_show_fld_cont() 
            
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
            
      END DISPLAY
 
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD qcacstus
            WHEN "s_detail2"
               NEXT FIELD qcac001_2
 
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE aqci003_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
  </section>
  <section id="aqci003.modify_detail_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION aqci003_modify_detail_chk(ps_record)
   {<Local define>}
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   {</Local define>}
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "qcacstus"
      WHEN "s_detail2"
         LET ls_return = "qcac001_2"
 
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="aqci003.other_dialog" ver="1" status="" src="s">
    <![CDATA[ 
]]>
  </section>
  <section id="aqci003.other_function" ver="1" status="" src="s">
    <![CDATA[   
{<point name="other.function"/>}
]]>
  </section>
  <section id="aqci003.query" ver="1" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aqci003_query()
   {<Local define>}
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   {</Local define>}
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_qcac_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON qcacstus,qcac001,qcac002,qcac003,qcac004,qcac005,qcac006,qcacmodid,qcacmoddt, 
          qcacownid,qcacowndp,qcaccrtid,qcaccrtdp,qcaccrtdt 
 
         FROM s_detail1[1].qcacstus,s_detail1[1].qcac001,s_detail1[1].qcac002,s_detail1[1].qcac003,s_detail1[1].qcac004, 
             s_detail1[1].qcac005,s_detail1[1].qcac006,s_detail2[1].qcacmodid,s_detail2[1].qcacmoddt, 
             s_detail2[1].qcacownid,s_detail2[1].qcacowndp,s_detail2[1].qcaccrtid,s_detail2[1].qcaccrtdp, 
             s_detail2[1].qcaccrtdt 
      
         #此段落由子樣板a11產生
         ##----<<qcacownid>>----
         #ON ACTION controlp INFIELD qcacownid
         #   CALL q_common('','qcacownid',TRUE,FALSE,g_qcac2_d[1].qcacownid) RETURNING ls_return
         #   DISPLAY ls_return TO qcacownid
         #   NEXT FIELD qcacownid  
         #
         ##----<<qcacowndp>>----
         #ON ACTION controlp INFIELD qcacowndp
         #   CALL q_common('','qcacowndp',TRUE,FALSE,g_qcac2_d[1].qcacowndp) RETURNING ls_return
         #   DISPLAY ls_return TO qcacowndp
         #   NEXT FIELD qcacowndp
         #
         ##----<<qcaccrtid>>----
         #ON ACTION controlp INFIELD qcaccrtid
         #   CALL q_common('','qcaccrtid',TRUE,FALSE,g_qcac2_d[1].qcaccrtid) RETURNING ls_return
         #   DISPLAY ls_return TO qcaccrtid
         #   NEXT FIELD qcaccrtid
         #
         ##----<<qcaccrtdp>>----
         #ON ACTION controlp INFIELD qcaccrtdp
         #   CALL q_common('','qcaccrtdp',TRUE,FALSE,g_qcac2_d[1].qcaccrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO qcaccrtdp
         #   NEXT FIELD qcaccrtdp
         #
         ##----<<qcacmodid>>----
         #ON ACTION controlp INFIELD qcacmodid
         #   CALL q_common('','qcacmodid',TRUE,FALSE,g_qcac2_d[1].qcacmodid) RETURNING ls_return
         #   DISPLAY ls_return TO qcacmodid
         #   NEXT FIELD qcacmodid
         #
         ##----<<qcaccnfid>>----
         ##ON ACTION controlp INFIELD qcaccnfid
         ##   CALL q_common('','qcaccnfid',TRUE,FALSE,g_qcac_d[1].qcaccnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO qcaccnfid
         ##   NEXT FIELD qcaccnfid
         #
         ##----<<qcacpstid>>----
         ##ON ACTION controlp INFIELD qcacpstid
         ##   CALL q_common('','qcacpstid',TRUE,FALSE,g_qcac_d[1].qcacpstid) RETURNING ls_return
         ##   DISPLAY ls_return TO qcacpstid
         ##   NEXT FIELD qcacpstid
         
         ##----<<qcaccrtdt>>----
         AFTER FIELD qcaccrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<qcacmoddt>>----
         AFTER FIELD qcacmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<qcaccnfdt>>----
         #AFTER FIELD qcaccnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<qcacpstdt>>----
         #AFTER FIELD qcacpstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
      
         #---------------------<  Detail: page1  >---------------------
         #----<<qcacstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qcacstus
            #add-point:BEFORE FIELD qcacstus
            {<point name="query.b.page1.qcacstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcacstus
            
            #add-point:AFTER FIELD qcacstus
            {<point name="query.a.page1.qcacstus" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.qcacstus
         ON ACTION controlp INFIELD qcacstus
            #add-point:ON ACTION controlp INFIELD qcacstus
            {<point name="query.c.page1.qcacstus" />}
            #END add-point
 
         #----<<qcac001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qcac001
            #add-point:BEFORE FIELD qcac001
            {<point name="query.b.page1.qcac001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcac001
            
            #add-point:AFTER FIELD qcac001
            {<point name="query.a.page1.qcac001" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.qcac001
         ON ACTION controlp INFIELD qcac001
            #add-point:ON ACTION controlp INFIELD qcac001
            {<point name="query.c.page1.qcac001" />}
            #END add-point
 
         #----<<qcac002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qcac002
            #add-point:BEFORE FIELD qcac002
            {<point name="query.b.page1.qcac002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcac002
            
            #add-point:AFTER FIELD qcac002
            {<point name="query.a.page1.qcac002" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.qcac002
         ON ACTION controlp INFIELD qcac002
            #add-point:ON ACTION controlp INFIELD qcac002
            {<point name="query.c.page1.qcac002" />}
            #END add-point
 
         #----<<qcac003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qcac003
            #add-point:BEFORE FIELD qcac003
            {<point name="query.b.page1.qcac003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcac003
            
            #add-point:AFTER FIELD qcac003
            {<point name="query.a.page1.qcac003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.qcac003
         ON ACTION controlp INFIELD qcac003
            #add-point:ON ACTION controlp INFIELD qcac003
            {<point name="query.c.page1.qcac003" />}
            #END add-point
 
         #----<<qcac004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qcac004
            #add-point:BEFORE FIELD qcac004
            {<point name="query.b.page1.qcac004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcac004
            
            #add-point:AFTER FIELD qcac004
            {<point name="query.a.page1.qcac004" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.qcac004
         ON ACTION controlp INFIELD qcac004
            #add-point:ON ACTION controlp INFIELD qcac004
            {<point name="query.c.page1.qcac004" />}
            #END add-point
 
         #----<<qcac005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qcac005
            #add-point:BEFORE FIELD qcac005
            {<point name="query.b.page1.qcac005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcac005
            
            #add-point:AFTER FIELD qcac005
            {<point name="query.a.page1.qcac005" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.qcac005
         ON ACTION controlp INFIELD qcac005
            #add-point:ON ACTION controlp INFIELD qcac005
            {<point name="query.c.page1.qcac005" />}
            #END add-point
 
         #----<<qcac006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qcac006
            #add-point:BEFORE FIELD qcac006
            {<point name="query.b.page1.qcac006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcac006
            
            #add-point:AFTER FIELD qcac006
            {<point name="query.a.page1.qcac006" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.qcac006
         ON ACTION controlp INFIELD qcac006
            #add-point:ON ACTION controlp INFIELD qcac006
            {<point name="query.c.page1.qcac006" />}
            #END add-point
 
  
         
         #---------------------<  Detail: page2  >---------------------
  
 
 
      
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_init()
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
         ON ACTION qbe_select
#saki            CALL cl_qbe_select()
      
         ON ACTION qbe_save
#saki            CALL cl_qbe_save()
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
   
   #LET g_wc2 = g_wc2 CLIPPED, cl_get_extra_cond("", "")
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF
    
   LET g_error_show = 1
   CALL aqci003_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
]]>
  </section>
  <section id="aqci003.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aqci003_set_entry_b(p_cmd)                                                  
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1         
   {</Local define>}
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    
]]>
  </section>
  <section id="aqci003.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aqci003_set_no_entry_b(p_cmd)                                               
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1           
   {</Local define>}
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point  
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  
]]>
  </section>
  <section id="aqci003.state_change" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="aqci003.ui_dialog" ver="1" status="" src="s">
    <![CDATA[#+ 功能選單 
PRIVATE FUNCTION aqci003_ui_dialog()
   {<Local define>}
   DEFINE li_idx   LIKE type_t.num5
   {</Local define>}
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL aqci003_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_qcac_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
      
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
         DISPLAY ARRAY g_qcac2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
 
      
         #add-point:ui_dialog段more_displayarray
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
 
 
 
         ON ACTION modify
 
            LET g_aw = ''
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL aqci003_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify_detail
 
            LET g_aw = g_curr_diag.getCurrentItem()
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN 
               CALL aqci003_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
 
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL aqci003_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
            
         
      
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
  </section>
  <section id="aqci003.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aqci003_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE aqci003_bcl
   #END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="aqci003.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aqci003_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #判斷是否是同一群組的table
   LET ls_group = "qcac_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "qcac_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE qcac_t 
         SET (qcac001,qcac002,qcac003
              ,qcacstus,qcac004,qcac005,qcac006,qcacmodid,qcacmoddt,qcacownid,qcacowndp,qcaccrtid,qcaccrtdp,qcaccrtdt) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_qcac_d[l_ac].qcacstus,g_qcac_d[l_ac].qcac004,g_qcac_d[l_ac].qcac005,g_qcac_d[l_ac].qcac006, 
                  g_qcac2_d[l_ac].qcacmodid,g_qcac2_d[l_ac].qcacmoddt,g_qcac2_d[l_ac].qcacownid,g_qcac2_d[l_ac].qcacowndp, 
                  g_qcac2_d[l_ac].qcaccrtid,g_qcac2_d[l_ac].qcaccrtdp,g_qcac2_d[l_ac].qcaccrtdt) 
         WHERE qcac001 = ps_keys_bak[1] AND qcac002 = ps_keys_bak[2] AND qcac003 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("qcac_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("qcac_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
</add_points>
