#該程式已解開Section, 不再透過樣板產出!
{<section id="adet402.description" >}
#應用 a00 樣板自動產生(Version:2)
#+ Version..: T100-ERP-1.01.00(SD版次:12,PR版次:12) Build-000967
#+ 
#+ Filename...: adet402
#+ Description: 門店收銀繳款單維護作業
#+ Creator....: 03247(2014-01-22 19:09:33)
#+ Modifier...: 07142(2016-06-06 18:45:09) -SD/PR-

{</section>}

{<section id="adet402.global" >}
#應用 t01 樣板自動產生(Version:62)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" />}
#end add-point
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_deag_m        RECORD
       deagsite LIKE deag_t.deagsite, 
   deagsite_desc LIKE type_t.chr80, 
   deagdocdt LIKE deag_t.deagdocdt, 
   deagdocno LIKE deag_t.deagdocno, 
   deag002 LIKE deag_t.deag002, 
   deag002_desc LIKE type_t.chr80, 
   deag003 LIKE deag_t.deag003, 
   deag003_desc LIKE type_t.chr80, 
   deag004 LIKE deag_t.deag004, 
   deag004_desc LIKE type_t.chr80, 
   deag001 LIKE deag_t.deag001, 
   total LIKE type_t.num20_6, 
   deag005 LIKE deag_t.deag005, 
   deag006 LIKE deag_t.deag006, 
   deagunit LIKE deag_t.deagunit, 
   deagstus LIKE deag_t.deagstus, 
   deagownid LIKE deag_t.deagownid, 
   deagownid_desc LIKE type_t.chr80, 
   deagowndp LIKE deag_t.deagowndp, 
   deagowndp_desc LIKE type_t.chr80, 
   deagcrtid LIKE deag_t.deagcrtid, 
   deagcrtid_desc LIKE type_t.chr80, 
   deagcrtdp LIKE deag_t.deagcrtdp, 
   deagcrtdp_desc LIKE type_t.chr80, 
   deagcrtdt LIKE deag_t.deagcrtdt, 
   deagmodid LIKE deag_t.deagmodid, 
   deagmodid_desc LIKE type_t.chr80, 
   deagcnfdt LIKE deag_t.deagcnfdt, 
   deagmoddt LIKE deag_t.deagmoddt, 
   deagcnfid LIKE deag_t.deagcnfid, 
   deagcnfid_desc LIKE type_t.chr80, 
   deaj001 LIKE deaj_t.deaj001, 
   deaj002 LIKE deaj_t.deaj002, 
   deaj003 LIKE deaj_t.deaj003, 
   deaj004 LIKE deaj_t.deaj004, 
   deaj005 LIKE deaj_t.deaj005, 
   deaj006 LIKE deaj_t.deaj006, 
   deaj007 LIKE deaj_t.deaj007, 
   deaj008 LIKE deaj_t.deaj008, 
   deaj009 LIKE deaj_t.deaj009
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_deah_d        RECORD
       deahseq LIKE deah_t.deahseq, 
   deah000 LIKE deah_t.deah000, 
   deah001 LIKE deah_t.deah001, 
   deah001_desc LIKE type_t.chr500, 
   deah002 LIKE deah_t.deah002, 
   deah002_desc LIKE type_t.chr500, 
   deah003 LIKE deah_t.deah003, 
   deah003_desc LIKE type_t.chr500, 
   deah009 LIKE deah_t.deah009, 
   deah005 LIKE deah_t.deah005, 
   deah005_desc LIKE type_t.chr500, 
   deah004 LIKE deah_t.deah004, 
   deah007 LIKE deah_t.deah007, 
   deah006 LIKE deah_t.deah006, 
   deah008 LIKE deah_t.deah008, 
   deah013 LIKE deah_t.deah013
       END RECORD
PRIVATE TYPE type_g_deah2_d RECORD
       deai001 LIKE deai_t.deai001, 
   deai002 LIKE deai_t.deai002, 
   deai003 LIKE deai_t.deai003, 
   deai004 LIKE deai_t.deai004, 
   deai005 LIKE deai_t.deai005
       END RECORD
PRIVATE TYPE type_g_deah5_d RECORD
       deafsite LIKE deaf_t.deafsite, 
   deafstatu LIKE deaf_t.deafstatu, 
   deafdocdt LIKE deaf_t.deafdocdt, 
   deaf001 LIKE deaf_t.deaf001, 
   deaf002 LIKE deaf_t.deaf002, 
   deaf003 LIKE deaf_t.deaf003, 
   deaf004 LIKE deaf_t.deaf004, 
   deaf012 LIKE deaf_t.deaf012, 
   deaf005 LIKE deaf_t.deaf005, 
   deaf005_desc LIKE type_t.chr500, 
   deaf013 LIKE deaf_t.deaf013, 
   deaf014 LIKE deaf_t.deaf014, 
   deaf006 LIKE deaf_t.deaf006, 
   deaf027 LIKE deaf_t.deaf027, 
   deaf019 LIKE deaf_t.deaf019, 
   deaf007 LIKE deaf_t.deaf007, 
   deaf020 LIKE deaf_t.deaf020, 
   deaf028 LIKE deaf_t.deaf028, 
   deaf023 LIKE deaf_t.deaf023, 
   deaf015 LIKE deaf_t.deaf015, 
   deaf008 LIKE deaf_t.deaf008, 
   deaf009 LIKE deaf_t.deaf009, 
   deaf016 LIKE deaf_t.deaf016, 
   deaf017 LIKE deaf_t.deaf017, 
   deaf017_desc LIKE type_t.chr500, 
   deaf018 LIKE deaf_t.deaf018, 
   deaf010 LIKE deaf_t.deaf010, 
   deaf011 LIKE deaf_t.deaf011, 
   deaf021 LIKE deaf_t.deaf021, 
   deaf022 LIKE deaf_t.deaf022, 
   deaf024 LIKE deaf_t.deaf024, 
   deaf025 LIKE deaf_t.deaf025, 
   deaf026 LIKE deaf_t.deaf026
       END RECORD
PRIVATE TYPE type_g_deah7_d RECORD
       rtlfdocno LIKE rtlf_t.rtlfdocno, 
   rtlfseq LIKE rtlf_t.rtlfseq, 
   rtlf103 LIKE rtlf_t.rtlf103, 
   rtlfseq1 LIKE rtlf_t.rtlfseq1, 
   rtlf001 LIKE rtlf_t.rtlf001, 
   rtlf002 LIKE rtlf_t.rtlf002, 
   rtlf002_desc LIKE type_t.chr6, 
   rtlf003 LIKE rtlf_t.rtlf003, 
   rtlf004 LIKE rtlf_t.rtlf004, 
   rtlf036 LIKE rtlf_t.rtlf036, 
   rtlf005 LIKE rtlf_t.rtlf005, 
   rtlf007 LIKE rtlf_t.rtlf007, 
   rtlf006 LIKE rtlf_t.rtlf006, 
   rtlf008 LIKE rtlf_t.rtlf008, 
   rtlf009 LIKE rtlf_t.rtlf009, 
   rtlf010 LIKE rtlf_t.rtlf010, 
   rtlf013 LIKE rtlf_t.rtlf013, 
   rtlf013_desc LIKE type_t.chr500, 
   rtlf014 LIKE rtlf_t.rtlf014, 
   rtlf015 LIKE rtlf_t.rtlf015, 
   rtlf016 LIKE rtlf_t.rtlf016, 
   rtlf017 LIKE rtlf_t.rtlf017, 
   rtlf018 LIKE rtlf_t.rtlf018, 
   rtlf020 LIKE rtlf_t.rtlf020, 
   rtlf021 LIKE rtlf_t.rtlf021, 
   rtlf022 LIKE rtlf_t.rtlf022, 
   rtlf024 LIKE rtlf_t.rtlf024, 
   rtlf025 LIKE rtlf_t.rtlf025, 
   rtlf026 LIKE rtlf_t.rtlf026, 
   rtlf037 LIKE rtlf_t.rtlf037
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_deagsite LIKE deag_t.deagsite,
   b_deagsite_desc LIKE type_t.chr80,
      b_deagdocno LIKE deag_t.deagdocno,
      b_deagdocdt LIKE deag_t.deagdocdt,
      b_deag001 LIKE deag_t.deag001,
      b_deag002 LIKE deag_t.deag002,
      b_deag003 LIKE deag_t.deag003,
      b_deag004 LIKE deag_t.deag004
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>} 
#end add-point
       
#模組變數(Module Variables)
DEFINE g_deag_m          type_g_deag_m
DEFINE g_deag_m_t        type_g_deag_m
DEFINE g_deag_m_o        type_g_deag_m
DEFINE g_deag_m_mask_o   type_g_deag_m #轉換遮罩前資料
DEFINE g_deag_m_mask_n   type_g_deag_m #轉換遮罩後資料
 
   DEFINE g_deagdocno_t LIKE deag_t.deagdocno
 
 
DEFINE g_deah_d          DYNAMIC ARRAY OF type_g_deah_d
DEFINE g_deah_d_t        type_g_deah_d
DEFINE g_deah_d_o        type_g_deah_d
DEFINE g_deah_d_mask_o   DYNAMIC ARRAY OF type_g_deah_d #轉換遮罩前資料
DEFINE g_deah_d_mask_n   DYNAMIC ARRAY OF type_g_deah_d #轉換遮罩後資料
DEFINE g_deah2_d          DYNAMIC ARRAY OF type_g_deah2_d
DEFINE g_deah2_d_t        type_g_deah2_d
DEFINE g_deah2_d_o        type_g_deah2_d
DEFINE g_deah2_d_mask_o   DYNAMIC ARRAY OF type_g_deah2_d #轉換遮罩前資料
DEFINE g_deah2_d_mask_n   DYNAMIC ARRAY OF type_g_deah2_d #轉換遮罩後資料
DEFINE g_deah5_d          DYNAMIC ARRAY OF type_g_deah5_d
DEFINE g_deah5_d_t        type_g_deah5_d
DEFINE g_deah5_d_o        type_g_deah5_d
DEFINE g_deah5_d_mask_o   DYNAMIC ARRAY OF type_g_deah5_d #轉換遮罩前資料
DEFINE g_deah5_d_mask_n   DYNAMIC ARRAY OF type_g_deah5_d #轉換遮罩後資料
DEFINE g_deah7_d          DYNAMIC ARRAY OF type_g_deah7_d
DEFINE g_deah7_d_t        type_g_deah7_d
DEFINE g_deah7_d_o        type_g_deah7_d
DEFINE g_deah7_d_mask_o   DYNAMIC ARRAY OF type_g_deah7_d #轉換遮罩前資料
DEFINE g_deah7_d_mask_n   DYNAMIC ARRAY OF type_g_deah7_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="adet402.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ade","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT deagsite,'',deagdocdt,deagdocno,deag002,'',deag003,'',deag004,'',deag001, 
       '',deag005,deag006,deagunit,deagstus,deagownid,'',deagowndp,'',deagcrtid,'',deagcrtdp,'',deagcrtdt, 
       deagmodid,'',deagcnfdt,deagmoddt,deagcnfid,'','','','','','','','','',''", 
                      " FROM deag_t",
                      " WHERE deagent= ? AND deagdocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adet402_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.deagsite,t0.deagdocdt,t0.deagdocno,t0.deag002,t0.deag003,t0.deag004, 
       t0.deag001,t0.deag005,t0.deag006,t0.deagunit,t0.deagstus,t0.deagownid,t0.deagowndp,t0.deagcrtid, 
       t0.deagcrtdp,t0.deagcrtdt,t0.deagmodid,t0.deagcnfdt,t0.deagmoddt,t0.deagcnfid,t1.ooefl003 ,t2.oogd002 , 
       t3.pcaal003 ,t4.pcab003 ,t5.ooag011 ,t6.ooefl003 ,t7.ooag011 ,t8.ooefl003 ,t9.ooag011 ,t10.ooag011", 

               " FROM deag_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.deagsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oogd_t t2 ON t2.oogdent='"||g_enterprise||"' AND t2.oogdsite=t0.deagsite AND t2.oogd001=t0.deag002  ",
               " LEFT JOIN pcaal_t t3 ON t3.pcaalent='"||g_enterprise||"' AND t3.pcaalsite=t0.deagsite AND t3.pcaal001=t0.deag003 AND t3.pcaal002='"||g_dlang||"' ",
               " LEFT JOIN pcab_t t4 ON t4.pcabent='"||g_enterprise||"' AND t4.pcab001=t0.deag004  ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=t0.deagownid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=t0.deagowndp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=t0.deagcrtid  ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent='"||g_enterprise||"' AND t8.ooefl001=t0.deagcrtdp AND t8.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent='"||g_enterprise||"' AND t9.ooag001=t0.deagmodid  ",
               " LEFT JOIN ooag_t t10 ON t10.ooagent='"||g_enterprise||"' AND t10.ooag001=t0.deagcnfid  ",
 
               " WHERE t0.deagent = '" ||g_enterprise|| "' AND t0.deagdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE adet402_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_adet402 WITH FORM cl_ap_formpath("ade",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL adet402_init()   
 
      #進入選單 Menu (="N")
      CALL adet402_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_adet402
      
   END IF 
   
   CLOSE adet402_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 

{</section>}

{<section id="adet402.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION adet402_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   {<point name="init.pre_function"/>}
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('deagstus','13','N,Y,A,D,R,W,X')
 
      CALL cl_set_combo_scc('deaf012','8310') 
   CALL cl_set_combo_scc('deaf009','6736') 
   CALL cl_set_combo_scc('deaf016','8310') 
   CALL cl_set_combo_scc('rtlf001','8310') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
   CALL g_idx_group.addAttribute("'3',","1")
   CALL g_idx_group.addAttribute("'4',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL adet402_default_search()
    
END FUNCTION

{</section>}

{<section id="adet402.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION adet402_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   {<point name="ui_dialog.pre_function"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL adet402_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_deag_m.* TO NULL
         CALL g_deah_d.clear()
         CALL g_deah2_d.clear()
         CALL g_deah5_d.clear()
         CALL g_deah7_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL adet402_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL adet402_fetch('') # reload data
               LET l_ac = 1
               CALL adet402_ui_detailshow() #Setting the current row 
         
               CALL adet402_idx_chk()
               #NEXT FIELD deahseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_deah_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adet402_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL adet402_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_deah2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adet402_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL adet402_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_deah5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adet402_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("'3',",l_ac)
               
               #add-point:page3, before row動作 name="ui_dialog.body5.before_row"
               {<point name="ui_dialog.body5.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_current_page = 3
               #顯示單身筆數
               CALL adet402_idx_chk()
               #add-point:page3自定義行為 name="ui_dialog.body5.before_display"
               {<point name="ui_dialog.body5.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為 name="ui_dialog.body5.action"
            {<point name="ui_dialog.body5.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_deah7_d TO s_detail7.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adet402_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[4] = l_ac
               CALL g_idx_group.addAttribute("'4',",l_ac)
               
               #add-point:page4, before row動作 name="ui_dialog.body7.before_row"
               {<point name="ui_dialog.body7.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_current_page = 4
               #顯示單身筆數
               CALL adet402_idx_chk()
               #add-point:page4自定義行為 name="ui_dialog.body7.before_display"
               {<point name="ui_dialog.body7.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為 name="ui_dialog.body7.action"
            {<point name="ui_dialog.body7.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL adet402_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL adet402_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL adet402_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL adet402_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL adet402_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL adet402_set_act_visible()   
            CALL adet402_set_act_no_visible()
            IF NOT (g_deag_m.deagdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " deagent = '" ||g_enterprise|| "' AND",
                                  " deagdocno = '", g_deag_m.deagdocno, "' "
 
               #填到對應位置
               CALL adet402_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "deag_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "deah_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "deai_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "deaf_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtlf_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL adet402_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "deag_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "deah_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "deai_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "deaf_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtlf_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL adet402_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL adet402_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL adet402_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL adet402_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet402_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL adet402_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet402_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL adet402_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet402_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL adet402_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet402_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL adet402_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet402_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_deah_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_deah2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_deah5_d)
                  LET g_export_id[3]   = "s_detail5"
                  LET g_export_node[4] = base.typeInfo.create(g_deah7_d)
                  LET g_export_id[4]   = "s_detail7"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD deahseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION adet402_02
            LET g_action_choice="adet402_02"
            IF cl_auth_chk_act("adet402_02") THEN
               
               #add-point:ON ACTION adet402_02 name="menu.adet402_02"
               {<point name="menu.adet402_02" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL adet402_modify()
               #add-point:ON ACTION modify name="menu.modify"
               {<point name="menu.modify" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL adet402_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               {<point name="menu.modify_detail" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL adet402_delete()
               #add-point:ON ACTION delete name="menu.delete"
               {<point name="menu.delete" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL adet402_insert()
               #add-point:ON ACTION insert name="menu.insert"
               {<point name="menu.insert" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               {<point name="menu.output" mark="Y"/>}
               #END add-point
               &include "erp/ade/adet402_rep.4gl"
               #add-point:ON ACTION output.after
               {<point name="menu.after_output" />}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL adet402_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               {<point name="menu.reproduce" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL adet402_query()
               #add-point:ON ACTION query name="menu.query"
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail5",1)
               CALL g_curr_diag.setCurrentRow("s_detail7",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION adet402_s01
            LET g_action_choice="adet402_s01"
            IF cl_auth_chk_act("adet402_s01") THEN
               
               #add-point:ON ACTION adet402_s01 name="menu.adet402_s01"
               {<point name="menu.adet402_s01" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION adet402_01
            LET g_action_choice="adet402_01"
            IF cl_auth_chk_act("adet402_01") THEN
               
               #add-point:ON ACTION adet402_01 name="menu.adet402_01"
               {<point name="menu.adet402_01" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION touch_page1
            LET g_action_choice="touch_page1"
            IF cl_auth_chk_act("touch_page1") THEN
               
               #add-point:ON ACTION touch_page1 name="menu.touch_page1"
               {<point name="menu.touch_page1" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_adet403
            LET g_action_choice="prog_adet403"
            IF cl_auth_chk_act("prog_adet403") THEN
               
               #add-point:ON ACTION prog_adet403 name="menu.prog_adet403"
               {<point name="menu.prog_adet403" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_anmt310
            LET g_action_choice="prog_anmt310"
            IF cl_auth_chk_act("prog_anmt310") THEN
               
               #add-point:ON ACTION prog_anmt310 name="menu.prog_anmt310"
               {<point name="menu.prog_anmt310" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL adet402_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL adet402_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL adet402_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_deag_m.deagdocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION

{</section>}

{<section id="adet402.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION adet402_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   {<point name="browser_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   {<point name="browser_fill.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT deagdocno ",
                      " FROM deag_t ",
                      " ",
                      " LEFT JOIN deah_t ON deahent = deagent AND deagdocno = deahdocno ", "  ",
                      #add-point:browser_fill段sql(deah_t1) name="browser_fill.cnt.join.}"
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN deai_t ON deaient = deagent AND deagdocno = deaidocno", "  ",
                      #add-point:browser_fill段sql(deai_t1) name="browser_fill.cnt.join.deai_t1"
                      {<point name="browser_fill.cnt.join.deai_t1"/>}
                      #end add-point
 
                      " LEFT JOIN deaf_t ON deafent = deagent AND deagdocno = deafdocno", "  ",
                      #add-point:browser_fill段sql(deaf_t1) name="browser_fill.cnt.join.deaf_t1"
                      {<point name="browser_fill.cnt.join.deaf_t1"/>}
                      #end add-point
 
                      " LEFT JOIN rtlf_t ON rtlfent = deagent AND deagdocno = rtlfdocno", "  ",
                      #add-point:browser_fill段sql(rtlf_t1) name="browser_fill.cnt.join.rtlf_t1"
                      {<point name="browser_fill.cnt.join.rtlf_t1"/>}
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " WHERE deagent = '" ||g_enterprise|| "' AND deahent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("deag_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT deagdocno ",
                      " FROM deag_t ", 
                      "  ",
                      "  ",
                      " WHERE deagent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("deag_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_deag_m.* TO NULL
      CALL g_deah_d.clear()        
      CALL g_deah2_d.clear() 
      CALL g_deah5_d.clear() 
      CALL g_deah7_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.deagsite,t0.deagdocno,t0.deagdocdt,t0.deag001,t0.deag002,t0.deag003,t0.deag004 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.deagstus,t0.deagsite,t0.deagdocno,t0.deagdocdt,t0.deag001,t0.deag002, 
          t0.deag003,t0.deag004,t1.ooefl003 ",
                  " FROM deag_t t0",
                  "  ",
                  "  LEFT JOIN deah_t ON deahent = deagent AND deagdocno = deahdocno ", "  ", 
                  #add-point:browser_fill段sql(deah_t1) name="browser_fill.join.deah_t1"
                  {<point name="browser_fill.join.deah_t1"/>}
                  #end add-point
                  "  LEFT JOIN deai_t ON deaient = deagent AND deagdocno = deaidocno", "  ", 
                  #add-point:browser_fill段sql(deai_t1) name="browser_fill.join.deai_t1"
                  {<point name="browser_fill.join.deai_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN deaf_t ON deafent = deagent AND deagdocno = deafdocno", "  ", 
                  #add-point:browser_fill段sql(deaf_t1) name="browser_fill.join.deaf_t1"
                  {<point name="browser_fill.join.deaf_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN rtlf_t ON rtlfent = deagent AND deagdocno = rtlfdocno", "  ", 
                  #add-point:browser_fill段sql(rtlf_t1) name="browser_fill.join.rtlf_t1"
                  {<point name="browser_fill.join.rtlf_t1"/>}
                  #end add-point
 
 
 
                  "  ",
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.deagsite AND t1.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.deagent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("deag_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.deagstus,t0.deagsite,t0.deagdocno,t0.deagdocdt,t0.deag001,t0.deag002, 
          t0.deag003,t0.deag004,t1.ooefl003 ",
                  " FROM deag_t t0",
                  "  ",
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.deagsite AND t1.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.deagent = '" ||g_enterprise|| "' AND ",l_wc, cl_sql_add_filter("deag_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY deagdocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"deag_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      {<point name="browser_fill.open"/>}
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_deagsite,g_browser[g_cnt].b_deagdocno, 
          g_browser[g_cnt].b_deagdocdt,g_browser[g_cnt].b_deag001,g_browser[g_cnt].b_deag002,g_browser[g_cnt].b_deag003, 
          g_browser[g_cnt].b_deag004,g_browser[g_cnt].b_deagsite_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         {<point name="browser_fill.reference"/>}
         #end add-point
      
         #遮罩相關處理
         CALL adet402_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_deagdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION

{</section>}

{<section id="adet402.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION adet402_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   {<point name="ui_headershow.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   {<point name="ui_headershow.define"/>} 
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   {<point name="ui_headershow.pre_function"/>}
   #end add-point
   
   LET g_deag_m.deagdocno = g_browser[g_current_idx].b_deagdocno   
 
   EXECUTE adet402_master_referesh USING g_deag_m.deagdocno INTO g_deag_m.deagsite,g_deag_m.deagdocdt, 
       g_deag_m.deagdocno,g_deag_m.deag002,g_deag_m.deag003,g_deag_m.deag004,g_deag_m.deag001,g_deag_m.deag005, 
       g_deag_m.deag006,g_deag_m.deagunit,g_deag_m.deagstus,g_deag_m.deagownid,g_deag_m.deagowndp,g_deag_m.deagcrtid, 
       g_deag_m.deagcrtdp,g_deag_m.deagcrtdt,g_deag_m.deagmodid,g_deag_m.deagcnfdt,g_deag_m.deagmoddt, 
       g_deag_m.deagcnfid,g_deag_m.deagsite_desc,g_deag_m.deag002_desc,g_deag_m.deag003_desc,g_deag_m.deag004_desc, 
       g_deag_m.deagownid_desc,g_deag_m.deagowndp_desc,g_deag_m.deagcrtid_desc,g_deag_m.deagcrtdp_desc, 
       g_deag_m.deagmodid_desc,g_deag_m.deagcnfid_desc
   
   CALL adet402_deag_t_mask()
   CALL adet402_show()
      
END FUNCTION

{</section>}

{<section id="adet402.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION adet402_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   {<point name="ui_detailshow.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   {<point name="ui_detailshow.define"/>} 
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail5",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail7",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="adet402.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION adet402_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   {<point name="ui_browser_refresh.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   {<point name="ui_browser_refresh.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   {<point name="ui_browser_refresh.pre_function"/>}
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_deagdocno = g_deag_m.deagdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="adet402.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION adet402_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   {<point name="cs.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   {<point name="cs.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   {<point name="cs.pre_function"/>}
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_deag_m.* TO NULL
   CALL g_deah_d.clear()        
   CALL g_deah2_d.clear() 
   CALL g_deah5_d.clear() 
   CALL g_deah7_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON deagsite,deagdocdt,deagdocno,deag002,deag003,deag004,deag001,deag005, 
          deag006,deagunit,deagstus,deagownid,deagowndp,deagcrtid,deagcrtdp,deagcrtdt,deagmodid,deagcnfdt, 
          deagmoddt,deagcnfid,deaj001,deaj002,deaj003,deaj004,deaj005,deaj006,deaj007,deaj008,deaj009 

 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<deagcrtdt>>----
         AFTER FIELD deagcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<deagmoddt>>----
         AFTER FIELD deagmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<deagcnfdt>>----
         AFTER FIELD deagcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<deagpstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.deagsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deagsite
            #add-point:ON ACTION controlp INFIELD deagsite name="construct.c.deagsite"
            {<point name="construct.c.deagsite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deagsite
            #add-point:BEFORE FIELD deagsite name="construct.b.deagsite"
            {<point name="construct.b.deagsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deagsite
            
            #add-point:AFTER FIELD deagsite name="construct.a.deagsite"
            {<point name="construct.a.deagsite" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deagdocdt
            #add-point:BEFORE FIELD deagdocdt name="construct.b.deagdocdt"
            {<point name="construct.b.deagdocdt" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deagdocdt
            
            #add-point:AFTER FIELD deagdocdt name="construct.a.deagdocdt"
            {<point name="construct.a.deagdocdt" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deagdocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deagdocdt
            #add-point:ON ACTION controlp INFIELD deagdocdt name="construct.c.deagdocdt"
            {<point name="construct.c.deagdocdt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.deagdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deagdocno
            #add-point:ON ACTION controlp INFIELD deagdocno name="construct.c.deagdocno"
            {<point name="construct.c.deagdocno" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deagdocno
            #add-point:BEFORE FIELD deagdocno name="construct.b.deagdocno"
            {<point name="construct.b.deagdocno" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deagdocno
            
            #add-point:AFTER FIELD deagdocno name="construct.a.deagdocno"
            {<point name="construct.a.deagdocno" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deag002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deag002
            #add-point:ON ACTION controlp INFIELD deag002 name="construct.c.deag002"
            {<point name="construct.c.deag002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deag002
            #add-point:BEFORE FIELD deag002 name="construct.b.deag002"
            {<point name="construct.b.deag002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deag002
            
            #add-point:AFTER FIELD deag002 name="construct.a.deag002"
            {<point name="construct.a.deag002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deag003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deag003
            #add-point:ON ACTION controlp INFIELD deag003 name="construct.c.deag003"
            {<point name="construct.c.deag003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deag003
            #add-point:BEFORE FIELD deag003 name="construct.b.deag003"
            {<point name="construct.b.deag003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deag003
            
            #add-point:AFTER FIELD deag003 name="construct.a.deag003"
            {<point name="construct.a.deag003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deag004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deag004
            #add-point:ON ACTION controlp INFIELD deag004 name="construct.c.deag004"
            {<point name="construct.c.deag004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deag004
            #add-point:BEFORE FIELD deag004 name="construct.b.deag004"
            {<point name="construct.b.deag004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deag004
            
            #add-point:AFTER FIELD deag004 name="construct.a.deag004"
            {<point name="construct.a.deag004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deag001
            #add-point:BEFORE FIELD deag001 name="construct.b.deag001"
            {<point name="construct.b.deag001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deag001
            
            #add-point:AFTER FIELD deag001 name="construct.a.deag001"
            {<point name="construct.a.deag001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deag001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deag001
            #add-point:ON ACTION controlp INFIELD deag001 name="construct.c.deag001"
            {<point name="construct.c.deag001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deag005
            #add-point:BEFORE FIELD deag005 name="construct.b.deag005"
            {<point name="construct.b.deag005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deag005
            
            #add-point:AFTER FIELD deag005 name="construct.a.deag005"
            {<point name="construct.a.deag005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deag005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deag005
            #add-point:ON ACTION controlp INFIELD deag005 name="construct.c.deag005"
            {<point name="construct.c.deag005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deag006
            #add-point:BEFORE FIELD deag006 name="construct.b.deag006"
            {<point name="construct.b.deag006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deag006
            
            #add-point:AFTER FIELD deag006 name="construct.a.deag006"
            {<point name="construct.a.deag006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deag006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deag006
            #add-point:ON ACTION controlp INFIELD deag006 name="construct.c.deag006"
            {<point name="construct.c.deag006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deagunit
            #add-point:BEFORE FIELD deagunit name="construct.b.deagunit"
            {<point name="construct.b.deagunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deagunit
            
            #add-point:AFTER FIELD deagunit name="construct.a.deagunit"
            {<point name="construct.a.deagunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deagunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deagunit
            #add-point:ON ACTION controlp INFIELD deagunit name="construct.c.deagunit"
            {<point name="construct.c.deagunit" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deagstus
            #add-point:BEFORE FIELD deagstus name="construct.b.deagstus"
            {<point name="construct.b.deagstus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deagstus
            
            #add-point:AFTER FIELD deagstus name="construct.a.deagstus"
            {<point name="construct.a.deagstus" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deagstus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deagstus
            #add-point:ON ACTION controlp INFIELD deagstus name="construct.c.deagstus"
            {<point name="construct.c.deagstus" />}
            #END add-point
 
 
         #Ctrlp:construct.c.deagownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deagownid
            #add-point:ON ACTION controlp INFIELD deagownid name="construct.c.deagownid"
            {<point name="construct.c.deagownid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deagownid
            #add-point:BEFORE FIELD deagownid name="construct.b.deagownid"
            {<point name="construct.b.deagownid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deagownid
            
            #add-point:AFTER FIELD deagownid name="construct.a.deagownid"
            {<point name="construct.a.deagownid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deagowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deagowndp
            #add-point:ON ACTION controlp INFIELD deagowndp name="construct.c.deagowndp"
            {<point name="construct.c.deagowndp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deagowndp
            #add-point:BEFORE FIELD deagowndp name="construct.b.deagowndp"
            {<point name="construct.b.deagowndp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deagowndp
            
            #add-point:AFTER FIELD deagowndp name="construct.a.deagowndp"
            {<point name="construct.a.deagowndp" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deagcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deagcrtid
            #add-point:ON ACTION controlp INFIELD deagcrtid name="construct.c.deagcrtid"
            {<point name="construct.c.deagcrtid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deagcrtid
            #add-point:BEFORE FIELD deagcrtid name="construct.b.deagcrtid"
            {<point name="construct.b.deagcrtid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deagcrtid
            
            #add-point:AFTER FIELD deagcrtid name="construct.a.deagcrtid"
            {<point name="construct.a.deagcrtid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deagcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deagcrtdp
            #add-point:ON ACTION controlp INFIELD deagcrtdp name="construct.c.deagcrtdp"
            {<point name="construct.c.deagcrtdp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deagcrtdp
            #add-point:BEFORE FIELD deagcrtdp name="construct.b.deagcrtdp"
            {<point name="construct.b.deagcrtdp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deagcrtdp
            
            #add-point:AFTER FIELD deagcrtdp name="construct.a.deagcrtdp"
            {<point name="construct.a.deagcrtdp" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deagcrtdt
            #add-point:BEFORE FIELD deagcrtdt name="construct.b.deagcrtdt"
            {<point name="construct.b.deagcrtdt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.deagmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deagmodid
            #add-point:ON ACTION controlp INFIELD deagmodid name="construct.c.deagmodid"
            {<point name="construct.c.deagmodid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deagmodid
            #add-point:BEFORE FIELD deagmodid name="construct.b.deagmodid"
            {<point name="construct.b.deagmodid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deagmodid
            
            #add-point:AFTER FIELD deagmodid name="construct.a.deagmodid"
            {<point name="construct.a.deagmodid" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deagcnfdt
            #add-point:BEFORE FIELD deagcnfdt name="construct.b.deagcnfdt"
            {<point name="construct.b.deagcnfdt" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deagmoddt
            #add-point:BEFORE FIELD deagmoddt name="construct.b.deagmoddt"
            {<point name="construct.b.deagmoddt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.deagcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deagcnfid
            #add-point:ON ACTION controlp INFIELD deagcnfid name="construct.c.deagcnfid"
            {<point name="construct.c.deagcnfid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deagcnfid
            #add-point:BEFORE FIELD deagcnfid name="construct.b.deagcnfid"
            {<point name="construct.b.deagcnfid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deagcnfid
            
            #add-point:AFTER FIELD deagcnfid name="construct.a.deagcnfid"
            {<point name="construct.a.deagcnfid" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaj001
            #add-point:BEFORE FIELD deaj001 name="construct.b.deaj001"
            {<point name="construct.b.deaj001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaj001
            
            #add-point:AFTER FIELD deaj001 name="construct.a.deaj001"
            {<point name="construct.a.deaj001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deaj001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaj001
            #add-point:ON ACTION controlp INFIELD deaj001 name="construct.c.deaj001"
            {<point name="construct.c.deaj001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaj002
            #add-point:BEFORE FIELD deaj002 name="construct.b.deaj002"
            {<point name="construct.b.deaj002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaj002
            
            #add-point:AFTER FIELD deaj002 name="construct.a.deaj002"
            {<point name="construct.a.deaj002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deaj002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaj002
            #add-point:ON ACTION controlp INFIELD deaj002 name="construct.c.deaj002"
            {<point name="construct.c.deaj002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaj003
            #add-point:BEFORE FIELD deaj003 name="construct.b.deaj003"
            {<point name="construct.b.deaj003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaj003
            
            #add-point:AFTER FIELD deaj003 name="construct.a.deaj003"
            {<point name="construct.a.deaj003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deaj003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaj003
            #add-point:ON ACTION controlp INFIELD deaj003 name="construct.c.deaj003"
            {<point name="construct.c.deaj003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaj004
            #add-point:BEFORE FIELD deaj004 name="construct.b.deaj004"
            {<point name="construct.b.deaj004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaj004
            
            #add-point:AFTER FIELD deaj004 name="construct.a.deaj004"
            {<point name="construct.a.deaj004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deaj004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaj004
            #add-point:ON ACTION controlp INFIELD deaj004 name="construct.c.deaj004"
            {<point name="construct.c.deaj004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaj005
            #add-point:BEFORE FIELD deaj005 name="construct.b.deaj005"
            {<point name="construct.b.deaj005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaj005
            
            #add-point:AFTER FIELD deaj005 name="construct.a.deaj005"
            {<point name="construct.a.deaj005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deaj005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaj005
            #add-point:ON ACTION controlp INFIELD deaj005 name="construct.c.deaj005"
            {<point name="construct.c.deaj005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaj006
            #add-point:BEFORE FIELD deaj006 name="construct.b.deaj006"
            {<point name="construct.b.deaj006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaj006
            
            #add-point:AFTER FIELD deaj006 name="construct.a.deaj006"
            {<point name="construct.a.deaj006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deaj006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaj006
            #add-point:ON ACTION controlp INFIELD deaj006 name="construct.c.deaj006"
            {<point name="construct.c.deaj006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaj007
            #add-point:BEFORE FIELD deaj007 name="construct.b.deaj007"
            {<point name="construct.b.deaj007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaj007
            
            #add-point:AFTER FIELD deaj007 name="construct.a.deaj007"
            {<point name="construct.a.deaj007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deaj007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaj007
            #add-point:ON ACTION controlp INFIELD deaj007 name="construct.c.deaj007"
            {<point name="construct.c.deaj007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaj008
            #add-point:BEFORE FIELD deaj008 name="construct.b.deaj008"
            {<point name="construct.b.deaj008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaj008
            
            #add-point:AFTER FIELD deaj008 name="construct.a.deaj008"
            {<point name="construct.a.deaj008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deaj008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaj008
            #add-point:ON ACTION controlp INFIELD deaj008 name="construct.c.deaj008"
            {<point name="construct.c.deaj008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaj009
            #add-point:BEFORE FIELD deaj009 name="construct.b.deaj009"
            {<point name="construct.b.deaj009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaj009
            
            #add-point:AFTER FIELD deaj009 name="construct.a.deaj009"
            {<point name="construct.a.deaj009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.deaj009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaj009
            #add-point:ON ACTION controlp INFIELD deaj009 name="construct.c.deaj009"
            {<point name="construct.c.deaj009" />}
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON deahseq,deah000,deah001,deah002,deah003,deah009,deah005,deah004,deah007, 
          deah006,deah008,deah013
           FROM s_detail1[1].deahseq,s_detail1[1].deah000,s_detail1[1].deah001,s_detail1[1].deah002, 
               s_detail1[1].deah003,s_detail1[1].deah009,s_detail1[1].deah005,s_detail1[1].deah004,s_detail1[1].deah007, 
               s_detail1[1].deah006,s_detail1[1].deah008,s_detail1[1].deah013
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deahseq
            #add-point:BEFORE FIELD deahseq name="construct.b.page1.deahseq"
            {<point name="construct.b.page1.deahseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deahseq
            
            #add-point:AFTER FIELD deahseq name="construct.a.page1.deahseq"
            {<point name="construct.a.page1.deahseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.deahseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deahseq
            #add-point:ON ACTION controlp INFIELD deahseq name="construct.c.page1.deahseq"
            {<point name="construct.c.page1.deahseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah000
            #add-point:BEFORE FIELD deah000 name="construct.b.page1.deah000"
            {<point name="construct.b.page1.deah000" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah000
            
            #add-point:AFTER FIELD deah000 name="construct.a.page1.deah000"
            {<point name="construct.a.page1.deah000" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.deah000
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah000
            #add-point:ON ACTION controlp INFIELD deah000 name="construct.c.page1.deah000"
            {<point name="construct.c.page1.deah000" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.deah001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah001
            #add-point:ON ACTION controlp INFIELD deah001 name="construct.c.page1.deah001"
            {<point name="construct.c.page1.deah001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah001
            #add-point:BEFORE FIELD deah001 name="construct.b.page1.deah001"
            {<point name="construct.b.page1.deah001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah001
            
            #add-point:AFTER FIELD deah001 name="construct.a.page1.deah001"
            {<point name="construct.a.page1.deah001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.deah002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah002
            #add-point:ON ACTION controlp INFIELD deah002 name="construct.c.page1.deah002"
            {<point name="construct.c.page1.deah002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah002
            #add-point:BEFORE FIELD deah002 name="construct.b.page1.deah002"
            {<point name="construct.b.page1.deah002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah002
            
            #add-point:AFTER FIELD deah002 name="construct.a.page1.deah002"
            {<point name="construct.a.page1.deah002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.deah003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah003
            #add-point:ON ACTION controlp INFIELD deah003 name="construct.c.page1.deah003"
            {<point name="construct.c.page1.deah003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah003
            #add-point:BEFORE FIELD deah003 name="construct.b.page1.deah003"
            {<point name="construct.b.page1.deah003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah003
            
            #add-point:AFTER FIELD deah003 name="construct.a.page1.deah003"
            {<point name="construct.a.page1.deah003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.deah009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah009
            #add-point:ON ACTION controlp INFIELD deah009 name="construct.c.page1.deah009"
            {<point name="construct.c.page1.deah009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah009
            #add-point:BEFORE FIELD deah009 name="construct.b.page1.deah009"
            {<point name="construct.b.page1.deah009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah009
            
            #add-point:AFTER FIELD deah009 name="construct.a.page1.deah009"
            {<point name="construct.a.page1.deah009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.deah005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah005
            #add-point:ON ACTION controlp INFIELD deah005 name="construct.c.page1.deah005"
            {<point name="construct.c.page1.deah005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah005
            #add-point:BEFORE FIELD deah005 name="construct.b.page1.deah005"
            {<point name="construct.b.page1.deah005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah005
            
            #add-point:AFTER FIELD deah005 name="construct.a.page1.deah005"
            {<point name="construct.a.page1.deah005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah004
            #add-point:BEFORE FIELD deah004 name="construct.b.page1.deah004"
            {<point name="construct.b.page1.deah004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah004
            
            #add-point:AFTER FIELD deah004 name="construct.a.page1.deah004"
            {<point name="construct.a.page1.deah004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.deah004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah004
            #add-point:ON ACTION controlp INFIELD deah004 name="construct.c.page1.deah004"
            {<point name="construct.c.page1.deah004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah007
            #add-point:BEFORE FIELD deah007 name="construct.b.page1.deah007"
            {<point name="construct.b.page1.deah007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah007
            
            #add-point:AFTER FIELD deah007 name="construct.a.page1.deah007"
            {<point name="construct.a.page1.deah007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.deah007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah007
            #add-point:ON ACTION controlp INFIELD deah007 name="construct.c.page1.deah007"
            {<point name="construct.c.page1.deah007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah006
            #add-point:BEFORE FIELD deah006 name="construct.b.page1.deah006"
            {<point name="construct.b.page1.deah006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah006
            
            #add-point:AFTER FIELD deah006 name="construct.a.page1.deah006"
            {<point name="construct.a.page1.deah006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.deah006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah006
            #add-point:ON ACTION controlp INFIELD deah006 name="construct.c.page1.deah006"
            {<point name="construct.c.page1.deah006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah008
            #add-point:BEFORE FIELD deah008 name="construct.b.page1.deah008"
            {<point name="construct.b.page1.deah008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah008
            
            #add-point:AFTER FIELD deah008 name="construct.a.page1.deah008"
            {<point name="construct.a.page1.deah008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.deah008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah008
            #add-point:ON ACTION controlp INFIELD deah008 name="construct.c.page1.deah008"
            {<point name="construct.c.page1.deah008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah013
            #add-point:BEFORE FIELD deah013 name="construct.b.page1.deah013"
            {<point name="construct.b.page1.deah013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah013
            
            #add-point:AFTER FIELD deah013 name="construct.a.page1.deah013"
            {<point name="construct.a.page1.deah013" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.deah013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah013
            #add-point:ON ACTION controlp INFIELD deah013 name="construct.c.page1.deah013"
            {<point name="construct.c.page1.deah013" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON deai001,deai002,deai003,deai004,deai005
           FROM s_detail2[1].deai001,s_detail2[1].deai002,s_detail2[1].deai003,s_detail2[1].deai004, 
               s_detail2[1].deai005
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deai001
            #add-point:BEFORE FIELD deai001 name="construct.b.page2.deai001"
            {<point name="construct.b.page2.deai001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deai001
            
            #add-point:AFTER FIELD deai001 name="construct.a.page2.deai001"
            {<point name="construct.a.page2.deai001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.deai001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deai001
            #add-point:ON ACTION controlp INFIELD deai001 name="construct.c.page2.deai001"
            {<point name="construct.c.page2.deai001" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page2.deai002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deai002
            #add-point:ON ACTION controlp INFIELD deai002 name="construct.c.page2.deai002"
            {<point name="construct.c.page2.deai002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deai002
            #add-point:BEFORE FIELD deai002 name="construct.b.page2.deai002"
            {<point name="construct.b.page2.deai002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deai002
            
            #add-point:AFTER FIELD deai002 name="construct.a.page2.deai002"
            {<point name="construct.a.page2.deai002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.deai003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deai003
            #add-point:ON ACTION controlp INFIELD deai003 name="construct.c.page2.deai003"
            {<point name="construct.c.page2.deai003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deai003
            #add-point:BEFORE FIELD deai003 name="construct.b.page2.deai003"
            {<point name="construct.b.page2.deai003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deai003
            
            #add-point:AFTER FIELD deai003 name="construct.a.page2.deai003"
            {<point name="construct.a.page2.deai003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deai004
            #add-point:BEFORE FIELD deai004 name="construct.b.page2.deai004"
            {<point name="construct.b.page2.deai004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deai004
            
            #add-point:AFTER FIELD deai004 name="construct.a.page2.deai004"
            {<point name="construct.a.page2.deai004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.deai004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deai004
            #add-point:ON ACTION controlp INFIELD deai004 name="construct.c.page2.deai004"
            {<point name="construct.c.page2.deai004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deai005
            #add-point:BEFORE FIELD deai005 name="construct.b.page2.deai005"
            {<point name="construct.b.page2.deai005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deai005
            
            #add-point:AFTER FIELD deai005 name="construct.a.page2.deai005"
            {<point name="construct.a.page2.deai005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.deai005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deai005
            #add-point:ON ACTION controlp INFIELD deai005 name="construct.c.page2.deai005"
            {<point name="construct.c.page2.deai005" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON deafsite,deafstatu,deafdocdt,deaf001,deaf002,deaf003,deaf004,deaf012, 
          deaf005,deaf013,deaf014,deaf006,deaf027,deaf019,deaf007,deaf020,deaf028,deaf023,deaf015,deaf008, 
          deaf009,deaf016,deaf017,deaf018,deaf010,deaf011,deaf021,deaf022,deaf024,deaf025,deaf026
           FROM s_detail5[1].deafsite,s_detail5[1].deafstatu,s_detail5[1].deafdocdt,s_detail5[1].deaf001, 
               s_detail5[1].deaf002,s_detail5[1].deaf003,s_detail5[1].deaf004,s_detail5[1].deaf012,s_detail5[1].deaf005, 
               s_detail5[1].deaf013,s_detail5[1].deaf014,s_detail5[1].deaf006,s_detail5[1].deaf027,s_detail5[1].deaf019, 
               s_detail5[1].deaf007,s_detail5[1].deaf020,s_detail5[1].deaf028,s_detail5[1].deaf023,s_detail5[1].deaf015, 
               s_detail5[1].deaf008,s_detail5[1].deaf009,s_detail5[1].deaf016,s_detail5[1].deaf017,s_detail5[1].deaf018, 
               s_detail5[1].deaf010,s_detail5[1].deaf011,s_detail5[1].deaf021,s_detail5[1].deaf022,s_detail5[1].deaf024, 
               s_detail5[1].deaf025,s_detail5[1].deaf026
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body3.before_construct"
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deafsite
            #add-point:BEFORE FIELD deafsite name="construct.b.page5.deafsite"
            {<point name="construct.b.page5.deafsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deafsite
            
            #add-point:AFTER FIELD deafsite name="construct.a.page5.deafsite"
            {<point name="construct.a.page5.deafsite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deafsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deafsite
            #add-point:ON ACTION controlp INFIELD deafsite name="construct.c.page5.deafsite"
            {<point name="construct.c.page5.deafsite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deafstatu
            #add-point:BEFORE FIELD deafstatu name="construct.b.page5.deafstatu"
            {<point name="construct.b.page5.deafstatu" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deafstatu
            
            #add-point:AFTER FIELD deafstatu name="construct.a.page5.deafstatu"
            {<point name="construct.a.page5.deafstatu" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deafstatu
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deafstatu
            #add-point:ON ACTION controlp INFIELD deafstatu name="construct.c.page5.deafstatu"
            {<point name="construct.c.page5.deafstatu" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deafdocdt
            #add-point:BEFORE FIELD deafdocdt name="construct.b.page5.deafdocdt"
            {<point name="construct.b.page5.deafdocdt" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deafdocdt
            
            #add-point:AFTER FIELD deafdocdt name="construct.a.page5.deafdocdt"
            {<point name="construct.a.page5.deafdocdt" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deafdocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deafdocdt
            #add-point:ON ACTION controlp INFIELD deafdocdt name="construct.c.page5.deafdocdt"
            {<point name="construct.c.page5.deafdocdt" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf001
            #add-point:BEFORE FIELD deaf001 name="construct.b.page5.deaf001"
            {<point name="construct.b.page5.deaf001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf001
            
            #add-point:AFTER FIELD deaf001 name="construct.a.page5.deaf001"
            {<point name="construct.a.page5.deaf001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf001
            #add-point:ON ACTION controlp INFIELD deaf001 name="construct.c.page5.deaf001"
            {<point name="construct.c.page5.deaf001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf002
            #add-point:BEFORE FIELD deaf002 name="construct.b.page5.deaf002"
            {<point name="construct.b.page5.deaf002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf002
            
            #add-point:AFTER FIELD deaf002 name="construct.a.page5.deaf002"
            {<point name="construct.a.page5.deaf002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf002
            #add-point:ON ACTION controlp INFIELD deaf002 name="construct.c.page5.deaf002"
            {<point name="construct.c.page5.deaf002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf003
            #add-point:BEFORE FIELD deaf003 name="construct.b.page5.deaf003"
            {<point name="construct.b.page5.deaf003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf003
            
            #add-point:AFTER FIELD deaf003 name="construct.a.page5.deaf003"
            {<point name="construct.a.page5.deaf003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf003
            #add-point:ON ACTION controlp INFIELD deaf003 name="construct.c.page5.deaf003"
            {<point name="construct.c.page5.deaf003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf004
            #add-point:BEFORE FIELD deaf004 name="construct.b.page5.deaf004"
            {<point name="construct.b.page5.deaf004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf004
            
            #add-point:AFTER FIELD deaf004 name="construct.a.page5.deaf004"
            {<point name="construct.a.page5.deaf004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf004
            #add-point:ON ACTION controlp INFIELD deaf004 name="construct.c.page5.deaf004"
            {<point name="construct.c.page5.deaf004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf012
            #add-point:BEFORE FIELD deaf012 name="construct.b.page5.deaf012"
            {<point name="construct.b.page5.deaf012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf012
            
            #add-point:AFTER FIELD deaf012 name="construct.a.page5.deaf012"
            {<point name="construct.a.page5.deaf012" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf012
            #add-point:ON ACTION controlp INFIELD deaf012 name="construct.c.page5.deaf012"
            {<point name="construct.c.page5.deaf012" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page5.deaf005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf005
            #add-point:ON ACTION controlp INFIELD deaf005 name="construct.c.page5.deaf005"
            {<point name="construct.c.page5.deaf005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf005
            #add-point:BEFORE FIELD deaf005 name="construct.b.page5.deaf005"
            {<point name="construct.b.page5.deaf005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf005
            
            #add-point:AFTER FIELD deaf005 name="construct.a.page5.deaf005"
            {<point name="construct.a.page5.deaf005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf013
            #add-point:BEFORE FIELD deaf013 name="construct.b.page5.deaf013"
            {<point name="construct.b.page5.deaf013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf013
            
            #add-point:AFTER FIELD deaf013 name="construct.a.page5.deaf013"
            {<point name="construct.a.page5.deaf013" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf013
            #add-point:ON ACTION controlp INFIELD deaf013 name="construct.c.page5.deaf013"
            {<point name="construct.c.page5.deaf013" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf014
            #add-point:BEFORE FIELD deaf014 name="construct.b.page5.deaf014"
            {<point name="construct.b.page5.deaf014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf014
            
            #add-point:AFTER FIELD deaf014 name="construct.a.page5.deaf014"
            {<point name="construct.a.page5.deaf014" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf014
            #add-point:ON ACTION controlp INFIELD deaf014 name="construct.c.page5.deaf014"
            {<point name="construct.c.page5.deaf014" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf006
            #add-point:BEFORE FIELD deaf006 name="construct.b.page5.deaf006"
            {<point name="construct.b.page5.deaf006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf006
            
            #add-point:AFTER FIELD deaf006 name="construct.a.page5.deaf006"
            {<point name="construct.a.page5.deaf006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf006
            #add-point:ON ACTION controlp INFIELD deaf006 name="construct.c.page5.deaf006"
            {<point name="construct.c.page5.deaf006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf027
            #add-point:BEFORE FIELD deaf027 name="construct.b.page5.deaf027"
            {<point name="construct.b.page5.deaf027" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf027
            
            #add-point:AFTER FIELD deaf027 name="construct.a.page5.deaf027"
            {<point name="construct.a.page5.deaf027" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf027
            #add-point:ON ACTION controlp INFIELD deaf027 name="construct.c.page5.deaf027"
            {<point name="construct.c.page5.deaf027" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf019
            #add-point:BEFORE FIELD deaf019 name="construct.b.page5.deaf019"
            {<point name="construct.b.page5.deaf019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf019
            
            #add-point:AFTER FIELD deaf019 name="construct.a.page5.deaf019"
            {<point name="construct.a.page5.deaf019" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf019
            #add-point:ON ACTION controlp INFIELD deaf019 name="construct.c.page5.deaf019"
            {<point name="construct.c.page5.deaf019" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf007
            #add-point:BEFORE FIELD deaf007 name="construct.b.page5.deaf007"
            {<point name="construct.b.page5.deaf007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf007
            
            #add-point:AFTER FIELD deaf007 name="construct.a.page5.deaf007"
            {<point name="construct.a.page5.deaf007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf007
            #add-point:ON ACTION controlp INFIELD deaf007 name="construct.c.page5.deaf007"
            {<point name="construct.c.page5.deaf007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf020
            #add-point:BEFORE FIELD deaf020 name="construct.b.page5.deaf020"
            {<point name="construct.b.page5.deaf020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf020
            
            #add-point:AFTER FIELD deaf020 name="construct.a.page5.deaf020"
            {<point name="construct.a.page5.deaf020" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf020
            #add-point:ON ACTION controlp INFIELD deaf020 name="construct.c.page5.deaf020"
            {<point name="construct.c.page5.deaf020" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf028
            #add-point:BEFORE FIELD deaf028 name="construct.b.page5.deaf028"
            {<point name="construct.b.page5.deaf028" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf028
            
            #add-point:AFTER FIELD deaf028 name="construct.a.page5.deaf028"
            {<point name="construct.a.page5.deaf028" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf028
            #add-point:ON ACTION controlp INFIELD deaf028 name="construct.c.page5.deaf028"
            {<point name="construct.c.page5.deaf028" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf023
            #add-point:BEFORE FIELD deaf023 name="construct.b.page5.deaf023"
            {<point name="construct.b.page5.deaf023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf023
            
            #add-point:AFTER FIELD deaf023 name="construct.a.page5.deaf023"
            {<point name="construct.a.page5.deaf023" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf023
            #add-point:ON ACTION controlp INFIELD deaf023 name="construct.c.page5.deaf023"
            {<point name="construct.c.page5.deaf023" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf015
            #add-point:BEFORE FIELD deaf015 name="construct.b.page5.deaf015"
            {<point name="construct.b.page5.deaf015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf015
            
            #add-point:AFTER FIELD deaf015 name="construct.a.page5.deaf015"
            {<point name="construct.a.page5.deaf015" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf015
            #add-point:ON ACTION controlp INFIELD deaf015 name="construct.c.page5.deaf015"
            {<point name="construct.c.page5.deaf015" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf008
            #add-point:BEFORE FIELD deaf008 name="construct.b.page5.deaf008"
            {<point name="construct.b.page5.deaf008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf008
            
            #add-point:AFTER FIELD deaf008 name="construct.a.page5.deaf008"
            {<point name="construct.a.page5.deaf008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf008
            #add-point:ON ACTION controlp INFIELD deaf008 name="construct.c.page5.deaf008"
            {<point name="construct.c.page5.deaf008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf009
            #add-point:BEFORE FIELD deaf009 name="construct.b.page5.deaf009"
            {<point name="construct.b.page5.deaf009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf009
            
            #add-point:AFTER FIELD deaf009 name="construct.a.page5.deaf009"
            {<point name="construct.a.page5.deaf009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf009
            #add-point:ON ACTION controlp INFIELD deaf009 name="construct.c.page5.deaf009"
            {<point name="construct.c.page5.deaf009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf016
            #add-point:BEFORE FIELD deaf016 name="construct.b.page5.deaf016"
            {<point name="construct.b.page5.deaf016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf016
            
            #add-point:AFTER FIELD deaf016 name="construct.a.page5.deaf016"
            {<point name="construct.a.page5.deaf016" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf016
            #add-point:ON ACTION controlp INFIELD deaf016 name="construct.c.page5.deaf016"
            {<point name="construct.c.page5.deaf016" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page5.deaf017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf017
            #add-point:ON ACTION controlp INFIELD deaf017 name="construct.c.page5.deaf017"
            {<point name="construct.c.page5.deaf017" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf017
            #add-point:BEFORE FIELD deaf017 name="construct.b.page5.deaf017"
            {<point name="construct.b.page5.deaf017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf017
            
            #add-point:AFTER FIELD deaf017 name="construct.a.page5.deaf017"
            {<point name="construct.a.page5.deaf017" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf018
            #add-point:BEFORE FIELD deaf018 name="construct.b.page5.deaf018"
            {<point name="construct.b.page5.deaf018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf018
            
            #add-point:AFTER FIELD deaf018 name="construct.a.page5.deaf018"
            {<point name="construct.a.page5.deaf018" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf018
            #add-point:ON ACTION controlp INFIELD deaf018 name="construct.c.page5.deaf018"
            {<point name="construct.c.page5.deaf018" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf010
            #add-point:BEFORE FIELD deaf010 name="construct.b.page5.deaf010"
            {<point name="construct.b.page5.deaf010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf010
            
            #add-point:AFTER FIELD deaf010 name="construct.a.page5.deaf010"
            {<point name="construct.a.page5.deaf010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf010
            #add-point:ON ACTION controlp INFIELD deaf010 name="construct.c.page5.deaf010"
            {<point name="construct.c.page5.deaf010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf011
            #add-point:BEFORE FIELD deaf011 name="construct.b.page5.deaf011"
            {<point name="construct.b.page5.deaf011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf011
            
            #add-point:AFTER FIELD deaf011 name="construct.a.page5.deaf011"
            {<point name="construct.a.page5.deaf011" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf011
            #add-point:ON ACTION controlp INFIELD deaf011 name="construct.c.page5.deaf011"
            {<point name="construct.c.page5.deaf011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf021
            #add-point:BEFORE FIELD deaf021 name="construct.b.page5.deaf021"
            {<point name="construct.b.page5.deaf021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf021
            
            #add-point:AFTER FIELD deaf021 name="construct.a.page5.deaf021"
            {<point name="construct.a.page5.deaf021" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf021
            #add-point:ON ACTION controlp INFIELD deaf021 name="construct.c.page5.deaf021"
            {<point name="construct.c.page5.deaf021" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf022
            #add-point:BEFORE FIELD deaf022 name="construct.b.page5.deaf022"
            {<point name="construct.b.page5.deaf022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf022
            
            #add-point:AFTER FIELD deaf022 name="construct.a.page5.deaf022"
            {<point name="construct.a.page5.deaf022" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf022
            #add-point:ON ACTION controlp INFIELD deaf022 name="construct.c.page5.deaf022"
            {<point name="construct.c.page5.deaf022" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf024
            #add-point:BEFORE FIELD deaf024 name="construct.b.page5.deaf024"
            {<point name="construct.b.page5.deaf024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf024
            
            #add-point:AFTER FIELD deaf024 name="construct.a.page5.deaf024"
            {<point name="construct.a.page5.deaf024" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf024
            #add-point:ON ACTION controlp INFIELD deaf024 name="construct.c.page5.deaf024"
            {<point name="construct.c.page5.deaf024" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf025
            #add-point:BEFORE FIELD deaf025 name="construct.b.page5.deaf025"
            {<point name="construct.b.page5.deaf025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf025
            
            #add-point:AFTER FIELD deaf025 name="construct.a.page5.deaf025"
            {<point name="construct.a.page5.deaf025" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf025
            #add-point:ON ACTION controlp INFIELD deaf025 name="construct.c.page5.deaf025"
            {<point name="construct.c.page5.deaf025" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf026
            #add-point:BEFORE FIELD deaf026 name="construct.b.page5.deaf026"
            {<point name="construct.b.page5.deaf026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf026
            
            #add-point:AFTER FIELD deaf026 name="construct.a.page5.deaf026"
            {<point name="construct.a.page5.deaf026" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.deaf026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf026
            #add-point:ON ACTION controlp INFIELD deaf026 name="construct.c.page5.deaf026"
            {<point name="construct.c.page5.deaf026" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON rtlfdocno,rtlfseq,rtlf103,rtlfseq1,rtlf001,rtlf002,rtlf003,rtlf004,rtlf036, 
          rtlf005,rtlf007,rtlf006,rtlf008,rtlf009,rtlf010,rtlf013,rtlf014,rtlf015,rtlf016,rtlf017,rtlf018, 
          rtlf020,rtlf021,rtlf022,rtlf024,rtlf025,rtlf026,rtlf037
           FROM s_detail7[1].rtlfdocno,s_detail7[1].rtlfseq,s_detail7[1].rtlf103,s_detail7[1].rtlfseq1, 
               s_detail7[1].rtlf001,s_detail7[1].rtlf002,s_detail7[1].rtlf003,s_detail7[1].rtlf004,s_detail7[1].rtlf036, 
               s_detail7[1].rtlf005,s_detail7[1].rtlf007,s_detail7[1].rtlf006,s_detail7[1].rtlf008,s_detail7[1].rtlf009, 
               s_detail7[1].rtlf010,s_detail7[1].rtlf013,s_detail7[1].rtlf014,s_detail7[1].rtlf015,s_detail7[1].rtlf016, 
               s_detail7[1].rtlf017,s_detail7[1].rtlf018,s_detail7[1].rtlf020,s_detail7[1].rtlf021,s_detail7[1].rtlf022, 
               s_detail7[1].rtlf024,s_detail7[1].rtlf025,s_detail7[1].rtlf026,s_detail7[1].rtlf037
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body4.before_construct"
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlfdocno
            #add-point:BEFORE FIELD rtlfdocno name="construct.b.page7.rtlfdocno"
            {<point name="construct.b.page7.rtlfdocno" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlfdocno
            
            #add-point:AFTER FIELD rtlfdocno name="construct.a.page7.rtlfdocno"
            {<point name="construct.a.page7.rtlfdocno" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlfdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlfdocno
            #add-point:ON ACTION controlp INFIELD rtlfdocno name="construct.c.page7.rtlfdocno"
            {<point name="construct.c.page7.rtlfdocno" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlfseq
            #add-point:BEFORE FIELD rtlfseq name="construct.b.page7.rtlfseq"
            {<point name="construct.b.page7.rtlfseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlfseq
            
            #add-point:AFTER FIELD rtlfseq name="construct.a.page7.rtlfseq"
            {<point name="construct.a.page7.rtlfseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlfseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlfseq
            #add-point:ON ACTION controlp INFIELD rtlfseq name="construct.c.page7.rtlfseq"
            {<point name="construct.c.page7.rtlfseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf103
            #add-point:BEFORE FIELD rtlf103 name="construct.b.page7.rtlf103"
            {<point name="construct.b.page7.rtlf103" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf103
            
            #add-point:AFTER FIELD rtlf103 name="construct.a.page7.rtlf103"
            {<point name="construct.a.page7.rtlf103" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf103
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf103
            #add-point:ON ACTION controlp INFIELD rtlf103 name="construct.c.page7.rtlf103"
            {<point name="construct.c.page7.rtlf103" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlfseq1
            #add-point:BEFORE FIELD rtlfseq1 name="construct.b.page7.rtlfseq1"
            {<point name="construct.b.page7.rtlfseq1" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlfseq1
            
            #add-point:AFTER FIELD rtlfseq1 name="construct.a.page7.rtlfseq1"
            {<point name="construct.a.page7.rtlfseq1" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlfseq1
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlfseq1
            #add-point:ON ACTION controlp INFIELD rtlfseq1 name="construct.c.page7.rtlfseq1"
            {<point name="construct.c.page7.rtlfseq1" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf001
            #add-point:BEFORE FIELD rtlf001 name="construct.b.page7.rtlf001"
            {<point name="construct.b.page7.rtlf001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf001
            
            #add-point:AFTER FIELD rtlf001 name="construct.a.page7.rtlf001"
            {<point name="construct.a.page7.rtlf001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf001
            #add-point:ON ACTION controlp INFIELD rtlf001 name="construct.c.page7.rtlf001"
            {<point name="construct.c.page7.rtlf001" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page7.rtlf002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf002
            #add-point:ON ACTION controlp INFIELD rtlf002 name="construct.c.page7.rtlf002"
            {<point name="construct.c.page7.rtlf002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf002
            #add-point:BEFORE FIELD rtlf002 name="construct.b.page7.rtlf002"
            {<point name="construct.b.page7.rtlf002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf002
            
            #add-point:AFTER FIELD rtlf002 name="construct.a.page7.rtlf002"
            {<point name="construct.a.page7.rtlf002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf003
            #add-point:BEFORE FIELD rtlf003 name="construct.b.page7.rtlf003"
            {<point name="construct.b.page7.rtlf003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf003
            
            #add-point:AFTER FIELD rtlf003 name="construct.a.page7.rtlf003"
            {<point name="construct.a.page7.rtlf003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf003
            #add-point:ON ACTION controlp INFIELD rtlf003 name="construct.c.page7.rtlf003"
            {<point name="construct.c.page7.rtlf003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf004
            #add-point:BEFORE FIELD rtlf004 name="construct.b.page7.rtlf004"
            {<point name="construct.b.page7.rtlf004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf004
            
            #add-point:AFTER FIELD rtlf004 name="construct.a.page7.rtlf004"
            {<point name="construct.a.page7.rtlf004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf004
            #add-point:ON ACTION controlp INFIELD rtlf004 name="construct.c.page7.rtlf004"
            {<point name="construct.c.page7.rtlf004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf036
            #add-point:BEFORE FIELD rtlf036 name="construct.b.page7.rtlf036"
            {<point name="construct.b.page7.rtlf036" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf036
            
            #add-point:AFTER FIELD rtlf036 name="construct.a.page7.rtlf036"
            {<point name="construct.a.page7.rtlf036" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf036
            #add-point:ON ACTION controlp INFIELD rtlf036 name="construct.c.page7.rtlf036"
            {<point name="construct.c.page7.rtlf036" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf005
            #add-point:BEFORE FIELD rtlf005 name="construct.b.page7.rtlf005"
            {<point name="construct.b.page7.rtlf005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf005
            
            #add-point:AFTER FIELD rtlf005 name="construct.a.page7.rtlf005"
            {<point name="construct.a.page7.rtlf005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf005
            #add-point:ON ACTION controlp INFIELD rtlf005 name="construct.c.page7.rtlf005"
            {<point name="construct.c.page7.rtlf005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf007
            #add-point:BEFORE FIELD rtlf007 name="construct.b.page7.rtlf007"
            {<point name="construct.b.page7.rtlf007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf007
            
            #add-point:AFTER FIELD rtlf007 name="construct.a.page7.rtlf007"
            {<point name="construct.a.page7.rtlf007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf007
            #add-point:ON ACTION controlp INFIELD rtlf007 name="construct.c.page7.rtlf007"
            {<point name="construct.c.page7.rtlf007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf006
            #add-point:BEFORE FIELD rtlf006 name="construct.b.page7.rtlf006"
            {<point name="construct.b.page7.rtlf006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf006
            
            #add-point:AFTER FIELD rtlf006 name="construct.a.page7.rtlf006"
            {<point name="construct.a.page7.rtlf006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf006
            #add-point:ON ACTION controlp INFIELD rtlf006 name="construct.c.page7.rtlf006"
            {<point name="construct.c.page7.rtlf006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf008
            #add-point:BEFORE FIELD rtlf008 name="construct.b.page7.rtlf008"
            {<point name="construct.b.page7.rtlf008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf008
            
            #add-point:AFTER FIELD rtlf008 name="construct.a.page7.rtlf008"
            {<point name="construct.a.page7.rtlf008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf008
            #add-point:ON ACTION controlp INFIELD rtlf008 name="construct.c.page7.rtlf008"
            {<point name="construct.c.page7.rtlf008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf009
            #add-point:BEFORE FIELD rtlf009 name="construct.b.page7.rtlf009"
            {<point name="construct.b.page7.rtlf009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf009
            
            #add-point:AFTER FIELD rtlf009 name="construct.a.page7.rtlf009"
            {<point name="construct.a.page7.rtlf009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf009
            #add-point:ON ACTION controlp INFIELD rtlf009 name="construct.c.page7.rtlf009"
            {<point name="construct.c.page7.rtlf009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf010
            #add-point:BEFORE FIELD rtlf010 name="construct.b.page7.rtlf010"
            {<point name="construct.b.page7.rtlf010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf010
            
            #add-point:AFTER FIELD rtlf010 name="construct.a.page7.rtlf010"
            {<point name="construct.a.page7.rtlf010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf010
            #add-point:ON ACTION controlp INFIELD rtlf010 name="construct.c.page7.rtlf010"
            {<point name="construct.c.page7.rtlf010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf013
            #add-point:BEFORE FIELD rtlf013 name="construct.b.page7.rtlf013"
            {<point name="construct.b.page7.rtlf013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf013
            
            #add-point:AFTER FIELD rtlf013 name="construct.a.page7.rtlf013"
            {<point name="construct.a.page7.rtlf013" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf013
            #add-point:ON ACTION controlp INFIELD rtlf013 name="construct.c.page7.rtlf013"
            {<point name="construct.c.page7.rtlf013" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf014
            #add-point:BEFORE FIELD rtlf014 name="construct.b.page7.rtlf014"
            {<point name="construct.b.page7.rtlf014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf014
            
            #add-point:AFTER FIELD rtlf014 name="construct.a.page7.rtlf014"
            {<point name="construct.a.page7.rtlf014" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf014
            #add-point:ON ACTION controlp INFIELD rtlf014 name="construct.c.page7.rtlf014"
            {<point name="construct.c.page7.rtlf014" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf015
            #add-point:BEFORE FIELD rtlf015 name="construct.b.page7.rtlf015"
            {<point name="construct.b.page7.rtlf015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf015
            
            #add-point:AFTER FIELD rtlf015 name="construct.a.page7.rtlf015"
            {<point name="construct.a.page7.rtlf015" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf015
            #add-point:ON ACTION controlp INFIELD rtlf015 name="construct.c.page7.rtlf015"
            {<point name="construct.c.page7.rtlf015" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf016
            #add-point:BEFORE FIELD rtlf016 name="construct.b.page7.rtlf016"
            {<point name="construct.b.page7.rtlf016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf016
            
            #add-point:AFTER FIELD rtlf016 name="construct.a.page7.rtlf016"
            {<point name="construct.a.page7.rtlf016" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf016
            #add-point:ON ACTION controlp INFIELD rtlf016 name="construct.c.page7.rtlf016"
            {<point name="construct.c.page7.rtlf016" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf017
            #add-point:BEFORE FIELD rtlf017 name="construct.b.page7.rtlf017"
            {<point name="construct.b.page7.rtlf017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf017
            
            #add-point:AFTER FIELD rtlf017 name="construct.a.page7.rtlf017"
            {<point name="construct.a.page7.rtlf017" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf017
            #add-point:ON ACTION controlp INFIELD rtlf017 name="construct.c.page7.rtlf017"
            {<point name="construct.c.page7.rtlf017" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf018
            #add-point:BEFORE FIELD rtlf018 name="construct.b.page7.rtlf018"
            {<point name="construct.b.page7.rtlf018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf018
            
            #add-point:AFTER FIELD rtlf018 name="construct.a.page7.rtlf018"
            {<point name="construct.a.page7.rtlf018" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf018
            #add-point:ON ACTION controlp INFIELD rtlf018 name="construct.c.page7.rtlf018"
            {<point name="construct.c.page7.rtlf018" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf020
            #add-point:BEFORE FIELD rtlf020 name="construct.b.page7.rtlf020"
            {<point name="construct.b.page7.rtlf020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf020
            
            #add-point:AFTER FIELD rtlf020 name="construct.a.page7.rtlf020"
            {<point name="construct.a.page7.rtlf020" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf020
            #add-point:ON ACTION controlp INFIELD rtlf020 name="construct.c.page7.rtlf020"
            {<point name="construct.c.page7.rtlf020" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf021
            #add-point:BEFORE FIELD rtlf021 name="construct.b.page7.rtlf021"
            {<point name="construct.b.page7.rtlf021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf021
            
            #add-point:AFTER FIELD rtlf021 name="construct.a.page7.rtlf021"
            {<point name="construct.a.page7.rtlf021" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf021
            #add-point:ON ACTION controlp INFIELD rtlf021 name="construct.c.page7.rtlf021"
            {<point name="construct.c.page7.rtlf021" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf022
            #add-point:BEFORE FIELD rtlf022 name="construct.b.page7.rtlf022"
            {<point name="construct.b.page7.rtlf022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf022
            
            #add-point:AFTER FIELD rtlf022 name="construct.a.page7.rtlf022"
            {<point name="construct.a.page7.rtlf022" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf022
            #add-point:ON ACTION controlp INFIELD rtlf022 name="construct.c.page7.rtlf022"
            {<point name="construct.c.page7.rtlf022" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf024
            #add-point:BEFORE FIELD rtlf024 name="construct.b.page7.rtlf024"
            {<point name="construct.b.page7.rtlf024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf024
            
            #add-point:AFTER FIELD rtlf024 name="construct.a.page7.rtlf024"
            {<point name="construct.a.page7.rtlf024" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf024
            #add-point:ON ACTION controlp INFIELD rtlf024 name="construct.c.page7.rtlf024"
            {<point name="construct.c.page7.rtlf024" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf025
            #add-point:BEFORE FIELD rtlf025 name="construct.b.page7.rtlf025"
            {<point name="construct.b.page7.rtlf025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf025
            
            #add-point:AFTER FIELD rtlf025 name="construct.a.page7.rtlf025"
            {<point name="construct.a.page7.rtlf025" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf025
            #add-point:ON ACTION controlp INFIELD rtlf025 name="construct.c.page7.rtlf025"
            {<point name="construct.c.page7.rtlf025" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf026
            #add-point:BEFORE FIELD rtlf026 name="construct.b.page7.rtlf026"
            {<point name="construct.b.page7.rtlf026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf026
            
            #add-point:AFTER FIELD rtlf026 name="construct.a.page7.rtlf026"
            {<point name="construct.a.page7.rtlf026" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf026
            #add-point:ON ACTION controlp INFIELD rtlf026 name="construct.c.page7.rtlf026"
            {<point name="construct.c.page7.rtlf026" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf037
            #add-point:BEFORE FIELD rtlf037 name="construct.b.page7.rtlf037"
            {<point name="construct.b.page7.rtlf037" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf037
            
            #add-point:AFTER FIELD rtlf037 name="construct.a.page7.rtlf037"
            {<point name="construct.a.page7.rtlf037" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtlf037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf037
            #add-point:ON ACTION controlp INFIELD rtlf037 name="construct.c.page7.rtlf037"
            {<point name="construct.c.page7.rtlf037" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
            INITIALIZE g_wc2_table4 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "deag_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "deah_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "deai_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "deaf_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "rtlf_t" 
                     LET g_wc2_table4 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION

{</section>}

{<section id="adet402.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION adet402_filter()
   #add-point:filter段define name="filter.define_customerization"
   {<point name="filter.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   {<point name="filter.define"/>}
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   {<point name="filter.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON deagsite,deagdocno,deagdocdt,deag001,deag002,deag003,deag004
                          FROM s_browse[1].b_deagsite,s_browse[1].b_deagdocno,s_browse[1].b_deagdocdt, 
                              s_browse[1].b_deag001,s_browse[1].b_deag002,s_browse[1].b_deag003,s_browse[1].b_deag004 

 
         BEFORE CONSTRUCT
               DISPLAY adet402_filter_parser('deagsite') TO s_browse[1].b_deagsite
            DISPLAY adet402_filter_parser('deagdocno') TO s_browse[1].b_deagdocno
            DISPLAY adet402_filter_parser('deagdocdt') TO s_browse[1].b_deagdocdt
            DISPLAY adet402_filter_parser('deag001') TO s_browse[1].b_deag001
            DISPLAY adet402_filter_parser('deag002') TO s_browse[1].b_deag002
            DISPLAY adet402_filter_parser('deag003') TO s_browse[1].b_deag003
            DISPLAY adet402_filter_parser('deag004') TO s_browse[1].b_deag004
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL adet402_filter_show('deagsite')
   CALL adet402_filter_show('deagdocno')
   CALL adet402_filter_show('deagdocdt')
   CALL adet402_filter_show('deag001')
   CALL adet402_filter_show('deag002')
   CALL adet402_filter_show('deag003')
   CALL adet402_filter_show('deag004')
 
END FUNCTION

{</section>}

{<section id="adet402.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION adet402_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   {<point name="filter_parser.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   {<point name="filter_parser.define"/>}
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION

{</section>}

{<section id="adet402.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION adet402_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = adet402_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION

{</section>}

{<section id="adet402.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION adet402_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   {<point name="query.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   {<point name="query.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   {<point name="query.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_deah_d.clear()
   CALL g_deah2_d.clear()
   CALL g_deah5_d.clear()
   CALL g_deah7_d.clear()
 
   
   #add-point:query段other name="query.other"
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL adet402_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL adet402_browser_fill("")
      CALL adet402_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL adet402_filter_show('deagsite')
   CALL adet402_filter_show('deagdocno')
   CALL adet402_filter_show('deagdocdt')
   CALL adet402_filter_show('deag001')
   CALL adet402_filter_show('deag002')
   CALL adet402_filter_show('deag003')
   CALL adet402_filter_show('deag004')
   CALL adet402_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL adet402_fetch("F") 
      #顯示單身筆數
      CALL adet402_idx_chk()
   END IF
 
END FUNCTION

{</section>}

{<section id="adet402.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION adet402_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   {<point name="fetch.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   {<point name="fetch.pre_function"/>}
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_deag_m.deagdocno = g_browser[g_current_idx].b_deagdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE adet402_master_referesh USING g_deag_m.deagdocno INTO g_deag_m.deagsite,g_deag_m.deagdocdt, 
       g_deag_m.deagdocno,g_deag_m.deag002,g_deag_m.deag003,g_deag_m.deag004,g_deag_m.deag001,g_deag_m.deag005, 
       g_deag_m.deag006,g_deag_m.deagunit,g_deag_m.deagstus,g_deag_m.deagownid,g_deag_m.deagowndp,g_deag_m.deagcrtid, 
       g_deag_m.deagcrtdp,g_deag_m.deagcrtdt,g_deag_m.deagmodid,g_deag_m.deagcnfdt,g_deag_m.deagmoddt, 
       g_deag_m.deagcnfid,g_deag_m.deagsite_desc,g_deag_m.deag002_desc,g_deag_m.deag003_desc,g_deag_m.deag004_desc, 
       g_deag_m.deagownid_desc,g_deag_m.deagowndp_desc,g_deag_m.deagcrtid_desc,g_deag_m.deagcrtdp_desc, 
       g_deag_m.deagmodid_desc,g_deag_m.deagcnfid_desc
   
   #遮罩相關處理
   LET g_deag_m_mask_o.* =  g_deag_m.*
   CALL adet402_deag_t_mask()
   LET g_deag_m_mask_n.* =  g_deag_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adet402_set_act_visible()   
   CALL adet402_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_deag_m_t.* = g_deag_m.*
   LET g_deag_m_o.* = g_deag_m.*
   
   LET g_data_owner = g_deag_m.deagownid      
   LET g_data_dept  = g_deag_m.deagowndp
   
   #重新顯示   
   CALL adet402_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION

{</section>}

{<section id="adet402.insert" >}
#+ 資料新增
PRIVATE FUNCTION adet402_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   {<point name="insert.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   {<point name="insert.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   {<point name="insert.pre_function"/>}
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_deah_d.clear()   
   CALL g_deah2_d.clear()  
   CALL g_deah5_d.clear()  
   CALL g_deah7_d.clear()  
 
 
   INITIALIZE g_deag_m.* LIKE deag_t.*             #DEFAULT 設定
   
   LET g_deagdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_deag_m.deagownid = g_user
      LET g_deag_m.deagowndp = g_dept
      LET g_deag_m.deagcrtid = g_user
      LET g_deag_m.deagcrtdp = g_dept 
      LET g_deag_m.deagcrtdt = cl_get_current()
      LET g_deag_m.deagmodid = g_user
      LET g_deag_m.deagmoddt = cl_get_current()
      LET g_deag_m.deagstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值 name="insert.default"
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_deag_m_t.* = g_deag_m.*
      LET g_deag_m_o.* = g_deag_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_deag_m.deagstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL adet402_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_deag_m.* TO NULL
         INITIALIZE g_deah_d TO NULL
         INITIALIZE g_deah2_d TO NULL
         INITIALIZE g_deah5_d TO NULL
         INITIALIZE g_deah7_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL adet402_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_deah_d.clear()
      #CALL g_deah2_d.clear()
      #CALL g_deah5_d.clear()
      #CALL g_deah7_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adet402_set_act_visible()   
   CALL adet402_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_deagdocno_t = g_deag_m.deagdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " deagent = '" ||g_enterprise|| "' AND",
                      " deagdocno = '", g_deag_m.deagdocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL adet402_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE adet402_cl
   
   CALL adet402_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE adet402_master_referesh USING g_deag_m.deagdocno INTO g_deag_m.deagsite,g_deag_m.deagdocdt, 
       g_deag_m.deagdocno,g_deag_m.deag002,g_deag_m.deag003,g_deag_m.deag004,g_deag_m.deag001,g_deag_m.deag005, 
       g_deag_m.deag006,g_deag_m.deagunit,g_deag_m.deagstus,g_deag_m.deagownid,g_deag_m.deagowndp,g_deag_m.deagcrtid, 
       g_deag_m.deagcrtdp,g_deag_m.deagcrtdt,g_deag_m.deagmodid,g_deag_m.deagcnfdt,g_deag_m.deagmoddt, 
       g_deag_m.deagcnfid,g_deag_m.deagsite_desc,g_deag_m.deag002_desc,g_deag_m.deag003_desc,g_deag_m.deag004_desc, 
       g_deag_m.deagownid_desc,g_deag_m.deagowndp_desc,g_deag_m.deagcrtid_desc,g_deag_m.deagcrtdp_desc, 
       g_deag_m.deagmodid_desc,g_deag_m.deagcnfid_desc
   
   
   #遮罩相關處理
   LET g_deag_m_mask_o.* =  g_deag_m.*
   CALL adet402_deag_t_mask()
   LET g_deag_m_mask_n.* =  g_deag_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_deag_m.deagsite,g_deag_m.deagsite_desc,g_deag_m.deagdocdt,g_deag_m.deagdocno,g_deag_m.deag002, 
       g_deag_m.deag002_desc,g_deag_m.deag003,g_deag_m.deag003_desc,g_deag_m.deag004,g_deag_m.deag004_desc, 
       g_deag_m.deag001,g_deag_m.total,g_deag_m.deag005,g_deag_m.deag006,g_deag_m.deagunit,g_deag_m.deagstus, 
       g_deag_m.deagownid,g_deag_m.deagownid_desc,g_deag_m.deagowndp,g_deag_m.deagowndp_desc,g_deag_m.deagcrtid, 
       g_deag_m.deagcrtid_desc,g_deag_m.deagcrtdp,g_deag_m.deagcrtdp_desc,g_deag_m.deagcrtdt,g_deag_m.deagmodid, 
       g_deag_m.deagmodid_desc,g_deag_m.deagcnfdt,g_deag_m.deagmoddt,g_deag_m.deagcnfid,g_deag_m.deagcnfid_desc, 
       g_deag_m.deaj001,g_deag_m.deaj002,g_deag_m.deaj003,g_deag_m.deaj004,g_deag_m.deaj005,g_deag_m.deaj006, 
       g_deag_m.deaj007,g_deag_m.deaj008,g_deag_m.deaj009
   
   #add-point:新增結束後 name="insert.after"
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL adet402_msgcentre_notify('insert')
   
END FUNCTION

{</section>}

{<section id="adet402.modify" >}
#+ 資料修改
PRIVATE FUNCTION adet402_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   {<point name="modify.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
   DEFINE l_wc2_table4   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   {<point name="modify.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   {<point name="modify.pre_function"/>}
   #end add-point
   
   #保存單頭舊值
   LET g_deag_m_t.* = g_deag_m.*
   LET g_deag_m_o.* = g_deag_m.*
   
   IF g_deag_m.deagdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_deagdocno_t = g_deag_m.deagdocno
 
   CALL s_transaction_begin()
   
   OPEN adet402_cl USING g_enterprise,g_deag_m.deagdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN adet402_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE adet402_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE adet402_master_referesh USING g_deag_m.deagdocno INTO g_deag_m.deagsite,g_deag_m.deagdocdt, 
       g_deag_m.deagdocno,g_deag_m.deag002,g_deag_m.deag003,g_deag_m.deag004,g_deag_m.deag001,g_deag_m.deag005, 
       g_deag_m.deag006,g_deag_m.deagunit,g_deag_m.deagstus,g_deag_m.deagownid,g_deag_m.deagowndp,g_deag_m.deagcrtid, 
       g_deag_m.deagcrtdp,g_deag_m.deagcrtdt,g_deag_m.deagmodid,g_deag_m.deagcnfdt,g_deag_m.deagmoddt, 
       g_deag_m.deagcnfid,g_deag_m.deagsite_desc,g_deag_m.deag002_desc,g_deag_m.deag003_desc,g_deag_m.deag004_desc, 
       g_deag_m.deagownid_desc,g_deag_m.deagowndp_desc,g_deag_m.deagcrtid_desc,g_deag_m.deagcrtdp_desc, 
       g_deag_m.deagmodid_desc,g_deag_m.deagcnfid_desc
   
   #檢查是否允許此動作
   IF NOT adet402_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_deag_m_mask_o.* =  g_deag_m.*
   CALL adet402_deag_t_mask()
   LET g_deag_m_mask_n.* =  g_deag_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
   #LET l_wc2_table4 = g_wc2_table4
   #LET l_wc2_table4 = " 1=1"
 
 
 
   
   CALL adet402_show()
   #add-point:modify段show之後 name="modify.after_show"
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
   #LET  g_wc2_table4 = l_wc2_table4 
 
 
 
    
   WHILE TRUE
      LET g_deagdocno_t = g_deag_m.deagdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_deag_m.deagmodid = g_user 
LET g_deag_m.deagmoddt = cl_get_current()
LET g_deag_m.deagmodid_desc = cl_get_username(g_deag_m.deagmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL adet402_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE deag_t SET (deagmodid,deagmoddt) = (g_deag_m.deagmodid,g_deag_m.deagmoddt)
          WHERE deagent = g_enterprise AND deagdocno = g_deagdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_deag_m.* = g_deag_m_t.*
         CALL adet402_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_deag_m.deagdocno != g_deag_m_t.deagdocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE deah_t SET deahdocno = g_deag_m.deagdocno
 
          WHERE deahent = g_enterprise AND deahdocno = g_deag_m_t.deagdocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "deah_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "deah_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE deai_t
            SET deaidocno = g_deag_m.deagdocno
 
          WHERE deaient = g_enterprise AND
                deaidocno = g_deagdocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "deai_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "deai_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update3"
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         
         UPDATE deaf_t
            SET deafdocno = g_deag_m.deagdocno
 
          WHERE deafent = g_enterprise AND
                deafdocno = g_deagdocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update3"
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "deaf_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "deaf_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update3"
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update4"
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         
         UPDATE rtlf_t
            SET rtlfdocno = g_deag_m.deagdocno
 
          WHERE rtlfent = g_enterprise AND
                rtlfdocno = g_deagdocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update4"
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtlf_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtlf_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update4"
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adet402_set_act_visible()   
   CALL adet402_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " deagent = '" ||g_enterprise|| "' AND",
                      " deagdocno = '", g_deag_m.deagdocno, "' "
 
   #填到對應位置
   CALL adet402_browser_fill("")
 
   CLOSE adet402_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL adet402_msgcentre_notify('modify')
 
END FUNCTION 

{</section>}

{<section id="adet402.input" >}
#+ 資料輸入
PRIVATE FUNCTION adet402_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   {<point name="input.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   {<point name="input.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   {<point name="input.pre_function"/>}
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_deag_m.deagsite,g_deag_m.deagsite_desc,g_deag_m.deagdocdt,g_deag_m.deagdocno,g_deag_m.deag002, 
       g_deag_m.deag002_desc,g_deag_m.deag003,g_deag_m.deag003_desc,g_deag_m.deag004,g_deag_m.deag004_desc, 
       g_deag_m.deag001,g_deag_m.total,g_deag_m.deag005,g_deag_m.deag006,g_deag_m.deagunit,g_deag_m.deagstus, 
       g_deag_m.deagownid,g_deag_m.deagownid_desc,g_deag_m.deagowndp,g_deag_m.deagowndp_desc,g_deag_m.deagcrtid, 
       g_deag_m.deagcrtid_desc,g_deag_m.deagcrtdp,g_deag_m.deagcrtdp_desc,g_deag_m.deagcrtdt,g_deag_m.deagmodid, 
       g_deag_m.deagmodid_desc,g_deag_m.deagcnfdt,g_deag_m.deagmoddt,g_deag_m.deagcnfid,g_deag_m.deagcnfid_desc, 
       g_deag_m.deaj001,g_deag_m.deaj002,g_deag_m.deaj003,g_deag_m.deaj004,g_deag_m.deaj005,g_deag_m.deaj006, 
       g_deag_m.deaj007,g_deag_m.deaj008,g_deag_m.deaj009
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT deahseq,deah000,deah001,deah002,deah003,deah009,deah005,deah004,deah007, 
       deah006,deah008,deah013 FROM deah_t WHERE deahent=? AND deahdocno=? AND deahseq=? FOR UPDATE" 

   #add-point:input段define_sql name="input.after_define_sql"
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adet402_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT deai001,deai002,deai003,deai004,deai005 FROM deai_t WHERE deaient=? AND  
       deaidocno=? AND deai001=? AND deai002=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adet402_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql3"
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT deafsite,deafstatu,deafdocdt,deaf001,deaf002,deaf003,deaf004,deaf012,deaf005, 
       deaf013,deaf014,deaf006,deaf027,deaf019,deaf007,deaf020,deaf028,deaf023,deaf015,deaf008,deaf009, 
       deaf016,deaf017,deaf018,deaf010,deaf011,deaf021,deaf022,deaf024,deaf025,deaf026 FROM deaf_t WHERE  
       deafent=? AND deafdocno=? AND deaf005=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql3"
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adet402_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql4"
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT rtlfdocno,rtlfseq,rtlf103,rtlfseq1,rtlf001,rtlf002,rtlf003,rtlf004,rtlf036, 
       rtlf005,rtlf007,rtlf006,rtlf008,rtlf009,rtlf010,rtlf013,rtlf014,rtlf015,rtlf016,rtlf017,rtlf018, 
       rtlf020,rtlf021,rtlf022,rtlf024,rtlf025,rtlf026,rtlf037 FROM rtlf_t WHERE rtlfent=? AND rtlfdocno=?  
       AND rtlfseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql4"
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adet402_bcl4 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL adet402_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL adet402_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_deag_m.deagsite,g_deag_m.deagdocdt,g_deag_m.deagdocno,g_deag_m.deag002,g_deag_m.deag003, 
       g_deag_m.deag004,g_deag_m.deag001,g_deag_m.deag005,g_deag_m.deag006,g_deag_m.deagunit,g_deag_m.deagstus, 
       g_deag_m.deaj001,g_deag_m.deaj002,g_deag_m.deaj003,g_deag_m.deaj004,g_deag_m.deaj005,g_deag_m.deaj006, 
       g_deag_m.deaj007,g_deag_m.deaj008,g_deag_m.deaj009
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

{</section>}

{<section id="adet402.input.head" >}
      #單頭段
      INPUT BY NAME g_deag_m.deagsite,g_deag_m.deagdocdt,g_deag_m.deagdocno,g_deag_m.deag002,g_deag_m.deag003, 
          g_deag_m.deag004,g_deag_m.deag001,g_deag_m.deag005,g_deag_m.deag006,g_deag_m.deagunit,g_deag_m.deagstus, 
          g_deag_m.deaj001,g_deag_m.deaj002,g_deag_m.deaj003,g_deag_m.deaj004,g_deag_m.deaj005,g_deag_m.deaj006, 
          g_deag_m.deaj007,g_deag_m.deaj008,g_deag_m.deaj009 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN adet402_cl USING g_enterprise,g_deag_m.deagdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN adet402_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE adet402_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL adet402_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL adet402_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deagsite
            
            #add-point:AFTER FIELD deagsite name="input.a.deagsite"
            {<point name="input.a.deagsite" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deagsite
            #add-point:BEFORE FIELD deagsite name="input.b.deagsite"
            {<point name="input.b.deagsite" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deagsite
            #add-point:ON CHANGE deagsite name="input.g.deagsite"
            {<point name="input.g.deagsite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deagdocdt
            #add-point:BEFORE FIELD deagdocdt name="input.b.deagdocdt"
            {<point name="input.b.deagdocdt" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deagdocdt
            
            #add-point:AFTER FIELD deagdocdt name="input.a.deagdocdt"
            {<point name="input.a.deagdocdt" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deagdocdt
            #add-point:ON CHANGE deagdocdt name="input.g.deagdocdt"
            {<point name="input.g.deagdocdt" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deagdocno
            #add-point:BEFORE FIELD deagdocno name="input.b.deagdocno"
            {<point name="input.b.deagdocno" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deagdocno
            
            #add-point:AFTER FIELD deagdocno name="input.a.deagdocno"
            {<point name="input.a.deagdocno" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deagdocno
            #add-point:ON CHANGE deagdocno name="input.g.deagdocno"
            {<point name="input.g.deagdocno" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deag002
            
            #add-point:AFTER FIELD deag002 name="input.a.deag002"
            {<point name="input.a.deag002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deag002
            #add-point:BEFORE FIELD deag002 name="input.b.deag002"
            {<point name="input.b.deag002" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deag002
            #add-point:ON CHANGE deag002 name="input.g.deag002"
            {<point name="input.g.deag002" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deag003
            
            #add-point:AFTER FIELD deag003 name="input.a.deag003"
            {<point name="input.a.deag003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deag003
            #add-point:BEFORE FIELD deag003 name="input.b.deag003"
            {<point name="input.b.deag003" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deag003
            #add-point:ON CHANGE deag003 name="input.g.deag003"
            {<point name="input.g.deag003" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deag004
            
            #add-point:AFTER FIELD deag004 name="input.a.deag004"
            {<point name="input.a.deag004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deag004
            #add-point:BEFORE FIELD deag004 name="input.b.deag004"
            {<point name="input.b.deag004" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deag004
            #add-point:ON CHANGE deag004 name="input.g.deag004"
            {<point name="input.g.deag004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deag001
            #add-point:BEFORE FIELD deag001 name="input.b.deag001"
            {<point name="input.b.deag001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deag001
            
            #add-point:AFTER FIELD deag001 name="input.a.deag001"
            {<point name="input.a.deag001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deag001
            #add-point:ON CHANGE deag001 name="input.g.deag001"
            {<point name="input.g.deag001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deag005
            #add-point:BEFORE FIELD deag005 name="input.b.deag005"
            {<point name="input.b.deag005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deag005
            
            #add-point:AFTER FIELD deag005 name="input.a.deag005"
            {<point name="input.a.deag005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deag005
            #add-point:ON CHANGE deag005 name="input.g.deag005"
            {<point name="input.g.deag005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deag006
            #add-point:BEFORE FIELD deag006 name="input.b.deag006"
            {<point name="input.b.deag006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deag006
            
            #add-point:AFTER FIELD deag006 name="input.a.deag006"
            {<point name="input.a.deag006" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deag006
            #add-point:ON CHANGE deag006 name="input.g.deag006"
            {<point name="input.g.deag006" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deagunit
            #add-point:BEFORE FIELD deagunit name="input.b.deagunit"
            {<point name="input.b.deagunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deagunit
            
            #add-point:AFTER FIELD deagunit name="input.a.deagunit"
            {<point name="input.a.deagunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deagunit
            #add-point:ON CHANGE deagunit name="input.g.deagunit"
            {<point name="input.g.deagunit" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deagstus
            #add-point:BEFORE FIELD deagstus name="input.b.deagstus"
            {<point name="input.b.deagstus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deagstus
            
            #add-point:AFTER FIELD deagstus name="input.a.deagstus"
            {<point name="input.a.deagstus" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deagstus
            #add-point:ON CHANGE deagstus name="input.g.deagstus"
            {<point name="input.g.deagstus" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaj001
            #add-point:BEFORE FIELD deaj001 name="input.b.deaj001"
            {<point name="input.b.deaj001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaj001
            
            #add-point:AFTER FIELD deaj001 name="input.a.deaj001"
            {<point name="input.a.deaj001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaj001
            #add-point:ON CHANGE deaj001 name="input.g.deaj001"
            {<point name="input.g.deaj001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaj002
            #add-point:BEFORE FIELD deaj002 name="input.b.deaj002"
            {<point name="input.b.deaj002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaj002
            
            #add-point:AFTER FIELD deaj002 name="input.a.deaj002"
            {<point name="input.a.deaj002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaj002
            #add-point:ON CHANGE deaj002 name="input.g.deaj002"
            {<point name="input.g.deaj002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaj003
            #add-point:BEFORE FIELD deaj003 name="input.b.deaj003"
            {<point name="input.b.deaj003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaj003
            
            #add-point:AFTER FIELD deaj003 name="input.a.deaj003"
            {<point name="input.a.deaj003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaj003
            #add-point:ON CHANGE deaj003 name="input.g.deaj003"
            {<point name="input.g.deaj003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaj004
            #add-point:BEFORE FIELD deaj004 name="input.b.deaj004"
            {<point name="input.b.deaj004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaj004
            
            #add-point:AFTER FIELD deaj004 name="input.a.deaj004"
            {<point name="input.a.deaj004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaj004
            #add-point:ON CHANGE deaj004 name="input.g.deaj004"
            {<point name="input.g.deaj004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaj005
            #add-point:BEFORE FIELD deaj005 name="input.b.deaj005"
            {<point name="input.b.deaj005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaj005
            
            #add-point:AFTER FIELD deaj005 name="input.a.deaj005"
            {<point name="input.a.deaj005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaj005
            #add-point:ON CHANGE deaj005 name="input.g.deaj005"
            {<point name="input.g.deaj005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaj006
            #add-point:BEFORE FIELD deaj006 name="input.b.deaj006"
            {<point name="input.b.deaj006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaj006
            
            #add-point:AFTER FIELD deaj006 name="input.a.deaj006"
            {<point name="input.a.deaj006" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaj006
            #add-point:ON CHANGE deaj006 name="input.g.deaj006"
            {<point name="input.g.deaj006" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaj007
            #add-point:BEFORE FIELD deaj007 name="input.b.deaj007"
            {<point name="input.b.deaj007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaj007
            
            #add-point:AFTER FIELD deaj007 name="input.a.deaj007"
            {<point name="input.a.deaj007" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaj007
            #add-point:ON CHANGE deaj007 name="input.g.deaj007"
            {<point name="input.g.deaj007" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaj008
            #add-point:BEFORE FIELD deaj008 name="input.b.deaj008"
            {<point name="input.b.deaj008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaj008
            
            #add-point:AFTER FIELD deaj008 name="input.a.deaj008"
            {<point name="input.a.deaj008" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaj008
            #add-point:ON CHANGE deaj008 name="input.g.deaj008"
            {<point name="input.g.deaj008" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaj009
            #add-point:BEFORE FIELD deaj009 name="input.b.deaj009"
            {<point name="input.b.deaj009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaj009
            
            #add-point:AFTER FIELD deaj009 name="input.a.deaj009"
            {<point name="input.a.deaj009" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaj009
            #add-point:ON CHANGE deaj009 name="input.g.deaj009"
            {<point name="input.g.deaj009" />}
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.deagsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deagsite
            #add-point:ON ACTION controlp INFIELD deagsite name="input.c.deagsite"
            {<point name="input.c.deagsite" />}
            #END add-point
 
 
         #Ctrlp:input.c.deagdocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deagdocdt
            #add-point:ON ACTION controlp INFIELD deagdocdt name="input.c.deagdocdt"
            {<point name="input.c.deagdocdt" />}
            #END add-point
 
 
         #Ctrlp:input.c.deagdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deagdocno
            #add-point:ON ACTION controlp INFIELD deagdocno name="input.c.deagdocno"
            {<point name="input.c.deagdocno" />}
            #END add-point
 
 
         #Ctrlp:input.c.deag002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deag002
            #add-point:ON ACTION controlp INFIELD deag002 name="input.c.deag002"
            {<point name="input.c.deag002" />}
            #END add-point
 
 
         #Ctrlp:input.c.deag003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deag003
            #add-point:ON ACTION controlp INFIELD deag003 name="input.c.deag003"
            {<point name="input.c.deag003" />}
            #END add-point
 
 
         #Ctrlp:input.c.deag004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deag004
            #add-point:ON ACTION controlp INFIELD deag004 name="input.c.deag004"
            {<point name="input.c.deag004" />}
            #END add-point
 
 
         #Ctrlp:input.c.deag001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deag001
            #add-point:ON ACTION controlp INFIELD deag001 name="input.c.deag001"
            {<point name="input.c.deag001" />}
            #END add-point
 
 
         #Ctrlp:input.c.deag005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deag005
            #add-point:ON ACTION controlp INFIELD deag005 name="input.c.deag005"
            {<point name="input.c.deag005" />}
            #END add-point
 
 
         #Ctrlp:input.c.deag006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deag006
            #add-point:ON ACTION controlp INFIELD deag006 name="input.c.deag006"
            {<point name="input.c.deag006" />}
            #END add-point
 
 
         #Ctrlp:input.c.deagunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deagunit
            #add-point:ON ACTION controlp INFIELD deagunit name="input.c.deagunit"
            {<point name="input.c.deagunit" />}
            #END add-point
 
 
         #Ctrlp:input.c.deagstus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deagstus
            #add-point:ON ACTION controlp INFIELD deagstus name="input.c.deagstus"
            {<point name="input.c.deagstus" />}
            #END add-point
 
 
         #Ctrlp:input.c.deaj001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaj001
            #add-point:ON ACTION controlp INFIELD deaj001 name="input.c.deaj001"
            {<point name="input.c.deaj001" />}
            #END add-point
 
 
         #Ctrlp:input.c.deaj002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaj002
            #add-point:ON ACTION controlp INFIELD deaj002 name="input.c.deaj002"
            {<point name="input.c.deaj002" />}
            #END add-point
 
 
         #Ctrlp:input.c.deaj003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaj003
            #add-point:ON ACTION controlp INFIELD deaj003 name="input.c.deaj003"
            {<point name="input.c.deaj003" />}
            #END add-point
 
 
         #Ctrlp:input.c.deaj004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaj004
            #add-point:ON ACTION controlp INFIELD deaj004 name="input.c.deaj004"
            {<point name="input.c.deaj004" />}
            #END add-point
 
 
         #Ctrlp:input.c.deaj005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaj005
            #add-point:ON ACTION controlp INFIELD deaj005 name="input.c.deaj005"
            {<point name="input.c.deaj005" />}
            #END add-point
 
 
         #Ctrlp:input.c.deaj006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaj006
            #add-point:ON ACTION controlp INFIELD deaj006 name="input.c.deaj006"
            {<point name="input.c.deaj006" />}
            #END add-point
 
 
         #Ctrlp:input.c.deaj007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaj007
            #add-point:ON ACTION controlp INFIELD deaj007 name="input.c.deaj007"
            {<point name="input.c.deaj007" />}
            #END add-point
 
 
         #Ctrlp:input.c.deaj008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaj008
            #add-point:ON ACTION controlp INFIELD deaj008 name="input.c.deaj008"
            {<point name="input.c.deaj008" />}
            #END add-point
 
 
         #Ctrlp:input.c.deaj009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaj009
            #add-point:ON ACTION controlp INFIELD deaj009 name="input.c.deaj009"
            {<point name="input.c.deaj009" />}
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_deag_m.deagdocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO deag_t (deagent,deagsite,deagdocdt,deagdocno,deag002,deag003,deag004,deag001, 
                   deag005,deag006,deagunit,deagstus,deagownid,deagowndp,deagcrtid,deagcrtdp,deagcrtdt, 
                   deagmodid,deagcnfdt,deagmoddt,deagcnfid)
               VALUES (g_enterprise,g_deag_m.deagsite,g_deag_m.deagdocdt,g_deag_m.deagdocno,g_deag_m.deag002, 
                   g_deag_m.deag003,g_deag_m.deag004,g_deag_m.deag001,g_deag_m.deag005,g_deag_m.deag006, 
                   g_deag_m.deagunit,g_deag_m.deagstus,g_deag_m.deagownid,g_deag_m.deagowndp,g_deag_m.deagcrtid, 
                   g_deag_m.deagcrtdp,g_deag_m.deagcrtdt,g_deag_m.deagmodid,g_deag_m.deagcnfdt,g_deag_m.deagmoddt, 
                   g_deag_m.deagcnfid) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_deag_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL adet402_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL adet402_b_fill()
                  CALL adet402_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL adet402_deag_t_mask_restore('restore_mask_o')
               
               UPDATE deag_t SET (deagsite,deagdocdt,deagdocno,deag002,deag003,deag004,deag001,deag005, 
                   deag006,deagunit,deagstus,deagownid,deagowndp,deagcrtid,deagcrtdp,deagcrtdt,deagmodid, 
                   deagcnfdt,deagmoddt,deagcnfid) = (g_deag_m.deagsite,g_deag_m.deagdocdt,g_deag_m.deagdocno, 
                   g_deag_m.deag002,g_deag_m.deag003,g_deag_m.deag004,g_deag_m.deag001,g_deag_m.deag005, 
                   g_deag_m.deag006,g_deag_m.deagunit,g_deag_m.deagstus,g_deag_m.deagownid,g_deag_m.deagowndp, 
                   g_deag_m.deagcrtid,g_deag_m.deagcrtdp,g_deag_m.deagcrtdt,g_deag_m.deagmodid,g_deag_m.deagcnfdt, 
                   g_deag_m.deagmoddt,g_deag_m.deagcnfid)
                WHERE deagent = g_enterprise AND deagdocno = g_deagdocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "deag_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL adet402_deag_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_deag_m_t)
               LET g_log2 = util.JSON.stringify(g_deag_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_deagdocno_t = g_deag_m.deagdocno
 
            
      END INPUT
   

{</section>}

{<section id="adet402.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_deah_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
{<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_deah_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adet402_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_deah_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
{<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
{<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN adet402_cl USING g_enterprise,g_deag_m.deagdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN adet402_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE adet402_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_deah_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_deah_d[l_ac].deahseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_deah_d_t.* = g_deah_d[l_ac].*  #BACKUP
               LET g_deah_d_o.* = g_deah_d[l_ac].*  #BACKUP
               CALL adet402_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
{<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL adet402_set_no_entry_b(l_cmd)
               IF NOT adet402_lock_b("deah_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adet402_bcl INTO g_deah_d[l_ac].deahseq,g_deah_d[l_ac].deah000,g_deah_d[l_ac].deah001, 
                      g_deah_d[l_ac].deah002,g_deah_d[l_ac].deah003,g_deah_d[l_ac].deah009,g_deah_d[l_ac].deah005, 
                      g_deah_d[l_ac].deah004,g_deah_d[l_ac].deah007,g_deah_d[l_ac].deah006,g_deah_d[l_ac].deah008, 
                      g_deah_d[l_ac].deah013
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_deah_d_t.deahseq,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_deah_d_mask_o[l_ac].* =  g_deah_d[l_ac].*
                  CALL adet402_deah_t_mask()
                  LET g_deah_d_mask_n[l_ac].* =  g_deah_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL adet402_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
{<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_deah_d[l_ac].* TO NULL 
            INITIALIZE g_deah_d_t.* TO NULL 
            INITIALIZE g_deah_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_deah_d[l_ac].deah000 = "1"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
{<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_deah_d_t.* = g_deah_d[l_ac].*     #新輸入資料
            LET g_deah_d_o.* = g_deah_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adet402_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
{<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL adet402_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_deah_d[li_reproduce_target].* = g_deah_d[li_reproduce].*
 
               LET g_deah_d[li_reproduce_target].deahseq = NULL
 
            END IF
            
            #add-point:modify段before insert name="input.body.before_insert"
{<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
{<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM deah_t 
             WHERE deahent = g_enterprise AND deahdocno = g_deag_m.deagdocno
 
               AND deahseq = g_deah_d[l_ac].deahseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
{<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_deag_m.deagdocno
               LET gs_keys[2] = g_deah_d[g_detail_idx].deahseq
               CALL adet402_insert_b('deah_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
{<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_deah_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "deah_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adet402_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
{<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
{<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
{<point name="input.body.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
{<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_deag_m.deagdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_deah_d_t.deahseq
 
            
               #刪除同層單身
               IF NOT adet402_delete_b('deah_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adet402_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT adet402_key_delete_b(gs_keys,'deah_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adet402_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中 name="input.body.m_delete"
{<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE adet402_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
{<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_deah_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
{<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_deah_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deahseq
            #add-point:BEFORE FIELD deahseq name="input.b.page1.deahseq"
{<point name="input.b.page1.deahseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deahseq
            
            #add-point:AFTER FIELD deahseq name="input.a.page1.deahseq"
{<point name="input.a.page1.deahseq" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deahseq
            #add-point:ON CHANGE deahseq name="input.g.page1.deahseq"
{<point name="input.g.page1.deahseq" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah000
            
            #add-point:AFTER FIELD deah000 name="input.a.page1.deah000"
{<point name="input.a.page1.deah000" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah000
            #add-point:BEFORE FIELD deah000 name="input.b.page1.deah000"
{<point name="input.b.page1.deah000" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deah000
            #add-point:ON CHANGE deah000 name="input.g.page1.deah000"
{<point name="input.g.page1.deah000" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah001
            
            #add-point:AFTER FIELD deah001 name="input.a.page1.deah001"
{<point name="input.a.page1.deah001" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah001
            #add-point:BEFORE FIELD deah001 name="input.b.page1.deah001"
{<point name="input.b.page1.deah001" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deah001
            #add-point:ON CHANGE deah001 name="input.g.page1.deah001"
{<point name="input.g.page1.deah001" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah002
            
            #add-point:AFTER FIELD deah002 name="input.a.page1.deah002"
{<point name="input.a.page1.deah002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah002
            #add-point:BEFORE FIELD deah002 name="input.b.page1.deah002"
{<point name="input.b.page1.deah002" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deah002
            #add-point:ON CHANGE deah002 name="input.g.page1.deah002"
{<point name="input.g.page1.deah002" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah003
            
            #add-point:AFTER FIELD deah003 name="input.a.page1.deah003"
{<point name="input.a.page1.deah003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah003
            #add-point:BEFORE FIELD deah003 name="input.b.page1.deah003"
{<point name="input.b.page1.deah003" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deah003
            #add-point:ON CHANGE deah003 name="input.g.page1.deah003"
{<point name="input.g.page1.deah003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah009
            #add-point:BEFORE FIELD deah009 name="input.b.page1.deah009"
{<point name="input.b.page1.deah009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah009
            
            #add-point:AFTER FIELD deah009 name="input.a.page1.deah009"
{<point name="input.a.page1.deah009" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deah009
            #add-point:ON CHANGE deah009 name="input.g.page1.deah009"
{<point name="input.g.page1.deah009" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah005
            
            #add-point:AFTER FIELD deah005 name="input.a.page1.deah005"
{<point name="input.a.page1.deah005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah005
            #add-point:BEFORE FIELD deah005 name="input.b.page1.deah005"
{<point name="input.b.page1.deah005" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deah005
            #add-point:ON CHANGE deah005 name="input.g.page1.deah005"
{<point name="input.g.page1.deah005" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah004
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_deah_d[l_ac].deah004,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD deah004
            END IF 
 
 
 
            #add-point:AFTER FIELD deah004 name="input.a.page1.deah004"
{<point name="input.a.page1.deah004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah004
            #add-point:BEFORE FIELD deah004 name="input.b.page1.deah004"
{<point name="input.b.page1.deah004" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deah004
            #add-point:ON CHANGE deah004 name="input.g.page1.deah004"
{<point name="input.g.page1.deah004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah007
            #add-point:BEFORE FIELD deah007 name="input.b.page1.deah007"
{<point name="input.b.page1.deah007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah007
            
            #add-point:AFTER FIELD deah007 name="input.a.page1.deah007"
{<point name="input.a.page1.deah007" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deah007
            #add-point:ON CHANGE deah007 name="input.g.page1.deah007"
{<point name="input.g.page1.deah007" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah006
            #add-point:BEFORE FIELD deah006 name="input.b.page1.deah006"
{<point name="input.b.page1.deah006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah006
            
            #add-point:AFTER FIELD deah006 name="input.a.page1.deah006"
{<point name="input.a.page1.deah006" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deah006
            #add-point:ON CHANGE deah006 name="input.g.page1.deah006"
{<point name="input.g.page1.deah006" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah008
            #add-point:BEFORE FIELD deah008 name="input.b.page1.deah008"
{<point name="input.b.page1.deah008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah008
            
            #add-point:AFTER FIELD deah008 name="input.a.page1.deah008"
{<point name="input.a.page1.deah008" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deah008
            #add-point:ON CHANGE deah008 name="input.g.page1.deah008"
{<point name="input.g.page1.deah008" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deah013
            #add-point:BEFORE FIELD deah013 name="input.b.page1.deah013"
{<point name="input.b.page1.deah013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deah013
            
            #add-point:AFTER FIELD deah013 name="input.a.page1.deah013"
{<point name="input.a.page1.deah013" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deah013
            #add-point:ON CHANGE deah013 name="input.g.page1.deah013"
{<point name="input.g.page1.deah013" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.deahseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deahseq
            #add-point:ON ACTION controlp INFIELD deahseq name="input.c.page1.deahseq"
{<point name="input.c.page1.deahseq" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.deah000
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah000
            #add-point:ON ACTION controlp INFIELD deah000 name="input.c.page1.deah000"
{<point name="input.c.page1.deah000" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.deah001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah001
            #add-point:ON ACTION controlp INFIELD deah001 name="input.c.page1.deah001"
{<point name="input.c.page1.deah001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.deah002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah002
            #add-point:ON ACTION controlp INFIELD deah002 name="input.c.page1.deah002"
{<point name="input.c.page1.deah002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.deah003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah003
            #add-point:ON ACTION controlp INFIELD deah003 name="input.c.page1.deah003"
{<point name="input.c.page1.deah003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.deah009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah009
            #add-point:ON ACTION controlp INFIELD deah009 name="input.c.page1.deah009"
{<point name="input.c.page1.deah009" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.deah005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah005
            #add-point:ON ACTION controlp INFIELD deah005 name="input.c.page1.deah005"
{<point name="input.c.page1.deah005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.deah004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah004
            #add-point:ON ACTION controlp INFIELD deah004 name="input.c.page1.deah004"
{<point name="input.c.page1.deah004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.deah007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah007
            #add-point:ON ACTION controlp INFIELD deah007 name="input.c.page1.deah007"
{<point name="input.c.page1.deah007" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.deah006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah006
            #add-point:ON ACTION controlp INFIELD deah006 name="input.c.page1.deah006"
{<point name="input.c.page1.deah006" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.deah008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah008
            #add-point:ON ACTION controlp INFIELD deah008 name="input.c.page1.deah008"
{<point name="input.c.page1.deah008" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.deah013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deah013
            #add-point:ON ACTION controlp INFIELD deah013 name="input.c.page1.deah013"
{<point name="input.c.page1.deah013" />}
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_deah_d[l_ac].* = g_deah_d_t.*
               CLOSE adet402_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_deah_d[l_ac].deahseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_deah_d[l_ac].* = g_deah_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
{<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL adet402_deah_t_mask_restore('restore_mask_o')
      
               UPDATE deah_t SET (deahdocno,deahseq,deah000,deah001,deah002,deah003,deah009,deah005, 
                   deah004,deah007,deah006,deah008,deah013) = (g_deag_m.deagdocno,g_deah_d[l_ac].deahseq, 
                   g_deah_d[l_ac].deah000,g_deah_d[l_ac].deah001,g_deah_d[l_ac].deah002,g_deah_d[l_ac].deah003, 
                   g_deah_d[l_ac].deah009,g_deah_d[l_ac].deah005,g_deah_d[l_ac].deah004,g_deah_d[l_ac].deah007, 
                   g_deah_d[l_ac].deah006,g_deah_d[l_ac].deah008,g_deah_d[l_ac].deah013)
                WHERE deahent = g_enterprise AND deahdocno = g_deag_m.deagdocno 
 
                  AND deahseq = g_deah_d_t.deahseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
{<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "deah_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_deah_d[l_ac].* = g_deah_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "deah_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_deah_d[l_ac].* = g_deah_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_deag_m.deagdocno
               LET gs_keys_bak[1] = g_deagdocno_t
               LET gs_keys[2] = g_deah_d[g_detail_idx].deahseq
               LET gs_keys_bak[2] = g_deah_d_t.deahseq
               CALL adet402_update_b('deah_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL adet402_deah_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_deah_d[g_detail_idx].deahseq = g_deah_d_t.deahseq 
 
                  ) THEN
                  LET gs_keys[01] = g_deag_m.deagdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_deah_d_t.deahseq
 
                  CALL adet402_key_update_b(gs_keys,'deah_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_deag_m),util.JSON.stringify(g_deah_d_t)
               LET g_log2 = util.JSON.stringify(g_deag_m),util.JSON.stringify(g_deah_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
{<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
{<point name="input.body.after_row"/>}
            #end add-point
            CALL adet402_unlock_b("deah_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
{<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
{<point name="input.body.after_input"/>}
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_deah_d[li_reproduce_target].* = g_deah_d[li_reproduce].*
 
               LET g_deah_d[li_reproduce_target].deahseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_deah_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_deah_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_deah2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body2.before_input2"
{<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_deah2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adet402_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_deah2_d.getLength()
            #add-point:資料輸入前 name="input.body2.before_input"
{<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_deah2_d[l_ac].* TO NULL 
            INITIALIZE g_deah2_d_t.* TO NULL 
            INITIALIZE g_deah2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
            
            #add-point:modify段before備份 name="input.body2.insert.before_bak"
{<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_deah2_d_t.* = g_deah2_d[l_ac].*     #新輸入資料
            LET g_deah2_d_o.* = g_deah2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adet402_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body2.insert.after_set_entry_b"
{<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL adet402_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_deah2_d[li_reproduce_target].* = g_deah2_d[li_reproduce].*
 
               LET g_deah2_d[li_reproduce_target].deai001 = NULL
               LET g_deah2_d[li_reproduce_target].deai002 = NULL
            END IF
            
            #add-point:modify段before insert name="input.body2.before_insert"
{<point name="input.body2.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body2.before_row2"
{<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[2] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN adet402_cl USING g_enterprise,g_deag_m.deagdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN adet402_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE adet402_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_deah2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_deah2_d[l_ac].deai001 IS NOT NULL
               AND g_deah2_d[l_ac].deai002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_deah2_d_t.* = g_deah2_d[l_ac].*  #BACKUP
               LET g_deah2_d_o.* = g_deah2_d[l_ac].*  #BACKUP
               CALL adet402_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body2.after_set_entry_b"
{<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL adet402_set_no_entry_b(l_cmd)
               IF NOT adet402_lock_b("deai_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adet402_bcl2 INTO g_deah2_d[l_ac].deai001,g_deah2_d[l_ac].deai002,g_deah2_d[l_ac].deai003, 
                      g_deah2_d[l_ac].deai004,g_deah2_d[l_ac].deai005
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_deah2_d_mask_o[l_ac].* =  g_deah2_d[l_ac].*
                  CALL adet402_deai_t_mask()
                  LET g_deah2_d_mask_n[l_ac].* =  g_deah2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL adet402_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body2.before_row"
{<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body2.after_delete_d"
{<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body2.b_delete_ask"
{<point name="input.body2.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前 name="input.body2.b_delete"
{<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_deag_m.deagdocno
               LET gs_keys[gs_keys.getLength()+1] = g_deah2_d_t.deai001
               LET gs_keys[gs_keys.getLength()+1] = g_deah2_d_t.deai002
            
               #刪除同層單身
               IF NOT adet402_delete_b('deai_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adet402_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT adet402_key_delete_b(gs_keys,'deai_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adet402_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身2刪除中 name="input.body2.m_delete"
{<point name="input.body2.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE adet402_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後 name="input.body2.a_delete"
{<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_deah_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body2.after_delete"
{<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_deah2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前 name="input.body2.b_a_insert"
{<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM deai_t 
             WHERE deaient = g_enterprise AND deaidocno = g_deag_m.deagdocno
               AND deai001 = g_deah2_d[l_ac].deai001
               AND deai002 = g_deah2_d[l_ac].deai002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前 name="input.body2.b_insert"
{<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_deag_m.deagdocno
               LET gs_keys[2] = g_deah2_d[g_detail_idx].deai001
               LET gs_keys[3] = g_deah2_d[g_detail_idx].deai002
               CALL adet402_insert_b('deai_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2 name="input.body2.a_insert"
{<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_deah_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "deai_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adet402_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body2.after_insert"
{<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_deah2_d[l_ac].* = g_deah2_d_t.*
               CLOSE adet402_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_deah2_d[l_ac].* = g_deah2_d_t.*
            ELSE
               #add-point:單身page2修改前 name="input.body2.b_update"
{<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL adet402_deai_t_mask_restore('restore_mask_o')
                              
               UPDATE deai_t SET (deaidocno,deai001,deai002,deai003,deai004,deai005) = (g_deag_m.deagdocno, 
                   g_deah2_d[l_ac].deai001,g_deah2_d[l_ac].deai002,g_deah2_d[l_ac].deai003,g_deah2_d[l_ac].deai004, 
                   g_deah2_d[l_ac].deai005) #自訂欄位頁簽
                WHERE deaient = g_enterprise AND deaidocno = g_deag_m.deagdocno
                  AND deai001 = g_deah2_d_t.deai001 #項次 
                  AND deai002 = g_deah2_d_t.deai002
                  
               #add-point:單身page2修改中 name="input.body2.m_update"
{<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "deai_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_deah2_d[l_ac].* = g_deah2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "deai_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_deah2_d[l_ac].* = g_deah2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_deag_m.deagdocno
               LET gs_keys_bak[1] = g_deagdocno_t
               LET gs_keys[2] = g_deah2_d[g_detail_idx].deai001
               LET gs_keys_bak[2] = g_deah2_d_t.deai001
               LET gs_keys[3] = g_deah2_d[g_detail_idx].deai002
               LET gs_keys_bak[3] = g_deah2_d_t.deai002
               CALL adet402_update_b('deai_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL adet402_deai_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_deah2_d[g_detail_idx].deai001 = g_deah2_d_t.deai001 
                  AND g_deah2_d[g_detail_idx].deai002 = g_deah2_d_t.deai002 
                  ) THEN
                  LET gs_keys[01] = g_deag_m.deagdocno
                  LET gs_keys[gs_keys.getLength()+1] = g_deah2_d_t.deai001
                  LET gs_keys[gs_keys.getLength()+1] = g_deah2_d_t.deai002
                  CALL adet402_key_update_b(gs_keys,'deai_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_deag_m),util.JSON.stringify(g_deah2_d_t)
               LET g_log2 = util.JSON.stringify(g_deag_m),util.JSON.stringify(g_deah2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後 name="input.body2.a_update"
{<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deai001
            #add-point:BEFORE FIELD deai001 name="input.b.page2.deai001"
{<point name="input.b.page2.deai001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deai001
            
            #add-point:AFTER FIELD deai001 name="input.a.page2.deai001"
{<point name="input.a.page2.deai001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deai001
            #add-point:ON CHANGE deai001 name="input.g.page2.deai001"
{<point name="input.g.page2.deai001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deai002
            #add-point:BEFORE FIELD deai002 name="input.b.page2.deai002"
{<point name="input.b.page2.deai002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deai002
            
            #add-point:AFTER FIELD deai002 name="input.a.page2.deai002"
{<point name="input.a.page2.deai002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deai002
            #add-point:ON CHANGE deai002 name="input.g.page2.deai002"
{<point name="input.g.page2.deai002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deai003
            #add-point:BEFORE FIELD deai003 name="input.b.page2.deai003"
{<point name="input.b.page2.deai003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deai003
            
            #add-point:AFTER FIELD deai003 name="input.a.page2.deai003"
{<point name="input.a.page2.deai003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deai003
            #add-point:ON CHANGE deai003 name="input.g.page2.deai003"
{<point name="input.g.page2.deai003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deai004
            #add-point:BEFORE FIELD deai004 name="input.b.page2.deai004"
{<point name="input.b.page2.deai004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deai004
            
            #add-point:AFTER FIELD deai004 name="input.a.page2.deai004"
{<point name="input.a.page2.deai004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deai004
            #add-point:ON CHANGE deai004 name="input.g.page2.deai004"
{<point name="input.g.page2.deai004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deai005
            #add-point:BEFORE FIELD deai005 name="input.b.page2.deai005"
{<point name="input.b.page2.deai005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deai005
            
            #add-point:AFTER FIELD deai005 name="input.a.page2.deai005"
{<point name="input.a.page2.deai005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deai005
            #add-point:ON CHANGE deai005 name="input.g.page2.deai005"
{<point name="input.g.page2.deai005" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page2.deai001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deai001
            #add-point:ON ACTION controlp INFIELD deai001 name="input.c.page2.deai001"
{<point name="input.c.page2.deai001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.deai002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deai002
            #add-point:ON ACTION controlp INFIELD deai002 name="input.c.page2.deai002"
{<point name="input.c.page2.deai002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.deai003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deai003
            #add-point:ON ACTION controlp INFIELD deai003 name="input.c.page2.deai003"
{<point name="input.c.page2.deai003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.deai004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deai004
            #add-point:ON ACTION controlp INFIELD deai004 name="input.c.page2.deai004"
{<point name="input.c.page2.deai004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.deai005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deai005
            #add-point:ON ACTION controlp INFIELD deai005 name="input.c.page2.deai005"
{<point name="input.c.page2.deai005" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row name="input.body2.after_row"
{<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_deah2_d[l_ac].* = g_deah2_d_t.*
               END IF
               CLOSE adet402_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL adet402_unlock_b("deai_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2 name="input.body2.after_row2"
{<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body2.after_input"
{<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_deah2_d[li_reproduce_target].* = g_deah2_d[li_reproduce].*
 
               LET g_deah2_d[li_reproduce_target].deai001 = NULL
               LET g_deah2_d[li_reproduce_target].deai002 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_deah2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_deah2_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_deah5_d FROM s_detail5.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = FALSE,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body5.before_input2"
{<point name="input.body5.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_deah5_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adet402_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_deah5_d.getLength()
            #add-point:資料輸入前 name="input.body5.before_input"
{<point name="input.body5.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_deah5_d[l_ac].* TO NULL 
            INITIALIZE g_deah5_d_t.* TO NULL 
            INITIALIZE g_deah5_d_o.* TO NULL 
            #公用欄位給值(單身3)
            
            #自定義預設值(單身3)
                  LET g_deah5_d[l_ac].deaf012 = "10"
      LET g_deah5_d[l_ac].deaf014 = "1"
      LET g_deah5_d[l_ac].deaf006 = "0"
      LET g_deah5_d[l_ac].deaf027 = "0"
      LET g_deah5_d[l_ac].deaf019 = "0"
      LET g_deah5_d[l_ac].deaf007 = "0"
      LET g_deah5_d[l_ac].deaf020 = "0"
      LET g_deah5_d[l_ac].deaf028 = "0"
      LET g_deah5_d[l_ac].deaf023 = "0"
      LET g_deah5_d[l_ac].deaf015 = "0"
      LET g_deah5_d[l_ac].deaf008 = "0"
      LET g_deah5_d[l_ac].deaf011 = "N"
      LET g_deah5_d[l_ac].deaf021 = "N"
      LET g_deah5_d[l_ac].deaf022 = "N"
 
            #add-point:modify段before備份 name="input.body5.insert.before_bak"
{<point name="input.body5.insert.before_bak"/>}
            #end add-point
            LET g_deah5_d_t.* = g_deah5_d[l_ac].*     #新輸入資料
            LET g_deah5_d_o.* = g_deah5_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adet402_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body5.insert.after_set_entry_b"
{<point name="input.body5.insert.after_set_entry_b"/>}
            #end add-point
            CALL adet402_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_deah5_d[li_reproduce_target].* = g_deah5_d[li_reproduce].*
 
               LET g_deah5_d[li_reproduce_target].deaf005 = NULL
            END IF
            
            #add-point:modify段before insert name="input.body5.before_insert"
{<point name="input.body5.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body5.before_row2"
{<point name="input.body5.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[3] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 3
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN adet402_cl USING g_enterprise,g_deag_m.deagdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN adet402_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE adet402_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_deah5_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_deah5_d[l_ac].deaf005 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_deah5_d_t.* = g_deah5_d[l_ac].*  #BACKUP
               LET g_deah5_d_o.* = g_deah5_d[l_ac].*  #BACKUP
               CALL adet402_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body5.after_set_entry_b"
{<point name="input.body5.after_set_entry_b"/>}
               #end add-point  
               CALL adet402_set_no_entry_b(l_cmd)
               IF NOT adet402_lock_b("deaf_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adet402_bcl3 INTO g_deah5_d[l_ac].deafsite,g_deah5_d[l_ac].deafstatu,g_deah5_d[l_ac].deafdocdt, 
                      g_deah5_d[l_ac].deaf001,g_deah5_d[l_ac].deaf002,g_deah5_d[l_ac].deaf003,g_deah5_d[l_ac].deaf004, 
                      g_deah5_d[l_ac].deaf012,g_deah5_d[l_ac].deaf005,g_deah5_d[l_ac].deaf013,g_deah5_d[l_ac].deaf014, 
                      g_deah5_d[l_ac].deaf006,g_deah5_d[l_ac].deaf027,g_deah5_d[l_ac].deaf019,g_deah5_d[l_ac].deaf007, 
                      g_deah5_d[l_ac].deaf020,g_deah5_d[l_ac].deaf028,g_deah5_d[l_ac].deaf023,g_deah5_d[l_ac].deaf015, 
                      g_deah5_d[l_ac].deaf008,g_deah5_d[l_ac].deaf009,g_deah5_d[l_ac].deaf016,g_deah5_d[l_ac].deaf017, 
                      g_deah5_d[l_ac].deaf018,g_deah5_d[l_ac].deaf010,g_deah5_d[l_ac].deaf011,g_deah5_d[l_ac].deaf021, 
                      g_deah5_d[l_ac].deaf022,g_deah5_d[l_ac].deaf024,g_deah5_d[l_ac].deaf025,g_deah5_d[l_ac].deaf026 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_deah5_d_mask_o[l_ac].* =  g_deah5_d[l_ac].*
                  CALL adet402_deaf_t_mask()
                  LET g_deah5_d_mask_n[l_ac].* =  g_deah5_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL adet402_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body5.before_row"
{<point name="input.body5.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body5.after_delete_d"
{<point name="input.body5.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body5.b_delete_ask"
{<point name="input.body5.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前 name="input.body5.b_delete"
{<point name="input.body5.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_deag_m.deagdocno
               LET gs_keys[gs_keys.getLength()+1] = g_deah5_d_t.deaf005
            
               #刪除同層單身
               IF NOT adet402_delete_b('deaf_t',gs_keys,"'3'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adet402_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT adet402_key_delete_b(gs_keys,'deaf_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adet402_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身3刪除中 name="input.body5.m_delete"
{<point name="input.body5.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE adet402_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身3刪除後 name="input.body5.a_delete"
{<point name="input.body5.a_delete"/>}
               #end add-point
               LET l_count = g_deah_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body5.after_delete"
{<point name="input.body5.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_deah5_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前 name="input.body5.b_a_insert"
{<point name="input.body5.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM deaf_t 
             WHERE deafent = g_enterprise AND deafdocno = g_deag_m.deagdocno
               AND deaf005 = g_deah5_d[l_ac].deaf005
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前 name="input.body5.b_insert"
{<point name="input.body5.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_deag_m.deagdocno
               LET gs_keys[2] = g_deah5_d[g_detail_idx].deaf005
               CALL adet402_insert_b('deaf_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3 name="input.body5.a_insert"
{<point name="input.body5.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_deah_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "deaf_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adet402_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body5.after_insert"
{<point name="input.body5.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_deah5_d[l_ac].* = g_deah5_d_t.*
               CLOSE adet402_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_deah5_d[l_ac].* = g_deah5_d_t.*
            ELSE
               #add-point:單身page3修改前 name="input.body5.b_update"
{<point name="input.body5.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               #將遮罩欄位還原
               CALL adet402_deaf_t_mask_restore('restore_mask_o')
                              
               UPDATE deaf_t SET (deafdocno,deafsite,deafstatu,deafdocdt,deaf001,deaf002,deaf003,deaf004, 
                   deaf012,deaf005,deaf013,deaf014,deaf006,deaf027,deaf019,deaf007,deaf020,deaf028,deaf023, 
                   deaf015,deaf008,deaf009,deaf016,deaf017,deaf018,deaf010,deaf011,deaf021,deaf022,deaf024, 
                   deaf025,deaf026) = (g_deag_m.deagdocno,g_deah5_d[l_ac].deafsite,g_deah5_d[l_ac].deafstatu, 
                   g_deah5_d[l_ac].deafdocdt,g_deah5_d[l_ac].deaf001,g_deah5_d[l_ac].deaf002,g_deah5_d[l_ac].deaf003, 
                   g_deah5_d[l_ac].deaf004,g_deah5_d[l_ac].deaf012,g_deah5_d[l_ac].deaf005,g_deah5_d[l_ac].deaf013, 
                   g_deah5_d[l_ac].deaf014,g_deah5_d[l_ac].deaf006,g_deah5_d[l_ac].deaf027,g_deah5_d[l_ac].deaf019, 
                   g_deah5_d[l_ac].deaf007,g_deah5_d[l_ac].deaf020,g_deah5_d[l_ac].deaf028,g_deah5_d[l_ac].deaf023, 
                   g_deah5_d[l_ac].deaf015,g_deah5_d[l_ac].deaf008,g_deah5_d[l_ac].deaf009,g_deah5_d[l_ac].deaf016, 
                   g_deah5_d[l_ac].deaf017,g_deah5_d[l_ac].deaf018,g_deah5_d[l_ac].deaf010,g_deah5_d[l_ac].deaf011, 
                   g_deah5_d[l_ac].deaf021,g_deah5_d[l_ac].deaf022,g_deah5_d[l_ac].deaf024,g_deah5_d[l_ac].deaf025, 
                   g_deah5_d[l_ac].deaf026) #自訂欄位頁簽
                WHERE deafent = g_enterprise AND deafdocno = g_deag_m.deagdocno
                  AND deaf005 = g_deah5_d_t.deaf005 #項次 
                  
               #add-point:單身page3修改中 name="input.body5.m_update"
{<point name="input.body5.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "deaf_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_deah5_d[l_ac].* = g_deah5_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "deaf_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_deah5_d[l_ac].* = g_deah5_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_deag_m.deagdocno
               LET gs_keys_bak[1] = g_deagdocno_t
               LET gs_keys[2] = g_deah5_d[g_detail_idx].deaf005
               LET gs_keys_bak[2] = g_deah5_d_t.deaf005
               CALL adet402_update_b('deaf_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL adet402_deaf_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_deah5_d[g_detail_idx].deaf005 = g_deah5_d_t.deaf005 
                  ) THEN
                  LET gs_keys[01] = g_deag_m.deagdocno
                  LET gs_keys[gs_keys.getLength()+1] = g_deah5_d_t.deaf005
                  CALL adet402_key_update_b(gs_keys,'deaf_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_deag_m),util.JSON.stringify(g_deah5_d_t)
               LET g_log2 = util.JSON.stringify(g_deag_m),util.JSON.stringify(g_deah5_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後 name="input.body5.a_update"
{<point name="input.body5.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deafsite
            #add-point:BEFORE FIELD deafsite name="input.b.page5.deafsite"
{<point name="input.b.page5.deafsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deafsite
            
            #add-point:AFTER FIELD deafsite name="input.a.page5.deafsite"
{<point name="input.a.page5.deafsite" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deafsite
            #add-point:ON CHANGE deafsite name="input.g.page5.deafsite"
{<point name="input.g.page5.deafsite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deafstatu
            #add-point:BEFORE FIELD deafstatu name="input.b.page5.deafstatu"
{<point name="input.b.page5.deafstatu" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deafstatu
            
            #add-point:AFTER FIELD deafstatu name="input.a.page5.deafstatu"
{<point name="input.a.page5.deafstatu" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deafstatu
            #add-point:ON CHANGE deafstatu name="input.g.page5.deafstatu"
{<point name="input.g.page5.deafstatu" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deafdocdt
            #add-point:BEFORE FIELD deafdocdt name="input.b.page5.deafdocdt"
{<point name="input.b.page5.deafdocdt" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deafdocdt
            
            #add-point:AFTER FIELD deafdocdt name="input.a.page5.deafdocdt"
{<point name="input.a.page5.deafdocdt" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deafdocdt
            #add-point:ON CHANGE deafdocdt name="input.g.page5.deafdocdt"
{<point name="input.g.page5.deafdocdt" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf001
            #add-point:BEFORE FIELD deaf001 name="input.b.page5.deaf001"
{<point name="input.b.page5.deaf001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf001
            
            #add-point:AFTER FIELD deaf001 name="input.a.page5.deaf001"
{<point name="input.a.page5.deaf001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf001
            #add-point:ON CHANGE deaf001 name="input.g.page5.deaf001"
{<point name="input.g.page5.deaf001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf002
            #add-point:BEFORE FIELD deaf002 name="input.b.page5.deaf002"
{<point name="input.b.page5.deaf002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf002
            
            #add-point:AFTER FIELD deaf002 name="input.a.page5.deaf002"
{<point name="input.a.page5.deaf002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf002
            #add-point:ON CHANGE deaf002 name="input.g.page5.deaf002"
{<point name="input.g.page5.deaf002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf003
            #add-point:BEFORE FIELD deaf003 name="input.b.page5.deaf003"
{<point name="input.b.page5.deaf003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf003
            
            #add-point:AFTER FIELD deaf003 name="input.a.page5.deaf003"
{<point name="input.a.page5.deaf003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf003
            #add-point:ON CHANGE deaf003 name="input.g.page5.deaf003"
{<point name="input.g.page5.deaf003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf004
            #add-point:BEFORE FIELD deaf004 name="input.b.page5.deaf004"
{<point name="input.b.page5.deaf004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf004
            
            #add-point:AFTER FIELD deaf004 name="input.a.page5.deaf004"
{<point name="input.a.page5.deaf004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf004
            #add-point:ON CHANGE deaf004 name="input.g.page5.deaf004"
{<point name="input.g.page5.deaf004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf012
            #add-point:BEFORE FIELD deaf012 name="input.b.page5.deaf012"
{<point name="input.b.page5.deaf012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf012
            
            #add-point:AFTER FIELD deaf012 name="input.a.page5.deaf012"
{<point name="input.a.page5.deaf012" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf012
            #add-point:ON CHANGE deaf012 name="input.g.page5.deaf012"
{<point name="input.g.page5.deaf012" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf005
            
            #add-point:AFTER FIELD deaf005 name="input.a.page5.deaf005"
{<point name="input.a.page5.deaf005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf005
            #add-point:BEFORE FIELD deaf005 name="input.b.page5.deaf005"
{<point name="input.b.page5.deaf005" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf005
            #add-point:ON CHANGE deaf005 name="input.g.page5.deaf005"
{<point name="input.g.page5.deaf005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf013
            #add-point:BEFORE FIELD deaf013 name="input.b.page5.deaf013"
{<point name="input.b.page5.deaf013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf013
            
            #add-point:AFTER FIELD deaf013 name="input.a.page5.deaf013"
{<point name="input.a.page5.deaf013" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf013
            #add-point:ON CHANGE deaf013 name="input.g.page5.deaf013"
{<point name="input.g.page5.deaf013" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf014
            #add-point:BEFORE FIELD deaf014 name="input.b.page5.deaf014"
{<point name="input.b.page5.deaf014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf014
            
            #add-point:AFTER FIELD deaf014 name="input.a.page5.deaf014"
{<point name="input.a.page5.deaf014" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf014
            #add-point:ON CHANGE deaf014 name="input.g.page5.deaf014"
{<point name="input.g.page5.deaf014" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf006
            #add-point:BEFORE FIELD deaf006 name="input.b.page5.deaf006"
{<point name="input.b.page5.deaf006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf006
            
            #add-point:AFTER FIELD deaf006 name="input.a.page5.deaf006"
{<point name="input.a.page5.deaf006" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf006
            #add-point:ON CHANGE deaf006 name="input.g.page5.deaf006"
{<point name="input.g.page5.deaf006" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf027
            #add-point:BEFORE FIELD deaf027 name="input.b.page5.deaf027"
{<point name="input.b.page5.deaf027" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf027
            
            #add-point:AFTER FIELD deaf027 name="input.a.page5.deaf027"
{<point name="input.a.page5.deaf027" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf027
            #add-point:ON CHANGE deaf027 name="input.g.page5.deaf027"
{<point name="input.g.page5.deaf027" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf019
            #add-point:BEFORE FIELD deaf019 name="input.b.page5.deaf019"
{<point name="input.b.page5.deaf019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf019
            
            #add-point:AFTER FIELD deaf019 name="input.a.page5.deaf019"
{<point name="input.a.page5.deaf019" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf019
            #add-point:ON CHANGE deaf019 name="input.g.page5.deaf019"
{<point name="input.g.page5.deaf019" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf007
            #add-point:BEFORE FIELD deaf007 name="input.b.page5.deaf007"
{<point name="input.b.page5.deaf007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf007
            
            #add-point:AFTER FIELD deaf007 name="input.a.page5.deaf007"
{<point name="input.a.page5.deaf007" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf007
            #add-point:ON CHANGE deaf007 name="input.g.page5.deaf007"
{<point name="input.g.page5.deaf007" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf020
            #add-point:BEFORE FIELD deaf020 name="input.b.page5.deaf020"
{<point name="input.b.page5.deaf020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf020
            
            #add-point:AFTER FIELD deaf020 name="input.a.page5.deaf020"
{<point name="input.a.page5.deaf020" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf020
            #add-point:ON CHANGE deaf020 name="input.g.page5.deaf020"
{<point name="input.g.page5.deaf020" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf028
            #add-point:BEFORE FIELD deaf028 name="input.b.page5.deaf028"
{<point name="input.b.page5.deaf028" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf028
            
            #add-point:AFTER FIELD deaf028 name="input.a.page5.deaf028"
{<point name="input.a.page5.deaf028" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf028
            #add-point:ON CHANGE deaf028 name="input.g.page5.deaf028"
{<point name="input.g.page5.deaf028" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf023
            #add-point:BEFORE FIELD deaf023 name="input.b.page5.deaf023"
{<point name="input.b.page5.deaf023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf023
            
            #add-point:AFTER FIELD deaf023 name="input.a.page5.deaf023"
{<point name="input.a.page5.deaf023" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf023
            #add-point:ON CHANGE deaf023 name="input.g.page5.deaf023"
{<point name="input.g.page5.deaf023" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf015
            #add-point:BEFORE FIELD deaf015 name="input.b.page5.deaf015"
{<point name="input.b.page5.deaf015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf015
            
            #add-point:AFTER FIELD deaf015 name="input.a.page5.deaf015"
{<point name="input.a.page5.deaf015" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf015
            #add-point:ON CHANGE deaf015 name="input.g.page5.deaf015"
{<point name="input.g.page5.deaf015" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf008
            #add-point:BEFORE FIELD deaf008 name="input.b.page5.deaf008"
{<point name="input.b.page5.deaf008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf008
            
            #add-point:AFTER FIELD deaf008 name="input.a.page5.deaf008"
{<point name="input.a.page5.deaf008" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf008
            #add-point:ON CHANGE deaf008 name="input.g.page5.deaf008"
{<point name="input.g.page5.deaf008" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf009
            #add-point:BEFORE FIELD deaf009 name="input.b.page5.deaf009"
{<point name="input.b.page5.deaf009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf009
            
            #add-point:AFTER FIELD deaf009 name="input.a.page5.deaf009"
{<point name="input.a.page5.deaf009" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf009
            #add-point:ON CHANGE deaf009 name="input.g.page5.deaf009"
{<point name="input.g.page5.deaf009" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf016
            #add-point:BEFORE FIELD deaf016 name="input.b.page5.deaf016"
{<point name="input.b.page5.deaf016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf016
            
            #add-point:AFTER FIELD deaf016 name="input.a.page5.deaf016"
{<point name="input.a.page5.deaf016" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf016
            #add-point:ON CHANGE deaf016 name="input.g.page5.deaf016"
{<point name="input.g.page5.deaf016" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf017
            
            #add-point:AFTER FIELD deaf017 name="input.a.page5.deaf017"
{<point name="input.a.page5.deaf017" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf017
            #add-point:BEFORE FIELD deaf017 name="input.b.page5.deaf017"
{<point name="input.b.page5.deaf017" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf017
            #add-point:ON CHANGE deaf017 name="input.g.page5.deaf017"
{<point name="input.g.page5.deaf017" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf018
            #add-point:BEFORE FIELD deaf018 name="input.b.page5.deaf018"
{<point name="input.b.page5.deaf018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf018
            
            #add-point:AFTER FIELD deaf018 name="input.a.page5.deaf018"
{<point name="input.a.page5.deaf018" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf018
            #add-point:ON CHANGE deaf018 name="input.g.page5.deaf018"
{<point name="input.g.page5.deaf018" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf010
            #add-point:BEFORE FIELD deaf010 name="input.b.page5.deaf010"
{<point name="input.b.page5.deaf010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf010
            
            #add-point:AFTER FIELD deaf010 name="input.a.page5.deaf010"
{<point name="input.a.page5.deaf010" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf010
            #add-point:ON CHANGE deaf010 name="input.g.page5.deaf010"
{<point name="input.g.page5.deaf010" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf011
            #add-point:BEFORE FIELD deaf011 name="input.b.page5.deaf011"
{<point name="input.b.page5.deaf011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf011
            
            #add-point:AFTER FIELD deaf011 name="input.a.page5.deaf011"
{<point name="input.a.page5.deaf011" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf011
            #add-point:ON CHANGE deaf011 name="input.g.page5.deaf011"
{<point name="input.g.page5.deaf011" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf021
            #add-point:BEFORE FIELD deaf021 name="input.b.page5.deaf021"
{<point name="input.b.page5.deaf021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf021
            
            #add-point:AFTER FIELD deaf021 name="input.a.page5.deaf021"
{<point name="input.a.page5.deaf021" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf021
            #add-point:ON CHANGE deaf021 name="input.g.page5.deaf021"
{<point name="input.g.page5.deaf021" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf022
            #add-point:BEFORE FIELD deaf022 name="input.b.page5.deaf022"
{<point name="input.b.page5.deaf022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf022
            
            #add-point:AFTER FIELD deaf022 name="input.a.page5.deaf022"
{<point name="input.a.page5.deaf022" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf022
            #add-point:ON CHANGE deaf022 name="input.g.page5.deaf022"
{<point name="input.g.page5.deaf022" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf024
            #add-point:BEFORE FIELD deaf024 name="input.b.page5.deaf024"
{<point name="input.b.page5.deaf024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf024
            
            #add-point:AFTER FIELD deaf024 name="input.a.page5.deaf024"
{<point name="input.a.page5.deaf024" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf024
            #add-point:ON CHANGE deaf024 name="input.g.page5.deaf024"
{<point name="input.g.page5.deaf024" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf025
            #add-point:BEFORE FIELD deaf025 name="input.b.page5.deaf025"
{<point name="input.b.page5.deaf025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf025
            
            #add-point:AFTER FIELD deaf025 name="input.a.page5.deaf025"
{<point name="input.a.page5.deaf025" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf025
            #add-point:ON CHANGE deaf025 name="input.g.page5.deaf025"
{<point name="input.g.page5.deaf025" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD deaf026
            #add-point:BEFORE FIELD deaf026 name="input.b.page5.deaf026"
{<point name="input.b.page5.deaf026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD deaf026
            
            #add-point:AFTER FIELD deaf026 name="input.a.page5.deaf026"
{<point name="input.a.page5.deaf026" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE deaf026
            #add-point:ON CHANGE deaf026 name="input.g.page5.deaf026"
{<point name="input.g.page5.deaf026" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page5.deafsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deafsite
            #add-point:ON ACTION controlp INFIELD deafsite name="input.c.page5.deafsite"
{<point name="input.c.page5.deafsite" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deafstatu
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deafstatu
            #add-point:ON ACTION controlp INFIELD deafstatu name="input.c.page5.deafstatu"
{<point name="input.c.page5.deafstatu" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deafdocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deafdocdt
            #add-point:ON ACTION controlp INFIELD deafdocdt name="input.c.page5.deafdocdt"
{<point name="input.c.page5.deafdocdt" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf001
            #add-point:ON ACTION controlp INFIELD deaf001 name="input.c.page5.deaf001"
{<point name="input.c.page5.deaf001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf002
            #add-point:ON ACTION controlp INFIELD deaf002 name="input.c.page5.deaf002"
{<point name="input.c.page5.deaf002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf003
            #add-point:ON ACTION controlp INFIELD deaf003 name="input.c.page5.deaf003"
{<point name="input.c.page5.deaf003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf004
            #add-point:ON ACTION controlp INFIELD deaf004 name="input.c.page5.deaf004"
{<point name="input.c.page5.deaf004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf012
            #add-point:ON ACTION controlp INFIELD deaf012 name="input.c.page5.deaf012"
{<point name="input.c.page5.deaf012" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf005
            #add-point:ON ACTION controlp INFIELD deaf005 name="input.c.page5.deaf005"
{<point name="input.c.page5.deaf005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf013
            #add-point:ON ACTION controlp INFIELD deaf013 name="input.c.page5.deaf013"
{<point name="input.c.page5.deaf013" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf014
            #add-point:ON ACTION controlp INFIELD deaf014 name="input.c.page5.deaf014"
{<point name="input.c.page5.deaf014" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf006
            #add-point:ON ACTION controlp INFIELD deaf006 name="input.c.page5.deaf006"
{<point name="input.c.page5.deaf006" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf027
            #add-point:ON ACTION controlp INFIELD deaf027 name="input.c.page5.deaf027"
{<point name="input.c.page5.deaf027" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf019
            #add-point:ON ACTION controlp INFIELD deaf019 name="input.c.page5.deaf019"
{<point name="input.c.page5.deaf019" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf007
            #add-point:ON ACTION controlp INFIELD deaf007 name="input.c.page5.deaf007"
{<point name="input.c.page5.deaf007" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf020
            #add-point:ON ACTION controlp INFIELD deaf020 name="input.c.page5.deaf020"
{<point name="input.c.page5.deaf020" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf028
            #add-point:ON ACTION controlp INFIELD deaf028 name="input.c.page5.deaf028"
{<point name="input.c.page5.deaf028" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf023
            #add-point:ON ACTION controlp INFIELD deaf023 name="input.c.page5.deaf023"
{<point name="input.c.page5.deaf023" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf015
            #add-point:ON ACTION controlp INFIELD deaf015 name="input.c.page5.deaf015"
{<point name="input.c.page5.deaf015" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf008
            #add-point:ON ACTION controlp INFIELD deaf008 name="input.c.page5.deaf008"
{<point name="input.c.page5.deaf008" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf009
            #add-point:ON ACTION controlp INFIELD deaf009 name="input.c.page5.deaf009"
{<point name="input.c.page5.deaf009" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf016
            #add-point:ON ACTION controlp INFIELD deaf016 name="input.c.page5.deaf016"
{<point name="input.c.page5.deaf016" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf017
            #add-point:ON ACTION controlp INFIELD deaf017 name="input.c.page5.deaf017"
{<point name="input.c.page5.deaf017" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf018
            #add-point:ON ACTION controlp INFIELD deaf018 name="input.c.page5.deaf018"
{<point name="input.c.page5.deaf018" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf010
            #add-point:ON ACTION controlp INFIELD deaf010 name="input.c.page5.deaf010"
{<point name="input.c.page5.deaf010" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf011
            #add-point:ON ACTION controlp INFIELD deaf011 name="input.c.page5.deaf011"
{<point name="input.c.page5.deaf011" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf021
            #add-point:ON ACTION controlp INFIELD deaf021 name="input.c.page5.deaf021"
{<point name="input.c.page5.deaf021" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf022
            #add-point:ON ACTION controlp INFIELD deaf022 name="input.c.page5.deaf022"
{<point name="input.c.page5.deaf022" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf024
            #add-point:ON ACTION controlp INFIELD deaf024 name="input.c.page5.deaf024"
{<point name="input.c.page5.deaf024" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf025
            #add-point:ON ACTION controlp INFIELD deaf025 name="input.c.page5.deaf025"
{<point name="input.c.page5.deaf025" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.deaf026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD deaf026
            #add-point:ON ACTION controlp INFIELD deaf026 name="input.c.page5.deaf026"
{<point name="input.c.page5.deaf026" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row name="input.body5.after_row"
{<point name="input.body5.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_deah5_d[l_ac].* = g_deah5_d_t.*
               END IF
               CLOSE adet402_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL adet402_unlock_b("deaf_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2 name="input.body5.after_row2"
{<point name="input.body5.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body5.after_input"
{<point name="input.body5.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_deah5_d[li_reproduce_target].* = g_deah5_d[li_reproduce].*
 
               LET g_deah5_d[li_reproduce_target].deaf005 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_deah5_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_deah5_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_deah7_d FROM s_detail7.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body7.before_input2"
{<point name="input.body7.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_deah7_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adet402_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_deah7_d.getLength()
            #add-point:資料輸入前 name="input.body7.before_input"
{<point name="input.body7.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_deah7_d[l_ac].* TO NULL 
            INITIALIZE g_deah7_d_t.* TO NULL 
            INITIALIZE g_deah7_d_o.* TO NULL 
            #公用欄位給值(單身4)
            
            #自定義預設值(單身4)
                  LET g_deah7_d[l_ac].rtlf003 = "0"
      LET g_deah7_d[l_ac].rtlf004 = "0"
      LET g_deah7_d[l_ac].rtlf007 = "0"
      LET g_deah7_d[l_ac].rtlf008 = "0"
      LET g_deah7_d[l_ac].rtlf018 = "0"
      LET g_deah7_d[l_ac].rtlf020 = "0"
 
            #add-point:modify段before備份 name="input.body7.insert.before_bak"
{<point name="input.body7.insert.before_bak"/>}
            #end add-point
            LET g_deah7_d_t.* = g_deah7_d[l_ac].*     #新輸入資料
            LET g_deah7_d_o.* = g_deah7_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adet402_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body7.insert.after_set_entry_b"
{<point name="input.body7.insert.after_set_entry_b"/>}
            #end add-point
            CALL adet402_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_deah7_d[li_reproduce_target].* = g_deah7_d[li_reproduce].*
 
               LET g_deah7_d[li_reproduce_target].rtlfseq = NULL
            END IF
            
            #add-point:modify段before insert name="input.body7.before_insert"
{<point name="input.body7.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body7.before_row2"
{<point name="input.body7.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[4] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 4
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN adet402_cl USING g_enterprise,g_deag_m.deagdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN adet402_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE adet402_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_deah7_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_deah7_d[l_ac].rtlfseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_deah7_d_t.* = g_deah7_d[l_ac].*  #BACKUP
               LET g_deah7_d_o.* = g_deah7_d[l_ac].*  #BACKUP
               CALL adet402_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body7.after_set_entry_b"
{<point name="input.body7.after_set_entry_b"/>}
               #end add-point  
               CALL adet402_set_no_entry_b(l_cmd)
               IF NOT adet402_lock_b("rtlf_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adet402_bcl4 INTO g_deah7_d[l_ac].rtlfdocno,g_deah7_d[l_ac].rtlfseq,g_deah7_d[l_ac].rtlf103, 
                      g_deah7_d[l_ac].rtlfseq1,g_deah7_d[l_ac].rtlf001,g_deah7_d[l_ac].rtlf002,g_deah7_d[l_ac].rtlf003, 
                      g_deah7_d[l_ac].rtlf004,g_deah7_d[l_ac].rtlf036,g_deah7_d[l_ac].rtlf005,g_deah7_d[l_ac].rtlf007, 
                      g_deah7_d[l_ac].rtlf006,g_deah7_d[l_ac].rtlf008,g_deah7_d[l_ac].rtlf009,g_deah7_d[l_ac].rtlf010, 
                      g_deah7_d[l_ac].rtlf013,g_deah7_d[l_ac].rtlf014,g_deah7_d[l_ac].rtlf015,g_deah7_d[l_ac].rtlf016, 
                      g_deah7_d[l_ac].rtlf017,g_deah7_d[l_ac].rtlf018,g_deah7_d[l_ac].rtlf020,g_deah7_d[l_ac].rtlf021, 
                      g_deah7_d[l_ac].rtlf022,g_deah7_d[l_ac].rtlf024,g_deah7_d[l_ac].rtlf025,g_deah7_d[l_ac].rtlf026, 
                      g_deah7_d[l_ac].rtlf037
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_deah7_d_mask_o[l_ac].* =  g_deah7_d[l_ac].*
                  CALL adet402_rtlf_t_mask()
                  LET g_deah7_d_mask_n[l_ac].* =  g_deah7_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL adet402_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body7.before_row"
{<point name="input.body7.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body7.after_delete_d"
{<point name="input.body7.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body7.b_delete_ask"
{<point name="input.body7.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前 name="input.body7.b_delete"
{<point name="input.body7.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_deag_m.deagdocno
               LET gs_keys[gs_keys.getLength()+1] = g_deah7_d_t.rtlfseq
            
               #刪除同層單身
               IF NOT adet402_delete_b('rtlf_t',gs_keys,"'4'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adet402_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT adet402_key_delete_b(gs_keys,'rtlf_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adet402_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身4刪除中 name="input.body7.m_delete"
{<point name="input.body7.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE adet402_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身4刪除後 name="input.body7.a_delete"
{<point name="input.body7.a_delete"/>}
               #end add-point
               LET l_count = g_deah_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body7.after_delete"
{<point name="input.body7.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_deah7_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前 name="input.body7.b_a_insert"
{<point name="input.body7.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM rtlf_t 
             WHERE rtlfent = g_enterprise AND rtlfdocno = g_deag_m.deagdocno
               AND rtlfseq = g_deah7_d[l_ac].rtlfseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前 name="input.body7.b_insert"
{<point name="input.body7.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_deag_m.deagdocno
               LET gs_keys[2] = g_deah7_d[g_detail_idx].rtlfseq
               CALL adet402_insert_b('rtlf_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4 name="input.body7.a_insert"
{<point name="input.body7.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_deah_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtlf_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adet402_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body7.after_insert"
{<point name="input.body7.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_deah7_d[l_ac].* = g_deah7_d_t.*
               CLOSE adet402_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_deah7_d[l_ac].* = g_deah7_d_t.*
            ELSE
               #add-point:單身page4修改前 name="input.body7.b_update"
{<point name="input.body7.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
               
               
               #將遮罩欄位還原
               CALL adet402_rtlf_t_mask_restore('restore_mask_o')
                              
               UPDATE rtlf_t SET (rtlfdocno,rtlfseq,rtlf103,rtlfseq1,rtlf001,rtlf002,rtlf003,rtlf004, 
                   rtlf036,rtlf005,rtlf007,rtlf006,rtlf008,rtlf009,rtlf010,rtlf013,rtlf014,rtlf015,rtlf016, 
                   rtlf017,rtlf018,rtlf020,rtlf021,rtlf022,rtlf024,rtlf025,rtlf026,rtlf037) = (g_deag_m.deagdocno, 
                   g_deah7_d[l_ac].rtlfseq,g_deah7_d[l_ac].rtlf103,g_deah7_d[l_ac].rtlfseq1, 
                   g_deah7_d[l_ac].rtlf001,g_deah7_d[l_ac].rtlf002,g_deah7_d[l_ac].rtlf003,g_deah7_d[l_ac].rtlf004, 
                   g_deah7_d[l_ac].rtlf036,g_deah7_d[l_ac].rtlf005,g_deah7_d[l_ac].rtlf007,g_deah7_d[l_ac].rtlf006, 
                   g_deah7_d[l_ac].rtlf008,g_deah7_d[l_ac].rtlf009,g_deah7_d[l_ac].rtlf010,g_deah7_d[l_ac].rtlf013, 
                   g_deah7_d[l_ac].rtlf014,g_deah7_d[l_ac].rtlf015,g_deah7_d[l_ac].rtlf016,g_deah7_d[l_ac].rtlf017, 
                   g_deah7_d[l_ac].rtlf018,g_deah7_d[l_ac].rtlf020,g_deah7_d[l_ac].rtlf021,g_deah7_d[l_ac].rtlf022, 
                   g_deah7_d[l_ac].rtlf024,g_deah7_d[l_ac].rtlf025,g_deah7_d[l_ac].rtlf026,g_deah7_d[l_ac].rtlf037)  
                   #自訂欄位頁簽
                WHERE rtlfent = g_enterprise AND rtlfdocno = g_deag_m.deagdocno
                  AND rtlfseq = g_deah7_d_t.rtlfseq #項次 
                  
               #add-point:單身page4修改中 name="input.body7.m_update"
{<point name="input.body7.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtlf_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_deah7_d[l_ac].* = g_deah7_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtlf_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_deah7_d[l_ac].* = g_deah7_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_deag_m.deagdocno
               LET gs_keys_bak[1] = g_deagdocno_t
               LET gs_keys[2] = g_deah7_d[g_detail_idx].rtlfseq
               LET gs_keys_bak[2] = g_deah7_d_t.rtlfseq
               CALL adet402_update_b('rtlf_t',gs_keys,gs_keys_bak,"'4'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL adet402_rtlf_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_deah7_d[g_detail_idx].rtlfseq = g_deah7_d_t.rtlfseq 
                  ) THEN
                  LET gs_keys[01] = g_deag_m.deagdocno
                  LET gs_keys[gs_keys.getLength()+1] = g_deah7_d_t.rtlfseq
                  CALL adet402_key_update_b(gs_keys,'rtlf_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_deag_m),util.JSON.stringify(g_deah7_d_t)
               LET g_log2 = util.JSON.stringify(g_deag_m),util.JSON.stringify(g_deah7_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後 name="input.body7.a_update"
{<point name="input.body7.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlfdocno
            #add-point:BEFORE FIELD rtlfdocno name="input.b.page7.rtlfdocno"
{<point name="input.b.page7.rtlfdocno" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlfdocno
            
            #add-point:AFTER FIELD rtlfdocno name="input.a.page7.rtlfdocno"
{<point name="input.a.page7.rtlfdocno" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlfdocno
            #add-point:ON CHANGE rtlfdocno name="input.g.page7.rtlfdocno"
{<point name="input.g.page7.rtlfdocno" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlfseq
            #add-point:BEFORE FIELD rtlfseq name="input.b.page7.rtlfseq"
{<point name="input.b.page7.rtlfseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlfseq
            
            #add-point:AFTER FIELD rtlfseq name="input.a.page7.rtlfseq"
{<point name="input.a.page7.rtlfseq" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlfseq
            #add-point:ON CHANGE rtlfseq name="input.g.page7.rtlfseq"
{<point name="input.g.page7.rtlfseq" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf103
            #add-point:BEFORE FIELD rtlf103 name="input.b.page7.rtlf103"
{<point name="input.b.page7.rtlf103" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf103
            
            #add-point:AFTER FIELD rtlf103 name="input.a.page7.rtlf103"
{<point name="input.a.page7.rtlf103" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf103
            #add-point:ON CHANGE rtlf103 name="input.g.page7.rtlf103"
{<point name="input.g.page7.rtlf103" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlfseq1
            #add-point:BEFORE FIELD rtlfseq1 name="input.b.page7.rtlfseq1"
{<point name="input.b.page7.rtlfseq1" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlfseq1
            
            #add-point:AFTER FIELD rtlfseq1 name="input.a.page7.rtlfseq1"
{<point name="input.a.page7.rtlfseq1" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlfseq1
            #add-point:ON CHANGE rtlfseq1 name="input.g.page7.rtlfseq1"
{<point name="input.g.page7.rtlfseq1" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf001
            #add-point:BEFORE FIELD rtlf001 name="input.b.page7.rtlf001"
{<point name="input.b.page7.rtlf001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf001
            
            #add-point:AFTER FIELD rtlf001 name="input.a.page7.rtlf001"
{<point name="input.a.page7.rtlf001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf001
            #add-point:ON CHANGE rtlf001 name="input.g.page7.rtlf001"
{<point name="input.g.page7.rtlf001" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf002
            
            #add-point:AFTER FIELD rtlf002 name="input.a.page7.rtlf002"
{<point name="input.a.page7.rtlf002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf002
            #add-point:BEFORE FIELD rtlf002 name="input.b.page7.rtlf002"
{<point name="input.b.page7.rtlf002" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf002
            #add-point:ON CHANGE rtlf002 name="input.g.page7.rtlf002"
{<point name="input.g.page7.rtlf002" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf003
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_deah7_d[l_ac].rtlf003,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtlf003
            END IF 
 
 
 
            #add-point:AFTER FIELD rtlf003 name="input.a.page7.rtlf003"
{<point name="input.a.page7.rtlf003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf003
            #add-point:BEFORE FIELD rtlf003 name="input.b.page7.rtlf003"
{<point name="input.b.page7.rtlf003" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf003
            #add-point:ON CHANGE rtlf003 name="input.g.page7.rtlf003"
{<point name="input.g.page7.rtlf003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf004
            #add-point:BEFORE FIELD rtlf004 name="input.b.page7.rtlf004"
{<point name="input.b.page7.rtlf004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf004
            
            #add-point:AFTER FIELD rtlf004 name="input.a.page7.rtlf004"
{<point name="input.a.page7.rtlf004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf004
            #add-point:ON CHANGE rtlf004 name="input.g.page7.rtlf004"
{<point name="input.g.page7.rtlf004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf036
            #add-point:BEFORE FIELD rtlf036 name="input.b.page7.rtlf036"
{<point name="input.b.page7.rtlf036" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf036
            
            #add-point:AFTER FIELD rtlf036 name="input.a.page7.rtlf036"
{<point name="input.a.page7.rtlf036" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf036
            #add-point:ON CHANGE rtlf036 name="input.g.page7.rtlf036"
{<point name="input.g.page7.rtlf036" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf005
            #add-point:BEFORE FIELD rtlf005 name="input.b.page7.rtlf005"
{<point name="input.b.page7.rtlf005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf005
            
            #add-point:AFTER FIELD rtlf005 name="input.a.page7.rtlf005"
{<point name="input.a.page7.rtlf005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf005
            #add-point:ON CHANGE rtlf005 name="input.g.page7.rtlf005"
{<point name="input.g.page7.rtlf005" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf007
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_deah7_d[l_ac].rtlf007,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtlf007
            END IF 
 
 
 
            #add-point:AFTER FIELD rtlf007 name="input.a.page7.rtlf007"
{<point name="input.a.page7.rtlf007" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf007
            #add-point:BEFORE FIELD rtlf007 name="input.b.page7.rtlf007"
{<point name="input.b.page7.rtlf007" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf007
            #add-point:ON CHANGE rtlf007 name="input.g.page7.rtlf007"
{<point name="input.g.page7.rtlf007" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf006
            #add-point:BEFORE FIELD rtlf006 name="input.b.page7.rtlf006"
{<point name="input.b.page7.rtlf006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf006
            
            #add-point:AFTER FIELD rtlf006 name="input.a.page7.rtlf006"
{<point name="input.a.page7.rtlf006" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf006
            #add-point:ON CHANGE rtlf006 name="input.g.page7.rtlf006"
{<point name="input.g.page7.rtlf006" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf008
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_deah7_d[l_ac].rtlf008,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtlf008
            END IF 
 
 
 
            #add-point:AFTER FIELD rtlf008 name="input.a.page7.rtlf008"
{<point name="input.a.page7.rtlf008" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf008
            #add-point:BEFORE FIELD rtlf008 name="input.b.page7.rtlf008"
{<point name="input.b.page7.rtlf008" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf008
            #add-point:ON CHANGE rtlf008 name="input.g.page7.rtlf008"
{<point name="input.g.page7.rtlf008" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf009
            #add-point:BEFORE FIELD rtlf009 name="input.b.page7.rtlf009"
{<point name="input.b.page7.rtlf009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf009
            
            #add-point:AFTER FIELD rtlf009 name="input.a.page7.rtlf009"
{<point name="input.a.page7.rtlf009" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf009
            #add-point:ON CHANGE rtlf009 name="input.g.page7.rtlf009"
{<point name="input.g.page7.rtlf009" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf010
            #add-point:BEFORE FIELD rtlf010 name="input.b.page7.rtlf010"
{<point name="input.b.page7.rtlf010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf010
            
            #add-point:AFTER FIELD rtlf010 name="input.a.page7.rtlf010"
{<point name="input.a.page7.rtlf010" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf010
            #add-point:ON CHANGE rtlf010 name="input.g.page7.rtlf010"
{<point name="input.g.page7.rtlf010" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf013
            
            #add-point:AFTER FIELD rtlf013 name="input.a.page7.rtlf013"
{<point name="input.a.page7.rtlf013" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf013
            #add-point:BEFORE FIELD rtlf013 name="input.b.page7.rtlf013"
{<point name="input.b.page7.rtlf013" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf013
            #add-point:ON CHANGE rtlf013 name="input.g.page7.rtlf013"
{<point name="input.g.page7.rtlf013" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf014
            #add-point:BEFORE FIELD rtlf014 name="input.b.page7.rtlf014"
{<point name="input.b.page7.rtlf014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf014
            
            #add-point:AFTER FIELD rtlf014 name="input.a.page7.rtlf014"
{<point name="input.a.page7.rtlf014" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf014
            #add-point:ON CHANGE rtlf014 name="input.g.page7.rtlf014"
{<point name="input.g.page7.rtlf014" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf015
            #add-point:BEFORE FIELD rtlf015 name="input.b.page7.rtlf015"
{<point name="input.b.page7.rtlf015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf015
            
            #add-point:AFTER FIELD rtlf015 name="input.a.page7.rtlf015"
{<point name="input.a.page7.rtlf015" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf015
            #add-point:ON CHANGE rtlf015 name="input.g.page7.rtlf015"
{<point name="input.g.page7.rtlf015" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf016
            #add-point:BEFORE FIELD rtlf016 name="input.b.page7.rtlf016"
{<point name="input.b.page7.rtlf016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf016
            
            #add-point:AFTER FIELD rtlf016 name="input.a.page7.rtlf016"
{<point name="input.a.page7.rtlf016" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf016
            #add-point:ON CHANGE rtlf016 name="input.g.page7.rtlf016"
{<point name="input.g.page7.rtlf016" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf017
            #add-point:BEFORE FIELD rtlf017 name="input.b.page7.rtlf017"
{<point name="input.b.page7.rtlf017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf017
            
            #add-point:AFTER FIELD rtlf017 name="input.a.page7.rtlf017"
{<point name="input.a.page7.rtlf017" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf017
            #add-point:ON CHANGE rtlf017 name="input.g.page7.rtlf017"
{<point name="input.g.page7.rtlf017" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf018
            #add-point:BEFORE FIELD rtlf018 name="input.b.page7.rtlf018"
{<point name="input.b.page7.rtlf018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf018
            
            #add-point:AFTER FIELD rtlf018 name="input.a.page7.rtlf018"
{<point name="input.a.page7.rtlf018" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf018
            #add-point:ON CHANGE rtlf018 name="input.g.page7.rtlf018"
{<point name="input.g.page7.rtlf018" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf020
            #add-point:BEFORE FIELD rtlf020 name="input.b.page7.rtlf020"
{<point name="input.b.page7.rtlf020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf020
            
            #add-point:AFTER FIELD rtlf020 name="input.a.page7.rtlf020"
{<point name="input.a.page7.rtlf020" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf020
            #add-point:ON CHANGE rtlf020 name="input.g.page7.rtlf020"
{<point name="input.g.page7.rtlf020" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf021
            #add-point:BEFORE FIELD rtlf021 name="input.b.page7.rtlf021"
{<point name="input.b.page7.rtlf021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf021
            
            #add-point:AFTER FIELD rtlf021 name="input.a.page7.rtlf021"
{<point name="input.a.page7.rtlf021" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf021
            #add-point:ON CHANGE rtlf021 name="input.g.page7.rtlf021"
{<point name="input.g.page7.rtlf021" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf022
            #add-point:BEFORE FIELD rtlf022 name="input.b.page7.rtlf022"
{<point name="input.b.page7.rtlf022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf022
            
            #add-point:AFTER FIELD rtlf022 name="input.a.page7.rtlf022"
{<point name="input.a.page7.rtlf022" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf022
            #add-point:ON CHANGE rtlf022 name="input.g.page7.rtlf022"
{<point name="input.g.page7.rtlf022" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf024
            #add-point:BEFORE FIELD rtlf024 name="input.b.page7.rtlf024"
{<point name="input.b.page7.rtlf024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf024
            
            #add-point:AFTER FIELD rtlf024 name="input.a.page7.rtlf024"
{<point name="input.a.page7.rtlf024" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf024
            #add-point:ON CHANGE rtlf024 name="input.g.page7.rtlf024"
{<point name="input.g.page7.rtlf024" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf025
            #add-point:BEFORE FIELD rtlf025 name="input.b.page7.rtlf025"
{<point name="input.b.page7.rtlf025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf025
            
            #add-point:AFTER FIELD rtlf025 name="input.a.page7.rtlf025"
{<point name="input.a.page7.rtlf025" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf025
            #add-point:ON CHANGE rtlf025 name="input.g.page7.rtlf025"
{<point name="input.g.page7.rtlf025" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf026
            #add-point:BEFORE FIELD rtlf026 name="input.b.page7.rtlf026"
{<point name="input.b.page7.rtlf026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf026
            
            #add-point:AFTER FIELD rtlf026 name="input.a.page7.rtlf026"
{<point name="input.a.page7.rtlf026" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf026
            #add-point:ON CHANGE rtlf026 name="input.g.page7.rtlf026"
{<point name="input.g.page7.rtlf026" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtlf037
            #add-point:BEFORE FIELD rtlf037 name="input.b.page7.rtlf037"
{<point name="input.b.page7.rtlf037" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtlf037
            
            #add-point:AFTER FIELD rtlf037 name="input.a.page7.rtlf037"
{<point name="input.a.page7.rtlf037" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtlf037
            #add-point:ON CHANGE rtlf037 name="input.g.page7.rtlf037"
{<point name="input.g.page7.rtlf037" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page7.rtlfdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlfdocno
            #add-point:ON ACTION controlp INFIELD rtlfdocno name="input.c.page7.rtlfdocno"
{<point name="input.c.page7.rtlfdocno" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlfseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlfseq
            #add-point:ON ACTION controlp INFIELD rtlfseq name="input.c.page7.rtlfseq"
{<point name="input.c.page7.rtlfseq" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf103
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf103
            #add-point:ON ACTION controlp INFIELD rtlf103 name="input.c.page7.rtlf103"
{<point name="input.c.page7.rtlf103" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlfseq1
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlfseq1
            #add-point:ON ACTION controlp INFIELD rtlfseq1 name="input.c.page7.rtlfseq1"
{<point name="input.c.page7.rtlfseq1" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf001
            #add-point:ON ACTION controlp INFIELD rtlf001 name="input.c.page7.rtlf001"
{<point name="input.c.page7.rtlf001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf002
            #add-point:ON ACTION controlp INFIELD rtlf002 name="input.c.page7.rtlf002"
{<point name="input.c.page7.rtlf002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf003
            #add-point:ON ACTION controlp INFIELD rtlf003 name="input.c.page7.rtlf003"
{<point name="input.c.page7.rtlf003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf004
            #add-point:ON ACTION controlp INFIELD rtlf004 name="input.c.page7.rtlf004"
{<point name="input.c.page7.rtlf004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf036
            #add-point:ON ACTION controlp INFIELD rtlf036 name="input.c.page7.rtlf036"
{<point name="input.c.page7.rtlf036" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf005
            #add-point:ON ACTION controlp INFIELD rtlf005 name="input.c.page7.rtlf005"
{<point name="input.c.page7.rtlf005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf007
            #add-point:ON ACTION controlp INFIELD rtlf007 name="input.c.page7.rtlf007"
{<point name="input.c.page7.rtlf007" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf006
            #add-point:ON ACTION controlp INFIELD rtlf006 name="input.c.page7.rtlf006"
{<point name="input.c.page7.rtlf006" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf008
            #add-point:ON ACTION controlp INFIELD rtlf008 name="input.c.page7.rtlf008"
{<point name="input.c.page7.rtlf008" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf009
            #add-point:ON ACTION controlp INFIELD rtlf009 name="input.c.page7.rtlf009"
{<point name="input.c.page7.rtlf009" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf010
            #add-point:ON ACTION controlp INFIELD rtlf010 name="input.c.page7.rtlf010"
{<point name="input.c.page7.rtlf010" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf013
            #add-point:ON ACTION controlp INFIELD rtlf013 name="input.c.page7.rtlf013"
{<point name="input.c.page7.rtlf013" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf014
            #add-point:ON ACTION controlp INFIELD rtlf014 name="input.c.page7.rtlf014"
{<point name="input.c.page7.rtlf014" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf015
            #add-point:ON ACTION controlp INFIELD rtlf015 name="input.c.page7.rtlf015"
{<point name="input.c.page7.rtlf015" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf016
            #add-point:ON ACTION controlp INFIELD rtlf016 name="input.c.page7.rtlf016"
{<point name="input.c.page7.rtlf016" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf017
            #add-point:ON ACTION controlp INFIELD rtlf017 name="input.c.page7.rtlf017"
{<point name="input.c.page7.rtlf017" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf018
            #add-point:ON ACTION controlp INFIELD rtlf018 name="input.c.page7.rtlf018"
{<point name="input.c.page7.rtlf018" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf020
            #add-point:ON ACTION controlp INFIELD rtlf020 name="input.c.page7.rtlf020"
{<point name="input.c.page7.rtlf020" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf021
            #add-point:ON ACTION controlp INFIELD rtlf021 name="input.c.page7.rtlf021"
{<point name="input.c.page7.rtlf021" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf022
            #add-point:ON ACTION controlp INFIELD rtlf022 name="input.c.page7.rtlf022"
{<point name="input.c.page7.rtlf022" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf024
            #add-point:ON ACTION controlp INFIELD rtlf024 name="input.c.page7.rtlf024"
{<point name="input.c.page7.rtlf024" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf025
            #add-point:ON ACTION controlp INFIELD rtlf025 name="input.c.page7.rtlf025"
{<point name="input.c.page7.rtlf025" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf026
            #add-point:ON ACTION controlp INFIELD rtlf026 name="input.c.page7.rtlf026"
{<point name="input.c.page7.rtlf026" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.rtlf037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtlf037
            #add-point:ON ACTION controlp INFIELD rtlf037 name="input.c.page7.rtlf037"
{<point name="input.c.page7.rtlf037" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page4 after_row name="input.body7.after_row"
{<point name="input.body7.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_deah7_d[l_ac].* = g_deah7_d_t.*
               END IF
               CLOSE adet402_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL adet402_unlock_b("rtlf_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4 after_row2 name="input.body7.after_row2"
{<point name="input.body7.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body7.after_input"
{<point name="input.body7.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_deah7_d[li_reproduce_target].* = g_deah7_d[li_reproduce].*
 
               LET g_deah7_d[li_reproduce_target].rtlfseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_deah7_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_deah7_d.getLength()+1
            END IF
            
      END INPUT
 
      
 
 
 

{</section>}

{<section id="adet402.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'2',"))
         CALL DIALOG.setCurrentRow("s_detail5",g_idx_group.getValue("'3',"))
         CALL DIALOG.setCurrentRow("s_detail7",g_idx_group.getValue("'4',"))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD deagdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD deahseq
               WHEN "s_detail2"
                  NEXT FIELD deai001
               WHEN "s_detail5"
                  NEXT FIELD deafsite
               WHEN "s_detail7"
                  NEXT FIELD rtlfdocno
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
         CALL g_curr_diag.setCurrentRow("s_detail7",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
         CALL g_curr_diag.setCurrentRow("s_detail7",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION

{</section>}

{<section id="adet402.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION adet402_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   {<point name="show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   {<point name="show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL adet402_b_fill() #單身填充
      CALL adet402_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL adet402_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_deag_m_mask_o.* =  g_deag_m.*
   CALL adet402_deag_t_mask()
   LET g_deag_m_mask_n.* =  g_deag_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_deag_m.deagsite,g_deag_m.deagsite_desc,g_deag_m.deagdocdt,g_deag_m.deagdocno,g_deag_m.deag002, 
       g_deag_m.deag002_desc,g_deag_m.deag003,g_deag_m.deag003_desc,g_deag_m.deag004,g_deag_m.deag004_desc, 
       g_deag_m.deag001,g_deag_m.total,g_deag_m.deag005,g_deag_m.deag006,g_deag_m.deagunit,g_deag_m.deagstus, 
       g_deag_m.deagownid,g_deag_m.deagownid_desc,g_deag_m.deagowndp,g_deag_m.deagowndp_desc,g_deag_m.deagcrtid, 
       g_deag_m.deagcrtid_desc,g_deag_m.deagcrtdp,g_deag_m.deagcrtdp_desc,g_deag_m.deagcrtdt,g_deag_m.deagmodid, 
       g_deag_m.deagmodid_desc,g_deag_m.deagcnfdt,g_deag_m.deagmoddt,g_deag_m.deagcnfid,g_deag_m.deagcnfid_desc, 
       g_deag_m.deaj001,g_deag_m.deaj002,g_deag_m.deaj003,g_deag_m.deaj004,g_deag_m.deaj005,g_deag_m.deaj006, 
       g_deag_m.deaj007,g_deag_m.deaj008,g_deag_m.deaj009
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_deag_m.deagstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_deah_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_deah2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_deah5_d.getLength()
      #add-point:show段單身reference name="show.body5.reference"
      {<point name="show.body5.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_deah7_d.getLength()
      #add-point:show段單身reference name="show.body7.reference"
      {<point name="show.body7.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL adet402_detail_show()
 
   #add-point:show段之後 name="show.after"
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="adet402.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION adet402_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   {<point name="detail_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   {<point name="detail_show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="adet402.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION adet402_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   {<point name="reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE l_newno     LIKE deag_t.deagdocno 
   DEFINE l_oldno     LIKE deag_t.deagdocno 
 
   DEFINE l_master    RECORD LIKE deag_t.*
   DEFINE l_detail    RECORD LIKE deah_t.*
   DEFINE l_detail2    RECORD LIKE deai_t.*
 
   DEFINE l_detail3    RECORD LIKE deaf_t.*
 
   DEFINE l_detail4    RECORD LIKE rtlf_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   {<point name="reproduce.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   {<point name="reproduce.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_deag_m.deagdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_deagdocno_t = g_deag_m.deagdocno
 
    
   LET g_deag_m.deagdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_deag_m.deagownid = g_user
      LET g_deag_m.deagowndp = g_dept
      LET g_deag_m.deagcrtid = g_user
      LET g_deag_m.deagcrtdp = g_dept 
      LET g_deag_m.deagcrtdt = cl_get_current()
      LET g_deag_m.deagmodid = g_user
      LET g_deag_m.deagmoddt = cl_get_current()
      LET g_deag_m.deagstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_deag_m.deagstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL adet402_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_deag_m.* TO NULL
      INITIALIZE g_deah_d TO NULL
      INITIALIZE g_deah2_d TO NULL
      INITIALIZE g_deah5_d TO NULL
      INITIALIZE g_deah7_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL adet402_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adet402_set_act_visible()   
   CALL adet402_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_deagdocno_t = g_deag_m.deagdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " deagent = '" ||g_enterprise|| "' AND",
                      " deagdocno = '", g_deag_m.deagdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL adet402_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL adet402_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL adet402_msgcentre_notify('reproduce')
 
END FUNCTION

{</section>}

{<section id="adet402.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION adet402_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   {<point name="detail_reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE deah_t.*
   DEFINE l_detail2    RECORD LIKE deai_t.*
 
   DEFINE l_detail3    RECORD LIKE deaf_t.*
 
   DEFINE l_detail4    RECORD LIKE rtlf_t.*
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   {<point name="detail_reproduce.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   {<point name="detail_reproduce.pre_function"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE adet402_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM deah_t
    WHERE deahent = g_enterprise AND deahdocno = g_deagdocno_t
 
    INTO TEMP adet402_detail
 
   #將key修正為調整後   
   UPDATE adet402_detail 
      #更新key欄位
      SET deahdocno = g_deag_m.deagdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO deah_t SELECT * FROM adet402_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adet402_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM deai_t 
    WHERE deaient = g_enterprise AND deaidocno = g_deagdocno_t
 
    INTO TEMP adet402_detail
 
   #將key修正為調整後   
   UPDATE adet402_detail SET deaidocno = g_deag_m.deagdocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   {<point name="detail_reproduce.body.table2.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO deai_t SELECT * FROM adet402_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adet402_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table3.b_insert"
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM deaf_t 
    WHERE deafent = g_enterprise AND deafdocno = g_deagdocno_t
 
    INTO TEMP adet402_detail
 
   #將key修正為調整後   
   UPDATE adet402_detail SET deafdocno = g_deag_m.deagdocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table3.b_update"
   {<point name="detail_reproduce.body.table3.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO deaf_t SELECT * FROM adet402_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table3.m_insert"
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adet402_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table3.a_insert"
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table4.b_insert"
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtlf_t 
    WHERE rtlfent = g_enterprise AND rtlfdocno = g_deagdocno_t
 
    INTO TEMP adet402_detail
 
   #將key修正為調整後   
   UPDATE adet402_detail SET rtlfdocno = g_deag_m.deagdocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table4.b_update"
   {<point name="detail_reproduce.body.table4.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO rtlf_t SELECT * FROM adet402_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table4.m_insert"
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adet402_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table4.a_insert"
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_deagdocno_t = g_deag_m.deagdocno
 
   
END FUNCTION

{</section>}

{<section id="adet402.delete" >}
#+ 資料刪除
PRIVATE FUNCTION adet402_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   {<point name="delete.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   {<point name="delete.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   {<point name="delete.pre_function"/>}
   #end add-point
   
   IF g_deag_m.deagdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN adet402_cl USING g_enterprise,g_deag_m.deagdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN adet402_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE adet402_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE adet402_master_referesh USING g_deag_m.deagdocno INTO g_deag_m.deagsite,g_deag_m.deagdocdt, 
       g_deag_m.deagdocno,g_deag_m.deag002,g_deag_m.deag003,g_deag_m.deag004,g_deag_m.deag001,g_deag_m.deag005, 
       g_deag_m.deag006,g_deag_m.deagunit,g_deag_m.deagstus,g_deag_m.deagownid,g_deag_m.deagowndp,g_deag_m.deagcrtid, 
       g_deag_m.deagcrtdp,g_deag_m.deagcrtdt,g_deag_m.deagmodid,g_deag_m.deagcnfdt,g_deag_m.deagmoddt, 
       g_deag_m.deagcnfid,g_deag_m.deagsite_desc,g_deag_m.deag002_desc,g_deag_m.deag003_desc,g_deag_m.deag004_desc, 
       g_deag_m.deagownid_desc,g_deag_m.deagowndp_desc,g_deag_m.deagcrtid_desc,g_deag_m.deagcrtdp_desc, 
       g_deag_m.deagmodid_desc,g_deag_m.deagcnfid_desc
   
   
   #檢查是否允許此動作
   IF NOT adet402_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_deag_m_mask_o.* =  g_deag_m.*
   CALL adet402_deag_t_mask()
   LET g_deag_m_mask_n.* =  g_deag_m.*
   
   CALL adet402_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:3)
      #刪除相關文件
      CALL adet402_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_deagdocno_t = g_deag_m.deagdocno
 
 
      DELETE FROM deag_t
       WHERE deagent = g_enterprise AND deagdocno = g_deag_m.deagdocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_deag_m.deagdocno,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM deah_t
       WHERE deahent = g_enterprise AND deahdocno = g_deag_m.deagdocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "deah_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM deai_t
       WHERE deaient = g_enterprise AND
             deaidocno = g_deag_m.deagdocno
      #add-point:單身刪除中 name="delete.body.m_delete2"
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "deai_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete3"
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM deaf_t
       WHERE deafent = g_enterprise AND
             deafdocno = g_deag_m.deagdocno
      #add-point:單身刪除中 name="delete.body.m_delete3"
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "deaf_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete3"
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete4"
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM rtlf_t
       WHERE rtlfent = g_enterprise AND
             rtlfdocno = g_deag_m.deagdocno
      #add-point:單身刪除中 name="delete.body.m_delete4"
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtlf_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete4"
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE adet402_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_deah_d.clear() 
      CALL g_deah2_d.clear()       
      CALL g_deah5_d.clear()       
      CALL g_deah7_d.clear()       
 
     
      CALL adet402_ui_browser_refresh()  
      #CALL adet402_ui_headershow()  
      #CALL adet402_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL adet402_browser_fill("")
         CALL adet402_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
      
 
      
 
 
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      {<point name="delete.lang.delete"/>}
      #end add-point
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE adet402_cl
 
   #功能已完成,通報訊息中心
   CALL adet402_msgcentre_notify('delete')
    
END FUNCTION

{</section>}

{<section id="adet402.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION adet402_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
{<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
{<point name="b_fill.define"/>}
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
{<point name="b_fill.pre_function"/>}
   #end add-point
   
   #清空第一階單身
   CALL g_deah_d.clear()
   CALL g_deah2_d.clear()
   CALL g_deah5_d.clear()
   CALL g_deah7_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
{<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF adet402_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  DISTINCT deahseq,deah000,deah001,deah002,deah003,deah009,deah005,deah004, 
             deah007,deah006,deah008,deah013 ,t1.ooial003 ,t2.gcafl003 ,t3.oocql004 ,t4.ooail003 FROM deah_t", 
                
                     " INNER JOIN deag_t ON deagent = '" ||g_enterprise|| "' AND deagdocno = deahdocno ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN ooial_t t1 ON t1.ooialent='"||g_enterprise||"' AND t1.ooial001=deah001 AND t1.ooial002='"||g_dlang||"' ",
               " LEFT JOIN gcafl_t t2 ON t2.gcaflent='"||g_enterprise||"' AND t2.gcafl001=deah002 AND t2.gcafl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t3 ON t3.oocqlent='"||g_enterprise||"' AND t3.oocql001='2071' AND t3.oocql002=deah003 AND t3.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t4 ON t4.ooailent='"||g_enterprise||"' AND t4.ooail001=deah005 AND t4.ooail002='"||g_dlang||"' ",
 
                     " WHERE deahent=? AND deahdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
{<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY deah_t.deahseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
{<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adet402_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR adet402_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_deag_m.deagdocno
                                               
      FOREACH b_fill_cs INTO g_deah_d[l_ac].deahseq,g_deah_d[l_ac].deah000,g_deah_d[l_ac].deah001,g_deah_d[l_ac].deah002, 
          g_deah_d[l_ac].deah003,g_deah_d[l_ac].deah009,g_deah_d[l_ac].deah005,g_deah_d[l_ac].deah004, 
          g_deah_d[l_ac].deah007,g_deah_d[l_ac].deah006,g_deah_d[l_ac].deah008,g_deah_d[l_ac].deah013, 
          g_deah_d[l_ac].deah001_desc,g_deah_d[l_ac].deah002_desc,g_deah_d[l_ac].deah003_desc,g_deah_d[l_ac].deah005_desc 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
{<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF adet402_fill_chk(2) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  DISTINCT deai001,deai002,deai003,deai004,deai005  FROM deai_t",   
                     " INNER JOIN  deag_t ON deagent = '" ||g_enterprise|| "' AND deagdocno = deaidocno ",
 
                     "",
                     
                     
                     " WHERE deaient=? AND deaidocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body2.fill_sql"
{<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY deai_t.deai001,deai_t.deai002"
         
         #add-point:單身填充控制 name="b_fill.sql2"
{<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adet402_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR adet402_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_deag_m.deagdocno
                                               
      FOREACH b_fill_cs2 INTO g_deah2_d[l_ac].deai001,g_deah2_d[l_ac].deai002,g_deah2_d[l_ac].deai003, 
          g_deah2_d[l_ac].deai004,g_deah2_d[l_ac].deai005
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
{<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF adet402_fill_chk(3) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  DISTINCT deafsite,deafstatu,deafdocdt,deaf001,deaf002,deaf003,deaf004, 
             deaf012,deaf005,deaf013,deaf014,deaf006,deaf027,deaf019,deaf007,deaf020,deaf028,deaf023, 
             deaf015,deaf008,deaf009,deaf016,deaf017,deaf018,deaf010,deaf011,deaf021,deaf022,deaf024, 
             deaf025,deaf026 ,t5.ooial003 ,t6.ooial003 FROM deaf_t",   
                     " INNER JOIN  deag_t ON deagent = '" ||g_enterprise|| "' AND deagdocno = deafdocno ",
 
                     "",
                     
                                    " LEFT JOIN ooial_t t5 ON t5.ooialent='"||g_enterprise||"' AND t5.ooial001=deaf005 AND t5.ooial002='"||g_dlang||"' ",
               " LEFT JOIN ooial_t t6 ON t6.ooialent='"||g_enterprise||"' AND t6.ooial001=deaf017 AND t6.ooial002='"||g_dlang||"' ",
 
                     " WHERE deafent=? AND deafdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body3.fill_sql"
{<point name="b_fill.body3.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY deaf_t.deaf005"
         
         #add-point:單身填充控制 name="b_fill.sql3"
{<point name="b_fill.sql3"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adet402_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR adet402_pb3
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_deag_m.deagdocno
                                               
      FOREACH b_fill_cs3 INTO g_deah5_d[l_ac].deafsite,g_deah5_d[l_ac].deafstatu,g_deah5_d[l_ac].deafdocdt, 
          g_deah5_d[l_ac].deaf001,g_deah5_d[l_ac].deaf002,g_deah5_d[l_ac].deaf003,g_deah5_d[l_ac].deaf004, 
          g_deah5_d[l_ac].deaf012,g_deah5_d[l_ac].deaf005,g_deah5_d[l_ac].deaf013,g_deah5_d[l_ac].deaf014, 
          g_deah5_d[l_ac].deaf006,g_deah5_d[l_ac].deaf027,g_deah5_d[l_ac].deaf019,g_deah5_d[l_ac].deaf007, 
          g_deah5_d[l_ac].deaf020,g_deah5_d[l_ac].deaf028,g_deah5_d[l_ac].deaf023,g_deah5_d[l_ac].deaf015, 
          g_deah5_d[l_ac].deaf008,g_deah5_d[l_ac].deaf009,g_deah5_d[l_ac].deaf016,g_deah5_d[l_ac].deaf017, 
          g_deah5_d[l_ac].deaf018,g_deah5_d[l_ac].deaf010,g_deah5_d[l_ac].deaf011,g_deah5_d[l_ac].deaf021, 
          g_deah5_d[l_ac].deaf022,g_deah5_d[l_ac].deaf024,g_deah5_d[l_ac].deaf025,g_deah5_d[l_ac].deaf026, 
          g_deah5_d[l_ac].deaf005_desc,g_deah5_d[l_ac].deaf017_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill3.fill"
{<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF adet402_fill_chk(4) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  DISTINCT rtlfdocno,rtlfseq,rtlf103,rtlfseq1,rtlf001,rtlf002,rtlf003,rtlf004, 
             rtlf036,rtlf005,rtlf007,rtlf006,rtlf008,rtlf009,rtlf010,rtlf013,rtlf014,rtlf015,rtlf016, 
             rtlf017,rtlf018,rtlf020,rtlf021,rtlf022,rtlf024,rtlf025,rtlf026,rtlf037 ,t7.ooial003 ,t8.gcafl003 FROM rtlf_t", 
                
                     " INNER JOIN  deag_t ON deagent = '" ||g_enterprise|| "' AND deagdocno = rtlfdocno ",
 
                     "",
                     
                                    " LEFT JOIN ooial_t t7 ON t7.ooialent='"||g_enterprise||"' AND t7.ooial001=rtlf002 AND t7.ooial002='"||g_dlang||"' ",
               " LEFT JOIN gcafl_t t8 ON t8.gcaflent='"||g_enterprise||"' AND t8.gcafl001=rtlf013 AND t8.gcafl002='"||g_dlang||"' ",
 
                     " WHERE rtlfent=? AND rtlfdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body4.fill_sql"
{<point name="b_fill.body4.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table4) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtlf_t.rtlfseq"
         
         #add-point:單身填充控制 name="b_fill.sql4"
{<point name="b_fill.sql4"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adet402_pb4 FROM g_sql
         DECLARE b_fill_cs4 CURSOR FOR adet402_pb4
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs4 USING g_enterprise,g_deag_m.deagdocno
                                               
      FOREACH b_fill_cs4 INTO g_deah7_d[l_ac].rtlfdocno,g_deah7_d[l_ac].rtlfseq,g_deah7_d[l_ac].rtlf103, 
          g_deah7_d[l_ac].rtlfseq1,g_deah7_d[l_ac].rtlf001,g_deah7_d[l_ac].rtlf002,g_deah7_d[l_ac].rtlf003, 
          g_deah7_d[l_ac].rtlf004,g_deah7_d[l_ac].rtlf036,g_deah7_d[l_ac].rtlf005,g_deah7_d[l_ac].rtlf007, 
          g_deah7_d[l_ac].rtlf006,g_deah7_d[l_ac].rtlf008,g_deah7_d[l_ac].rtlf009,g_deah7_d[l_ac].rtlf010, 
          g_deah7_d[l_ac].rtlf013,g_deah7_d[l_ac].rtlf014,g_deah7_d[l_ac].rtlf015,g_deah7_d[l_ac].rtlf016, 
          g_deah7_d[l_ac].rtlf017,g_deah7_d[l_ac].rtlf018,g_deah7_d[l_ac].rtlf020,g_deah7_d[l_ac].rtlf021, 
          g_deah7_d[l_ac].rtlf022,g_deah7_d[l_ac].rtlf024,g_deah7_d[l_ac].rtlf025,g_deah7_d[l_ac].rtlf026, 
          g_deah7_d[l_ac].rtlf037,g_deah7_d[l_ac].rtlf002_desc,g_deah7_d[l_ac].rtlf013_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill4.fill"
{<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
{<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_deah_d.deleteElement(g_deah_d.getLength())
   CALL g_deah2_d.deleteElement(g_deah2_d.getLength())
   CALL g_deah5_d.deleteElement(g_deah5_d.getLength())
   CALL g_deah7_d.deleteElement(g_deah7_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE adet402_pb
   FREE adet402_pb2
 
   FREE adet402_pb3
 
   FREE adet402_pb4
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_deah_d.getLength()
      LET g_deah_d_mask_o[l_ac].* =  g_deah_d[l_ac].*
      CALL adet402_deah_t_mask()
      LET g_deah_d_mask_n[l_ac].* =  g_deah_d[l_ac].*
   END FOR
   
   LET g_deah2_d_mask_o.* =  g_deah2_d.*
   FOR l_ac = 1 TO g_deah2_d.getLength()
      LET g_deah2_d_mask_o[l_ac].* =  g_deah2_d[l_ac].*
      CALL adet402_deai_t_mask()
      LET g_deah2_d_mask_n[l_ac].* =  g_deah2_d[l_ac].*
   END FOR
   LET g_deah5_d_mask_o.* =  g_deah5_d.*
   FOR l_ac = 1 TO g_deah5_d.getLength()
      LET g_deah5_d_mask_o[l_ac].* =  g_deah5_d[l_ac].*
      CALL adet402_deaf_t_mask()
      LET g_deah5_d_mask_n[l_ac].* =  g_deah5_d[l_ac].*
   END FOR
   LET g_deah7_d_mask_o.* =  g_deah7_d.*
   FOR l_ac = 1 TO g_deah7_d.getLength()
      LET g_deah7_d_mask_o[l_ac].* =  g_deah7_d[l_ac].*
      CALL adet402_rtlf_t_mask()
      LET g_deah7_d_mask_n[l_ac].* =  g_deah7_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION

{</section>}

{<section id="adet402.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION adet402_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   {<point name="delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   {<point name="delete_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   {<point name="delete_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM deah_t
       WHERE deahent = g_enterprise AND
         deahdocno = ps_keys_bak[1] AND deahseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_deah_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM deai_t
       WHERE deaient = g_enterprise AND
             deaidocno = ps_keys_bak[1] AND deai001 = ps_keys_bak[2] AND deai002 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "deai_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_deah2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete3"
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM deaf_t
       WHERE deafent = g_enterprise AND
             deafdocno = ps_keys_bak[1] AND deaf005 = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete3"
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "deaf_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_deah5_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete3"
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete4"
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM rtlf_t
       WHERE rtlfent = g_enterprise AND
             rtlfdocno = ps_keys_bak[1] AND rtlfseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete4"
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtlf_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_deah7_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete4"
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="adet402.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION adet402_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   {<point name="insert_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   {<point name="insert_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   {<point name="insert_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO deah_t
                  (deahent,
                   deahdocno,
                   deahseq
                   ,deah000,deah001,deah002,deah003,deah009,deah005,deah004,deah007,deah006,deah008,deah013) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_deah_d[g_detail_idx].deah000,g_deah_d[g_detail_idx].deah001,g_deah_d[g_detail_idx].deah002, 
                       g_deah_d[g_detail_idx].deah003,g_deah_d[g_detail_idx].deah009,g_deah_d[g_detail_idx].deah005, 
                       g_deah_d[g_detail_idx].deah004,g_deah_d[g_detail_idx].deah007,g_deah_d[g_detail_idx].deah006, 
                       g_deah_d[g_detail_idx].deah008,g_deah_d[g_detail_idx].deah013)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "deah_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_deah_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO deai_t
                  (deaient,
                   deaidocno,
                   deai001,deai002
                   ,deai003,deai004,deai005) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_deah2_d[g_detail_idx].deai003,g_deah2_d[g_detail_idx].deai004,g_deah2_d[g_detail_idx].deai005) 

      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "deai_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_deah2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert3"
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO deaf_t
                  (deafent,
                   deafdocno,
                   deaf005
                   ,deafsite,deafstatu,deafdocdt,deaf001,deaf002,deaf003,deaf004,deaf012,deaf013,deaf014,deaf006,deaf027,deaf019,deaf007,deaf020,deaf028,deaf023,deaf015,deaf008,deaf009,deaf016,deaf017,deaf018,deaf010,deaf011,deaf021,deaf022,deaf024,deaf025,deaf026) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_deah5_d[g_detail_idx].deafsite,g_deah5_d[g_detail_idx].deafstatu,g_deah5_d[g_detail_idx].deafdocdt, 
                       g_deah5_d[g_detail_idx].deaf001,g_deah5_d[g_detail_idx].deaf002,g_deah5_d[g_detail_idx].deaf003, 
                       g_deah5_d[g_detail_idx].deaf004,g_deah5_d[g_detail_idx].deaf012,g_deah5_d[g_detail_idx].deaf013, 
                       g_deah5_d[g_detail_idx].deaf014,g_deah5_d[g_detail_idx].deaf006,g_deah5_d[g_detail_idx].deaf027, 
                       g_deah5_d[g_detail_idx].deaf019,g_deah5_d[g_detail_idx].deaf007,g_deah5_d[g_detail_idx].deaf020, 
                       g_deah5_d[g_detail_idx].deaf028,g_deah5_d[g_detail_idx].deaf023,g_deah5_d[g_detail_idx].deaf015, 
                       g_deah5_d[g_detail_idx].deaf008,g_deah5_d[g_detail_idx].deaf009,g_deah5_d[g_detail_idx].deaf016, 
                       g_deah5_d[g_detail_idx].deaf017,g_deah5_d[g_detail_idx].deaf018,g_deah5_d[g_detail_idx].deaf010, 
                       g_deah5_d[g_detail_idx].deaf011,g_deah5_d[g_detail_idx].deaf021,g_deah5_d[g_detail_idx].deaf022, 
                       g_deah5_d[g_detail_idx].deaf024,g_deah5_d[g_detail_idx].deaf025,g_deah5_d[g_detail_idx].deaf026) 

      #add-point:insert_b段資料新增中 name="insert_b.m_insert3"
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "deaf_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_deah5_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert3"
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert4"
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO rtlf_t
                  (rtlfent,
                   rtlfdocno,
                   rtlfseq
                   ,rtlf103,rtlfseq1,rtlf001,rtlf002,rtlf003,rtlf004,rtlf036,rtlf005,rtlf007,rtlf006,rtlf008,rtlf009,rtlf010,rtlf013,rtlf014,rtlf015,rtlf016,rtlf017,rtlf018,rtlf020,rtlf021,rtlf022,rtlf024,rtlf025,rtlf026,rtlf037) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_deah7_d[g_detail_idx].rtlf103,g_deah7_d[g_detail_idx].rtlfseq1,g_deah7_d[g_detail_idx].rtlf001, 
                       g_deah7_d[g_detail_idx].rtlf002,g_deah7_d[g_detail_idx].rtlf003,g_deah7_d[g_detail_idx].rtlf004, 
                       g_deah7_d[g_detail_idx].rtlf036,g_deah7_d[g_detail_idx].rtlf005,g_deah7_d[g_detail_idx].rtlf007, 
                       g_deah7_d[g_detail_idx].rtlf006,g_deah7_d[g_detail_idx].rtlf008,g_deah7_d[g_detail_idx].rtlf009, 
                       g_deah7_d[g_detail_idx].rtlf010,g_deah7_d[g_detail_idx].rtlf013,g_deah7_d[g_detail_idx].rtlf014, 
                       g_deah7_d[g_detail_idx].rtlf015,g_deah7_d[g_detail_idx].rtlf016,g_deah7_d[g_detail_idx].rtlf017, 
                       g_deah7_d[g_detail_idx].rtlf018,g_deah7_d[g_detail_idx].rtlf020,g_deah7_d[g_detail_idx].rtlf021, 
                       g_deah7_d[g_detail_idx].rtlf022,g_deah7_d[g_detail_idx].rtlf024,g_deah7_d[g_detail_idx].rtlf025, 
                       g_deah7_d[g_detail_idx].rtlf026,g_deah7_d[g_detail_idx].rtlf037)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert4"
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtlf_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_deah7_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert4"
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION

{</section>}

{<section id="adet402.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION adet402_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   {<point name="update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   {<point name="update_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   {<point name="update_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "deah_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL adet402_deah_t_mask_restore('restore_mask_o')
               
      UPDATE deah_t 
         SET (deahdocno,
              deahseq
              ,deah000,deah001,deah002,deah003,deah009,deah005,deah004,deah007,deah006,deah008,deah013) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_deah_d[g_detail_idx].deah000,g_deah_d[g_detail_idx].deah001,g_deah_d[g_detail_idx].deah002, 
                  g_deah_d[g_detail_idx].deah003,g_deah_d[g_detail_idx].deah009,g_deah_d[g_detail_idx].deah005, 
                  g_deah_d[g_detail_idx].deah004,g_deah_d[g_detail_idx].deah007,g_deah_d[g_detail_idx].deah006, 
                  g_deah_d[g_detail_idx].deah008,g_deah_d[g_detail_idx].deah013) 
         WHERE deahent = g_enterprise AND deahdocno = ps_keys_bak[1] AND deahseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "deah_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "deah_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL adet402_deah_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "deai_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL adet402_deai_t_mask_restore('restore_mask_o')
               
      UPDATE deai_t 
         SET (deaidocno,
              deai001,deai002
              ,deai003,deai004,deai005) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_deah2_d[g_detail_idx].deai003,g_deah2_d[g_detail_idx].deai004,g_deah2_d[g_detail_idx].deai005)  

         WHERE deaient = g_enterprise AND deaidocno = ps_keys_bak[1] AND deai001 = ps_keys_bak[2] AND deai002 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update2"
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "deai_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "deai_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL adet402_deai_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "deaf_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update3"
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL adet402_deaf_t_mask_restore('restore_mask_o')
               
      UPDATE deaf_t 
         SET (deafdocno,
              deaf005
              ,deafsite,deafstatu,deafdocdt,deaf001,deaf002,deaf003,deaf004,deaf012,deaf013,deaf014,deaf006,deaf027,deaf019,deaf007,deaf020,deaf028,deaf023,deaf015,deaf008,deaf009,deaf016,deaf017,deaf018,deaf010,deaf011,deaf021,deaf022,deaf024,deaf025,deaf026) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_deah5_d[g_detail_idx].deafsite,g_deah5_d[g_detail_idx].deafstatu,g_deah5_d[g_detail_idx].deafdocdt, 
                  g_deah5_d[g_detail_idx].deaf001,g_deah5_d[g_detail_idx].deaf002,g_deah5_d[g_detail_idx].deaf003, 
                  g_deah5_d[g_detail_idx].deaf004,g_deah5_d[g_detail_idx].deaf012,g_deah5_d[g_detail_idx].deaf013, 
                  g_deah5_d[g_detail_idx].deaf014,g_deah5_d[g_detail_idx].deaf006,g_deah5_d[g_detail_idx].deaf027, 
                  g_deah5_d[g_detail_idx].deaf019,g_deah5_d[g_detail_idx].deaf007,g_deah5_d[g_detail_idx].deaf020, 
                  g_deah5_d[g_detail_idx].deaf028,g_deah5_d[g_detail_idx].deaf023,g_deah5_d[g_detail_idx].deaf015, 
                  g_deah5_d[g_detail_idx].deaf008,g_deah5_d[g_detail_idx].deaf009,g_deah5_d[g_detail_idx].deaf016, 
                  g_deah5_d[g_detail_idx].deaf017,g_deah5_d[g_detail_idx].deaf018,g_deah5_d[g_detail_idx].deaf010, 
                  g_deah5_d[g_detail_idx].deaf011,g_deah5_d[g_detail_idx].deaf021,g_deah5_d[g_detail_idx].deaf022, 
                  g_deah5_d[g_detail_idx].deaf024,g_deah5_d[g_detail_idx].deaf025,g_deah5_d[g_detail_idx].deaf026)  

         WHERE deafent = g_enterprise AND deafdocno = ps_keys_bak[1] AND deaf005 = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update3"
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "deaf_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "deaf_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL adet402_deaf_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update3"
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtlf_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update4"
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL adet402_rtlf_t_mask_restore('restore_mask_o')
               
      UPDATE rtlf_t 
         SET (rtlfdocno,
              rtlfseq
              ,rtlf103,rtlfseq1,rtlf001,rtlf002,rtlf003,rtlf004,rtlf036,rtlf005,rtlf007,rtlf006,rtlf008,rtlf009,rtlf010,rtlf013,rtlf014,rtlf015,rtlf016,rtlf017,rtlf018,rtlf020,rtlf021,rtlf022,rtlf024,rtlf025,rtlf026,rtlf037) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_deah7_d[g_detail_idx].rtlf103,g_deah7_d[g_detail_idx].rtlfseq1,g_deah7_d[g_detail_idx].rtlf001, 
                  g_deah7_d[g_detail_idx].rtlf002,g_deah7_d[g_detail_idx].rtlf003,g_deah7_d[g_detail_idx].rtlf004, 
                  g_deah7_d[g_detail_idx].rtlf036,g_deah7_d[g_detail_idx].rtlf005,g_deah7_d[g_detail_idx].rtlf007, 
                  g_deah7_d[g_detail_idx].rtlf006,g_deah7_d[g_detail_idx].rtlf008,g_deah7_d[g_detail_idx].rtlf009, 
                  g_deah7_d[g_detail_idx].rtlf010,g_deah7_d[g_detail_idx].rtlf013,g_deah7_d[g_detail_idx].rtlf014, 
                  g_deah7_d[g_detail_idx].rtlf015,g_deah7_d[g_detail_idx].rtlf016,g_deah7_d[g_detail_idx].rtlf017, 
                  g_deah7_d[g_detail_idx].rtlf018,g_deah7_d[g_detail_idx].rtlf020,g_deah7_d[g_detail_idx].rtlf021, 
                  g_deah7_d[g_detail_idx].rtlf022,g_deah7_d[g_detail_idx].rtlf024,g_deah7_d[g_detail_idx].rtlf025, 
                  g_deah7_d[g_detail_idx].rtlf026,g_deah7_d[g_detail_idx].rtlf037) 
         WHERE rtlfent = g_enterprise AND rtlfdocno = ps_keys_bak[1] AND rtlfseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update4"
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtlf_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtlf_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL adet402_rtlf_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update4"
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="adet402.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION adet402_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   {<point name="key_update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   {<point name="key_update_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   {<point name="key_update_b.pre_function"/>}
   #end add-point
   
 
   
END FUNCTION

{</section>}

{<section id="adet402.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION adet402_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   {<point name="key_delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   {<point name="key_delete_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   {<point name="key_delete_b.pre_function"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="adet402.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION adet402_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   {<point name="lock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   {<point name="lock_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   {<point name="lock_b.pre_function"/>}
   #end add-point
    
   #先刷新資料
   #CALL adet402_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "deah_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN adet402_bcl USING g_enterprise,
                                       g_deag_m.deagdocno,g_deah_d[g_detail_idx].deahseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adet402_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "deai_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adet402_bcl2 USING g_enterprise,
                                             g_deag_m.deagdocno,g_deah2_d[g_detail_idx].deai001,g_deah2_d[g_detail_idx].deai002 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adet402_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "deaf_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adet402_bcl3 USING g_enterprise,
                                             g_deag_m.deagdocno,g_deah5_d[g_detail_idx].deaf005
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adet402_bcl3:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "rtlf_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adet402_bcl4 USING g_enterprise,
                                             g_deag_m.deagdocno,g_deah7_d[g_detail_idx].rtlfseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adet402_bcl4:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="adet402.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION adet402_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   {<point name="unlock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   {<point name="unlock_b.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   {<point name="unlock_b.pre_function"/>}
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adet402_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adet402_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adet402_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adet402_bcl4
   END IF
 
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="adet402.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION adet402_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   {<point name="set_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   {<point name="set_entry.define"/>} 
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   {<point name="set_entry.pre_function"/>}
   #end add-point
   
   CALL cl_set_comp_entry("deagdocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("deagdocno",TRUE)
      CALL cl_set_comp_entry("deagdocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="adet402.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION adet402_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   {<point name="set_no_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   {<point name="set_no_entry.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   {<point name="set_no_entry.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("deagdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("deagdocno",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("deagdocdt",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="adet402.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION adet402_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   {<point name="set_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   {<point name="set_entry_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   {<point name="set_entry_b.pre_function"/>}
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION

{</section>}

{<section id="adet402.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION adet402_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   {<point name="set_no_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   {<point name="set_no_entry_b.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   {<point name="set_no_entry_b.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION

{</section>}

{<section id="adet402.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION adet402_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   {<point name="set_act_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   {<point name="set_act_visible.define"/>} 
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="adet402.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION adet402_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   {<point name="set_act_no_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   {<point name="set_act_no_visible.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="adet402.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION adet402_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   {<point name="set_act_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   {<point name="set_act_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="adet402.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION adet402_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   {<point name="set_act_no_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   {<point name="set_act_no_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="adet402.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION adet402_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " deagdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
         INITIALIZE g_wc2_table4 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "deag_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "deah_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "deai_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "deaf_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "rtlf_t" 
                  LET g_wc2_table4 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
            OR NOT cl_null(g_wc2_table4)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
            IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION

{</section>}

{<section id="adet402.state_change" >}
   #應用 a09 樣板自動產生(Version:16)
#+ 確認碼變更 
PRIVATE FUNCTION adet402_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   {<point name="statechange.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_deag_m.deagdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN adet402_cl USING g_enterprise,g_deag_m.deagdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN adet402_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE adet402_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE adet402_master_referesh USING g_deag_m.deagdocno INTO g_deag_m.deagsite,g_deag_m.deagdocdt, 
       g_deag_m.deagdocno,g_deag_m.deag002,g_deag_m.deag003,g_deag_m.deag004,g_deag_m.deag001,g_deag_m.deag005, 
       g_deag_m.deag006,g_deag_m.deagunit,g_deag_m.deagstus,g_deag_m.deagownid,g_deag_m.deagowndp,g_deag_m.deagcrtid, 
       g_deag_m.deagcrtdp,g_deag_m.deagcrtdt,g_deag_m.deagmodid,g_deag_m.deagcnfdt,g_deag_m.deagmoddt, 
       g_deag_m.deagcnfid,g_deag_m.deagsite_desc,g_deag_m.deag002_desc,g_deag_m.deag003_desc,g_deag_m.deag004_desc, 
       g_deag_m.deagownid_desc,g_deag_m.deagowndp_desc,g_deag_m.deagcrtid_desc,g_deag_m.deagcrtdp_desc, 
       g_deag_m.deagmodid_desc,g_deag_m.deagcnfid_desc
   
 
   #檢查是否允許此動作
   IF NOT adet402_action_chk() THEN
      CLOSE adet402_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_deag_m.deagsite,g_deag_m.deagsite_desc,g_deag_m.deagdocdt,g_deag_m.deagdocno,g_deag_m.deag002, 
       g_deag_m.deag002_desc,g_deag_m.deag003,g_deag_m.deag003_desc,g_deag_m.deag004,g_deag_m.deag004_desc, 
       g_deag_m.deag001,g_deag_m.total,g_deag_m.deag005,g_deag_m.deag006,g_deag_m.deagunit,g_deag_m.deagstus, 
       g_deag_m.deagownid,g_deag_m.deagownid_desc,g_deag_m.deagowndp,g_deag_m.deagowndp_desc,g_deag_m.deagcrtid, 
       g_deag_m.deagcrtid_desc,g_deag_m.deagcrtdp,g_deag_m.deagcrtdp_desc,g_deag_m.deagcrtdt,g_deag_m.deagmodid, 
       g_deag_m.deagmodid_desc,g_deag_m.deagcnfdt,g_deag_m.deagmoddt,g_deag_m.deagcnfid,g_deag_m.deagcnfid_desc, 
       g_deag_m.deaj001,g_deag_m.deaj002,g_deag_m.deaj003,g_deag_m.deaj004,g_deag_m.deaj005,g_deag_m.deaj006, 
       g_deag_m.deaj007,g_deag_m.deaj008,g_deag_m.deaj009
 
   CASE g_deag_m.deagstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_deag_m.deagstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT adet402_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE adet402_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT adet402_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE adet402_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_deag_m.deagstus = lc_state OR cl_null(lc_state) THEN
      CLOSE adet402_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_deag_m.deagmodid = g_user
   LET g_deag_m.deagmoddt = cl_get_current()
   LET g_deag_m.deagstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE deag_t 
      SET (deagstus,deagmodid,deagmoddt) 
        = (g_deag_m.deagstus,g_deag_m.deagmodid,g_deag_m.deagmoddt)     
    WHERE deagent = g_enterprise AND deagdocno = g_deag_m.deagdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE adet402_master_referesh USING g_deag_m.deagdocno INTO g_deag_m.deagsite,g_deag_m.deagdocdt, 
          g_deag_m.deagdocno,g_deag_m.deag002,g_deag_m.deag003,g_deag_m.deag004,g_deag_m.deag001,g_deag_m.deag005, 
          g_deag_m.deag006,g_deag_m.deagunit,g_deag_m.deagstus,g_deag_m.deagownid,g_deag_m.deagowndp, 
          g_deag_m.deagcrtid,g_deag_m.deagcrtdp,g_deag_m.deagcrtdt,g_deag_m.deagmodid,g_deag_m.deagcnfdt, 
          g_deag_m.deagmoddt,g_deag_m.deagcnfid,g_deag_m.deagsite_desc,g_deag_m.deag002_desc,g_deag_m.deag003_desc, 
          g_deag_m.deag004_desc,g_deag_m.deagownid_desc,g_deag_m.deagowndp_desc,g_deag_m.deagcrtid_desc, 
          g_deag_m.deagcrtdp_desc,g_deag_m.deagmodid_desc,g_deag_m.deagcnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_deag_m.deagsite,g_deag_m.deagsite_desc,g_deag_m.deagdocdt,g_deag_m.deagdocno, 
          g_deag_m.deag002,g_deag_m.deag002_desc,g_deag_m.deag003,g_deag_m.deag003_desc,g_deag_m.deag004, 
          g_deag_m.deag004_desc,g_deag_m.deag001,g_deag_m.total,g_deag_m.deag005,g_deag_m.deag006,g_deag_m.deagunit, 
          g_deag_m.deagstus,g_deag_m.deagownid,g_deag_m.deagownid_desc,g_deag_m.deagowndp,g_deag_m.deagowndp_desc, 
          g_deag_m.deagcrtid,g_deag_m.deagcrtid_desc,g_deag_m.deagcrtdp,g_deag_m.deagcrtdp_desc,g_deag_m.deagcrtdt, 
          g_deag_m.deagmodid,g_deag_m.deagmodid_desc,g_deag_m.deagcnfdt,g_deag_m.deagmoddt,g_deag_m.deagcnfid, 
          g_deag_m.deagcnfid_desc,g_deag_m.deaj001,g_deag_m.deaj002,g_deag_m.deaj003,g_deag_m.deaj004, 
          g_deag_m.deaj005,g_deag_m.deaj006,g_deag_m.deaj007,g_deag_m.deaj008,g_deag_m.deaj009
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE adet402_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL adet402_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 

{</section>}

{<section id="adet402.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION adet402_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   {<point name="idx_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   {<point name="idx_chk.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   {<point name="idx_chk.pre_function"/>}
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_deah_d.getLength() THEN
         LET g_detail_idx = g_deah_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_deah_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_deah_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_deah2_d.getLength() THEN
         LET g_detail_idx = g_deah2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_deah2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_deah2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail5")
      IF g_detail_idx > g_deah5_d.getLength() THEN
         LET g_detail_idx = g_deah5_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_deah5_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_deah5_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail7")
      IF g_detail_idx > g_deah7_d.getLength() THEN
         LET g_detail_idx = g_deah7_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_deah7_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_deah7_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="adet402.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION adet402_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   {<point name="b_fill2.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   {<point name="b_fill2.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   {<point name="b_fill2.pre_function"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL adet402_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION

{</section>}

{<section id="adet402.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION adet402_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   {<point name="fill_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   {<point name="fill_chk.define"/>} 
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="adet402.status_show" >}
PRIVATE FUNCTION adet402_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   {<point name="status_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   {<point name="status_show.define"/>} 
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION

{</section>}

{<section id="adet402.mask_functions" >}
&include "erp/ade/adet402_mask.4gl"

{</section>}

{<section id="adet402.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION adet402_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   {<point name="send.define_customerization" edit="c" mark="Y"/>}
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   {<point name="send.define"/>}
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   {<point name="send.pre_function"/>}
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
   LET g_wc2_table3 = " 1=1"
   LET g_wc2_table4 = " 1=1"
 
 
   CALL adet402_show()
   CALL adet402_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_deag_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_deah_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_deah2_d))
   CALL cl_bpm_set_detail_data("s_detail5", util.JSONArray.fromFGL(g_deah5_d))
   CALL cl_bpm_set_detail_data("s_detail7", util.JSONArray.fromFGL(g_deah7_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL adet402_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL adet402_ui_headershow()
   CALL adet402_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION adet402_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   {<point name="draw.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   {<point name="draw.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   {<point name="draw.pre_function"/>}
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL adet402_ui_headershow()  
   CALL adet402_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   {<point name="draw.after_function"/>}
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 

{</section>}

{<section id="adet402.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION adet402_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   {<point name="set_pk_array.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_deag_m.deagdocno
   LET g_pk_array[1].column = 'deagdocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
 

{</section>}

{<section id="adet402.other_dialog" readonly="Y" >}
   

{</section>}

{<section id="adet402.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION adet402_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   {<point name="msgcentre_notify.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   {<point name="msgcentre_notify.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   {<point name="msgcentre_notify.pre_function"/>}
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL adet402_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_deag_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 

{</section>}

{<section id="adet402.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION adet402_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   {<point name="action_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   {<point name="action_chk.define"/>} 
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   {<point name="action_chk.action_chk"/>}
   #end add-point
      
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="adet402.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

