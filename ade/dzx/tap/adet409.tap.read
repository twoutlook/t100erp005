<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="adet409" std_prog="adet409" erpver="1.0" module="ADE" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.adet409_gen_detail" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 自動產生單身
# Memo...........:
# Usage..........: CALL adet409_gen_detail()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/06/24 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION adet409_gen_detail()
DEFINE l_dedb003        LIKE dedb_t.dedb003     #卡券種編號
DEFINE l_dedb004        LIKE dedb_t.dedb004     #幣別
DEFINE l_dedb005        LIKE dedb_t.dedb005     #系統金額

DEFINE l_dedbdocdt      LIKE dedb_t.dedbdocdt   #營業日期
DEFINE l_dedb001        LIKE dedb_t.dedb001     #款別分類
DEFINE l_dedb002        LIKE dedb_t.dedb002     #款別
DEFINE l_dedbseq        LIKE dedb_t.dedbseq     #項次
DEFINE l_ac_t           LIKE type_t.num5
DEFINE l_cnt            LIKE type_t.num5

   LET g_errno = ''
   LET l_ac_t = l_ac
   
   #營業日期
   IF cl_null(g_dedb_d[l_ac].dedbdocdt) THEN
      RETURN
   END IF
   
   #款別分類
   IF cl_null(g_dedb_d[l_ac].dedb001) THEN
      RETURN
   END IF
   
   #款別
   IF cl_null(g_dedb_d[l_ac].dedb002) THEN
      RETURN
   END IF
   
   LET l_dedbdocdt = g_dedb_d[l_ac].dedbdocdt
   LET l_dedb001 = g_dedb_d[l_ac].dedb001
   LET l_dedb002 = g_dedb_d[l_ac].dedb002
   
   #同一張單據裡面，不可以出現相同 營運據點+營業日期+款別分類+款別編號
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM dedb_t
    WHERE dedbent = g_enterprise
      AND dedbdocno = g_deda_m.dedadocno
      AND dedbsite = g_dedb_d[l_ac].dedbsite
      AND dedbdocdt = g_dedb_d[l_ac].dedbdocdt
      AND dedb001 = g_dedb_d[l_ac].dedb001
      AND dedb002 = g_dedb_d[l_ac].dedb002
      
   IF l_cnt >= 1 THEN
      #同一張單據裡面，不可以重複輸入 營業日期+ 款別分類+款別！
      LET g_errno = 'ade-00038'
      RETURN
   END IF
   
   #門店收款日結檔 收款金額 卡券種編號
   LET g_sql = "SELECT deby011,deby004",
               "  FROM deby_t",
               " WHERE debyent = ",g_enterprise,
               "   AND deby001 = '",g_dedb_d[l_ac].dedb001,"'",
               "   AND deby002 = '",g_dedb_d[l_ac].dedb002,"'",
               "   AND deby003 = '",g_dedb_d[l_ac].dedbdocdt,"'",
               "   AND debysite = '",g_deda_m.dedasite,"'"
   PREPARE adet409_pre FROM g_sql
   DECLARE adet409_curs CURSOR FOR adet409_pre
   
   LET l_dedb004 = NULL
   SELECT ooie002 INTO l_dedb004
     FROM ooia_t,ooie_t
    WHERE ooiaent = ooieent
      AND ooia001 = ooie001
      AND ooia002 = ooie003
      AND ooia002 = g_dedb_d[l_ac].dedb001
      AND ooia001 = g_dedb_d[l_ac].dedb002
      AND ooiaent = g_enterprise
      AND ooiesite = g_deda_m.dedasite
   
   IF cl_null(l_dedb004) THEN
      #營運據點+款別分類+款別編號 在款別據點設定檔中 沒有款別指定幣別！
      LET g_errno = 'ade-00037'
      RETURN
   END IF
   
   #項次
   SELECT MAX(dedbseq)+1 INTO l_dedbseq
     FROM dedb_t
    WHERE dedbent = g_enterprise
      AND dedbdocno = g_deda_m.dedadocno
   
   IF cl_null(l_dedbseq) THEN
      LET l_dedbseq = 1
   END IF
   
   LET l_dedb003 = NULL
   LET l_dedb005 = NULL
   LET l_cnt = 0
   FOREACH adet409_curs INTO l_dedb003,l_dedb005
      IF SQLCA.SQLCODE THEN
         LET g_errno = SQLCA.SQLCODE
         EXIT FOREACH
      END IF
      
      LET g_dedb_d[l_ac].dedbsite  = g_deda_m.dedasite
      LET g_dedb_d[l_ac].dedbunit  = g_deda_m.dedaunit
      LET g_dedb_d[l_ac].dedbdocdt = l_dedbdocdt
      LET g_dedb_d[l_ac].dedbseq   = l_dedbseq
      LET g_dedb_d[l_ac].dedb001   = l_dedb001
      LET g_dedb_d[l_ac].dedb002   = l_dedb002
      LET g_dedb_d[l_ac].dedb003   = l_dedb003
      LET g_dedb_d[l_ac].dedb004   = l_dedb004
      LET g_dedb_d[l_ac].dedb005   = l_dedb005
      LET g_dedb_d[l_ac].dedb006    = 0
      LET g_dedb_d[l_ac].dedb007   = NULL
      LET g_dedb_d[l_ac].sum       = l_dedb005 - 0
      
      #款別
      CALL s_desc_get_ooial_desc(g_dedb_d[l_ac].dedb002)
         RETURNING g_dedb_d[l_ac].dedb002_desc
      DISPLAY BY NAME g_dedb_d[l_ac].dedb002_desc

      #卡券種編號
      CASE g_dedb_d[l_ac].dedb001
         WHEN '40' #款別編號=40有價券/禮券類型
            CALL s_deac_get_gcaf_desc(g_dedb_d[l_ac].dedb003)
               RETURNING g_dedb_d[l_ac].dedb003_desc
         WHEN '50' #款別編號=50銀行卡/信用卡
            CALL s_desc_get_mman_desc(g_dedb_d[l_ac].dedb003)
               RETURNING g_dedb_d[l_ac].dedb003_desc
      END CASE
      DISPLAY BY NAME g_dedb_d[l_ac].dedb003_desc

      #幣別
      CALL s_desc_get_currency_desc(g_dedb_d[l_ac].dedb004)
         RETURNING g_dedb_d[l_ac].dedb004_desc
      DISPLAY BY NAME g_dedb_d[l_ac].dedb004_desc
      
      IF l_ac <> l_ac_t THEN
         INSERT INTO dedb_t
            (dedbent,dedbsite,dedbunit,dedbdocno,dedbdocdt,
             dedbseq,dedb001, dedb002, dedb003,  dedb004,
             dedb005,dedb006,dedb007) 
            VALUES(g_enterprise,g_deda_m.dedasite,g_deda_m.dedaunit,g_deda_m.dedadocno,l_dedbdocdt,
                   l_dedbseq,   l_dedb001,        l_dedb002,        l_dedb003,         l_dedb004,
                   l_dedb005,   0,                NULL)
         IF SQLCA.sqlcode THEN
            LET g_errno = SQLCA.sqlcode
            EXIT FOREACH
         END IF
      END IF
      
      LET l_dedbseq = l_dedbseq + 1
      LET l_ac = l_ac + 1
      LET l_dedb003 = NULL
      LET l_dedb005 = NULL
      LET l_cnt = l_cnt + 1
      LET g_entry = 'Y'
   END FOREACH
   LET l_ac = l_ac_t
   IF l_cnt = 0 THEN
      #營運據點+營業日期+款別分類+款別編號 在門店收款日結檔(deby_t)裡沒有符合的資料！
      LET g_errno = 'ade-00040'
   END IF
END FUNCTION]]>
  </point>
  <point name="function.adet409_gen_detail_reproduce" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 重新產生單身資料
# Memo...........:
# Usage..........: CALL adet409_gen_detail_reproduce()
#                :    RETURNING r_success
# Input parameter: 無
# Return code....: r_success     True/False
# Date & Author..: 2014/06/25 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION adet409_gen_detail_reproduce()
DEFINE r_success        LIKE type_t.num5
DEFINE l_dedb003        LIKE dedb_t.dedb003     #卡券種編號
DEFINE l_dedb004        LIKE dedb_t.dedb004     #幣別
DEFINE l_dedb005        LIKE dedb_t.dedb005     #系統金額

DEFINE l_dedbdocdt      LIKE dedb_t.dedbdocdt   #營業日期
DEFINE l_dedb001        LIKE dedb_t.dedb001     #款別分類
DEFINE l_dedb002        LIKE dedb_t.dedb002     #款別
DEFINE l_dedbseq        LIKE dedb_t.dedbseq     #項次
DEFINE l_ac_t           LIKE type_t.num5
DEFINE l_cnt            LIKE type_t.num5

   LET r_success = TRUE
   LET g_sql = "SELECT DISTINCT dedbdocdt,dedb001,dedb002",
               "  FROM dedb_t",
               " WHERE dedbent = ",g_enterprise,
               "   AND dedbdocno = '",g_dedadocno_t,"'"
   PREPARE adet409_pre1 FROM g_sql
   DECLARE adet409_curs1 CURSOR FOR adet409_pre1

   #門店收款日結檔 收款金額 卡券種編號
   LET g_sql = "SELECT deby011,deby004",
               "  FROM deby_t",
               " WHERE debyent = ",g_enterprise,
               "   AND deby001 = ?",
               "   AND deby002 = ?",
               "   AND deby003 = ?",
               "   AND debysite = '",g_deda_m.dedasite,"'"
   PREPARE adet409_pre2 FROM g_sql
   DECLARE adet409_curs2 CURSOR FOR adet409_pre2
   
   #款別指定幣別
   LET g_sql = "SELECT ooie002",
               "  FROM ooia_t,ooie_t",
               " WHERE ooiaent = ooieent",
               "   AND ooia001 = ooie001",
               "   AND ooia002 = ooie003",
               "   AND ooia002 = ?",
               "   AND ooia001 = ?",
               "   AND ooiaent = ",g_enterprise,
               "   AND ooiesite = '",g_deda_m.dedasite,"'"
   PREPARE adet409_pre3 FROM g_sql
   DECLARE adet409_curs3 CURSOR FOR adet409_pre3
   
   #項次
   SELECT MAX(dedbseq)+1 INTO l_dedbseq
     FROM dedb_t
    WHERE dedbent = g_enterprise
      AND dedbdocno = g_deda_m.dedadocno
   
   IF cl_null(l_dedbseq) THEN
      LET l_dedbseq = 1
   END IF
   
   LET l_dedb003 = NULL
   LET l_dedb005 = NULL
   LET l_cnt = 0
   FOREACH adet409_curs1 INTO l_dedbdocdt,l_dedb001,l_dedb002
      IF SQLCA.SQLCODE THEN
         CALL cl_err('Foreach adet409_curs2',SQLCA.sqlcode,1)
         LET r_success = FALSE
         RETURN r_success
      END IF
      
      #款別指定幣別
      LET l_dedb004 = NULL
      EXECUTE adet409_curs3 USING l_dedb001,l_dedb002 INTO l_dedb004
      IF cl_null(l_dedb004) THEN
         CONTINUE FOREACH
      END IF
      
      #門店收款日結檔 收款金額 卡券種編號
      FOREACH adet409_curs2 USING l_dedb001,l_dedb002,l_dedbdocdt INTO l_dedb003,l_dedb005
         IF SQLCA.SQLCODE THEN
            CALL cl_err('Foreach adet409_curs2',SQLCA.sqlcode,1)
            LET r_success = FALSE
            RETURN r_success
         END IF
         
         INSERT INTO dedb_t
            (dedbent,dedbsite,dedbunit,dedbdocno,dedbdocdt,
             dedbseq,dedb001, dedb002, dedb003,  dedb004,
             dedb005,dedb006,dedb007) 
            VALUES(g_enterprise,g_deda_m.dedasite,g_deda_m.dedaunit,g_deda_m.dedadocno,l_dedbdocdt,
                   l_dedbseq,   l_dedb001,        l_dedb002,        l_dedb003,         l_dedb004,
                   l_dedb005,   0,                NULL)
         IF SQLCA.sqlcode THEN
            CALL cl_err('Insert Into dedb_t',SQLCA.sqlcode,1)
            CONTINUE FOREACH
         END IF
         
         LET l_dedbseq = l_dedbseq + 1
         LET l_dedb003 = NULL
         LET l_dedb005 = NULL
      END FOREACH
   END FOREACH
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="construct.c.deda001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO deda001  #顯示到畫面上
            NEXT FIELD deda001                     #返回原欄位]]>
  </point>
  <point name="construct.c.deda002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deda002  #顯示到畫面上
            NEXT FIELD deda002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dedacnfid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dedacnfid  #顯示到畫面上
            NEXT FIELD dedacnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dedacrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dedacrtdp  #顯示到畫面上
            NEXT FIELD dedacrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dedacrtid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dedacrtid  #顯示到畫面上
            NEXT FIELD dedacrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dedadocno" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dedadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dedadocno  #顯示到畫面上
            NEXT FIELD dedadocno                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dedamodid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dedamodid  #顯示到畫面上
            NEXT FIELD dedamodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dedaowndp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dedaowndp  #顯示到畫面上
            NEXT FIELD dedaowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dedaownid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dedaownid  #顯示到畫面上
            NEXT FIELD dedaownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dedasite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            LET g_qryparam.arg2 = '2'
            CALL q_ooed004()                        #呼叫開窗
            DISPLAY g_qryparam.return1 TO dedasite  #顯示到畫面上
            NEXT FIELD dedasite                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.dedb002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooie001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dedb002  #顯示到畫面上
            NEXT FIELD dedb002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.dedb003" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_mman001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dedb003  #顯示到畫面上
            NEXT FIELD dedb003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.dedb004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_aooi001_1()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO dedb004  #顯示到畫面上
            NEXT FIELD dedb004                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.dedb006" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_aooi001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dedb006  #顯示到畫面上
            NEXT FIELD dedb006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.dedb007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2113'
            CALL q_oocq002()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO dedb007  #顯示到畫面上
            NEXT FIELD dedb007                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.dedb009" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dedb009  #顯示到畫面上
            NEXT FIELD dedb009                     #返回原欄位
    

]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      IF NOT s_aooi200_del_docno(g_deda_m.dedadocno,g_deda_m.dedadocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
  </point>
  <point name="detail_reproduce.body.table1.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_success = ''
   CALL adet409_gen_detail_reproduce()
      RETURNING l_success
   IF l_success THEN
      CALL s_transaction_end('Y','0')
   ELSE
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
   END IF
   RETURN]]>
  </point>
  <point name="detail_reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success   LIKE type_t.num5]]>
  </point>
  <point name="detail_show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_deda_m.dedastus = 'N' THEN
      CALL cl_set_act_visible("modify,modify_detail,delete",TRUE)
   ELSE
      CALL cl_set_act_visible("modify,modify_detail,delete",FALSE)
   END IF]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_entry               LIKE type_t.chr1]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_errshow = 1               #讓錯誤訊息彈跳出來]]>
  </point>
  <point name="input.a.deda001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_deda_m.deda001_desc = ''
            DISPLAY BY NAME g_deda_m.deda001_desc
            IF NOT cl_null(g_deda_m.deda001) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_deda_m.deda001 != g_deda_m_t.deda001 OR g_deda_m_t.deda001 IS NULL )) THEN
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL

                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_deda_m.deda001
                  LET g_chkparam.arg2 = g_deda_m.dedadocdt

                  #呼叫檢查存在的library
                  IF NOT cl_chk_exist("v_ooeg001") THEN
                     #檢查失敗時後續處理
                     LET g_deda_m.deda001 = g_deda_m_t.deda001
                     DISPLAY BY NAME g_deda_m.deda001
                     CALL s_desc_get_department_desc(g_deda_m.deda001)
                        RETURNING g_deda_m.deda001_desc
                     DISPLAY BY NAME g_deda_m.deda001_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_department_desc(g_deda_m.deda001)
               RETURNING g_deda_m.deda001_desc
            DISPLAY BY NAME g_deda_m.deda001_desc]]>
  </point>
  <point name="input.a.deda002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_deda_m.deda002_desc = ''
            DISPLAY BY NAME g_deda_m.deda002_desc
            IF NOT cl_null(g_deda_m.deda002) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_deda_m.deda002 != g_deda_m_t.deda002 OR g_deda_m_t.deda002 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_deda_m.deda002
                  IF cl_chk_exist("v_ooag001") THEN
                     #抓取業務人員對應的部門預設到 deda001
                     SELECT ooag003 INTO g_deda_m.deda001
                       FROM ooag_t
                      WHERE ooagent = g_enterprise
                        AND ooag001 = g_deda_m.deda002
                     DISPLAY BY NAME g_deda_m.deda001
                     CALL s_desc_get_department_desc(g_deda_m.deda001)
                        RETURNING g_deda_m.deda001_desc
                     DISPLAY BY NAME g_deda_m.deda001_desc
                  ELSE
                     #檢查失敗時後續處理
                     LET g_deda_m.deda002 = g_deda_m_t.deda002
                     DISPLAY BY NAME g_deda_m.deda002
                     CALL s_desc_get_person_desc(g_deda_m.deda002)
                        RETURNING g_deda_m.deda002_desc
                     DISPLAY BY NAME g_deda_m.deda002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_person_desc(g_deda_m.deda002)
               RETURNING g_deda_m.deda002_desc
            DISPLAY BY NAME g_deda_m.deda002_desc]]>
  </point>
  <point name="input.a.dedadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF p_cmd = 'a' AND NOT cl_null(g_deda_m.dedadocno) THEN
               IF NOT s_aooi200_chk_slip(g_deda_m.dedasite,'',g_deda_m.dedadocno,g_prog) THEN
                  LET g_deda_m.dedadocno = g_deda_m_t.dedadocno
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
  </point>
  <point name="input.a.dedasite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_deda_m.dedasite_desc = ''
            DISPLAY BY NAME g_deda_m.dedasite_desc
            IF NOT cl_null(g_deda_m.dedasite) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_deda_m.dedasite != g_deda_m_t.dedasite OR g_deda_m_t.dedasite IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = '2'
                  LET g_chkparam.arg3 = g_deda_m.dedasite
                  IF NOT cl_chk_exist("v_ooed004") THEN
                     LET g_deda_m.dedasite = g_deda_m_t.dedasite
                     CALL s_desc_get_department_desc(g_deda_m.dedasite)
                        RETURNING g_deda_m.dedasite_desc
                     DISPLAY BY NAME g_deda_m.dedasite_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_department_desc(g_deda_m.dedasite)
               RETURNING g_deda_m.dedasite_desc
            DISPLAY BY NAME g_deda_m.dedasite_desc]]>
  </point>
  <point name="input.a.page1.dedb001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #新增
            IF l_cmd = 'a' THEN
               CALL adet409_gen_detail()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err('',g_errno,1)
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.dedb002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_dedb_d[l_ac].dedb002_desc = ' '
            DISPLAY BY NAME g_dedb_d[l_ac].dedb002_desc
            IF NOT cl_null(g_dedb_d[l_ac].dedb002) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_dedb_d[l_ac].dedb002 != g_dedb_d_t.dedb002 OR g_dedb_d_t.dedb002 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_dedb_d[l_ac].dedb002
                  LET g_chkparam.arg2 = g_dedb_d[l_ac].dedb001
                  LET g_chkparam.arg3 = g_dedb_d[l_ac].dedbsite
                  LET g_chkparam.err_str[1] = "sub-00354|",g_dedb_d[l_ac].dedb001
                  LET g_chkparam.err_str[2] = "sub-00355|",g_dedb_d[l_ac].dedb001
                  IF NOT cl_chk_exist("v_ooie001_1") THEN
                     LET g_dedb_d[l_ac].dedb002 = g_dedb_d_t.dedb002
                     CALL s_desc_get_ooial_desc(g_dedb_d[l_ac].dedb002)
                        RETURNING g_dedb_d[l_ac].dedb002_desc
                     DISPLAY BY NAME g_dedb_d[l_ac].dedb002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
               #新增
               IF l_cmd = 'a' THEN
                  CALL adet409_gen_detail()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err('',g_errno,1)
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_ooial_desc(g_dedb_d[l_ac].dedb002)
               RETURNING g_dedb_d[l_ac].dedb002_desc
            DISPLAY BY NAME g_dedb_d[l_ac].dedb002_desc
            CALL adet409_set_entry_b(l_cmd)
            CALL adet409_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page1.dedb003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.page1.dedb004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.page1.dedb006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_dedb_d[l_ac].dedb006) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_dedb_d[l_ac].dedb006 != g_dedb_d_t.dedb006 OR g_dedb_d_t.dedb006 IS NULL )) THEN
                  IF (g_dedb_d[l_ac].dedb005 + g_dedb_d[l_ac].dedb006) < 0 THEN
                     LET g_dedb_d[l_ac].dedb006 = g_dedb_d_t.dedb006
                     #系統金額+調整金額後 不可以小於0！
                     CALL cl_err('','ade-00039',1)
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_dedb_d[l_ac].sum = g_dedb_d[l_ac].dedb005 + g_dedb_d[l_ac].dedb006]]>
  </point>
  <point name="input.a.page1.dedb007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_dedb_d[l_ac].dedb007_desc = ' '
            DISPLAY BY NAME g_dedb_d[l_ac].dedb007_desc
            IF NOT cl_null(g_dedb_d[l_ac].dedb007) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_dedb_d[l_ac].dedb007 != g_dedb_d_t.dedb007 OR g_dedb_d_t.dedb007 IS NULL )) THEN
                  IF NOT s_azzi650_chk_exist('2113',g_dedb_d[l_ac].dedb007) THEN
                     #檢查失敗時後續處理
                     LET g_dedb_d[l_ac].dedb007 = g_dedb_d_t.dedb007
                     CALL s_desc_get_acc_desc('2113',g_dedb_d[l_ac].dedb007)
                        RETURNING g_dedb_d[l_ac].dedb007_desc
                     DISPLAY BY NAME g_dedb_d[l_ac].dedb007_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_acc_desc('2113',g_dedb_d[l_ac].dedb007)
               RETURNING g_dedb_d[l_ac].dedb007_desc
            DISPLAY BY NAME g_dedb_d[l_ac].dedb007_desc]]>
  </point>
  <point name="input.a.page1.dedb009" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dedb_d[l_ac].dedb009
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2113' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_dedb_d[l_ac].dedb009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dedb_d[l_ac].dedb009_desc

]]>
  </point>
  <point name="input.a.page1.dedbseq" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_deda_m.dedadocno IS NOT NULL AND g_dedb_d[g_detail_idx].dedbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_deda_m.dedadocno != g_dedadocno_t OR g_dedb_d[g_detail_idx].dedbseq != g_dedb_d_t.dedbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM dedb_t WHERE "||"dedbent = '" ||g_enterprise|| "' AND "||"dedbdocno = '"||g_deda_m.dedadocno ||"' AND "|| "dedbseq = '"||g_dedb_d[g_detail_idx].dedbseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.body.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            SELECT MAX(dedbseq)+1 INTO g_dedb_d[l_ac].dedbseq
              FROM dedb_t
             WHERE dedbent = g_enterprise
               AND dedbdocno = g_deda_m.dedadocno
            IF cl_null(g_dedb_d[l_ac].dedbseq) OR g_dedb_d[l_ac].dedbseq = 0 THEN
               LET g_dedb_d[l_ac].dedbseq = 1
            END IF
            LET g_dedb_d[l_ac].dedbdocdt = g_today
            LET g_dedb_d[l_ac].dedbsite = g_deda_m.dedasite
            LET g_dedb_d[l_ac].dedbunit = g_dedb_d[l_ac].dedbsite
            LET g_dedb_d_t.* = g_dedb_d[l_ac].* 
            LET g_entry = 'N']]>
  </point>
  <point name="input.c.deda001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_deda_m.deda001      #給予default值
            
            #給予arg
            LET g_qryparam.arg1 = g_deda_m.dedadocdt
            CALL q_ooeg001()                                #呼叫開窗
            LET g_deda_m.deda001 = g_qryparam.return1
            DISPLAY g_deda_m.deda001 TO deda001
            CALL s_desc_get_department_desc(g_deda_m.deda001)
               RETURNING g_deda_m.deda001_desc
            DISPLAY BY NAME g_deda_m.deda001_desc
            NEXT FIELD deda001                          #返回原欄位]]>
  </point>
  <point name="input.c.deda002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_deda_m.deda002  #給予default值

            CALL q_ooag001()                            #呼叫開窗
            LET g_deda_m.deda002 = g_qryparam.return1
            DISPLAY g_deda_m.deda002 TO deda002
            NEXT FIELD deda002                          #返回原欄位]]>
  </point>
  <point name="input.c.dedadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_deda_m.dedadocno             #給予default值

            #給予arg
            LET l_ooef004 = ''
            SELECT ooef004 INTO l_ooef004
              FROM ooef_t
             WHERE ooef001 = g_site
               AND ooefent = g_enterprise
            LET g_qryparam.arg1 = l_ooef004    #單據別參照表號
            LET g_qryparam.arg2 = g_prog       #程式名稱
            
            CALL q_ooba002_1()                            #呼叫開窗
            LET g_deda_m.dedadocno = g_qryparam.return1
            DISPLAY g_deda_m.dedadocno TO dedadocno
            NEXT FIELD dedadocno                          #返回原欄位]]>
  </point>
  <point name="input.c.dedasite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_deda_m.dedasite             #給予default值
            
            #給予arg
            LET g_qryparam.arg1 = g_site
            LET g_qryparam.arg2 = '2'
            
            CALL q_ooed004()                            #呼叫開窗
            LET g_deda_m.dedasite = g_qryparam.return1
            DISPLAY g_deda_m.dedasite TO dedasite
            CALL s_desc_get_department_desc(g_deda_m.dedasite)
               RETURNING g_deda_m.dedasite_desc
            DISPLAY BY NAME g_deda_m.dedasite_desc
            NEXT FIELD dedasite                          #返回原欄位]]>
  </point>
  <point name="input.c.page1.dedb002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_dedb_d[l_ac].dedb002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_dedb_d[l_ac].dedb001
            LET g_qryparam.arg2 = g_dedb_d[l_ac].dedbsite
            CALL q_ooie001_4()                                #呼叫開窗
            LET g_dedb_d[l_ac].dedb002 = g_qryparam.return1
            DISPLAY g_dedb_d[l_ac].dedb002 TO dedb002
            CALL s_desc_get_ooial_desc(g_dedb_d[l_ac].dedb002)
               RETURNING g_dedb_d[l_ac].dedb002_desc
            DISPLAY BY NAME g_dedb_d[l_ac].dedb002_desc
            NEXT FIELD dedb002                          #返回原欄位]]>
  </point>
  <point name="input.c.page1.dedb007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_dedb_d[l_ac].dedb007             #給予default值
            
            #給予arg
            LET g_qryparam.arg1 = '2113'
            CALL q_oocq002()                                #呼叫開窗
            LET g_dedb_d[l_ac].dedb007 = g_qryparam.return1
            DISPLAY g_dedb_d[l_ac].dedb007 TO dedb007
            CALL s_desc_get_acc_desc('2113',g_dedb_d[l_ac].dedb007)
               RETURNING g_dedb_d[l_ac].dedb007_desc
            DISPLAY BY NAME g_dedb_d[l_ac].dedb007_desc
            NEXT FIELD dedb007                          #返回原欄位]]>
  </point>
  <point name="input.c.page1.dedb009" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dedb_d[l_ac].dedb009             #給予default值
            LET g_qryparam.default2 = "" #g_dedb_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_dedb_d[l_ac].dedb009 = g_qryparam.return1              
            #LET g_dedb_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_dedb_d[l_ac].dedb009 TO dedb009              #
            #DISPLAY g_dedb_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD dedb009                          #返回原欄位

]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE  l_ooef004             LIKE ooef_t.ooef004
   DEFINE  l_success             LIKE type_t.num5]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               LET g_deda_m.dedaunit = g_deda_m.dedasite
               #自動編碼
               CALL s_aooi200_gen_docno(g_deda_m.dedasite,g_deda_m.dedadocno,g_deda_m.dedadocdt,g_prog)
                    RETURNING l_success,g_deda_m.dedadocno
               IF NOT l_success THEN
                  CALL cl_err(g_deda_m.dedadocno,'apm-00003',1)
                  NEXT FIELD dedadocno
               END IF
               DISPLAY BY NAME g_deda_m.dedadocno]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_deda_m.dedasite = g_site
      LET g_deda_m.dedadocdt = g_today
      LET g_deda_m.deda001 = g_dept
      LET g_deda_m.deda002 = g_user
      
      #營運據點
      CALL s_desc_get_department_desc(g_deda_m.dedasite)
         RETURNING g_deda_m.dedasite_desc
      DISPLAY BY NAME g_deda_m.dedasite_desc
      
      #部門
      CALL s_desc_get_department_desc(g_deda_m.deda001)
         RETURNING g_deda_m.deda001_desc
      DISPLAY BY NAME g_deda_m.deda001_desc
      
      #人員
      CALL s_desc_get_person_desc(g_deda_m.deda002)
         RETURNING g_deda_m.deda002_desc
      DISPLAY BY NAME g_deda_m.deda002_desc
      
      LET r_success = ''
      LET r_doctype = ''
      CALL s_arti200_get_def_doc_type(g_deda_m.dedasite,g_prog,'1')
         RETURNING r_success,r_doctype
      LET g_deda_m.dedadocno = r_doctype
      LET g_deda_m_t.* = g_deda_m.*]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE r_success       LIKE type_t.num5
   DEFINE r_doctype       LIKE rtai_t.rtai004]]>
  </point>
  <point name="reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE r_success       LIKE type_t.num5
   DEFINE r_doctype       LIKE rtai_t.rtai004]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_deda_m.dedasite = g_site
   LET g_deda_m.dedadocdt = g_today
   LET g_deda_m.deda001 = g_dept
   LET g_deda_m.deda002 = g_user
   
   #營運據點
   CALL s_desc_get_department_desc(g_deda_m.dedasite)
      RETURNING g_deda_m.dedasite_desc
   DISPLAY BY NAME g_deda_m.dedasite_desc
   
   #部門
   CALL s_desc_get_department_desc(g_deda_m.deda001)
      RETURNING g_deda_m.deda001_desc
   DISPLAY BY NAME g_deda_m.deda001_desc
   
   #人員
   CALL s_desc_get_person_desc(g_deda_m.deda002)
      RETURNING g_deda_m.deda002_desc
   DISPLAY BY NAME g_deda_m.deda002_desc
   
   LET r_success = ''
   LET r_doctype = ''
   CALL s_arti200_get_def_doc_type(g_deda_m.dedasite,g_prog,'1')
      RETURNING r_success,r_doctype
   LET g_deda_m.dedadocno = r_doctype
   LET g_deda_m_t.* = g_deda_m.*]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("dedadocdt",TRUE)
      CALL cl_set_comp_entry("dedasite",TRUE)]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("dedbdocdt",TRUE)
   CALL cl_set_comp_entry("dedb001",TRUE)
   CALL cl_set_comp_entry("dedb002",TRUE)]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("dedadocdt",FALSE)
      CALL cl_set_comp_entry("dedasite",FALSE)]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF p_cmd = 'u' OR g_entry = 'Y' THEN
      CALL cl_set_comp_entry("dedbdocdt",FALSE)
      CALL cl_set_comp_entry("dedb001",FALSE)
      CALL cl_set_comp_entry("dedb002",FALSE)
   END IF]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      
      #調整後金額
      LET g_dedb_d[l_ac].sum = g_dedb_d[l_ac].dedb005 + g_dedb_d[l_ac].dedb006
      
      #款別
      CALL s_desc_get_ooial_desc(g_dedb_d[l_ac].dedb002)
         RETURNING g_dedb_d[l_ac].dedb002_desc
      DISPLAY BY NAME g_dedb_d[l_ac].dedb002_desc

      #卡券種編號
      CASE g_dedb_d[l_ac].dedb001
         WHEN '40' #款別編號=40有價券/禮券類型
            CALL s_deac_get_gcaf_desc(g_dedb_d[l_ac].dedb003)
               RETURNING g_dedb_d[l_ac].dedb003_desc
         WHEN '50' #款別編號=50銀行卡/信用卡
            CALL s_desc_get_mman_desc(g_dedb_d[l_ac].dedb003)
               RETURNING g_dedb_d[l_ac].dedb003_desc
      END CASE
      DISPLAY BY NAME g_dedb_d[l_ac].dedb003_desc

      #幣別
      CALL s_desc_get_currency_desc(g_dedb_d[l_ac].dedb004)
         RETURNING g_dedb_d[l_ac].dedb004_desc
      DISPLAY BY NAME g_dedb_d[l_ac].dedb004_desc
      
      #調整原因代碼
      CALL s_desc_get_acc_desc('2113',g_dedb_d[l_ac].dedb007)
         RETURNING g_dedb_d[l_ac].dedb007_desc
      DISPLAY BY NAME g_dedb_d[l_ac].dedb007_desc]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   #營運據點
   CALL s_desc_get_department_desc(g_deda_m.dedasite)
      RETURNING g_deda_m.dedasite_desc
   DISPLAY BY NAME g_deda_m.dedasite_desc
  
   #部門
   CALL s_desc_get_department_desc(g_deda_m.deda001)
      RETURNING g_deda_m.deda001_desc
   DISPLAY BY NAME g_deda_m.deda001_desc

   #人員
   CALL s_desc_get_person_desc(g_deda_m.deda002)
      RETURNING g_deda_m.deda002_desc
   DISPLAY BY NAME g_deda_m.deda002_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_deda_m.dedaownid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_deda_m.dedaownid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_deda_m.dedaownid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_deda_m.dedaowndp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_deda_m.dedaowndp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_deda_m.dedaowndp_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_deda_m.dedacrtid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_deda_m.dedacrtid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_deda_m.dedacrtid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_deda_m.dedacrtdp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_deda_m.dedacrtdp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_deda_m.dedacrtdp_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_deda_m.dedamodid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_deda_m.dedamodid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_deda_m.dedamodid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_deda_m.dedacnfid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_deda_m.dedacnfid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_deda_m.dedacnfid_desc
]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL s_transaction_begin()
   OPEN adet409_cl USING g_enterprise,g_deda_m.dedadocno
   IF STATUS THEN
      CALL cl_err("OPEN adet409_cl:", STATUS, 1)
      CLOSE adet409_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   CALL cl_showmsg_init()

   #未確認改確認(N->Y)
   IF lc_state = 'Y' AND g_deda_m.dedastus = 'N' THEN
      CALL s_adet409_conf_chk(g_deda_m.dedadocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         CALL cl_showmsg()
         RETURN
      ELSE
         IF cl_ask_confirm('aim-00108') THEN
            CALL s_adet409_conf_upd(g_deda_m.dedadocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               CALL cl_showmsg()
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
               CALL cl_showmsg()
            END IF
         ELSE
            CALL s_transaction_end('N','0')
            CALL cl_showmsg()
            RETURN
         END IF
      END IF
   END IF
   #確認改未確認(Y->N)
   IF lc_state = 'N' AND g_deda_m.dedastus = 'Y' THEN
      CALL s_adet409_unconf_chk(g_deda_m.dedadocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         CALL cl_showmsg()
         RETURN
      ELSE
         IF cl_ask_confirm('aim-00110') THEN
            CALL s_adet409_unconf_upd(g_deda_m.dedadocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               CALL cl_showmsg()
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
               CALL cl_showmsg()
            END IF
         ELSE
            CALL s_transaction_end('N','0')
            CALL cl_showmsg()
            RETURN
         END IF
      END IF
   END IF
   #未確認改作廢(N->X)
   IF lc_state = 'X' AND g_deda_m.dedastus = 'N' THEN
      CALL s_adet409_invalid_chk(g_deda_m.dedadocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         CALL cl_showmsg()
         RETURN
      ELSE
         IF cl_ask_confirm('aim-00109') THEN
            CALL s_adet409_invalid_upd(g_deda_m.dedadocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               CALL cl_showmsg()
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
               CALL cl_showmsg()
            END IF
         ELSE
            CALL s_transaction_end('N','0')
            CALL cl_showmsg()
            RETURN
         END IF
      END IF
   END IF]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_deda_m.dedastus = 'X' THEN
      RETURN
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CASE g_deda_m.dedastus
         WHEN "N"
            CALL cl_set_act_visible("unconfirmed,",FALSE)

         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,confirmed",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed",FALSE)
      END CASE]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success  LIKE type_t.num5]]>
  </point>
  <section id="adet409.b_fill" ver="5" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION adet409_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_dedb_d.clear()    #g_dedb_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF adet409_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE dedbseq,dedbdocdt,dedb001,dedb002,dedb003,dedb004,dedb005,dedb006, 
          dedb007,dedbsite,dedbunit ,t1.ooial003 ,t2.mmanl003 ,t3.ooail003 ,t4.oocql004 FROM dedb_t", 
             
                  " INNER JOIN deda_t ON dedadocno = dedbdocno ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN ooial_t t1 ON t1.ooialent='"||g_enterprise||"' AND t1.ooial001=dedb002 AND t1.ooial002='"||g_dlang||"' ",
               " LEFT JOIN mmanl_t t2 ON t2.mmanlent='"||g_enterprise||"' AND t2.mmanl001=dedb003 AND t2.mmanl002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t3 ON t3.ooailent='"||g_enterprise||"' AND t3.ooail001=dedb004 AND t3.ooail002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t4 ON t4.oocqlent='"||g_enterprise||"' AND t4.oocql001='2113' AND t4.oocql002=dedb007 AND t4.oocql003='"||g_dlang||"' ",
 
                  " WHERE dedbent=? AND dedbdocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY dedb_t.dedbseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE adet409_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR adet409_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_deda_m.dedadocno
                                               
      FOREACH b_fill_cs INTO g_dedb_d[l_ac].dedbseq,g_dedb_d[l_ac].dedbdocdt,g_dedb_d[l_ac].dedb001, 
          g_dedb_d[l_ac].dedb002,g_dedb_d[l_ac].dedb003,g_dedb_d[l_ac].dedb004,g_dedb_d[l_ac].dedb005, 
          g_dedb_d[l_ac].dedb006,g_dedb_d[l_ac].dedb007,g_dedb_d[l_ac].dedbsite,g_dedb_d[l_ac].dedbunit, 
          g_dedb_d[l_ac].dedb002_desc,g_dedb_d[l_ac].dedb003_desc,g_dedb_d[l_ac].dedb004_desc,g_dedb_d[l_ac].dedb007_desc 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_dedb_d.deleteElement(g_dedb_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE adet409_pb
 
   
END FUNCTION
]]>
  </section>
  <section id="adet409.b_fill2" ver="2" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION adet409_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL adet409_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="adet409.browser_fill" ver="6" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION adet409_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_deda_m.* TO NULL
   CALL g_dedb_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "dedadocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE dedadocno ",
                      " FROM deda_t ",
                      " ",
                      " LEFT JOIN dedb_t ON dedbent = dedaent AND dedadocno = dedbdocno ",
 
 
                      " ", 
                      " ", 
                      " WHERE dedaent = '" ||g_enterprise|| "' AND dedbent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("deda_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE dedadocno ",
                      " FROM deda_t ", 
                      "  ",
                      "  ",
                      " WHERE dedaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("deda_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照dedasite,'',dedadocdt,dedadocno,deda002,'',deda001,'' Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT dedastus,dedasite,'',dedadocdt,dedadocno,deda002,'',deda001,'',t1.ooefl003 , 
       t2.ooefl003 ,t3.ooefl003 ",
               " FROM deda_t ",
               "  ",
               "  LEFT JOIN dedb_t ON dedbent = dedaent AND dedadocno = dedbdocno ",
 
 
               "  ",
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=dedasite AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=deda002 AND t2.ooefl002='"||g_lang||"' ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=deda001 AND t3.ooefl002='"||g_lang||"' ",
 
               " WHERE dedaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("deda_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_dedasite,g_browser[g_cnt].b_dedasite_desc, 
       g_browser[g_cnt].b_dedadocdt,g_browser[g_cnt].b_dedadocno,g_browser[g_cnt].b_deda002,g_browser[g_cnt].b_deda002_desc, 
       g_browser[g_cnt].b_deda001,g_browser[g_cnt].b_deda001_desc,g_browser[g_cnt].b_dedasite_desc,g_browser[g_cnt].b_deda002_desc, 
       g_browser[g_cnt].b_deda001_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "J"
            LET g_browser[g_cnt].b_statepic = "stus/16/reconciliate.png"
         WHEN "K"
            LET g_browser[g_cnt].b_statepic = "stus/16/unreconciliate.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="adet409.browser_search" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION adet409_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY dedadocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL adet409_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="adet409.construct" ver="4" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION adet409_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_deda_m.* TO NULL
   CALL g_dedb_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON dedasite,dedadocdt,dedadocno,deda002,deda001,deda003,dedaunit,dedastus, 
          dedaownid,dedaowndp,dedacrtid,dedacrtdp,dedacrtdt,dedamodid,dedamoddt,dedacnfid,dedacnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<dedacrtdt>>----
         AFTER FIELD dedacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<dedamoddt>>----
         AFTER FIELD dedamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<dedacnfdt>>----
         AFTER FIELD dedacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<dedapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.dedasite
         ON ACTION controlp INFIELD dedasite
            #add-point:ON ACTION controlp INFIELD dedasite
            {<point name="construct.c.dedasite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedasite
            #add-point:BEFORE FIELD dedasite
            {<point name="construct.b.dedasite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedasite
            
            #add-point:AFTER FIELD dedasite
            {<point name="construct.a.dedasite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedadocdt
            #add-point:BEFORE FIELD dedadocdt
            {<point name="construct.b.dedadocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedadocdt
            
            #add-point:AFTER FIELD dedadocdt
            {<point name="construct.a.dedadocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dedadocdt
         ON ACTION controlp INFIELD dedadocdt
            #add-point:ON ACTION controlp INFIELD dedadocdt
            {<point name="construct.c.dedadocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.dedadocno
         ON ACTION controlp INFIELD dedadocno
            #add-point:ON ACTION controlp INFIELD dedadocno
            {<point name="construct.c.dedadocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedadocno
            #add-point:BEFORE FIELD dedadocno
            {<point name="construct.b.dedadocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedadocno
            
            #add-point:AFTER FIELD dedadocno
            {<point name="construct.a.dedadocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.deda002
         ON ACTION controlp INFIELD deda002
            #add-point:ON ACTION controlp INFIELD deda002
            {<point name="construct.c.deda002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deda002
            #add-point:BEFORE FIELD deda002
            {<point name="construct.b.deda002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deda002
            
            #add-point:AFTER FIELD deda002
            {<point name="construct.a.deda002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.deda001
         ON ACTION controlp INFIELD deda001
            #add-point:ON ACTION controlp INFIELD deda001
            {<point name="construct.c.deda001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deda001
            #add-point:BEFORE FIELD deda001
            {<point name="construct.b.deda001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deda001
            
            #add-point:AFTER FIELD deda001
            {<point name="construct.a.deda001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD deda003
            #add-point:BEFORE FIELD deda003
            {<point name="construct.b.deda003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deda003
            
            #add-point:AFTER FIELD deda003
            {<point name="construct.a.deda003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.deda003
         ON ACTION controlp INFIELD deda003
            #add-point:ON ACTION controlp INFIELD deda003
            {<point name="construct.c.deda003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedaunit
            #add-point:BEFORE FIELD dedaunit
            {<point name="construct.b.dedaunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedaunit
            
            #add-point:AFTER FIELD dedaunit
            {<point name="construct.a.dedaunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dedaunit
         ON ACTION controlp INFIELD dedaunit
            #add-point:ON ACTION controlp INFIELD dedaunit
            {<point name="construct.c.dedaunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedastus
            #add-point:BEFORE FIELD dedastus
            {<point name="construct.b.dedastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedastus
            
            #add-point:AFTER FIELD dedastus
            {<point name="construct.a.dedastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dedastus
         ON ACTION controlp INFIELD dedastus
            #add-point:ON ACTION controlp INFIELD dedastus
            {<point name="construct.c.dedastus" />}
            #END add-point
 
         #Ctrlp:construct.c.dedaownid
         ON ACTION controlp INFIELD dedaownid
            #add-point:ON ACTION controlp INFIELD dedaownid
            {<point name="construct.c.dedaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedaownid
            #add-point:BEFORE FIELD dedaownid
            {<point name="construct.b.dedaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedaownid
            
            #add-point:AFTER FIELD dedaownid
            {<point name="construct.a.dedaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dedaowndp
         ON ACTION controlp INFIELD dedaowndp
            #add-point:ON ACTION controlp INFIELD dedaowndp
            {<point name="construct.c.dedaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedaowndp
            #add-point:BEFORE FIELD dedaowndp
            {<point name="construct.b.dedaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedaowndp
            
            #add-point:AFTER FIELD dedaowndp
            {<point name="construct.a.dedaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dedacrtid
         ON ACTION controlp INFIELD dedacrtid
            #add-point:ON ACTION controlp INFIELD dedacrtid
            {<point name="construct.c.dedacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedacrtid
            #add-point:BEFORE FIELD dedacrtid
            {<point name="construct.b.dedacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedacrtid
            
            #add-point:AFTER FIELD dedacrtid
            {<point name="construct.a.dedacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dedacrtdp
         ON ACTION controlp INFIELD dedacrtdp
            #add-point:ON ACTION controlp INFIELD dedacrtdp
            {<point name="construct.c.dedacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedacrtdp
            #add-point:BEFORE FIELD dedacrtdp
            {<point name="construct.b.dedacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedacrtdp
            
            #add-point:AFTER FIELD dedacrtdp
            {<point name="construct.a.dedacrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedacrtdt
            #add-point:BEFORE FIELD dedacrtdt
            {<point name="construct.b.dedacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.dedamodid
         ON ACTION controlp INFIELD dedamodid
            #add-point:ON ACTION controlp INFIELD dedamodid
            {<point name="construct.c.dedamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedamodid
            #add-point:BEFORE FIELD dedamodid
            {<point name="construct.b.dedamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedamodid
            
            #add-point:AFTER FIELD dedamodid
            {<point name="construct.a.dedamodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedamoddt
            #add-point:BEFORE FIELD dedamoddt
            {<point name="construct.b.dedamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.dedacnfid
         ON ACTION controlp INFIELD dedacnfid
            #add-point:ON ACTION controlp INFIELD dedacnfid
            {<point name="construct.c.dedacnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedacnfid
            #add-point:BEFORE FIELD dedacnfid
            {<point name="construct.b.dedacnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedacnfid
            
            #add-point:AFTER FIELD dedacnfid
            {<point name="construct.a.dedacnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedacnfdt
            #add-point:BEFORE FIELD dedacnfdt
            {<point name="construct.b.dedacnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON dedbseq,dedbdocdt,dedb001,dedb002,dedb003,dedb004,dedb005,dedb006,sum, 
          dedb007,dedbsite,dedbunit
           FROM s_detail1[1].dedbseq,s_detail1[1].dedbdocdt,s_detail1[1].dedb001,s_detail1[1].dedb002, 
               s_detail1[1].dedb003,s_detail1[1].dedb004,s_detail1[1].dedb005,s_detail1[1].dedb006,s_detail1[1].sum, 
               s_detail1[1].dedb007,s_detail1[1].dedbsite,s_detail1[1].dedbunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="adet409.default_search" ver="2" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION adet409_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " dedadocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="adet409.delete" ver="3" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION adet409_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_deda_m.dedadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE adet409_master_referesh USING g_deda_m.dedadocno INTO g_deda_m.dedasite,g_deda_m.dedadocdt, 
       g_deda_m.dedadocno,g_deda_m.deda002,g_deda_m.deda001,g_deda_m.deda003,g_deda_m.dedaunit,g_deda_m.dedastus, 
       g_deda_m.dedaownid,g_deda_m.dedaowndp,g_deda_m.dedacrtid,g_deda_m.dedacrtdp,g_deda_m.dedacrtdt, 
       g_deda_m.dedamodid,g_deda_m.dedamoddt,g_deda_m.dedacnfid,g_deda_m.dedacnfdt,g_deda_m.dedasite_desc, 
       g_deda_m.deda002_desc,g_deda_m.deda001_desc,g_deda_m.dedaownid_desc,g_deda_m.dedaowndp_desc,g_deda_m.dedacrtid_desc, 
       g_deda_m.dedacrtdp_desc,g_deda_m.dedamodid_desc,g_deda_m.dedacnfid_desc
   
   
 
   CALL adet409_show()
   
   CALL s_transaction_begin()
 
   OPEN adet409_cl USING g_enterprise,g_deda_m.dedadocno
   IF STATUS THEN
      CALL cl_err("OPEN adet409_cl:", STATUS, 1)
      CLOSE adet409_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE adet409_master_referesh USING g_deda_m.dedadocno INTO g_deda_m.dedasite,g_deda_m.dedadocdt, 
       g_deda_m.dedadocno,g_deda_m.deda002,g_deda_m.deda001,g_deda_m.deda003,g_deda_m.dedaunit,g_deda_m.dedastus, 
       g_deda_m.dedaownid,g_deda_m.dedaowndp,g_deda_m.dedacrtid,g_deda_m.dedacrtdp,g_deda_m.dedacrtdt, 
       g_deda_m.dedamodid,g_deda_m.dedamoddt,g_deda_m.dedacnfid,g_deda_m.dedacnfdt,g_deda_m.dedasite_desc, 
       g_deda_m.deda002_desc,g_deda_m.deda001_desc,g_deda_m.dedaownid_desc,g_deda_m.dedaowndp_desc,g_deda_m.dedacrtid_desc, 
       g_deda_m.dedacrtdp_desc,g_deda_m.dedamodid_desc,g_deda_m.dedacnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_deda_m.dedadocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL adet409_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_dedadocno_t = g_deda_m.dedadocno
 
 
      DELETE FROM deda_t
       WHERE dedaent = g_enterprise AND dedadocno = g_deda_m.dedadocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_deda_m.dedadocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM dedb_t
       WHERE dedbent = g_enterprise AND dedbdocno = g_deda_m.dedadocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("dedb_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_dedb_d.clear() 
 
     
      #CALL adet409_ui_browser_refresh()  
      CALL adet409_ui_headershow()  
      CALL adet409_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL adet409_browser_fill("")
         CALL adet409_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL adet409_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE adet409_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_deda_m.dedadocno,'D')
    
END FUNCTION
]]>
  </section>
  <section id="adet409.delete_b" ver="3" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION adet409_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM dedb_t
       WHERE dedbent = g_enterprise AND
         dedbdocno = ps_keys_bak[1] AND dedbseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="adet409.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000080
#+ 
#+ Filename...: adet409
#+ Description: 營業款調整單維護作業
#+ Creator....: 04226(2014/06/24)
#+ Modifier...: 04226(2014/06/30)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="adet409.detail_reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION adet409_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE dedb_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE adet409_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE adet409_detail AS ",
                "SELECT * FROM dedb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO adet409_detail SELECT * FROM dedb_t 
                                         WHERE dedbent = g_enterprise AND dedbdocno = g_dedadocno_t
 
   
   #將key修正為調整後   
   UPDATE adet409_detail 
      #更新key欄位
      SET dedbdocno = g_deda_m.dedadocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO dedb_t SELECT * FROM adet409_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adet409_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_dedadocno_t = g_deda_m.dedadocno
 
   
   DROP TABLE adet409_detail
   
END FUNCTION
]]>
  </section>
  <section id="adet409.detail_show" ver="2" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION adet409_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="adet409.fetch" ver="3" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION adet409_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_deda_m.dedadocno = g_browser[g_current_idx].b_dedadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE adet409_master_referesh USING g_deda_m.dedadocno INTO g_deda_m.dedasite,g_deda_m.dedadocdt, 
       g_deda_m.dedadocno,g_deda_m.deda002,g_deda_m.deda001,g_deda_m.deda003,g_deda_m.dedaunit,g_deda_m.dedastus, 
       g_deda_m.dedaownid,g_deda_m.dedaowndp,g_deda_m.dedacrtid,g_deda_m.dedacrtdp,g_deda_m.dedacrtdt, 
       g_deda_m.dedamodid,g_deda_m.dedamoddt,g_deda_m.dedacnfid,g_deda_m.dedacnfdt,g_deda_m.dedasite_desc, 
       g_deda_m.deda002_desc,g_deda_m.deda001_desc,g_deda_m.dedaownid_desc,g_deda_m.dedaowndp_desc,g_deda_m.dedacrtid_desc, 
       g_deda_m.dedacrtdp_desc,g_deda_m.dedamodid_desc,g_deda_m.dedacnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("deda_t",SQLCA.sqlcode,1)
      INITIALIZE g_deda_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL adet409_show()
 
   #+ 此段落由子樣板a56產生
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
END FUNCTION
]]>
  </section>
  <section id="adet409.fill_chk" ver="2" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION adet409_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="adet409.filter" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION adet409_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON dedasite,dedadocdt,dedadocno,deda002,deda001
                          FROM s_browse[1].b_dedasite,s_browse[1].b_dedadocdt,s_browse[1].b_dedadocno, 
                              s_browse[1].b_deda002,s_browse[1].b_deda001
 
         BEFORE CONSTRUCT
               DISPLAY adet409_filter_parser('dedasite') TO s_browse[1].b_dedasite
            DISPLAY adet409_filter_parser('dedadocdt') TO s_browse[1].b_dedadocdt
            DISPLAY adet409_filter_parser('dedadocno') TO s_browse[1].b_dedadocno
            DISPLAY adet409_filter_parser('deda002') TO s_browse[1].b_deda002
            DISPLAY adet409_filter_parser('deda001') TO s_browse[1].b_deda001
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL adet409_filter_show('dedasite')
   CALL adet409_filter_show('dedadocdt')
   CALL adet409_filter_show('dedadocno')
   CALL adet409_filter_show('deda002')
   CALL adet409_filter_show('deda001')
 
END FUNCTION
]]>
  </section>
  <section id="adet409.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION adet409_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="adet409.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION adet409_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = adet409_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="adet409.global" ver="4" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_deda_m        RECORD
       dedasite LIKE deda_t.dedasite, 
   dedasite_desc LIKE type_t.chr80, 
   dedadocdt LIKE deda_t.dedadocdt, 
   dedadocno LIKE deda_t.dedadocno, 
   deda002 LIKE deda_t.deda002, 
   deda002_desc LIKE type_t.chr80, 
   deda001 LIKE deda_t.deda001, 
   deda001_desc LIKE type_t.chr80, 
   deda003 LIKE deda_t.deda003, 
   dedaunit LIKE deda_t.dedaunit, 
   dedastus LIKE deda_t.dedastus, 
   dedaownid LIKE deda_t.dedaownid, 
   dedaownid_desc LIKE type_t.chr80, 
   dedaowndp LIKE deda_t.dedaowndp, 
   dedaowndp_desc LIKE type_t.chr80, 
   dedacrtid LIKE deda_t.dedacrtid, 
   dedacrtid_desc LIKE type_t.chr80, 
   dedacrtdp LIKE deda_t.dedacrtdp, 
   dedacrtdp_desc LIKE type_t.chr80, 
   dedacrtdt DATETIME YEAR TO SECOND, 
   dedamodid LIKE deda_t.dedamodid, 
   dedamodid_desc LIKE type_t.chr80, 
   dedamoddt DATETIME YEAR TO SECOND, 
   dedacnfid LIKE deda_t.dedacnfid, 
   dedacnfid_desc LIKE type_t.chr80, 
   dedacnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_dedb_d        RECORD
       dedbseq LIKE dedb_t.dedbseq, 
   dedbdocdt LIKE dedb_t.dedbdocdt, 
   dedb001 LIKE dedb_t.dedb001, 
   dedb002 LIKE dedb_t.dedb002, 
   dedb002_desc LIKE type_t.chr500, 
   dedb003 LIKE dedb_t.dedb003, 
   dedb003_desc LIKE type_t.chr500, 
   dedb004 LIKE dedb_t.dedb004, 
   dedb004_desc LIKE type_t.chr500, 
   dedb005 LIKE dedb_t.dedb005, 
   dedb006 LIKE dedb_t.dedb006, 
   sum LIKE type_t.chr80, 
   dedb007 LIKE dedb_t.dedb007, 
   dedb007_desc LIKE type_t.chr500, 
   dedbsite LIKE dedb_t.dedbsite, 
   dedbunit LIKE dedb_t.dedbunit
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_deda_m          type_g_deda_m
DEFINE g_deda_m_t        type_g_deda_m
 
   DEFINE g_dedadocno_t LIKE deda_t.dedadocno
 
 
DEFINE g_dedb_d          DYNAMIC ARRAY OF type_g_dedb_d
DEFINE g_dedb_d_t        type_g_dedb_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_dedasite LIKE deda_t.dedasite,
   b_dedasite_desc LIKE type_t.chr80,
      b_dedadocdt LIKE deda_t.dedadocdt,
      b_dedadocno LIKE deda_t.dedadocno,
      b_deda002 LIKE deda_t.deda002,
   b_deda002_desc LIKE type_t.chr80,
      b_deda001 LIKE deda_t.deda001,
   b_deda001_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_dedasite LIKE deda_t.dedasite,
   b_dedasite_desc LIKE type_t.chr80,
      b_dedadocdt LIKE deda_t.dedadocdt,
      b_dedadocno LIKE deda_t.dedadocno,
      b_deda002 LIKE deda_t.deda002,
   b_deda002_desc LIKE type_t.chr80,
      b_deda001 LIKE deda_t.deda001,
   b_deda001_desc LIKE type_t.chr80
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="adet409.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION adet409_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_dedb_d.getLength() THEN
         LET g_detail_idx = g_dedb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_dedb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_dedb_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="adet409.init" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION adet409_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('dedastus','13','N,X,Y,A,D,R,W,J,K')
 
      CALL cl_set_combo_scc('dedb001','8310') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL adet409_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="adet409.input" ver="4" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION adet409_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT dedbseq,dedbdocdt,dedb001,dedb002,dedb003,dedb004,dedb005,dedb006,dedb007, 
       dedbsite,dedbunit FROM dedb_t WHERE dedbent=? AND dedbdocno=? AND dedbseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adet409_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL adet409_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL adet409_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_deda_m.dedasite,g_deda_m.dedadocdt,g_deda_m.dedadocno,g_deda_m.deda002,g_deda_m.deda001, 
       g_deda_m.deda003,g_deda_m.dedaunit,g_deda_m.dedastus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="adet409.input.body" ver="7" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_dedb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_dedb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adet409_b_fill()
            LET g_rec_b = g_dedb_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN adet409_cl USING g_enterprise,g_deda_m.dedadocno
            IF STATUS THEN
               CALL cl_err("OPEN adet409_cl:", STATUS, 1)
               CLOSE adet409_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_dedb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_dedb_d[l_ac].dedbseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_dedb_d_t.* = g_dedb_d[l_ac].*  #BACKUP
               CALL adet409_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL adet409_set_no_entry_b(l_cmd)
               IF NOT adet409_lock_b("dedb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adet409_bcl INTO g_dedb_d[l_ac].dedbseq,g_dedb_d[l_ac].dedbdocdt,g_dedb_d[l_ac].dedb001, 
                      g_dedb_d[l_ac].dedb002,g_dedb_d[l_ac].dedb003,g_dedb_d[l_ac].dedb004,g_dedb_d[l_ac].dedb005, 
                      g_dedb_d[l_ac].dedb006,g_dedb_d[l_ac].dedb007,g_dedb_d[l_ac].dedbsite,g_dedb_d[l_ac].dedbunit 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_dedb_d_t.dedbseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL adet409_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_dedb_d[l_ac].* TO NULL 
                  LET g_dedb_d[l_ac].dedb001 = "10"
      LET g_dedb_d[l_ac].dedb006 = "0"
 
            LET g_dedb_d_t.* = g_dedb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adet409_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL adet409_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_dedb_d[li_reproduce_target].* = g_dedb_d[li_reproduce].*
 
               LET g_dedb_d[li_reproduce_target].dedbseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM dedb_t 
             WHERE dedbent = g_enterprise AND dedbdocno = g_deda_m.dedadocno
 
               AND dedbseq = g_dedb_d[l_ac].dedbseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_deda_m.dedadocno
               LET gs_keys[2] = g_dedb_d[g_detail_idx].dedbseq
               CALL adet409_insert_b('dedb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_dedb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("dedb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adet409_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_dedb_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_dedb_d.deleteElement(l_ac)
               NEXT FIELD dedbseq
            END IF
         
            IF g_dedb_d[l_ac].dedbseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM dedb_t
                WHERE dedbent = g_enterprise AND dedbdocno = g_deda_m.dedadocno AND
 
                      dedbseq = g_dedb_d_t.dedbseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("dedb_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE adet409_bcl
               LET l_count = g_dedb_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_deda_m.dedadocno
               LET gs_keys[2] = g_dedb_d[g_detail_idx].dedbseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL adet409_delete_b('dedb_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD dedbseq
            #add-point:BEFORE FIELD dedbseq
            {<point name="input.b.page1.dedbseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedbseq
            
            #add-point:AFTER FIELD dedbseq
            {<point name="input.a.page1.dedbseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dedbseq
            #add-point:ON CHANGE dedbseq
            {<point name="input.g.page1.dedbseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedbdocdt
            #add-point:BEFORE FIELD dedbdocdt
            {<point name="input.b.page1.dedbdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedbdocdt
            
            #add-point:AFTER FIELD dedbdocdt
            {<point name="input.a.page1.dedbdocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dedbdocdt
            #add-point:ON CHANGE dedbdocdt
            {<point name="input.g.page1.dedbdocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedb001
            #add-point:BEFORE FIELD dedb001
            {<point name="input.b.page1.dedb001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedb001
            
            #add-point:AFTER FIELD dedb001
            {<point name="input.a.page1.dedb001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dedb001
            #add-point:ON CHANGE dedb001
            {<point name="input.g.page1.dedb001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedb002
            
            #add-point:AFTER FIELD dedb002
            {<point name="input.a.page1.dedb002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedb002
            #add-point:BEFORE FIELD dedb002
            {<point name="input.b.page1.dedb002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dedb002
            #add-point:ON CHANGE dedb002
            {<point name="input.g.page1.dedb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedb003
            
            #add-point:AFTER FIELD dedb003
            {<point name="input.a.page1.dedb003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedb003
            #add-point:BEFORE FIELD dedb003
            {<point name="input.b.page1.dedb003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dedb003
            #add-point:ON CHANGE dedb003
            {<point name="input.g.page1.dedb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedb004
            
            #add-point:AFTER FIELD dedb004
            {<point name="input.a.page1.dedb004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedb004
            #add-point:BEFORE FIELD dedb004
            {<point name="input.b.page1.dedb004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dedb004
            #add-point:ON CHANGE dedb004
            {<point name="input.g.page1.dedb004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedb005
            #add-point:BEFORE FIELD dedb005
            {<point name="input.b.page1.dedb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedb005
            
            #add-point:AFTER FIELD dedb005
            {<point name="input.a.page1.dedb005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dedb005
            #add-point:ON CHANGE dedb005
            {<point name="input.g.page1.dedb005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedb006
            #add-point:BEFORE FIELD dedb006
            {<point name="input.b.page1.dedb006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedb006
            
            #add-point:AFTER FIELD dedb006
            {<point name="input.a.page1.dedb006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dedb006
            #add-point:ON CHANGE dedb006
            {<point name="input.g.page1.dedb006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sum
            #add-point:BEFORE FIELD sum
            {<point name="input.b.page1.sum" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sum
            
            #add-point:AFTER FIELD sum
            {<point name="input.a.page1.sum" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sum
            #add-point:ON CHANGE sum
            {<point name="input.g.page1.sum" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedb007
            
            #add-point:AFTER FIELD dedb007
            {<point name="input.a.page1.dedb007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedb007
            #add-point:BEFORE FIELD dedb007
            {<point name="input.b.page1.dedb007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dedb007
            #add-point:ON CHANGE dedb007
            {<point name="input.g.page1.dedb007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedbsite
            #add-point:BEFORE FIELD dedbsite
            {<point name="input.b.page1.dedbsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedbsite
            
            #add-point:AFTER FIELD dedbsite
            {<point name="input.a.page1.dedbsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dedbsite
            #add-point:ON CHANGE dedbsite
            {<point name="input.g.page1.dedbsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedbunit
            #add-point:BEFORE FIELD dedbunit
            {<point name="input.b.page1.dedbunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedbunit
            
            #add-point:AFTER FIELD dedbunit
            {<point name="input.a.page1.dedbunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dedbunit
            #add-point:ON CHANGE dedbunit
            {<point name="input.g.page1.dedbunit" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.dedbseq
         ON ACTION controlp INFIELD dedbseq
            #add-point:ON ACTION controlp INFIELD dedbseq
            {<point name="input.c.page1.dedbseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dedbdocdt
         ON ACTION controlp INFIELD dedbdocdt
            #add-point:ON ACTION controlp INFIELD dedbdocdt
            {<point name="input.c.page1.dedbdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dedb001
         ON ACTION controlp INFIELD dedb001
            #add-point:ON ACTION controlp INFIELD dedb001
            {<point name="input.c.page1.dedb001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dedb002
         ON ACTION controlp INFIELD dedb002
            #add-point:ON ACTION controlp INFIELD dedb002
            {<point name="input.c.page1.dedb002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dedb003
         ON ACTION controlp INFIELD dedb003
            #add-point:ON ACTION controlp INFIELD dedb003
            {<point name="input.c.page1.dedb003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dedb004
         ON ACTION controlp INFIELD dedb004
            #add-point:ON ACTION controlp INFIELD dedb004
            {<point name="input.c.page1.dedb004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dedb005
         ON ACTION controlp INFIELD dedb005
            #add-point:ON ACTION controlp INFIELD dedb005
            {<point name="input.c.page1.dedb005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dedb006
         ON ACTION controlp INFIELD dedb006
            #add-point:ON ACTION controlp INFIELD dedb006
            {<point name="input.c.page1.dedb006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.sum
         ON ACTION controlp INFIELD sum
            #add-point:ON ACTION controlp INFIELD sum
            {<point name="input.c.page1.sum" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dedb007
         ON ACTION controlp INFIELD dedb007
            #add-point:ON ACTION controlp INFIELD dedb007
            {<point name="input.c.page1.dedb007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dedbsite
         ON ACTION controlp INFIELD dedbsite
            #add-point:ON ACTION controlp INFIELD dedbsite
            {<point name="input.c.page1.dedbsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dedbunit
         ON ACTION controlp INFIELD dedbunit
            #add-point:ON ACTION controlp INFIELD dedbunit
            {<point name="input.c.page1.dedbunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_dedb_d[l_ac].* = g_dedb_d_t.*
               CLOSE adet409_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_dedb_d[l_ac].dedbseq,-263,1)
               LET g_dedb_d[l_ac].* = g_dedb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE dedb_t SET (dedbdocno,dedbseq,dedbdocdt,dedb001,dedb002,dedb003,dedb004,dedb005, 
                   dedb006,dedb007,dedbsite,dedbunit) = (g_deda_m.dedadocno,g_dedb_d[l_ac].dedbseq,g_dedb_d[l_ac].dedbdocdt, 
                   g_dedb_d[l_ac].dedb001,g_dedb_d[l_ac].dedb002,g_dedb_d[l_ac].dedb003,g_dedb_d[l_ac].dedb004, 
                   g_dedb_d[l_ac].dedb005,g_dedb_d[l_ac].dedb006,g_dedb_d[l_ac].dedb007,g_dedb_d[l_ac].dedbsite, 
                   g_dedb_d[l_ac].dedbunit)
                WHERE dedbent = g_enterprise AND dedbdocno = g_deda_m.dedadocno 
 
                  AND dedbseq = g_dedb_d_t.dedbseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("dedb_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_dedb_d[l_ac].* = g_dedb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("dedb_t",SQLCA.sqlcode,1)
                     LET g_dedb_d[l_ac].* = g_dedb_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_deda_m.dedadocno
               LET gs_keys_bak[1] = g_dedadocno_t
               LET gs_keys[2] = g_dedb_d[g_detail_idx].dedbseq
               LET gs_keys_bak[2] = g_dedb_d_t.dedbseq
               CALL adet409_update_b('dedb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_deda_m),util.JSON.stringify(g_dedb_d_t)
               LET g_log2 = util.JSON.stringify(g_deda_m),util.JSON.stringify(g_dedb_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL adet409_unlock_b("dedb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_dedb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_dedb_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="adet409.input.head" ver="2" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_deda_m.dedasite,g_deda_m.dedadocdt,g_deda_m.dedadocno,g_deda_m.deda002,g_deda_m.deda001, 
          g_deda_m.deda003,g_deda_m.dedaunit,g_deda_m.dedastus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD dedasite
            
            #add-point:AFTER FIELD dedasite
            {<point name="input.a.dedasite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedasite
            #add-point:BEFORE FIELD dedasite
            {<point name="input.b.dedasite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dedasite
            #add-point:ON CHANGE dedasite
            {<point name="input.g.dedasite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedadocdt
            #add-point:BEFORE FIELD dedadocdt
            {<point name="input.b.dedadocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedadocdt
            
            #add-point:AFTER FIELD dedadocdt
            {<point name="input.a.dedadocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dedadocdt
            #add-point:ON CHANGE dedadocdt
            {<point name="input.g.dedadocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedadocno
            #add-point:BEFORE FIELD dedadocno
            {<point name="input.b.dedadocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedadocno
            
            #add-point:AFTER FIELD dedadocno
            {<point name="input.a.dedadocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dedadocno
            #add-point:ON CHANGE dedadocno
            {<point name="input.g.dedadocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deda002
            
            #add-point:AFTER FIELD deda002
            {<point name="input.a.deda002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD deda002
            #add-point:BEFORE FIELD deda002
            {<point name="input.b.deda002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE deda002
            #add-point:ON CHANGE deda002
            {<point name="input.g.deda002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deda001
            
            #add-point:AFTER FIELD deda001
            {<point name="input.a.deda001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD deda001
            #add-point:BEFORE FIELD deda001
            {<point name="input.b.deda001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE deda001
            #add-point:ON CHANGE deda001
            {<point name="input.g.deda001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deda003
            #add-point:BEFORE FIELD deda003
            {<point name="input.b.deda003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deda003
            
            #add-point:AFTER FIELD deda003
            {<point name="input.a.deda003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE deda003
            #add-point:ON CHANGE deda003
            {<point name="input.g.deda003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedaunit
            #add-point:BEFORE FIELD dedaunit
            {<point name="input.b.dedaunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedaunit
            
            #add-point:AFTER FIELD dedaunit
            {<point name="input.a.dedaunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dedaunit
            #add-point:ON CHANGE dedaunit
            {<point name="input.g.dedaunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dedastus
            #add-point:BEFORE FIELD dedastus
            {<point name="input.b.dedastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dedastus
            
            #add-point:AFTER FIELD dedastus
            {<point name="input.a.dedastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dedastus
            #add-point:ON CHANGE dedastus
            {<point name="input.g.dedastus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.dedasite
         ON ACTION controlp INFIELD dedasite
            #add-point:ON ACTION controlp INFIELD dedasite
            {<point name="input.c.dedasite" />}
            #END add-point
 
         #Ctrlp:input.c.dedadocdt
         ON ACTION controlp INFIELD dedadocdt
            #add-point:ON ACTION controlp INFIELD dedadocdt
            {<point name="input.c.dedadocdt" />}
            #END add-point
 
         #Ctrlp:input.c.dedadocno
         ON ACTION controlp INFIELD dedadocno
            #add-point:ON ACTION controlp INFIELD dedadocno
            {<point name="input.c.dedadocno" />}
            #END add-point
 
         #Ctrlp:input.c.deda002
         ON ACTION controlp INFIELD deda002
            #add-point:ON ACTION controlp INFIELD deda002
            {<point name="input.c.deda002" />}
            #END add-point
 
         #Ctrlp:input.c.deda001
         ON ACTION controlp INFIELD deda001
            #add-point:ON ACTION controlp INFIELD deda001
            {<point name="input.c.deda001" />}
            #END add-point
 
         #Ctrlp:input.c.deda003
         ON ACTION controlp INFIELD deda003
            #add-point:ON ACTION controlp INFIELD deda003
            {<point name="input.c.deda003" />}
            #END add-point
 
         #Ctrlp:input.c.dedaunit
         ON ACTION controlp INFIELD dedaunit
            #add-point:ON ACTION controlp INFIELD dedaunit
            {<point name="input.c.dedaunit" />}
            #END add-point
 
         #Ctrlp:input.c.dedastus
         ON ACTION controlp INFIELD dedastus
            #add-point:ON ACTION controlp INFIELD dedastus
            {<point name="input.c.dedastus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_deda_m.dedadocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO deda_t (dedaent,dedasite,dedadocdt,dedadocno,deda002,deda001,deda003,dedaunit, 
                   dedastus,dedaownid,dedaowndp,dedacrtid,dedacrtdp,dedacrtdt,dedacnfid,dedacnfdt)
               VALUES (g_enterprise,g_deda_m.dedasite,g_deda_m.dedadocdt,g_deda_m.dedadocno,g_deda_m.deda002, 
                   g_deda_m.deda001,g_deda_m.deda003,g_deda_m.dedaunit,g_deda_m.dedastus,g_deda_m.dedaownid, 
                   g_deda_m.dedaowndp,g_deda_m.dedacrtid,g_deda_m.dedacrtdp,g_deda_m.dedacrtdt,g_deda_m.dedacnfid, 
                   g_deda_m.dedacnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_deda_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL adet409_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE deda_t SET (dedasite,dedadocdt,dedadocno,deda002,deda001,deda003,dedaunit,dedastus, 
                   dedaownid,dedaowndp,dedacrtid,dedacrtdp,dedacrtdt,dedacnfid,dedacnfdt) = (g_deda_m.dedasite, 
                   g_deda_m.dedadocdt,g_deda_m.dedadocno,g_deda_m.deda002,g_deda_m.deda001,g_deda_m.deda003, 
                   g_deda_m.dedaunit,g_deda_m.dedastus,g_deda_m.dedaownid,g_deda_m.dedaowndp,g_deda_m.dedacrtid, 
                   g_deda_m.dedacrtdp,g_deda_m.dedacrtdt,g_deda_m.dedacnfid,g_deda_m.dedacnfdt)
                WHERE dedaent = g_enterprise AND dedadocno = g_dedadocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("deda_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_deda_m_t)
               LET g_log2 = util.JSON.stringify(g_deda_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_dedadocno_t = g_deda_m.dedadocno
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="adet409.input.other" ver="1" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD dedadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD dedbseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="adet409.insert" ver="2" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION adet409_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_dedb_d.clear()   
 
 
   INITIALIZE g_deda_m.* LIKE deda_t.*             #DEFAULT 設定
   
   LET g_dedadocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_deda_m.dedaownid = g_user
      LET g_deda_m.dedaowndp = g_dept
      LET g_deda_m.dedacrtid = g_user
      LET g_deda_m.dedacrtdp = g_dept 
      LET g_deda_m.dedacrtdt = cl_get_current()
      LET g_deda_m.dedamodid = ""
      LET g_deda_m.dedamoddt = ""
      LET g_deda_m.dedastus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_deda_m.dedastus = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL adet409_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_deda_m.* = g_deda_m_t.*
         CALL adet409_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_dedb_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_dedadocno_t = g_deda_m.dedadocno
 
   
   LET g_wc = g_wc,  
              " OR ( dedaent = '" ||g_enterprise|| "' AND",
              " dedadocno = '", g_deda_m.dedadocno CLIPPED, "' "
 
              , ") "
   
   CLOSE adet409_cl
   
END FUNCTION
]]>
  </section>
  <section id="adet409.insert_b" ver="3" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION adet409_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO dedb_t
                  (dedbent,
                   dedbdocno,
                   dedbseq
                   ,dedbdocdt,dedb001,dedb002,dedb003,dedb004,dedb005,dedb006,dedb007,dedbsite,dedbunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_dedb_d[g_detail_idx].dedbdocdt,g_dedb_d[g_detail_idx].dedb001,g_dedb_d[g_detail_idx].dedb002, 
                       g_dedb_d[g_detail_idx].dedb003,g_dedb_d[g_detail_idx].dedb004,g_dedb_d[g_detail_idx].dedb005, 
                       g_dedb_d[g_detail_idx].dedb006,g_dedb_d[g_detail_idx].dedb007,g_dedb_d[g_detail_idx].dedbsite, 
                       g_dedb_d[g_detail_idx].dedbunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("dedb_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="adet409.lock_b" ver="3" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION adet409_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL adet409_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "dedb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN adet409_bcl USING g_enterprise,
                                       g_deda_m.dedadocno,g_dedb_d[g_detail_idx].dedbseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("adet409_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="adet409.main" ver="3" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ade","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT dedasite,'',dedadocdt,dedadocno,deda002,'',deda001,'',deda003,dedaunit, 
       dedastus,dedaownid,'',dedaowndp,'',dedacrtid,'',dedacrtdp,'',dedacrtdt,dedamodid,'',dedamoddt, 
       dedacnfid,'',dedacnfdt", 
                      " FROM deda_t",
                      " WHERE dedaent= ? AND dedadocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adet409_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE dedasite,dedadocdt,dedadocno,deda002,deda001,deda003,dedaunit,dedastus, 
       dedaownid,dedaowndp,dedacrtid,dedacrtdp,dedacrtdt,dedamodid,dedamoddt,dedacnfid,dedacnfdt,t1.ooefl003 , 
       t2.oofa011 ,t3.ooefl003 ,t4.oofa011 ,t5.ooefl003 ,t6.oofa011 ,t7.ooefl003 ,t8.oofa011 ,t9.oofa011", 

               " FROM deda_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=dedasite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t2 ON t2.oofaent='"||g_enterprise||"' AND t2.oofa002='2' AND t2.oofa003=deda002  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=deda001 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=dedaownid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=dedaowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t6 ON t6.oofaent='"||g_enterprise||"' AND t6.oofa002='2' AND t6.oofa003=dedacrtid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=dedacrtdp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=dedamodid  ",
               " LEFT JOIN oofa_t t9 ON t9.oofaent='"||g_enterprise||"' AND t9.oofa002='2' AND t9.oofa003=dedacnfid  ",
 
               " WHERE dedaent = '" ||g_enterprise|| "' AND dedadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE adet409_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_adet409 WITH FORM cl_ap_formpath("ade",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL adet409_init()   
 
      #進入選單 Menu (="N")
      CALL adet409_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_adet409
      
   END IF 
   
   CLOSE adet409_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="adet409.modify" ver="3" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION adet409_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_deda_m.dedadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE adet409_master_referesh USING g_deda_m.dedadocno INTO g_deda_m.dedasite,g_deda_m.dedadocdt, 
       g_deda_m.dedadocno,g_deda_m.deda002,g_deda_m.deda001,g_deda_m.deda003,g_deda_m.dedaunit,g_deda_m.dedastus, 
       g_deda_m.dedaownid,g_deda_m.dedaowndp,g_deda_m.dedacrtid,g_deda_m.dedacrtdp,g_deda_m.dedacrtdt, 
       g_deda_m.dedamodid,g_deda_m.dedamoddt,g_deda_m.dedacnfid,g_deda_m.dedacnfdt,g_deda_m.dedasite_desc, 
       g_deda_m.deda002_desc,g_deda_m.deda001_desc,g_deda_m.dedaownid_desc,g_deda_m.dedaowndp_desc,g_deda_m.dedacrtid_desc, 
       g_deda_m.dedacrtdp_desc,g_deda_m.dedamodid_desc,g_deda_m.dedacnfid_desc
 
   ERROR ""
  
   LET g_dedadocno_t = g_deda_m.dedadocno
 
   CALL s_transaction_begin()
   
   OPEN adet409_cl USING g_enterprise,g_deda_m.dedadocno
   IF STATUS THEN
      CALL cl_err("OPEN adet409_cl:", STATUS, 1)
      CLOSE adet409_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE adet409_master_referesh USING g_deda_m.dedadocno INTO g_deda_m.dedasite,g_deda_m.dedadocdt, 
       g_deda_m.dedadocno,g_deda_m.deda002,g_deda_m.deda001,g_deda_m.deda003,g_deda_m.dedaunit,g_deda_m.dedastus, 
       g_deda_m.dedaownid,g_deda_m.dedaowndp,g_deda_m.dedacrtid,g_deda_m.dedacrtdp,g_deda_m.dedacrtdt, 
       g_deda_m.dedamodid,g_deda_m.dedamoddt,g_deda_m.dedacnfid,g_deda_m.dedacnfdt,g_deda_m.dedasite_desc, 
       g_deda_m.deda002_desc,g_deda_m.deda001_desc,g_deda_m.dedaownid_desc,g_deda_m.dedaowndp_desc,g_deda_m.dedacrtid_desc, 
       g_deda_m.dedacrtdp_desc,g_deda_m.dedamodid_desc,g_deda_m.dedacnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_deda_m.dedadocno,SQLCA.sqlcode,0)
      CLOSE adet409_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL adet409_show()
   WHILE TRUE
      LET g_dedadocno_t = g_deda_m.dedadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_deda_m.dedamodid = g_user 
LET g_deda_m.dedamoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL adet409_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_deda_m.* = g_deda_m_t.*
         CALL adet409_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE deda_t SET (dedamodid,dedamoddt) = (g_deda_m.dedamodid,g_deda_m.dedamoddt)
       WHERE dedaent = g_enterprise AND dedadocno = g_dedadocno_t
 
                  
      #若單頭key欄位有變更
      IF g_deda_m.dedadocno != g_dedadocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE dedb_t SET dedbdocno = g_deda_m.dedadocno
 
          WHERE dedbent = g_enterprise AND dedbdocno = g_dedadocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("dedb_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("dedb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_deda_m.dedadocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE adet409_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_deda_m.dedadocno,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="adet409.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="adet409.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="adet409.query" ver="2" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION adet409_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_dedb_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL adet409_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL adet409_browser_fill("")
      CALL adet409_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL adet409_filter_show('dedasite')
   CALL adet409_filter_show('dedadocdt')
   CALL adet409_filter_show('dedadocno')
   CALL adet409_filter_show('deda002')
   CALL adet409_filter_show('deda001')
   CALL adet409_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL adet409_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="adet409.reproduce" ver="2" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION adet409_reproduce()
   DEFINE l_newno     LIKE deda_t.dedadocno 
   DEFINE l_oldno     LIKE deda_t.dedadocno 
 
   DEFINE l_master    RECORD LIKE deda_t.*
   DEFINE l_detail    RECORD LIKE dedb_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_deda_m.dedadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_dedadocno_t = g_deda_m.dedadocno
 
    
   LET g_deda_m.dedadocno = ""
 
    
   CALL adet409_set_entry('a')
   CALL adet409_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_deda_m.dedaownid = g_user
      LET g_deda_m.dedaowndp = g_dept
      LET g_deda_m.dedacrtid = g_user
      LET g_deda_m.dedacrtdp = g_dept 
      LET g_deda_m.dedacrtdt = cl_get_current()
      LET g_deda_m.dedamodid = ""
      LET g_deda_m.dedamoddt = ""
      LET g_deda_m.dedastus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL adet409_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " dedadocno = '", g_deda_m.dedadocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="adet409.set_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION adet409_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("dedadocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="adet409.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION adet409_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="adet409.set_no_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION adet409_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("dedadocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="adet409.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION adet409_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="adet409.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION adet409_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_deda_m.dedadocno
   LET g_pk_array[1].column = 'dedadocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="adet409.show" ver="3" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION adet409_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_deda_m_t.* = g_deda_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL adet409_b_fill() #單身填充
      CALL adet409_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_deda_m.dedaownid_desc = cl_get_username(g_deda_m.dedaownid)
      #LET g_deda_m.dedaowndp_desc = cl_get_deptname(g_deda_m.dedaowndp)
      #LET g_deda_m.dedacrtid_desc = cl_get_username(g_deda_m.dedacrtid)
      #LET g_deda_m.dedacrtdp_desc = cl_get_deptname(g_deda_m.dedacrtdp)
      #LET g_deda_m.dedamodid_desc = cl_get_username(g_deda_m.dedamodid)
      #LET g_deda_m.dedacnfid_desc = cl_get_deptname(g_deda_m.dedacnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL adet409_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_deda_m.dedasite,g_deda_m.dedasite_desc,g_deda_m.dedadocdt,g_deda_m.dedadocno,g_deda_m.deda002, 
       g_deda_m.deda002_desc,g_deda_m.deda001,g_deda_m.deda001_desc,g_deda_m.deda003,g_deda_m.dedaunit, 
       g_deda_m.dedastus,g_deda_m.dedaownid,g_deda_m.dedaownid_desc,g_deda_m.dedaowndp,g_deda_m.dedaowndp_desc, 
       g_deda_m.dedacrtid,g_deda_m.dedacrtid_desc,g_deda_m.dedacrtdp,g_deda_m.dedacrtdp_desc,g_deda_m.dedacrtdt, 
       g_deda_m.dedamodid,g_deda_m.dedamodid_desc,g_deda_m.dedamoddt,g_deda_m.dedacnfid,g_deda_m.dedacnfid_desc, 
       g_deda_m.dedacnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_deda_m.dedastus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "J"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/reconciliate.png")
         WHEN "K"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unreconciliate.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_dedb_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL adet409_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="adet409.signature" ver="3" status="" src="s">
    <![CDATA[   #此段落由子樣板a39產生
#+ BPM提交
PRIVATE FUNCTION adet409_send()
 
   #add-point:send段define
   {<point name="send.define"/>}
   #end add-point 
 
   IF g_deda_m.dedadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #重新取得與顯示完整單據資料(最新單據資料)
   EXECUTE adet409_master_referesh USING g_deda_m.dedadocno INTO g_deda_m.dedasite,g_deda_m.dedadocdt, 
       g_deda_m.dedadocno,g_deda_m.deda002,g_deda_m.deda001,g_deda_m.deda003,g_deda_m.dedaunit,g_deda_m.dedastus, 
       g_deda_m.dedaownid,g_deda_m.dedaowndp,g_deda_m.dedacrtid,g_deda_m.dedacrtdp,g_deda_m.dedacrtdt, 
       g_deda_m.dedamodid,g_deda_m.dedamoddt,g_deda_m.dedacnfid,g_deda_m.dedacnfdt,g_deda_m.dedasite_desc, 
       g_deda_m.deda002_desc,g_deda_m.deda001_desc,g_deda_m.dedaownid_desc,g_deda_m.dedaowndp_desc,g_deda_m.dedacrtid_desc, 
       g_deda_m.dedacrtdp_desc,g_deda_m.dedamodid_desc,g_deda_m.dedacnfid_desc
 
   ERROR ""
   
   CALL s_transaction_begin()
 
   OPEN adet409_cl USING g_enterprise,g_deda_m.dedadocno
   IF STATUS THEN
      CALL cl_err("OPEN adet409_cl:", STATUS, 1)
      CLOSE adet409_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH adet409_cl INTO g_deda_m.dedasite,g_deda_m.dedasite_desc,g_deda_m.dedadocdt,g_deda_m.dedadocno, 
       g_deda_m.deda002,g_deda_m.deda002_desc,g_deda_m.deda001,g_deda_m.deda001_desc,g_deda_m.deda003, 
       g_deda_m.dedaunit,g_deda_m.dedastus,g_deda_m.dedaownid,g_deda_m.dedaownid_desc,g_deda_m.dedaowndp, 
       g_deda_m.dedaowndp_desc,g_deda_m.dedacrtid,g_deda_m.dedacrtid_desc,g_deda_m.dedacrtdp,g_deda_m.dedacrtdp_desc, 
       g_deda_m.dedacrtdt,g_deda_m.dedamodid,g_deda_m.dedamodid_desc,g_deda_m.dedamoddt,g_deda_m.dedacnfid, 
       g_deda_m.dedacnfid_desc,g_deda_m.dedacnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_deda_m.dedadocno,SQLCA.sqlcode,0)
      CLOSE adet409_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL adet409_show()
   CALL adet409_set_pk_array()
   
   #add-point: 提交前的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_deda_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_dedb_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      CLOSE adet409_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
   
   #完成狀態更新
   CLOSE adet409_cl
   CALL s_transaction_end('Y','0')
             
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL adet409_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_row].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL adet409_ui_headershow()
   CALL adet409_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#此段落由子樣板a40產生
#+ BPM抽單
PRIVATE FUNCTION adet409_draw_out()
 
   #add-point:draw段define
   {<point name="draw.define"/>}
   #end add-point
 
   #檢查資料是否存在
   IF g_deda_m.dedadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #LOCK主檔資料
   CALL s_transaction_begin()
 
   #進行BPM抽單功能
   OPEN adet409_cl USING g_enterprise,g_deda_m.dedadocno
   IF STATUS THEN
      CALL cl_err("OPEN adet409_cl:", STATUS, 1)
      CLOSE adet409_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH adet409_cl INTO g_deda_m.dedasite,g_deda_m.dedasite_desc,g_deda_m.dedadocdt,g_deda_m.dedadocno, 
       g_deda_m.deda002,g_deda_m.deda002_desc,g_deda_m.deda001,g_deda_m.deda001_desc,g_deda_m.deda003, 
       g_deda_m.dedaunit,g_deda_m.dedastus,g_deda_m.dedaownid,g_deda_m.dedaownid_desc,g_deda_m.dedaowndp, 
       g_deda_m.dedaowndp_desc,g_deda_m.dedacrtid,g_deda_m.dedacrtid_desc,g_deda_m.dedacrtdp,g_deda_m.dedacrtdp_desc, 
       g_deda_m.dedacrtdt,g_deda_m.dedamodid,g_deda_m.dedamodid_desc,g_deda_m.dedamoddt,g_deda_m.dedacnfid, 
       g_deda_m.dedacnfid_desc,g_deda_m.dedacnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_deda_m.dedadocno,SQLCA.sqlcode,0)
      CLOSE adet409_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      CLOSE adet409_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF    
 
   #完成狀態更新
   CLOSE adet409_cl
   CALL s_transaction_end('Y','0')
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL adet409_ui_headershow()  
   CALL adet409_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="adet409.state_change" ver="3" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION adet409_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_deda_m.dedadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_deda_m.dedastus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "J"
               HIDE OPTION "reconciliate"
            WHEN "K"
               HIDE OPTION "unreconciliate"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION approved
         LET lc_state = "A"
         #add-point:action控制
         {<point name="statechange.approved"/>}
         #end add-point
         EXIT MENU
      #ON ACTION withdraw
      #   LET lc_state = "D"
      #   #add-point:action控制
      #   {<point name="statechange.withdraw"/>}
      #   #end add-point
      #   EXIT MENU
      ON ACTION rejection
         LET lc_state = "R"
         #add-point:action控制
         {<point name="statechange.rejection"/>}
         #end add-point
         EXIT MENU
      #ON ACTION signing
      #   LET lc_state = "W"
      #   #add-point:action控制
      #   {<point name="statechange.signing"/>}
      #   #end add-point
      #   EXIT MENU
      ON ACTION reconciliate
         LET lc_state = "J"
         #add-point:action控制
         {<point name="statechange.reconciliate"/>}
         #end add-point
         EXIT MENU
      ON ACTION unreconciliate
         LET lc_state = "K"
         #add-point:action控制
         {<point name="statechange.unreconciliate"/>}
         #end add-point
         EXIT MENU
      
      #此段落由子樣板a36產生
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT adet409_send() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_send()已有執行update動作
 
         EXIT MENU
 
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT adet409_draw_out() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_draw_out()已有執行update動作
         EXIT MENU
 
 
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "J"
      AND lc_state <> "K"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE deda_t SET dedastus = lc_state 
    WHERE dedaent = g_enterprise AND dedadocno = g_deda_m.dedadocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "J"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/reconciliate.png")
         WHEN "K"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unreconciliate.png")
         
      END CASE
      LET g_deda_m.dedastus = lc_state
      DISPLAY BY NAME g_deda_m.dedastus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="adet409.ui_browser_refresh" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION adet409_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_dedadocno = g_deda_m.dedadocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="adet409.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION adet409_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="adet409.ui_dialog" ver="2" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION adet409_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL adet409_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL adet409_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_dedadocno = g_dedadocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL adet409_fetch('') # reload data
               LET l_ac = 1
               CALL adet409_ui_detailshow() #Setting the current row 
      
               CALL adet409_idx_chk()
               #NEXT FIELD dedbseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_dedb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL adet409_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL adet409_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL adet409_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL adet409_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL adet409_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL adet409_statechange()
            EXIT DIALOG
      
         #此段落由子樣板a32產生
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
 
 
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL adet409_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL adet409_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL adet409_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL adet409_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL adet409_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet409_idx_chk()
            
         ON ACTION previous
            CALL adet409_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet409_idx_chk()
            
         ON ACTION jump
            CALL adet409_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet409_idx_chk()
            
         ON ACTION next
            CALL adet409_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet409_idx_chk()
            
         ON ACTION last
            CALL adet409_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet409_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD dedbseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL adet409_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL adet409_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL adet409_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL adet409_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL adet409_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL adet409_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL adet409_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL adet409_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL adet409_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_deda_m.dedadocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="adet409.ui_headershow" ver="3" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION adet409_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_deda_m.dedadocno = g_browser[g_current_idx].b_dedadocno   
 
   EXECUTE adet409_master_referesh USING g_deda_m.dedadocno INTO g_deda_m.dedasite,g_deda_m.dedadocdt, 
       g_deda_m.dedadocno,g_deda_m.deda002,g_deda_m.deda001,g_deda_m.deda003,g_deda_m.dedaunit,g_deda_m.dedastus, 
       g_deda_m.dedaownid,g_deda_m.dedaowndp,g_deda_m.dedacrtid,g_deda_m.dedacrtdp,g_deda_m.dedacrtdt, 
       g_deda_m.dedamodid,g_deda_m.dedamoddt,g_deda_m.dedacnfid,g_deda_m.dedacnfdt,g_deda_m.dedasite_desc, 
       g_deda_m.deda002_desc,g_deda_m.deda001_desc,g_deda_m.dedaownid_desc,g_deda_m.dedaowndp_desc,g_deda_m.dedacrtid_desc, 
       g_deda_m.dedacrtdp_desc,g_deda_m.dedamodid_desc,g_deda_m.dedacnfid_desc
   CALL adet409_show()
   
END FUNCTION
]]>
  </section>
  <section id="adet409.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION adet409_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adet409_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="adet409.update_b" ver="3" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION adet409_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "dedb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE dedb_t 
         SET (dedbdocno,
              dedbseq
              ,dedbdocdt,dedb001,dedb002,dedb003,dedb004,dedb005,dedb006,dedb007,dedbsite,dedbunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_dedb_d[g_detail_idx].dedbdocdt,g_dedb_d[g_detail_idx].dedb001,g_dedb_d[g_detail_idx].dedb002, 
                  g_dedb_d[g_detail_idx].dedb003,g_dedb_d[g_detail_idx].dedb004,g_dedb_d[g_detail_idx].dedb005, 
                  g_dedb_d[g_detail_idx].dedb006,g_dedb_d[g_detail_idx].dedb007,g_dedb_d[g_detail_idx].dedbsite, 
                  g_dedb_d[g_detail_idx].dedbunit) 
         WHERE dedbent = g_enterprise AND dedbdocno = ps_keys_bak[1] AND dedbseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("dedb_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("dedb_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
