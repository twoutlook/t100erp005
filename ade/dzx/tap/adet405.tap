<add_points prog="adet405" std_prog="adet405" erpver="1.0" module="ADE" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.adet405_deao001_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 顯示存繳人員的參考欄位資訊
# Memo...........:
# Usage..........: CALL adet405_deao001_ref() 
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/02/14 By ming
# Modify.........:
################################################################################
PUBLIC FUNCTION adet405_deao001_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_deao_m.deao001
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_deao_m.deao001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_deao_m.deao001_desc 
END FUNCTION]]>
</point>
  <point name="function.adet405_deaosite_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 顯示營運據點的參考欄位資訊
# Memo...........:
# Usage..........: CALL adet405_deaosite_ref() 
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/02/17 By ming
# Modify.........:
################################################################################
PUBLIC FUNCTION adet405_deaosite_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_deao_m.deaosite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_deao_m.deaosite_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_deao_m.deaosite_desc
END FUNCTION]]>
</point>
  <point name="function.adet405_deap003_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 顯示款別的參考欄位資訊
# Memo...........:
# Usage..........: CALL adet405_deap003_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/02/17 By ming
# Modify.........:
################################################################################
PUBLIC FUNCTION adet405_deap003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_deap_d[l_ac].deap003
   CALL ap_ref_array2(g_ref_fields,"SELECT ooial003 FROM ooial_t WHERE ooialent='"||g_enterprise||"' AND ooial001=? AND ooial002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_deap_d[l_ac].deap003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_deap_d[l_ac].deap003_desc
END FUNCTION]]>
</point>
  <point name="function.adet405_deap004_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 顯示卷別的參考欄位訊
# Memo...........:
# Usage..........: CALL adet405_deap004_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/02/17 By ming
# Modify.........:
################################################################################
PUBLIC FUNCTION adet405_deap004_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_deap_d[l_ac].deap004
   CALL ap_ref_array2(g_ref_fields,"SELECT gcafl003 FROM gcafl_t WHERE gcaflent='"||g_enterprise||"' AND gcafl001=? AND gcafl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_deap_d[l_ac].deap004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_deap_d[l_ac].deap004_desc
END FUNCTION]]>
</point>
  <point name="function.adet405_deap005_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 檢查卷面額編號
# Memo...........:
# Usage..........: CALL adet405_deap005_chk(p_cmd,p_ac)
# Input parameter: p_cmd          模式 
#                  p_ac           目前資料所在列數 
# Return code....: 無
# Date & Author..: 2014/02/17 By ming
# Modify.........:
################################################################################
PUBLIC FUNCTION adet405_deap005_chk(p_cmd,p_ac)
   DEFINE p_cmd       LIKE type_t.chr1 
   DEFINE p_ac        LIKE type_t.num5 
   DEFINE l_oocqstus  LIKE oocq_t.oocqstus 
   DEFINE l_oocq009   LIKE oocq_t.oocq009 
   DEFINE l_oocq004   LIKE oocq_t.oocq004   #幣別   
   DEFINE l_gcarstus  LIKE gcar_t.gcarstus   
   
   INITIALIZE g_errno TO NULL 
   
   SELECT gcarstus 
     INTO l_gcarstus 
     FROM gcar_t 
    WHERE gcarent = g_enterprise 
      AND gcar001 = g_deap_d[p_ac].deap004 
      AND gcar002 = g_deap_d[l_ac].deap005 
   
   CASE 
      WHEN SQLCA.sqlcode = 100 LET g_errno = 'ade-00028'   #此券面額編號不存在券種基本資料檔中，請重新輸入
      WHEN l_gcarstus <> 'Y'   LET g_errno = 'agc-00080'   #券面額編號在券種基本資料檔-發行面額設定，已無效！
   END CASE 
   
   IF cl_null(g_errno) THEN 
      SELECT oocqstus,oocq009,oocq004
        INTO l_oocqstus,l_oocq009,l_oocq004 
        FROM oocq_t 
       WHERE oocqent = g_enterprise  
         AND oocq001 = '2071' 
         AND oocq002 = g_deap_d[p_ac].deap005        
      
      CASE 
         WHEN SQLCA.sqlcode = 100 LET g_errno = 'agc-00011'     #該卷面額編號不存在  
         WHEN l_oocqstus <> 'Y'   LET g_errno = 'agc-00012'     #該卷面額編號已無效   
      END CASE  
       
      IF cl_null(g_errno) THEN 
         IF NOT cl_null(g_deap_d[p_ac].deap006) THEN 
            IF l_oocq004 <> g_deap_d[p_ac].deap006 OR l_oocq004 IS NULL THEN 
               LET g_errno = 'ade-00019'      #券面額的幣別與畫面上的幣別不相同，請重新輸入！ 
            END IF 
         END IF 
      END IF  
   END IF  
   
   IF (NOT cl_null(g_errno)) AND p_cmd <> 'd' THEN 
      LET l_oocq009 = '' 
   END IF 
   LET g_deap_d[p_ac].oocq009 = l_oocq009  
END FUNCTION]]>
</point>
  <point name="function.adet405_deap005_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="6" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 顯示卷面額編號的參考欄位資訊
# Memo...........:
# Usage..........: CALL adet405_deap005_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/02/17 By ming
# Modify.........:
################################################################################
PUBLIC FUNCTION adet405_deap005_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_deap_d[l_ac].deap005
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2071' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_deap_d[l_ac].deap005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_deap_d[l_ac].deap005_desc
END FUNCTION]]>
</point>
  <point name="function.adet405_deap006_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="7" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 幣別檢查
# Memo...........:
# Usage..........: CALL adet405_deap006_chk(p_ac)
# Input parameter: p_ac           目前資料所在列數
# Return code....: 無
# Date & Author..: 2014/02/17 By ming
# Modify.........:
################################################################################
PUBLIC FUNCTION adet405_deap006_chk(p_ac)
   DEFINE p_ac      LIKE type_t.num5 
   DEFINE l_ooie002 LIKE ooie_t.ooie002 
   
   INITIALIZE g_errno TO NULL 
   
   #如果 款別 或 幣別 為空 就不能做比對的檢查  
   IF cl_null(g_deap_d[p_ac].deap003) THEN 
      RETURN 
   END IF 
   IF cl_null(g_deap_d[p_ac].deap006) THEN 
      RETURN 
   END IF 
   
   SELECT ooie002 INTO l_ooie002 
     FROM ooie_t 
    WHERE ooieent = g_enterprise 
      AND ooiesite = g_deao_m.deaosite 
      AND ooie001 = g_deap_d[p_ac].deap003 
      
   IF l_ooie002 <> g_deap_d[p_ac].deap006 THEN 
      LET g_errno = 'ade-00017'     #此幣別不為款別指定幣別！
   END IF 
   
   
END FUNCTION]]>
</point>
  <point name="function.adet405_deap006_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="8" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 顯示幣別的參考欄位資訊
# Memo...........:
# Usage..........: CALL adet405_deap006_ref() 
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/02/17 By ming
# Modify.........:
################################################################################
PUBLIC FUNCTION adet405_deap006_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_deap_d[l_ac].deap006
   CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_deap_d[l_ac].deap006_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_deap_d[l_ac].deap006_desc 
END FUNCTION]]>
</point>
  <point name="function.adet405_deap003_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="9" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 檢查款別 
# Memo...........:
# Usage..........: CALL adet405_deap003_chk(p_deap003)
# Input parameter: p_deap003      款別編號
# Return code....: 無
# Date & Author..: 2014/02/18 By ming
# Modify.........:
################################################################################
PUBLIC FUNCTION adet405_deap003_chk(p_deap003)
   DEFINE p_deap003     LIKE deap_t.deap003 
   DEFINE l_cnt         LIKE type_t.num5 
   
   INITIALIZE g_errno TO NULL 
   
   IF cl_null(p_deap003) THEN 
      RETURN 
   END IF 
   
   LET l_cnt = 0  
   SELECT COUNT(*) INTO l_cnt 
     FROM gcaf_t 
    WHERE gcaf031 = p_deap003  
    
   IF cl_null(l_cnt) THEN 
      LET l_cnt = 0 
   END IF  
   
   IF l_cnt = 0 THEN 
      LET g_errno = 'ade-00021' 
   END IF 
END FUNCTION]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[         CASE g_deap_d[l_ac].deap002 
            WHEN '40' 
               CALL adet405_deap005_chk('d',l_ac)
            #依規格改變 現在金額不會被輸入了  所以也就不會有單位金額的問題 
            #WHEN '50' 
            #   LET g_deap_d[l_ac].oocq009 = g_deap_d[l_ac].deap008 
         END CASE 
          ]]>
</point>
  <point name="construct.c.deao001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE 
            LET g_qryparam.arg1 = g_site 
            CALL q_ooag001_5()                            #呼叫開窗
            DISPLAY g_qryparam.return1 TO deao001  #顯示到畫面上
            NEXT FIELD deao001                     #返回原欄位
]]>
</point>
  <point name="construct.c.deaocnfid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deaocnfid  #顯示到畫面上
            NEXT FIELD deaocnfid                     #返回原欄位]]>
</point>
  <point name="construct.c.deaocrtdp" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deaocrtdp  #顯示到畫面上
            NEXT FIELD deaocrtdp                     #返回原欄位

]]>
</point>
  <point name="construct.c.deaocrtid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deaocrtid  #顯示到畫面上
            NEXT FIELD deaocrtid                     #返回原欄位]]>
</point>
  <point name="construct.c.deaodocno" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_deaodocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deaodocno  #顯示到畫面上
            NEXT FIELD deaodocno                     #返回原欄位
]]>
</point>
  <point name="construct.c.deaomodid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deaomodid  #顯示到畫面上
            NEXT FIELD deaomodid                     #返回原欄位]]>
</point>
  <point name="construct.c.deaoowndp" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deaoowndp  #顯示到畫面上
            NEXT FIELD deaoowndp                     #返回原欄位]]>
</point>
  <point name="construct.c.deaoownid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deaoownid  #顯示到畫面上

            NEXT FIELD deaoownid                     #返回原欄位

]]>
</point>
  <point name="construct.c.deaosite" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE 
            LET g_qryparam.arg1 = g_site 
            LET g_qryparam.arg2 = '2' 
            CALL q_ooed004()                        #呼叫開窗
            DISPLAY g_qryparam.return1 TO deaosite  #顯示到畫面上
            NEXT FIELD deaosite                     #返回原欄位
]]>
</point>
  <point name="construct.c.page1.deap003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooie001_2()                            #呼叫開窗
            DISPLAY g_qryparam.return1 TO deap003  #顯示到畫面上
            NEXT FIELD deap003                     #返回原欄位]]>
</point>
  <point name="construct.c.page1.deap004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_gcaf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deap004  #顯示到畫面上
            NEXT FIELD deap004                     #返回原欄位]]>
</point>
  <point name="construct.c.page1.deap005" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE 
            LET g_qryparam.arg1 = '2071' 
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deap005  #顯示到畫面上
            NEXT FIELD deap005                     #返回原欄位]]>
</point>
  <point name="construct.c.page1.deap006" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_aooi001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deap006  #顯示到畫面上
            NEXT FIELD deap006                     #返回原欄位]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      IF NOT s_aooi200_del_docno(g_deao_m.deaodocno,g_deao_m.deaodocdt) THEN 
         CALL s_transaction_end('N','0') 
         RETURN 
      END IF ]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   #IF g_deao_m.deaostus = 'N' THEN
   IF g_deao_m.deaostus MATCHES "[NDR]" THEN   
      CALL cl_set_act_visible("modify,delete,modify_detail",TRUE) 
   ELSE 
      CALL cl_set_act_visible("modify,delete,modify_detail",FALSE) 
   END IF 
  ]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   CALL cl_set_combo_scc_part('deap002','8310','40,50')  
   LET g_errshow = 1 ]]>
</point>
  <point name="input.a.deao001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #存繳人員 
            LET g_deao_m.deao001_desc = ' ' 
            DISPLAY BY NAME g_deao_m.deao001_desc  
            IF NOT cl_null(g_deao_m.deao001) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_deao_m.deao001 != g_deao_m_t.deao001 OR 
                                                   g_deao_m_t.deao001 IS NULL)) THEN   
                  INITIALIZE g_chkparam.* TO NULL 
                  LET g_chkparam.arg1 = g_deao_m.deao001  
                  LET g_chkparam.arg2 = g_site 
                  IF NOT cl_chk_exist("v_ooag001_2") THEN  
                     LET g_deao_m.deao001 = g_deao_m_t.deao001 
                     CALL adet405_deao001_ref() 
                     NEXT FIELD CURRENT 
                  END IF 
               END IF 
            END IF  
            CALL adet405_deao001_ref() ]]>
</point>
  <point name="input.a.deaodocno" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            #IF  NOT cl_null(g_deao_m.deaodocno) THEN 
            #   IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_deao_m.deaodocno != g_deaodocno_t )) THEN 
            #      IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM deao_t WHERE "||"deaoent = '" ||g_enterprise|| "' AND "||"deaodocno = '"||g_deao_m.deaodocno ||"'",'std-00004',0) THEN 
            #         NEXT FIELD CURRENT
            #      END IF
            #   END IF
            #END IF

            #IF NOT cl_null(g_deao_m.deaodocno) THEN 
            #   #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
            #   INITIALIZE g_chkparam.* TO NULL
            #   #設定g_chkparam.*的參數
            #   CALL s_aooi100_sel_ooef004(g_deao_m.deaosite) 
            #        RETURNING l_success,l_ooef004 
            #   LET g_chkparam.arg1 = l_ooef004 
            #   LET g_chkparam.arg2 = g_deao_m.deaodocno
            #      
            #   #呼叫檢查存在並帶值的library
            #   IF cl_chk_exist("v_ooba002") THEN
            #      #檢查成功時後續處理
            #      #LET  = g_chkparam.return1
            #      #DISPLAY BY NAME 
            #   ELSE
            #      #檢查失敗時後續處理
            #      NEXT FIELD CURRENT
            #   END IF
            #END IF  
            
            IF p_cmd = 'a' AND NOT cl_null(g_deao_m.deaodocno) THEN 
               IF NOT s_aooi200_chk_slip(g_site,'',g_deao_m.deaodocno,g_prog) THEN 
                  LET g_deao_m.deaodocno = g_deao_m_t.deaodocno 
                  NEXT FIELD CURRENT 
               END IF 
            END IF 
]]>
</point>
  <point name="input.a.deaosite" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #存繳營運組織  
            LET g_deao_m.deaosite_desc = ' ' 
            DISPLAY BY NAME g_deao_m.deaosite_desc 
            IF NOT cl_null(g_deao_m.deaosite) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_deao_m.deaosite != g_deao_m_t.deaosite OR 
                                                   g_deao_m_t.deaosite IS NULL)) THEN 
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_deao_m.deaosite
                  LET g_chkparam.arg2 = '2'
                  LET g_chkparam.arg3 = g_site 
   
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_ooed004") THEN 
                     LET g_deao_m.deaosite = g_deao_m_t.deaosite  
                     CALL adet405_deaosite_ref() 
                     NEXT FIELD CURRENT
                  END IF
               END IF 
            END IF 
            CALL adet405_deaosite_ref() 
            ]]>
</point>
  <point name="input.a.page1.deap001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #營業日期(deap001)不可大於單頭票據日期(deaodocdt) 
            IF NOT cl_null(g_deap_d[l_ac].deap001) THEN  
               IF g_deap_d[l_ac].deap001 > g_deao_m.deaodocdt THEN 
                  CALL cl_err("","ade-00011",0) 
                  NEXT FIELD CURRENT 
               END IF 
            END IF ]]>
</point>
  <point name="input.a.page1.deap002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_deap_d[l_ac].deap002) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_deap_d[l_ac].deap002 != g_deap_d_t.deap002 OR 
                                                   g_deap_d_t.deap002 IS NULL)) THEN  
                  #分類改變時，清空款別資料 
                  LET g_deap_d[l_ac].deap003 = ''        
                  LET g_deap_d[l_ac].deap003_desc = '' 
                  
                  #如果aooi901中有設定預設款別 則自動帶出資料  
                  LET l_ooie001 = ''      #款別 
                  LET l_ooie002 = ''      #幣別   
                  SELECT ooie001,ooie002 INTO l_ooie001,l_ooie002 
                    FROM ooie_t 
                   WHERE ooieent = g_enterprise 
                     AND ooiesite = g_deao_m.deaosite 
                     AND ooie003 = g_deap_d[l_ac].deap002   #款別分類 
                     AND ooie014 = 'Y'                      #預設款別否 
                     
                  IF NOT cl_null(l_ooie001) THEN 
                     LET g_deap_d[l_ac].deap003 = l_ooie001 
                     CALL adet405_deap003_ref()
                     LET g_deap_d[l_ac].deap006 = l_ooie002 
                     CALL adet405_deap006_ref()
                  END IF 
               END IF 
            END IF 
            
            IF g_deap_d[l_ac].deap002 = '40' THEN 
               #金額欄位由單位金額*數量取得  
               IF NOT cl_null(g_deap_d[l_ac].oocq009) AND 
                  NOT cl_null(g_deap_d[l_ac].deap007) THEN 
                  LET g_deap_d[l_ac].deap008 = g_deap_d[l_ac].oocq009 * g_deap_d[l_ac].deap007 
               END IF 
            END IF 
            
            IF g_deap_d[l_ac].deap002 = '50' THEN 
               LET g_deap_d[l_ac].deap004 = '' 
               LET g_deap_d[l_ac].deap004_desc = '' 
               LET g_deap_d[l_ac].deap005 = '' 
               LET g_deap_d[l_ac].deap005_desc = '' 
               LET g_deap_d[l_ac].oocq009 = '' 
               LET g_deap_d[l_ac].deap007 = '' 
            END IF 
            
            CALL adet405_set_entry_b(l_cmd) 
            CALL adet405_set_no_entry_b(l_cmd) ]]>
</point>
  <point name="input.a.page1.deap003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #款別  
            
            LET g_deap_d[l_ac].deap003_desc = ' ' 
            DISPLAY BY NAME g_deap_d[l_ac].deap003_desc 
            IF NOT cl_null(g_deap_d[l_ac].deap003) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_deap_d[l_ac].deap003 != g_deap_d_t.deap003 OR 
                                                   g_deap_d_t.deap003 IS NULL)) THEN 
                                                   
                  INITIALIZE g_chkparam.* TO NULL   
                  LET g_chkparam.arg1 = g_deap_d[l_ac].deap003  #款別編號 
                  LET g_chkparam.arg2 = g_deap_d[l_ac].deap002  #款別分類 
                  LET g_chkparam.arg3 = g_deao_m.deaosite       #營運據點 
                  LET g_chkparam.err_str[1] = "sub-00354|",g_deap_d[l_ac].deap002 
                  LET g_chkparam.err_str[2] = "sub-00355|",g_deap_d[l_ac].deap002 
                  
                  IF NOT cl_chk_exist("v_ooie001_4") THEN 
                     LET g_deap_d[l_ac].deap003 = g_deap_d_t.deap003 
                     CALL adet405_deap003_ref() 
                     NEXT FIELD CURRENT
                  END IF 
                  
                  IF g_deap_d[l_ac].deap002 = '40' THEN 
                     #如果款別是40的時候，要多檢查agcm300中，是否有使用此款別的資料 
                     CALL adet405_deap003_chk(g_deap_d[l_ac].deap003) 
                     IF NOT cl_null(g_errno) THEN 
                        CALL cl_err(g_deap_d[l_ac].deap003,g_errno,g_errshow) 
                        LET g_deap_d[l_ac].deap003 = g_deap_d_t.deap003 
                        CALL adet405_deap003_ref() 
                        NEXT FIELD CURRENT 
                     END IF 
                       
                  END IF 
                  
                  
                  #找aooi901單身的幣別(ooie002) 
                  SELECT ooie002 INTO g_deap_d[l_ac].deap006 
                    FROM ooie_t 
                   WHERE ooieent = g_enterprise 
                     AND ooiesite = g_deao_m.deaosite 
                     AND ooie001 = g_deap_d[l_ac].deap003  
                  CALL adet405_deap006_ref()  
                  
                  IF g_deap_d[l_ac].deap002 = '40' THEN 
                     IF NOT cl_null(g_deap_d[l_ac].deap004) THEN 
                        LET l_cnt = 0 
                        SELECT COUNT(*) INTO l_cnt  
                          FROM gcaf_t,gcar_t,oocq_t 
                         WHERE gcafent = g_enterprise 
                           AND gcaf001 = gcar001 
                           AND gcar002 = oocq002 
                           AND gcafstus = 'Y' 
                           AND gcarstus = 'Y' 
                           AND oocq001 = '2071' 
                           AND oocq004 = g_deap_d[l_ac].deap006 
                           AND gcaf001 = g_deap_d[l_ac].deap004 
                           AND gcaf031 = g_deap_d[l_ac].deap003 
                        IF cl_null(l_cnt) THEN 
                           LET l_cnt = 0 
                        END IF 
                        IF l_cnt = 0 THEN 
                           CALL cl_err(g_deap_d[l_ac].deap004,'ade-00019',1) 
                           CALL adet405_deap003_ref()
                           NEXT FIELD deap004 
                        END IF 
                     END IF 
                     IF NOT cl_null(g_deap_d[l_ac].deap005) THEN 
                        CALL adet405_deap005_chk(p_cmd,l_ac) 
                        IF NOT cl_null(g_errno) THEN 
                           CALL cl_err(g_deap_d[l_ac].deap005,g_errno,1) 
                           LET g_deap_d[l_ac].deap005 = '' 
                           CALL adet405_deap003_ref()
                           NEXT FIELD deap005 
                        END IF 
                     END IF 
                  END IF 
               END IF 
            END IF 
            
            CALL adet405_deap003_ref() 
                        ]]>
</point>
  <point name="input.a.page1.deap004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #卷種 or 卡種 
            LET g_deap_d[l_ac].deap004_desc = ' ' 
            DISPLAY BY NAME g_deap_d[l_ac].deap004_desc 

            IF cl_null(g_deap_d[l_ac].deap004) THEN 
               LET g_deap_d[l_ac].deap005 = '' 
               LET g_deap_d[l_ac].deap005_desc = '' 
            END IF 

            IF NOT cl_null(g_deap_d[l_ac].deap004) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_deap_d[l_ac].deap004 != g_deap_d_t.deap004 OR 
                                                   g_deap_d_t.deap004 IS NULL)) THEN 
                  INITIALIZE g_chkparam.* TO NULL   
                  LET g_chkparam.arg1 = g_deap_d[l_ac].deap004 
                  LET g_chkparam.arg2 = g_deap_d[l_ac].deap003                    
                  LET g_chkparam.arg3 = g_deap_d[l_ac].deap006    #幣別  
                  IF g_deap_d[l_ac].deap002 = '40' THEN      #卷種的檢查
                     IF NOT cl_chk_exist("v_gcaf001") THEN 
                        LET g_deap_d[l_ac].deap004 = g_deap_d_t.deap004 
                        CALL adet405_deap004_ref()  
                        NEXT FIELD CURRENT 
                     END IF  
                     
                     IF cl_null(g_deap_d[l_ac].deap005) THEN 
                        #自動預代卷面額編號  
                        SELECT gcaf012 INTO g_deap_d[l_ac].deap005 
                          FROM gcaf_t 
                         WHERE gcafent = g_enterprise                   #企業
                           AND gcaf001 = g_deap_d[l_ac].deap004         #卷種  
                        IF NOT cl_null(g_deap_d[l_ac].deap005) THEN 
                           CALL adet405_deap005_chk(p_cmd,l_ac)    #檢查卷面額 
                           IF NOT cl_null(g_errno) THEN 
                              CALL cl_err(g_deap_d[l_ac].deap005,g_errno,0) 
                              LET g_deap_d[l_ac].deap005 = g_deap_d_t.deap005 
                              CALL adet405_deap005_ref() 
                              NEXT FIELD deap005   
                           END IF 
                           CALL adet405_deap005_ref()
                        END IF 
                     ELSE 
                        LET l_cnt = 0 
                        SELECT COUNT(*) INTO l_cnt 
                          FROM gcar_t 
                         WHERE gcarent = g_enterprise 
                           AND gcar001 = g_deap_d[l_ac].deap004 
                           AND gcar002 = g_deap_d[l_ac].deap005  
                           AND gcarstus = 'Y' 
                        IF cl_null(l_cnt) THEN 
                           LET l_cnt = 0 
                        END IF 
                        IF l_cnt = 0 THEN  
                           CALL cl_err(g_deap_d[l_ac].deap005,'ade-00028',1) 
                           LET g_deap_d[l_ac].deap005 = ''   
                           CALL adet405_deap004_ref()  
                           CALL adet405_deap005_ref() 
                           NEXT FIELD deap005 
                        END IF 
                     END IF                      
                  END IF   
                  
                  IF g_deap_d[l_ac].deap002 = '50' THEN 
                     #卡種的檢查 
                     #因目前規格不須輸入卡種資料 故先保留
                  END IF 
               END IF 
            END IF 
            
            IF g_deap_d[l_ac].deap002 = '40' THEN    #卷種的說明 
               CALL adet405_deap004_ref() 
            END IF 
            
            IF g_deap_d[l_ac].deap002 = '50' THEN 
               #卡種的說明   
            END IF 
          ]]>
</point>
  <point name="input.a.page1.deap005" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #卷面額編號 
            LET g_deap_d[l_ac].deap005_desc = ' '  
            LET g_deap_d[l_ac].oocq009 = '' 
            DISPLAY BY NAME g_deap_d[l_ac].deap005_desc,g_deap_d[l_ac].oocq009 
            
            IF NOT cl_null(g_deap_d[l_ac].deap005) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_deap_d[l_ac].deap005 != g_deap_d_t.deap005 OR 
                                                   g_deap_d_t.deap005 IS NULL)) THEN  
                  INITIALIZE g_chkparam.* TO NULL 
                  
                  CALL adet405_deap005_chk(p_cmd,l_ac) 
                  IF NOT cl_null(g_errno) THEN 
                     CALL cl_err(g_deap_d[l_ac].deap005,g_errno,0) 
                     LET g_deap_d[l_ac].deap005 = g_deap_d_t.deap005 
                     CALL adet405_deap005_ref() 
                     NEXT FIELD CURRENT  
                  END IF 
               END IF 
            END IF 
            CALL adet405_deap005_ref() 
            
            #計算金額  
            IF g_deap_d[l_ac].deap002 = '40' THEN 
               IF (NOT cl_null(g_deap_d[l_ac].deap007)) AND 
                  (NOT cl_null(g_deap_d[l_ac].oocq009)) THEN 
                  LET g_deap_d[l_ac].deap008 = g_deap_d[l_ac].deap007 * g_deap_d[l_ac].oocq009 
               END IF 
            END IF 
            ]]>
</point>
  <point name="input.a.page1.deap006" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #幣別 
            LET g_deap_d[l_ac].deap006_desc = ' ' 
            DISPLAY BY NAME g_deap_d[l_ac].deap006_desc 
            IF NOT cl_null(g_deap_d[l_ac].deap006) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_deap_d[l_ac].deap006 != g_deap_d_t.deap006 OR 
                                                   g_deap_d_t.deap006 IS NULL)) THEN 
                  INITIALIZE g_chkparam.* TO NULL 
                  LET g_chkparam.arg1 = g_deap_d[l_ac].deap006 
                  
                  IF NOT cl_chk_exist("v_ooai001") THEN       #檢查幣別是否存在與有效 
                     LET g_deap_d[l_ac].deap006 = g_deap_d_t.deap006  
                     CALL adet405_deap006_ref()      
                     NEXT FIELD CURRENT 
                  END IF  
                  
                  #檢查此幣別是否與款別相同   
                  CALL adet405_deap006_chk(l_ac)  
                  IF NOT cl_null(g_errno) THEN 
                     CALL cl_err(g_deap_d[l_ac].deap006,g_errno,0) 
                     LET g_deap_d[l_ac].deap006 = g_deap_d_t.deap006 
                     CALL adet405_deap006_ref() 
                     NEXT FIELD CURRENT 
                  END IF 
               END IF 
            END IF 
 
            CALL adet405_deap006_ref()  ]]>
</point>
  <point name="input.a.page1.deap007" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #數量 
            IF NOT cl_null(g_deap_d[l_ac].deap007) THEN 
               IF g_deap_d[l_ac].deap007 <= 0 THEN 
                  CALL cl_err("","ade-00016",0)    #數量不可小於等於0   
                  NEXT FIELD CURRENT 
               END IF 
               
               #如果款別分類是40.卷，而且有單位金額的話，就可以算金額 
               IF g_deap_d[l_ac].deap002 = '40' THEN 
                  IF NOT cl_null(g_deap_d[l_ac].oocq009) THEN 
                     LET g_deap_d[l_ac].deap008 = g_deap_d[l_ac].oocq009 * g_deap_d[l_ac].deap007 
                  END IF 
               END IF 
            END IF ]]>
</point>
  <point name="input.a.page1.deap008" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #金額   
            #不論是40或是50，都不需要輸入金額了  
            #IF NOT cl_null(g_deap_d[l_ac].deap008) THEN 
            #   IF g_deap_d[l_ac].deap002 = '50' THEN 
            #      LET g_deap_d[l_ac].oocq009 = g_deap_d[l_ac].deap008 
            #   END IF 
            #END IF ]]>
</point>
  <point name="input.a.page1.deapseq" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_deao_m.deaodocno IS NOT NULL AND g_deap_d[g_detail_idx].deapseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_deao_m.deaodocno != g_deaodocno_t OR g_deap_d[g_detail_idx].deapseq != g_deap_d_t.deapseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM deap_t WHERE "||"deapent = '" ||g_enterprise|| "' AND "||"deapdocno = '"||g_deao_m.deaodocno ||"' AND "|| "deapseq = '"||g_deap_d[g_detail_idx].deapseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.b.page1.deap006" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #項次 
            IF cl_null(g_deap_d[l_ac].deapseq) THEN 
               SELECT MAX(deapseq)+1 INTO g_deap_d[l_ac].deapseq FROM deap_t 
                WHERE deapent = g_enterprise 
                  AND deapdocno = g_deao_m.deaodocno  
               IF cl_null(g_deap_d[l_ac].deapseq) THEN 
                  LET g_deap_d[l_ac].deapseq = 1 
               END IF  
            END IF  
            
            #營業日期 
            LET g_deap_d[l_ac].deap001 = g_deao_m.deaodocdt 
            
            #款別分類 
            LET g_deap_d[l_ac].deap002 = "40"

            #營運據點
            LET g_deap_d[l_ac].deapsite = g_site 
              ]]>
</point>
  <point name="input.c.deao001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_deao_m.deao001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_deao_m.deaosite  
            
            CALL q_ooag001_5()                               #呼叫開窗
            LET g_deao_m.deao001 = g_qryparam.return1        #將開窗取得的值回傳到變數
            DISPLAY g_deao_m.deao001 TO deao001              #顯示到畫面上 
            CALL adet405_deao001_ref()     
            NEXT FIELD deao001                               #返回原欄位
]]>
</point>
  <point name="input.c.deaodocno" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_deao_m.deaodocno             #給予default值

            #給予arg
            CALL s_aooi100_sel_ooef004(g_deao_m.deaosite) 
                 RETURNING l_success,l_ooef004 
            LET g_qryparam.arg1 = l_ooef004 
            LET g_qryparam.arg2 = "adet405" #

            CALL q_ooba002_1()                                #呼叫開窗
            LET g_deao_m.deaodocno = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_deao_m.deaodocno TO deaodocno              #顯示到畫面上
            NEXT FIELD deaodocno                          #返回原欄位
]]>
</point>
  <point name="input.c.deaosite" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[       
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_deao_m.deaosite             #給予default值

            #給予arg 
            LET g_qryparam.arg1 = g_site 
            LET g_qryparam.arg2 = '2' 
            CALL q_ooed004()                                 #呼叫開窗
            LET g_deao_m.deaosite = g_qryparam.return1         #將開窗取得的值回傳到變數
            DISPLAY g_deao_m.deaosite TO deaosite              #顯示到畫面上 
            CALL adet405_deaosite_ref()   
            NEXT FIELD deaosite                                #返回原欄位
]]>
</point>
  <point name="input.c.page1.deap003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_deap_d[l_ac].deap003             #給予default值 
            LET g_qryparam.default2 = g_deap_d[l_ac].deap004 

            #給予arg 
            IF g_deap_d[l_ac].deap002 = '40' THEN 	    
               LET g_qryparam.arg1 = g_deao_m.deaosite 
               CALL q_ooia001_1()                                 #呼叫開窗  
               LET g_deap_d[l_ac].deap003 = g_qryparam.return1    #款別編號 
               LET g_deap_d[l_ac].deap004 = g_qryparam.return2    #券種編號 
               CALL adet405_deap004_ref() 
            ELSE
               LET g_qryparam.arg1 = g_deap_d[l_ac].deap002 
               LET g_qryparam.arg2 = g_deao_m.deaosite 
               CALL q_ooie001_4()
               LET g_deap_d[l_ac].deap003 = g_qryparam.return1    #款別編號 
            END IF
            DISPLAY g_deap_d[l_ac].deap003 TO deap003          #顯示到畫面上 
            CALL adet405_deap003_ref()   
            NEXT FIELD deap003                                 #返回原欄位
]]>
</point>
  <point name="input.c.page1.deap004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_deap_d[l_ac].deap004             #給予default值 
            LET g_qryparam.default2 = g_deap_d[l_ac].deap005 

            #給予arg
            LET g_qryparam.arg1 = g_deap_d[l_ac].deap003   
            LET g_qryparam.arg2 = g_deap_d[l_ac].deap006 

            CALL q_gcaf001_2()                                     #呼叫開窗
            LET g_deap_d[l_ac].deap004 = g_qryparam.return1        #將開窗取得的值回傳到變數 
            LET g_deap_d[l_ac].deap005 = g_qryparam.return2 
            DISPLAY g_deap_d[l_ac].deap004 TO deap004              #顯示到畫面上 
            CALL adet405_deap004_ref() 
            NEXT FIELD deap004                                     #返回原欄位

]]>
</point>
  <point name="input.c.page1.deap005" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_deap_d[l_ac].deap005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '2071'                           #應用分類碼
            LET g_qryparam.arg2 = g_deap_d[l_ac].deap004           #券種編號 
            LET g_qryparam.arg3 = g_deap_d[l_ac].deap006           #幣別  
            CALL q_gcar002()                                       #呼叫開窗
            LET g_deap_d[l_ac].deap005 = g_qryparam.return1        #將開窗取得的值回傳到變數
            DISPLAY g_deap_d[l_ac].deap005 TO deap005              #顯示到畫面上 
            CALL adet405_deap005_ref()  
            NEXT FIELD deap005                                     #返回原欄位
]]>
</point>
  <point name="input.c.page1.deap006" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_deap_d[l_ac].deap006             #給予default值
            #給予arg

            CALL q_aooi001_1()                                #呼叫開窗
            LET g_deap_d[l_ac].deap006 = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_deap_d[l_ac].deap006 TO deap006         #顯示到畫面上 
            CALL adet405_deap006_ref()    
            NEXT FIELD deap006                                #返回原欄位
]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            CALL adet405_set_entry(p_cmd) 
            CALL adet405_set_no_entry(p_cmd) ]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   DEFINE  l_flag                LIKE type_t.num5  
   DEFINE  l_ooie001             LIKE ooie_t.ooie001 
   DEFINE  l_ooie002             LIKE ooie_t.ooie002  
   DEFINE  l_success             LIKE type_t.num5 
   DEFINE  l_ooef004             LIKE ooef_t.ooef004 ]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[               #如果營運據點為空 就返回該欄位 
               IF cl_null(g_deao_m.deaosite) THEN 
                  NEXT FIELD deaosite 
               END IF 
     
               #如果日期為空 就返回該欄位 
               IF cl_null(g_deao_m.deaodocdt) THEN 
                  NEXT FIELD deaodocdt 
               END IF 
               
               #依營運據點、單別、日期取單號  
               CALL s_aooi200_gen_docno(g_deao_m.deaosite,g_deao_m.deaodocno,g_deao_m.deaodocdt,g_prog)  
                    RETURNING l_flag,g_deao_m.deaodocno 
               IF NOT l_flag THEN 
                  NEXT FIELD deaodocno 
               END IF ]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      LET g_deao_m.deaosite = g_site  
      CALL adet405_deaosite_ref() 
      LET g_deao_m.deaodocdt = g_today  
      
      #預設單據的單別 
      LET r_success = '' 
      LET r_doctype = '' 
      CALL s_arti200_get_def_doc_type(g_deao_m.deaosite,g_prog,'1') 
           RETURNING r_success, r_doctype 
      LET g_deao_m.deaodocno = r_doctype  
      LET g_deao_m.deao001 = g_user 
      CALL adet405_deao001_ref() 
      LET g_deao_m.deaostus = 'N'   
      
      LET g_deao_m_t.* = g_deao_m.* ]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   DEFINE r_success     LIKE type_t.num5 
   DEFINE r_doctype     LIKE rtai_t.rtai004 ]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_deao_m.deaostus MATCHES "[DR]" THEN 
         LET g_deao_m.deaostus = "N"
      END IF]]>
</point>
  <point name="send.before_send" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   #確認前檢核段
   IF NOT s_adet405_conf_chk(g_deao_m.deaodocno) THEN
      CLOSE adet405_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      CALL cl_set_comp_entry("deaosite,deaodocdt",TRUE) ]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   CALL cl_set_comp_entry("deap004,deap005,deap007,deap008",TRUE)   ]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      CALL cl_set_comp_entry("deaosite,deaodocdt",FALSE) ]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   IF g_deap_d[l_ac].deap002 = '40' THEN 
      CALL cl_set_comp_entry("deap008",FALSE) 
   END IF 
   IF g_deap_d[l_ac].deap002 = '50' THEN 
      CALL cl_set_comp_entry("deap004,deap005,deap008",FALSE) 
   END IF ]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_deap_d[l_ac].deap003
            CALL ap_ref_array2(g_ref_fields,"SELECT ooial003 FROM ooial_t WHERE ooialent='"||g_enterprise||"' AND ooial001=? AND ooial002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_deap_d[l_ac].deap003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_deap_d[l_ac].deap003_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_deap_d[l_ac].deap004
            CALL ap_ref_array2(g_ref_fields,"SELECT gcafl003 FROM gcafl_t WHERE gcaflent='"||g_enterprise||"' AND gcafl001=? AND gcafl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_deap_d[l_ac].deap004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_deap_d[l_ac].deap004_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_deap_d[l_ac].deap005
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2071' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_deap_d[l_ac].deap005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_deap_d[l_ac].deap005_desc

      CALL adet405_deap006_ref() 
      
      CASE g_deap_d[l_ac].deap002 
          WHEN '40' 
             CALL adet405_deap005_chk('d',l_ac)
          WHEN '50' 
             LET g_deap_d[l_ac].oocq009 = g_deap_d[l_ac].deap008 
      END CASE ]]>
</point>
  <point name="show.head.reference" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_deao_m.deaosite
            #CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            #LET g_deao_m.deaosite_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_deao_m.deaosite_desc

            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_deao_m.deao001
            #CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            #LET g_deao_m.deao001_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_deao_m.deao001_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_deao_m.deaoownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_deao_m.deaoownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_deao_m.deaoownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_deao_m.deaoowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_deao_m.deaoowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_deao_m.deaoowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_deao_m.deaocrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_deao_m.deaocrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_deao_m.deaocrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_deao_m.deaocrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_deao_m.deaocrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_deao_m.deaocrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_deao_m.deaomodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_deao_m.deaomodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_deao_m.deaomodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_deao_m.deaocnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_deao_m.deaocnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_deao_m.deaocnfid_desc

   CALL adet405_deaosite_ref() 
   CALL adet405_deao001_ref() ]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   
   ]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   CALL s_transaction_begin() 
   IF lc_state = 'Y' THEN 
      CALL s_adet405_conf_chk(g_deao_m.deaodocno) RETURNING l_success 
      IF NOT l_success THEN  
         CALL s_transaction_end('N','0') 
         RETURN 
      ELSE 
         IF NOT cl_ask_confirm('aim-00108') THEN  
            CALL s_transaction_end('N','0') 
            RETURN 
         ELSE 
            CALL s_adet405_conf_upd(g_deao_m.deaodocno) RETURNING l_success 
            IF NOT l_success THEN 
               CALL s_transaction_end('N','0') 
               RETURN 
            ELSE 
               CALL s_transaction_end('Y','0') 
            END IF 
         END IF 
      END IF 
   END IF 
   IF lc_state = 'N' THEN 
      CALL s_adet405_unconf_chk(g_deao_m.deaodocno) RETURNING l_success 
      IF NOT l_success THEN 
         CALL s_transaction_end('N','0') 
         RETURN 
      ELSE 
         IF NOT cl_ask_confirm('aim-00110') THEN 
            CALL s_transaction_end('N','0') 
            RETURN 
         ELSE 
            CALL s_adet405_unconf_upd(g_deao_m.deaodocno) RETURNING l_success 
            IF NOT l_success THEN 
               CALL s_transaction_end('N','0') 
               RETURN 
            ELSE 
               CALL s_transaction_end('Y','0') 
            END IF 
         END IF 
      END IF 
   END IF 
   IF lc_state = 'X' THEN 
      CALL s_adet405_invalid_chk(g_deao_m.deaodocno) RETURNING l_success 
      IF NOT l_success THEN 
         CALL s_transaction_end('N','0') 
         RETURN 
      ELSE 
         IF NOT cl_ask_confirm('aim-00109') THEN 
            CALL s_transaction_end('N','0') 
            RETURN 
         ELSE 
            CALL s_adet405_invalid_upd(g_deao_m.deaodocno) RETURNING l_success 
            IF NOT l_success THEN 
               CALL s_transaction_end('N','0') 
               RETURN 
            ELSE 
               CALL s_transaction_end('Y','0') 
            END IF 
         END IF 
      END IF 
   END IF ]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   IF g_deao_m.deaostus = 'X' THEN
      RETURN 
   END IF ]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[         HIDE OPTION "verify" 
         
         #open皆改為unconfirmed
         CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
         #提交和抽單一開始先無條件關
         CALL cl_set_act_visible("signing,withdraw",FALSE)

         CASE g_deao_m.deaostus 
            WHEN "N" 
               CALL cl_set_act_visible("unconfirmed",FALSE) 
               #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
               IF cl_bpm_chk() THEN
                  CALL cl_set_act_visible("signing",TRUE)
                  CALL cl_set_act_visible("confirmed",FALSE)
               END IF
            WHEN "X"  
               CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE) 
            WHEN "Y" 
               CALL cl_set_act_visible("invalid,confirmed",FALSE)
            #已核准只能顯示確認;其餘應用功能皆隱藏
            WHEN "A"     
               CALL cl_set_act_visible("confirmed ",TRUE)  
               CALL cl_set_act_visible("unconfirmed,invalid",FALSE)          
            #保留修改的功能(如作廢)，隱藏其他應用功能
            WHEN "R"   
               CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)       
            WHEN "D"  
               CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)
            #送簽中只能顯示抽單;其餘應用功能皆隱藏
            WHEN "W"   
               CALL cl_set_act_visible("withdraw",TRUE)  
               CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)               
         END CASE ]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   DEFINE l_success     LIKE type_t.num5 ]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.bpm_status" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.deaosite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.deaosite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.deaodocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.deaodocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.deaodocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.deaodocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.deaodocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.deao001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.deao001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.deaounit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.deaounit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.deaounit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.deaostus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.deaostus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.deaostus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.deaoownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.deaoownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.deaoowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.deaoowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.deaocrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.deaocrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.deaocrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.deaocrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.deaocrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.deaomodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.deaomodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.deaomoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.deaocnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.deaocnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.deaocnfdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.deapseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.deapseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.deapseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.deap001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.deap001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.deap001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.deap002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.deap002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.deap002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.deap003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.deap003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.deap004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.deap004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.deap005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.deap005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.deap006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.deap006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.deap007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.deap007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.deap007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.deap008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.deap008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.deap008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.deapsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.deapsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.deapsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.deapunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.deapunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.deapunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.deaosite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.deaosite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.deaodocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.deaodocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.deaodocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.deaodocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.deaodocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.deao001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.deao001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.deaounit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.deaounit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.deaounit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.deaostus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.deaostus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.deaostus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.deaodocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.deaounit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.deaostus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.deapseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.deapseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.deap001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.deap001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.deap002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.deap002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.deap003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.deap003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.deap004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.deap004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.deap005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.deap005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.deap006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.deap007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.deap007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.deap008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.deap008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.deapsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.deapsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.deapsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.deapunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.deapunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.deapunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.deapseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.deap001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.deap002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.deap007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.deap008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.deapsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.deapunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.accept" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.unconfirmed" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.verify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.invalid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.confirmed" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.approved" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.withdraw" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.rejection" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.signing" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.before_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="send.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="send.after_send" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="draw.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="adet405.b_fill" ver="3" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION adet405_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_deap_d.clear()    #g_deap_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF adet405_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE deapseq,deap001,deap002,deap003,'',deap004,'',deap005,'','',deap006, 
          '',deap007,deap008,deapsite,deapunit FROM deap_t",   
                  " INNER JOIN deao_t ON deaodocno = deapdocno ",
 
                  #"",
                  
                  "",
                  " WHERE deapent=? AND deapdocno=?"
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY deap_t.deapseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      PREPARE adet405_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR adet405_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_deao_m.deaodocno
 
                                               
      FOREACH b_fill_cs INTO g_deap_d[l_ac].deapseq,g_deap_d[l_ac].deap001,g_deap_d[l_ac].deap002,g_deap_d[l_ac].deap003, 
          g_deap_d[l_ac].deap003_desc,g_deap_d[l_ac].deap004,g_deap_d[l_ac].deap004_desc,g_deap_d[l_ac].deap005, 
          g_deap_d[l_ac].deap005_desc,g_deap_d[l_ac].oocq009,g_deap_d[l_ac].deap006,g_deap_d[l_ac].deap006_desc, 
          g_deap_d[l_ac].deap007,g_deap_d[l_ac].deap008,g_deap_d[l_ac].deapsite,g_deap_d[l_ac].deapunit 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_deap_d.deleteElement(g_deap_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE adet405_pb
 
   
END FUNCTION
]]>
</section>
  <section id="adet405.b_fill2" ver="2" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION adet405_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL adet405_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="adet405.browser_fill" ver="4" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION adet405_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_deao_m.* TO NULL
   CALL g_deap_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "deaodocno"
 
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE deaodocno ",
 
                        " FROM deao_t ",
                              " ",
                              " LEFT JOIN deap_t ON deapent = deaoent AND deaodocno = deapdocno ",
 
 
                              " ", 
                              " ", 
                       " WHERE deaoent = '" ||g_enterprise|| "' AND deapent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("deao_t")
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE deaodocno ",
 
                        " FROM deao_t ", 
                              " ",
                              " ",
                        "WHERE deaoent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("deao_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
   
   #LET g_page_action = ps_page_action          # Keep Action
   
   IF ps_page_action = "F" OR
      ps_page_action = "P" OR
      ps_page_action = "N" OR
      ps_page_action = "L" THEN
      LET g_page_action = ps_page_action
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
            LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
         
      WHEN '/'
         LET g_pagestart = g_jump
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = 1
         END IF
         
   END CASE
  
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
      #依照deaosite,'',deaodocdt,deaodocno,deao001,'' Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT deaostus,deaosite,'',deaodocdt,deaodocno,deao001,'',DENSE_RANK() OVER(ORDER BY deaodocno ", 
          g_order,") AS RANK ",
                        " FROM deao_t ",
                              " ",
                              " LEFT JOIN deap_t ON deapent = deaoent AND deaodocno = deapdocno ",
 
 
                              " ",
                              " ",
                       " ",
                       " WHERE deaoent = '" ||g_enterprise|| "' AND ",g_wc," AND ",g_wc2, cl_sql_add_filter("deao_t")
   ELSE
      #單身無輸入資料
      LET l_sql_rank = "SELECT DISTINCT deaostus,deaosite,'',deaodocdt,deaodocno,deao001,'',DENSE_RANK() OVER(ORDER BY deaodocno ", 
          g_order,") AS RANK ",
                       " FROM deao_t ",
                            "  ",
                            "  ",
                       " WHERE deaoent = '" ||g_enterprise|| "' AND ", g_wc, cl_sql_add_filter("deao_t")
   END IF
   
   #定義翻頁CURSOR
   LET g_sql= "SELECT deaostus,deaosite,'',deaodocdt,deaodocno,deao001,'' FROM (",l_sql_rank,") WHERE ", 

              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
               
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
               
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_deaosite,g_browser[g_cnt].b_deaosite_desc, 
       g_browser[g_cnt].b_deaodocdt,g_browser[g_cnt].b_deaodocno,g_browser[g_cnt].b_deao001,g_browser[g_cnt].b_deao001_desc 

      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_deaosite
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_lang||"'", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_deaosite_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_browser[g_cnt].b_deaosite_desc
 
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_deao001
      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_deao001_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_browser[g_cnt].b_deao001_desc
 
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "V"
            LET g_browser[g_cnt].b_statepic = "stus/16/verify.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="adet405.browser_search" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION adet405_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY deaodocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL adet405_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="adet405.construct" ver="4" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION adet405_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_deao_m.* TO NULL
   CALL g_deap_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON deaosite,deaodocdt,deaodocno,deao001,deaounit,deaostus,deaoownid,deaoowndp, 
          deaocrtid,deaocrtdp,deaocrtdt,deaomodid,deaomoddt,deaocnfid,deaocnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<deaoownid>>----
         #ON ACTION controlp INFIELD deaoownid
         #   CALL q_common('deao_t','deaoownid',TRUE,FALSE,g_deao_m.deaoownid) RETURNING ls_return
         #   DISPLAY ls_return TO deaoownid
         #   NEXT FIELD deaoownid  
         #
         ##----<<deaoowndp>>----
         #ON ACTION controlp INFIELD deaoowndp
         #   CALL q_common('deao_t','deaoowndp',TRUE,FALSE,g_deao_m.deaoowndp) RETURNING ls_return
         #   DISPLAY ls_return TO deaoowndp
         #   NEXT FIELD deaoowndp
         #
         ##----<<deaocrtid>>----
         #ON ACTION controlp INFIELD deaocrtid
         #   CALL q_common('deao_t','deaocrtid',TRUE,FALSE,g_deao_m.deaocrtid) RETURNING ls_return
         #   DISPLAY ls_return TO deaocrtid
         #   NEXT FIELD deaocrtid
         #
         ##----<<deaocrtdp>>----
         #ON ACTION controlp INFIELD deaocrtdp
         #   CALL q_common('deao_t','deaocrtdp',TRUE,FALSE,g_deao_m.deaocrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO deaocrtdp
         #   NEXT FIELD deaocrtdp
         #
         ##----<<deaomodid>>----
         #ON ACTION controlp INFIELD deaomodid
         #   CALL q_common('deao_t','deaomodid',TRUE,FALSE,g_deao_m.deaomodid) RETURNING ls_return
         #   DISPLAY ls_return TO deaomodid
         #   NEXT FIELD deaomodid
         #
         ##----<<deaocnfid>>----
         #ON ACTION controlp INFIELD deaocnfid
         #   CALL q_common('deao_t','deaocnfid',TRUE,FALSE,g_deao_m.deaocnfid) RETURNING ls_return
         #   DISPLAY ls_return TO deaocnfid
         #   NEXT FIELD deaocnfid
         #
         ##----<<deaopstid>>----
         ##ON ACTION controlp INFIELD deaopstid
         ##   CALL q_common('deao_t','deaopstid',TRUE,FALSE,g_deao_m.deaopstid) RETURNING ls_return
         ##   DISPLAY ls_return TO deaopstid
         ##   NEXT FIELD deaopstid
         
         ##----<<deaocrtdt>>----
         AFTER FIELD deaocrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<deaomoddt>>----
         AFTER FIELD deaomoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<deaocnfdt>>----
         AFTER FIELD deaocnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<deaopstdt>>----
         #AFTER FIELD deaopstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
         #---------------------------<  Master  >---------------------------
         #----<<deaosite>>----
         #Ctrlp:construct.c.deaosite
         ON ACTION controlp INFIELD deaosite
            #add-point:ON ACTION controlp INFIELD deaosite
            {<point name="construct.c.deaosite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deaosite
            #add-point:BEFORE FIELD deaosite
            {<point name="construct.b.deaosite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deaosite
            
            #add-point:AFTER FIELD deaosite
            {<point name="construct.a.deaosite" />}
            #END add-point
            
 
         #----<<deaosite_desc>>----
         #----<<deaodocdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deaodocdt
            #add-point:BEFORE FIELD deaodocdt
            {<point name="construct.b.deaodocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deaodocdt
            
            #add-point:AFTER FIELD deaodocdt
            {<point name="construct.a.deaodocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.deaodocdt
         ON ACTION controlp INFIELD deaodocdt
            #add-point:ON ACTION controlp INFIELD deaodocdt
            {<point name="construct.c.deaodocdt" />}
            #END add-point
 
         #----<<deaodocno>>----
         #Ctrlp:construct.c.deaodocno
         ON ACTION controlp INFIELD deaodocno
            #add-point:ON ACTION controlp INFIELD deaodocno
            {<point name="construct.c.deaodocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deaodocno
            #add-point:BEFORE FIELD deaodocno
            {<point name="construct.b.deaodocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deaodocno
            
            #add-point:AFTER FIELD deaodocno
            {<point name="construct.a.deaodocno" />}
            #END add-point
            
 
         #----<<deao001>>----
         #Ctrlp:construct.c.deao001
         ON ACTION controlp INFIELD deao001
            #add-point:ON ACTION controlp INFIELD deao001
            {<point name="construct.c.deao001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deao001
            #add-point:BEFORE FIELD deao001
            {<point name="construct.b.deao001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deao001
            
            #add-point:AFTER FIELD deao001
            {<point name="construct.a.deao001" />}
            #END add-point
            
 
         #----<<deao001_desc>>----
         #----<<deaounit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deaounit
            #add-point:BEFORE FIELD deaounit
            {<point name="construct.b.deaounit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deaounit
            
            #add-point:AFTER FIELD deaounit
            {<point name="construct.a.deaounit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.deaounit
         ON ACTION controlp INFIELD deaounit
            #add-point:ON ACTION controlp INFIELD deaounit
            {<point name="construct.c.deaounit" />}
            #END add-point
 
         #----<<deaostus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deaostus
            #add-point:BEFORE FIELD deaostus
            {<point name="construct.b.deaostus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deaostus
            
            #add-point:AFTER FIELD deaostus
            {<point name="construct.a.deaostus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.deaostus
         ON ACTION controlp INFIELD deaostus
            #add-point:ON ACTION controlp INFIELD deaostus
            {<point name="construct.c.deaostus" />}
            #END add-point
 
         #----<<deaoownid>>----
         #Ctrlp:construct.c.deaoownid
         ON ACTION controlp INFIELD deaoownid
            #add-point:ON ACTION controlp INFIELD deaoownid
            {<point name="construct.c.deaoownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deaoownid
            #add-point:BEFORE FIELD deaoownid
            {<point name="construct.b.deaoownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deaoownid
            
            #add-point:AFTER FIELD deaoownid
            {<point name="construct.a.deaoownid" />}
            #END add-point
            
 
         #----<<deaoownid_desc>>----
         #----<<deaoowndp>>----
         #Ctrlp:construct.c.deaoowndp
         ON ACTION controlp INFIELD deaoowndp
            #add-point:ON ACTION controlp INFIELD deaoowndp
            {<point name="construct.c.deaoowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deaoowndp
            #add-point:BEFORE FIELD deaoowndp
            {<point name="construct.b.deaoowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deaoowndp
            
            #add-point:AFTER FIELD deaoowndp
            {<point name="construct.a.deaoowndp" />}
            #END add-point
            
 
         #----<<deaoowndp_desc>>----
         #----<<deaocrtid>>----
         #Ctrlp:construct.c.deaocrtid
         ON ACTION controlp INFIELD deaocrtid
            #add-point:ON ACTION controlp INFIELD deaocrtid
            {<point name="construct.c.deaocrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deaocrtid
            #add-point:BEFORE FIELD deaocrtid
            {<point name="construct.b.deaocrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deaocrtid
            
            #add-point:AFTER FIELD deaocrtid
            {<point name="construct.a.deaocrtid" />}
            #END add-point
            
 
         #----<<deaocrtid_desc>>----
         #----<<deaocrtdp>>----
         #Ctrlp:construct.c.deaocrtdp
         ON ACTION controlp INFIELD deaocrtdp
            #add-point:ON ACTION controlp INFIELD deaocrtdp
            {<point name="construct.c.deaocrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deaocrtdp
            #add-point:BEFORE FIELD deaocrtdp
            {<point name="construct.b.deaocrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deaocrtdp
            
            #add-point:AFTER FIELD deaocrtdp
            {<point name="construct.a.deaocrtdp" />}
            #END add-point
            
 
         #----<<deaocrtdp_desc>>----
         #----<<deaocrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deaocrtdt
            #add-point:BEFORE FIELD deaocrtdt
            {<point name="construct.b.deaocrtdt" />}
            #END add-point
 
         #----<<deaomodid>>----
         #Ctrlp:construct.c.deaomodid
         ON ACTION controlp INFIELD deaomodid
            #add-point:ON ACTION controlp INFIELD deaomodid
            {<point name="construct.c.deaomodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deaomodid
            #add-point:BEFORE FIELD deaomodid
            {<point name="construct.b.deaomodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deaomodid
            
            #add-point:AFTER FIELD deaomodid
            {<point name="construct.a.deaomodid" />}
            #END add-point
            
 
         #----<<deaomodid_desc>>----
         #----<<deaomoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deaomoddt
            #add-point:BEFORE FIELD deaomoddt
            {<point name="construct.b.deaomoddt" />}
            #END add-point
 
         #----<<deaocnfid>>----
         #Ctrlp:construct.c.deaocnfid
         ON ACTION controlp INFIELD deaocnfid
            #add-point:ON ACTION controlp INFIELD deaocnfid
            {<point name="construct.c.deaocnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deaocnfid
            #add-point:BEFORE FIELD deaocnfid
            {<point name="construct.b.deaocnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deaocnfid
            
            #add-point:AFTER FIELD deaocnfid
            {<point name="construct.a.deaocnfid" />}
            #END add-point
            
 
         #----<<deaocnfid_desc>>----
         #----<<deaocnfdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deaocnfdt
            #add-point:BEFORE FIELD deaocnfdt
            {<point name="construct.b.deaocnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON deapseq,deap001,deap002,deap003,deap004,deap005,deap006,deap007,deap008, 
          deapsite,deapunit
           FROM s_detail1[1].deapseq,s_detail1[1].deap001,s_detail1[1].deap002,s_detail1[1].deap003, 
               s_detail1[1].deap004,s_detail1[1].deap005,s_detail1[1].deap006,s_detail1[1].deap007,s_detail1[1].deap008, 
               s_detail1[1].deapsite,s_detail1[1].deapunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<deapseq>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deapseq
            #add-point:BEFORE FIELD deapseq
            {<point name="construct.b.page1.deapseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deapseq
            
            #add-point:AFTER FIELD deapseq
            {<point name="construct.a.page1.deapseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.deapseq
         ON ACTION controlp INFIELD deapseq
            #add-point:ON ACTION controlp INFIELD deapseq
            {<point name="construct.c.page1.deapseq" />}
            #END add-point
 
         #----<<deap001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deap001
            #add-point:BEFORE FIELD deap001
            {<point name="construct.b.page1.deap001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deap001
            
            #add-point:AFTER FIELD deap001
            {<point name="construct.a.page1.deap001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.deap001
         ON ACTION controlp INFIELD deap001
            #add-point:ON ACTION controlp INFIELD deap001
            {<point name="construct.c.page1.deap001" />}
            #END add-point
 
         #----<<deap002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deap002
            #add-point:BEFORE FIELD deap002
            {<point name="construct.b.page1.deap002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deap002
            
            #add-point:AFTER FIELD deap002
            {<point name="construct.a.page1.deap002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.deap002
         ON ACTION controlp INFIELD deap002
            #add-point:ON ACTION controlp INFIELD deap002
            {<point name="construct.c.page1.deap002" />}
            #END add-point
 
         #----<<deap003>>----
         #Ctrlp:construct.c.page1.deap003
         ON ACTION controlp INFIELD deap003
            #add-point:ON ACTION controlp INFIELD deap003
            {<point name="construct.c.page1.deap003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deap003
            #add-point:BEFORE FIELD deap003
            {<point name="construct.b.page1.deap003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deap003
            
            #add-point:AFTER FIELD deap003
            {<point name="construct.a.page1.deap003" />}
            #END add-point
            
 
         #----<<deap003_desc>>----
         #----<<deap004>>----
         #Ctrlp:construct.c.page1.deap004
         ON ACTION controlp INFIELD deap004
            #add-point:ON ACTION controlp INFIELD deap004
            {<point name="construct.c.page1.deap004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deap004
            #add-point:BEFORE FIELD deap004
            {<point name="construct.b.page1.deap004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deap004
            
            #add-point:AFTER FIELD deap004
            {<point name="construct.a.page1.deap004" />}
            #END add-point
            
 
         #----<<deap004_desc>>----
         #----<<deap005>>----
         #Ctrlp:construct.c.page1.deap005
         ON ACTION controlp INFIELD deap005
            #add-point:ON ACTION controlp INFIELD deap005
            {<point name="construct.c.page1.deap005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deap005
            #add-point:BEFORE FIELD deap005
            {<point name="construct.b.page1.deap005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deap005
            
            #add-point:AFTER FIELD deap005
            {<point name="construct.a.page1.deap005" />}
            #END add-point
            
 
         #----<<deap005_desc>>----
         #----<<oocq009>>----
         #----<<deap006>>----
         #Ctrlp:construct.c.page1.deap006
         ON ACTION controlp INFIELD deap006
            #add-point:ON ACTION controlp INFIELD deap006
            {<point name="construct.c.page1.deap006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deap006
            #add-point:BEFORE FIELD deap006
            {<point name="construct.b.page1.deap006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deap006
            
            #add-point:AFTER FIELD deap006
            {<point name="construct.a.page1.deap006" />}
            #END add-point
            
 
         #----<<deap006_desc>>----
         #----<<deap007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deap007
            #add-point:BEFORE FIELD deap007
            {<point name="construct.b.page1.deap007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deap007
            
            #add-point:AFTER FIELD deap007
            {<point name="construct.a.page1.deap007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.deap007
         ON ACTION controlp INFIELD deap007
            #add-point:ON ACTION controlp INFIELD deap007
            {<point name="construct.c.page1.deap007" />}
            #END add-point
 
         #----<<deap008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deap008
            #add-point:BEFORE FIELD deap008
            {<point name="construct.b.page1.deap008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deap008
            
            #add-point:AFTER FIELD deap008
            {<point name="construct.a.page1.deap008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.deap008
         ON ACTION controlp INFIELD deap008
            #add-point:ON ACTION controlp INFIELD deap008
            {<point name="construct.c.page1.deap008" />}
            #END add-point
 
         #----<<deapsite>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deapsite
            #add-point:BEFORE FIELD deapsite
            {<point name="construct.b.page1.deapsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deapsite
            
            #add-point:AFTER FIELD deapsite
            {<point name="construct.a.page1.deapsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.deapsite
         ON ACTION controlp INFIELD deapsite
            #add-point:ON ACTION controlp INFIELD deapsite
            {<point name="construct.c.page1.deapsite" />}
            #END add-point
 
         #----<<deapunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deapunit
            #add-point:BEFORE FIELD deapunit
            {<point name="construct.b.page1.deapunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deapunit
            
            #add-point:AFTER FIELD deapunit
            {<point name="construct.a.page1.deapunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.deapunit
         ON ACTION controlp INFIELD deapunit
            #add-point:ON ACTION controlp INFIELD deapunit
            {<point name="construct.c.page1.deapunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="adet405.default_search" ver="3" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION adet405_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " deaodocno = '", g_argv[1], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="adet405.delete" ver="7" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION adet405_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_deao_m.deaodocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE adet405_master_referesh USING g_deao_m.deaodocno INTO g_deao_m.deaosite,g_deao_m.deaodocdt, 
       g_deao_m.deaodocno,g_deao_m.deao001,g_deao_m.deaounit,g_deao_m.deaostus,g_deao_m.deaoownid,g_deao_m.deaoowndp, 
       g_deao_m.deaocrtid,g_deao_m.deaocrtdp,g_deao_m.deaocrtdt,g_deao_m.deaomodid,g_deao_m.deaomoddt, 
       g_deao_m.deaocnfid,g_deao_m.deaocnfdt
   
   
 
   CALL adet405_show()
   
   CALL s_transaction_begin()
 
   OPEN adet405_cl USING g_enterprise,g_deao_m.deaodocno
 
   IF STATUS THEN
      CALL cl_err("OPEN adet405_cl:", STATUS, 1)
      CLOSE adet405_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   FETCH adet405_cl INTO g_deao_m.deaosite,g_deao_m.deaosite_desc,g_deao_m.deaodocdt,g_deao_m.deaodocno, 
       g_deao_m.deao001,g_deao_m.deao001_desc,g_deao_m.deaounit,g_deao_m.deaostus,g_deao_m.deaoownid, 
       g_deao_m.deaoownid_desc,g_deao_m.deaoowndp,g_deao_m.deaoowndp_desc,g_deao_m.deaocrtid,g_deao_m.deaocrtid_desc, 
       g_deao_m.deaocrtdp,g_deao_m.deaocrtdp_desc,g_deao_m.deaocrtdt,g_deao_m.deaomodid,g_deao_m.deaomodid_desc, 
       g_deao_m.deaomoddt,g_deao_m.deaocnfid,g_deao_m.deaocnfid_desc,g_deao_m.deaocnfdt              
        #鎖住將被更改或取消的資料
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_deao_m.deaodocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL adet405_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_deaodocno_t = g_deao_m.deaodocno
 
 
      DELETE FROM deao_t
       WHERE deaoent = g_enterprise AND deaodocno = g_deao_m.deaodocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_deao_m.deaodocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM deap_t
       WHERE deapent = g_enterprise AND deapdocno = g_deao_m.deaodocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("deap_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_deap_d.clear() 
 
     
      #CALL adet405_ui_browser_refresh()  
      CALL adet405_ui_headershow()  
      CALL adet405_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL adet405_browser_fill("")
         CALL adet405_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL adet405_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
  
 
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE adet405_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_deao_m.deaodocno,'D')
    
END FUNCTION
]]>
</section>
  <section id="adet405.delete_b" ver="2" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION adet405_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM deap_t
       WHERE deapent = g_enterprise AND
         deapdocno = ps_keys_bak[1] AND deapseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="adet405.description" ver="39" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000263
#+ 
#+ Filename...: adet405
#+ Description: 營業款寄送存繳維護作業
#+ Creator....: 03079(2014/02/07)
#+ Modifier...: 03079(2014/02/18)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="adet405.detail_reproduce" ver="2" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION adet405_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE deap_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE adet405_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE adet405_detail AS ",
                "SELECT * FROM deap_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO adet405_detail SELECT * FROM deap_t 
                                         WHERE deapent = g_enterprise AND deapdocno = g_deaodocno_t
 
   
   #將key修正為調整後   
   UPDATE adet405_detail 
      #更新key欄位
      SET deapdocno = g_deao_m.deaodocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO deap_t SELECT * FROM adet405_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adet405_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_deaodocno_t = g_deao_m.deaodocno
 
   
   DROP TABLE adet405_detail
   
END FUNCTION
]]>
</section>
  <section id="adet405.detail_show" ver="3" status="" src="s">
<![CDATA[#+ 單身reference detail_show
PRIVATE FUNCTION adet405_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="adet405.fetch" ver="4" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION adet405_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_deao_m.deaodocno = g_browser[g_current_idx].b_deaodocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE adet405_master_referesh USING g_deao_m.deaodocno INTO g_deao_m.deaosite,g_deao_m.deaodocdt, 
       g_deao_m.deaodocno,g_deao_m.deao001,g_deao_m.deaounit,g_deao_m.deaostus,g_deao_m.deaoownid,g_deao_m.deaoowndp, 
       g_deao_m.deaocrtid,g_deao_m.deaocrtdp,g_deao_m.deaocrtdt,g_deao_m.deaomodid,g_deao_m.deaomoddt, 
       g_deao_m.deaocnfid,g_deao_m.deaocnfdt
   IF SQLCA.sqlcode THEN
      CALL cl_err("deao_t",SQLCA.sqlcode,1)
      INITIALIZE g_deao_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
  
   #重新顯示   
   CALL adet405_show()
 
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
END FUNCTION
]]>
</section>
  <section id="adet405.fill_chk" ver="3" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION adet405_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="adet405.filter" ver="4" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION adet405_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON deaosite,deaodocdt,deaodocno,deao001
                          FROM s_browse[1].b_deaosite,s_browse[1].b_deaodocdt,s_browse[1].b_deaodocno, 
                              s_browse[1].b_deao001
 
         BEFORE CONSTRUCT
               DISPLAY adet405_filter_parser('deaosite') TO s_browse[1].b_deaosite
            DISPLAY adet405_filter_parser('deaodocdt') TO s_browse[1].b_deaodocdt
            DISPLAY adet405_filter_parser('deaodocno') TO s_browse[1].b_deaodocno
            DISPLAY adet405_filter_parser('deao001') TO s_browse[1].b_deao001
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL adet405_filter_show('deaosite')
   CALL adet405_filter_show('deaodocdt')
   CALL adet405_filter_show('deaodocno')
   CALL adet405_filter_show('deao001')
 
END FUNCTION
]]>
</section>
  <section id="adet405.filter_parser" ver="2" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION adet405_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="adet405.filter_show" ver="2" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION adet405_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = adet405_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="adet405.global" ver="4" status="" src="s">
<![CDATA[{<point name="global.memo" />}
    
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_deao_m        RECORD
       deaosite LIKE deao_t.deaosite, 
   deaosite_desc LIKE type_t.chr80, 
   deaodocdt LIKE deao_t.deaodocdt, 
   deaodocno LIKE deao_t.deaodocno, 
   deao001 LIKE deao_t.deao001, 
   deao001_desc LIKE type_t.chr80, 
   deaounit LIKE deao_t.deaounit, 
   deaostus LIKE deao_t.deaostus, 
   deaoownid LIKE deao_t.deaoownid, 
   deaoownid_desc LIKE type_t.chr80, 
   deaoowndp LIKE deao_t.deaoowndp, 
   deaoowndp_desc LIKE type_t.chr80, 
   deaocrtid LIKE deao_t.deaocrtid, 
   deaocrtid_desc LIKE type_t.chr80, 
   deaocrtdp LIKE deao_t.deaocrtdp, 
   deaocrtdp_desc LIKE type_t.chr80, 
   deaocrtdt DATETIME YEAR TO SECOND, 
   deaomodid LIKE deao_t.deaomodid, 
   deaomodid_desc LIKE type_t.chr80, 
   deaomoddt DATETIME YEAR TO SECOND, 
   deaocnfid LIKE deao_t.deaocnfid, 
   deaocnfid_desc LIKE type_t.chr80, 
   deaocnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_deap_d        RECORD
       deapseq LIKE deap_t.deapseq, 
   deap001 LIKE deap_t.deap001, 
   deap002 LIKE deap_t.deap002, 
   deap003 LIKE deap_t.deap003, 
   deap003_desc LIKE type_t.chr500, 
   deap004 LIKE deap_t.deap004, 
   deap004_desc LIKE type_t.chr500, 
   deap005 LIKE deap_t.deap005, 
   deap005_desc LIKE type_t.chr500, 
   oocq009 LIKE type_t.chr80, 
   deap006 LIKE deap_t.deap006, 
   deap006_desc LIKE type_t.chr500, 
   deap007 LIKE deap_t.deap007, 
   deap008 LIKE deap_t.deap008, 
   deapsite LIKE deap_t.deapsite, 
   deapunit LIKE deap_t.deapunit
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_deao_m          type_g_deao_m
DEFINE g_deao_m_t        type_g_deao_m
 
   DEFINE g_deaodocno_t LIKE deao_t.deaodocno
 
 
DEFINE g_deap_d          DYNAMIC ARRAY OF type_g_deap_d
DEFINE g_deap_d_t        type_g_deap_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_deaosite LIKE deao_t.deaosite,
   b_deaosite_desc LIKE type_t.chr80,
      b_deaodocdt LIKE deao_t.deaodocdt,
      b_deaodocno LIKE deao_t.deaodocno,
      b_deao001 LIKE deao_t.deao001,
   b_deao001_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_deaosite LIKE deao_t.deaosite,
   b_deaosite_desc LIKE type_t.chr80,
      b_deaodocdt LIKE deao_t.deaodocdt,
      b_deaodocno LIKE deao_t.deaodocno,
      b_deao001 LIKE deao_t.deao001,
   b_deao001_desc LIKE type_t.chr80
      END RECORD 
      
#無單頭append欄位定義
#無單身append欄位定義
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="adet405.idx_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION adet405_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_deap_d.getLength() THEN
         LET g_detail_idx = g_deap_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_deap_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_deap_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="adet405.init" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION adet405_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('deaostus','13','N,V,X,Y,A,D,R,W')
 
      CALL cl_set_combo_scc('deap002','8310') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL adet405_default_search()
    
END FUNCTION
]]>
</section>
  <section id="adet405.input" ver="3" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION adet405_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT deapseq,deap001,deap002,deap003,'',deap004,'',deap005,'','',deap006,'', 
       deap007,deap008,deapsite,deapunit FROM deap_t WHERE deapent=? AND deapdocno=? AND deapseq=? FOR  
       UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE adet405_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL adet405_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL adet405_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_deao_m.deaosite,g_deao_m.deaodocdt,g_deao_m.deaodocno,g_deao_m.deao001,g_deao_m.deaounit, 
       g_deao_m.deaostus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="adet405.input.body" ver="5" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_deap_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_deap_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adet405_b_fill()
            LET g_rec_b = g_deap_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point              
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN adet405_cl USING g_enterprise,g_deao_m.deaodocno
 
            IF STATUS THEN
               CALL cl_err("OPEN adet405_cl:", STATUS, 1)
               CLOSE adet405_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_deap_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_deap_d[l_ac].deapseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_deap_d_t.* = g_deap_d[l_ac].*  #BACKUP
               CALL adet405_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL adet405_set_no_entry_b(l_cmd)
               IF NOT adet405_lock_b("deap_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adet405_bcl INTO g_deap_d[l_ac].deapseq,g_deap_d[l_ac].deap001,g_deap_d[l_ac].deap002, 
                      g_deap_d[l_ac].deap003,g_deap_d[l_ac].deap003_desc,g_deap_d[l_ac].deap004,g_deap_d[l_ac].deap004_desc, 
                      g_deap_d[l_ac].deap005,g_deap_d[l_ac].deap005_desc,g_deap_d[l_ac].oocq009,g_deap_d[l_ac].deap006, 
                      g_deap_d[l_ac].deap006_desc,g_deap_d[l_ac].deap007,g_deap_d[l_ac].deap008,g_deap_d[l_ac].deapsite, 
                      g_deap_d[l_ac].deapunit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_deap_d_t.deapseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL adet405_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_deap_d[l_ac].* TO NULL 
                  LET g_deap_d[l_ac].deap002 = "40"
 
 
            LET g_deap_d_t.* = g_deap_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adet405_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL adet405_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_deap_d[li_reproduce_target].* = g_deap_d[li_reproduce].*
 
               LET g_deap_d[li_reproduce_target].deapseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM deap_t 
             WHERE deapent = g_enterprise AND deapdocno = g_deao_m.deaodocno
 
               AND deapseq = g_deap_d[l_ac].deapseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_deao_m.deaodocno
               LET gs_keys[2] = g_deap_d[g_detail_idx].deapseq
               CALL adet405_insert_b('deap_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_deap_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("deap_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adet405_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_deap_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_deap_d.deleteElement(l_ac)
               NEXT FIELD deapseq
            END IF
         
            IF g_deap_d[l_ac].deapseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM deap_t
                WHERE deapent = g_enterprise AND deapdocno = g_deao_m.deaodocno AND
 
                      deapseq = g_deap_d_t.deapseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("deap_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE adet405_bcl
               LET l_count = g_deap_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_deao_m.deaodocno
               LET gs_keys[2] = g_deap_d[g_detail_idx].deapseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL adet405_delete_b('deap_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<deapseq>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deapseq
            #add-point:BEFORE FIELD deapseq
            {<point name="input.b.page1.deapseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deapseq
            
            #add-point:AFTER FIELD deapseq
            {<point name="input.a.page1.deapseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE deapseq
            #add-point:ON CHANGE deapseq
            {<point name="input.g.page1.deapseq" />}
            #END add-point
 
         #----<<deap001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deap001
            #add-point:BEFORE FIELD deap001
            {<point name="input.b.page1.deap001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deap001
            
            #add-point:AFTER FIELD deap001
            {<point name="input.a.page1.deap001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE deap001
            #add-point:ON CHANGE deap001
            {<point name="input.g.page1.deap001" />}
            #END add-point
 
         #----<<deap002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deap002
            #add-point:BEFORE FIELD deap002
            {<point name="input.b.page1.deap002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deap002
            
            #add-point:AFTER FIELD deap002
            {<point name="input.a.page1.deap002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE deap002
            #add-point:ON CHANGE deap002
            {<point name="input.g.page1.deap002" />}
            #END add-point
 
         #----<<deap003>>----
         #此段落由子樣板a02產生
         AFTER FIELD deap003
            
            #add-point:AFTER FIELD deap003
            {<point name="input.a.page1.deap003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD deap003
            #add-point:BEFORE FIELD deap003
            {<point name="input.b.page1.deap003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE deap003
            #add-point:ON CHANGE deap003
            {<point name="input.g.page1.deap003" />}
            #END add-point
 
         #----<<deap003_desc>>----
         #----<<deap004>>----
         #此段落由子樣板a02產生
         AFTER FIELD deap004
            
            #add-point:AFTER FIELD deap004
            {<point name="input.a.page1.deap004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD deap004
            #add-point:BEFORE FIELD deap004
            {<point name="input.b.page1.deap004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE deap004
            #add-point:ON CHANGE deap004
            {<point name="input.g.page1.deap004" />}
            #END add-point
 
         #----<<deap004_desc>>----
         #----<<deap005>>----
         #此段落由子樣板a02產生
         AFTER FIELD deap005
            
            #add-point:AFTER FIELD deap005
            {<point name="input.a.page1.deap005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD deap005
            #add-point:BEFORE FIELD deap005
            {<point name="input.b.page1.deap005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE deap005
            #add-point:ON CHANGE deap005
            {<point name="input.g.page1.deap005" />}
            #END add-point
 
         #----<<deap005_desc>>----
         #----<<oocq009>>----
         #----<<deap006>>----
         #此段落由子樣板a02產生
         AFTER FIELD deap006
            
            #add-point:AFTER FIELD deap006
            {<point name="input.a.page1.deap006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD deap006
            #add-point:BEFORE FIELD deap006
            {<point name="input.b.page1.deap006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE deap006
            #add-point:ON CHANGE deap006
            {<point name="input.g.page1.deap006" />}
            #END add-point
 
         #----<<deap006_desc>>----
         #----<<deap007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deap007
            #add-point:BEFORE FIELD deap007
            {<point name="input.b.page1.deap007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deap007
            
            #add-point:AFTER FIELD deap007
            {<point name="input.a.page1.deap007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE deap007
            #add-point:ON CHANGE deap007
            {<point name="input.g.page1.deap007" />}
            #END add-point
 
         #----<<deap008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deap008
            #add-point:BEFORE FIELD deap008
            {<point name="input.b.page1.deap008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deap008
            
            #add-point:AFTER FIELD deap008
            {<point name="input.a.page1.deap008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE deap008
            #add-point:ON CHANGE deap008
            {<point name="input.g.page1.deap008" />}
            #END add-point
 
         #----<<deapsite>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deapsite
            #add-point:BEFORE FIELD deapsite
            {<point name="input.b.page1.deapsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deapsite
            
            #add-point:AFTER FIELD deapsite
            {<point name="input.a.page1.deapsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE deapsite
            #add-point:ON CHANGE deapsite
            {<point name="input.g.page1.deapsite" />}
            #END add-point
 
         #----<<deapunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deapunit
            #add-point:BEFORE FIELD deapunit
            {<point name="input.b.page1.deapunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deapunit
            
            #add-point:AFTER FIELD deapunit
            {<point name="input.a.page1.deapunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE deapunit
            #add-point:ON CHANGE deapunit
            {<point name="input.g.page1.deapunit" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<deapseq>>----
         #Ctrlp:input.c.page1.deapseq
         ON ACTION controlp INFIELD deapseq
            #add-point:ON ACTION controlp INFIELD deapseq
            {<point name="input.c.page1.deapseq" />}
            #END add-point
 
         #----<<deap001>>----
         #Ctrlp:input.c.page1.deap001
         ON ACTION controlp INFIELD deap001
            #add-point:ON ACTION controlp INFIELD deap001
            {<point name="input.c.page1.deap001" />}
            #END add-point
 
         #----<<deap002>>----
         #Ctrlp:input.c.page1.deap002
         ON ACTION controlp INFIELD deap002
            #add-point:ON ACTION controlp INFIELD deap002
            {<point name="input.c.page1.deap002" />}
            #END add-point
 
         #----<<deap003>>----
         #Ctrlp:input.c.page1.deap003
         ON ACTION controlp INFIELD deap003
            #add-point:ON ACTION controlp INFIELD deap003
            {<point name="input.c.page1.deap003" />}
            #END add-point
 
         #----<<deap003_desc>>----
         #----<<deap004>>----
         #Ctrlp:input.c.page1.deap004
         ON ACTION controlp INFIELD deap004
            #add-point:ON ACTION controlp INFIELD deap004
            {<point name="input.c.page1.deap004" />}
            #END add-point
 
         #----<<deap004_desc>>----
         #----<<deap005>>----
         #Ctrlp:input.c.page1.deap005
         ON ACTION controlp INFIELD deap005
            #add-point:ON ACTION controlp INFIELD deap005
            {<point name="input.c.page1.deap005" />}
            #END add-point
 
         #----<<deap005_desc>>----
         #----<<oocq009>>----
         #----<<deap006>>----
         #Ctrlp:input.c.page1.deap006
         ON ACTION controlp INFIELD deap006
            #add-point:ON ACTION controlp INFIELD deap006
            {<point name="input.c.page1.deap006" />}
            #END add-point
 
         #----<<deap006_desc>>----
         #----<<deap007>>----
         #Ctrlp:input.c.page1.deap007
         ON ACTION controlp INFIELD deap007
            #add-point:ON ACTION controlp INFIELD deap007
            {<point name="input.c.page1.deap007" />}
            #END add-point
 
         #----<<deap008>>----
         #Ctrlp:input.c.page1.deap008
         ON ACTION controlp INFIELD deap008
            #add-point:ON ACTION controlp INFIELD deap008
            {<point name="input.c.page1.deap008" />}
            #END add-point
 
         #----<<deapsite>>----
         #Ctrlp:input.c.page1.deapsite
         ON ACTION controlp INFIELD deapsite
            #add-point:ON ACTION controlp INFIELD deapsite
            {<point name="input.c.page1.deapsite" />}
            #END add-point
 
         #----<<deapunit>>----
         #Ctrlp:input.c.page1.deapunit
         ON ACTION controlp INFIELD deapunit
            #add-point:ON ACTION controlp INFIELD deapunit
            {<point name="input.c.page1.deapunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_deap_d[l_ac].* = g_deap_d_t.*
               CLOSE adet405_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_deap_d[l_ac].deapseq,-263,1)
               LET g_deap_d[l_ac].* = g_deap_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE deap_t SET (deapdocno,deapseq,deap001,deap002,deap003,deap004,deap005,deap006, 
                   deap007,deap008,deapsite,deapunit) = (g_deao_m.deaodocno,g_deap_d[l_ac].deapseq,g_deap_d[l_ac].deap001, 
                   g_deap_d[l_ac].deap002,g_deap_d[l_ac].deap003,g_deap_d[l_ac].deap004,g_deap_d[l_ac].deap005, 
                   g_deap_d[l_ac].deap006,g_deap_d[l_ac].deap007,g_deap_d[l_ac].deap008,g_deap_d[l_ac].deapsite, 
                   g_deap_d[l_ac].deapunit)
                WHERE deapent = g_enterprise AND deapdocno = g_deao_m.deaodocno 
 
                  AND deapseq = g_deap_d_t.deapseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("deap_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_deap_d[l_ac].* = g_deap_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("deap_t",SQLCA.sqlcode,1)
                     LET g_deap_d[l_ac].* = g_deap_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_deao_m.deaodocno
               LET gs_keys_bak[1] = g_deaodocno_t
               LET gs_keys[2] = g_deap_d[g_detail_idx].deapseq
               LET gs_keys_bak[2] = g_deap_d_t.deapseq
               CALL adet405_update_b('deap_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL adet405_unlock_b("deap_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_deap_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_deap_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="adet405.input.head" ver="4" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_deao_m.deaosite,g_deao_m.deaodocdt,g_deao_m.deaodocno,g_deao_m.deao001,g_deao_m.deaounit, 
          g_deao_m.deaostus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
         #---------------------------<  Master  >---------------------------
         #----<<deaosite>>----
         #此段落由子樣板a02產生
         AFTER FIELD deaosite
            
            #add-point:AFTER FIELD deaosite
            {<point name="input.a.deaosite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD deaosite
            #add-point:BEFORE FIELD deaosite
            {<point name="input.b.deaosite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE deaosite
            #add-point:ON CHANGE deaosite
            {<point name="input.g.deaosite" />}
            #END add-point
 
         #----<<deaosite_desc>>----
         #----<<deaodocdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deaodocdt
            #add-point:BEFORE FIELD deaodocdt
            {<point name="input.b.deaodocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deaodocdt
            
            #add-point:AFTER FIELD deaodocdt
            {<point name="input.a.deaodocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE deaodocdt
            #add-point:ON CHANGE deaodocdt
            {<point name="input.g.deaodocdt" />}
            #END add-point
 
         #----<<deaodocno>>----
         #此段落由子樣板a02產生
         AFTER FIELD deaodocno
            
            #add-point:AFTER FIELD deaodocno
            {<point name="input.a.deaodocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD deaodocno
            #add-point:BEFORE FIELD deaodocno
            {<point name="input.b.deaodocno" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE deaodocno
            #add-point:ON CHANGE deaodocno
            {<point name="input.g.deaodocno" />}
            #END add-point
 
         #----<<deao001>>----
         #此段落由子樣板a02產生
         AFTER FIELD deao001
            
            #add-point:AFTER FIELD deao001
            {<point name="input.a.deao001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD deao001
            #add-point:BEFORE FIELD deao001
            {<point name="input.b.deao001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE deao001
            #add-point:ON CHANGE deao001
            {<point name="input.g.deao001" />}
            #END add-point
 
         #----<<deao001_desc>>----
         #----<<deaounit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deaounit
            #add-point:BEFORE FIELD deaounit
            {<point name="input.b.deaounit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deaounit
            
            #add-point:AFTER FIELD deaounit
            {<point name="input.a.deaounit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE deaounit
            #add-point:ON CHANGE deaounit
            {<point name="input.g.deaounit" />}
            #END add-point
 
         #----<<deaostus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD deaostus
            #add-point:BEFORE FIELD deaostus
            {<point name="input.b.deaostus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deaostus
            
            #add-point:AFTER FIELD deaostus
            {<point name="input.a.deaostus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE deaostus
            #add-point:ON CHANGE deaostus
            {<point name="input.g.deaostus" />}
            #END add-point
 
         #----<<deaoownid>>----
         #----<<deaoownid_desc>>----
         #----<<deaoowndp>>----
         #----<<deaoowndp_desc>>----
         #----<<deaocrtid>>----
         #----<<deaocrtid_desc>>----
         #----<<deaocrtdp>>----
         #----<<deaocrtdp_desc>>----
         #----<<deaocrtdt>>----
         #----<<deaomodid>>----
         #----<<deaomodid_desc>>----
         #----<<deaomoddt>>----
         #----<<deaocnfid>>----
         #----<<deaocnfid_desc>>----
         #----<<deaocnfdt>>----
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<deaosite>>----
         #Ctrlp:input.c.deaosite
         ON ACTION controlp INFIELD deaosite
            #add-point:ON ACTION controlp INFIELD deaosite
            {<point name="input.c.deaosite" />}
            #END add-point
 
         #----<<deaosite_desc>>----
         #----<<deaodocdt>>----
         #Ctrlp:input.c.deaodocdt
         ON ACTION controlp INFIELD deaodocdt
            #add-point:ON ACTION controlp INFIELD deaodocdt
            {<point name="input.c.deaodocdt" />}
            #END add-point
 
         #----<<deaodocno>>----
         #Ctrlp:input.c.deaodocno
         ON ACTION controlp INFIELD deaodocno
            #add-point:ON ACTION controlp INFIELD deaodocno
            {<point name="input.c.deaodocno" />}
            #END add-point
 
         #----<<deao001>>----
         #Ctrlp:input.c.deao001
         ON ACTION controlp INFIELD deao001
            #add-point:ON ACTION controlp INFIELD deao001
            {<point name="input.c.deao001" />}
            #END add-point
 
         #----<<deao001_desc>>----
         #----<<deaounit>>----
         #Ctrlp:input.c.deaounit
         ON ACTION controlp INFIELD deaounit
            #add-point:ON ACTION controlp INFIELD deaounit
            {<point name="input.c.deaounit" />}
            #END add-point
 
         #----<<deaostus>>----
         #Ctrlp:input.c.deaostus
         ON ACTION controlp INFIELD deaostus
            #add-point:ON ACTION controlp INFIELD deaostus
            {<point name="input.c.deaostus" />}
            #END add-point
 
         #----<<deaoownid>>----
         #----<<deaoownid_desc>>----
         #----<<deaoowndp>>----
         #----<<deaoowndp_desc>>----
         #----<<deaocrtid>>----
         #----<<deaocrtid_desc>>----
         #----<<deaocrtdp>>----
         #----<<deaocrtdp_desc>>----
         #----<<deaocrtdt>>----
         #----<<deaomodid>>----
         #----<<deaomodid_desc>>----
         #----<<deaomoddt>>----
         #----<<deaocnfid>>----
         #----<<deaocnfid_desc>>----
         #----<<deaocnfdt>>----
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_deao_m.deaodocno             
 
 
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                   
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO deao_t (deaoent,deaosite,deaodocdt,deaodocno,deao001,deaounit,deaostus,deaoownid, 
                   deaoowndp,deaocrtid,deaocrtdp,deaocrtdt,deaocnfid,deaocnfdt)
               VALUES (g_enterprise,g_deao_m.deaosite,g_deao_m.deaodocdt,g_deao_m.deaodocno,g_deao_m.deao001, 
                   g_deao_m.deaounit,g_deao_m.deaostus,g_deao_m.deaoownid,g_deao_m.deaoowndp,g_deao_m.deaocrtid, 
                   g_deao_m.deaocrtdp,g_deao_m.deaocrtdt,g_deao_m.deaocnfid,g_deao_m.deaocnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_deao_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL adet405_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE deao_t SET (deaosite,deaodocdt,deaodocno,deao001,deaounit,deaostus,deaoownid,deaoowndp, 
                   deaocrtid,deaocrtdp,deaocrtdt,deaocnfid,deaocnfdt) = (g_deao_m.deaosite,g_deao_m.deaodocdt, 
                   g_deao_m.deaodocno,g_deao_m.deao001,g_deao_m.deaounit,g_deao_m.deaostus,g_deao_m.deaoownid, 
                   g_deao_m.deaoowndp,g_deao_m.deaocrtid,g_deao_m.deaocrtdp,g_deao_m.deaocrtdt,g_deao_m.deaocnfid, 
                   g_deao_m.deaocnfdt)
                WHERE deaoent = g_enterprise AND deaodocno = g_deaodocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("deao_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               CALL s_transaction_end('Y','0')
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_deaodocno_t = g_deao_m.deaodocno
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="adet405.input.other" ver="2" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD deaodocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD deapseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="adet405.insert" ver="2" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION adet405_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_deap_d.clear()   
 
 
   INITIALIZE g_deao_m.* LIKE deao_t.*             #DEFAULT 設定
   
   LET g_deaodocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_deao_m.deaoownid = g_user
      LET g_deao_m.deaoowndp = g_dept
      LET g_deao_m.deaocrtid = g_user
      LET g_deao_m.deaocrtdp = g_dept 
      LET g_deao_m.deaocrtdt = cl_get_current()
      LET g_deao_m.deaomodid = ""
      LET g_deao_m.deaomoddt = ""
      LET g_deao_m.deaostus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL adet405_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_deao_m.* = g_deao_m_t.*
         CALL adet405_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_deap_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1    
 
   LET g_deaodocno_t = g_deao_m.deaodocno
 
   
   LET g_wc = g_wc,  
              " OR ( deaoent = '" ||g_enterprise|| "' AND",
              " deaodocno = '", g_deao_m.deaodocno CLIPPED, "' "
 
              , ") "
   
   CLOSE adet405_cl
   
END FUNCTION
]]>
</section>
  <section id="adet405.insert_b" ver="2" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION adet405_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO deap_t
                  (deapent,
                   deapdocno,
                   deapseq
                   ,deap001,deap002,deap003,deap004,deap005,deap006,deap007,deap008,deapsite,deapunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_deap_d[g_detail_idx].deap001,g_deap_d[g_detail_idx].deap002,g_deap_d[g_detail_idx].deap003, 
                       g_deap_d[g_detail_idx].deap004,g_deap_d[g_detail_idx].deap005,g_deap_d[g_detail_idx].deap006, 
                       g_deap_d[g_detail_idx].deap007,g_deap_d[g_detail_idx].deap008,g_deap_d[g_detail_idx].deapsite, 
                       g_deap_d[g_detail_idx].deapunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("deap_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="adet405.lock_b" ver="3" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION adet405_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL adet405_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "deap_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN adet405_bcl USING g_enterprise,
                                       g_deao_m.deaodocno,g_deap_d[g_detail_idx].deapseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("adet405_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="adet405.main" ver="6" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ade","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT deaosite,'',deaodocdt,deaodocno,deao001,'',deaounit,deaostus,deaoownid, 
       '',deaoowndp,'',deaocrtid,'',deaocrtdp,'',deaocrtdt,deaomodid,'',deaomoddt,deaocnfid,'',deaocnfdt  
       FROM deao_t WHERE deaoent= ? AND deaodocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE adet405_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE deaosite,deaodocdt,deaodocno,deao001,deaounit,deaostus,deaoownid,deaoowndp, 
       deaocrtid,deaocrtdp,deaocrtdt,deaomodid,deaomoddt,deaocnfid,deaocnfdt",
               " FROM deao_t",
               " WHERE deaoent = '" ||g_enterprise|| "' AND deaodocno = ?"
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE adet405_master_referesh FROM g_sql
 
 
 
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_adet405 WITH FORM cl_ap_formpath("ade",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL adet405_init()   
 
      #進入選單 Menu (="N")
      CALL adet405_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_adet405
      
   END IF 
   
   CLOSE adet405_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="adet405.modify" ver="7" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION adet405_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_deao_m.deaodocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE adet405_master_referesh USING g_deao_m.deaodocno INTO g_deao_m.deaosite,g_deao_m.deaodocdt, 
       g_deao_m.deaodocno,g_deao_m.deao001,g_deao_m.deaounit,g_deao_m.deaostus,g_deao_m.deaoownid,g_deao_m.deaoowndp, 
       g_deao_m.deaocrtid,g_deao_m.deaocrtdp,g_deao_m.deaocrtdt,g_deao_m.deaomodid,g_deao_m.deaomoddt, 
       g_deao_m.deaocnfid,g_deao_m.deaocnfdt
 
   ERROR ""
  
   LET g_deaodocno_t = g_deao_m.deaodocno
 
   CALL s_transaction_begin()
   
   OPEN adet405_cl USING g_enterprise,g_deao_m.deaodocno
 
   IF STATUS THEN
      CALL cl_err("OPEN adet405_cl:", STATUS, 1)
      CLOSE adet405_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH adet405_cl INTO g_deao_m.deaosite,g_deao_m.deaosite_desc,g_deao_m.deaodocdt,g_deao_m.deaodocno, 
       g_deao_m.deao001,g_deao_m.deao001_desc,g_deao_m.deaounit,g_deao_m.deaostus,g_deao_m.deaoownid, 
       g_deao_m.deaoownid_desc,g_deao_m.deaoowndp,g_deao_m.deaoowndp_desc,g_deao_m.deaocrtid,g_deao_m.deaocrtid_desc, 
       g_deao_m.deaocrtdp,g_deao_m.deaocrtdp_desc,g_deao_m.deaocrtdt,g_deao_m.deaomodid,g_deao_m.deaomodid_desc, 
       g_deao_m.deaomoddt,g_deao_m.deaocnfid,g_deao_m.deaocnfid_desc,g_deao_m.deaocnfdt
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_deao_m.deaodocno,SQLCA.sqlcode,0)
      CLOSE adet405_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL adet405_show()
   WHILE TRUE
      LET g_deaodocno_t = g_deao_m.deaodocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_deao_m.deaomodid = g_user 
LET g_deao_m.deaomoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL adet405_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_deao_m.* = g_deao_m_t.*
         CALL adet405_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
     
      #若有modid跟moddt則進行update
      UPDATE deao_t SET (deaomodid,deaomoddt) = (g_deao_m.deaomodid,g_deao_m.deaomoddt)
       WHERE deaoent = g_enterprise AND deaodocno = g_deaodocno_t
 
 
      #若單頭key欄位有變更
      IF g_deao_m.deaodocno != g_deaodocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE deap_t SET deapdocno = g_deao_m.deaodocno
 
          WHERE deapent = g_enterprise AND deapdocno = g_deaodocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("deap_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("deap_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_deao_m.deaodocno,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE adet405_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_deao_m.deaodocno,'U')
 
END FUNCTION   
]]>
</section>
  <section id="adet405.other_dialog" ver="1" status="" src="s">
<![CDATA[ 
]]>
</section>
  <section id="adet405.other_function" ver="2" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="adet405.query" ver="3" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION adet405_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_deap_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL adet405_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL adet405_browser_fill("")
      CALL adet405_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL adet405_filter_show('deaosite')
   CALL adet405_filter_show('deaodocdt')
   CALL adet405_filter_show('deaodocno')
   CALL adet405_filter_show('deao001')
   CALL adet405_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL adet405_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="adet405.reproduce" ver="4" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION adet405_reproduce()
   DEFINE l_newno     LIKE deao_t.deaodocno 
   DEFINE l_oldno     LIKE deao_t.deaodocno 
 
   DEFINE l_master    RECORD LIKE deao_t.*
   DEFINE l_detail    RECORD LIKE deap_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_deao_m.deaodocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_deaodocno_t = g_deao_m.deaodocno
 
    
   LET g_deao_m.deaodocno = ""
 
    
   CALL adet405_set_entry('a')
   CALL adet405_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_deao_m.deaoownid = g_user
      LET g_deao_m.deaoowndp = g_dept
      LET g_deao_m.deaocrtid = g_user
      LET g_deao_m.deaocrtdp = g_dept 
      LET g_deao_m.deaocrtdt = cl_get_current()
      LET g_deao_m.deaomodid = ""
      LET g_deao_m.deaomoddt = ""
      LET g_deao_m.deaostus = "N"
 
 
  
   CALL s_transaction_begin()
 
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL adet405_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1    
 
   LET g_wc = g_wc,  
              " OR (",
              " deaodocno = '", g_deao_m.deaodocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="adet405.set_entry" ver="2" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION adet405_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("deaodocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="adet405.set_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION adet405_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="adet405.set_no_entry" ver="3" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION adet405_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("deaodocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="adet405.set_no_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION adet405_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="adet405.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION adet405_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_deao_m.deaodocno
   LET g_pk_array[1].column = 'deaodocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="adet405.show" ver="4" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION adet405_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_deao_m_t.* = g_deao_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL adet405_b_fill() #單身填充
      CALL adet405_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_deao_m.deaoownid_desc = cl_get_username(g_deao_m.deaoownid)
      #LET g_deao_m.deaoowndp_desc = cl_get_deptname(g_deao_m.deaoowndp)
      #LET g_deao_m.deaocrtid_desc = cl_get_username(g_deao_m.deaocrtid)
      #LET g_deao_m.deaocrtdp_desc = cl_get_deptname(g_deao_m.deaocrtdp)
      #LET g_deao_m.deaomodid_desc = cl_get_username(g_deao_m.deaomodid)
      #LET g_deao_m.deaocnfid_desc = cl_get_deptname(g_deao_m.deaocnfid)
      ##LET g_deao_m.deaopstid_desc = cl_get_deptname(g_deao_m.deaopstid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL adet405_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_deao_m.deaosite,g_deao_m.deaosite_desc,g_deao_m.deaodocdt,g_deao_m.deaodocno,g_deao_m.deao001, 
       g_deao_m.deao001_desc,g_deao_m.deaounit,g_deao_m.deaostus,g_deao_m.deaoownid,g_deao_m.deaoownid_desc, 
       g_deao_m.deaoowndp,g_deao_m.deaoowndp_desc,g_deao_m.deaocrtid,g_deao_m.deaocrtid_desc,g_deao_m.deaocrtdp, 
       g_deao_m.deaocrtdp_desc,g_deao_m.deaocrtdt,g_deao_m.deaomodid,g_deao_m.deaomodid_desc,g_deao_m.deaomoddt, 
       g_deao_m.deaocnfid,g_deao_m.deaocnfid_desc,g_deao_m.deaocnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_deao_m.deaostus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "V"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/verify.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_deap_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL adet405_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="adet405.signature" ver="3" status="" src="s">
<![CDATA[   
#此段落由子樣板a39產生
#+ BPM提交
PRIVATE FUNCTION adet405_send()
 
   #add-point:send段define
   {<point name="send.define"/>}
   #end add-point 
 
   IF g_deao_m.deaodocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #重新取得與顯示完整單據資料(最新單據資料)
   EXECUTE adet405_master_referesh USING g_deao_m.deaodocno INTO g_deao_m.deaosite,g_deao_m.deaodocdt, 
       g_deao_m.deaodocno,g_deao_m.deao001,g_deao_m.deaounit,g_deao_m.deaostus,g_deao_m.deaoownid,g_deao_m.deaoowndp, 
       g_deao_m.deaocrtid,g_deao_m.deaocrtdp,g_deao_m.deaocrtdt,g_deao_m.deaomodid,g_deao_m.deaomoddt, 
       g_deao_m.deaocnfid,g_deao_m.deaocnfdt
 
   ERROR ""
   CALL s_transaction_begin()
 
   OPEN adet405_cl USING g_enterprise,g_deao_m.deaodocno
 
   IF STATUS THEN
      CALL cl_err("OPEN adet405_cl:", STATUS, 1)
      CLOSE adet405_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH adet405_cl INTO g_deao_m.deaosite,g_deao_m.deaosite_desc,g_deao_m.deaodocdt,g_deao_m.deaodocno, 
       g_deao_m.deao001,g_deao_m.deao001_desc,g_deao_m.deaounit,g_deao_m.deaostus,g_deao_m.deaoownid, 
       g_deao_m.deaoownid_desc,g_deao_m.deaoowndp,g_deao_m.deaoowndp_desc,g_deao_m.deaocrtid,g_deao_m.deaocrtid_desc, 
       g_deao_m.deaocrtdp,g_deao_m.deaocrtdp_desc,g_deao_m.deaocrtdt,g_deao_m.deaomodid,g_deao_m.deaomodid_desc, 
       g_deao_m.deaomoddt,g_deao_m.deaocnfid,g_deao_m.deaocnfid_desc,g_deao_m.deaocnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_deao_m.deaodocno,SQLCA.sqlcode,0)
      CLOSE adet405_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL adet405_show()
   CALL adet405_set_pk_array()
 
   #add-point: 提交前的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_deao_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_deap_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      CLOSE adet405_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
   
   #完成狀態更新
   CLOSE adet405_cl
   CALL s_transaction_end('Y','0')
             
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL adet405_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_row].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL adet405_ui_headershow()
   CALL adet405_ui_detailshow()
 
   RETURN TRUE
 
END FUNCTION
 
 
 
#此段落由子樣板a40產生
#+ BPM抽單
PRIVATE FUNCTION adet405_draw_out()
 
   #add-point:draw段define
   {<point name="draw.define"/>}
   #end add-point
 
   #檢查資料是否存在
   IF g_deao_m.deaodocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #LOCK主檔資料
   CALL s_transaction_begin()
 
   #進行BPM抽單功能
   OPEN adet405_cl USING g_enterprise,g_deao_m.deaodocno
 
   IF STATUS THEN
      CALL cl_err("OPEN adet405_cl:", STATUS, 1)
      CLOSE adet405_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH adet405_cl INTO g_deao_m.deaosite,g_deao_m.deaosite_desc,g_deao_m.deaodocdt,g_deao_m.deaodocno, 
       g_deao_m.deao001,g_deao_m.deao001_desc,g_deao_m.deaounit,g_deao_m.deaostus,g_deao_m.deaoownid, 
       g_deao_m.deaoownid_desc,g_deao_m.deaoowndp,g_deao_m.deaoowndp_desc,g_deao_m.deaocrtid,g_deao_m.deaocrtid_desc, 
       g_deao_m.deaocrtdp,g_deao_m.deaocrtdp_desc,g_deao_m.deaocrtdt,g_deao_m.deaomodid,g_deao_m.deaomodid_desc, 
       g_deao_m.deaomoddt,g_deao_m.deaocnfid,g_deao_m.deaocnfid_desc,g_deao_m.deaocnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_deao_m.deaodocno,SQLCA.sqlcode,0)
      CLOSE adet405_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      CLOSE adet405_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF    
 
   #完成狀態更新
   CLOSE adet405_cl
   CALL s_transaction_end('Y','0')
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL adet405_ui_headershow()  
   CALL adet405_ui_detailshow()
 
   RETURN TRUE
END FUNCTION
 
 
 
]]>
</section>
  <section id="adet405.state_change" ver="6" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION adet405_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_deao_m.deaodocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_deao_m.deaostus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "V"
               HIDE OPTION "verify"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION verify
         LET lc_state = "V"
         #add-point:action控制
         {<point name="statechange.verify"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION approved
         LET lc_state = "A"
         #add-point:action控制
         {<point name="statechange.approved"/>}
         #end add-point
         EXIT MENU
      #ON ACTION withdraw
      #   LET lc_state = "D"
      #   #add-point:action控制
      #   {<point name="statechange.withdraw"/>}
      #   #end add-point
      #   EXIT MENU
      ON ACTION rejection
         LET lc_state = "R"
         #add-point:action控制
         {<point name="statechange.rejection"/>}
         #end add-point
         EXIT MENU
      #ON ACTION signing
      #   LET lc_state = "W"
      #   #add-point:action控制
      #   {<point name="statechange.signing"/>}
      #   #end add-point
      #   EXIT MENU
      
      #此段落由子樣板a36產生
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT adet405_send() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''  #因為_send()已有執行update動作
         EXIT MENU
 
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT adet405_draw_out() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''  #因為_draw_out()已有執行update動作
         EXIT MENU
 
 
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "V"
      AND lc_state <> "X"
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE deao_t SET deaostus = lc_state 
    WHERE deaoent = g_enterprise AND deaodocno = g_deao_m.deaodocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "V"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/verify.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
      LET g_deao_m.deaostus = lc_state
      DISPLAY BY NAME g_deao_m.deaostus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="adet405.ui_browser_refresh" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION adet405_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_deaodocno = g_deao_m.deaodocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="adet405.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION adet405_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="adet405.ui_dialog" ver="8" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION adet405_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL adet405_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL adet405_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_deaodocno = g_deaodocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL adet405_fetch('') # reload data
               LET l_ac = 1
               CALL adet405_ui_detailshow() #Setting the current row 
      
               CALL adet405_idx_chk()
               #NEXT FIELD deapseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_deap_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL adet405_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL adet405_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL adet405_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL adet405_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL adet405_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
            
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD deapseq
            END IF
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL adet405_statechange()
            EXIT DIALOG
      
         #此段落由子樣板a32產生
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
 
 
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL adet405_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL adet405_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL adet405_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL adet405_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL adet405_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet405_idx_chk()
            
         ON ACTION previous
            CALL adet405_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet405_idx_chk()
            
         ON ACTION jump
            CALL adet405_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet405_idx_chk()
            
         ON ACTION next
            CALL adet405_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet405_idx_chk()
            
         ON ACTION last
            CALL adet405_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet405_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL adet405_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL adet405_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL adet405_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL adet405_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL adet405_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL adet405_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL adet405_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL adet405_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL adet405_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_deao_m.deaodocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="adet405.ui_headershow" ver="2" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION adet405_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_deao_m.deaodocno = g_browser[g_current_idx].b_deaodocno   
 
   EXECUTE adet405_master_referesh USING g_deao_m.deaodocno INTO g_deao_m.deaosite,g_deao_m.deaodocdt, 
       g_deao_m.deaodocno,g_deao_m.deao001,g_deao_m.deaounit,g_deao_m.deaostus,g_deao_m.deaoownid,g_deao_m.deaoowndp, 
       g_deao_m.deaocrtid,g_deao_m.deaocrtdp,g_deao_m.deaocrtdt,g_deao_m.deaomodid,g_deao_m.deaomoddt, 
       g_deao_m.deaocnfid,g_deao_m.deaocnfdt
   CALL adet405_show()
   
END FUNCTION
]]>
</section>
  <section id="adet405.unlock_b" ver="2" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION adet405_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adet405_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="adet405.update_b" ver="2" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION adet405_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "deap_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE deap_t 
         SET (deapdocno,
              deapseq
              ,deap001,deap002,deap003,deap004,deap005,deap006,deap007,deap008,deapsite,deapunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_deap_d[g_detail_idx].deap001,g_deap_d[g_detail_idx].deap002,g_deap_d[g_detail_idx].deap003, 
                  g_deap_d[g_detail_idx].deap004,g_deap_d[g_detail_idx].deap005,g_deap_d[g_detail_idx].deap006, 
                  g_deap_d[g_detail_idx].deap007,g_deap_d[g_detail_idx].deap008,g_deap_d[g_detail_idx].deapsite, 
                  g_deap_d[g_detail_idx].deapunit) 
         WHERE deapent = g_enterprise AND deapdocno = ps_keys_bak[1] AND deapseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("deap_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("deap_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>