<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="adet404" std_prog="adet404" erpver="1.0" module="ADE" ver="1" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.adet404_deam001_ref" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 保全編碼(deam001)帶出保全名稱
# Memo...........:
# Usage..........: CALL adet404_deam001_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/02/12 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION adet404_deam001_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_deam_m.deam001
   CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_deam_m.deam001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_deam_m.deam001_desc
            
END FUNCTION]]>
  </point>
  <point name="function.adet404_deamsite_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 存繳營運組織(deamsite)帶出營運組織名稱
# Memo...........:
# Usage..........: CALL adet404_deamsite_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/02/12 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION adet404_deamsite_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_deam_m.deamsite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_deam_m.deamsite_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_deam_m.deamsite_desc

END FUNCTION]]>
  </point>
  <point name="function.adet404_dean003_ref" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 代收款別(dean003)帶出款別名稱
# Memo...........:
# Usage..........: CALL adet404_dean003_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/02/12 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION adet404_dean003_ref()
   SELECT ooie002 INTO g_dean_d[l_ac].dean006
     FROM ooia_t,ooie_t
    WHERE ooiaent = ooieent
      AND ooia001 = ooie001
      AND ooia002 = g_dean_d[l_ac].dean002
      AND ooia001 = g_dean_d[l_ac].dean003
      AND ooiaent = g_enterprise
      AND ooiesite = g_deam_m.deamsite

   IF NOT cl_null(g_dean_d[l_ac].dean006) THEN
      CALL adet404_dean006_ref()
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_dean_d[l_ac].dean003
   CALL ap_ref_array2(g_ref_fields,"SELECT ooial003 FROM ooial_t WHERE ooialent='"||g_enterprise||"' AND ooial001=? AND ooial002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_dean_d[l_ac].dean003_desc = '', g_rtn_fields[1] , ''
END FUNCTION]]>
  </point>
  <point name="function.adet404_dean006_ref" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 幣別(dean006)帶出幣別名稱
# Memo...........:
# Usage..........: CALL adent404_dean006_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/02/12 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION adet404_dean006_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_dean_d[l_ac].dean006
   CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_dean_d[l_ac].dean006_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_dean_d[l_ac].dean006_desc
END FUNCTION]]>
  </point>
  <point name="function.adet404_dean004_mman_ref" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 卡種編號(dean004)帶出卡種名稱
# Memo...........:
# Usage..........: CALL adet404_dean004_mman_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/02/12 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION adet404_dean004_mman_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_dean_d[l_ac].dean004
   CALL ap_ref_array2(g_ref_fields,"SELECT mmanl003 FROM mmanl_t WHERE mmanlent='"||g_enterprise||"' AND mmanl001=? AND mmanl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_dean_d[l_ac].dean004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_dean_d[l_ac].dean004_desc
END FUNCTION]]>
  </point>
  <point name="function.adet404_dean003_init" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 預帶代收款別(dean003)
# Memo...........:
# Usage..........: CALL adet404_dean003_init()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/02/12 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION adet404_dean003_init()
   LET g_dean_d[l_ac].dean003 = ''
   LET g_dean_d[l_ac].dean003_desc = ''
   LET g_dean_d[l_ac].dean006 = ''
   LET g_dean_d[l_ac].dean006_desc = ''
   SELECT ooie001 INTO g_dean_d[l_ac].dean003
     FROM ooie_t
    WHERE ooieent = g_enterprise
      AND ooiesite = g_deam_m.deamsite
      AND ooie003 = g_dean_d[l_ac].dean002
      AND ooie014 = 'Y'
   IF NOT cl_null(g_dean_d[l_ac].dean003) THEN
      CALL adet404_dean003_ref()
   END IF
END FUNCTION]]>
  </point>
  <point name="function.adet404_dean004_gcaf_ref" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 券種編號(dean004)帶出券種名稱
# Memo...........:
# Usage..........: CALL adet404_dean004_gcaf_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/02/12 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION adet404_dean004_gcaf_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_dean_d[l_ac].dean004
   CALL ap_ref_array2(g_ref_fields,"SELECT gcafl003 FROM gcafl_t WHERE gcaflent='"||g_enterprise||"' AND gcafl001=? AND gcafl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_dean_d[l_ac].dean004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_dean_d[l_ac].dean004_desc
END FUNCTION]]>
  </point>
  <point name="function.adet404_dean004_ref" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 當款別編號(dean002)=40有價券/禮券類型時,
#                  預設券種基本資料檔裡的券面額編號(gcaf012)
# Memo...........:
# Usage..........: CALL adet404_dean004_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/02/12 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION adet404_dean004_ref()
DEFINE l_n   LIKE type_t.num5

   IF g_dean_d[l_ac].dean004 != g_dean_d_o.dean004 OR cl_null(g_dean_d_o.dean004) THEN
      SELECT gcaf012 INTO g_dean_d[l_ac].dean005
        FROM gcaf_t
       WHERE gcafent = g_enterprise
         AND gcaf001 = g_dean_d[l_ac].dean004
      
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM oocq_t
       WHERE oocq001 = '2071'
         AND oocq002 = g_dean_d[l_ac].dean005
         AND oocq004 = g_dean_d[l_ac].dean006
         AND oocqstus = 'Y'
      IF l_n = 0 THEN
         LET g_dean_d[l_ac].dean005 = ''
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="function.adet404_dean002_affect" order="9" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 當款別分類(dean002)改變 可輸入的欄位會有變動
# Memo...........:
# Usage..........: CALL adet404_dean002_affect()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/02/13 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION adet404_dean002_affect()
   CASE g_dean_d[l_ac].dean002
      #款別分類='10'現金類型時
      #券種編號(dean004)、代收金額(dean008)、支票號碼(dean009)為空
      #券面額編號(dean005)欄位值須清空
      WHEN '10'
         LET g_dean_d[l_ac].dean004 = ''
         LET g_dean_d[l_ac].dean004_desc = ''
         LET g_dean_d[l_ac].dean005 = ''
         LET g_dean_d[l_ac].dean008 = ''
         LET g_dean_d[l_ac].dean009 = ''
      
      #款別分類='30'票據類型時
      #券種編號(dean004)、券面額編號(dean005)為空、數量(dean007)=1
      WHEN '30'
         LET g_dean_d[l_ac].dean004 = ''
         LET g_dean_d[l_ac].dean004_desc = ''
         LET g_dean_d[l_ac].dean005 = ''
         LET g_dean_d[l_ac].dean007 = 1
         
      #款別分類='40'券種類型時，代收金額(dean008)、支票號碼(dean009)為空
      #券面額編號(dean005)欄位值須清空
      WHEN '40'
         LET g_dean_d[l_ac].dean004 = ''
         LET g_dean_d[l_ac].dean004_desc = ''
         LET g_dean_d[l_ac].dean005 = ''
         LET g_dean_d[l_ac].dean008 = ''
         LET g_dean_d[l_ac].dean009 = ''
         
      #款別分類='50'卡種類型時
      #券面額編號(dean005)、代收金額(dean008)、支票號碼(dean009)為空
      WHEN '50'
         LET g_dean_d[l_ac].dean004 = ''
         LET g_dean_d[l_ac].dean004_desc = ''
         LET g_dean_d[l_ac].dean005 = ''
         LET g_dean_d[l_ac].dean008 = ''
         LET g_dean_d[l_ac].dean009 = ''
   END CASE
END FUNCTION]]>
  </point>
  <point name="function.adet404_dean003_mman_chk" order="10" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 當款別類型(dean002)=50銀行卡/信用卡 檢查在ammt320裡的對應款別(mman058)是否存在一筆資料
# Memo...........:
# Usage..........: adet404_dean003_mman_chk()
#                  RETURNING r_success
# Input parameter: 無
# Return code....: True/False
# Date & Author..: 2014/02/18 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION adet404_dean003_mman_chk()
DEFINE l_n         LIKE type_t.num5

   LET l_n = 0
   SELECT COUNT(*) INTO l_n
     FROM mman_t
    WHERE mmanent = g_enterprise
      AND mman058 = g_dean_d[l_ac].dean003
   IF l_n = 0 OR cl_null(l_n) THEN
      CALL cl_err('','ade-00022',1)
      RETURN FALSE
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.adet404_dean007_count" order="11" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 當券面額編號(dean005)和代收數量(dean007)有值
#                  自動算出金額(dean008)
# Memo...........: 當款別編號(dean002)=10現金或40券種時
# Usage..........: CALL adet404_dean007_count()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/02/13 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION adet404_dean007_count()
DEFINE l_oocq009         LIKE oocq_t.oocq009

   LET l_oocq009 = ''
   IF g_dean_d[l_ac].dean002 = '10' OR g_dean_d[l_ac].dean002 = '40' THEN
      IF NOT cl_null(g_dean_d[l_ac].dean005) AND NOT cl_null(g_dean_d[l_ac].dean007) THEN
         SELECT oocq009 INTO l_oocq009
           FROM oocq_t
          WHERE oocqent = g_enterprise
            AND oocq001 = '2071'
            AND oocq002 = g_dean_d[l_ac].dean005
            AND oocq019 = g_dean_d[l_ac].dean002
         LET g_dean_d[l_ac].dean008 = l_oocq009 * g_dean_d[l_ac].dean007
      END IF
   END IF

END FUNCTION]]>
  </point>
  <point name="function.adet404_dean003_gcaf_chk" order="12" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 當款別類型(dean002)=40券種 檢查agcm300裡的對應款別(gcaf031)是否存在一筆資料
# Memo...........:
# Usage..........: adet404_dean003_gcaf_chk()
#                  RETURNING r_success
# Input parameter: 無
# Return code....: True/False
# Date & Author..: 2014/02/18 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION adet404_dean003_gcaf_chk()
DEFINE l_n         LIKE type_t.num5

   LET l_n = 0
   SELECT COUNT(*) INTO l_n
     FROM gcaf_t
    WHERE gcafent = g_enterprise
      AND gcaf031 = g_dean_d[l_ac].dean003
   IF l_n = 0 OR cl_null(l_n) THEN
      CALL cl_err('','ade-00021',1)
      RETURN FALSE
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="construct.c.deam001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deam001  #顯示到畫面上

            NEXT FIELD deam001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.deamcnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deamcnfid  #顯示到畫面上

            NEXT FIELD deamcnfid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.deamcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deamcrtdp  #顯示到畫面上

            NEXT FIELD deamcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.deamcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deamcrtid  #顯示到畫面上

            NEXT FIELD deamcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.deamdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_deamdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deamdocno  #顯示到畫面上

            NEXT FIELD deamdocno                     #返回原欄位

]]>
  </point>
  <point name="construct.c.deammodid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deammodid  #顯示到畫面上

            NEXT FIELD deammodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.deamowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deamowndp  #顯示到畫面上

            NEXT FIELD deamowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.deamownid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deamownid  #顯示到畫面上

            NEXT FIELD deamownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.deamsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_site
			LET g_qryparam.arg2 = '2'
            CALL q_ooed004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO deamsite  #顯示到畫面上

            NEXT FIELD deamsite                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.dean003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooie001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dean003  #顯示到畫面上

            NEXT FIELD dean003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.dean004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.c.page1.dean005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2071'           #應用分類
            CALL q_oocq002_5()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO dean005  #顯示到畫面上
            NEXT FIELD dean005                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.dean006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_aooi001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dean006  #顯示到畫面上

            NEXT FIELD dean006                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.dean009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_dean009()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dean009  #顯示到畫面上

            NEXT FIELD dean009                     #返回原欄位

]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      IF NOT s_aooi200_del_docno(g_deam_m.deamdocno,g_deam_m.deamdocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   #IF g_deam_m.deamstus = 'N' THEN
   IF g_deam_m.deamstus MATCHES "[NDR]" THEN
      CALL cl_set_act_visible("modify,delete,modify_detail",TRUE)
   ELSE
      CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
   END IF
]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_dean_d_o            type_g_dean_d]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc_part('dean002','8310','10,30,40,50')
   LET g_errshow = 1               #讓錯誤訊息彈跳出來]]>
  </point>
  <point name="input.a.deam001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_deam_m.deam001) THEN 
               #此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_deam_m.deam001

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pmaa001_3") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            LET g_deam_m.deam001_desc = ' '
            DISPLAY BY NAME g_deam_m.deam001_desc
            IF NOT cl_null(g_deam_m.deam001) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_deam_m.deam001 != g_deam_m_t.deam001 OR g_deam_m_t.deam001 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_deam_m.deam001
                  IF NOT cl_chk_exist("v_pmaa001_3") THEN
                     LET g_deam_m.deam001 = g_deam_m_t.deam001
                     CALL adet404_deam001_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL adet404_deam001_ref()
]]>
  </point>
  <point name="input.a.deamdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF p_cmd = 'a' AND NOT cl_null(g_deam_m.deamdocno) THEN
               IF NOT s_aooi200_chk_slip(g_site,'',g_deam_m.deamdocno,g_prog) THEN
                  LET g_deam_m.deamdocno = g_deam_m_t.deamdocno
                  NEXT FIELD CURRENT
               END IF
            END IF 
]]>
  </point>
  <point name="input.a.deamsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #存繳營運據點 deamsite
            LET g_deam_m.deamsite_desc = ' '
            DISPLAY BY NAME g_deam_m.deamsite_desc
            IF NOT cl_null(g_deam_m.deamsite) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_deam_m.deamsite != g_deam_m_t.deamsite OR g_deam_m_t.deamsite IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_deam_m.deamsite
                  LET g_chkparam.arg2 = '2'
                  LET g_chkparam.arg3 = g_site
                  IF NOT cl_chk_exist("v_ooed004") THEN
                     LET g_deam_m.deamsite = g_deam_m_t.deamsite
                     CALL adet404_deamsite_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL adet404_deamsite_ref()
]]>
  </point>
  <point name="input.a.page1.dean001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            
            #營業日期(dean001)不可以大於單頭票據日期(deamdocdt)
            IF NOT cl_null(g_dean_d[l_ac].dean001) THEN
               IF g_dean_d[l_ac].dean001 > g_deam_m.deamdocdt THEN
                  LET g_dean_d[l_ac].dean001 = g_dean_d_t.dean001
                  CALL cl_err("","ade-00011",1)
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.dean002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_dean_d[l_ac].dean002) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND 
                  (g_dean_d[l_ac].dean002 != g_dean_d_o.dean002 OR 
                  g_dean_d_o.dean002 IS NULL )) THEN
                  CALL adet404_dean003_init()
                  
                  #當款別分類改變時，可輸入的欄位不相同，不可輸入的欄位需清空或給予預設值
                  CALL adet404_dean002_affect()
               END IF
            END IF
            
            LET g_dean_d_o.dean002 = g_dean_d[l_ac].dean002
            CALL adet404_set_entry_b(p_cmd)
            CALL adet404_set_no_entry_b(p_cmd)]]>
  </point>
  <point name="input.a.page1.dean003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_dean_d[l_ac].dean003_desc = ' '
            IF NOT cl_null(g_dean_d[l_ac].dean003) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_dean_d[l_ac].dean003!= g_dean_d_o.dean003 OR g_dean_d_o.dean003 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_dean_d[l_ac].dean003
                  LET g_chkparam.arg2 = g_dean_d[l_ac].dean002
                  LET g_chkparam.arg3 = g_deam_m.deamsite
                  LET g_chkparam.err_str[1] = "sub-00354|",g_dean_d[l_ac].dean002
                  LET g_chkparam.err_str[2] = "sub-00355|",g_dean_d[l_ac].dean002
                  IF NOT cl_chk_exist("v_ooie001_1") THEN
                     LET g_dean_d[l_ac].dean003 = g_dean_d_o.dean003
                     CALL adet404_dean003_ref()
                     NEXT FIELD CURRENT
                  END IF
                  
                  #當款別編號=40有價券/禮券類型
                  IF g_dean_d[l_ac].dean002 = '40' THEN
                     IF NOT adet404_dean003_gcaf_chk() THEN
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                  
                  #當款別編號=50銀行卡/信用卡
#                  IF g_dean_d[l_ac].dean002 = '50' THEN
#                     IF NOT adet404_dean003_mman_chk() THEN
#                        NEXT FIELD CURRENT
#                     END IF
#                  END IF
               END IF
            END IF
            CALL adet404_dean003_ref()
            #當款別編號=40有價券/禮券類型
            IF g_dean_d[l_ac].dean002 = '40' THEN
               CALL adet404_dean004_gcaf_ref()
               CALL adet404_dean004_ref()
            END IF
#            #當款別編號=50銀行卡/信用卡
#            IF g_dean_d[l_ac].dean002 = '50' THEN
#               CALL adet404_dean004_mman_ref()
#            END IF
            LET g_dean_d_o.dean003 = g_dean_d[l_ac].dean003
            LET g_dean_d_o.dean004 = g_dean_d[l_ac].dean004
            LET g_dean_d_o.dean005 = g_dean_d[l_ac].dean005]]>
  </point>
  <point name="input.a.page1.dean004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_dean_d[l_ac].dean004_desc = ' '
            IF NOT cl_null(g_dean_d[l_ac].dean004) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_dean_d[l_ac].dean004 != g_dean_d_o.dean004 OR g_dean_d_o.dean004 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_dean_d[l_ac].dean004
                  LET g_chkparam.arg2 = g_dean_d[l_ac].dean003
                  #當款別編號=40有價券/禮券類型
                  IF g_dean_d[l_ac].dean002 = '40' THEN
                     IF NOT cl_chk_exist("v_gcaf001_1") THEN
                        LET g_dean_d[l_ac].dean004 = g_dean_d_o.dean004
                        CALL adet404_dean004_gcaf_ref()
                        NEXT FIELD CURRENT
                     END IF
                     
                     #券面額編號(dean005)必須存在券種基本資料檔-發行面額設定(g_car_t)裡
                     IF NOT cl_null(g_dean_d[l_ac].dean004) AND NOT cl_null(g_dean_d[l_ac].dean005) THEN
                        INITIALIZE g_chkparam.* TO NULL
                        LET g_chkparam.arg1 = g_dean_d[l_ac].dean004
                        LET g_chkparam.arg2 = g_dean_d[l_ac].dean005
                        IF NOT cl_chk_exist("v_gcar002") THEN
                           LET g_dean_d[l_ac].dean005 = g_dean_d_o.dean005
                           NEXT FIELD CURRENT
                        END IF
                     END IF
                     
                     CALL adet404_dean004_ref()
                  END IF
                  #當款別編號=50銀行卡/信用卡
                  IF g_dean_d[l_ac].dean002 = '50' THEN
                     IF NOT cl_chk_exist("v_mman001_3") THEN
                        LET g_dean_d[l_ac].dean004 = g_dean_d_o.dean004
                        CALL adet404_dean004_mman_ref()
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            
            #當款別編號=40有價券/禮券類型
            IF g_dean_d[l_ac].dean002 = '40' THEN
               CALL adet404_dean004_gcaf_ref()
               CALL adet404_dean004_ref()
            END IF
            
            #當款別編號=50銀行卡/信用卡
            IF g_dean_d[l_ac].dean002 = '50' THEN
               CALL adet404_dean004_mman_ref()
            END IF
            
            LET g_dean_d_o.dean004= g_dean_d[l_ac].dean004
            ]]>
  </point>
  <point name="input.a.page1.dean005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_dean_d[l_ac].dean005) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND 
                  (g_dean_d[l_ac].dean005 != g_dean_d_o.dean005 OR
                  g_dean_d_o.dean005 IS NULL )) THEN
                  
                  #券面額編號(dean005)必須存在面額基本資料檔裡(oocq_t)
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = '2071'
                  LET g_chkparam.arg2 = g_dean_d[l_ac].dean005
                  LET g_chkparam.arg3 = g_dean_d[l_ac].dean002
                  LET g_chkparam.arg4 = g_dean_d[l_ac].dean006
                  IF NOT cl_chk_exist("v_oocq002_3") THEN
                     LET g_dean_d[l_ac].dean005 = g_dean_d_o.dean005
                     NEXT FIELD CURRENT
                  END IF
                  
                  #券面額編號(dean005)必須存在券種基本資料檔-發行面額設定(g_car_t)裡
                  IF NOT cl_null(g_dean_d[l_ac].dean004) AND NOT cl_null(g_dean_d[l_ac].dean005) THEN
                     INITIALIZE g_chkparam.* TO NULL
                     LET g_chkparam.arg1 = g_dean_d[l_ac].dean004
                     LET g_chkparam.arg2 = g_dean_d[l_ac].dean005
                     IF NOT cl_chk_exist("v_gcar002") THEN
                        LET g_dean_d[l_ac].dean005 = g_dean_d_o.dean005
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                  
                  #當代收數量(dean007)有值，自動算出金額
                  CALL adet404_dean007_count()
               END IF
            END IF
            LET g_dean_d_o.dean005 = g_dean_d[l_ac].dean005]]>
  </point>
  <point name="input.a.page1.dean006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.page1.dean007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_dean_d[l_ac].dean007) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND 
                  (g_dean_d[l_ac].dean007 != g_dean_d_o.dean007 OR 
                  g_dean_d_o.dean007 IS NULL )) THEN
                  #當代收數量(dean007)有值，自動算出金額
                  CALL adet404_dean007_count()
               END IF
            END IF
            LET g_dean_d_o.dean007 = g_dean_d[l_ac].dean007]]>
  </point>
  <point name="input.a.page1.dean008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.page1.deanseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_deam_m.deamdocno IS NOT NULL AND g_dean_d[g_detail_idx].deanseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_deam_m.deamdocno != g_deamdocno_t OR g_dean_d[g_detail_idx].deanseq != g_dean_d_t.deanseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM dean_t WHERE "||"deanent = '" ||g_enterprise|| "' AND "||"deandocno = '"||g_deam_m.deamdocno ||"' AND "|| "deanseq = '"||g_dean_d[g_detail_idx].deanseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.body.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #當代收數量(dean007)有值，自動算出金額
            CALL adet404_dean007_count()]]>
  </point>
  <point name="input.body.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               LET g_dean_d_o.* = g_dean_d[l_ac].*]]>
  </point>
  <point name="input.body.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #項次(deanseq)自動編碼，單據最大號+1
            IF cl_null(g_dean_d[l_ac].deanseq) THEN
               SELECT MAX(deanseq)+1 INTO g_dean_d[l_ac].deanseq
                 FROM dean_t 
                WHERE deanent = g_enterprise
                  AND deandocno = g_deam_m.deamdocno
               IF cl_null(g_dean_d[l_ac].deanseq) THEN
                  LET g_dean_d[l_ac].deanseq = 1
               END IF
            END IF
            LET g_dean_d[l_ac].deansite = g_deam_m.deamsite
            LET g_dean_d[l_ac].deanunit = g_deam_m.deamunit
            LET g_dean_d[l_ac].dean001 = g_deam_m.deamdocdt
            LET g_dean_d_t.* = g_dean_d[l_ac].*
            LET g_dean_d_o.* = g_dean_d[l_ac].*
            CALL adet404_dean003_init()
            CALL adet404_dean002_affect()
            ]]>
  </point>
  <point name="input.c.deam001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_deam_m.deam001             #給予default值

            #給予arg

            CALL q_pmaa001_6()                                #呼叫開窗

            LET g_deam_m.deam001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_deam_m.deam001 TO deam001              #顯示到畫面上
            CALL adet404_deam001_ref()
            NEXT FIELD deam001                          #返回原欄位

]]>
  </point>
  <point name="input.c.deamdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_deam_m.deamdocno             #給予default值

            #給予arg
            LET l_ooef004 = ''
            SELECT ooef004 INTO l_ooef004
              FROM ooef_t
             WHERE ooef001 = g_site
               AND ooefent = g_enterprise
            LET g_qryparam.arg1 = l_ooef004    #單據別參照表號
            LET g_qryparam.arg2 = g_prog       #程式名稱

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_deam_m.deamdocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_deam_m.deamdocno TO deamdocno              #顯示到畫面上
            
            NEXT FIELD deamdocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.deamsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_deam_m.deamsite             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site
			LET g_qryparam.arg2 = '2'
            CALL q_ooed004()                                #呼叫開窗

            LET g_deam_m.deamsite = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_deam_m.deamsite TO deamsite              #顯示到畫面上
            CALL adet404_deamsite_ref()
            NEXT FIELD deamsite                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.dean003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dean_d[l_ac].dean003             #給予default值
            CASE g_dean_d[l_ac].dean002
               #款別分類dean002 = 40券種
               WHEN '40'
                  #給予arg
                  LET g_qryparam.arg1 = g_deam_m.deamsite           #營運中心
                  CALL q_ooia001_4()                                #呼叫開窗
                  LET g_dean_d[l_ac].dean003 = g_qryparam.return1   #款別編號
                  LET g_dean_d[l_ac].dean004 = g_qryparam.return2   #券種編號
                  CALL adet404_dean004_gcaf_ref()
               #款別分類dean003 = 50卡種
#               WHEN '50'
#                  #給予arg
#                  CALL q_ooia001_2()                                #呼叫開窗
#                  LET g_dean_d[l_ac].dean003 = g_qryparam.return1   #款別編號
#                  LET g_dean_d[l_ac].dean004 = g_qryparam.return2   #券種編號
#                  CALL adet404_dean004_mman_ref()
               #其他
               OTHERWISE
                  #給予arg
                  LET g_qryparam.arg1 = g_dean_d[l_ac].dean002
                  LET g_qryparam.arg2 = g_deam_m.deamsite
                  CALL q_ooie001_4()                                #呼叫開窗
                  LET g_dean_d[l_ac].dean003 = g_qryparam.return1   #將開窗取得的值回傳到變數
            END CASE

            DISPLAY g_dean_d[l_ac].dean003 TO dean003              #顯示到畫面上
            CALL adet404_dean003_ref()
            NEXT FIELD dean003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.dean004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dean_d[l_ac].dean004             #給予default值
            #款別分類=40有價券，q_gcaf001_1
            IF g_dean_d[l_ac].dean002 = '40' THEN
               #給予arg
               LET g_qryparam.arg1 = g_dean_d[l_ac].dean003
               LET g_qryparam.arg2 = g_dean_d[l_ac].dean006
               CALL q_gcaf001_1()                                #呼叫開窗
               LET g_dean_d[l_ac].dean004 = g_qryparam.return1   #將開窗取得的值回傳到變數
               CALL adet404_dean004_gcaf_ref()
            END IF
            #款別分類=50銀行卡/信用卡，q_mman001_5
            IF g_dean_d[l_ac].dean002 = '50' THEN
               #給予arg
               LET g_qryparam.arg1 = g_dean_d[l_ac].dean003
               CALL q_mman001_5()                                #呼叫開窗
               LET g_dean_d[l_ac].dean004 = g_qryparam.return1   #將開窗取得的值回傳到變數
               CALL adet404_dean004_mman_ref()
            END IF
            DISPLAY g_dean_d[l_ac].dean004 TO dean004         #顯示到畫面上
            NEXT FIELD dean004                                #返回原欄位

]]>
  </point>
  <point name="input.c.page1.dean005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dean_d[l_ac].dean005             #給予default值
            IF g_dean_d[l_ac].dean002 = '40' THEN
               #給予arg
               LET g_qryparam.arg1 = "2071"                   #應用分類
               LET g_qryparam.arg2 = g_dean_d[l_ac].dean004   #券種編號
               LET g_qryparam.arg3 = g_dean_d[l_ac].dean006   #幣別
               CALL q_gcar002()                               #呼叫開窗
            ELSE
               #給予arg
               LET g_qryparam.arg1 = "2071"                   #應用分類
               LET g_qryparam.arg2 = g_dean_d[l_ac].dean002   #款別類型
               LET g_qryparam.arg3 = g_dean_d[l_ac].dean006   #幣別
               CALL q_oocq002_17()                            #呼叫開窗
            END IF
            LET g_dean_d[l_ac].dean005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_dean_d[l_ac].dean005 TO dean005              #顯示到畫面上

            NEXT FIELD dean005                          #返回原欄位

]]>
  </point>
  <point name="input.d.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL adet404_set_entry(p_cmd)
            CALL adet404_set_no_entry(p_cmd)]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE  l_flag                LIKE type_t.num5
   DEFINE  l_ooef004             LIKE ooef_t.ooef004]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL s_aooi200_gen_docno(g_deam_m.deamsite,g_deam_m.deamdocno,g_deam_m.deamdocdt,g_prog) RETURNING l_flag,g_deam_m.deamdocno
               IF NOT l_flag THEN
                  NEXT FIELD deamdocno
               END IF]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_deam_m.deamsite = g_site
      LET g_deam_m.deamunit = g_site
      CALL adet404_deamsite_ref()
      LET g_deam_m.deamdocdt = g_today
      
      #預設單據的單別
      LET r_success = ''
      LET r_doctype = ''
      CALL s_arti200_get_def_doc_type(g_deam_m.deamsite,g_prog,'1') 
         RETURNING r_success,r_doctype
      LET g_deam_m.deamdocno = r_doctype
      
      LET g_deam_m_t.* = g_deam_m.*
      ]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE r_success       LIKE type_t.num5
   DEFINE r_doctype       LIKE rtai_t.rtai004]]>
  </point>
  <point name="modify.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_deam_m.deamstus MATCHES "[DR]" THEN 
         LET g_deam_m.deamstus = "N"
      END IF]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_deam_m.deamsite = g_site
   LET g_deam_m.deamdocdt = g_today]]>
  </point>
  <point name="send.before_send" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   #確認前檢核段
   IF NOT s_adet404_conf_chk(g_deam_m.deamdocno) THEN
      CLOSE adet404_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("deamsite,deamdocdt",TRUE)]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("dean004,dean005,dean007,dean008,dean009",TRUE)]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("deamsite,deamdocdt",FALSE)]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   #款別分類(dean002)=10現金
   #券種編號(dean004)、代收金額(dean008)、支票編號(dean009)不可輸入
   IF g_dean_d[l_ac].dean002 = '10' THEN
      CALL cl_set_comp_entry("dean004,dean008,dean009",FALSE)
   END IF
   
   #款別分類(dean002)=30票據類型
   #券種編號(dean004)、券面額編號(dean005)、代收數量(dean007)不可輸入
   IF g_dean_d[l_ac].dean002 = '30' THEN
      CALL cl_set_comp_entry("dean004,dean005,dean007",FALSE)
   END IF
   
   #款別分類(dean002)=40有價券，代收金額(dean008)、支票號碼(dean009)不可輸入
   IF g_dean_d[l_ac].dean002 = '40' THEN
      CALL cl_set_comp_entry("dean008,dean009",FALSE)
   END IF
   
   #款別分類(dean002)=50卡
   #券種編號(dean004)、券面額編號(dean005)、代收金額(dean008)、支票編號(dean009)不可輸入
   IF g_dean_d[l_ac].dean002 = '50' THEN
      CALL cl_set_comp_entry("dean004,dean005,dean008,dean009",FALSE)
   END IF
   ]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      IF g_dean_d[l_ac].dean002 = '40' THEN
         CALL adet404_dean004_gcaf_ref()
      END IF
      
      IF g_dean_d[l_ac].dean002 = '50' THEN
         CALL adet404_dean004_mman_ref()
      END IF
      
      CALL adet404_dean003_ref()
      CALL adet404_dean006_ref()
]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL adet404_deamsite_ref()
            CALL adet404_deam001_ref()

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_deam_m.deamownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_deam_m.deamownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_deam_m.deamownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_deam_m.deamowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_deam_m.deamowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_deam_m.deamowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_deam_m.deamcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_deam_m.deamcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_deam_m.deamcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_deam_m.deamcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_deam_m.deamcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_deam_m.deamcrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_deam_m.deammodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_deam_m.deammodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_deam_m.deammodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_deam_m.deamcnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_deam_m.deamcnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_deam_m.deamcnfid_desc
]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL s_transaction_begin()
   IF lc_state = 'Y' THEN
      CALL s_adet404_conf_chk(g_deam_m.deamdocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00108') THEN
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_adet404_conf_upd(g_deam_m.deamdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
         END IF
      END IF
   END IF
   IF lc_state = 'N' THEN
      CALL s_adet404_unconf_chk(g_deam_m.deamdocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00110') THEN
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_adet404_unconf_upd(g_deam_m.deamdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
         END IF
      END IF
   END IF
   IF lc_state = 'X' THEN
      CALL s_adet404_invalid_chk(g_deam_m.deamdocno) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00109') THEN
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_adet404_invalid_upd(g_deam_m.deamdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
         END IF
      END IF
   END IF]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_deam_m.deamstus = 'X' THEN
      RETURN
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      #open皆改為unconfirmed
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      #提交和抽單一開始先無條件關
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      
      CASE g_deam_m.deamstus 
         WHEN "N"
            CALL cl_set_act_visible("unconfirmed",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
               CALL cl_set_act_visible("signing",TRUE)
               CALL cl_set_act_visible("confirmed",FALSE)
            END IF
            
         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed",FALSE)
            
         #已核准只能顯示確認;其餘應用功能皆隱藏
         WHEN "A"     
            CALL cl_set_act_visible("confirmed ",TRUE)  
            CALL cl_set_act_visible("unconfirmed,invalid",FALSE)
            
         #保留修改的功能(如作廢)，隱藏其他應用功能
         WHEN "R"   
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)
            
         WHEN "D"  
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)
            
         #送簽中只能顯示抽單;其餘應用功能皆隱藏
         WHEN "W"   
            CALL cl_set_act_visible("withdraw",TRUE)  
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)
            
      END CASE]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success   LIKE type_t.num5]]>
  </point>
  <section id="adet404.b_fill" ver="4" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION adet404_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_dean_d.clear()    #g_dean_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF adet404_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE deanseq,dean001,dean002,dean003,dean004,dean005,dean006,dean007,dean008, 
          dean009,deansite,deanunit ,t1.ooial003 ,t2.mmanl003 ,t3.ooail003 FROM dean_t",   
                  " INNER JOIN deam_t ON deamdocno = deandocno ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN ooial_t t1 ON t1.ooialent='"||g_enterprise||"' AND t1.ooial001=dean003 AND t1.ooial002='"||g_dlang||"' ",
               " LEFT JOIN mmanl_t t2 ON t2.mmanlent='"||g_enterprise||"' AND t2.mmanl001=dean004 AND t2.mmanl002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t3 ON t3.ooailent='"||g_enterprise||"' AND t3.ooail001=dean006 AND t3.ooail002='"||g_dlang||"' ",
 
                  " WHERE deanent=? AND deandocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY dean_t.deanseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE adet404_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR adet404_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_deam_m.deamdocno
                                               
      FOREACH b_fill_cs INTO g_dean_d[l_ac].deanseq,g_dean_d[l_ac].dean001,g_dean_d[l_ac].dean002,g_dean_d[l_ac].dean003, 
          g_dean_d[l_ac].dean004,g_dean_d[l_ac].dean005,g_dean_d[l_ac].dean006,g_dean_d[l_ac].dean007, 
          g_dean_d[l_ac].dean008,g_dean_d[l_ac].dean009,g_dean_d[l_ac].deansite,g_dean_d[l_ac].deanunit, 
          g_dean_d[l_ac].dean003_desc,g_dean_d[l_ac].dean004_desc,g_dean_d[l_ac].dean006_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_dean_d.deleteElement(g_dean_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE adet404_pb
 
   
END FUNCTION
]]>
  </section>
  <section id="adet404.b_fill2" ver="3" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION adet404_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL adet404_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="adet404.browser_fill" ver="7" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION adet404_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_deam_m.* TO NULL
   CALL g_dean_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "deamdocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE deamdocno ",
                      " FROM deam_t ",
                      " ",
                      " LEFT JOIN dean_t ON deanent = deament AND deamdocno = deandocno ",
 
 
                      " ", 
                      " ", 
                      " WHERE deament = '" ||g_enterprise|| "' AND deanent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("deam_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE deamdocno ",
                      " FROM deam_t ", 
                      "  ",
                      "  ",
                      " WHERE deament = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("deam_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照deamsite,'',deamdocdt,deamdocno,deam001,'' Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT deamstus,deamsite,'',deamdocdt,deamdocno,deam001,'',t1.ooefl003 ,t2.pmaal003 ", 

               " FROM deam_t ",
               "  ",
               "  LEFT JOIN dean_t ON deanent = deament AND deamdocno = deandocno ",
 
 
               "  ",
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=deamsite AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent='"||g_enterprise||"' AND t2.pmaal001=deam001 AND t2.pmaal002='"||g_lang||"' ",
 
               " WHERE deament = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("deam_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_deamsite,g_browser[g_cnt].b_deamsite_desc, 
       g_browser[g_cnt].b_deamdocdt,g_browser[g_cnt].b_deamdocno,g_browser[g_cnt].b_deam001,g_browser[g_cnt].b_deam001_desc, 
       g_browser[g_cnt].b_deamsite_desc,g_browser[g_cnt].b_deam001_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "J"
            LET g_browser[g_cnt].b_statepic = "stus/16/reconciliate.png"
         WHEN "K"
            LET g_browser[g_cnt].b_statepic = "stus/16/unreconciliate.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="adet404.browser_search" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION adet404_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY deamdocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL adet404_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="adet404.construct" ver="5" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION adet404_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_deam_m.* TO NULL
   CALL g_dean_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON deamsite,deamdocdt,deamdocno,deam001,deamunit,deamstus,deamownid,deamowndp, 
          deamcrtid,deamcrtdp,deamcrtdt,deammodid,deammoddt,deamcnfid,deamcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<deamcrtdt>>----
         AFTER FIELD deamcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<deammoddt>>----
         AFTER FIELD deammoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<deamcnfdt>>----
         AFTER FIELD deamcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<deampstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.deamsite
         ON ACTION controlp INFIELD deamsite
            #add-point:ON ACTION controlp INFIELD deamsite
            {<point name="construct.c.deamsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deamsite
            #add-point:BEFORE FIELD deamsite
            {<point name="construct.b.deamsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deamsite
            
            #add-point:AFTER FIELD deamsite
            {<point name="construct.a.deamsite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD deamdocdt
            #add-point:BEFORE FIELD deamdocdt
            {<point name="construct.b.deamdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deamdocdt
            
            #add-point:AFTER FIELD deamdocdt
            {<point name="construct.a.deamdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.deamdocdt
         ON ACTION controlp INFIELD deamdocdt
            #add-point:ON ACTION controlp INFIELD deamdocdt
            {<point name="construct.c.deamdocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.deamdocno
         ON ACTION controlp INFIELD deamdocno
            #add-point:ON ACTION controlp INFIELD deamdocno
            {<point name="construct.c.deamdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deamdocno
            #add-point:BEFORE FIELD deamdocno
            {<point name="construct.b.deamdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deamdocno
            
            #add-point:AFTER FIELD deamdocno
            {<point name="construct.a.deamdocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.deam001
         ON ACTION controlp INFIELD deam001
            #add-point:ON ACTION controlp INFIELD deam001
            {<point name="construct.c.deam001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deam001
            #add-point:BEFORE FIELD deam001
            {<point name="construct.b.deam001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deam001
            
            #add-point:AFTER FIELD deam001
            {<point name="construct.a.deam001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD deamunit
            #add-point:BEFORE FIELD deamunit
            {<point name="construct.b.deamunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deamunit
            
            #add-point:AFTER FIELD deamunit
            {<point name="construct.a.deamunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.deamunit
         ON ACTION controlp INFIELD deamunit
            #add-point:ON ACTION controlp INFIELD deamunit
            {<point name="construct.c.deamunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deamstus
            #add-point:BEFORE FIELD deamstus
            {<point name="construct.b.deamstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deamstus
            
            #add-point:AFTER FIELD deamstus
            {<point name="construct.a.deamstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.deamstus
         ON ACTION controlp INFIELD deamstus
            #add-point:ON ACTION controlp INFIELD deamstus
            {<point name="construct.c.deamstus" />}
            #END add-point
 
         #Ctrlp:construct.c.deamownid
         ON ACTION controlp INFIELD deamownid
            #add-point:ON ACTION controlp INFIELD deamownid
            {<point name="construct.c.deamownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deamownid
            #add-point:BEFORE FIELD deamownid
            {<point name="construct.b.deamownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deamownid
            
            #add-point:AFTER FIELD deamownid
            {<point name="construct.a.deamownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.deamowndp
         ON ACTION controlp INFIELD deamowndp
            #add-point:ON ACTION controlp INFIELD deamowndp
            {<point name="construct.c.deamowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deamowndp
            #add-point:BEFORE FIELD deamowndp
            {<point name="construct.b.deamowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deamowndp
            
            #add-point:AFTER FIELD deamowndp
            {<point name="construct.a.deamowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.deamcrtid
         ON ACTION controlp INFIELD deamcrtid
            #add-point:ON ACTION controlp INFIELD deamcrtid
            {<point name="construct.c.deamcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deamcrtid
            #add-point:BEFORE FIELD deamcrtid
            {<point name="construct.b.deamcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deamcrtid
            
            #add-point:AFTER FIELD deamcrtid
            {<point name="construct.a.deamcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.deamcrtdp
         ON ACTION controlp INFIELD deamcrtdp
            #add-point:ON ACTION controlp INFIELD deamcrtdp
            {<point name="construct.c.deamcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deamcrtdp
            #add-point:BEFORE FIELD deamcrtdp
            {<point name="construct.b.deamcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deamcrtdp
            
            #add-point:AFTER FIELD deamcrtdp
            {<point name="construct.a.deamcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD deamcrtdt
            #add-point:BEFORE FIELD deamcrtdt
            {<point name="construct.b.deamcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.deammodid
         ON ACTION controlp INFIELD deammodid
            #add-point:ON ACTION controlp INFIELD deammodid
            {<point name="construct.c.deammodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deammodid
            #add-point:BEFORE FIELD deammodid
            {<point name="construct.b.deammodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deammodid
            
            #add-point:AFTER FIELD deammodid
            {<point name="construct.a.deammodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD deammoddt
            #add-point:BEFORE FIELD deammoddt
            {<point name="construct.b.deammoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.deamcnfid
         ON ACTION controlp INFIELD deamcnfid
            #add-point:ON ACTION controlp INFIELD deamcnfid
            {<point name="construct.c.deamcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deamcnfid
            #add-point:BEFORE FIELD deamcnfid
            {<point name="construct.b.deamcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deamcnfid
            
            #add-point:AFTER FIELD deamcnfid
            {<point name="construct.a.deamcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD deamcnfdt
            #add-point:BEFORE FIELD deamcnfdt
            {<point name="construct.b.deamcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON deanseq,dean001,dean002,dean003,dean005,dean006,dean007,dean008,dean009 

           FROM s_detail1[1].deanseq,s_detail1[1].dean001,s_detail1[1].dean002,s_detail1[1].dean003, 
               s_detail1[1].dean005,s_detail1[1].dean006,s_detail1[1].dean007,s_detail1[1].dean008,s_detail1[1].dean009 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="adet404.default_search" ver="4" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION adet404_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " deamdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="adet404.delete" ver="9" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION adet404_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_deam_m.deamdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE adet404_master_referesh USING g_deam_m.deamdocno INTO g_deam_m.deamsite,g_deam_m.deamdocdt, 
       g_deam_m.deamdocno,g_deam_m.deam001,g_deam_m.deamunit,g_deam_m.deamstus,g_deam_m.deamownid,g_deam_m.deamowndp, 
       g_deam_m.deamcrtid,g_deam_m.deamcrtdp,g_deam_m.deamcrtdt,g_deam_m.deammodid,g_deam_m.deammoddt, 
       g_deam_m.deamcnfid,g_deam_m.deamcnfdt,g_deam_m.deamsite_desc,g_deam_m.deam001_desc,g_deam_m.deamownid_desc, 
       g_deam_m.deamowndp_desc,g_deam_m.deamcrtid_desc,g_deam_m.deamcrtdp_desc,g_deam_m.deammodid_desc, 
       g_deam_m.deamcnfid_desc
   
   
 
   CALL adet404_show()
   
   CALL s_transaction_begin()
 
   OPEN adet404_cl USING g_enterprise,g_deam_m.deamdocno
   IF STATUS THEN
      CALL cl_err("OPEN adet404_cl:", STATUS, 1)
      CLOSE adet404_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE adet404_master_referesh USING g_deam_m.deamdocno INTO g_deam_m.deamsite,g_deam_m.deamdocdt, 
       g_deam_m.deamdocno,g_deam_m.deam001,g_deam_m.deamunit,g_deam_m.deamstus,g_deam_m.deamownid,g_deam_m.deamowndp, 
       g_deam_m.deamcrtid,g_deam_m.deamcrtdp,g_deam_m.deamcrtdt,g_deam_m.deammodid,g_deam_m.deammoddt, 
       g_deam_m.deamcnfid,g_deam_m.deamcnfdt,g_deam_m.deamsite_desc,g_deam_m.deam001_desc,g_deam_m.deamownid_desc, 
       g_deam_m.deamowndp_desc,g_deam_m.deamcrtid_desc,g_deam_m.deamcrtdp_desc,g_deam_m.deammodid_desc, 
       g_deam_m.deamcnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_deam_m.deamdocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL adet404_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_deamdocno_t = g_deam_m.deamdocno
 
 
      DELETE FROM deam_t
       WHERE deament = g_enterprise AND deamdocno = g_deam_m.deamdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_deam_m.deamdocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM dean_t
       WHERE deanent = g_enterprise AND deandocno = g_deam_m.deamdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("dean_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_dean_d.clear() 
 
     
      #CALL adet404_ui_browser_refresh()  
      CALL adet404_ui_headershow()  
      CALL adet404_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL adet404_browser_fill("")
         CALL adet404_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL adet404_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE adet404_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_deam_m.deamdocno,'D')
    
END FUNCTION
]]>
  </section>
  <section id="adet404.delete_b" ver="2" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION adet404_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM dean_t
       WHERE deanent = g_enterprise AND
         deandocno = ps_keys_bak[1] AND deanseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="adet404.description" ver="32" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000265
#+ 
#+ Filename...: adet404
#+ Description: 營業款保全代收存繳維護作業
#+ Creator....: 04226(2014/02/10)
#+ Modifier...: 04226(2014/02/11)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="adet404.detail_reproduce" ver="2" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION adet404_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE dean_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE adet404_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE adet404_detail AS ",
                "SELECT * FROM dean_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO adet404_detail SELECT * FROM dean_t 
                                         WHERE deanent = g_enterprise AND deandocno = g_deamdocno_t
 
   
   #將key修正為調整後   
   UPDATE adet404_detail 
      #更新key欄位
      SET deandocno = g_deam_m.deamdocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO dean_t SELECT * FROM adet404_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adet404_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_deamdocno_t = g_deam_m.deamdocno
 
   
   DROP TABLE adet404_detail
   
END FUNCTION
]]>
  </section>
  <section id="adet404.detail_show" ver="4" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION adet404_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="adet404.fetch" ver="5" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION adet404_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_deam_m.deamdocno = g_browser[g_current_idx].b_deamdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE adet404_master_referesh USING g_deam_m.deamdocno INTO g_deam_m.deamsite,g_deam_m.deamdocdt, 
       g_deam_m.deamdocno,g_deam_m.deam001,g_deam_m.deamunit,g_deam_m.deamstus,g_deam_m.deamownid,g_deam_m.deamowndp, 
       g_deam_m.deamcrtid,g_deam_m.deamcrtdp,g_deam_m.deamcrtdt,g_deam_m.deammodid,g_deam_m.deammoddt, 
       g_deam_m.deamcnfid,g_deam_m.deamcnfdt,g_deam_m.deamsite_desc,g_deam_m.deam001_desc,g_deam_m.deamownid_desc, 
       g_deam_m.deamowndp_desc,g_deam_m.deamcrtid_desc,g_deam_m.deamcrtdp_desc,g_deam_m.deammodid_desc, 
       g_deam_m.deamcnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("deam_t",SQLCA.sqlcode,1)
      INITIALIZE g_deam_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL adet404_show()
 
   #+ 此段落由子樣板a56產生
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
END FUNCTION
]]>
  </section>
  <section id="adet404.fill_chk" ver="4" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION adet404_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="adet404.filter" ver="5" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION adet404_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON deamsite,deamdocdt,deamdocno,deam001
                          FROM s_browse[1].b_deamsite,s_browse[1].b_deamdocdt,s_browse[1].b_deamdocno, 
                              s_browse[1].b_deam001
 
         BEFORE CONSTRUCT
               DISPLAY adet404_filter_parser('deamsite') TO s_browse[1].b_deamsite
            DISPLAY adet404_filter_parser('deamdocdt') TO s_browse[1].b_deamdocdt
            DISPLAY adet404_filter_parser('deamdocno') TO s_browse[1].b_deamdocno
            DISPLAY adet404_filter_parser('deam001') TO s_browse[1].b_deam001
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL adet404_filter_show('deamsite')
   CALL adet404_filter_show('deamdocdt')
   CALL adet404_filter_show('deamdocno')
   CALL adet404_filter_show('deam001')
 
END FUNCTION
]]>
  </section>
  <section id="adet404.filter_parser" ver="2" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION adet404_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="adet404.filter_show" ver="2" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION adet404_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = adet404_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="adet404.global" ver="5" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_deam_m        RECORD
       deamsite LIKE deam_t.deamsite, 
   deamsite_desc LIKE type_t.chr80, 
   deamdocdt LIKE deam_t.deamdocdt, 
   deamdocno LIKE deam_t.deamdocno, 
   deam001 LIKE deam_t.deam001, 
   deam001_desc LIKE type_t.chr80, 
   deamunit LIKE deam_t.deamunit, 
   deamstus LIKE deam_t.deamstus, 
   deamownid LIKE deam_t.deamownid, 
   deamownid_desc LIKE type_t.chr80, 
   deamowndp LIKE deam_t.deamowndp, 
   deamowndp_desc LIKE type_t.chr80, 
   deamcrtid LIKE deam_t.deamcrtid, 
   deamcrtid_desc LIKE type_t.chr80, 
   deamcrtdp LIKE deam_t.deamcrtdp, 
   deamcrtdp_desc LIKE type_t.chr80, 
   deamcrtdt DATETIME YEAR TO SECOND, 
   deammodid LIKE deam_t.deammodid, 
   deammodid_desc LIKE type_t.chr80, 
   deammoddt DATETIME YEAR TO SECOND, 
   deamcnfid LIKE deam_t.deamcnfid, 
   deamcnfid_desc LIKE type_t.chr80, 
   deamcnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_dean_d        RECORD
       deanseq LIKE dean_t.deanseq, 
   dean001 LIKE dean_t.dean001, 
   dean002 LIKE dean_t.dean002, 
   dean003 LIKE dean_t.dean003, 
   dean003_desc LIKE type_t.chr500, 
   dean004 LIKE dean_t.dean004, 
   dean004_desc LIKE type_t.chr500, 
   dean005 LIKE dean_t.dean005, 
   dean006 LIKE dean_t.dean006, 
   dean006_desc LIKE type_t.chr500, 
   dean007 LIKE dean_t.dean007, 
   dean008 LIKE dean_t.dean008, 
   dean009 LIKE dean_t.dean009, 
   deansite LIKE dean_t.deansite, 
   deanunit LIKE dean_t.deanunit
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_deam_m          type_g_deam_m
DEFINE g_deam_m_t        type_g_deam_m
 
   DEFINE g_deamdocno_t LIKE deam_t.deamdocno
 
 
DEFINE g_dean_d          DYNAMIC ARRAY OF type_g_dean_d
DEFINE g_dean_d_t        type_g_dean_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_deamsite LIKE deam_t.deamsite,
   b_deamsite_desc LIKE type_t.chr80,
      b_deamdocdt LIKE deam_t.deamdocdt,
      b_deamdocno LIKE deam_t.deamdocno,
      b_deam001 LIKE deam_t.deam001,
   b_deam001_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_deamsite LIKE deam_t.deamsite,
   b_deamsite_desc LIKE type_t.chr80,
      b_deamdocdt LIKE deam_t.deamdocdt,
      b_deamdocno LIKE deam_t.deamdocno,
      b_deam001 LIKE deam_t.deam001,
   b_deam001_desc LIKE type_t.chr80
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="adet404.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION adet404_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_dean_d.getLength() THEN
         LET g_detail_idx = g_dean_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_dean_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_dean_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="adet404.init" ver="4" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION adet404_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('deamstus','13','N,X,Y,A,D,R,W,J,K')
 
      CALL cl_set_combo_scc('dean002','8310') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL adet404_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="adet404.input" ver="4" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION adet404_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT deanseq,dean001,dean002,dean003,dean004,dean005,dean006,dean007,dean008, 
       dean009,deansite,deanunit FROM dean_t WHERE deanent=? AND deandocno=? AND deanseq=? FOR UPDATE" 

   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adet404_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL adet404_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL adet404_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_deam_m.deamsite,g_deam_m.deamdocdt,g_deam_m.deamdocno,g_deam_m.deam001,g_deam_m.deamunit, 
       g_deam_m.deamstus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="adet404.input.body" ver="5" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_dean_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_dean_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adet404_b_fill()
            LET g_rec_b = g_dean_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN adet404_cl USING g_enterprise,g_deam_m.deamdocno
            IF STATUS THEN
               CALL cl_err("OPEN adet404_cl:", STATUS, 1)
               CLOSE adet404_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_dean_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_dean_d[l_ac].deanseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_dean_d_t.* = g_dean_d[l_ac].*  #BACKUP
               CALL adet404_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL adet404_set_no_entry_b(l_cmd)
               IF NOT adet404_lock_b("dean_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adet404_bcl INTO g_dean_d[l_ac].deanseq,g_dean_d[l_ac].dean001,g_dean_d[l_ac].dean002, 
                      g_dean_d[l_ac].dean003,g_dean_d[l_ac].dean004,g_dean_d[l_ac].dean005,g_dean_d[l_ac].dean006, 
                      g_dean_d[l_ac].dean007,g_dean_d[l_ac].dean008,g_dean_d[l_ac].dean009,g_dean_d[l_ac].deansite, 
                      g_dean_d[l_ac].deanunit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_dean_d_t.deanseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL adet404_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_dean_d[l_ac].* TO NULL 
                  LET g_dean_d[l_ac].dean002 = "10"
 
            LET g_dean_d_t.* = g_dean_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adet404_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL adet404_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_dean_d[li_reproduce_target].* = g_dean_d[li_reproduce].*
 
               LET g_dean_d[li_reproduce_target].deanseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM dean_t 
             WHERE deanent = g_enterprise AND deandocno = g_deam_m.deamdocno
 
               AND deanseq = g_dean_d[l_ac].deanseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_deam_m.deamdocno
               LET gs_keys[2] = g_dean_d[g_detail_idx].deanseq
               CALL adet404_insert_b('dean_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_dean_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("dean_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adet404_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_dean_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_dean_d.deleteElement(l_ac)
               NEXT FIELD deanseq
            END IF
         
            IF g_dean_d[l_ac].deanseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM dean_t
                WHERE deanent = g_enterprise AND deandocno = g_deam_m.deamdocno AND
 
                      deanseq = g_dean_d_t.deanseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("dean_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE adet404_bcl
               LET l_count = g_dean_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_deam_m.deamdocno
               LET gs_keys[2] = g_dean_d[g_detail_idx].deanseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL adet404_delete_b('dean_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD deanseq
            #add-point:BEFORE FIELD deanseq
            {<point name="input.b.page1.deanseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deanseq
            
            #add-point:AFTER FIELD deanseq
            {<point name="input.a.page1.deanseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE deanseq
            #add-point:ON CHANGE deanseq
            {<point name="input.g.page1.deanseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dean001
            #add-point:BEFORE FIELD dean001
            {<point name="input.b.page1.dean001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dean001
            
            #add-point:AFTER FIELD dean001
            {<point name="input.a.page1.dean001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dean001
            #add-point:ON CHANGE dean001
            {<point name="input.g.page1.dean001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dean002
            #add-point:BEFORE FIELD dean002
            {<point name="input.b.page1.dean002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dean002
            
            #add-point:AFTER FIELD dean002
            {<point name="input.a.page1.dean002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dean002
            #add-point:ON CHANGE dean002
            {<point name="input.g.page1.dean002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dean003
            
            #add-point:AFTER FIELD dean003
            {<point name="input.a.page1.dean003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dean003
            #add-point:BEFORE FIELD dean003
            {<point name="input.b.page1.dean003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dean003
            #add-point:ON CHANGE dean003
            {<point name="input.g.page1.dean003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dean004
            
            #add-point:AFTER FIELD dean004
            {<point name="input.a.page1.dean004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dean004
            #add-point:BEFORE FIELD dean004
            {<point name="input.b.page1.dean004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dean004
            #add-point:ON CHANGE dean004
            {<point name="input.g.page1.dean004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dean005
            
            #add-point:AFTER FIELD dean005
            {<point name="input.a.page1.dean005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dean005
            #add-point:BEFORE FIELD dean005
            {<point name="input.b.page1.dean005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dean005
            #add-point:ON CHANGE dean005
            {<point name="input.g.page1.dean005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dean006
            
            #add-point:AFTER FIELD dean006
            {<point name="input.a.page1.dean006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dean006
            #add-point:BEFORE FIELD dean006
            {<point name="input.b.page1.dean006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dean006
            #add-point:ON CHANGE dean006
            {<point name="input.g.page1.dean006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dean007
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_dean_d[l_ac].dean007,"0","0","","","azz-00079",1) THEN
               NEXT FIELD dean007
            END IF
 
 
            #add-point:AFTER FIELD dean007
            {<point name="input.a.page1.dean007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dean007
            #add-point:BEFORE FIELD dean007
            {<point name="input.b.page1.dean007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dean007
            #add-point:ON CHANGE dean007
            {<point name="input.g.page1.dean007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dean008
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_dean_d[l_ac].dean008,"0","0","","","azz-00079",1) THEN
               NEXT FIELD dean008
            END IF
 
 
            #add-point:AFTER FIELD dean008
            {<point name="input.a.page1.dean008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dean008
            #add-point:BEFORE FIELD dean008
            {<point name="input.b.page1.dean008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dean008
            #add-point:ON CHANGE dean008
            {<point name="input.g.page1.dean008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dean009
            #add-point:BEFORE FIELD dean009
            {<point name="input.b.page1.dean009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dean009
            
            #add-point:AFTER FIELD dean009
            {<point name="input.a.page1.dean009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dean009
            #add-point:ON CHANGE dean009
            {<point name="input.g.page1.dean009" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.deanseq
         ON ACTION controlp INFIELD deanseq
            #add-point:ON ACTION controlp INFIELD deanseq
            {<point name="input.c.page1.deanseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dean001
         ON ACTION controlp INFIELD dean001
            #add-point:ON ACTION controlp INFIELD dean001
            {<point name="input.c.page1.dean001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dean002
         ON ACTION controlp INFIELD dean002
            #add-point:ON ACTION controlp INFIELD dean002
            {<point name="input.c.page1.dean002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dean003
         ON ACTION controlp INFIELD dean003
            #add-point:ON ACTION controlp INFIELD dean003
            {<point name="input.c.page1.dean003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dean004
         ON ACTION controlp INFIELD dean004
            #add-point:ON ACTION controlp INFIELD dean004
            {<point name="input.c.page1.dean004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dean005
         ON ACTION controlp INFIELD dean005
            #add-point:ON ACTION controlp INFIELD dean005
            {<point name="input.c.page1.dean005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dean006
         ON ACTION controlp INFIELD dean006
            #add-point:ON ACTION controlp INFIELD dean006
            {<point name="input.c.page1.dean006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dean007
         ON ACTION controlp INFIELD dean007
            #add-point:ON ACTION controlp INFIELD dean007
            {<point name="input.c.page1.dean007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dean008
         ON ACTION controlp INFIELD dean008
            #add-point:ON ACTION controlp INFIELD dean008
            {<point name="input.c.page1.dean008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dean009
         ON ACTION controlp INFIELD dean009
            #add-point:ON ACTION controlp INFIELD dean009
            {<point name="input.c.page1.dean009" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_dean_d[l_ac].* = g_dean_d_t.*
               CLOSE adet404_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_dean_d[l_ac].deanseq,-263,1)
               LET g_dean_d[l_ac].* = g_dean_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE dean_t SET (deandocno,deanseq,dean001,dean002,dean003,dean004,dean005,dean006, 
                   dean007,dean008,dean009,deansite,deanunit) = (g_deam_m.deamdocno,g_dean_d[l_ac].deanseq, 
                   g_dean_d[l_ac].dean001,g_dean_d[l_ac].dean002,g_dean_d[l_ac].dean003,g_dean_d[l_ac].dean004, 
                   g_dean_d[l_ac].dean005,g_dean_d[l_ac].dean006,g_dean_d[l_ac].dean007,g_dean_d[l_ac].dean008, 
                   g_dean_d[l_ac].dean009,g_dean_d[l_ac].deansite,g_dean_d[l_ac].deanunit)
                WHERE deanent = g_enterprise AND deandocno = g_deam_m.deamdocno 
 
                  AND deanseq = g_dean_d_t.deanseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("dean_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_dean_d[l_ac].* = g_dean_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("dean_t",SQLCA.sqlcode,1)
                     LET g_dean_d[l_ac].* = g_dean_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_deam_m.deamdocno
               LET gs_keys_bak[1] = g_deamdocno_t
               LET gs_keys[2] = g_dean_d[g_detail_idx].deanseq
               LET gs_keys_bak[2] = g_dean_d_t.deanseq
               CALL adet404_update_b('dean_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_deam_m),util.JSON.stringify(g_dean_d_t)
               LET g_log2 = util.JSON.stringify(g_deam_m),util.JSON.stringify(g_dean_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL adet404_unlock_b("dean_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_dean_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_dean_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="adet404.input.head" ver="5" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_deam_m.deamsite,g_deam_m.deamdocdt,g_deam_m.deamdocno,g_deam_m.deam001,g_deam_m.deamunit, 
          g_deam_m.deamstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD deamsite
            
            #add-point:AFTER FIELD deamsite
            {<point name="input.a.deamsite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD deamsite
            #add-point:BEFORE FIELD deamsite
            {<point name="input.b.deamsite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE deamsite
            #add-point:ON CHANGE deamsite
            {<point name="input.g.deamsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deamdocdt
            #add-point:BEFORE FIELD deamdocdt
            {<point name="input.b.deamdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deamdocdt
            
            #add-point:AFTER FIELD deamdocdt
            {<point name="input.a.deamdocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE deamdocdt
            #add-point:ON CHANGE deamdocdt
            {<point name="input.g.deamdocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deamdocno
            #add-point:BEFORE FIELD deamdocno
            {<point name="input.b.deamdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deamdocno
            
            #add-point:AFTER FIELD deamdocno
            {<point name="input.a.deamdocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE deamdocno
            #add-point:ON CHANGE deamdocno
            {<point name="input.g.deamdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deam001
            
            #add-point:AFTER FIELD deam001
            {<point name="input.a.deam001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD deam001
            #add-point:BEFORE FIELD deam001
            {<point name="input.b.deam001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE deam001
            #add-point:ON CHANGE deam001
            {<point name="input.g.deam001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deamunit
            #add-point:BEFORE FIELD deamunit
            {<point name="input.b.deamunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deamunit
            
            #add-point:AFTER FIELD deamunit
            {<point name="input.a.deamunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE deamunit
            #add-point:ON CHANGE deamunit
            {<point name="input.g.deamunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD deamstus
            #add-point:BEFORE FIELD deamstus
            {<point name="input.b.deamstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD deamstus
            
            #add-point:AFTER FIELD deamstus
            {<point name="input.a.deamstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE deamstus
            #add-point:ON CHANGE deamstus
            {<point name="input.g.deamstus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.deamsite
         ON ACTION controlp INFIELD deamsite
            #add-point:ON ACTION controlp INFIELD deamsite
            {<point name="input.c.deamsite" />}
            #END add-point
 
         #Ctrlp:input.c.deamdocdt
         ON ACTION controlp INFIELD deamdocdt
            #add-point:ON ACTION controlp INFIELD deamdocdt
            {<point name="input.c.deamdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.deamdocno
         ON ACTION controlp INFIELD deamdocno
            #add-point:ON ACTION controlp INFIELD deamdocno
            {<point name="input.c.deamdocno" />}
            #END add-point
 
         #Ctrlp:input.c.deam001
         ON ACTION controlp INFIELD deam001
            #add-point:ON ACTION controlp INFIELD deam001
            {<point name="input.c.deam001" />}
            #END add-point
 
         #Ctrlp:input.c.deamunit
         ON ACTION controlp INFIELD deamunit
            #add-point:ON ACTION controlp INFIELD deamunit
            {<point name="input.c.deamunit" />}
            #END add-point
 
         #Ctrlp:input.c.deamstus
         ON ACTION controlp INFIELD deamstus
            #add-point:ON ACTION controlp INFIELD deamstus
            {<point name="input.c.deamstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_deam_m.deamdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO deam_t (deament,deamsite,deamdocdt,deamdocno,deam001,deamunit,deamstus,deamownid, 
                   deamowndp,deamcrtid,deamcrtdp,deamcrtdt,deamcnfid,deamcnfdt)
               VALUES (g_enterprise,g_deam_m.deamsite,g_deam_m.deamdocdt,g_deam_m.deamdocno,g_deam_m.deam001, 
                   g_deam_m.deamunit,g_deam_m.deamstus,g_deam_m.deamownid,g_deam_m.deamowndp,g_deam_m.deamcrtid, 
                   g_deam_m.deamcrtdp,g_deam_m.deamcrtdt,g_deam_m.deamcnfid,g_deam_m.deamcnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_deam_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL adet404_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE deam_t SET (deamsite,deamdocdt,deamdocno,deam001,deamunit,deamstus,deamownid,deamowndp, 
                   deamcrtid,deamcrtdp,deamcrtdt,deamcnfid,deamcnfdt) = (g_deam_m.deamsite,g_deam_m.deamdocdt, 
                   g_deam_m.deamdocno,g_deam_m.deam001,g_deam_m.deamunit,g_deam_m.deamstus,g_deam_m.deamownid, 
                   g_deam_m.deamowndp,g_deam_m.deamcrtid,g_deam_m.deamcrtdp,g_deam_m.deamcrtdt,g_deam_m.deamcnfid, 
                   g_deam_m.deamcnfdt)
                WHERE deament = g_enterprise AND deamdocno = g_deamdocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("deam_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_deam_m_t)
               LET g_log2 = util.JSON.stringify(g_deam_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_deamdocno_t = g_deam_m.deamdocno
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="adet404.input.other" ver="3" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD deamdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD deanseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="adet404.insert" ver="3" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION adet404_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_dean_d.clear()   
 
 
   INITIALIZE g_deam_m.* LIKE deam_t.*             #DEFAULT 設定
   
   LET g_deamdocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_deam_m.deamownid = g_user
      LET g_deam_m.deamowndp = g_dept
      LET g_deam_m.deamcrtid = g_user
      LET g_deam_m.deamcrtdp = g_dept 
      LET g_deam_m.deamcrtdt = cl_get_current()
      LET g_deam_m.deammodid = ""
      LET g_deam_m.deammoddt = ""
      LET g_deam_m.deamstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_deam_m.deamstus = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL adet404_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_deam_m.* = g_deam_m_t.*
         CALL adet404_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_dean_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_deamdocno_t = g_deam_m.deamdocno
 
   
   LET g_wc = g_wc,  
              " OR ( deament = '" ||g_enterprise|| "' AND",
              " deamdocno = '", g_deam_m.deamdocno CLIPPED, "' "
 
              , ") "
   
   CLOSE adet404_cl
   
END FUNCTION
]]>
  </section>
  <section id="adet404.insert_b" ver="2" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION adet404_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO dean_t
                  (deanent,
                   deandocno,
                   deanseq
                   ,dean001,dean002,dean003,dean004,dean005,dean006,dean007,dean008,dean009,deansite,deanunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_dean_d[g_detail_idx].dean001,g_dean_d[g_detail_idx].dean002,g_dean_d[g_detail_idx].dean003, 
                       g_dean_d[g_detail_idx].dean004,g_dean_d[g_detail_idx].dean005,g_dean_d[g_detail_idx].dean006, 
                       g_dean_d[g_detail_idx].dean007,g_dean_d[g_detail_idx].dean008,g_dean_d[g_detail_idx].dean009, 
                       g_dean_d[g_detail_idx].deansite,g_dean_d[g_detail_idx].deanunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("dean_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="adet404.lock_b" ver="3" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION adet404_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL adet404_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "dean_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN adet404_bcl USING g_enterprise,
                                       g_deam_m.deamdocno,g_dean_d[g_detail_idx].deanseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("adet404_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="adet404.main" ver="7" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ade","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT deamsite,'',deamdocdt,deamdocno,deam001,'',deamunit,deamstus,deamownid, 
       '',deamowndp,'',deamcrtid,'',deamcrtdp,'',deamcrtdt,deammodid,'',deammoddt,deamcnfid,'',deamcnfdt", 
        
                      " FROM deam_t",
                      " WHERE deament= ? AND deamdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adet404_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE deamsite,deamdocdt,deamdocno,deam001,deamunit,deamstus,deamownid,deamowndp, 
       deamcrtid,deamcrtdp,deamcrtdt,deammodid,deammoddt,deamcnfid,deamcnfdt,t1.ooefl003 ,t2.pmaal003 , 
       t3.oofa011 ,t4.ooefl003 ,t5.oofa011 ,t6.ooefl003 ,t7.oofa011 ,t8.oofa011",
               " FROM deam_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=deamsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent='"||g_enterprise||"' AND t2.pmaal001=deam001 AND t2.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t3 ON t3.oofaent='"||g_enterprise||"' AND t3.oofa002='2' AND t3.oofa003=deamownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=deamowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t5 ON t5.oofaent='"||g_enterprise||"' AND t5.oofa002='2' AND t5.oofa003=deamcrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=deamcrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t7 ON t7.oofaent='"||g_enterprise||"' AND t7.oofa002='2' AND t7.oofa003=deammodid  ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=deamcnfid  ",
 
               " WHERE deament = '" ||g_enterprise|| "' AND deamdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE adet404_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_adet404 WITH FORM cl_ap_formpath("ade",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL adet404_init()   
 
      #進入選單 Menu (="N")
      CALL adet404_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_adet404
      
   END IF 
   
   CLOSE adet404_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="adet404.modify" ver="9" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION adet404_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_deam_m.deamdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE adet404_master_referesh USING g_deam_m.deamdocno INTO g_deam_m.deamsite,g_deam_m.deamdocdt, 
       g_deam_m.deamdocno,g_deam_m.deam001,g_deam_m.deamunit,g_deam_m.deamstus,g_deam_m.deamownid,g_deam_m.deamowndp, 
       g_deam_m.deamcrtid,g_deam_m.deamcrtdp,g_deam_m.deamcrtdt,g_deam_m.deammodid,g_deam_m.deammoddt, 
       g_deam_m.deamcnfid,g_deam_m.deamcnfdt,g_deam_m.deamsite_desc,g_deam_m.deam001_desc,g_deam_m.deamownid_desc, 
       g_deam_m.deamowndp_desc,g_deam_m.deamcrtid_desc,g_deam_m.deamcrtdp_desc,g_deam_m.deammodid_desc, 
       g_deam_m.deamcnfid_desc
 
   ERROR ""
  
   LET g_deamdocno_t = g_deam_m.deamdocno
 
   CALL s_transaction_begin()
   
   OPEN adet404_cl USING g_enterprise,g_deam_m.deamdocno
   IF STATUS THEN
      CALL cl_err("OPEN adet404_cl:", STATUS, 1)
      CLOSE adet404_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE adet404_master_referesh USING g_deam_m.deamdocno INTO g_deam_m.deamsite,g_deam_m.deamdocdt, 
       g_deam_m.deamdocno,g_deam_m.deam001,g_deam_m.deamunit,g_deam_m.deamstus,g_deam_m.deamownid,g_deam_m.deamowndp, 
       g_deam_m.deamcrtid,g_deam_m.deamcrtdp,g_deam_m.deamcrtdt,g_deam_m.deammodid,g_deam_m.deammoddt, 
       g_deam_m.deamcnfid,g_deam_m.deamcnfdt,g_deam_m.deamsite_desc,g_deam_m.deam001_desc,g_deam_m.deamownid_desc, 
       g_deam_m.deamowndp_desc,g_deam_m.deamcrtid_desc,g_deam_m.deamcrtdp_desc,g_deam_m.deammodid_desc, 
       g_deam_m.deamcnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_deam_m.deamdocno,SQLCA.sqlcode,0)
      CLOSE adet404_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL adet404_show()
   WHILE TRUE
      LET g_deamdocno_t = g_deam_m.deamdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_deam_m.deammodid = g_user 
LET g_deam_m.deammoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL adet404_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_deam_m.* = g_deam_m_t.*
         CALL adet404_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE deam_t SET (deammodid,deammoddt) = (g_deam_m.deammodid,g_deam_m.deammoddt)
       WHERE deament = g_enterprise AND deamdocno = g_deamdocno_t
 
                  
      #若單頭key欄位有變更
      IF g_deam_m.deamdocno != g_deamdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE dean_t SET deandocno = g_deam_m.deamdocno
 
          WHERE deanent = g_enterprise AND deandocno = g_deamdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("dean_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("dean_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_deam_m.deamdocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE adet404_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_deam_m.deamdocno,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="adet404.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="adet404.other_function" ver="2" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="adet404.query" ver="4" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION adet404_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_dean_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL adet404_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL adet404_browser_fill("")
      CALL adet404_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL adet404_filter_show('deamsite')
   CALL adet404_filter_show('deamdocdt')
   CALL adet404_filter_show('deamdocno')
   CALL adet404_filter_show('deam001')
   CALL adet404_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL adet404_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="adet404.reproduce" ver="5" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION adet404_reproduce()
   DEFINE l_newno     LIKE deam_t.deamdocno 
   DEFINE l_oldno     LIKE deam_t.deamdocno 
 
   DEFINE l_master    RECORD LIKE deam_t.*
   DEFINE l_detail    RECORD LIKE dean_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_deam_m.deamdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_deamdocno_t = g_deam_m.deamdocno
 
    
   LET g_deam_m.deamdocno = ""
 
    
   CALL adet404_set_entry('a')
   CALL adet404_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_deam_m.deamownid = g_user
      LET g_deam_m.deamowndp = g_dept
      LET g_deam_m.deamcrtid = g_user
      LET g_deam_m.deamcrtdp = g_dept 
      LET g_deam_m.deamcrtdt = cl_get_current()
      LET g_deam_m.deammodid = ""
      LET g_deam_m.deammoddt = ""
      LET g_deam_m.deamstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL adet404_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " deamdocno = '", g_deam_m.deamdocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="adet404.set_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION adet404_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("deamdocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="adet404.set_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION adet404_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="adet404.set_no_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION adet404_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("deamdocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="adet404.set_no_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION adet404_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="adet404.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION adet404_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_deam_m.deamdocno
   LET g_pk_array[1].column = 'deamdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="adet404.show" ver="7" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION adet404_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_deam_m_t.* = g_deam_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL adet404_b_fill() #單身填充
      CALL adet404_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_deam_m.deamownid_desc = cl_get_username(g_deam_m.deamownid)
      #LET g_deam_m.deamowndp_desc = cl_get_deptname(g_deam_m.deamowndp)
      #LET g_deam_m.deamcrtid_desc = cl_get_username(g_deam_m.deamcrtid)
      #LET g_deam_m.deamcrtdp_desc = cl_get_deptname(g_deam_m.deamcrtdp)
      #LET g_deam_m.deammodid_desc = cl_get_username(g_deam_m.deammodid)
      #LET g_deam_m.deamcnfid_desc = cl_get_deptname(g_deam_m.deamcnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL adet404_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_deam_m.deamsite,g_deam_m.deamsite_desc,g_deam_m.deamdocdt,g_deam_m.deamdocno,g_deam_m.deam001, 
       g_deam_m.deam001_desc,g_deam_m.deamunit,g_deam_m.deamstus,g_deam_m.deamownid,g_deam_m.deamownid_desc, 
       g_deam_m.deamowndp,g_deam_m.deamowndp_desc,g_deam_m.deamcrtid,g_deam_m.deamcrtid_desc,g_deam_m.deamcrtdp, 
       g_deam_m.deamcrtdp_desc,g_deam_m.deamcrtdt,g_deam_m.deammodid,g_deam_m.deammodid_desc,g_deam_m.deammoddt, 
       g_deam_m.deamcnfid,g_deam_m.deamcnfid_desc,g_deam_m.deamcnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_deam_m.deamstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "J"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/reconciliate.png")
         WHEN "K"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unreconciliate.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_dean_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL adet404_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="adet404.signature" ver="4" status="" src="s">
    <![CDATA[   #此段落由子樣板a39產生
#+ BPM提交
PRIVATE FUNCTION adet404_send()
 
   #add-point:send段define
   {<point name="send.define"/>}
   #end add-point 
 
   IF g_deam_m.deamdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #重新取得與顯示完整單據資料(最新單據資料)
   EXECUTE adet404_master_referesh USING g_deam_m.deamdocno INTO g_deam_m.deamsite,g_deam_m.deamdocdt, 
       g_deam_m.deamdocno,g_deam_m.deam001,g_deam_m.deamunit,g_deam_m.deamstus,g_deam_m.deamownid,g_deam_m.deamowndp, 
       g_deam_m.deamcrtid,g_deam_m.deamcrtdp,g_deam_m.deamcrtdt,g_deam_m.deammodid,g_deam_m.deammoddt, 
       g_deam_m.deamcnfid,g_deam_m.deamcnfdt,g_deam_m.deamsite_desc,g_deam_m.deam001_desc,g_deam_m.deamownid_desc, 
       g_deam_m.deamowndp_desc,g_deam_m.deamcrtid_desc,g_deam_m.deamcrtdp_desc,g_deam_m.deammodid_desc, 
       g_deam_m.deamcnfid_desc
 
   ERROR ""
   
   CALL s_transaction_begin()
 
   OPEN adet404_cl USING g_enterprise,g_deam_m.deamdocno
   IF STATUS THEN
      CALL cl_err("OPEN adet404_cl:", STATUS, 1)
      CLOSE adet404_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH adet404_cl INTO g_deam_m.deamsite,g_deam_m.deamsite_desc,g_deam_m.deamdocdt,g_deam_m.deamdocno, 
       g_deam_m.deam001,g_deam_m.deam001_desc,g_deam_m.deamunit,g_deam_m.deamstus,g_deam_m.deamownid, 
       g_deam_m.deamownid_desc,g_deam_m.deamowndp,g_deam_m.deamowndp_desc,g_deam_m.deamcrtid,g_deam_m.deamcrtid_desc, 
       g_deam_m.deamcrtdp,g_deam_m.deamcrtdp_desc,g_deam_m.deamcrtdt,g_deam_m.deammodid,g_deam_m.deammodid_desc, 
       g_deam_m.deammoddt,g_deam_m.deamcnfid,g_deam_m.deamcnfid_desc,g_deam_m.deamcnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_deam_m.deamdocno,SQLCA.sqlcode,0)
      CLOSE adet404_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL adet404_show()
   CALL adet404_set_pk_array()
   
   #add-point: 提交前的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_deam_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_dean_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      CLOSE adet404_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
   
   #完成狀態更新
   CLOSE adet404_cl
   CALL s_transaction_end('Y','0')
             
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL adet404_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_row].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL adet404_ui_headershow()
   CALL adet404_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#此段落由子樣板a40產生
#+ BPM抽單
PRIVATE FUNCTION adet404_draw_out()
 
   #add-point:draw段define
   {<point name="draw.define"/>}
   #end add-point
 
   #檢查資料是否存在
   IF g_deam_m.deamdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #LOCK主檔資料
   CALL s_transaction_begin()
 
   #進行BPM抽單功能
   OPEN adet404_cl USING g_enterprise,g_deam_m.deamdocno
   IF STATUS THEN
      CALL cl_err("OPEN adet404_cl:", STATUS, 1)
      CLOSE adet404_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH adet404_cl INTO g_deam_m.deamsite,g_deam_m.deamsite_desc,g_deam_m.deamdocdt,g_deam_m.deamdocno, 
       g_deam_m.deam001,g_deam_m.deam001_desc,g_deam_m.deamunit,g_deam_m.deamstus,g_deam_m.deamownid, 
       g_deam_m.deamownid_desc,g_deam_m.deamowndp,g_deam_m.deamowndp_desc,g_deam_m.deamcrtid,g_deam_m.deamcrtid_desc, 
       g_deam_m.deamcrtdp,g_deam_m.deamcrtdp_desc,g_deam_m.deamcrtdt,g_deam_m.deammodid,g_deam_m.deammodid_desc, 
       g_deam_m.deammoddt,g_deam_m.deamcnfid,g_deam_m.deamcnfid_desc,g_deam_m.deamcnfdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_deam_m.deamdocno,SQLCA.sqlcode,0)
      CLOSE adet404_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      CLOSE adet404_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF    
 
   #完成狀態更新
   CLOSE adet404_cl
   CALL s_transaction_end('Y','0')
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL adet404_ui_headershow()  
   CALL adet404_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="adet404.state_change" ver="8" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION adet404_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_deam_m.deamdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_deam_m.deamstus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "J"
               HIDE OPTION "reconciliate"
            WHEN "K"
               HIDE OPTION "unreconciliate"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION approved
         LET lc_state = "A"
         #add-point:action控制
         {<point name="statechange.approved"/>}
         #end add-point
         EXIT MENU
      #ON ACTION withdraw
      #   LET lc_state = "D"
      #   #add-point:action控制
      #   {<point name="statechange.withdraw"/>}
      #   #end add-point
      #   EXIT MENU
      ON ACTION rejection
         LET lc_state = "R"
         #add-point:action控制
         {<point name="statechange.rejection"/>}
         #end add-point
         EXIT MENU
      #ON ACTION signing
      #   LET lc_state = "W"
      #   #add-point:action控制
      #   {<point name="statechange.signing"/>}
      #   #end add-point
      #   EXIT MENU
      ON ACTION reconciliate
         LET lc_state = "J"
         #add-point:action控制
         {<point name="statechange.reconciliate"/>}
         #end add-point
         EXIT MENU
      ON ACTION unreconciliate
         LET lc_state = "K"
         #add-point:action控制
         {<point name="statechange.unreconciliate"/>}
         #end add-point
         EXIT MENU
      
      #此段落由子樣板a36產生
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT adet404_send() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_send()已有執行update動作
 
         EXIT MENU
 
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT adet404_draw_out() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_draw_out()已有執行update動作
         EXIT MENU
 
 
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "J"
      AND lc_state <> "K"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE deam_t SET deamstus = lc_state 
    WHERE deament = g_enterprise AND deamdocno = g_deam_m.deamdocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "J"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/reconciliate.png")
         WHEN "K"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unreconciliate.png")
         
      END CASE
      LET g_deam_m.deamstus = lc_state
      DISPLAY BY NAME g_deam_m.deamstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="adet404.ui_browser_refresh" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION adet404_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_deamdocno = g_deam_m.deamdocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="adet404.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION adet404_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="adet404.ui_dialog" ver="11" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION adet404_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL adet404_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL adet404_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_deamdocno = g_deamdocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL adet404_fetch('') # reload data
               LET l_ac = 1
               CALL adet404_ui_detailshow() #Setting the current row 
      
               CALL adet404_idx_chk()
               #NEXT FIELD deanseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_dean_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL adet404_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL adet404_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL adet404_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL adet404_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL adet404_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL adet404_statechange()
            EXIT DIALOG
      
         #此段落由子樣板a32產生
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
 
 
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL adet404_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL adet404_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL adet404_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL adet404_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL adet404_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet404_idx_chk()
            
         ON ACTION previous
            CALL adet404_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet404_idx_chk()
            
         ON ACTION jump
            CALL adet404_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet404_idx_chk()
            
         ON ACTION next
            CALL adet404_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet404_idx_chk()
            
         ON ACTION last
            CALL adet404_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adet404_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD deanseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL adet404_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL adet404_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL adet404_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL adet404_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL adet404_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL adet404_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL adet404_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL adet404_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL adet404_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_deam_m.deamdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="adet404.ui_headershow" ver="3" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION adet404_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_deam_m.deamdocno = g_browser[g_current_idx].b_deamdocno   
 
   EXECUTE adet404_master_referesh USING g_deam_m.deamdocno INTO g_deam_m.deamsite,g_deam_m.deamdocdt, 
       g_deam_m.deamdocno,g_deam_m.deam001,g_deam_m.deamunit,g_deam_m.deamstus,g_deam_m.deamownid,g_deam_m.deamowndp, 
       g_deam_m.deamcrtid,g_deam_m.deamcrtdp,g_deam_m.deamcrtdt,g_deam_m.deammodid,g_deam_m.deammoddt, 
       g_deam_m.deamcnfid,g_deam_m.deamcnfdt,g_deam_m.deamsite_desc,g_deam_m.deam001_desc,g_deam_m.deamownid_desc, 
       g_deam_m.deamowndp_desc,g_deam_m.deamcrtid_desc,g_deam_m.deamcrtdp_desc,g_deam_m.deammodid_desc, 
       g_deam_m.deamcnfid_desc
   CALL adet404_show()
   
END FUNCTION
]]>
  </section>
  <section id="adet404.unlock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION adet404_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adet404_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="adet404.update_b" ver="2" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION adet404_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "dean_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE dean_t 
         SET (deandocno,
              deanseq
              ,dean001,dean002,dean003,dean004,dean005,dean006,dean007,dean008,dean009,deansite,deanunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_dean_d[g_detail_idx].dean001,g_dean_d[g_detail_idx].dean002,g_dean_d[g_detail_idx].dean003, 
                  g_dean_d[g_detail_idx].dean004,g_dean_d[g_detail_idx].dean005,g_dean_d[g_detail_idx].dean006, 
                  g_dean_d[g_detail_idx].dean007,g_dean_d[g_detail_idx].dean008,g_dean_d[g_detail_idx].dean009, 
                  g_dean_d[g_detail_idx].deansite,g_dean_d[g_detail_idx].deanunit) 
         WHERE deanent = g_enterprise AND deandocno = ps_keys_bak[1] AND deanseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("dean_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("dean_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
