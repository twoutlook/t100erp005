#該程式未解開Section, 採用最新樣板產出!
{<section id="aisp511.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0003(2016-01-15 15:16:04), PR版次:0003(2016-10-21 18:10:55)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000029
#+ Filename...: aisp511
#+ Description: 電子發票匯出紀錄批次刪除作業
#+ Creator....: 05016(2016-01-14 10:51:07)
#+ Modifier...: 05016 -SD/PR- 04152
 
{</section>}
 
{<section id="aisp511.global" >}
#應用 p01 樣板自動產生(Version:18)
#add-point:填寫註解說明
#161006-00005#26 2016/10/21 By Reanna   法人統編增加azzi800控卡
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE g_chk_jobid          LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       isav002 LIKE type_t.chr500, 
   type LIKE type_t.chr500, 
   date LIKE type_t.dat, 
   mon LIKE type_t.chr500, 
   couction LIKE type_t.chr500, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
DEFINE g_wc_ooef017  STRING     #161006-00005#26
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
 
#add-point:傳入參數說明

#end add-point
 
{</section>}
 
{<section id="aisp511.main" >}
MAIN
   #add-point:main段define (客製用)
   
   #end add-point 
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define 
   
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ais","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   
   #end add-point
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
     #CALL util.JSON.parse(ls_js,g_master)   #p類主要使用l_param,此處不解析
      #add-point:Service Call
      
      #end add-point
      CALL aisp511_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aisp511 WITH FORM cl_ap_formpath("ais",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL aisp511_init()
 
      #進入選單 Menu (="N")
      CALL aisp511_ui_dialog()
 
      #add-point:畫面關閉前
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_aisp511
   END IF
 
   #add-point:作業離開前
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="aisp511.init" >}
#+ 初始化作業
PRIVATE FUNCTION aisp511_init()
 
   #add-point:init段define (客製用)
   
   #end add-point
   #add-point:ui_dialog段define 
 
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   CALL s_fin_create_account_center_tmp()  #161006-00005#26
   CALL aisp511_default() 
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="aisp511.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aisp511_ui_dialog()
 
   #add-point:ui_dialog段define (客製用)
   
   #end add-point
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define 
   
   #end add-point
   
   #add-point:ui_dialog段before dialog
   
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:3)
         INPUT BY NAME g_master.isav002,g_master.type,g_master.date,g_master.mon,g_master.couction 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前 name="input.m.before_input"
               
               #end add-point
         
                     #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isav002
            #add-point:BEFORE FIELD isav002 name="input.b.isav002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isav002
            
            #add-point:AFTER FIELD isav002 name="input.a.isav002"
            IF NOT cl_null(g_master.isav002) THEN           
               CALL aisp511_isav002_chk(g_master.isav002) RETURNING g_sub_success,g_errno 
               IF NOT g_sub_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_master.isav002 = ''
                  NEXT FIELD CURRENT
               END IF           
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE isav002
            #add-point:ON CHANGE isav002 name="input.g.isav002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD type
            #add-point:BEFORE FIELD type name="input.b.type"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD type
            
            #add-point:AFTER FIELD type name="input.a.type"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE type
            #add-point:ON CHANGE type name="input.g.type"
            CALL cl_set_comp_entry('date,mon', TRUE)
            IF g_master.type = 1 THEN
               LET g_master.date = g_today
               LET g_master.mon = ''
               CALL cl_set_comp_entry('mon',FALSE)
            ELSE
               LET g_master.mon = MONTH(g_today)
               LET g_master.date = ''
               CALL cl_set_comp_entry('date',FALSE)
            END IF
            DISPLAY BY NAME g_master.date,g_master.date
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD date
            #add-point:BEFORE FIELD date name="input.b.date"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD date
            
            #add-point:AFTER FIELD date name="input.a.date"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE date
            #add-point:ON CHANGE date name="input.g.date"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mon
            #add-point:BEFORE FIELD mon name="input.b.mon"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mon
            
            #add-point:AFTER FIELD mon name="input.a.mon"
            IF NOT cl_ap_chk_range(g_master.mon,"0","0","12","1","azz-00087",1) THEN
               NEXT FIELD mon
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mon
            #add-point:ON CHANGE mon name="input.g.mon"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD couction
            #add-point:BEFORE FIELD couction name="input.b.couction"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD couction
            
            #add-point:AFTER FIELD couction name="input.a.couction"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE couction
            #add-point:ON CHANGE couction name="input.g.couction"
            
            #END add-point 
 
 
 
                     #Ctrlp:input.c.isav002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isav002
            #add-point:ON ACTION controlp INFIELD isav002 name="input.c.isav002"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_master.isav002
            #LET g_qryparam.where = " ooef003 = 'Y' AND ooef001 IN (SELECT DISTINCT isaosite FROM isao_t ) " #161006-00005#26 mark
            #161006-00005#26 add ------
            LET g_qryparam.where = " ooef003 = 'Y' AND ooef001 IN (SELECT isaa001 FROM isaa_t WHERE isaaent = ",g_enterprise,
                                   "                                  AND (isaa009 = ooef001 OR isaa001 = ooef001 ))"
            LET g_qryparam.where = g_qryparam.where ," AND ooef001 IN ",g_wc_ooef017 CLIPPED
            #161006-00005#26 add end---
            CALL q_ooef001_02()
            LET g_master.isav002 = g_qryparam.return2
            DISPLAY BY NAME g_master.isav002
            NEXT FIELD isav002
            #END add-point
 
 
         #Ctrlp:input.c.type
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD type
            #add-point:ON ACTION controlp INFIELD type name="input.c.type"
            
            #END add-point
 
 
         #Ctrlp:input.c.date
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD date
            #add-point:ON ACTION controlp INFIELD date name="input.c.date"
            
            #END add-point
 
 
         #Ctrlp:input.c.mon
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mon
            #add-point:ON ACTION controlp INFIELD mon name="input.c.mon"
            
            #END add-point
 
 
         #Ctrlp:input.c.couction
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD couction
            #add-point:ON ACTION controlp INFIELD couction name="input.c.couction"
            
            #END add-point
 
 
 
               
            AFTER INPUT
               #add-point:資料輸入後 name="input.m.after_input"
               
               #end add-point
               
            #add-point:其他管控(on row change, etc...) name="input.other"
            
            #end add-point
         END INPUT
 
 
 
         
         
      
         #add-point:ui_dialog段construct
         
         #end add-point
         #add-point:ui_dialog段input
         
         #end add-point
         #add-point:ui_dialog段自定義display array
         
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL aisp511_get_buffer(l_dialog)
            #add-point:ui_dialog段before dialog
            
            #end add-point
 
         ON ACTION batch_execute
            LET g_action_choice = "batch_execute"
            ACCEPT DIALOG
 
         #add-point:ui_dialog段before_qbeclear
         
         #end add-point
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear
            CALL aisp511_default()
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL aisp511_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
      
      LET lc_param.wc = g_master.wc    #把畫面上的wc傳遞到參數變數
      #請在下方的add-point內進行把畫面的輸入資料(g_master)轉換到傳遞參數變數(lc_param)的動作
      #add-point:ui_dialog段exit dialog
      
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL aisp511_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = aisp511_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
 
{</section>}
 
{<section id="aisp511.transfer_argv" >}
#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION aisp511_transfer_argv(ls_js)
 
   #add-point:transfer_agrv段define (客製用)
   
   #end add-point
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define 
   
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容
   
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
 
{</section>}
 
{<section id="aisp511.process" >}
#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION aisp511_process(ls_js)
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_p01_status LIKE type_t.num5
   #add-point:process段define 
   DEFINE l_date        LIKE isav_t.isav004 
   DEFINE l_month       LIKE type_t.num5
   DEFINE l_year        LIKE type_t.num5
   #end add-point
 
  #INITIALIZE lc_param TO NULL           #p類不可以清空
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
   LET li_p01_status = 1
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理
   
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE aisp511_process_cs CURSOR FROM ls_sql
#  FOREACH aisp511_process_cs INTO
   #add-point:process段process
   CASE g_master.type
      WHEN 1
         LET l_date = g_master.date
      WHEN 2
        #刪除?月底前的資料
        LET l_month = MONTH(g_today)
        LET l_year = YEAR(g_today)
        LET l_month = l_month - g_master.mon
        IF l_month < 0 THEN          
           LET l_month = 12 + l_month
           LET l_year = l_year - 1
        END IF
        IF l_month = 0 THEN
           LET l_month = 12
           LET l_year = l_year - 1
        END IF
        LET l_date = MDY(l_month,1,l_year)
        #取得當月最後一天
        CALL s_date_get_last_date(l_date) RETURNING l_date        
   END CASE
   
   DELETE FROM isav_t 
    WHERE isavent = g_enterprise AND isav002 = g_master.isav002
      AND isav004 <= l_date
   IF SQLCA.sqlerrd[3] = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ais-00262'
      LET g_errparam.extend = 'DELETE isav_t'
      LET g_errparam.popup = TRUE
      CALL cl_err()
   END IF    
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      
      #end add-point
      CALL cl_schedule_exec_call(li_p01_status)
   END IF
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL aisp511_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="aisp511.get_buffer" >}
PRIVATE FUNCTION aisp511_get_buffer(p_dialog)
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE p_dialog   ui.DIALOG
   #add-point:process段define
   
   #end add-point
 
   
   LET g_master.isav002 = p_dialog.getFieldBuffer('isav002')
   LET g_master.type = p_dialog.getFieldBuffer('type')
   LET g_master.date = p_dialog.getFieldBuffer('date')
   LET g_master.mon = p_dialog.getFieldBuffer('mon')
   LET g_master.couction = p_dialog.getFieldBuffer('couction')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="aisp511.msgcentre_notify" >}
PRIVATE FUNCTION aisp511_msgcentre_notify()
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE lc_state LIKE type_t.chr5
   #add-point:process段define
   
   #end add-point
 
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = "process"
 
   #add-point:msgcentre其他通知
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="aisp511.other_function" readonly="Y" >}
#add-point:自定義元件(Function)

################################################################################
# Descriptions...: 預設
# Memo...........:
# Usage..........: CALL aisp511_default()
# Date & Author..: 2016/01/14 By Hans
# Modify.........:
################################################################################
PRIVATE FUNCTION aisp511_default()
DEFINE l_coution STRING
DEFINE l_str1  LIKE gzzd_t.gzzd005
DEFINE l_str2  LIKE gzzd_t.gzzd005

   LET g_master.type = 1
   LET g_master.date = g_today
   LET g_master.mon = ''
   
   CALL cl_set_comp_entry('date,mon', TRUE)
   IF g_master.type = 1 THEN
      CALL cl_set_comp_entry('mon',FALSE)
   ELSE
      CALL cl_set_comp_entry('date',FALSE)
   END IF
   SELECT gzzd005 INTO l_str1 FROM gzzd_t WHERE gzzd003 = 'lbl_str1' AND gzzd002 = g_dlang AND gzzd001 = 'aisp511'
   SELECT gzzd005 INTO l_str2 FROM gzzd_t WHERE gzzd003 = 'lbl_str2' AND gzzd002 = g_dlang AND gzzd001 = 'aisp511'
   LET l_coution = l_str1,'\n',l_str2   
   LET g_master.couction = l_coution
   
   #161006-00005#26 add ------
   CALL s_fin_account_center_sons_query('3',g_site,g_today,'')
   CALL s_fin_account_center_comp_str() RETURNING g_wc_ooef017
   CALL s_fin_get_wc_str(g_wc_ooef017) RETURNING g_wc_ooef017
   #161006-00005#26 add end---
   
   DISPLAY BY NAME g_master.type,g_master.date,g_master.couction
END FUNCTION

################################################################################
# Descriptions...: 統一編碼檢核
# Memo...........:
# Usage..........: CALL aisp511_isav002_chk(p_isav002)
# Date & Author..: 2016/01/15 By Hans
# Modify.........:
################################################################################
PRIVATE FUNCTION aisp511_isav002_chk(p_isav002)
DEFINE l_count      LIKE type_t.num5
DEFINE p_isav002    LIKE isav_t.isav002
DEFINE r_success    LIKE type_t.num5
DEFINE r_errno      LIKE gzze_t.gzze001

   LET r_success = TRUE   LET r_errno = ''
   LET l_count = 0 
   SELECT COUNT(*) INTO l_count
     FROM ooef_t,isao_t
    WHERE ooefent = isaoent AND isaoent =g_enterprise
      AND isaosite = ooef001 AND ooef002 = p_isav002 
      AND ooef003 = 'Y'
      
   IF cl_null(l_count) THEN LET l_count = 0 END IF
   
   IF l_count = 0 THEN
      LET r_success = FALSE
      LET r_errno = 'ais-00260'
   END IF

   RETURN r_success,r_errno
   
END FUNCTION

#end add-point
 
{</section>}
 
