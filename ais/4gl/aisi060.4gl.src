#該程式未解開Section, 採用最新樣板產出!
{<section id="aisi060.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0007(2016-03-03 17:13:00), PR版次:0007(1900-01-01 00:00:00)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000222
#+ Filename...: aisi060
#+ Description: 稅別公式設定作業
#+ Creator....: 02295(2013-12-30 10:35:01)
#+ Modifier...: 04152 -SD/PR- 00000
 
{</section>}
 
{<section id="aisi060.global" >}
#應用 i07 樣板自動產生(Version:49)
#add-point:填寫註解說明 name="global.memo"
#Memos
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_isan_m        RECORD
       isan001 LIKE isan_t.isan001, 
   isan001_desc LIKE type_t.chr80, 
   isan002 LIKE isan_t.isan002, 
   isanl004 LIKE isanl_t.isanl004
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_isan_d        RECORD
       isan003 LIKE isan_t.isan003, 
   isan004 LIKE isan_t.isan004, 
   isan005 LIKE isan_t.isan005, 
   isan006 LIKE isan_t.isan006, 
   isan007 LIKE isan_t.isan007, 
   isan008 LIKE isan_t.isan008, 
   isan009 LIKE isan_t.isan009, 
   isanstus LIKE isan_t.isanstus
       END RECORD
PRIVATE TYPE type_g_isan2_d RECORD
       isan003 LIKE isan_t.isan003, 
   isanownid LIKE isan_t.isanownid, 
   isanownid_desc LIKE type_t.chr500, 
   isanowndp LIKE isan_t.isanowndp, 
   isanowndp_desc LIKE type_t.chr500, 
   isancrtid LIKE isan_t.isancrtid, 
   isancrtid_desc LIKE type_t.chr500, 
   isancrtdp LIKE isan_t.isancrtdp, 
   isancrtdp_desc LIKE type_t.chr500, 
   isancrtdt DATETIME YEAR TO SECOND, 
   isanmodid LIKE isan_t.isanmodid, 
   isanmodid_desc LIKE type_t.chr500, 
   isanmoddt DATETIME YEAR TO SECOND
       END RECORD
 
 
#add-point:自定義模組變數(Module Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
#單身 type 宣告
PRIVATE TYPE type_g_gzcb_d        RECORD
   gzcb002 LIKE gzcb_t.gzcb002, 
   gzcbl004 LIKE gzcbl_t.gzcbl004
       END RECORD
DEFINE g_gzcb_d          DYNAMIC ARRAY OF type_g_gzcb_d   
DEFINE g_rec_b2              LIKE type_t.num5           
DEFINE l_ac2                 LIKE type_t.num5 
#end add-point
 
DEFINE g_master_multi_table_t    RECORD
      isanl001 LIKE isanl_t.isanl001,
      isanl002 LIKE isanl_t.isanl002,
      isanl004 LIKE isanl_t.isanl004
      END RECORD
 
#模組變數(Module Variables)
DEFINE g_isan_m          type_g_isan_m
DEFINE g_isan_m_t        type_g_isan_m
DEFINE g_isan_m_o        type_g_isan_m
DEFINE g_isan_m_mask_o   type_g_isan_m #轉換遮罩前資料
DEFINE g_isan_m_mask_n   type_g_isan_m #轉換遮罩後資料
 
   DEFINE g_isan001_t LIKE isan_t.isan001
DEFINE g_isan002_t LIKE isan_t.isan002
 
 
DEFINE g_isan_d          DYNAMIC ARRAY OF type_g_isan_d
DEFINE g_isan_d_t        type_g_isan_d
DEFINE g_isan_d_o        type_g_isan_d
DEFINE g_isan_d_mask_o   DYNAMIC ARRAY OF type_g_isan_d #轉換遮罩前資料
DEFINE g_isan_d_mask_n   DYNAMIC ARRAY OF type_g_isan_d #轉換遮罩後資料
DEFINE g_isan2_d   DYNAMIC ARRAY OF type_g_isan2_d
DEFINE g_isan2_d_t type_g_isan2_d
DEFINE g_isan2_d_o type_g_isan2_d
DEFINE g_isan2_d_mask_o   DYNAMIC ARRAY OF type_g_isan2_d #轉換遮罩前資料
DEFINE g_isan2_d_mask_n   DYNAMIC ARRAY OF type_g_isan2_d #轉換遮罩後資料
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_isan001 LIKE isan_t.isan001,
   b_isan001_desc LIKE type_t.chr80,
      b_isan002 LIKE isan_t.isan002
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num10             #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10             #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10             #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10             #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10             #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10             #Browser目前所在筆數(暫存用)
DEFINE g_current_page        LIKE type_t.num10             #目前所在頁數
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num10             #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入(僅用於三階)
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="aisi060.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ais","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT isan001,'',isan002,''", 
                      " FROM isan_t",
                      " WHERE isanent= ? AND isan001=? AND isan002=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aisi060_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.isan001,t0.isan002,t1.ooall004",
               " FROM isan_t t0",
                              " LEFT JOIN ooall_t t1 ON t1.ooallent="||g_enterprise||" AND t1.ooall001='2' AND t1.ooall002=t0.isan001 AND t1.ooall003='"||g_dlang||"' ",
 
               " WHERE t0.isanent = " ||g_enterprise|| " AND t0.isan001 = ? AND t0.isan002 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE aisi060_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aisi060 WITH FORM cl_ap_formpath("ais",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aisi060_init()   
 
      #進入選單 Menu (="N")
      CALL aisi060_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aisi060
      
   END IF 
   
   CLOSE aisi060_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="aisi060.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aisi060_init()
   #add-point:init段define name="init.define_customerization"
   
   #end add-point   
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
      CALL cl_set_combo_scc('isan004','9723') 
   CALL cl_set_combo_scc('isan005','9724') 
 
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化 name="init.init"
   
   #end add-point
   
   CALL aisi060_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="aisi060.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION aisi060_ui_dialog()
   #add-point:ui_dialog段define name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE la_param  RECORD
          prog                  STRING,
          actionid              STRING,
          background            LIKE type_t.chr1,
          param                 DYNAMIC ARRAY OF STRING
                                END RECORD
   DEFINE ls_js                 STRING
   DEFINE li_idx                LIKE type_t.num10
   DEFINE ls_wc                 STRING
   DEFINE lb_first              BOOLEAN
   DEFINE l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0 
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   CALL aisi060_gzcb_fill()
   #end add-point
   
   WHILE TRUE
      
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_isan_m.* TO NULL
         CALL g_isan_d.clear()
         CALL g_isan2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL aisi060_init()
      END IF
 
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
         
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
               
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               LET g_curr_diag = ui.DIALOG.getCurrent()
               CALL aisi060_idx_chk()
               CALL aisi060_fetch('') # reload data
               LET g_detail_idx = 1
               CALL aisi060_ui_detailshow() #Setting the current row 
         
            ON ACTION qbefield_user   #欄位隱藏設定 
               LET g_action_choice="qbefield_user"
               CALL cl_ui_qbefield_user()
         
         END DISPLAY
        
         DISPLAY ARRAY g_isan_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               #顯示單身筆數
               CALL aisi060_idx_chk()
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               CALL aisi060_ui_detailshow()
               
               #add-point:page1自定義行為 name="ui_dialog.body.before_row"
               
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
    
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_isan2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_curr_diag = ui.DIALOG.getCurrent()
               CALL aisi060_idx_chk()
               CALL aisi060_ui_detailshow()
               
               #add-point:page1自定義行為 name="ui_dialog.body2.before_row"
               
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'     
               LET g_current_page = 2
            
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         DISPLAY ARRAY g_gzcb_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b2)  
         
            BEFORE ROW
               LET l_ac2 = DIALOG.getCurrentRow("s_detail2")
               #LET g_detail_idx = l_ac
               #DISPLAY g_detail_idx TO FORMONLY.idx
               #CALL aisi060_ui_detailshow()
               
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(l_ac2)      
            
            
         
            #add-point:page2自定義行為

            #end add-point
         
         END DISPLAY
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps 
         
         BEFORE DIALOG
            #先填充browser資料
            CALL aisi060_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aisi060_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aisi060_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL aisi060_filter()
               EXIT DIALOG
 
 
 
    
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL aisi060_fetch('F')
            LET g_current_row = g_current_idx         
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aisi060_idx_chk()
            LET g_action_choice = ""
          
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL aisi060_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aisi060_idx_chk()
            LET g_action_choice = ""
          
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL aisi060_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aisi060_idx_chk()
            LET g_action_choice = ""
        
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL aisi060_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aisi060_idx_chk()
            LET g_action_choice = ""
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL aisi060_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aisi060_idx_chk()
            LET g_action_choice = ""
            
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_isan_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_isan2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD isan003
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aisi060_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aisi060_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLEAR FORM
               ELSE
                  CALL aisi060_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aisi060_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aisi060_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aisi060_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aisi060_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aisi060_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aisi060_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
 
            END IF
 
 
 
 
         
         
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL aisi060_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aisi060_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aisi060_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
         CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.browser_search" >}
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aisi060_browser_search(p_type)
   #add-point:browser_search段define name="browser_search.define_customerization"
   
   #end add-point   
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_search.define"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="aisi060.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aisi060_browser_fill(ps_page_action)
   #add-point:browser_fill段define name="browser_fill.define_customerization"
   
   #end add-point   
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="browser_fill.before_browser_fill"
   
   #end add-point    
 
   LET l_searchcol = "isan001,isan002"
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT isan001 ",
                      ", isan002 ",
 
                      " FROM isan_t ",
                      " LEFT JOIN isanl_t ON isanlent = "||g_enterprise||" AND isan001 = isanl001 AND isan002 = isanl002 AND isanl003 = '",g_dlang,"' ",
                      " ", 
 
 
 
                      " WHERE isanent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("isan_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT isan001 ",
                      ", isan002 ",
 
                      " FROM isan_t ",
                      " LEFT JOIN isanl_t ON isanlent = "||g_enterprise||" AND isan001 = isanl001 AND isan002 = isanl002 AND isanl003 = '",g_dlang,"' ",
                      " ", 
 
 
                      " WHERE isanent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("isan_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt 
         LET g_errparam.code   = 9035
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   LET g_error_show = 0
 
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_isan_m.* TO NULL
      CALL g_isan_d.clear()        
      CALL g_isan2_d.clear() 
 
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.isan001,t0.isan002 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT t0.isan001,t0.isan002,t1.ooall004",
                " FROM isan_t t0",
                #" LEFT JOIN isanl_t ON isanlent = "||g_enterprise||" AND isan001 = isanl001 AND isan002 = isanl002 AND isanl003 = '",g_dlang,"' ",
                " ",
 
 
 
                               " LEFT JOIN ooall_t t1 ON t1.ooallent="||g_enterprise||" AND t1.ooall001='2' AND t1.ooall002=t0.isan001 AND t1.ooall003='"||g_dlang||"' ",
 
               " LEFT JOIN isanl_t ON isanlent = "||g_enterprise||" AND isan001 = isanl001 AND isan002 = isanl002 AND isanl003 = '",g_dlang,"' ",
                " WHERE t0.isanent = " ||g_enterprise|| " AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("isan_t")
 
   #add-point:browser_fill,sql_rank前 name="browser_fill.before_sql_rank"
   
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前 name="browser_fill.before_pre"
   
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"isan_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_isan001,g_browser[g_cnt].b_isan002,g_browser[g_cnt].b_isan001_desc  
 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
         
         
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point  
      
         #遮罩相關處理
         CALL aisi060_browser_mask()
         
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
      END FOREACH
      FREE browse_pre
   END IF
 
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_isan001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_isan_m.* TO NULL
      CALL g_isan_d.clear()
      CALL g_isan2_d.clear()
 
      #add-point:browser_fill段after_clear name="browser_fill.after_clear"
      
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   LET g_browser_cnt = g_browser.getLength()
   CALL aisi060_fetch('')
   
   #筆數顯示
   LET g_browser_idx = g_current_idx 
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION aisi060_ui_headershow()
   #add-point:ui_headershow段define name="ui_headershow.define_customerization"
   
   #end add-point    
   #add-point:ui_headershow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_isan_m.isan001 = g_browser[g_current_idx].b_isan001   
   LET g_isan_m.isan002 = g_browser[g_current_idx].b_isan002   
 
   EXECUTE aisi060_master_referesh USING g_isan_m.isan001,g_isan_m.isan002 INTO g_isan_m.isan001,g_isan_m.isan002, 
       g_isan_m.isan001_desc
   CALL aisi060_show()
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION aisi060_ui_detailshow()
   #add-point:ui_detailshow段define name="ui_detailshow.define_customerization"
   
   #end add-point
   #add-point:ui_detailshow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_detailshow.before"
   
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
      #add-point:ui_detailshow段more name="ui_detailshow.more"
      
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aisi060_ui_browser_refresh()
   #add-point:ui_browser_refresh段define name="ui_browser_refresh.define_customerization"
   
   #end add-point   
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_isan001 = g_isan_m.isan001 
         AND g_browser[l_i].b_isan002 = g_isan_m.isan002 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION aisi060_construct()
   #add-point:cs段define name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   DEFINE l_str       STRING
   #end add-point 
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
   
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_isan_m.* TO NULL
   CALL g_isan_d.clear()
   CALL g_isan2_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外 name="cs.head.before"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON isan001,isan002,isanl004
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.head.before_construct"
            
            #end add-point 
            
                 #Ctrlp:construct.c.isan001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isan001
            #add-point:ON ACTION controlp INFIELD isan001 name="construct.c.isan001"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooal002_11()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO isan001  #顯示到畫面上

            NEXT FIELD isan001                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isan001
            #add-point:BEFORE FIELD isan001 name="construct.b.isan001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isan001
            
            #add-point:AFTER FIELD isan001 name="construct.a.isan001"
            CALL FGL_DIALOG_GETBUFFER() RETURNING l_str
            #END add-point
            
 
 
         #Ctrlp:construct.c.isan002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isan002
            #add-point:ON ACTION controlp INFIELD isan002 name="construct.c.isan002"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			IF l_str is not null THEN
               CALL aisi060_isan001_str(l_str) RETURNING l_str			
			   LET g_qryparam.where = " isan001 IN(",l_str,")"
			END if
            CALL q_isan002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO isan002  #顯示到畫面上

            NEXT FIELD isan002                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isan002
            #add-point:BEFORE FIELD isan002 name="construct.b.isan002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isan002
            
            #add-point:AFTER FIELD isan002 name="construct.a.isan002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isanl004
            #add-point:BEFORE FIELD isanl004 name="construct.b.isanl004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isanl004
            
            #add-point:AFTER FIELD isanl004 name="construct.a.isanl004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.isanl004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isanl004
            #add-point:ON ACTION controlp INFIELD isanl004 name="construct.c.isanl004"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON isan003,isan004,isan005,isan006,isan007,isan008,isan009,isanstus,isanownid, 
          isanowndp,isancrtid,isancrtdp,isancrtdt,isanmodid,isanmoddt
           FROM s_detail1[1].isan003,s_detail1[1].isan004,s_detail1[1].isan005,s_detail1[1].isan006, 
               s_detail1[1].isan007,s_detail1[1].isan008,s_detail1[1].isan009,s_detail1[1].isanstus, 
               s_detail2[1].isanownid,s_detail2[1].isanowndp,s_detail2[1].isancrtid,s_detail2[1].isancrtdp, 
               s_detail2[1].isancrtdt,s_detail2[1].isanmodid,s_detail2[1].isanmoddt
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.body.before_construct"
            
            #end add-point 
            
         #單身公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<isancrtdt>>----
         AFTER FIELD isancrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<isanmoddt>>----
         AFTER FIELD isanmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<isancnfdt>>----
         
         #----<<isanpstdt>>----
 
 
 
           
         #單身一般欄位開窗相關處理
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isan003
            #add-point:BEFORE FIELD isan003 name="construct.b.page1.isan003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isan003
            
            #add-point:AFTER FIELD isan003 name="construct.a.page1.isan003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.isan003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isan003
            #add-point:ON ACTION controlp INFIELD isan003 name="construct.c.page1.isan003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isan004
            #add-point:BEFORE FIELD isan004 name="construct.b.page1.isan004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isan004
            
            #add-point:AFTER FIELD isan004 name="construct.a.page1.isan004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.isan004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isan004
            #add-point:ON ACTION controlp INFIELD isan004 name="construct.c.page1.isan004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isan005
            #add-point:BEFORE FIELD isan005 name="construct.b.page1.isan005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isan005
            
            #add-point:AFTER FIELD isan005 name="construct.a.page1.isan005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.isan005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isan005
            #add-point:ON ACTION controlp INFIELD isan005 name="construct.c.page1.isan005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isan006
            #add-point:BEFORE FIELD isan006 name="construct.b.page1.isan006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isan006
            
            #add-point:AFTER FIELD isan006 name="construct.a.page1.isan006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.isan006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isan006
            #add-point:ON ACTION controlp INFIELD isan006 name="construct.c.page1.isan006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isan007
            #add-point:BEFORE FIELD isan007 name="construct.b.page1.isan007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isan007
            
            #add-point:AFTER FIELD isan007 name="construct.a.page1.isan007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.isan007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isan007
            #add-point:ON ACTION controlp INFIELD isan007 name="construct.c.page1.isan007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isan008
            #add-point:BEFORE FIELD isan008 name="construct.b.page1.isan008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isan008
            
            #add-point:AFTER FIELD isan008 name="construct.a.page1.isan008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.isan008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isan008
            #add-point:ON ACTION controlp INFIELD isan008 name="construct.c.page1.isan008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isan009
            #add-point:BEFORE FIELD isan009 name="construct.b.page1.isan009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isan009
            
            #add-point:AFTER FIELD isan009 name="construct.a.page1.isan009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.isan009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isan009
            #add-point:ON ACTION controlp INFIELD isan009 name="construct.c.page1.isan009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isanstus
            #add-point:BEFORE FIELD isanstus name="construct.b.page1.isanstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isanstus
            
            #add-point:AFTER FIELD isanstus name="construct.a.page1.isanstus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.isanstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isanstus
            #add-point:ON ACTION controlp INFIELD isanstus name="construct.c.page1.isanstus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.isanownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isanownid
            #add-point:ON ACTION controlp INFIELD isanownid name="construct.c.page2.isanownid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO isanownid  #顯示到畫面上

            NEXT FIELD isanownid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isanownid
            #add-point:BEFORE FIELD isanownid name="construct.b.page2.isanownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isanownid
            
            #add-point:AFTER FIELD isanownid name="construct.a.page2.isanownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.isanowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isanowndp
            #add-point:ON ACTION controlp INFIELD isanowndp name="construct.c.page2.isanowndp"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO isanowndp  #顯示到畫面上

            NEXT FIELD isanowndp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isanowndp
            #add-point:BEFORE FIELD isanowndp name="construct.b.page2.isanowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isanowndp
            
            #add-point:AFTER FIELD isanowndp name="construct.a.page2.isanowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.isancrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isancrtid
            #add-point:ON ACTION controlp INFIELD isancrtid name="construct.c.page2.isancrtid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO isancrtid  #顯示到畫面上

            NEXT FIELD isancrtid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isancrtid
            #add-point:BEFORE FIELD isancrtid name="construct.b.page2.isancrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isancrtid
            
            #add-point:AFTER FIELD isancrtid name="construct.a.page2.isancrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.isancrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isancrtdp
            #add-point:ON ACTION controlp INFIELD isancrtdp name="construct.c.page2.isancrtdp"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO isancrtdp  #顯示到畫面上

            NEXT FIELD isancrtdp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isancrtdp
            #add-point:BEFORE FIELD isancrtdp name="construct.b.page2.isancrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isancrtdp
            
            #add-point:AFTER FIELD isancrtdp name="construct.a.page2.isancrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isancrtdt
            #add-point:BEFORE FIELD isancrtdt name="construct.b.page2.isancrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.isanmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isanmodid
            #add-point:ON ACTION controlp INFIELD isanmodid name="construct.c.page2.isanmodid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO isanmodid  #顯示到畫面上

            NEXT FIELD isanmodid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isanmodid
            #add-point:BEFORE FIELD isanmodid name="construct.b.page2.isanmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isanmodid
            
            #add-point:AFTER FIELD isanmodid name="construct.a.page2.isanmodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isanmoddt
            #add-point:BEFORE FIELD isanmoddt name="construct.b.page2.isanmoddt"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct name="cs.more_construct"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog name="cs.before_dialog"
         
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct name="cs.after_construct"
   
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
 
{</section>}
 
{<section id="aisi060.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION aisi060_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON isan001,isan002
                          FROM s_browse[1].b_isan001,s_browse[1].b_isan002
 
         BEFORE CONSTRUCT
               DISPLAY aisi060_filter_parser('isan001') TO s_browse[1].b_isan001
            DISPLAY aisi060_filter_parser('isan002') TO s_browse[1].b_isan002
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aisi060_filter_show('isan001')
   CALL aisi060_filter_show('isan002')
 
END FUNCTION
 
{</section>}
 
{<section id="aisi060.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION aisi060_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="aisi060.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION aisi060_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aisi060_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="aisi060.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aisi060_query()
   #add-point:query段define name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="query.befroe_query"
   
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_isan_d.clear()
   CALL g_isan2_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL aisi060_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL aisi060_browser_fill(g_wc)
      CALL aisi060_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL aisi060_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL aisi060_fetch("F") 
   END IF
   
   CALL aisi060_idx_chk()
   
   LET g_wc_filter = ""
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aisi060_fetch(p_flag)
   #add-point:fetch段define name="fetch.define_customerization"
   
   #end add-point   
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="fetch.before_fetch"
   
   #end add-point    
 
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L' 
         LET g_current_idx = g_header_cnt
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart + g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting(g_current_idx,g_detail_cnt)
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_isan_m.isan001 = g_browser[g_current_idx].b_isan001
   LET g_isan_m.isan002 = g_browser[g_current_idx].b_isan002
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aisi060_master_referesh USING g_isan_m.isan001,g_isan_m.isan002 INTO g_isan_m.isan001,g_isan_m.isan002, 
       g_isan_m.isan001_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "isan_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      INITIALIZE g_isan_m.* TO NULL
      RETURN
   END IF
 
   #遮罩相關處理
   LET g_isan_m_mask_o.* =  g_isan_m.*
   CALL aisi060_isan_t_mask()
   LET g_isan_m_mask_n.* =  g_isan_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL aisi060_set_act_visible()
   CALL aisi060_set_act_no_visible()
 
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
 
   #保存單頭舊值
   LET g_isan_m_t.* = g_isan_m.*
   LET g_isan_m_o.* = g_isan_m.*
   
   #重新顯示   
   CALL aisi060_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="aisi060.insert" >}
#+ 資料新增
PRIVATE FUNCTION aisi060_insert()
   #add-point:insert段define name="insert.define_customerization"
   
   #end add-point   
   #add-point:insert段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="insert.before"
   
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_isan_d.clear()
   CALL g_isan2_d.clear()
 
 
   INITIALIZE g_isan_m.* TO NULL             #DEFAULT 設定
   LET g_isan001_t = NULL
   LET g_isan002_t = NULL
 
   LET g_master_insert = FALSE
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值 name="insert.default"
      LET g_isan_m_t.* = g_isan_m.*
      #end add-point 
 
      CALL aisi060_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_isan_m.* TO NULL
         INITIALIZE g_isan_d TO NULL
         INITIALIZE g_isan2_d TO NULL
 
         CALL aisi060_show()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         LET g_isan_m.* = g_isan_m_t.*
         CALL aisi060_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF
    
      #CALL g_isan_d.clear()
      #CALL g_isan2_d.clear()
 
      
      #add-point:單頭輸入後2 name="insert.after_insert2"
      
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL aisi060_set_act_visible()
   CALL aisi060_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_isan001_t = g_isan_m.isan001
   LET g_isan002_t = g_isan_m.isan002
 
   
   #組合新增資料的條件
   LET g_add_browse = " isanent = " ||g_enterprise|| " AND",
                      " isan001 = '", g_isan_m.isan001, "' "
                      ," AND isan002 = '", g_isan_m.isan002, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aisi060_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CALL aisi060_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE aisi060_master_referesh USING g_isan_m.isan001,g_isan_m.isan002 INTO g_isan_m.isan001,g_isan_m.isan002, 
       g_isan_m.isan001_desc
   
   #遮罩相關處理
   LET g_isan_m_mask_o.* =  g_isan_m.*
   CALL aisi060_isan_t_mask()
   LET g_isan_m_mask_n.* =  g_isan_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_isan_m.isan001,g_isan_m.isan001_desc,g_isan_m.isan002,g_isan_m.isanl004
   
   #功能已完成,通報訊息中心
   CALL aisi060_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.modify" >}
#+ 資料修改
PRIVATE FUNCTION aisi060_modify()
   #add-point:modify段define name="modify.define_customerization"
   
   #end add-point    
   #add-point:modify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   IF g_isan_m.isan001 IS NULL
   OR g_isan_m.isan002 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL  
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
   LET g_isan001_t = g_isan_m.isan001
   LET g_isan002_t = g_isan_m.isan002
 
   CALL s_transaction_begin()
   
   OPEN aisi060_cl USING g_enterprise,g_isan_m.isan001,g_isan_m.isan002
   IF SQLCA.SQLCODE THEN   #(ver:49)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aisi060_cl:" 
      LET g_errparam.code   = SQLCA.SQLCODE   #(ver:49)
      LET g_errparam.popup  = TRUE 
      CLOSE aisi060_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aisi060_master_referesh USING g_isan_m.isan001,g_isan_m.isan002 INTO g_isan_m.isan001,g_isan_m.isan002, 
       g_isan_m.isan001_desc
   
   #遮罩相關處理
   LET g_isan_m_mask_o.* =  g_isan_m.*
   CALL aisi060_isan_t_mask()
   LET g_isan_m_mask_n.* =  g_isan_m.*
   
   CALL s_transaction_end('Y','0')
 
   CALL aisi060_show()
   WHILE TRUE
      LET g_isan001_t = g_isan_m.isan001
      LET g_isan002_t = g_isan_m.isan002
 
 
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      CALL aisi060_input("u")     #欄位更改
      
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         LET g_isan_m.* = g_isan_m_t.*
         CALL aisi060_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更(更新單身table的key欄位值)
      IF g_isan_m.isan001 != g_isan001_t 
      OR g_isan_m.isan002 != g_isan002_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前 name="modify.b_key_update"
         
         #end add-point
         
         #add-point:單頭(偽)修改中 name="modify.m_key_update"
         
         #end add-point
         
 
         
         #add-point:單頭(偽)修改後 name="modify.a_key_update"
         
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL aisi060_set_act_visible()
   CALL aisi060_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " isanent = " ||g_enterprise|| " AND",
                      " isan001 = '", g_isan_m.isan001, "' "
                      ," AND isan002 = '", g_isan_m.isan002, "' "
 
   #填到對應位置
   CALL aisi060_browser_fill("")
 
   CALL aisi060_idx_chk()
 
   CLOSE aisi060_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aisi060_msgcentre_notify('modify')
   
END FUNCTION   
 
{</section>}
 
{<section id="aisi060.input" >}
#+ 資料輸入
PRIVATE FUNCTION aisi060_input(p_cmd)
   #add-point:input段define name="input.define_customerization"
   
   #end add-point   
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num10               #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num10               #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10               #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_success       LIKE type_t.chr1
   #end add-point
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_isan_m.isan001,g_isan_m.isan001_desc,g_isan_m.isan002,g_isan_m.isanl004
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
 
   #end add-point 
   LET g_forupd_sql = "SELECT isan003,isan004,isan005,isan006,isan007,isan008,isan009,isanstus,isan003, 
       isanownid,isanowndp,isancrtid,isancrtdp,isancrtdt,isanmodid,isanmoddt FROM isan_t WHERE isanent=?  
       AND isan001=? AND isan002=? AND isan003=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aisi060_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aisi060_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL aisi060_set_no_entry(p_cmd)
   #add-point:set_no_entry後 name="input.after_set_no_entry"
   
   #end add-point
 
   DISPLAY BY NAME g_isan_m.isan001,g_isan_m.isan002,g_isan_m.isanl004
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:進入修改段前 name="input.before_input"
   LET g_error_show = 1
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="aisi060.input.head" >}
   
      #單頭段
      INPUT BY NAME g_isan_m.isan001,g_isan_m.isan002,g_isan_m.isanl004 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item name="input.master_input.update_item"
               IF NOT cl_null(g_isan_m.isan001) AND NOT cl_null(g_isan_m.isan002) THEN
                  CALL n_isanl(g_isan_m.isan001,g_isan_m.isan002)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_isan_m.isan001
                  LET g_ref_fields[2] = g_isan_m.isan002
                  CALL ap_ref_array2(g_ref_fields," SELECT isanl004 FROM isanl_t WHERE isanlent = '"
                      ||g_enterprise||"' AND isanl001 = ? AND isanl002 = ? AND isanl003 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_isan_m.isanl004 = g_rtn_fields[1]
                  DISPLAY BY NAME g_isan_m.isanl004
               END IF
               #END add-point
            END IF
 
 
 
 
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.isanl001 = g_isan_m.isan001
LET g_master_multi_table_t.isanl002 = g_isan_m.isan002
LET g_master_multi_table_t.isanl004 = g_isan_m.isanl004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.isanl001 = ''
LET g_master_multi_table_t.isanl002 = ''
LET g_master_multi_table_t.isanl004 = ''
 
            END IF
            #add-point:單頭input前 name="input.head.b_input"
            
            #end add-point
          
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isan001
            
            #add-point:AFTER FIELD isan001 name="input.a.isan001"
            CALL aisi060_isan001_desc()
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_isan_m.isan001) AND NOT cl_null(g_isan_m.isan002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_isan_m.isan001 != g_isan001_t  OR g_isan_m.isan002 != g_isan002_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM isan_t WHERE "||"isanent = '" ||g_enterprise|| "' AND "||"isan001 = '"||g_isan_m.isan001 ||"' AND "|| "isan002 = '"||g_isan_m.isan002 ||"'",'std-00004',0) THEN 
                     LET g_isan_m.isan001 = g_isan_m_t.isan001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            IF NOT cl_null(g_isan_m.isan001) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_isan_m.isan001

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooal002_2") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_isan_m.isan001 = g_isan_m_t.isan001
                  NEXT FIELD CURRENT
               END IF
            END IF 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isan001
            #add-point:BEFORE FIELD isan001 name="input.b.isan001"
            CALL aisi060_isan001_desc()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE isan001
            #add-point:ON CHANGE isan001 name="input.g.isan001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isan002
            #add-point:BEFORE FIELD isan002 name="input.b.isan002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isan002
            
            #add-point:AFTER FIELD isan002 name="input.a.isan002"
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_isan_m.isan001) AND NOT cl_null(g_isan_m.isan002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_isan_m.isan001 != g_isan001_t  OR g_isan_m.isan002 != g_isan002_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM isan_t WHERE "||"isanent = '" ||g_enterprise|| "' AND "||"isan001 = '"||g_isan_m.isan001 ||"' AND "|| "isan002 = '"||g_isan_m.isan002 ||"'",'std-00004',0) THEN 
                     LET g_isan_m.isan002 = g_isan_m_t.isan002
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE isan002
            #add-point:ON CHANGE isan002 name="input.g.isan002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isanl004
            #add-point:BEFORE FIELD isanl004 name="input.b.isanl004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isanl004
            
            #add-point:AFTER FIELD isanl004 name="input.a.isanl004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE isanl004
            #add-point:ON CHANGE isanl004 name="input.g.isanl004"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.isan001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isan001
            #add-point:ON ACTION controlp INFIELD isan001 name="input.c.isan001"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_isan_m.isan001             #給予default值

            #給予arg

            CALL q_ooal002_11()                                #呼叫開窗

            LET g_isan_m.isan001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_isan_m.isan001 TO isan001              #顯示到畫面上

            NEXT FIELD isan001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.isan002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isan002
            #add-point:ON ACTION controlp INFIELD isan002 name="input.c.isan002"
            
            #END add-point
 
 
         #Ctrlp:input.c.isanl004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isanl004
            #add-point:ON ACTION controlp INFIELD isanl004 name="input.c.isanl004"
            
            #END add-point
 
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
            
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            DISPLAY BY NAME g_isan_m.isan001             
                            ,g_isan_m.isan002   
 
 
            #add-point:單頭修改前 name="input.head.b_after_input"
            
            #end add-point
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
            
               #將遮罩欄位還原
               CALL aisi060_isan_t_mask_restore('restore_mask_o')
            
               UPDATE isan_t SET (isan001,isan002) = (g_isan_m.isan001,g_isan_m.isan002)
                WHERE isanent = g_enterprise AND isan001 = g_isan001_t
                  AND isan002 = g_isan002_t
 
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "isan_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "isan_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_isan_m.isan001
               LET gs_keys_bak[1] = g_isan001_t
               LET gs_keys[2] = g_isan_m.isan002
               LET gs_keys_bak[2] = g_isan002_t
               LET gs_keys[3] = g_isan_d[g_detail_idx].isan003
               LET gs_keys_bak[3] = g_isan_d_t.isan003
               CALL aisi060_update_b('isan_t',gs_keys,gs_keys_bak,"'1'")
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_isan_m.isan001 = g_master_multi_table_t.isanl001 AND
         g_isan_m.isan002 = g_master_multi_table_t.isanl002 AND
         g_isan_m.isanl004 = g_master_multi_table_t.isanl004  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'isanlent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_isan_m.isan001
            LET l_field_keys[02] = 'isanl001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.isanl001
            LET l_var_keys[03] = g_isan_m.isan002
            LET l_field_keys[03] = 'isanl002'
            LET l_var_keys_bak[03] = g_master_multi_table_t.isanl002
            LET l_var_keys[04] = g_dlang
            LET l_field_keys[04] = 'isanl003'
            LET l_var_keys_bak[04] = g_dlang
            LET l_vars[01] = g_isan_m.isanl004
            LET l_fields[01] = 'isanl004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'isanl_t')
         END IF 
 
 
                     #add-point:單頭修改後 name="input.head.a_update"
                     
                     #end add-point
    
                     #頭先不紀錄
                     #LET g_log1 = util.JSON.stringify(g_isan_m_t)
                     #LET g_log2 = util.JSON.stringify(g_isan_m)
                     #IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                     #   CALL s_transaction_end('N','0')
                     #ELSE
                        CALL s_transaction_end('Y','0')
                     #END IF
               END CASE
            
               #將遮罩欄位進行遮蔽
               CALL aisi060_isan_t_mask_restore('restore_mask_n')
            
            ELSE    
               #add-point:單頭新增 name="input.head.a_insert"
               
               #end add-point
               
               #多語言處理
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_isan_m.isan001 = g_master_multi_table_t.isanl001 AND
         g_isan_m.isan002 = g_master_multi_table_t.isanl002 AND
         g_isan_m.isanl004 = g_master_multi_table_t.isanl004  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'isanlent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_isan_m.isan001
            LET l_field_keys[02] = 'isanl001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.isanl001
            LET l_var_keys[03] = g_isan_m.isan002
            LET l_field_keys[03] = 'isanl002'
            LET l_var_keys_bak[03] = g_master_multi_table_t.isanl002
            LET l_var_keys[04] = g_dlang
            LET l_field_keys[04] = 'isanl003'
            LET l_var_keys_bak[04] = g_dlang
            LET l_vars[01] = g_isan_m.isanl004
            LET l_fields[01] = 'isanl004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'isanl_t')
         END IF 
 
                         
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aisi060_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            END IF
 
           LET g_isan001_t = g_isan_m.isan001
           LET g_isan002_t = g_isan_m.isan002
 
           
           IF g_isan_d.getLength() = 0 THEN
              NEXT FIELD isan003
           END IF
 
      END INPUT
 
{</section>}
 
{<section id="aisi060.input.body" >}
      #Page1 預設值產生於此處
      INPUT ARRAY g_isan_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_isan_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aisi060_b_fill(g_wc2) #test 
            #如果一直都在單頭則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm' 
            LET g_current_page = 1
            #add-point:資料輸入前 name="input.body.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aisi060_idx_chk()
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN aisi060_cl USING g_enterprise,g_isan_m.isan001,g_isan_m.isan002                          
               IF SQLCA.SQLCODE THEN   #(ver:49)
                  CLOSE aisi060_cl
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN aisi060_cl:" 
                  LET g_errparam.code   = SQLCA.SQLCODE   #(ver:49)
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            IF g_rec_b >= l_ac 
               AND g_isan_d[l_ac].isan003 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_isan_d_t.* = g_isan_d[l_ac].*  #BACKUP
               LET g_isan_d_o.* = g_isan_d[l_ac].*  #BACKUP
               CALL aisi060_set_entry_b(l_cmd)
               #add-point:set_entry_b後 name="input.body.before_row.set_entry_b"
               
               #end add-point
               CALL aisi060_set_no_entry_b(l_cmd)
               OPEN aisi060_bcl USING g_enterprise,g_isan_m.isan001,
                                                g_isan_m.isan002,
 
                                                g_isan_d_t.isan003
 
               IF SQLCA.SQLCODE THEN   #(ver:49)
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN aisi060_bcl:" 
                  LET g_errparam.code   = SQLCA.SQLCODE   #(ver:49)
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aisi060_bcl INTO g_isan_d[l_ac].isan003,g_isan_d[l_ac].isan004,g_isan_d[l_ac].isan005, 
                      g_isan_d[l_ac].isan006,g_isan_d[l_ac].isan007,g_isan_d[l_ac].isan008,g_isan_d[l_ac].isan009, 
                      g_isan_d[l_ac].isanstus,g_isan2_d[l_ac].isan003,g_isan2_d[l_ac].isanownid,g_isan2_d[l_ac].isanowndp, 
                      g_isan2_d[l_ac].isancrtid,g_isan2_d[l_ac].isancrtdp,g_isan2_d[l_ac].isancrtdt, 
                      g_isan2_d[l_ac].isanmodid,g_isan2_d[l_ac].isanmoddt
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_isan_d_t.isan003,":",SQLERRMESSAGE 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
                      LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_isan_d_mask_o[l_ac].* =  g_isan_d[l_ac].*
                  CALL aisi060_isan_t_mask()
                  LET g_isan_d_mask_n[l_ac].* =  g_isan_d[l_ac].*
                  
                  CALL aisi060_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
 
            #end add-point  
            
 
 
        
         BEFORE INSERT
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            INITIALIZE g_isan_d_t.* TO NULL
            INITIALIZE g_isan_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_isan_d[l_ac].* TO NULL
            #公用欄位預設值
            #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_isan2_d[l_ac].isanownid = g_user
      LET g_isan2_d[l_ac].isanowndp = g_dept
      LET g_isan2_d[l_ac].isancrtid = g_user
      LET g_isan2_d[l_ac].isancrtdp = g_dept 
      LET g_isan2_d[l_ac].isancrtdt = cl_get_current()
      LET g_isan2_d[l_ac].isanmodid = g_user
      LET g_isan2_d[l_ac].isanmoddt = cl_get_current()
      LET g_isan_d[l_ac].isanstus = ''
 
 
  
            #一般欄位預設值
                  LET g_isan_d[l_ac].isan004 = "1"
      LET g_isan_d[l_ac].isan005 = "2"
      LET g_isan_d[l_ac].isanstus = "Y"
 
            
            #add-point:modify段before備份 name="input.body.before_insert.before_bak"
            
            #end add-point
            LET g_isan_d_t.* = g_isan_d[l_ac].*     #新輸入資料
            LET g_isan_d_o.* = g_isan_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aisi060_set_entry_b(l_cmd)
            #add-point:set_entry_b後 name="input.body.before_insert.set_entry_b"
            
            #end add-point
            CALL aisi060_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_isan_d[li_reproduce_target].* = g_isan_d[li_reproduce].*
               LET g_isan2_d[li_reproduce_target].* = g_isan2_d[li_reproduce].*
 
               LET g_isan_d[g_isan_d.getLength()].isan003 = NULL
 
            END IF
            
 
 
            #add-point:modify段before insert name="input.body.before_insert"
            IF cl_null(g_isan_d[l_ac].isan003) THEN
               SELECT MAX(isan003) INTO g_isan_d[l_ac].isan003
                 FROM isan_t
                WHERE isanent = g_enterprise AND isan001 = g_isan_m.isan001
                  AND isan002 = g_isan_m.isan002
               IF cl_null(g_isan_d[l_ac].isan003) THEN
                  LET g_isan_d[l_ac].isan003 = 1
               ELSE
                  LET g_isan_d[l_ac].isan003 = g_isan_d[l_ac].isan003 +1
               END IF
            END IF
            IF g_isan_d[l_ac].isan005 = '2' AND g_isan_d[l_ac].isan004 = '1' THEN 
               LET g_isan_d[l_ac].isan008 = 'A*1/(1+R)'
            END IF            
            CASE g_isan_d[l_ac].isan004 
               WHEN '1' 
                  LET g_isan_d[l_ac].isan009 = 'P*R'
               WHEN '2' 
                  LET g_isan_d[l_ac].isan009 = 'F*Q'
               WHEN '4' 
                  LET g_isan_d[l_ac].isan009 = 'F'                  
            END CASE
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM isan_t 
             WHERE isanent = g_enterprise AND isan001 = g_isan_m.isan001
               AND isan002 = g_isan_m.isan002
 
               AND isan003 = g_isan_d[l_ac].isan003
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
               INSERT INTO isan_t
                           (isanent,
                            isan001,isan002,
                            isan003
                            ,isan004,isan005,isan006,isan007,isan008,isan009,isanstus,isanownid,isanowndp,isancrtid,isancrtdp,isancrtdt,isanmodid,isanmoddt) 
                     VALUES(g_enterprise,
                            g_isan_m.isan001,g_isan_m.isan002,
                            g_isan_d[l_ac].isan003
                            ,g_isan_d[l_ac].isan004,g_isan_d[l_ac].isan005,g_isan_d[l_ac].isan006,g_isan_d[l_ac].isan007, 
                                g_isan_d[l_ac].isan008,g_isan_d[l_ac].isan009,g_isan_d[l_ac].isanstus, 
                                g_isan2_d[l_ac].isanownid,g_isan2_d[l_ac].isanowndp,g_isan2_d[l_ac].isancrtid, 
                                g_isan2_d[l_ac].isancrtdp,g_isan2_d[l_ac].isancrtdt,g_isan2_d[l_ac].isanmodid, 
                                g_isan2_d[l_ac].isanmoddt)
               #add-point:單身新增中 name="input.body.m_insert"
               
               #end add-point
               LET p_cmd = 'u'
               LET g_master_insert = TRUE
            ELSE    
               INITIALIZE g_isan_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "isan_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後 name="input.body.after_insert"
            
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               IF aisi060_before_delete() THEN 
                  
 
 
 
                  #取得該筆資料key值
                  INITIALIZE gs_keys TO NULL
                  LET gs_keys[01] = g_isan_m.isan001
                  LET gs_keys[gs_keys.getLength()+1] = g_isan_m.isan002
 
                  LET gs_keys[gs_keys.getLength()+1] = g_isan_d_t.isan003
 
 
                  #刪除下層單身
                  IF NOT aisi060_key_delete_b(gs_keys,'isan_t') THEN
                     CALL s_transaction_end('N','0')
                     CLOSE aisi060_bcl
                     CANCEL DELETE
                  END IF
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE aisi060_bcl
               LET l_count = g_isan_d.getLength()
            END IF 
            
            #add-point:單身刪除後 name="input.body.a_delete"
            CALL FGL_SET_ARR_CURR(l_ac-1)
            CALL g_isan_d.deleteElement(l_ac)
            NEXT FIELD isan003
            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE  name="input.body.after_delete"
               
               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_isan_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isan003
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_isan_d[l_ac].isan003,"1","1","","","azz-00079",1) THEN
               NEXT FIELD isan003
            END IF 
 
 
 
            #add-point:AFTER FIELD isan003 name="input.a.page1.isan003"
            #此段落由子樣板a05產生
            IF  g_isan_m.isan001 IS NOT NULL AND g_isan_m.isan002 IS NOT NULL AND g_isan_d[g_detail_idx].isan003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_isan_m.isan001 != g_isan001_t OR g_isan_m.isan002 != g_isan002_t OR g_isan_d[g_detail_idx].isan003 != g_isan_d_t.isan003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM isan_t WHERE "||"isanent = '" ||g_enterprise|| "' AND "||"isan001 = '"||g_isan_m.isan001 ||"' AND "|| "isan002 = '"||g_isan_m.isan002 ||"' AND "|| "isan003 = '"||g_isan_d[g_detail_idx].isan003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isan003
            #add-point:BEFORE FIELD isan003 name="input.b.page1.isan003"
            IF cl_null(g_isan_d[l_ac].isan003) THEN
               SELECT MAX(isan003) INTO g_isan_d[l_ac].isan003
                 FROM isan_t
                WHERE isanent = g_enterprise AND isan001 = g_isan_m.isan001
                  AND isan002 = g_isan_m.isan002
               IF cl_null(g_isan_d[l_ac].isan003) THEN
                  LET g_isan_d[l_ac].isan003 = 1
               ELSE
                  LET g_isan_d[l_ac].isan003 = g_isan_d[l_ac].isan003 +1
               END IF
            END IF 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE isan003
            #add-point:ON CHANGE isan003 name="input.g.page1.isan003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isan004
            #add-point:BEFORE FIELD isan004 name="input.b.page1.isan004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isan004
            
            #add-point:AFTER FIELD isan004 name="input.a.page1.isan004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE isan004
            #add-point:ON CHANGE isan004 name="input.g.page1.isan004"
            CALL aisi060_isan004_set_entry()
            CALL aisi060_isan004_set_noentry()
            CASE g_isan_d[l_ac].isan004 
               WHEN '1' 
                  LET g_isan_d[l_ac].isan009 = 'P*R'
               WHEN '2' 
                  LET g_isan_d[l_ac].isan009 = 'F*Q'
               WHEN '4' 
                  LET g_isan_d[l_ac].isan009 = 'F'                  
            END CASE
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isan005
            #add-point:BEFORE FIELD isan005 name="input.b.page1.isan005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isan005
            
            #add-point:AFTER FIELD isan005 name="input.a.page1.isan005"
            IF g_isan_d[l_ac].isan003 = 1 THEN 
               IF g_isan_d[l_ac].isan005 MATCHES '[34]' THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'ais-00148'
                  LET g_errparam.extend = g_isan_d[l_ac].isan005
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_isan_d[l_ac].isan005 = g_isan_d_t.isan005
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE isan005
            #add-point:ON CHANGE isan005 name="input.g.page1.isan005"
            IF g_isan_d[l_ac].isan005 MATCHES '[14]' THEN 
               LET g_isan_d[l_ac].isan008 = 'A'
            END IF
            IF g_isan_d[l_ac].isan005 = '2' AND g_isan_d[l_ac].isan004 = '1' THEN 
               LET g_isan_d[l_ac].isan008 = 'A*1/(1+R)'
            END IF              
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isan006
            #add-point:BEFORE FIELD isan006 name="input.b.page1.isan006"
#            CALL aisi060_set_format('isan006',"#####&.##")
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isan006
            
            #add-point:AFTER FIELD isan006 name="input.a.page1.isan006"
#            CALL aisi060_set_format('isan006',"#####&.##%")
            CALL aisi060_set_entry_b(l_cmd)
            CALL aisi060_set_no_entry_b(l_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE isan006
            #add-point:ON CHANGE isan006 name="input.g.page1.isan006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isan007
            #add-point:BEFORE FIELD isan007 name="input.b.page1.isan007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isan007
            
            #add-point:AFTER FIELD isan007 name="input.a.page1.isan007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE isan007
            #add-point:ON CHANGE isan007 name="input.g.page1.isan007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isan008
            #add-point:BEFORE FIELD isan008 name="input.b.page1.isan008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isan008
            
            #add-point:AFTER FIELD isan008 name="input.a.page1.isan008"
            IF NOT cl_null(g_isan_d[l_ac].isan008) THEN 
               IF NOT aisi060_isan008_chk() THEN 
                  LET g_isan_d[l_ac].isan008 = g_isan_d_t.isan008
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL aisi060_set_entry_b(l_cmd)
            CALL aisi060_set_no_entry_b(l_cmd)            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE isan008
            #add-point:ON CHANGE isan008 name="input.g.page1.isan008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isan009
            #add-point:BEFORE FIELD isan009 name="input.b.page1.isan009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isan009
            
            #add-point:AFTER FIELD isan009 name="input.a.page1.isan009"
            IF NOT cl_null(g_isan_d[l_ac].isan009) THEN 
               IF NOT aisi060_isan009_chk() THEN 
                  LET g_isan_d[l_ac].isan009 = g_isan_d_t.isan009
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL aisi060_set_entry_b(l_cmd)
            CALL aisi060_set_no_entry_b(l_cmd)            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE isan009
            #add-point:ON CHANGE isan009 name="input.g.page1.isan009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isanstus
            #add-point:BEFORE FIELD isanstus name="input.b.page1.isanstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isanstus
            
            #add-point:AFTER FIELD isanstus name="input.a.page1.isanstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE isanstus
            #add-point:ON CHANGE isanstus name="input.g.page1.isanstus"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.isan003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isan003
            #add-point:ON ACTION controlp INFIELD isan003 name="input.c.page1.isan003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.isan004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isan004
            #add-point:ON ACTION controlp INFIELD isan004 name="input.c.page1.isan004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.isan005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isan005
            #add-point:ON ACTION controlp INFIELD isan005 name="input.c.page1.isan005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.isan006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isan006
            #add-point:ON ACTION controlp INFIELD isan006 name="input.c.page1.isan006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.isan007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isan007
            #add-point:ON ACTION controlp INFIELD isan007 name="input.c.page1.isan007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.isan008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isan008
            #add-point:ON ACTION controlp INFIELD isan008 name="input.c.page1.isan008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.isan009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isan009
            #add-point:ON ACTION controlp INFIELD isan009 name="input.c.page1.isan009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.isanstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isanstus
            #add-point:ON ACTION controlp INFIELD isanstus name="input.c.page1.isanstus"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_isan_d[l_ac].* = g_isan_d_t.*
               CLOSE aisi060_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_isan_d[l_ac].isan003 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_isan_d[l_ac].* = g_isan_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_isan2_d[l_ac].isanmodid = g_user 
LET g_isan2_d[l_ac].isanmoddt = cl_get_current()
LET g_isan2_d[l_ac].isanmodid_desc = cl_get_username(g_isan2_d[l_ac].isanmodid)
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
         
               #將遮罩欄位還原
               CALL aisi060_isan_t_mask_restore('restore_mask_o')
         
               UPDATE isan_t SET (isan001,isan002,isan003,isan004,isan005,isan006,isan007,isan008,isan009, 
                   isanstus,isanownid,isanowndp,isancrtid,isancrtdp,isancrtdt,isanmodid,isanmoddt) = (g_isan_m.isan001, 
                   g_isan_m.isan002,g_isan_d[l_ac].isan003,g_isan_d[l_ac].isan004,g_isan_d[l_ac].isan005, 
                   g_isan_d[l_ac].isan006,g_isan_d[l_ac].isan007,g_isan_d[l_ac].isan008,g_isan_d[l_ac].isan009, 
                   g_isan_d[l_ac].isanstus,g_isan2_d[l_ac].isanownid,g_isan2_d[l_ac].isanowndp,g_isan2_d[l_ac].isancrtid, 
                   g_isan2_d[l_ac].isancrtdp,g_isan2_d[l_ac].isancrtdt,g_isan2_d[l_ac].isanmodid,g_isan2_d[l_ac].isanmoddt) 
 
                WHERE isanent = g_enterprise AND isan001 = g_isan_m.isan001 
                 AND isan002 = g_isan_m.isan002 
 
                 AND isan003 = g_isan_d_t.isan003 #項次   
 
                 
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "isan_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "isan_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_isan_m.isan001
               LET gs_keys_bak[1] = g_isan001_t
               LET gs_keys[2] = g_isan_m.isan002
               LET gs_keys_bak[2] = g_isan002_t
               LET gs_keys[3] = g_isan_d[g_detail_idx].isan003
               LET gs_keys_bak[3] = g_isan_d_t.isan003
               CALL aisi060_update_b('isan_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     #修改歷程記錄(單身修改)
                     LET g_log1 = util.JSON.stringify(g_isan_m),util.JSON.stringify(g_isan_d_t)
                     LET g_log2 = util.JSON.stringify(g_isan_m),util.JSON.stringify(g_isan_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL aisi060_isan_t_mask_restore('restore_mask_n')
               
               #若Key欄位有變動
               LET ls_keys[01] = g_isan_m.isan001
               LET ls_keys[ls_keys.getLength()+1] = g_isan_m.isan002
 
               LET ls_keys[ls_keys.getLength()+1] = g_isan_d_t.isan003
 
               CALL aisi060_key_update_b(ls_keys)
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
            END IF
 
         AFTER ROW
            #add-point:input段after row name="input.body.after_row"
            
            #end add-point  
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               CLOSE aisi060_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_isan_d[l_ac].* = g_isan_d_t.*
               END IF
               EXIT DIALOG 
            END IF
 
            CLOSE aisi060_bcl
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_isan_d.getLength() = 0 THEN
               NEXT FIELD isan003
            END IF
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point    
            
         ON ACTION controlo   
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_isan_d[li_reproduce_target].* = g_isan_d[li_reproduce].*
               LET g_isan2_d[li_reproduce_target].* = g_isan2_d[li_reproduce].*
 
               LET g_isan_d[li_reproduce_target].isan003 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_isan_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_isan_d.getLength()+1
            END IF
            
      END INPUT
 
 
      
      DISPLAY ARRAY g_isan2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
      
         BEFORE ROW
            CALL aisi060_b_fill(g_wc2) #test 
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_page = 2
            CALL aisi060_idx_chk()
            CALL aisi060_ui_detailshow()
        
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)      
         
         #add-point:page2自定義行為 name="input.body2.action"
         
         #end add-point
         
      END DISPLAY
 
      
 
      
 
    
      #add-point:input段more_input name="input.more_inputarray"
      
      #end add-point    
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()    
         #add-point:input段before_dialog name="input.before_dialog"
         
         #end add-point 
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD isan001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD isan003
               WHEN "s_detail2"
                  NEXT FIELD isan003_2
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #將畫面指標同步到當下指定的位置上
   CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
 
   
   #add-point:input段after_input name="input.after_input"
#   CALL aisi060_set_format('isan006',"#####&.##%")
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aisi060_show()
   #add-point:show段define name="show.define_customerization"
   
   #end add-point
   #add-point:show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="show.before"
   
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL aisi060_b_fill(g_wc2) #第一階單身填充
      CALL aisi060_b_fill2('0')  #第二階單身填充
   END IF
   
   
 
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL aisi060_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   DISPLAY BY NAME g_isan_m.isan001,g_isan_m.isan001_desc,g_isan_m.isan002,g_isan_m.isanl004
 
   CALL aisi060_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後 name="show.after"
   
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.ref_show" >}
#+ 帶出reference資料
PRIVATE FUNCTION aisi060_ref_show()
   #add-point:ref_show段define name="ref_show.define_customerization"
   
   #end add-point 
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ref_show.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ref_show.pre_function"
   
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference name="ref_show.head.reference"
#   CALL aisi060_isan001_desc()
   CALL aisi060_isan004_desc()

   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_isan_d.getLength()
      #add-point:ref_show段d_reference name="ref_show.body.reference"
      
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_isan2_d.getLength()
      #add-point:ref_show段d2_reference name="ref_show.body2.reference"
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_isan2_d[l_ac].isanownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_isan2_d[l_ac].isanownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_isan2_d[l_ac].isanownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_isan2_d[l_ac].isanowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_isan2_d[l_ac].isanowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_isan2_d[l_ac].isanowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_isan2_d[l_ac].isancrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_isan2_d[l_ac].isancrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_isan2_d[l_ac].isancrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_isan2_d[l_ac].isancrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_isan2_d[l_ac].isancrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_isan2_d[l_ac].isancrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_isan2_d[l_ac].isanmodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_isan2_d[l_ac].isanmodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_isan2_d[l_ac].isanmodid_desc

      #end add-point
   END FOR
 
   
   #add-point:ref_show段自訂 name="ref_show.other_reference"
   
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION
 
{</section>}
 
{<section id="aisi060.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION aisi060_reproduce()
   #add-point:reproduce段define name="reproduce.define_customerization"
   
   #end add-point
   DEFINE l_newno     LIKE isan_t.isan001 
   DEFINE l_oldno     LIKE isan_t.isan001 
   DEFINE l_newno02     LIKE isan_t.isan002 
   DEFINE l_oldno02     LIKE isan_t.isan002 
 
   DEFINE l_master    RECORD LIKE isan_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE isan_t.* #此變數樣板目前無使用
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_isan_m.isan001 IS NULL
      OR g_isan_m.isan002 IS NULL
 
      THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_isan001_t = g_isan_m.isan001
   LET g_isan002_t = g_isan_m.isan002
 
   
   LET g_isan_m.isan001 = ""
   LET g_isan_m.isan002 = ""
 
   LET g_master_insert = FALSE
   CALL aisi060_set_entry('a')
   CALL aisi060_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   LET g_isan_m.isanl004 = ""
   LET g_isan_m_t.* = g_isan_m.*
   #end add-point
   
   #清空key欄位的desc
      LET g_isan_m.isan001_desc = ''
   DISPLAY BY NAME g_isan_m.isan001_desc
 
   
   CALL aisi060_input("r")
    
   IF INT_FLAG AND NOT g_master_insert THEN
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      INITIALIZE g_isan_m.* TO NULL
      INITIALIZE g_isan_d TO NULL
      INITIALIZE g_isan2_d TO NULL
 
      CALL aisi060_show()
      LET INT_FLAG = 0
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN 
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL aisi060_set_act_visible()
   CALL aisi060_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_isan001_t = g_isan_m.isan001
   LET g_isan002_t = g_isan_m.isan002
 
   
   #組合新增資料的條件
   LET g_add_browse = " isanent = " ||g_enterprise|| " AND",
                      " isan001 = '", g_isan_m.isan001, "' "
                      ," AND isan002 = '", g_isan_m.isan002, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aisi060_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   LET g_curr_diag = ui.DIALOG.getCurrent()
   CALL aisi060_idx_chk()
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   #功能已完成,通報訊息中心
   CALL aisi060_msgcentre_notify('reproduce')
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION aisi060_detail_reproduce()
   #add-point:delete段define name="detail_reproduce.define_customerization"
   
   #end add-point 
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE isan_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aisi060_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM isan_t
    WHERE isanent = g_enterprise AND isan001 = g_isan001_t
    AND isan002 = g_isan002_t
 
       INTO TEMP aisi060_detail
   
   #將key修正為調整後   
   UPDATE aisi060_detail 
      #更新key欄位
      SET isan001 = g_isan_m.isan001
          , isan002 = g_isan_m.isan002
 
      #更新共用欄位
      #應用 a13 樣板自動產生(Version:4)
       , isanownid = g_user 
       , isanowndp = g_dept
       , isancrtid = g_user
       , isancrtdp = g_dept 
       , isancrtdt = ld_date
       , isanmodid = g_user
       , isanmoddt = ld_date
      #, isanstus = "Y" 
 
 
 
                                       
   #將資料塞回原table   
   INSERT INTO isan_t SELECT * FROM aisi060_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aisi060_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_isan001_t = g_isan_m.isan001
   LET g_isan002_t = g_isan_m.isan002
 
   
   DROP TABLE aisi060_detail
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.delete" >}
#+ 資料刪除
PRIVATE FUNCTION aisi060_delete()
   #add-point:delete段define name="delete.define_customerization"
   
   #end add-point
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   DEFINE l_cnt            LIKE type_t.num5
   
   LET l_cnt = 0 
   SELECT COUNT(*) INTO l_cnt
     FROM oodb_t
    WHERE oodbent = g_enterprise
      AND oodb007 = g_isan_m.isan002
      AND oodbstus = 'Y' 
   IF l_cnt > 0 THEN 
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ais-00063'
      LET g_errparam.extend = g_isan_m.isan002
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_isan_m.isan001 IS NULL
   OR g_isan_m.isan002 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   LET g_master_multi_table_t.isanl001 = g_isan_m.isan001
LET g_master_multi_table_t.isanl002 = g_isan_m.isan002
LET g_master_multi_table_t.isanl004 = g_isan_m.isanl004
 
 
   OPEN aisi060_cl USING g_enterprise,g_isan_m.isan001,g_isan_m.isan002
   IF SQLCA.SQLCODE THEN   #(ver:49)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aisi060_cl:" 
      LET g_errparam.code   = SQLCA.SQLCODE   #(ver:49)
      LET g_errparam.popup  = TRUE 
      CLOSE aisi060_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aisi060_master_referesh USING g_isan_m.isan001,g_isan_m.isan002 INTO g_isan_m.isan001,g_isan_m.isan002, 
       g_isan_m.isan001_desc
   
   #遮罩相關處理
   LET g_isan_m_mask_o.* =  g_isan_m.*
   CALL aisi060_isan_t_mask()
   LET g_isan_m_mask_n.* =  g_isan_m.*
   
   CALL aisi060_show()
 
   #單頭多語言資料備份
   LET g_master_multi_table_t.isanl001 = g_isan_m.isan001
LET g_master_multi_table_t.isanl002 = g_isan_m.isan002
LET g_master_multi_table_t.isanl004 = g_isan_m.isanl004
 
   
   IF cl_ask_del_master() THEN              #確認一下
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL aisi060_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
 
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM isan_t WHERE isanent = g_enterprise AND isan001 = g_isan_m.isan001
                                                               AND isan002 = g_isan_m.isan002
 
                                                               
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "isan_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
 
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_enterprise
   LET l_field_keys[01] = 'isanlent'
   LET l_var_keys_bak[02] = g_master_multi_table_t.isanl001
   LET l_field_keys[02] = 'isanl001'
   LET l_var_keys_bak[03] = g_master_multi_table_t.isanl002
   LET l_field_keys[03] = 'isanl002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'isanl_t')
 
  
      #add-point:單身刪除後  name="delete.body.a_delete"
      
      #end add-point
      
 
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_enterprise
   LET l_field_keys[01] = 'isanlent'
   LET l_var_keys_bak[02] = g_master_multi_table_t.isanl001
   LET l_field_keys[02] = 'isanl001'
   LET l_var_keys_bak[03] = g_master_multi_table_t.isanl002
   LET l_field_keys[03] = 'isanl002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'isanl_t')
 
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      #頭先不紀錄
      #IF NOT cl_log_modified_record('','') THEN 
      #   CLOSE aisi060_cl
      #   CALL s_transaction_end('N','0')
      #   RETURN 
      #END IF
      
      CLEAR FORM
      CALL g_isan_d.clear() 
      CALL g_isan2_d.clear()       
 
     
      CALL aisi060_ui_browser_refresh()  
      #CALL aisi060_ui_headershow()  
      #CALL aisi060_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aisi060_fetch('P')
      ELSE
         #LET g_wc = " 1=1"
         #LET g_wc2 = " 1=1"
         #CALL aisi060_browser_fill("F")
         CLEAR FORM
      END IF
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')   
   END IF
 
   CLOSE aisi060_cl
 
   #功能已完成,通報訊息中心
   CALL aisi060_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="aisi060.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION aisi060_b_fill(p_wc2)
   #add-point:b_fill段define name="b_fill.define_customerization"
   
   #end add-point
   DEFINE p_wc2      STRING
   #add-point:b_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #先清空單身變數內容
   CALL g_isan_d.clear()
   CALL g_isan2_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   LET g_sql = "SELECT  DISTINCT isan003,isan004,isan005,isan006,isan007,isan008,isan009,isanstus,isan003, 
       isanownid,isanowndp,isancrtid,isancrtdp,isancrtdt,isanmodid,isanmoddt,t1.ooag011 ,t2.ooefl003 , 
       t3.ooag011 ,t4.ooefl003 ,t5.ooag011 FROM isan_t",   
               "",
               
                              " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=isanownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=isanowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=isancrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=isancrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=isanmodid  ",
 
               " WHERE isanent= ? AND isan001=? AND isan002=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("isan_t")
   END IF
   
   #add-point:b_fill段sql_after name="b_fill.sql_after"
   
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF aisi060_fill_chk(1) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = g_sql, " ORDER BY isan_t.isan003"
         #add-point:b_fill段fill_before name="b_fill.fill_before"
         
         #end add-point
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE aisi060_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR aisi060_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_isan_m.isan001,g_isan_m.isan002   #(ver:49)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_isan_m.isan001,g_isan_m.isan002 INTO g_isan_d[l_ac].isan003, 
          g_isan_d[l_ac].isan004,g_isan_d[l_ac].isan005,g_isan_d[l_ac].isan006,g_isan_d[l_ac].isan007, 
          g_isan_d[l_ac].isan008,g_isan_d[l_ac].isan009,g_isan_d[l_ac].isanstus,g_isan2_d[l_ac].isan003, 
          g_isan2_d[l_ac].isanownid,g_isan2_d[l_ac].isanowndp,g_isan2_d[l_ac].isancrtid,g_isan2_d[l_ac].isancrtdp, 
          g_isan2_d[l_ac].isancrtdt,g_isan2_d[l_ac].isanmodid,g_isan2_d[l_ac].isanmoddt,g_isan2_d[l_ac].isanownid_desc, 
          g_isan2_d[l_ac].isanowndp_desc,g_isan2_d[l_ac].isancrtid_desc,g_isan2_d[l_ac].isancrtdp_desc, 
          g_isan2_d[l_ac].isanmodid_desc   #(ver:49)
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充 name="b_fill.fill"
         LET g_isan2_d[l_ac].isan003 = g_isan_d[l_ac].isan003
         #end add-point
      
         #帶出公用欄位reference值
         
         
         #應用 a12 樣板自動產生(Version:4)
 
 
 
 
        
         #add-point:單身資料抓取 name="bfill.foreach"
         
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF 
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         
      END FOREACH
 
            CALL g_isan_d.deleteElement(g_isan_d.getLength())
      CALL g_isan2_d.deleteElement(g_isan2_d.getLength())
 
      
   END IF
   
   #add-point:b_fill段more name="b_fill.more"
   
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   #遮罩相關處理
   FOR l_ac = 1 TO g_isan_d.getLength()
      LET g_isan_d_mask_o[l_ac].* =  g_isan_d[l_ac].*
      CALL aisi060_isan_t_mask()
      LET g_isan_d_mask_n[l_ac].* =  g_isan_d[l_ac].*
   END FOR
   
   LET g_isan2_d_mask_o.* =  g_isan2_d.*
   FOR l_ac = 1 TO g_isan2_d.getLength()
      LET g_isan2_d_mask_o[l_ac].* =  g_isan2_d[l_ac].*
      CALL aisi060_isan_t_mask()
      LET g_isan2_d_mask_n[l_ac].* =  g_isan2_d[l_ac].*
   END FOR
 
 
   FREE aisi060_pb   
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION aisi060_idx_chk()
   #add-point:idx_chk段define name="idx_chk.define_customerization"
   
   #end add-point
   #add-point:idx_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   #判定目前選擇的頁面
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      #確保當下指標的位置未超過上限
      IF g_detail_idx > g_isan_d.getLength() THEN
         LET g_detail_idx = g_isan_d.getLength()
      END IF
      #確保資料位置不小於1
      IF g_detail_idx = 0 AND g_isan_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      #將筆數資料顯示到畫面上
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_isan_d.getLength() TO FORMONLY.cnt
      #將位置顯示到正確筆數上
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   END IF
    
   #同第一個page的做法進行其他頁面的處理
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_isan2_d.getLength() THEN
         LET g_detail_idx = g_isan2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_isan2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_isan2_d.getLength() TO FORMONLY.cnt
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION aisi060_b_fill2(pi_idx)
   #add-point:b_fill2段define name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_isan_d.getLength() <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.before_delete" >}
#+ 單身db資料刪除
PRIVATE FUNCTION aisi060_before_delete()
   #add-point:before_delete段define name="before_delete.define_customerization"
   
   #end add-point 
   #add-point:before_delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="before_delete.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="delete.body.b_single_delete"
   
   #end add-point
   
   DELETE FROM isan_t
    WHERE isanent = g_enterprise AND isan001 = g_isan_m.isan001 AND
                              isan002 = g_isan_m.isan002 AND
 
          isan003 = g_isan_d_t.isan003
 
      
   #add-point:單筆刪除中 name="delete.body.m_single_delete"
   
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "isan_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後 name="delete.body.a_single_delete"
   
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
 
{</section>}
 
{<section id="aisi060.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION aisi060_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define name="delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION aisi060_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define name="insert_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION aisi060_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define name="update_b.define_customerization"
   
   #end add-point 
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正其他單身key欄位
PRIVATE FUNCTION aisi060_key_update_b(ps_keys_bak)
   #add-point:update_b段define name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變, 若無改變則返回
   IF g_isan_d[l_ac].isan003 = g_isan_d_t.isan003 
 
      THEN
      RETURN
   END IF
    
 
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION aisi060_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION aisi060_lock_b(ps_table,ps_page)
   #add-point:lock_b段define name="lock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
   
   #先刷新資料
   #CALL aisi060_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="aisi060.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aisi060_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define name="unlock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
   
 
 
END FUNCTION
 
{</section>}
 
{<section id="aisi060.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION aisi060_set_entry(p_cmd)
   #add-point:set_entry段define name="set_entry.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("isan001,isan002",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="aisi060.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION aisi060_set_no_entry(p_cmd)
   #add-point:set_no_entry段define name="set_no_entry.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("isan001,isan002",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="aisi060.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION aisi060_set_entry_b(p_cmd)
   #add-point:set_entry_b段define name="set_entry_b.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   CALL aisi060_isan004_set_entry()
   CALL cl_set_comp_required("isan006",FALSE)
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION aisi060_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define name="set_no_entry_b.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   DEFINE l_isan008 STRING
   DEFINE l_isan009 STRING
   DEFINE l_cnt1    LIKE type_t.num5
   DEFINE l_cnt2    LIKE type_t.num5
   #end add-point    
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b段"
   CALL aisi060_isan004_set_noentry()
   LET l_isan008 = g_isan_d[l_ac].isan008
   LET l_isan009 = g_isan_d[l_ac].isan009
   LET l_cnt1 = 0
   LET l_cnt2 = 0
   LET l_cnt1 = l_isan008.getIndexOf('R',1)
   LET l_cnt2 = l_isan009.getIndexOf('R',1)
   IF l_cnt1 <> 0 OR l_cnt2 <> 0 THEN    
      CALL cl_set_comp_required("isan006",TRUE)
   END IF
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION aisi060_set_act_visible()
   #add-point:set_act_visible段define name="set_act_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point
   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="aisi060.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION aisi060_set_act_no_visible()
   #add-point:set_act_no_visible段define name="set_act_no_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point
   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="aisi060.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION aisi060_set_act_visible_b()
   #add-point:set_act_visible_b段define name="set_act_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="aisi060.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION aisi060_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define name="set_act_no_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="aisi060.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION aisi060_default_search()
   #add-point:default_search段define name="default_search.define_customerization"
   
   #end add-point    
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="default_search.pre_function"
   
   #end add-point
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   #add-point:default_search段開始前 name="default_search.before"
   
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " isan001 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " isan002 = '", g_argv[02], "' AND "
   END IF
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="aisi060.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION aisi060_fill_chk(ps_idx)
   #add-point:fill_chk段define name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="fill_chk.pre_function"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
   
   #add-point:fill_chk段other name="fill_chk.other"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="aisi060.modify_detail_chk" >}
#+ 單身輸入判定
PRIVATE FUNCTION aisi060_modify_detail_chk(ps_record)
   #add-point:modify_detail_chk段define name="modify_detail_chk.define_customerization"
   
   #end add-point
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify_detail_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="modify_detail_chk.before"
   
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "isan003"
      WHEN "s_detail2"
         LET ls_return = "isan003_2"
 
      #add-point:modify_detail_chk段自訂page控制 name="modify_detail_chk.page_control"
      
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前 name="modify_detail_chk.after"
   
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
 
{</section>}
 
{<section id="aisi060.mask_functions" >}
&include "erp/ais/aisi060_mask.4gl"
 
{</section>}
 
{<section id="aisi060.state_change" >}
    
 
{</section>}
 
{<section id="aisi060.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION aisi060_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_isan_m.isan001
   LET g_pk_array[1].column = 'isan001'
   LET g_pk_array[2].values = g_isan_m.isan002
   LET g_pk_array[2].column = 'isan002'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="aisi060.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION aisi060_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL aisi060_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_isan_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="aisi060.other_function" readonly="Y" >}
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aisi060_gzcb_fill()
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aisi060_gzcb_fill()
DEFINE l_sql  STRING
  
   LET l_ac2 = 1
   LET l_sql = " SELECT gzcb002,gzcbl004 FROM gzcb_t LEFT OUTER JOIN gzcbl_t ON gzcb001 = gzcbl001 AND gzcb002 = gzcbl002 AND gzcbl003 = '",g_dlang,"'",
               "  WHERE gzcb001 = '9725' ORDER BY gzcb002" 
   PREPARE gzcb_pre FROM l_sql
   DECLARE gzcb_cur	CURSOR FOR gzcb_pre
   FOREACH gzcb_cur INTO g_gzcb_d[l_ac2].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
      
      LET l_ac2 = l_ac2 + 1
      IF l_ac2 > g_max_rec THEN
         EXIT FOREACH
      END IF      
   END FOREACH
   LET g_rec_b2 = l_ac2 - 1
   CALL g_gzcb_d.deleteElement(g_gzcb_d.getLength())
END FUNCTION
################################################################################
# Descriptions...: 計徵方式控管欄位可輸入
# Memo...........:
# Usage..........: CALLaisi060_isan004_set_entry()
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aisi060_isan004_set_entry()
   CALL cl_set_comp_entry("isan006,isan007",TRUE)
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aisi060_isan004_set_noentry()
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aisi060_isan004_set_noentry()
   IF g_isan_d[l_ac].isan004 MATCHES '[24]' THEN
      CALL cl_set_comp_entry("isan006",FALSE)
      LET g_isan_d[l_ac].isan006 = ''
   END IF
   IF g_isan_d[l_ac].isan004 MATCHES '[1]' THEN
      CALL cl_set_comp_entry("isan007",FALSE)
      LET g_isan_d[l_ac].isan007 = ''
   END IF      
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aisi060_isan001_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_isan_m.isan001
   CALL ap_ref_array2(g_ref_fields,"SELECT ooall004 FROM ooall_t WHERE ooallent='"||g_enterprise||"' AND ooall001='2' AND ooall002=? AND ooall003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_isan_m.isan001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_isan_m.isan001_desc
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aisi060_isan004_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_isan_m.isan001
   LET g_ref_fields[2] = g_isan_m.isan002
   CALL ap_ref_array2(g_ref_fields," SELECT isanl004 FROM isanl_t WHERE isanlent = '"||g_enterprise||"' AND isanl001 = ? AND isanl002 = ? AND isanl003 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_isan_m.isanl004 = g_rtn_fields[1] 
   DISPLAY g_isan_m.isanl004 TO isanl004
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aisi060_isan008_chk()
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aisi060_isan008_chk()
DEFINE l_isan008  STRING
DEFINE l_str        DYNAMIC ARRAY OF STRING
DEFINE r_success  LIKE type_t.num5
DEFINE l_len      LIKE type_t.num5
DEFINE i          LIKE type_t.num5 


   LET r_success = TRUE
   LET l_isan008 = g_isan_d[l_ac].isan008
   LET l_len = l_isan008.getLength()
   
   FOR i = 1 TO l_len
       LET l_str[i] = l_isan008.SubString(i,i)
       IF l_str[i] MATCHES '[A-Z]' THEN 
          IF l_str[i] NOT MATCHES '[ARQFPT]' THEN 
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = 'ais-00059'
             LET g_errparam.extend = l_str[i]
             LET g_errparam.popup = TRUE
             CALL cl_err()

             LET r_success = FALSE
             RETURN r_success
          END IF
       END IF
   END FOR
   IF NOT aisi060_chk(g_isan_d[l_ac].isan008) THEN 
      LET r_success = FALSE
      RETURN r_success      
   END IF
   IF l_isan008.getIndexOf('F',1) THEN 
      IF g_isan_d[l_ac].isan007 IS NULL THEN 
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'ais-00060'
         LET g_errparam.extend = g_isan_d[l_ac].isan007
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   IF l_isan008.getIndexOf('T',1) THEN 
      IF g_isan_d[l_ac].isan009 IS NULL THEN 
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'ais-00062'
         LET g_errparam.extend = g_isan_d[l_ac].isan009
         LET g_errparam.popup = TRUE
         CALL cl_err()

      END IF
   END IF  
   RETURN r_success   
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aisi060_isan009_chk()
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aisi060_isan009_chk()
DEFINE l_isan009  STRING
DEFINE l_str        DYNAMIC ARRAY OF STRING
DEFINE r_success  LIKE type_t.num5
DEFINE l_len      LIKE type_t.num5
DEFINE i          LIKE type_t.num5 


   LET r_success = TRUE
   LET l_isan009 = g_isan_d[l_ac].isan009
   LET l_len = l_isan009.getLength()
   
   FOR i = 1 TO l_len
       LET l_str[i] = l_isan009.SubString(i,i)
       IF l_str[i] MATCHES '[A-Z]' THEN 
          IF l_str[i] NOT MATCHES '[ARQFPT]' THEN 
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = 'ais-00059'
             LET g_errparam.extend = l_str[i]
             LET g_errparam.popup = TRUE
             CALL cl_err()

             LET r_success = FALSE
             RETURN r_success
          END IF
       END IF
   END FOR
   IF NOT aisi060_chk(g_isan_d[l_ac].isan009) THEN 
      LET r_success = FALSE
      RETURN r_success      
   END IF
   IF l_isan009.getIndexOf('F',1) THEN 
      IF g_isan_d[l_ac].isan007 IS NULL THEN 
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'ais-00060'
         LET g_errparam.extend = g_isan_d[l_ac].isan007
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   IF l_isan009.getIndexOf('P',1) THEN 
      IF g_isan_d[l_ac].isan008 IS NULL THEN 
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'ais-00061'
         LET g_errparam.extend = g_isan_d[l_ac].isan008
         LET g_errparam.popup = TRUE
         CALL cl_err()

      END IF
   END IF  
   RETURN r_success 
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aisi060_isan001_str(p_str)
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aisi060_isan001_str(p_str)
DEFINE p_str     STRING                                               
DEFINE r_str     STRING
DEFINE l_isan001 LIKE isan_t.isan001
DEFINE l_tok     base.stringTokenizer   
DEFINE l_cnt     LIKE type_t.num5
                
   LET l_cnt = 1                
   LET l_tok = base.StringTokenizer.createExt(p_str,'|','',TRUE)  
   IF l_tok.countTokens() > 0 THEN                                 
      WHILE l_tok.hasMoreTokens()                                  
         LET l_isan001= l_tok.nextToken()                            
         IF NOT cl_null(l_isan001) THEN
            IF l_cnt = 1 THEN          
               LET r_str = "'",l_isan001,"'"
            ELSE
               LET r_str = r_str,",'",l_isan001,"'"            
            END IF   
         END IF
         LET l_cnt = l_cnt + 1
      END WHILE                                                    
   END IF                                                          
   RETURN r_str                                                    

END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aisi060_set_format(ps_fields,ps_format)
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aisi060_set_format(ps_fields,ps_format)
   DEFINE   ps_fields           STRING,
            ps_format           STRING
#   DEFINE   lst_fields          base.StringTokenizer,
#            ls_field_name       STRING
#   DEFINE   lnode_root          om.DomNode,
#            llst_items          om.NodeList,
#            li_i                LIKE type_t.num5,
#            lnode_item          om.DomNode,
#            ls_item_name        STRING,
#            lnode_item_child    om.DomNode,
#            ls_item_child_tag   STRING
#   DEFINE   lwin_curr           ui.Window
#
#   IF (ps_fields IS NULL) THEN
#      RETURN
#   ELSE
#      LET ps_fields = ps_fields.toLowerCase()
#   END IF
#
#   LET lwin_curr = ui.Window.getCurrent()
#   LET lnode_root = lwin_curr.getNode()
#
#   LET llst_items = lnode_root.selectByPath("//Form//*")
#   LET lst_fields = base.StringTokenizer.create(ps_fields, ",")
#   WHILE lst_fields.hasMoreTokens()
#      LET ls_field_name = lst_fields.nextToken()
#      LET ls_field_name = ls_field_name.trim()
#
#      FOR li_i = 1 TO llst_items.getLength()
#         LET lnode_item = llst_items.item(li_i)
#         LET ls_item_name = lnode_item.getAttribute("colName")
#
#         IF (ls_item_name IS NULL) THEN
#            LET ls_item_name = lnode_item.getAttribute("name")
#
#            IF (ls_item_name IS NULL) THEN
#               CONTINUE FOR
#            END IF
#         END IF
#
#         IF (ls_item_name.equals(ls_field_name)) THEN
#            LET lnode_item_child = lnode_item.getFirstChild()
#            LET ls_item_child_tag = lnode_item_child.getTagName()
#            IF (ls_item_child_tag.equals("Edit") OR
#                ls_item_child_tag.equals("ButtonEdit") OR
#                ls_item_child_tag.equals("Label") OR
#                ls_item_child_tag.equals("DateEdit")) THEN
#
#               CALL lnode_item_child.setAttribute("format", "")
#               CALL lnode_item_child.setAttribute("format", ps_format)
#            END IF
#
#            EXIT FOR
#         END IF
#      END FOR
#   END WHILE
END FUNCTION

PRIVATE FUNCTION aisi060_chk(p_str)
DEFINE p_str  STRING   
DEFINE l_sql  STRING
DEFINE r_success LIKE type_t.num5

   LET r_success = TRUE
   
   LET p_str = cl_replace_str(p_str,"A","100")
   LET p_str = cl_replace_str(p_str,"F","100") 
   LET p_str = cl_replace_str(p_str,"P","100") 
   LET p_str = cl_replace_str(p_str,"Q","100") 
   LET p_str = cl_replace_str(p_str,"R","100") 
   LET p_str = cl_replace_str(p_str,"T","100")    
   LET l_sql = "SELECT ",p_str CLIPPED," FROM DUAL"
   PREPARE l_sql_pre1 FROM l_sql
   EXECUTE l_sql_pre1

   IF SQLCA.sqlcode THEN
      #除數不可為0
      IF SQLCA.sqlerrd[2] = -1476 THEN
      ELSE  
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'sub-00559'
         LET g_errparam.extend = p_str
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
      END IF
   END IF
   RETURN r_success
END FUNCTION

 
{</section>}
 
