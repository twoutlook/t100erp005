<add_points prog="aisi020" std_prog="aisi020" erpver="1.0" module="AIS" ver="3" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="construct.c.isak001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_site
            CALL q_isak001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO isak001  #顯示到畫面上

            NEXT FIELD isak001                     #返回原欄位

]]>
</point>
  <point name="construct.c.isak002" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		    	LET g_qryparam.reqry = FALSE
            CALL q_oodb002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO isak002  #顯示到畫面上

            NEXT FIELD isak002                     #返回原欄位

]]>
</point>
  <point name="construct.c.isak003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_isac002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO isak003  #顯示到畫面上

            NEXT FIELD isak003                     #返回原欄位

]]>
</point>
  <point name="construct.c.isak004" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_oodb002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO isak004  #顯示到畫面上

            NEXT FIELD isak004                     #返回原欄位

]]>
</point>
  <point name="construct.c.isak005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_isac002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO isak005  #顯示到畫面上

            NEXT FIELD isak005                     #返回原欄位

]]>
</point>
  <point name="construct.c.isakcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO isakcrtdp  #顯示到畫面上

            NEXT FIELD isakcrtdp                     #返回原欄位

]]>
</point>
  <point name="construct.c.isakcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO isakcrtid  #顯示到畫面上

            NEXT FIELD isakcrtid                     #返回原欄位

]]>
</point>
  <point name="construct.c.isakmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO isakmodid  #顯示到畫面上

            NEXT FIELD isakmodid                     #返回原欄位

]]>
</point>
  <point name="construct.c.isakowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO isakowndp  #顯示到畫面上

            NEXT FIELD isakowndp                     #返回原欄位

]]>
</point>
  <point name="construct.c.isakownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO isakownid  #顯示到畫面上

            NEXT FIELD isakownid                     #返回原欄位

]]>
</point>
  <point name="input.a.isak001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aisi020_isak001_desc()
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_isak_m.isaksite) AND NOT cl_null(g_isak_m.isak001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_isak_m.isaksite != g_isaksite_t  OR g_isak_m.isak001 != g_isak001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM isak_t WHERE "||"isakent = '" ||g_enterprise|| "' AND "||"isaksite = '"||g_isak_m.isaksite ||"' AND "|| "isak001 = '"||g_isak_m.isak001 ||"'",'std-00004',0) THEN 
                     LET g_isak_m.isak001 = g_isak_m_t.isak001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            IF NOT cl_null(g_isak_m.isak001) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_isak_m.isaksite
               LET g_chkparam.arg2 = g_isak_m.isak001

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pmab001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_isak_m.isak001 = g_isak_m_t.isak001
                  NEXT FIELD CURRENT
               END IF
            

            END IF ]]>
</point>
  <point name="input.a.isak002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aisi020_isak002_desc(g_isak_m.isak002) RETURNING g_isak_m.oodb005_1,g_isak_m.oodb006_1,g_isak_m.isak002_desc
            DISPLAY BY NAME g_isak_m.oodb005_1,g_isak_m.oodb006_1,g_isak_m.isak002_desc
            
            IF NOT cl_null(g_isak_m.isak002) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_isak_m.isaksite
               LET g_chkparam.arg2 = g_isak_m.isak002

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oodb002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_isak_m.isak002 = g_isak_m_t.isak002 
                  NEXT FIELD CURRENT
               END IF
            

            END IF ]]>
</point>
  <point name="input.a.isak003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aisi020_isak003_desc(g_isak_m.isak003) RETURNING g_isak_m.isak003_desc
            DISPLAY BY NAME g_isak_m.isak003_desc            
            IF NOT cl_null(g_isak_m.isak003) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_ooef019
               LET g_chkparam.arg2 = g_isak_m.isak003

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_isac002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_isak_m.isak003 = g_isak_m_t.isak003 
                  NEXT FIELD CURRENT
               END IF
            

            END IF ]]>
</point>
  <point name="input.a.isak004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aisi020_isak002_desc(g_isak_m.isak004) RETURNING g_isak_m.oodb005_2,g_isak_m.oodb006_2,g_isak_m.isak004_desc
            DISPLAY BY NAME g_isak_m.oodb005_2,g_isak_m.oodb006_2,g_isak_m.isak004_desc  
            
            IF NOT cl_null(g_isak_m.isak004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_isak_m.isaksite
               LET g_chkparam.arg2 = g_isak_m.isak004

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oodb002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_isak_m.isak004 = g_isak_m_t.isak004 
                  NEXT FIELD CURRENT
               END IF
            

            END IF ]]>
</point>
  <point name="input.a.isak005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aisi020_isak003_desc(g_isak_m.isak005) RETURNING g_isak_m.isak005_desc
            DISPLAY BY NAME g_isak_m.isak005_desc             
            IF NOT cl_null(g_isak_m.isak005) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_ooef019
               LET g_chkparam.arg2 = g_isak_m.isak005

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_isac002_1") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_isak_m.isak005 = g_isak_m_t.isak005 
                  NEXT FIELD CURRENT
               END IF
            

            END IF ]]>
</point>
  <point name="input.a.isaksite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_isak_m.isaksite) AND NOT cl_null(g_isak_m.isak001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_isak_m.isaksite != g_isaksite_t  OR g_isak_m.isak001 != g_isak001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM isak_t WHERE "||"isakent = '" ||g_enterprise|| "' AND "||"isaksite = '"||g_isak_m.isaksite ||"' AND "|| "isak001 = '"||g_isak_m.isak001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.c.isak001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_isak_m.isak001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_isak_m.isaksite

            CALL q_pmab001()                                #呼叫開窗

            LET g_isak_m.isak001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_isak_m.isak001 TO isak001              #顯示到畫面上

            NEXT FIELD isak001                          #返回原欄位

]]>
</point>
  <point name="input.c.isak002" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_isak_m.isak002             #給予default值

            #給予arg

            CALL q_oodb002_2()                                #呼叫開窗

            LET g_isak_m.isak002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_isak_m.isak002 TO isak002              #顯示到畫面上

            NEXT FIELD isak002                          #返回原欄位

]]>
</point>
  <point name="input.c.isak003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_isak_m.isak003             #給予default值
            LET g_qryparam.where = " isac001 = '",g_ooef019,"' AND isac003='2' "
            #給予arg
            
            CALL q_isac002()                                #呼叫開窗

            LET g_isak_m.isak003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_isak_m.isak003 TO isak003              #顯示到畫面上

            NEXT FIELD isak003                          #返回原欄位

]]>
</point>
  <point name="input.c.isak004" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_isak_m.isak004             #給予default值

            #給予arg

            CALL q_oodb002_2()                                #呼叫開窗

            LET g_isak_m.isak004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_isak_m.isak004 TO isak004              #顯示到畫面上

            NEXT FIELD isak004                          #返回原欄位

]]>
</point>
  <point name="input.c.isak005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_isak_m.isak005             #給予default值
            LET g_qryparam.where = " isac001 = '",g_ooef019,"' AND isac003='1' "
            #給予arg

            CALL q_isac002()                                #呼叫開窗

            LET g_isak_m.isak005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_isak_m.isak005 TO isak005              #顯示到畫面上

            NEXT FIELD isak005                          #返回原欄位

]]>
</point>
  <point name="function.aisi020_isak001_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aisi020_isak001_desc()
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aisi020_isak001_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_isak_m.isak001
   CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_isak_m.isak001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_isak_m.isak001_desc
END FUNCTION]]>
</point>
  <point name="function.aisi020_isak002_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aisi020_isak002_desc(p_oodb002)
#                  RETURNING 說別說明
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aisi020_isak002_desc(p_oodb002)
DEFINE p_oodb002  LIKE oodb_t.oodb002

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_ooef019
   LET g_ref_fields[2] = p_oodb002
   CALL ap_ref_array2(g_ref_fields,"SELECT oodb005,oodb006,oodbl004 FROM oodb_t LEFT OUTER JOIN oodbl_t ON oodbent = oodblent AND oodb001 = oodbl001 AND oodb002 = oodbl002 AND oodbl003='"||g_dlang||"' WHERE oodbent='"||g_enterprise||"' AND oodb001= ? AND oodb002=? " ,"") RETURNING g_rtn_fields
   RETURN g_rtn_fields[1],g_rtn_fields[2],g_rtn_fields[3] 
END FUNCTION]]>
</point>
  <point name="function.aisi020_isak003_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aisi020_isak003_desc(p_isac002)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aisi020_isak003_desc(p_isac002)
DEFINE p_isac002  LIKE isac_t.isac002

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_ooef019
   LET g_ref_fields[2] = p_isac002
   CALL ap_ref_array2(g_ref_fields,"SELECT isacl004 FROM isacl_t WHERE isaclent='"||g_enterprise||"' AND isacl001=? AND isacl002=? AND isacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   RETURN g_rtn_fields[1]
END FUNCTION]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_ooef019       LIKE ooef_t.ooef019]]>
</point>
  <point name="input.b.isak001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aisi020_isak001_desc()]]>
</point>
  <point name="input.b.isak002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aisi020_isak002_desc(g_isak_m.isak002) RETURNING g_isak_m.oodb005_1,g_isak_m.oodb006_1,g_isak_m.isak002_desc
            DISPLAY BY NAME g_isak_m.oodb005_1,g_isak_m.oodb006_1,g_isak_m.isak002_desc]]>
</point>
  <point name="input.b.isak003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aisi020_isak003_desc(g_isak_m.isak003) RETURNING g_isak_m.isak003_desc
            DISPLAY BY NAME g_isak_m.isak003_desc ]]>
</point>
  <point name="input.b.isak004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aisi020_isak002_desc(g_isak_m.isak004) RETURNING g_isak_m.oodb005_2,g_isak_m.oodb006_2,g_isak_m.isak004_desc
            DISPLAY BY NAME g_isak_m.oodb005_2,g_isak_m.oodb006_2,g_isak_m.isak004_desc ]]>
</point>
  <point name="input.b.isak005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[	            CALL aisi020_isak003_desc(g_isak_m.isak005) RETURNING g_isak_m.isak005_desc
	            DISPLAY BY NAME g_isak_m.isak005_desc ]]>
</point>
  <point name="input.before.input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            SELECT ooef019 INTO g_ooef019 FROM ooef_t WHERE ooef001 = g_isak_m.isaksite AND ooefent = g_enterprise]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_errshow = 1]]>
</point>
  <point name="input.g.isak006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF g_isak_m.isak006 IS NULL THEN 
               CALL cl_set_comp_entry("isak007",FALSE)
               LET g_isak_m.isak007 = '' 
            ELSE
               CALL cl_set_comp_entry("isak007",TRUE)              
            END IF]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
      LET g_isak_m.isaksite = g_site
      INITIALIZE g_isak_m_t.* LIKE isak_t.*      ]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_isak_m.isakstus = "Y"
   CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
   LET g_isak_m.isaksite = g_site
   LET g_isak_m_t.* = g_isak_m.*]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL cl_set_comp_entry("isak007",TRUE)]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF g_isak_m.isak006 IS NULL THEN 
      CALL cl_set_comp_entry("isak007",FALSE)       
   END IF]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   SELECT ooef019 INTO g_ooef019 FROM ooef_t WHERE ooef001 = g_isak_m.isaksite AND ooefent = g_enterprise]]>
</point>
  <point name="show.head.reference" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[#            CALL aisi020_isak001_desc()
            CALL aisi020_isak002_desc(g_isak_m.isak002) RETURNING g_isak_m.oodb005_1,g_isak_m.oodb006_1,g_isak_m.isak002_desc
            DISPLAY BY NAME g_isak_m.oodb005_1,g_isak_m.oodb006_1,g_isak_m.isak002_desc
            CALL aisi020_isak003_desc(g_isak_m.isak003) RETURNING g_isak_m.isak003_desc
            DISPLAY BY NAME g_isak_m.isak003_desc 
            CALL aisi020_isak002_desc(g_isak_m.isak004) RETURNING g_isak_m.oodb005_2,g_isak_m.oodb006_2,g_isak_m.isak004_desc
            DISPLAY BY NAME g_isak_m.oodb005_2,g_isak_m.oodb006_2,g_isak_m.isak004_desc 
            CALL aisi020_isak003_desc(g_isak_m.isak005) RETURNING g_isak_m.isak005_desc
            DISPLAY BY NAME g_isak_m.isak005_desc             

#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_isak_m.isakownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_isak_m.isakownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_isak_m.isakownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_isak_m.isakowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_isak_m.isakowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_isak_m.isakowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_isak_m.isakcrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_isak_m.isakcrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_isak_m.isakcrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_isak_m.isakcrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_isak_m.isakcrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_isak_m.isakcrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_isak_m.isakmodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_isak_m.isakmodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_isak_m.isakmodid_desc
]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu2.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu2.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu2.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu2.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu2.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu2.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.menu.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.menu.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.menu.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.after_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.wc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.cnt_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_pre" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isak001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isak001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isaksite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isaksite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.isaksite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isakstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isakstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.isakstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isak002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isak002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isak002_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isak002_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.isak002_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isak003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isak003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isak003_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isak003_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.isak003_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isak004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isak004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isak004_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isak004_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.isak004_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isak005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isak005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isak005_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isak005_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.isak005_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isak006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isak006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.isak006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isak007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isak007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.isak007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isak008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isak008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.isak008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isak009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isak009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.isak009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isak010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isak010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.isak010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isak011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isak011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.isak011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isak012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isak012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.isak012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isakownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isakownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isakowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isakowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isakcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isakcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isakcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isakcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isakcrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isakmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.isakmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.isakmoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.more_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   LET g_wc = g_wc, " AND isaksite = '", g_site, "' " ]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.isak001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.isaksite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.isaksite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.isakstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.isakstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.isakstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.isak002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.isak003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.isak004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.isak005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.isak006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.isak006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.isak007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.isak007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.isak007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.isak008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.isak008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.isak008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.isak009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.isak009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.isak009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.isak010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.isak010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.isak010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.isak011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.isak011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.isak011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.isak012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.isak012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.isak012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.isaksite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.isakstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.isak006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.isak007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.isak008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.isak009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.isak010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.isak011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.isak012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   ]]>
</point>
  <point name="default_search.after" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   LET g_wc = g_wc, " AND isaksite = '", g_site, "' " ]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.inactive" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.active" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="aisi020.browser_fill" ver="6" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充(一般單檔)
PRIVATE FUNCTION aisi020_browser_fill(p_wc,ps_page_action) 
   DEFINE p_wc              STRING
   DEFINE ps_page_action    STRING
   DEFINE l_searchcol       STRING
   DEFINE l_sql             STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point
   
   CLEAR FORM
   INITIALIZE g_isak_m.* TO NULL
   INITIALIZE g_wc TO NULL
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET l_searchcol = "isaksite,isak001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
 
   LET p_wc = p_wc.trim() #當查詢按下Q時 按下放棄 g_wc = "  " 所以要清掉空白
   IF cl_null(p_wc) THEN  #p_wc 查詢條件
      LET p_wc = " 1=1 " 
   END IF
   
   #add-point:browser_fill段wc控制
   {<point name="browser_fill.wc"/>}
   #end add-point
 
   LET g_sql = " SELECT COUNT(*) FROM isak_t ",
               "  ",
               "  ",
               " WHERE isakent = '" ||g_enterprise|| "' AND ", 
               p_wc CLIPPED, cl_sql_add_filter("isak_t")
                
   #add-point:browser_fill段cnt_sql
   {<point name="browser_fill.cnt_sql"/>}
   #end add-point
                
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt
   FREE header_cnt_pre 
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse AND g_error_show = 1 THEN
      CALL cl_err(g_browser_cnt,'9035',1)
   END IF
   
      LET g_error_show = 0
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count
   DISPLAY g_browser_cnt TO FORMONLY.h_count
   
   LET g_wc = p_wc
   
   IF ps_page_action = "F" OR
      ps_page_action = "P"  OR
      ps_page_action = "N"  OR
      ps_page_action = "L"  THEN
      LET g_page_action = ps_page_action
   END IF
   
   LET g_sql = " SELECT isakstus,isak001,'',isaksite,t1.pmaal004",
               " FROM isak_t ",
               "  ",
               "  ",
                              " LEFT JOIN pmaal_t t1 ON t1.pmaalent='"||g_enterprise||"' AND t1.pmaal001=isak001 AND t1.pmaal002='"||g_lang||"' ",
 
               " WHERE isakent = '" ||g_enterprise|| "' AND ", g_wc, cl_sql_add_filter("isak_t"),
               "  ORDER BY ",l_searchcol," ",g_order
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:browser_fill段before_pre
   {<point name="browser_fill.before_pre"/>}
   #end add-point                    
 
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_isak001,g_browser[g_cnt].b_isak001_desc, 
       g_browser[g_cnt].b_isaksite,g_browser[g_cnt].b_isak001_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err("foreach:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
      
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err("Max_Row:"||g_max_rec USING "<<<<<","std-00002",0)
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_current_cnt = g_rec_b
   LET g_cnt = 0
   
   CALL aisi020_fetch("") 
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
 
 
]]>
</section>
  <section id="aisi020.construct" ver="8" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aisi020_construct()
   DEFINE ls_return      STRING
   DEFINE ls_result      STRING 
   DEFINE ls_wc          STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point
   
   #清空畫面&資料初始化
   CLEAR FORM
   INITIALIZE g_isak_m.* TO NULL
   INITIALIZE g_wc TO NULL
   LET g_current_row = 1
 
   LET g_qryparam.state = "c"
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #螢幕上取條件
      CONSTRUCT BY NAME g_wc ON isak001,isaksite,isakstus,isak002,isak002_desc,isak003,isak003_desc, 
          isak004,isak004_desc,isak005,isak005_desc,isak006,isak007,isak008,isak009,isak010,isak011, 
          isak012,isakownid,isakowndp,isakcrtid,isakcrtdp,isakcrtdt,isakmodid,isakmoddt
      
         BEFORE CONSTRUCT                                    
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point             
      
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<isakcrtdt>>----
         AFTER FIELD isakcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<isakmoddt>>----
         AFTER FIELD isakmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<isakcnfdt>>----
         
         #----<<isakpstdt>>----
 
 
      
         #一般欄位
                  #Ctrlp:construct.c.isak001
         ON ACTION controlp INFIELD isak001
            #add-point:ON ACTION controlp INFIELD isak001
            {<point name="construct.c.isak001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak001
            #add-point:BEFORE FIELD isak001
            {<point name="construct.b.isak001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak001
            
            #add-point:AFTER FIELD isak001
            {<point name="construct.a.isak001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD isaksite
            #add-point:BEFORE FIELD isaksite
            {<point name="construct.b.isaksite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isaksite
            
            #add-point:AFTER FIELD isaksite
            {<point name="construct.a.isaksite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.isaksite
         ON ACTION controlp INFIELD isaksite
            #add-point:ON ACTION controlp INFIELD isaksite
            {<point name="construct.c.isaksite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isakstus
            #add-point:BEFORE FIELD isakstus
            {<point name="construct.b.isakstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isakstus
            
            #add-point:AFTER FIELD isakstus
            {<point name="construct.a.isakstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.isakstus
         ON ACTION controlp INFIELD isakstus
            #add-point:ON ACTION controlp INFIELD isakstus
            {<point name="construct.c.isakstus" />}
            #END add-point
 
         #Ctrlp:construct.c.isak002
         ON ACTION controlp INFIELD isak002
            #add-point:ON ACTION controlp INFIELD isak002
            {<point name="construct.c.isak002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak002
            #add-point:BEFORE FIELD isak002
            {<point name="construct.b.isak002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak002
            
            #add-point:AFTER FIELD isak002
            {<point name="construct.a.isak002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak002_desc
            #add-point:BEFORE FIELD isak002_desc
            {<point name="construct.b.isak002_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak002_desc
            
            #add-point:AFTER FIELD isak002_desc
            {<point name="construct.a.isak002_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.isak002_desc
         ON ACTION controlp INFIELD isak002_desc
            #add-point:ON ACTION controlp INFIELD isak002_desc
            {<point name="construct.c.isak002_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.isak003
         ON ACTION controlp INFIELD isak003
            #add-point:ON ACTION controlp INFIELD isak003
            {<point name="construct.c.isak003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak003
            #add-point:BEFORE FIELD isak003
            {<point name="construct.b.isak003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak003
            
            #add-point:AFTER FIELD isak003
            {<point name="construct.a.isak003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak003_desc
            #add-point:BEFORE FIELD isak003_desc
            {<point name="construct.b.isak003_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak003_desc
            
            #add-point:AFTER FIELD isak003_desc
            {<point name="construct.a.isak003_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.isak003_desc
         ON ACTION controlp INFIELD isak003_desc
            #add-point:ON ACTION controlp INFIELD isak003_desc
            {<point name="construct.c.isak003_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.isak004
         ON ACTION controlp INFIELD isak004
            #add-point:ON ACTION controlp INFIELD isak004
            {<point name="construct.c.isak004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak004
            #add-point:BEFORE FIELD isak004
            {<point name="construct.b.isak004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak004
            
            #add-point:AFTER FIELD isak004
            {<point name="construct.a.isak004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak004_desc
            #add-point:BEFORE FIELD isak004_desc
            {<point name="construct.b.isak004_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak004_desc
            
            #add-point:AFTER FIELD isak004_desc
            {<point name="construct.a.isak004_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.isak004_desc
         ON ACTION controlp INFIELD isak004_desc
            #add-point:ON ACTION controlp INFIELD isak004_desc
            {<point name="construct.c.isak004_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.isak005
         ON ACTION controlp INFIELD isak005
            #add-point:ON ACTION controlp INFIELD isak005
            {<point name="construct.c.isak005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak005
            #add-point:BEFORE FIELD isak005
            {<point name="construct.b.isak005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak005
            
            #add-point:AFTER FIELD isak005
            {<point name="construct.a.isak005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak005_desc
            #add-point:BEFORE FIELD isak005_desc
            {<point name="construct.b.isak005_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak005_desc
            
            #add-point:AFTER FIELD isak005_desc
            {<point name="construct.a.isak005_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.isak005_desc
         ON ACTION controlp INFIELD isak005_desc
            #add-point:ON ACTION controlp INFIELD isak005_desc
            {<point name="construct.c.isak005_desc" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak006
            #add-point:BEFORE FIELD isak006
            {<point name="construct.b.isak006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak006
            
            #add-point:AFTER FIELD isak006
            {<point name="construct.a.isak006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.isak006
         ON ACTION controlp INFIELD isak006
            #add-point:ON ACTION controlp INFIELD isak006
            {<point name="construct.c.isak006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak007
            #add-point:BEFORE FIELD isak007
            {<point name="construct.b.isak007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak007
            
            #add-point:AFTER FIELD isak007
            {<point name="construct.a.isak007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.isak007
         ON ACTION controlp INFIELD isak007
            #add-point:ON ACTION controlp INFIELD isak007
            {<point name="construct.c.isak007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak008
            #add-point:BEFORE FIELD isak008
            {<point name="construct.b.isak008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak008
            
            #add-point:AFTER FIELD isak008
            {<point name="construct.a.isak008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.isak008
         ON ACTION controlp INFIELD isak008
            #add-point:ON ACTION controlp INFIELD isak008
            {<point name="construct.c.isak008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak009
            #add-point:BEFORE FIELD isak009
            {<point name="construct.b.isak009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak009
            
            #add-point:AFTER FIELD isak009
            {<point name="construct.a.isak009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.isak009
         ON ACTION controlp INFIELD isak009
            #add-point:ON ACTION controlp INFIELD isak009
            {<point name="construct.c.isak009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak010
            #add-point:BEFORE FIELD isak010
            {<point name="construct.b.isak010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak010
            
            #add-point:AFTER FIELD isak010
            {<point name="construct.a.isak010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.isak010
         ON ACTION controlp INFIELD isak010
            #add-point:ON ACTION controlp INFIELD isak010
            {<point name="construct.c.isak010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak011
            #add-point:BEFORE FIELD isak011
            {<point name="construct.b.isak011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak011
            
            #add-point:AFTER FIELD isak011
            {<point name="construct.a.isak011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.isak011
         ON ACTION controlp INFIELD isak011
            #add-point:ON ACTION controlp INFIELD isak011
            {<point name="construct.c.isak011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak012
            #add-point:BEFORE FIELD isak012
            {<point name="construct.b.isak012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak012
            
            #add-point:AFTER FIELD isak012
            {<point name="construct.a.isak012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.isak012
         ON ACTION controlp INFIELD isak012
            #add-point:ON ACTION controlp INFIELD isak012
            {<point name="construct.c.isak012" />}
            #END add-point
 
         #Ctrlp:construct.c.isakownid
         ON ACTION controlp INFIELD isakownid
            #add-point:ON ACTION controlp INFIELD isakownid
            {<point name="construct.c.isakownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isakownid
            #add-point:BEFORE FIELD isakownid
            {<point name="construct.b.isakownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isakownid
            
            #add-point:AFTER FIELD isakownid
            {<point name="construct.a.isakownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.isakowndp
         ON ACTION controlp INFIELD isakowndp
            #add-point:ON ACTION controlp INFIELD isakowndp
            {<point name="construct.c.isakowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isakowndp
            #add-point:BEFORE FIELD isakowndp
            {<point name="construct.b.isakowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isakowndp
            
            #add-point:AFTER FIELD isakowndp
            {<point name="construct.a.isakowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.isakcrtid
         ON ACTION controlp INFIELD isakcrtid
            #add-point:ON ACTION controlp INFIELD isakcrtid
            {<point name="construct.c.isakcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isakcrtid
            #add-point:BEFORE FIELD isakcrtid
            {<point name="construct.b.isakcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isakcrtid
            
            #add-point:AFTER FIELD isakcrtid
            {<point name="construct.a.isakcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.isakcrtdp
         ON ACTION controlp INFIELD isakcrtdp
            #add-point:ON ACTION controlp INFIELD isakcrtdp
            {<point name="construct.c.isakcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isakcrtdp
            #add-point:BEFORE FIELD isakcrtdp
            {<point name="construct.b.isakcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isakcrtdp
            
            #add-point:AFTER FIELD isakcrtdp
            {<point name="construct.a.isakcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD isakcrtdt
            #add-point:BEFORE FIELD isakcrtdt
            {<point name="construct.b.isakcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.isakmodid
         ON ACTION controlp INFIELD isakmodid
            #add-point:ON ACTION controlp INFIELD isakmodid
            {<point name="construct.c.isakmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isakmodid
            #add-point:BEFORE FIELD isakmodid
            {<point name="construct.b.isakmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isakmodid
            
            #add-point:AFTER FIELD isakmodid
            {<point name="construct.a.isakmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD isakmoddt
            #add-point:BEFORE FIELD isakmoddt
            {<point name="construct.b.isakmoddt" />}
            #END add-point
 
 
           
      END CONSTRUCT
      
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point   
      
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
  
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
  
END FUNCTION
]]>
</section>
  <section id="aisi020.default_search" ver="6" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aisi020_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
 
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   #根據外部參數(g_argv)組合wc
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " isaksite = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " isak001 = '", g_argv[02], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      #若有外部參數則根據該參數組合
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=1
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aisi020.delete" ver="9" status="" src="s">
<![CDATA[#+ 資料刪除 
PRIVATE FUNCTION aisi020_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point  
   
   #先確定key值無遺漏
   IF g_isak_m.isaksite IS NULL
   OR g_isak_m.isak001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   CALL s_transaction_begin()
    
   LET g_isaksite_t = g_isak_m.isaksite
   LET g_isak001_t = g_isak_m.isak001
 
   
   
 
   OPEN aisi020_cl USING g_enterprise,g_isak_m.isaksite,g_isak_m.isak001
 
   IF STATUS THEN
      CALL cl_err("OPEN aisi020_cl:", STATUS, 0)
      CLOSE aisi020_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aisi020_master_referesh USING g_isak_m.isaksite,g_isak_m.isak001 INTO g_isak_m.isak001,g_isak_m.isaksite, 
       g_isak_m.isakstus,g_isak_m.isak002,g_isak_m.isak003,g_isak_m.isak004,g_isak_m.isak005,g_isak_m.isak006, 
       g_isak_m.isak007,g_isak_m.isak008,g_isak_m.isak009,g_isak_m.isak010,g_isak_m.isak011,g_isak_m.isak012, 
       g_isak_m.isakownid,g_isak_m.isakowndp,g_isak_m.isakcrtid,g_isak_m.isakcrtdp,g_isak_m.isakcrtdt, 
       g_isak_m.isakmodid,g_isak_m.isakmoddt,g_isak_m.isak001_desc,g_isak_m.isakownid_desc,g_isak_m.isakowndp_desc, 
       g_isak_m.isakcrtid_desc,g_isak_m.isakcrtdp_desc,g_isak_m.isakmodid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_isak_m.isaksite,SQLCA.sqlcode,0)
      RETURN
   END IF
   
   #將最新資料顯示到畫面上
   CALL aisi020_show()
   
   IF cl_ask_delete() THEN
 
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point
 
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL aisi020_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
      DELETE FROM isak_t 
       WHERE isakent = g_enterprise AND isaksite = g_isak_m.isaksite 
         AND isak001 = g_isak_m.isak001 
 
 
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("isak_t",SQLCA.sqlcode,0)
         CALL s_transaction_end('N','0')
      END IF
  
      
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
      
          
      CLEAR FORM
      #ALL aisi020_ui_browser_refresh()
      
      #確保畫面上保有資料
      IF g_browser_cnt > 0 THEN
         CALL aisi020_browser_fill(g_wc,"")
         CALL aisi020_fetch("P")
      ELSE
         CALL aisi020_browser_fill(" 1=1 ","F")
      END IF
      
   END IF
 
   CLOSE aisi020_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_isak_m.isaksite,"D")
 
END FUNCTION
]]>
</section>
  <section id="aisi020.description" ver="11" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000110
#+ 
#+ Filename...: aisi020
#+ Description: 交易對象稅務基本資料檔
#+ Creator....: 02295(2013/12/27)
#+ Modifier...: 02295(2014/06/30)
#+ Buildtype..: 應用 i01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="aisi020.fetch" ver="7" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aisi020_fetch(p_fl)
   DEFINE p_fl       LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point  
   
   #根據傳入的條件決定抓取的資料
   CASE p_fl
      WHEN "F" 
         LET g_current_idx = 1
      WHEN "P"
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN "N"
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN "L" 
         LET g_current_idx = g_header_cnt        
      WHEN "/"
         #詢問要指定的筆數
         IF (NOT g_no_ask) THEN      
            CALL cl_getmsg("fetch", g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,": " FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl"
            END PROMPT
            
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF           
         END IF
         IF g_jump > 0 THEN
            LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE     
   END CASE
   
   LET g_browser_cnt = g_browser.getLength()
 
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_current_idx 
   DISPLAY g_browser_idx TO FORMONLY.b_index        #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count        #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index        #當下筆數
   
   #單頭筆數顯示
   #DISPLAY g_browser_idx TO FORMONLY.idx            #當下筆數
   #DISPLAY g_browser_cnt TO FORMONLY.cnt            #總筆數
   
   
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   # 設定browse索引
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx)
   CALL cl_navigator_setting(g_browser_idx, g_current_cnt) 
 
   #代表沒有資料, 無需做後續資料撈取之動作
   IF g_current_idx = 0 THEN
      RETURN
   END IF
 
   #根據選定的筆數給予key欄位值
   LET g_isak_m.isaksite = g_browser[g_current_idx].b_isaksite
   LET g_isak_m.isak001 = g_browser[g_current_idx].b_isak001
 
                       
   #讀取單頭所有欄位資料
   EXECUTE aisi020_master_referesh USING g_isak_m.isaksite,g_isak_m.isak001 INTO g_isak_m.isak001,g_isak_m.isaksite, 
       g_isak_m.isakstus,g_isak_m.isak002,g_isak_m.isak003,g_isak_m.isak004,g_isak_m.isak005,g_isak_m.isak006, 
       g_isak_m.isak007,g_isak_m.isak008,g_isak_m.isak009,g_isak_m.isak010,g_isak_m.isak011,g_isak_m.isak012, 
       g_isak_m.isakownid,g_isak_m.isakowndp,g_isak_m.isakcrtid,g_isak_m.isakcrtdp,g_isak_m.isakcrtdt, 
       g_isak_m.isakmodid,g_isak_m.isakmoddt,g_isak_m.isak001_desc,g_isak_m.isakownid_desc,g_isak_m.isakowndp_desc, 
       g_isak_m.isakcrtid_desc,g_isak_m.isakcrtdp_desc,g_isak_m.isakmodid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("isak_t",SQLCA.sqlcode,0)
      INITIALIZE g_isak_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #保存單頭舊值
   LET g_isak_m_t.* = g_isak_m.*
   LET g_isak_m_o.* = g_isak_m.*
   
   #重新顯示
   CALL aisi020_show()
 
   
 
END FUNCTION
]]>
</section>
  <section id="aisi020.filter" ver="5" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION aisi020_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON isak001,isaksite
                          FROM s_browse[1].b_isak001,s_browse[1].b_isaksite
 
         BEFORE CONSTRUCT
               DISPLAY aisi020_filter_parser('isak001') TO s_browse[1].b_isak001
            DISPLAY aisi020_filter_parser('isaksite') TO s_browse[1].b_isaksite
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aisi020_filter_show('isak001')
   CALL aisi020_filter_show('isaksite')
 
END FUNCTION
]]>
</section>
  <section id="aisi020.filter_parser" ver="2" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aisi020_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="aisi020.filter_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aisi020_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aisi020_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="aisi020.global" ver="7" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE TYPE type_g_isak_m RECORD
       isak001 LIKE isak_t.isak001, 
   isak001_desc LIKE type_t.chr80, 
   isaksite LIKE isak_t.isaksite, 
   isakstus LIKE isak_t.isakstus, 
   isak002 LIKE isak_t.isak002, 
   isak002_desc LIKE type_t.chr80, 
   oodb005_1 LIKE type_t.chr1, 
   oodb006_1 LIKE type_t.num26_10, 
   isak003 LIKE isak_t.isak003, 
   isak003_desc LIKE type_t.chr80, 
   isak004 LIKE isak_t.isak004, 
   isak004_desc LIKE type_t.chr80, 
   oodb005_2 LIKE type_t.chr1, 
   oodb006_2 LIKE type_t.num26_10, 
   isak005 LIKE isak_t.isak005, 
   isak005_desc LIKE type_t.chr80, 
   isak006 LIKE isak_t.isak006, 
   isak007 LIKE isak_t.isak007, 
   isak008 LIKE isak_t.isak008, 
   isak009 LIKE isak_t.isak009, 
   isak010 LIKE isak_t.isak010, 
   isak011 LIKE isak_t.isak011, 
   isak012 LIKE isak_t.isak012, 
   isakownid LIKE isak_t.isakownid, 
   isakownid_desc LIKE type_t.chr80, 
   isakowndp LIKE isak_t.isakowndp, 
   isakowndp_desc LIKE type_t.chr80, 
   isakcrtid LIKE isak_t.isakcrtid, 
   isakcrtid_desc LIKE type_t.chr80, 
   isakcrtdp LIKE isak_t.isakcrtdp, 
   isakcrtdp_desc LIKE type_t.chr80, 
   isakcrtdt DATETIME YEAR TO SECOND, 
   isakmodid LIKE isak_t.isakmodid, 
   isakmodid_desc LIKE type_t.chr80, 
   isakmoddt DATETIME YEAR TO SECOND
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_isak_m        type_g_isak_m  #單頭變數宣告
DEFINE g_isak_m_t      type_g_isak_m  #單頭舊值宣告(系統還原用)
DEFINE g_isak_m_o      type_g_isak_m  #單頭舊值宣告(其他用途)
 
   DEFINE g_isak001_t LIKE isak_t.isak001
DEFINE g_isaksite_t LIKE isak_t.isaksite
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD  #查詢方案用陣列 
         b_statepic     LIKE type_t.chr50,
            b_isak001 LIKE isak_t.isak001,
   b_isak001_desc LIKE type_t.chr80,
      b_isaksite LIKE isak_t.isaksite
      END RECORD 
   
 
   
 
DEFINE g_wc                  STRING                        #儲存查詢條件
DEFINE g_wc_t                STRING                        #備份查詢條件
DEFINE g_wc_filter           STRING                        #儲存過濾查詢條件
DEFINE g_wc_filter_t         STRING                        #備份過濾查詢條件
DEFINE g_sql                 STRING                        #資料撈取用SQL(含reference)
DEFINE g_forupd_sql          STRING                        #資料鎖定用SQL
DEFINE g_cnt                 LIKE type_t.num10             #指標/統計用變數
DEFINE g_jump                LIKE type_t.num10             #查詢指定的筆數 
DEFINE g_no_ask              LIKE type_t.num5              #是否開啟指定筆視窗 
DEFINE g_rec_b               LIKE type_t.num5              #單身筆數                         
DEFINE l_ac                  LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_pagestart           LIKE type_t.num5              #page起始筆數
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_state               STRING                        #確認前一個動作是否為新增/複製
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #reference用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #reference用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #reference用陣列
DEFINE g_error_show          LIKE type_t.num5              #是否顯示資料過多的錯誤訊息
DEFINE g_aw                  STRING                        #確定當下點擊的單身(modify_detail用)
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #cl_log_modified_record用(舊值)
DEFINE g_log2                STRING                        #cl_log_modified_record用(新值)
 
#快速搜尋用
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序模式
 
#Browser用
DEFINE g_current_idx         LIKE type_t.num5              #Browser 所在筆數(當下page)
DEFINE g_current_row         LIKE type_t.num5              #Browser 所在筆數(暫存用)
DEFINE g_current_cnt         LIKE type_t.num10             #Browser 總筆數(當下page)
DEFINE g_browser_idx         LIKE type_t.num5              #Browser 所在筆數(所有資料)
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser 總筆數(所有資料)
DEFINE g_row_index           LIKE type_t.num5              #階層樹狀用指標
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="aisi020.init" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aisi020_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   #定義combobox狀態
      CALL cl_set_combo_scc_part('isakstus','17','N,Y')
 
      CALL cl_set_combo_scc('isak006','9722') 
 
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   #根據外部參數進行搜尋
   CALL aisi020_default_search()
 
END FUNCTION
]]>
</section>
  <section id="aisi020.input" ver="7" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION aisi020_input(p_cmd)
   DEFINE p_cmd           LIKE type_t.chr1
   DEFINE l_ac_t          LIKE type_t.num5        #未取消的ARRAY CNT 
   DEFINE l_n             LIKE type_t.num5        #檢查重複用  
   DEFINE l_cnt           LIKE type_t.num5        #檢查重複用  
   DEFINE l_lock_sw       LIKE type_t.chr1        #單身鎖住否  
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否  
   DEFINE l_count         LIKE type_t.num5
   DEFINE l_i             LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5
   DEFINE ls_return       STRING
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point
 
   #切換至輸入畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   CALL cl_set_head_visible("","YES")  
   
   #a-新增,r-複製,u-修改
   IF p_cmd = 'r' THEN
      #此段落的r動作等同於a
      LET p_cmd = 'a'
   END IF
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   LET g_qryparam.state = "i"
   
   #控制key欄位可否輸入
   CALL aisi020_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aisi020_set_no_entry(p_cmd)
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DISPLAY BY NAME g_isak_m.isak001,g_isak_m.isaksite,g_isak_m.isakstus,g_isak_m.isak002,g_isak_m.isak003, 
       g_isak_m.isak004,g_isak_m.isak005,g_isak_m.isak006,g_isak_m.isak007,g_isak_m.isak008,g_isak_m.isak009, 
       g_isak_m.isak010,g_isak_m.isak011,g_isak_m.isak012
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #單頭段
      INPUT BY NAME g_isak_m.isak001,g_isak_m.isaksite,g_isak_m.isakstus,g_isak_m.isak002,g_isak_m.isak003, 
          g_isak_m.isak004,g_isak_m.isak005,g_isak_m.isak006,g_isak_m.isak007,g_isak_m.isak008,g_isak_m.isak009, 
          g_isak_m.isak010,g_isak_m.isak011,g_isak_m.isak012 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            #其他table資料備份(確定是否更改用)
            
            #add-point:input開始前
            {<point name="input.before.input"/>}
            #end add-point
   
                  #此段落由子樣板a02產生
         AFTER FIELD isak001
            
            #add-point:AFTER FIELD isak001
            {<point name="input.a.isak001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak001
            #add-point:BEFORE FIELD isak001
            {<point name="input.b.isak001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE isak001
            #add-point:ON CHANGE isak001
            {<point name="input.g.isak001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isaksite
            #add-point:BEFORE FIELD isaksite
            {<point name="input.b.isaksite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isaksite
            
            #add-point:AFTER FIELD isaksite
            {<point name="input.a.isaksite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE isaksite
            #add-point:ON CHANGE isaksite
            {<point name="input.g.isaksite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isakstus
            #add-point:BEFORE FIELD isakstus
            {<point name="input.b.isakstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isakstus
            
            #add-point:AFTER FIELD isakstus
            {<point name="input.a.isakstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE isakstus
            #add-point:ON CHANGE isakstus
            {<point name="input.g.isakstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak002
            
            #add-point:AFTER FIELD isak002
            {<point name="input.a.isak002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak002
            #add-point:BEFORE FIELD isak002
            {<point name="input.b.isak002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE isak002
            #add-point:ON CHANGE isak002
            {<point name="input.g.isak002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak003
            
            #add-point:AFTER FIELD isak003
            {<point name="input.a.isak003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak003
            #add-point:BEFORE FIELD isak003
            {<point name="input.b.isak003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE isak003
            #add-point:ON CHANGE isak003
            {<point name="input.g.isak003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak004
            
            #add-point:AFTER FIELD isak004
            {<point name="input.a.isak004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak004
            #add-point:BEFORE FIELD isak004
            {<point name="input.b.isak004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE isak004
            #add-point:ON CHANGE isak004
            {<point name="input.g.isak004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak005
            
            #add-point:AFTER FIELD isak005
            {<point name="input.a.isak005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak005
            #add-point:BEFORE FIELD isak005
            {<point name="input.b.isak005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE isak005
            #add-point:ON CHANGE isak005
            {<point name="input.g.isak005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak006
            #add-point:BEFORE FIELD isak006
            {<point name="input.b.isak006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak006
            
            #add-point:AFTER FIELD isak006
            {<point name="input.a.isak006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE isak006
            #add-point:ON CHANGE isak006
            {<point name="input.g.isak006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak007
            #add-point:BEFORE FIELD isak007
            {<point name="input.b.isak007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak007
            
            #add-point:AFTER FIELD isak007
            {<point name="input.a.isak007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE isak007
            #add-point:ON CHANGE isak007
            {<point name="input.g.isak007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak008
            #add-point:BEFORE FIELD isak008
            {<point name="input.b.isak008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak008
            
            #add-point:AFTER FIELD isak008
            {<point name="input.a.isak008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE isak008
            #add-point:ON CHANGE isak008
            {<point name="input.g.isak008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak009
            #add-point:BEFORE FIELD isak009
            {<point name="input.b.isak009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak009
            
            #add-point:AFTER FIELD isak009
            {<point name="input.a.isak009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE isak009
            #add-point:ON CHANGE isak009
            {<point name="input.g.isak009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak010
            #add-point:BEFORE FIELD isak010
            {<point name="input.b.isak010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak010
            
            #add-point:AFTER FIELD isak010
            {<point name="input.a.isak010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE isak010
            #add-point:ON CHANGE isak010
            {<point name="input.g.isak010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak011
            #add-point:BEFORE FIELD isak011
            {<point name="input.b.isak011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak011
            
            #add-point:AFTER FIELD isak011
            {<point name="input.a.isak011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE isak011
            #add-point:ON CHANGE isak011
            {<point name="input.g.isak011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isak012
            #add-point:BEFORE FIELD isak012
            {<point name="input.b.isak012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isak012
            
            #add-point:AFTER FIELD isak012
            {<point name="input.a.isak012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE isak012
            #add-point:ON CHANGE isak012
            {<point name="input.g.isak012" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.isak001
         ON ACTION controlp INFIELD isak001
            #add-point:ON ACTION controlp INFIELD isak001
            {<point name="input.c.isak001" />}
            #END add-point
 
         #Ctrlp:input.c.isaksite
         ON ACTION controlp INFIELD isaksite
            #add-point:ON ACTION controlp INFIELD isaksite
            {<point name="input.c.isaksite" />}
            #END add-point
 
         #Ctrlp:input.c.isakstus
         ON ACTION controlp INFIELD isakstus
            #add-point:ON ACTION controlp INFIELD isakstus
            {<point name="input.c.isakstus" />}
            #END add-point
 
         #Ctrlp:input.c.isak002
         ON ACTION controlp INFIELD isak002
            #add-point:ON ACTION controlp INFIELD isak002
            {<point name="input.c.isak002" />}
            #END add-point
 
         #Ctrlp:input.c.isak003
         ON ACTION controlp INFIELD isak003
            #add-point:ON ACTION controlp INFIELD isak003
            {<point name="input.c.isak003" />}
            #END add-point
 
         #Ctrlp:input.c.isak004
         ON ACTION controlp INFIELD isak004
            #add-point:ON ACTION controlp INFIELD isak004
            {<point name="input.c.isak004" />}
            #END add-point
 
         #Ctrlp:input.c.isak005
         ON ACTION controlp INFIELD isak005
            #add-point:ON ACTION controlp INFIELD isak005
            {<point name="input.c.isak005" />}
            #END add-point
 
         #Ctrlp:input.c.isak006
         ON ACTION controlp INFIELD isak006
            #add-point:ON ACTION controlp INFIELD isak006
            {<point name="input.c.isak006" />}
            #END add-point
 
         #Ctrlp:input.c.isak007
         ON ACTION controlp INFIELD isak007
            #add-point:ON ACTION controlp INFIELD isak007
            {<point name="input.c.isak007" />}
            #END add-point
 
         #Ctrlp:input.c.isak008
         ON ACTION controlp INFIELD isak008
            #add-point:ON ACTION controlp INFIELD isak008
            {<point name="input.c.isak008" />}
            #END add-point
 
         #Ctrlp:input.c.isak009
         ON ACTION controlp INFIELD isak009
            #add-point:ON ACTION controlp INFIELD isak009
            {<point name="input.c.isak009" />}
            #END add-point
 
         #Ctrlp:input.c.isak010
         ON ACTION controlp INFIELD isak010
            #add-point:ON ACTION controlp INFIELD isak010
            {<point name="input.c.isak010" />}
            #END add-point
 
         #Ctrlp:input.c.isak011
         ON ACTION controlp INFIELD isak011
            #add-point:ON ACTION controlp INFIELD isak011
            {<point name="input.c.isak011" />}
            #END add-point
 
         #Ctrlp:input.c.isak012
         ON ACTION controlp INFIELD isak012
            #add-point:ON ACTION controlp INFIELD isak012
            {<point name="input.c.isak012" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            #若點選cancel則離開dialog
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            #錯誤訊息統整顯示
            CALL cl_showmsg()
  
            IF p_cmd <> "u" THEN
               #當p_cmd不為u代表為新增/複製
               LET l_count = 1  
 
               #確定新增的資料不存在(不重複)
               SELECT COUNT(*) INTO l_count FROM isak_t
                WHERE isakent = g_enterprise AND isaksite = g_isak_m.isaksite
                  AND isak001 = g_isak_m.isak001
 
               IF l_count = 0 THEN
               
                  #add-point:單頭新增前
                  {<point name="input.head.b_insert" mark="Y"/>}
                  #end add-point
               
                  #將新增的單頭資料寫入資料庫
                  INSERT INTO isak_t (isakent,isak001,isaksite,isakstus,isak002,isak003,isak004,isak005, 
                      isak006,isak007,isak008,isak009,isak010,isak011,isak012,isakownid,isakowndp,isakcrtid, 
                      isakcrtdp,isakcrtdt)
                  VALUES (g_enterprise,g_isak_m.isak001,g_isak_m.isaksite,g_isak_m.isakstus,g_isak_m.isak002, 
                      g_isak_m.isak003,g_isak_m.isak004,g_isak_m.isak005,g_isak_m.isak006,g_isak_m.isak007, 
                      g_isak_m.isak008,g_isak_m.isak009,g_isak_m.isak010,g_isak_m.isak011,g_isak_m.isak012, 
                      g_isak_m.isakownid,g_isak_m.isakowndp,g_isak_m.isakcrtid,g_isak_m.isakcrtdp,g_isak_m.isakcrtdt)  

                  
                  #add-point:單頭新增中
                  {<point name="input.head.m_insert"/>}
                  #end add-point
                  
                  #若寫入錯誤則提示錯誤訊息並返回輸入頁面
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("isak_t",SQLCA.sqlcode,1)  
                     CONTINUE DIALOG
                  END IF
                  
                  
                  
                  #資料多語言用-增/改
                  
                  
                  #add-point:單頭新增後
                  {<point name="input.head.a_insert"/>}
                  #end add-point
                  
                  CALL s_transaction_end('Y','0')
               ELSE
                  CALL cl_err( "g_isak_m.isaksite", "std-00006", 0 )
                  CALL s_transaction_end('N','0')
               END IF 
            ELSE
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               UPDATE isak_t SET (isak001,isaksite,isakstus,isak002,isak003,isak004,isak005,isak006, 
                   isak007,isak008,isak009,isak010,isak011,isak012,isakownid,isakowndp,isakcrtid,isakcrtdp, 
                   isakcrtdt) = (g_isak_m.isak001,g_isak_m.isaksite,g_isak_m.isakstus,g_isak_m.isak002, 
                   g_isak_m.isak003,g_isak_m.isak004,g_isak_m.isak005,g_isak_m.isak006,g_isak_m.isak007, 
                   g_isak_m.isak008,g_isak_m.isak009,g_isak_m.isak010,g_isak_m.isak011,g_isak_m.isak012, 
                   g_isak_m.isakownid,g_isak_m.isakowndp,g_isak_m.isakcrtid,g_isak_m.isakcrtdp,g_isak_m.isakcrtdt) 

                WHERE isakent = g_enterprise AND isaksite = g_isaksite_t #
                  AND isak001 = g_isak001_t
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("isak_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("isak_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     
                     #資料多語言用-增/改
                     
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     #紀錄資料更動
                     LET g_log1 = util.JSON.stringify(g_isak_m_t)
                     LET g_log2 = util.JSON.stringify(g_isak_m)
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
               END CASE
            END IF
           #controlp
      END INPUT
          
      #add-point:input段more input 
      {<point name="input.more_input"/>}
      #end add-point
          
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name, g_fld_name, g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
         
      #放棄輸入
      ON ACTION cancel
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #在dialog 右上角 (X)
      ON ACTION close 
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="aisi020.insert" ver="6" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION aisi020_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   CLEAR FORM #清畫面欄位內容
   INITIALIZE g_isak_m.* LIKE isak_t.*             #DEFAULT 設定
   LET g_isaksite_t = NULL
   LET g_isak001_t = NULL
 
   CALL s_transaction_begin()
   
   WHILE TRUE
      
      #公用欄位給值
      #此段落由子樣板a14產生    
      LET g_isak_m.isakownid = g_user
      LET g_isak_m.isakowndp = g_dept
      LET g_isak_m.isakcrtid = g_user
      LET g_isak_m.isakcrtdp = g_dept 
      LET g_isak_m.isakcrtdt = cl_get_current()
      LET g_isak_m.isakmodid = ""
      LET g_isak_m.isakmoddt = ""
      LET g_isak_m.isakstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_isak_m.isakstus = "Y"
 
 
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point   
     
      #資料輸入
      CALL aisi020_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         #若取消則還原資料
         LET INT_FLAG = 0
         LET g_isak_m.* = g_isak_m_t.*
         CALL aisi020_show()
         CALL cl_err("",9001,0)
         EXIT WHILE
      END IF
 
      LET g_rec_b = 0
      EXIT WHILE
   END WHILE
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
 
   LET g_wc = "(",g_wc,  
              " OR ( isakent = '" ||g_enterprise|| "' AND",
              " isaksite = '", g_isak_m.isaksite CLIPPED, "' "
              ," AND isak001 = '", g_isak_m.isak001 CLIPPED, "' "
 
              , ")) "
 
END FUNCTION
]]>
</section>
  <section id="aisi020.main" ver="7" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ais","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT isak001,'',isaksite,isakstus,isak002,'','','',isak003,'',isak004,'','', 
       '',isak005,'',isak006,isak007,isak008,isak009,isak010,isak011,isak012,isakownid,'',isakowndp, 
       '',isakcrtid,'',isakcrtdp,'',isakcrtdt,isakmodid,'',isakmoddt", 
                      " FROM isak_t",
                      " WHERE isakent= ? AND isaksite=? AND isak001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aisi020_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE isak001,isaksite,isakstus,isak002,isak003,isak004,isak005,isak006,isak007, 
       isak008,isak009,isak010,isak011,isak012,isakownid,isakowndp,isakcrtid,isakcrtdp,isakcrtdt,isakmodid, 
       isakmoddt,t1.pmaal004 ,t2.ooag011 ,t3.ooefl003 ,t4.ooag011 ,t5.ooefl003 ,t6.ooag011",
               " FROM isak_t",
                              " LEFT JOIN pmaal_t t1 ON t1.pmaalent='"||g_enterprise||"' AND t1.pmaal001=isak001 AND t1.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=isakownid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=isakowndp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent='"||g_enterprise||"' AND t4.ooag001=isakcrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=isakcrtdp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent='"||g_enterprise||"' AND t6.ooag001=isakmodid  ",
 
               " WHERE isakent = '" ||g_enterprise|| "' AND isaksite = ? AND isak001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aisi020_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aisi020 WITH FORM cl_ap_formpath("ais",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aisi020_init()   
 
      #進入選單 Menu (="N")
      CALL aisi020_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aisi020
      
   END IF 
   
   CLOSE aisi020_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="aisi020.modify" ver="8" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION aisi020_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point
   
   #先確定key值無遺漏
   IF g_isak_m.isaksite IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF 
 
   ERROR ""
  
   #備份key值
   LET g_isaksite_t = g_isak_m.isaksite
   LET g_isak001_t = g_isak_m.isak001
 
   
   CALL s_transaction_begin()
   
   #先lock資料
   OPEN aisi020_cl USING g_enterprise,g_isak_m.isaksite,g_isak_m.isak001
   IF STATUS THEN
      CALL cl_err("OPEN aisi020_cl:", STATUS, 1)
      CLOSE aisi020_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aisi020_master_referesh USING g_isak_m.isaksite,g_isak_m.isak001 INTO g_isak_m.isak001,g_isak_m.isaksite, 
       g_isak_m.isakstus,g_isak_m.isak002,g_isak_m.isak003,g_isak_m.isak004,g_isak_m.isak005,g_isak_m.isak006, 
       g_isak_m.isak007,g_isak_m.isak008,g_isak_m.isak009,g_isak_m.isak010,g_isak_m.isak011,g_isak_m.isak012, 
       g_isak_m.isakownid,g_isak_m.isakowndp,g_isak_m.isakcrtid,g_isak_m.isakcrtdp,g_isak_m.isakcrtdt, 
       g_isak_m.isakmodid,g_isak_m.isakmoddt,g_isak_m.isak001_desc,g_isak_m.isakownid_desc,g_isak_m.isakowndp_desc, 
       g_isak_m.isakcrtid_desc,g_isak_m.isakcrtdp_desc,g_isak_m.isakmodid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err("isak_t",SQLCA.sqlcode,0)
      CLOSE aisi020_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
 
   #顯示資料
   CALL aisi020_show()
   
   WHILE TRUE
      LET g_isak_m.isaksite = g_isaksite_t
      LET g_isak_m.isak001 = g_isak001_t
 
      
      #寫入修改者/修改日期資訊
      LET g_isak_m.isakmodid = g_user 
LET g_isak_m.isakmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
 
      #資料輸入
      CALL aisi020_input("u")     
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_isak_m.* = g_isak_m_t.*
         CALL aisi020_show()
         CALL cl_err("",9001,0)
         EXIT WHILE
      END IF
 
      #若有modid跟moddt則進行update
      UPDATE isak_t SET (isakmodid,isakmoddt) = (g_isak_m.isakmodid,g_isak_m.isakmoddt)
       WHERE isakent = g_enterprise AND isaksite = g_isaksite_t
         AND isak001 = g_isak001_t
 
 
      EXIT WHILE
      
   END WHILE
   
   CLOSE aisi020_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U(暫時無用)
   #CALL cl_flow_notify(g_isak_m.isaksite,"U")
   
   LET g_worksheet_hidden = 0
   
END FUNCTION   
]]>
</section>
  <section id="aisi020.other_dialog" ver="1" status="" src="s">
<![CDATA[ 
]]>
</section>
  <section id="aisi020.other_function" ver="2" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="aisi020.query" ver="5" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aisi020_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point
   
   LET INT_FLAG = 0
   LET ls_wc = g_wc
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL g_browser.clear() 
 
   #browser panel折疊
   IF g_worksheet_hidden THEN
      CALL gfrm_curr.setElementHidden("worksheet_vbox",0)
      CALL gfrm_curr.setElementImage("worksheethidden","worksheethidden-24.png")
      LET g_worksheet_hidden = 0
   END IF
   
   #單頭折疊
   IF g_header_hidden THEN
      CALL gfrm_curr.setElementHidden("vb_master",0)
      CALL gfrm_curr.setElementImage("controls","headerhidden-24")
      LET g_header_hidden = 0
   END IF
 
   INITIALIZE g_isak_m.* TO NULL
   ERROR ""
 
   DISPLAY " " TO FORMONLY.b_count
   DISPLAY " " TO FORMONLY.h_count
   CALL aisi020_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aisi020_browser_fill(g_wc,"F")
      CALL aisi020_fetch("")
      RETURN
   ELSE
      LET g_current_row = 1
      LET g_current_cnt = 0
   END IF
   
   #根據條件從新抓取資料
   LET g_error_show = 1
   CALL aisi020_browser_fill(g_wc,"F")   # 移到第一頁
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL aisi020_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION
]]>
</section>
  <section id="aisi020.reproduce" ver="6" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION aisi020_reproduce()
   DEFINE l_newno     LIKE isak_t.isaksite 
   DEFINE l_oldno     LIKE isak_t.isaksite 
   DEFINE l_newno02     LIKE isak_t.isak001 
   DEFINE l_oldno02     LIKE isak_t.isak001 
 
   DEFINE l_master    RECORD LIKE isak_t.*
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   #先確定key值無遺漏
   IF g_isak_m.isaksite IS NULL
      OR g_isak_m.isak001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   #備份key值
   LET g_isaksite_t = g_isak_m.isaksite
   LET g_isak001_t = g_isak_m.isak001
 
   
   #清空key值
   LET g_isak_m.isaksite = ""
   LET g_isak_m.isak001 = ""
 
    
   CALL aisi020_set_entry("a")
   CALL aisi020_set_no_entry("a")
   
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_isak_m.isakownid = g_user
      LET g_isak_m.isakowndp = g_dept
      LET g_isak_m.isakcrtid = g_user
      LET g_isak_m.isakcrtdp = g_dept 
      LET g_isak_m.isakcrtdt = cl_get_current()
      LET g_isak_m.isakmodid = ""
      LET g_isak_m.isakmoddt = ""
      LET g_isak_m.isakstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #資料輸入
   CALL aisi020_input("r")
 
   #清空key欄位的desc
      LET g_isak_m.isak001_desc = ''
   DISPLAY BY NAME g_isak_m.isak001_desc
 
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   CALL s_transaction_begin()
   
   #add-point:單頭複製前
   {<point name="reproduce.head.b_insert" mark="Y"/>}
   #end add-point
   
   #add-point:單頭複製中
   {<point name="reproduce.head.m_insert"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("isak_t",SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:單頭複製後
   {<point name="reproduce.head.a_insert"/>}
   #end add-point
   
   CALL s_transaction_end('Y','0')
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   
   LET g_wc = "(",g_wc,  
              " OR (",
              " isaksite = '", g_isak_m.isaksite CLIPPED, "' "
              ," AND isak001 = '", g_isak_m.isak001 CLIPPED, "' "
 
              , ")) "
   
   LET g_isaksite_t = g_isak_m.isaksite
   LET g_isak001_t = g_isak_m.isak001
 
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
                   
END FUNCTION
]]>
</section>
  <section id="aisi020.set_entry" ver="2" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aisi020_set_entry(p_cmd)
   DEFINE p_cmd LIKE type_t.chr1
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point     
 
   IF p_cmd = "a" THEN
      CALL cl_set_comp_entry("isaksite,isak001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aisi020.set_no_entry" ver="3" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aisi020_set_no_entry(p_cmd)
   DEFINE p_cmd LIKE type_t.chr1
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("isaksite,isak001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aisi020.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aisi020_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_isak_m.isaksite
   LET g_pk_array[1].column = 'isaksite'
   LET g_pk_array[2].values = g_isak_m.isak001
   LET g_pk_array[2].column = 'isak001'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="aisi020.show" ver="6" status="" src="s">
<![CDATA[#+ 資料顯示 
PRIVATE FUNCTION aisi020_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   #在browser 移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()
   
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_isak_m.isakownid_desc = cl_get_username(g_isak_m.isakownid)
      #LET g_isak_m.isakowndp_desc = cl_get_deptname(g_isak_m.isakowndp)
      #LET g_isak_m.isakcrtid_desc = cl_get_username(g_isak_m.isakcrtid)
      #LET g_isak_m.isakcrtdp_desc = cl_get_deptname(g_isak_m.isakcrtdp)
      #LET g_isak_m.isakmodid_desc = cl_get_username(g_isak_m.isakmodid)
      
 
 
    
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aisi020_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
 
   #將資料輸出到畫面上
   DISPLAY BY NAME g_isak_m.isak001,g_isak_m.isak001_desc,g_isak_m.isaksite,g_isak_m.isakstus,g_isak_m.isak002, 
       g_isak_m.isak002_desc,g_isak_m.oodb005_1,g_isak_m.oodb006_1,g_isak_m.isak003,g_isak_m.isak003_desc, 
       g_isak_m.isak004,g_isak_m.isak004_desc,g_isak_m.oodb005_2,g_isak_m.oodb006_2,g_isak_m.isak005, 
       g_isak_m.isak005_desc,g_isak_m.isak006,g_isak_m.isak007,g_isak_m.isak008,g_isak_m.isak009,g_isak_m.isak010, 
       g_isak_m.isak011,g_isak_m.isak012,g_isak_m.isakownid,g_isak_m.isakownid_desc,g_isak_m.isakowndp, 
       g_isak_m.isakowndp_desc,g_isak_m.isakcrtid,g_isak_m.isakcrtid_desc,g_isak_m.isakcrtdp,g_isak_m.isakcrtdp_desc, 
       g_isak_m.isakcrtdt,g_isak_m.isakmodid,g_isak_m.isakmodid_desc,g_isak_m.isakmoddt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_isak_m.isakstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="aisi020.signature" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="aisi020.state_change" ver="3" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION aisi020_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_isak_m.isaksite IS NULL
      OR g_isak_m.isak001 IS NULL
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_isak_m.isakstus
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION inactive
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.inactive"/>}
         #end add-point
         EXIT MENU
      ON ACTION active
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.active"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE isak_t SET isakstus = lc_state 
    WHERE isakent = g_enterprise AND isaksite = g_isak_m.isaksite
      AND isak001 = g_isak_m.isak001
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
      LET g_isak_m.isakstus = lc_state
      DISPLAY BY NAME g_isak_m.isakstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="aisi020.ui_browser_refresh" ver="4" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aisi020_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point     
 
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_isaksite = g_isak_m.isaksite
         AND g_browser[l_i].b_isak001 = g_isak_m.isak001
 
         THEN
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
       END IF
   END FOR
   
   DISPLAY g_header_cnt TO FORMONLY.b_count     #page count
   DISPLAY g_header_cnt TO FORMONLY.h_count     #page count
   LET g_browser_cnt = g_browser_cnt-1
   IF g_current_idx > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_idx = g_browser_cnt
   END IF
  
END FUNCTION
]]>
</section>
  <section id="aisi020.ui_dialog" ver="10" status="" src="s">
<![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION aisi020_ui_dialog() 
   DEFINE li_exit   LIKE type_t.num5        #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num5        #指標變數
   DEFINE ls_wc     STRING                  #wc用
   DEFINE la_param  RECORD                  #程式串查用變數
             prog   STRING,                 #串查程式名稱
             param  DYNAMIC ARRAY OF STRING #傳遞變數
                    END RECORD
   DEFINE ls_js     STRING                  #轉換後的json字串
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   LET li_exit = FALSE
   LET g_current_row = 0
   LET g_current_idx = 1
   
   #讀入查詢方案logo
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   
   #若有外部參數查詢, 則直接顯示資料(隱藏查詢方案)
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aisi020_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE li_exit = FALSE
      
      CALL aisi020_browser_fill(g_wc,"")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
      
      #判斷前一個動作是否為新增或複製, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_isaksite = g_isaksite_t
               AND g_browser[li_idx].b_isak001 = g_isak001_t
 
               THEN
               LET g_current_row = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
    
      IF g_main_hidden = 0 THEN
         MENU
            BEFORE MENU 
                  
               CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               
               #還原為原本指定筆數
               IF g_current_row > 0 THEN
                  LET g_current_idx = g_current_row
               END IF
               
               #當每次點任一筆資料都會需要用到  
               IF g_browser_cnt > 0 THEN
                  CALL aisi020_fetch("")   
               END IF               
            
            #狀態碼切換
            ON ACTION statechange
               CALL aisi020_statechange()
               LET g_action_choice="statechange"
               
            #第一筆資料
            ON ACTION first
               CALL aisi020_fetch("F") 
               LET g_current_row = g_current_idx
            
            #下一筆資料
            ON ACTION next
               CALL aisi020_fetch("N")
               LET g_current_row = g_current_idx
            
            #指定筆資料
            ON ACTION jump
               CALL aisi020_fetch("/")
               LET g_current_row = g_current_idx
            
            #上一筆資料
            ON ACTION previous
               CALL aisi020_fetch("P")
               LET g_current_row = g_current_idx
            
            #最後筆資料
            ON ACTION last 
               CALL aisi020_fetch("L")  
               LET g_current_row = g_current_idx
            
            #離開程式
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT MENU 
            
            #離開程式
            ON ACTION close
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT MENU
            
            #主頁摺疊
            ON ACTION mainhidden       
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT MENU
               
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT MENU
            
            #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            ON ACTION controls   
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden     
               END IF
          
            #查詢方案用
            ON ACTION queryplansel
               CALL cl_dlg_qryplan_select() RETURNING ls_wc
               #不是空條件才寫入g_wc跟重新找資料
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  CALL aisi020_browser_fill(g_wc,"F")   #browser_fill()會將notice區塊清空
                  CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               END IF
            
            #查詢方案用
            ON ACTION qbe_select
               CALL cl_qbe_list("m") RETURNING ls_wc
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL aisi020_browser_fill(g_wc,"F")
                  IF g_browser_cnt = 0 THEN
                     CALL cl_err("","-100",1)
                     CLEAR FORM
                  ELSE
                     CALL aisi020_fetch("F")
                  END IF
               END IF
               #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               CALL cl_notice()
            
            
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aisi020_modify()
               #add-point:ON ACTION modify
               {<point name="menu2.modify" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aisi020_delete()
               #add-point:ON ACTION delete
               {<point name="menu2.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aisi020_insert()
               #add-point:ON ACTION insert
               {<point name="menu2.insert" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu2.output" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aisi020_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu2.reproduce" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aisi020_query()
               #add-point:ON ACTION query
               {<point name="menu2.query" />}
               #END add-point
               
            END IF
 
 
            
            
            
            #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aisi020_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.menu.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aisi020_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.menu.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aisi020_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.menu.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
            
            #主選單用ACTION
            &include "main_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END MENU
      
      ELSE
      
         DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
           
      
            #左側瀏覽頁簽
            DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTE(COUNT=g_rec_b)
            
               BEFORE ROW
                  #回歸舊筆數位置 (回到當時異動的筆數)
                  LET g_current_idx = DIALOG.getCurrentRow("s_browse")
                  IF g_current_idx = 0 THEN
                     LET g_current_idx = 1
                  END IF
                  LET g_current_row = g_current_idx  #目前指標
                  LET g_current_sw = TRUE
                  CALL cl_show_fld_cont()     
                  
                  #當每次點任一筆資料都會需要用到               
                  CALL aisi020_fetch("")      
                  
               
            
            END DISPLAY
 
            #add-point:ui_dialog段自定義display array
            {<point name="ui_dialog.more_displayarray"/>}
            #end add-point
 
            #查詢方案用
            SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
            SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
         
            BEFORE DIALOG
               CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               LET g_curr_diag = ui.DIALOG.getCurrent()
               #LET g_page = "first" 
               #還原為原本指定筆數
               IF g_current_row > 1 THEN
                  #當刪除最後一筆資料時可能產生錯誤, 進行額外判斷
                  IF g_current_row > g_browser.getLength() THEN
                     LET g_current_row = g_browser.getLength()
                  END IF 
                  LET g_current_idx = g_current_row
                  CALL DIALOG.setCurrentRow("s_browse",g_current_idx)
               END IF
 
               #當每次點任一筆資料都會需要用到  
               IF g_browser_cnt > 0 THEN
                  CALL aisi020_fetch("")   
               END IF               
               
            AFTER DIALOG
               #add-point:ui_dialog段 after dialog
               {<point name="ui_dialog.after_dialog"/>}
               #end add-point
            
            #狀態碼切換
            ON ACTION statechange
               LET g_action_choice="statechange"
               CALL aisi020_statechange()
               EXIT DIALOG
         
            #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aisi020_filter()
               EXIT DIALOG
 
 
 
            
            #第一筆資料
            ON ACTION first
               CALL aisi020_fetch("F") 
               LET g_current_row = g_current_idx
            
            #下一筆資料
            ON ACTION next
               CALL aisi020_fetch("N")
               LET g_current_row = g_current_idx
         
            #指定筆資料
            ON ACTION jump
               CALL aisi020_fetch("/")
               LET g_current_row = g_current_idx
         
            #上一筆資料
            ON ACTION previous
               CALL aisi020_fetch("P")
               LET g_current_row = g_current_idx
          
            #最後筆資料
            ON ACTION last 
               CALL aisi020_fetch("L")  
               LET g_current_row = g_current_idx
         
            #離開程式
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT DIALOG 
         
            #離開程式
            ON ACTION close
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT DIALOG 
         
            #主頁摺疊
            ON ACTION mainhidden       
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT DIALOG
               
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT DIALOG
         
            #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            ON ACTION controls   
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden     
               END IF
 
            
            #查詢方案用
            ON ACTION queryplansel
               CALL cl_dlg_qryplan_select() RETURNING ls_wc
               #不是空條件才寫入g_wc跟重新找資料
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  CALL aisi020_browser_fill(g_wc,"F")   #browser_fill()會將notice區塊清空
                  CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               END IF
            
            #查詢方案用
            ON ACTION qbe_select
               CALL cl_qbe_list("m") RETURNING ls_wc
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL aisi020_browser_fill(g_wc,"F")
                  IF g_browser_cnt = 0 THEN
                     CALL cl_err("","-100",1)
                     CLEAR FORM
                  ELSE
                     CALL aisi020_fetch("F")
                  END IF
               END IF
               #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               CALL cl_notice()
               
            
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aisi020_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aisi020_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aisi020_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aisi020_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aisi020_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
            
            
 
            #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aisi020_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aisi020_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aisi020_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
            #主選單用ACTION
            &include "main_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END DIALOG 
      
      END IF
      
   END WHILE
 
END FUNCTION
]]>
</section>
</add_points>