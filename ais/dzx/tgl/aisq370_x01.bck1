#該程式未解開Section, 採用最新樣板產出!
{<section id="aisq370_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:1(2016-09-10 14:30:18), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000003
#+ Filename...: aisq370_x01
#+ Description: 應付發票清單查詢作業報表元件
#+ Creator....: 08732(2016-09-10 10:44:13)
#+ Modifier...: 08732 -SD/PR-

{</section>}

{<section id="aisq370_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:7)
#add-point:填寫註解說明
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #where condition 
       a1 STRING,                  #gldn_tmp 
       a2 STRING                   #visible_column
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point

{</section>}

{<section id="aisq370_x01.main" readonly="Y" >}
PUBLIC FUNCTION aisq370_x01(p_arg1,p_arg2,p_arg3)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 STRING                  #tm.a1  gldn_tmp 
DEFINE  p_arg3 STRING                  #tm.a2  visible_column
#add-point:init段define(客製用) name="component.define_customerization"
{<point name="component.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.a1 = p_arg2
   LET tm.a2 = p_arg3
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "aisq370_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL aisq370_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL aisq370_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL aisq370_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL aisq370_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL aisq370_x01_rep_data()
 
END FUNCTION

{</section>}

{<section id="aisq370_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION aisq370_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "isament.isam_t.isament,isamcomp.isam_t.isamcomp,l_isamcomp_desc.type_t.chr100,isamdocno.isam_t.isamdocno,isamseq.isam_t.isamseq,isam001.isam_t.isam001,isam002.isam_t.isam002,l_isam002_desc.type_t.chr100,isam011.isam_t.isam011,isam009.isam_t.isam009,isam010.isam_t.isam010,isam008.isam_t.isam008,l_isam008_desc.type_t.chr100,isam012.isam_t.isam012,l_isam012_desc.type_t.chr100,isam0121.isam_t.isam0121,isam013.isam_t.isam013,isam014.isam_t.isam014,isam015.isam_t.isam015,isam023.isam_t.isam023,isam024.isam_t.isam024,isam025.isam_t.isam025,isam026.isam_t.isam026,isam027.isam_t.isam027,isam028.isam_t.isam028,isamownid.isam_t.isamownid,l_isamownid_desc.type_t.chr100,isamowndp.isam_t.isamowndp,l_isamowndp_desc.type_t.chr100,isamcrtid.isam_t.isamcrtid,l_isamcrtid_desc.type_t.chr100,isamcrtdp.isam_t.isamcrtdp,l_isamcrtdp_desc.type_t.chr100,isamcrtdt.isam_t.isamcrtdt,isammodid.isam_t.isammodid,l_isammodid_desc.type_t.chr100,isammoddt.isam_t.isammoddt,isamcnfid.isam_t.isamcnfid,l_isamcnfid_desc.type_t.chr100,isamcnfdt.isam_t.isamcnfdt" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION

{</section>}

{<section id="aisq370_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION aisq370_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"
{<point name="ins_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         {<point name="insert_prep"/>}
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION

{</section>}

{<section id="aisq370_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aisq370_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"
{<point name="sel_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT isament,isamcomp,NULL,isamdocno,isamseq,isam001,isam002,NULL,isam011,isam009, 
       isam010,isam008,NULL,isam012,NULL,isam0121,isam013,isam014,isam015,isam023,isam024,isam025,isam026, 
       isam027,isam028,isamownid,NULL,isamowndp,NULL,isamcrtid,NULL,isamcrtdp,NULL,isamcrtdt,isammodid, 
       NULL,isammoddt,isamcnfid,NULL,isamcnfdt"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM isam_t"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("isam_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE aisq370_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE aisq370_x01_curs CURSOR FOR aisq370_x01_prepare
 
END FUNCTION

{</section>}

{<section id="aisq370_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION aisq370_x01_ins_data()
DEFINE sr RECORD 
   isament LIKE isam_t.isament, 
   isamcomp LIKE isam_t.isamcomp, 
   l_isamcomp_desc LIKE type_t.chr100, 
   isamdocno LIKE isam_t.isamdocno, 
   isamseq LIKE isam_t.isamseq, 
   isam001 LIKE isam_t.isam001, 
   isam002 LIKE isam_t.isam002, 
   l_isam002_desc LIKE type_t.chr100, 
   isam011 LIKE isam_t.isam011, 
   isam009 LIKE isam_t.isam009, 
   isam010 LIKE isam_t.isam010, 
   isam008 LIKE isam_t.isam008, 
   l_isam008_desc LIKE type_t.chr100, 
   isam012 LIKE isam_t.isam012, 
   l_isam012_desc LIKE type_t.chr100, 
   isam0121 LIKE isam_t.isam0121, 
   isam013 LIKE isam_t.isam013, 
   isam014 LIKE isam_t.isam014, 
   isam015 LIKE isam_t.isam015, 
   isam023 LIKE isam_t.isam023, 
   isam024 LIKE isam_t.isam024, 
   isam025 LIKE isam_t.isam025, 
   isam026 LIKE isam_t.isam026, 
   isam027 LIKE isam_t.isam027, 
   isam028 LIKE isam_t.isam028, 
   isamownid LIKE isam_t.isamownid, 
   l_isamownid_desc LIKE type_t.chr100, 
   isamowndp LIKE isam_t.isamowndp, 
   l_isamowndp_desc LIKE type_t.chr100, 
   isamcrtid LIKE isam_t.isamcrtid, 
   l_isamcrtid_desc LIKE type_t.chr100, 
   isamcrtdp LIKE isam_t.isamcrtdp, 
   l_isamcrtdp_desc LIKE type_t.chr100, 
   isamcrtdt LIKE isam_t.isamcrtdt, 
   isammodid LIKE isam_t.isammodid, 
   l_isammodid_desc LIKE type_t.chr100, 
   isammoddt LIKE isam_t.isammoddt, 
   isamcnfid LIKE isam_t.isamcnfid, 
   l_isamcnfid_desc LIKE type_t.chr100, 
   isamcnfdt LIKE isam_t.isamcnfdt
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"
{<point name="ins_data.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH aisq370_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.isament,sr.isamcomp,sr.l_isamcomp_desc,sr.isamdocno,sr.isamseq,sr.isam001,sr.isam002,sr.l_isam002_desc,sr.isam011,sr.isam009,sr.isam010,sr.isam008,sr.l_isam008_desc,sr.isam012,sr.l_isam012_desc,sr.isam0121,sr.isam013,sr.isam014,sr.isam015,sr.isam023,sr.isam024,sr.isam025,sr.isam026,sr.isam027,sr.isam028,sr.isamownid,sr.l_isamownid_desc,sr.isamowndp,sr.l_isamowndp_desc,sr.isamcrtid,sr.l_isamcrtid_desc,sr.isamcrtdp,sr.l_isamcrtdp_desc,sr.isamcrtdt,sr.isammodid,sr.l_isammodid_desc,sr.isammoddt,sr.isamcnfid,sr.l_isamcnfid_desc,sr.isamcnfdt
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "aisq370_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION

{</section>}

{<section id="aisq370_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION aisq370_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"
{<point name="rep_data.define_customerization" edit="c" mark="Y"/>}
#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION

{</section>}

{<section id="aisq370_x01.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

