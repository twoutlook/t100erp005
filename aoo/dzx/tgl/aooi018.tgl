#+ Version....: T6-ERP-1.00.00 Build-000150
#+ 
#+ Filename...: aooi018
#+ Buildtype..: 應用i05樣板自動產生
#+ Memo.......:

{<point name="global.memo" />}
 
IMPORT os
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
{<Module define>}
 
#單頭 type 宣告
PRIVATE type type_g_oocq_m        RECORD
   oocq001 LIKE oocq_t.oocq001, 
   oocq002 LIKE oocq_t.oocq002, 
   oocq003 LIKE oocq_t.oocq003, 
   oocq001_desc LIKE type_t.chr500, 
   oocr004 LIKE oocr_t.oocr004, 
   oocr005 LIKE oocr_t.oocr005, 
   oocq003_desc LIKE type_t.chr500, 
   oocqstus LIKE oocq_t.oocqstus, 
   oocq004 LIKE oocq_t.oocq004, 
   oocq005 LIKE oocq_t.oocq005, 
   oocq006 LIKE oocq_t.oocq006, 
   oocq007 LIKE oocq_t.oocq007, 
   oocq008 LIKE oocq_t.oocq008, 
   oocq009 LIKE oocq_t.oocq009, 
   oocq010 LIKE oocq_t.oocq010, 
   oocq011 LIKE oocq_t.oocq011, 
   oocq012 LIKE oocq_t.oocq012, 
   oocq013 LIKE oocq_t.oocq013, 
   oocq014 LIKE oocq_t.oocq014, 
   oocq015 LIKE oocq_t.oocq015, 
   oocq016 LIKE oocq_t.oocq016, 
   oocq017 LIKE oocq_t.oocq017, 
   oocq018 LIKE oocq_t.oocq018, 
   oocq019 LIKE oocq_t.oocq019, 
   oocq020 LIKE oocq_t.oocq020, 
   oocq021 LIKE oocq_t.oocq021, 
   oocq022 LIKE oocq_t.oocq022, 
   oocq023 LIKE oocq_t.oocq023, 
   oocqmodu LIKE oocq_t.oocqmodu, 
   modu_desc LIKE type_t.chr500, 
   oocqdate DATETIME YEAR TO SECOND, 
   oocqoriu LIKE oocq_t.oocqoriu, 
   oriu_desc LIKE type_t.chr500, 
   oocqorid LIKE oocq_t.oocqorid, 
   orid_desc LIKE type_t.chr500, 
   oocquser LIKE oocq_t.oocquser, 
   user_desc LIKE type_t.chr500, 
   oocqdept LIKE oocq_t.oocqdept, 
   dept_desc LIKE type_t.chr500, 
   oocqbuid DATETIME YEAR TO SECOND
   END RECORD
 
    
#模組變數(Module Variables)
DEFINE g_oocq_m          type_g_oocq_m
DEFINE g_oocq_m_t        type_g_oocq_m
DEFINE g_oocq002_t        LIKE oocq_t.oocq002
DEFINE g_oocq003_t        LIKE oocq_t.oocq003
DEFINE g_oocq001_t      LIKE oocq_t.oocq001
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       #外顯欄位
       b_show          LIKE type_t.chr100,
       #父節點id
       b_pid           LIKE type_t.chr100,
       #本身節點id
       b_id            LIKE type_t.chr100,
       #是否展開
       b_exp           LIKE type_t.chr100,
       #是否有子節點
       b_hasC          LIKE type_t.num5,
       #是否已展開
       b_isExp         LIKE type_t.num5,
       #展開值
       b_expcode       LIKE type_t.num5,
       #tree自定義欄位
          b_oocq001 LIKE oocq_t.oocq001,
      b_oocq003 LIKE oocq_t.oocq003,
   b_oocq003_desc LIKE type_t.chr80,
      b_oocq002 LIKE oocq_t.oocq002,
   b_oocq002_desc LIKE type_t.chr80
       END RECORD
       
DEFINE g_browser_root    DYNAMIC ARRAY OF INTEGER    #root資料所在
       
#多table用變數
DEFINE g_master_multi_table_t    RECORD
      oocq001 LIKE oocq_t.oocq001,
      oocq002 LIKE oocq_t.oocq002,
      oocr004 LIKE oocr_t.oocr004,
      oocr005 LIKE oocr_t.oocr005
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_before_input_done   LIKE type_t.num5 
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10      
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                #Current Dialog
                                                      
DEFINE g_pagestart           LIKE type_t.num5         
DEFINE gwin_curr             ui.Window                #Current Window
DEFINE gfrm_curr             ui.Form                  #Current Form
DEFINE g_page_action         STRING                   #page action
DEFINE g_header_hidden       LIKE type_t.num5         #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5         #隱藏工作Panel
DEFINE g_browser_cnt         LIKE type_t.num5         #total count
DEFINE g_page                STRING                   #第幾頁
 
DEFINE g_detail_cnt          LIKE type_t.num5
DEFINE g_detail_idx          LIKE type_t.num5
 
DEFINE g_current_row         LIKE type_t.num5         #Browser所在筆數
DEFINE g_current_sw          LIKE type_t.num5         #Browser所在筆數用開關
 
DEFINE g_searchcol           LIKE type_t.chr200
DEFINE g_searchstr           LIKE type_t.chr200
DEFINE g_searchtype          LIKE type_t.chr200
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_row_index           LIKE type_t.num5
DEFINE g_root_search         BOOLEAN
 
#測試用變數
define g_time1   DECIMAL(10,5) 
define g_cost  DECIMAL(10,5) 
 
{</Module define>}
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#+ 作業開始
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point
    
   #定義在其他link的程式則無效
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aoo","") 
   
   #add-point:作業初始化
   {<point name="main.init"/>}
   #end add-point
 
   #LOCK CURSOR (identifier)
   LET g_forupd_sql = "SELECT oocq001,oocq002,oocq003,'','','','',oocqstus,oocq004,oocq005,oocq006,oocq007,oocq008,oocq009,oocq010,oocq011,oocq012,oocq013,oocq014,oocq015,oocq016,oocq017,oocq018,oocq019,oocq020,oocq021,oocq022,oocq023,oocqmodu,'',oocqdate,oocqoriu,'',oocqorid,'',oocquser,'',oocqdept,'',oocqbuid FROM oocq_t WHERE oocqent= ? AND oocq001=? AND oocq002=? FOR UPDATE"
   LET g_forupd_sql = cl_forupd_sql(g_forupd_sql)
   DECLARE aooi018_cl CURSOR FROM g_forupd_sql   #cursor lock 
   
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aooi018 WITH FORM cl_ap_formpath("aoo",g_prog)
         
      #程式初始化
      CALL aooi018_init()
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #進入選單 Menu (='N')
      CALL aooi018_ui_dialog() 
 
      #畫面關閉
      CLOSE WINDOW w_aooi018
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aooi018_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point 
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aooi018_default_search()
    
END FUNCTION
 
#+ 選單功能實際執行處
PRIVATE FUNCTION aooi018_ui_dialog() 
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   {<Local define>}
   DEFINE li_exit      LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_wc        LIKE type_t.chr200
   {</Local define>}
   
   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm() 
   
   WHILE li_exit = FALSE
      CALL aooi018_browser_fill(g_wc,g_searchtype,g_searchcol)
      
      IF g_worksheet_hidden THEN
      
         LET g_current_sw = FALSE
         
         #回歸舊筆數位置 (回到當時異動的筆數)
         LET g_current_idx = g_current_row
         LET g_current_sw = TRUE
         CALL cl_show_fld_cont() 
         IF g_current_idx > 0 THEN
         CALL aooi018_fetch('')            #當每次點任一筆資料都會需要用到
         END IF
 
         MENU
         
            #add-point:ui_dialog段其他頁簽的 display array(in menu)
            {<point name="ui_dialog.more_displayarray_in_menu"/>}
            #end add-point
            
            ON ACTION statechange
               CALL aooi018_statechange()
               EXIT MENU
            
            #ACTION表單列
            ON ACTION first
               LET g_current_idx = 1
               CALL aooi018_fetch('')
               LET g_current_row = g_current_idx
            
            ON ACTION next
               LET g_current_idx = g_current_idx + 1
               CALL aooi018_fetch('')
               LET g_current_row = g_current_idx
            
            ON ACTION jump
               CALL aooi018_fetch('/')
               LET g_current_row = g_current_idx
            
            ON ACTION previous
               LET g_current_idx = g_current_idx - 1
               CALL aooi018_fetch('')
               LET g_current_row = g_current_idx
            
            ON ACTION last 
               LET g_current_idx = g_browser_cnt
               CALL aooi018_fetch('') 
               LET g_current_row = g_current_idx               
            
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT MENU 
            
            ON ACTION close
               LET li_exit = TRUE
               EXIT MENU
         
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementImage("mainhidden","small/arr-r.png")
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementImage("mainhidden","small/arr-l.png")
                  LET g_main_hidden = 1
               END IF
         
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_worksheet_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  CALL gfrm_curr.setElementImage("worksheethidden","small/arr-l.png")
                  LET g_worksheet_hidden = 0
                  EXIT MENU
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  CALL gfrm_curr.setElementImage("worksheethidden","small/arr-r.png")
                  LET g_worksheet_hidden = 1
                  EXIT MENU
               END IF
         
            ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet_detail",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet_detail",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden
               END IF
                
            


         ON ACTION query
            LET g_action_choice="query"
            IF cl_chk_act_auth() THEN 
               CALL aooi018_query()
            #add-point:ON ACTION query
            {<point name="menu.query" />}
            #END add-point

                EXIT MENU
            END IF



         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_chk_act_auth() THEN 
               CALL aooi018_modify()
            #add-point:ON ACTION modify
            {<point name="menu.modify" />}
            #END add-point

                EXIT MENU
            END IF



         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_chk_act_auth() THEN 
               CALL aooi018_insert()
            #add-point:ON ACTION insert
            {<point name="menu.insert" />}
            #END add-point

                EXIT MENU
            END IF



         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_chk_act_auth() THEN 
               CALL aooi018_delete()
            #add-point:ON ACTION delete
            {<point name="menu.delete" />}
            #END add-point

                EXIT MENU
            END IF



         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_chk_act_auth() THEN 
               CALL aooi018_reproduce()
            #add-point:ON ACTION reproduce
            {<point name="menu.reproduce" />}
            #END add-point

                EXIT MENU
            END IF

            
            &include "main_menu.4gl"
 
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END MENU
      
      ELSE
      
         DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         
            INPUT g_searchstr,g_searchcol,g_searchtype FROM formonly.searchstr,formonly.cbo_searchcol,formonly.rdo_searchtype
               BEFORE INPUT
            END INPUT
            
            #左側瀏覽頁簽
            DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTE(COUNT=g_rec_b)
            
               BEFORE ROW
                  #回歸舊筆數位置 (回到當時異動的筆數)
                  LET g_current_idx = DIALOG.getCurrentRow("s_browse")
                  IF g_current_row > 1 AND g_current_sw = FALSE THEN
                     CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                     LET g_current_idx = g_current_row
                  END IF
                  LET g_current_row = g_current_idx #目前指標
                  LET g_current_sw = TRUE
                  CALL cl_show_fld_cont() 
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                   
                  CALL aooi018_fetch('')  #當每次點任一筆資料都會需要用到
                  
               ON EXPAND (g_row_index)
                  #樹展開
                  CALL aooi018_browser_expand(g_row_index)
                  LET g_browser[g_row_index].b_isExp = 1
               
               ON COLLAPSE (g_row_index)
                  #樹關閉
            
            END DISPLAY
            
            #add-point:ui_dialog段其他頁簽的 display array
            {<point name="ui_dialog.more_displayarray"/>}
            #end add-point
            
            BEFORE DIALOG
               LET g_curr_diag = ui.DIALOG.getCurrent()
               LET g_current_sw = FALSE
               
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_sw = FALSE THEN
                  IF g_current_row > g_browser.getLength() THEN
                     LEt g_current_row = g_browser.getLength()
                  END IF 
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
               CALL cl_show_fld_cont() 
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               IF g_current_idx > 0 THEN
               CALL aooi018_fetch('')            #當每次點任一筆資料都會需要用到
               END IF
            
            ON ACTION statechange
               CALL aooi018_statechange()
               EXIT DIALOG
            
            #一般搜尋
            ON ACTION searchdata
               LET g_searchstr = GET_FLDBUF(searchstr)
               LET g_searchcol = GET_FLDBUF(cbo_searchcol)
               #若無輸入關鍵字則查找出所有資料
               IF g_searchcol='0' AND NOT cl_null(g_searchstr) THEN
                  CALL cl_err("searchcol:","std-00001",0)
                  CONTINUE DIALOG
               END IF 
               IF NOT cl_null(g_searchstr) THEN
                  LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
                  LET g_wc = g_wc.toLowerCase()
               ELSE
                  LET g_wc = " 1=1 "
               END IF         
               CALL aooi018_browser_fill(g_wc,g_searchtype,g_searchcol)
            
               LET g_current_idx = 1
               IF g_browser_cnt = 0 THEN
                  CALL cl_err('','-100',1)
               ELSE
                  CALL aooi018_fetch('')
               END IF
            
            #進階搜尋
            ON ACTION advancesearch
            
            #ACTION表單列
            ON ACTION first
               LET g_current_idx = 1
               CALL aooi018_fetch('')
               LET g_current_row = g_current_idx
            
            ON ACTION next
               LET g_current_idx = g_current_idx + 1
               CALL aooi018_fetch('')
               LET g_current_row = g_current_idx
            
            ON ACTION jump
               CALL aooi018_fetch('/')
               LET g_current_row = g_current_idx
            
            ON ACTION previous
               LET g_current_idx = g_current_idx - 1
               CALL aooi018_fetch('')
               LET g_current_row = g_current_idx
            
            ON ACTION last 
               LET g_current_idx = g_browser_cnt
               CALL aooi018_fetch('')  
               LET g_current_row = g_current_idx
            
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT DIALOG 
            
            ON ACTION close
               LET li_exit = TRUE
               EXIT DIALOG
            
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementImage("mainhidden","small/arr-r.png")
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementImage("mainhidden","small/arr-l.png")
                  LET g_main_hidden = 1
               END IF
            
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_worksheet_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  CALL gfrm_curr.setElementImage("worksheethidden","small/arr-l.png")
                  LET g_worksheet_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  CALL gfrm_curr.setElementImage("worksheethidden","small/arr-r.png")
                  LET g_worksheet_hidden = 1
               END IF
            
            ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet_detail",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet_detail",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden
               END IF
               
            


         ON ACTION query
            LET g_action_choice="query"
            IF cl_chk_act_auth() THEN 
               CALL aooi018_query()
            #add-point:ON ACTION query
            {<point name="menu.query" />}
            #END add-point

                EXIT DIALOG
            END IF



         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_chk_act_auth() THEN 
               CALL aooi018_modify()
            #add-point:ON ACTION modify
            {<point name="menu.modify" />}
            #END add-point

                EXIT DIALOG
            END IF



         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_chk_act_auth() THEN 
               CALL aooi018_insert()
            #add-point:ON ACTION insert
            {<point name="menu.insert" />}
            #END add-point

                EXIT DIALOG
            END IF



         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_chk_act_auth() THEN 
               CALL aooi018_delete()
            #add-point:ON ACTION delete
            {<point name="menu.delete" />}
            #END add-point

                EXIT DIALOG
            END IF



         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_chk_act_auth() THEN 
               CALL aooi018_reproduce()
            #add-point:ON ACTION reproduce
            {<point name="menu.reproduce" />}
            #END add-point

                EXIT DIALOG
            END IF

            
            &include "main_menu.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END DIALOG 
      
      END IF
      
   END WHILE
 
END FUNCTION 
 
#+ 瀏覽頁簽where條件組成
PRIVATE FUNCTION aooi018_browser_fill(p_wc,p_type,p_col)
   {<Local define>}
   DEFINE p_wc       STRING 
   DEFINE p_type     LIKE type_t.chr10
   DEFINE p_col      LIKE type_t.chr50
   DEFINE l_cnt      LIKE type_t.num10
   DEFINE l_cnt2     LIKE type_t.num10
   {</Local define>}
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point
 
   CALL g_browser.clear()
   CLEAR FORM
   
   IF p_col='0' OR cl_null(p_col) THEN
     LET p_col = 'oocq002'
   END IF
   
   DROP TABLE aooi018_tmp
   
   #Create temp table
   CREATE TEMP TABLE aooi018_tmp
   (
         oocq001 VARCHAR(500),
   oocq003 VARCHAR(500),
   oocq003_desc VARCHAR(500),
   oocq002 VARCHAR(500),
   oocq002_desc VARCHAR(500),
      #僅含browser的欄位
      exp_code  VARCHAR(5)
   );
   create index ooaa_01 on aooi018_tmp (ooaa001,ooaa002);
   
   #先確定搜尋範圍(若無條件搜尋則只找root出來)
   SELECT COUNT(*) INTO l_cnt FROM oocq_t 
   
   #取得符合p_wc的所有資料
   LET g_sql = "SELECT COUNT(*)",
               " FROM oocq_t  ",
               " WHERE oocqent = '" ||g_enterprise|| "' AND ",p_wc
              
   PREPARE master_cnt FROM g_sql
   DECLARE master_cntcur CURSOR FOR master_cnt
   OPEN master_cntcur
   FETCH master_cntcur INTO l_cnt2
   LET g_root_search = FALSE
   
   IF l_cnt = l_cnt2 THEN
      #未輸入條件時則只查找root節點
      LET p_wc = " oocq002 = oocq003 "
      LET g_root_search = TRUE
   END IF
 
   #取得符合p_wc的所有資料
   LET g_sql = "SELECT oocq001,oocq003,'',oocq002,'' ",
               " FROM oocq_t  ",
               " WHERE oocqent = '" ||g_enterprise|| "' AND ",p_wc
              
   PREPARE master_ext FROM g_sql
   DECLARE master_extcur CURSOR FOR master_ext
   let g_cost = 0
   call get_time('s')
   #搜尋建構樹所需的節點
   CASE p_type
      WHEN "1" #上推
         CALL aooi018_match_node(p_wc,p_type) 
      WHEN "2" #下展
         #CALL aooi018_find_speed_tbl(p_wc,p_type) 
         CALL aooi018_match_node(p_wc,p_type) 
      WHEN "3" #全部
         CALL aooi018_match_node(p_wc,p_type) 
   END CASE
		 
	call get_time('e')
     display "撈取資料花費時間:",g_cost
   
      let g_cost = 0
   call get_time('s')
   CALL aooi018_browser_create(p_type)
		 
		          call get_time('e')
     display "建樹花費時間:",g_cost
     
END FUNCTION
 
PRIVATE FUNCTION aooi018_match_node(p_wc,p_type)
   {<Local define>}
   DEFINE p_wc         LIKE type_t.chr200
   DEFINE p_type       LIKE type_t.chr10
   DEFINE ls_code      LIKE type_t.chr50
   DEFINE ls_code2     LIKE type_t.chr50
   DEFINE l_bstmp      RECORD    #body欄位   
             oocq001 VARCHAR(500),
   oocq003 VARCHAR(500),
   oocq003_desc VARCHAR(500),
   oocq002 VARCHAR(500),
   oocq002_desc VARCHAR(500)
          #僅含單身table的欄位
   END RECORD 
   DEFINE l_child_list DYNAMIC ARRAY OF RECORD    #body欄位   
             oocq001 VARCHAR(500),
   oocq003 VARCHAR(500),
   oocq003_desc VARCHAR(500),
   oocq002 VARCHAR(500),
   oocq002_desc VARCHAR(500)
          #僅含單身table的欄位
   END RECORD 
   {</Local define>} 
   #add-point:match_node段define
   {<point name="match_node.define"/>}
   #end add-point
   
   #先找出符合條件的節點並給予展開值
   CASE p_type
      WHEN 1
         LET ls_code = "0"
      WHEN 2
         LET ls_code = "2"
      WHEN 3
         LET ls_code = "2"
   END CASE
   
   IF cl_null('oocq003') THEN
      LET ls_code = '0'
   END IF 
   
   BEGIN WORK
 
   LET g_sql = " INSERT INTO aooi018_tmp (oocq001,oocq003,'',oocq002,'',exp_code) VALUES (?,?,?,?,?,?)"
   PREPARE master_tmp FROM g_sql
   
   display 's----',cl_get_current(),'----'
   IF g_root_search THEN
      #DECLARE master_tmp_cur CURSOR FOR master_tmp
      #OPEN master_tmp_cur
      FOREACH master_extcur INTO l_bstmp.*
         EXECUTE master_tmp USING l_bstmp.*,ls_code
         #PUT master_tmp_cur FROM l_bstmp.*,ls_code
      END FOREACH
      #FLUSH master_tmp_cur
      COMMIT WORK
      display 'e----',cl_get_current(),'----'
      RETURN
   END IF
 
   FOREACH master_extcur INTO l_bstmp.*
      EXECUTE master_tmp USING l_bstmp.*,ls_code
      LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
       
      #找出符合條件的節點的所有祖先並給予展開值
      CASE p_type
         WHEN 1
            LET ls_code2 = "1"
         WHEN 2
            LET ls_code2 = "-1"
         WHEN 3
            LET ls_code2 = "1"
      END CASE
      
      #若pid欄位存在才進行後續處理
      #擷取該節點的父節點到temp table中
      LET g_sql = " SELECT oocq001,oocq003,'',oocq002,'' ",
                  " FROM oocq_t  ",
                  " WHERE oocqent = '" ||g_enterprise|| "' AND oocq002 = ? "
                  ," AND oocq001 = ? "
      PREPARE master_getparent_up FROM g_sql
      
      #擷取該節點的所有父節點
      WHILE TRUE
         IF l_child_list[1].oocq002 IS NULL THEN
            EXIT WHILE
         END IF
      
         EXECUTE master_getparent_up USING l_child_list[1].oocq003
                                           ,l_child_list[1].oocq001
                                           INTO l_bstmp.*
      
      #確定該節點是否存在於temp table中
         
         IF STATUS = 0 AND aooi018_tmp_tbl_chk(l_bstmp.oocq002,ls_code2
                     ,l_bstmp.oocq001
                     ) THEN
            EXECUTE master_tmp USING l_bstmp.*,ls_code2
            LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
         END IF
         CALL l_child_list.deleteElement(1)
      
      END WHILE
   
   END FOREACH  
   
   CLOSE master_tmp
   
   COMMIT WORK
 
END FUNCTION
 
 
#+ TEMP TABLE CHK
PRIVATE FUNCTION aooi018_tmp_tbl_chk(ps_id,pi_code,ps_type)
   {<Local define>}
   DEFINE ps_id       STRING
   DEFINE pi_code     LIKE type_t.num10
   DEFINE ps_type     STRING
   DEFINE ls_id       LIKE type_t.chr500
   DEFINE ls_search   LIKE type_t.chr500
   DEFINE ls_type     LIKE type_t.chr500
   DEFINE li_cnt      LIKE type_t.num10
   DEFINE li_code     LIKE type_t.num10
   {</Local define>}
   #add-point:tmp_tbl_chk段define
   {<point name="tmp_tbl_chk.define"/>}
   #end add-point
   
   LET ls_id = ps_id
   LET ls_type = ps_type
  
   IF cl_null(ls_id) THEN
      RETURN TRUE
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM aooi018_tmp ", 
               " WHERE oocq002 = ? "
                ," AND oocq001 = ? "
 
   PREPARE aooi018_get_cnt FROM g_sql
   EXECUTE aooi018_get_cnt USING ls_id ,ls_type
                                     INTO li_cnt
 
   IF li_cnt = 0 OR SQLCA.sqlcode THEN
      RETURN TRUE
   ELSE
    
      #資料已存在, 確定是否需要更新展開值
      LET g_sql = " SELECT exp_code FROM aooi018_tmp  ",
                  " WHERE oocq002 = ? " 
                   ," AND oocq001 = ? "
 
      PREPARE aooi018_chk_exp FROM g_sql
      
      EXECUTE aooi018_chk_exp USING ls_id ,ls_type
                                        INTO li_code
         
      #若新展開值>原展開值則做更新
      IF pi_code > li_code THEN
         LET g_sql = " UPDATE aooi018_tmp SET (exp_code) = ('",pi_code,"') ",
                     " WHERE oocq002 = ? "
                      ," AND oocq001 = ? "
         PREPARE aooi018_upd_exp FROM g_sql
         EXECUTE aooi018_upd_exp USING ls_id ,ls_type
 
      END IF      
      
      RETURN FALSE
   END IF
 
END FUNCTION
 
#+ Tree子節點展開
PRIVATE FUNCTION aooi018_browser_expand(p_id)
   {<Local define>}
   DEFINE p_id          LIKE type_t.num10
   DEFINE l_id          LIKE type_t.num10
   DEFINE l_cnt         LIKE type_t.num10
   DEFINE l_keyvalue    LIKE type_t.chr50
   DEFINE l_typevalue   LIKE type_t.chr50
   DEFINE l_type        LIKE type_t.chr50
   DEFINE l_sql         LIKE type_t.chr500
   DEFINE ls_source     LIKE type_t.chr500
   DEFINE ls_exp_code   LIKE type_t.chr500
   DEFINE l_return      LIKE type_t.num5
   {</Local define>}
   #add-point:browser_expand段define
   {<point name="browser_expand.define"/>}
   #end add-point
   
   #若已經展開
   IF g_browser[p_id].b_isExp = 1 THEN
      RETURN
   END IF
   
   LET l_return = FALSE
 
   LET l_keyvalue = g_browser[p_id].b_oocq002
   LET l_typevalue = g_browser[p_id].b_oocq001
   
   CASE g_browser[p_id].b_expcode
      WHEN -1
         CALL g_browser.deleteElement(p_id)
      WHEN 0
         RETURN
      WHEN 1
         LET ls_source = "aooi018_tmp"
         LET ls_exp_code = "exp_code"
      WHEN 2
         LET ls_source = "oocq_t"
         LET ls_exp_code = "'2'"
   END CASE
   
   LET l_sql = " SELECT UNIQUE '','','','FALSE','','',",ls_exp_code,",oocq001,oocq003,'',oocq002,''",
               " FROM   ",ls_source,
               " WHERE  oocq003 = '", l_keyvalue,
               "' AND   oocq002 <> oocq003",
               " AND  oocq001 = '", l_typevalue,"'", 
               " ORDER BY oocq002"
   
   PREPARE tree_expand FROM l_sql
   DECLARE tree_ex_cur CURSOR FOR tree_expand
  
   LET l_id = p_id + 1
   CALL g_browser.insertElement(l_id)
   LET l_cnt = 1
   FOREACH tree_ex_cur INTO g_browser[l_id].*
      #pid=父節點id
      LET g_browser[l_id].b_pid  = g_browser[p_id].b_id
      #id=本身節點id(採流水號遞增)
      LET g_browser[l_id].b_id   = g_browser[p_id].b_id||"."||l_cnt
      #hasC=確認該節點是否有子孫
      #LET g_browser[l_id].b_oocq002 = g_browser[l_id].b_oocq002 CLIPPED
      CALL aooi018_desc_show(l_id)
      LET g_browser[l_id].b_hasC = aooi018_chk_hasC(l_id)
      LET l_id = l_id + 1
      CALL g_browser.insertElement(l_id)
      LET l_cnt = l_cnt + 1
      
      LET l_return = TRUE
   END FOREACH
   
   #刪除空資料
   CALL g_browser.deleteElement(l_id)
 
END FUNCTION
 
PRIVATE FUNCTION aooi018_browser_create(p_type)
   {<Local define>}
   DEFINE p_type   LIKE type_t.chr50
   DEFINE l_pid    LIKE type_t.chr50
   {</Local define>}
   #add-point:browser_create
   {<point name="browser_create.define"/>}
   #end add-point
   
   #先找出所有的帳別資料
   LET g_sql = " SELECT UNIQUE oocq001 FROM aooi018_tmp ORDER BY oocq001"
   PREPARE master_type FROM g_sql
   DECLARE master_typecur CURSOR FOR master_type
   
   INITIALIZE g_browser_root TO NULL
   
   LET l_ac = 1
   FOREACH master_typecur INTO g_browser[l_ac].b_oocq001
      #確定root節點所在
      LET g_browser_root[g_browser_root.getLength()+1] = l_ac
      #此處為帳別部分(LV-1)
      LET g_browser[l_ac].b_oocq002  = g_browser[l_ac].b_oocq001
      LET g_browser[l_ac].b_oocq001 = g_browser[l_ac].b_oocq001
      LET g_browser[l_ac].b_pid = '0' CLIPPED
      LET g_browser[l_ac].b_id = l_ac USING "<<<"
      LET g_browser[l_ac].b_exp = TRUE
      LET g_browser[l_ac].b_hasC = TRUE
      LET l_pid = g_browser[l_ac].b_id CLIPPED
      LET l_ac = l_ac + 1
      
      #抓出LV2的所有資料
      LET g_sql = " SELECT UNIQUE oocq001,oocq003,'',oocq002,'',exp_code FROM aooi018_tmp a ",
                  " WHERE ",
                  "a.oocq001 = ? ",
                  " AND ",
                  " (( SELECT COUNT(*) FROM aooi018_tmp b WHERE a.oocq003 = b.oocq002 ", 
                  " AND a.oocq001 = b.oocq001",
                  ") = 0 OR ", 
                  " a.oocq002 = a.oocq003 )", 
                  " ORDER BY a.oocq002"
      PREPARE master_getLV2 FROM g_sql
      DECLARE master_getLV2cur CURSOR FOR master_getLV2
      
      #以下為一般資料root(LV-2)
      OPEN master_getLV2cur USING g_browser[l_ac-1].b_oocq001
      
      LET g_cnt = l_ac
      
      display cl_get_current(),'-s'
      
      FOREACH master_getLV2cur INTO g_browser[g_cnt].b_oocq001,g_browser[g_cnt].b_oocq003,g_browser[g_cnt].b_oocq003_desc,g_browser[g_cnt].b_oocq002,g_browser[g_cnt].b_oocq002_desc,g_browser[g_cnt].b_expcode
         #去除多餘空白
         #LET g_browser[g_cnt].b_oocq002 = g_browser[g_cnt].b_oocq002 CLIPPED
         LET g_browser[g_cnt].b_pid = l_pid
         LET g_browser[g_cnt].b_id = l_pid,".",g_cnt USING "<<<"
         LET g_browser[g_cnt].b_exp = FALSE
         #CASE g_browser[g_cnt].b_expcode
         #   WHEN 2
         #      LET g_browser[g_cnt].b_hasC = aooi018_chk_hasC(g_cnt)
         #   WHEN 1
         #      LET g_browser[g_cnt].b_hasC = aooi018_chk_hasC(g_cnt)
         #   WHEN 0
         #      LET g_browser[g_cnt].b_hasC = FALSE
         #   WHEN -1
         #      #向下查找到展開值不等於-1得節點(temp table中查找)
         #      LET g_cnt = aooi018_find_node(g_cnt)
         #END CASE
		 LET g_browser[g_cnt].b_hasC = TRUE
 
         LET g_cnt = g_cnt + 1   
      END FOREACH
      LET l_ac = g_browser.getLength()
      
      display cl_get_current(),'-e'
      
   END FOREACH
   
   #組合描述欄位&刪除多於資料
   FOR l_ac = 1 TO g_browser.getLength()
      IF cl_null(g_browser[l_ac].b_oocq002) THEN
         CALL g_browser.deleteElement(l_ac)
         LET l_ac = l_ac - 1
      ELSE
         CALL aooi018_desc_show(l_ac)
      END IF
   END FOR
   CALL g_browser.deleteElement(l_ac)
   
   LET g_browser_cnt = g_browser.getLength() - g_browser_root.getLength()
   
END FUNCTION
 
#+ 組合顯示在畫面上的資訊
PRIVATE FUNCTION aooi018_desc_show(pi_ac)
   {<Local define>}
   DEFINE pi_ac   LIKE type_t.num5
   DEFINE li_tmp  LIKE type_t.num5
   {</Local define>}
   #add-point:desc_show段define
   {<point name="desc_show.define"/>}
   #end add-point
   
   LET li_tmp = l_ac
   LET l_ac = pi_ac
   
   
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[l_ac].b_oocq001
      LET g_ref_fields[2] = g_browser[l_ac].b_oocq003
      CALL ap_ref_array2(g_ref_fields,"SELECT oocr004 FROM oocr_t WHERE oocrent='"||g_enterprise||"' AND oocr001=? AND oocr002=? AND oocr003='"||g_lang||"'","") RETURNING g_rtn_fields
      LET g_browser[l_ac].b_oocq003_desc = g_rtn_fields[1]
      DISPLAY BY NAME g_browser[l_ac].b_oocq003_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[l_ac].b_oocq001
      LET g_ref_fields[2] = g_browser[l_ac].b_oocq002
      CALL ap_ref_array2(g_ref_fields,"SELECT oocr004 FROM oocr_t WHERE oocrent='"||g_enterprise||"' AND oocr001=? AND oocr002=? AND oocr003='"||g_lang||"'","") RETURNING g_rtn_fields
      LET g_browser[l_ac].b_oocq002_desc = g_rtn_fields[1]
      DISPLAY BY NAME g_browser[l_ac].b_oocq002_desc

   #add-point:browser_create段desc處理
   {<point name="desc_show.show"/>} 
   #end add-point
 
   LET l_ac = li_tmp
   
END FUNCTION
 
#+ 尋找符合條件的節點
PRIVATE FUNCTION aooi018_find_node(pi_ac)
   {<Local define>}
   DEFINE pi_ac   LIKE type_t.num5
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_tmp  LIKE type_t.num5
   DEFINE ls_pid  STRING
   {</Local define>}
   #add-point:find_node段define
   {<point name="find_node.define"/>}
   #end add-point
   
   LET ls_pid = g_browser[pi_ac].b_pid
   
   LET g_sql = " SELECT UNIQUE '','','','FALSE','','',exp_code,oocq001,oocq003,'',oocq002,'' ",
               " FROM aooi018_tmp ",
               " WHERE oocq003 = ? AND oocq003 <> oocq002",
               " ORDER BY oocq002"
   PREPARE master_getNode FROM g_sql
   DECLARE master_getNodecur CURSOR FOR master_getNode
   
   LET li_idx = pi_ac
   WHILE li_idx <= g_browser.getLength()
      IF g_browser[li_idx].b_expcode = -1 THEN
         OPEN master_getNodecur USING g_browser[li_idx].b_oocq002
         FOREACH master_getNodecur INTO g_browser[g_browser.getLength()+1].*
            CALL aooi018_desc_show(g_browser.getLength())
            LET g_browser[g_browser.getLength()].b_pid = ls_pid
            LET g_browser[g_browser.getLength()].b_id = g_browser.getLength()
            LET g_browser[g_browser.getLength()].b_hasC = aooi018_chk_hasC(g_browser.getLength())
         END FOREACH
         CALL g_browser.deleteElement(li_idx)
         CALL g_browser.deleteElement(g_browser.getLength())
      ELSE
         LET li_idx = li_idx + 1
      END IF
   
   END WHILE
   
   RETURN g_browser.getLength()
 
END FUNCTION
 
#+ QBE資料查詢
PRIVATE FUNCTION aooi018_chk_hasC(pi_id)
   {<Local define>}
   DEFINE pi_id    INTEGER
   DEFINE li_cnt   INTEGER
   {</Local define>}
   #add-point:chk_hasC段define
   {<point name="chk_hasC.define"/>}
   #end add-point
   
   LET g_sql = "SELECT COUNT(oocq003) FROM aooi018_tmp ",
               " WHERE ",
                "oocq003 = ? AND ",
                "exp_code <> '-1' AND oocq002 <> oocq003 "
                 ," AND ",
                "oocq001 = ?"
 
   PREPARE aooi018_temp_chk FROM g_sql
 
   LET g_sql = "SELECT COUNT(*) FROM oocq_t ",
               " WHERE oocqent = '" ||g_enterprise|| "' AND ",
               "oocq002 <> oocq003 AND ",
               "oocq003 = ? "
                ," AND ",
               "oocq001 = ?"   
   
   PREPARE aooi018_master_chk FROM g_sql
   
   CASE g_browser[pi_id].b_expcode 
      WHEN -1
         RETURN FALSE
      WHEN 0
         RETURN FALSE
      WHEN 1
         EXECUTE aooi018_temp_chk 
           USING g_browser[pi_id].b_oocq002
                 ,g_browser[pi_id].b_oocq001
            INTO li_cnt
      WHEN 2 
         EXECUTE aooi018_master_chk 
           USING g_browser[pi_id].b_oocq002
                 ,g_browser[pi_id].b_oocq001
            INTO li_cnt
   END CASE
   
   IF li_cnt > 0 THEN
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF
 
END FUNCTION
 
#+ QBE資料查詢
PRIVATE FUNCTION aooi018_construct()
   {<Local define>}
   DEFINE lc_qbe_sn   LIKE type_t.num10
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   {</Local define>}
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point
   
   #清除畫面
   CLEAR FORM                 
   INITIALIZE g_oocq_m.* TO NULL
    
   INITIALIZE g_wc TO NULL
    
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      CONSTRUCT BY NAME g_wc ON oocq001,oocq002,oocq003,oocqstus,oocq004,oocq005,oocq006,oocq007,oocq008,oocq009,oocq010,oocq011,oocq012,oocq013,oocq014,oocq015,oocq016,oocq017,oocq018,oocq019,oocq020,oocq021,oocq022,oocq023,oocqmodu,oocqdate,oocqoriu,oocqorid,oocquser,oocqdept,oocqbuid 
      
         BEFORE CONSTRUCT
            CALL cl_qbe_init()
            
         #----<<oocqmodu>>----
         ON ACTION controlp INFIELD oocqmodu
            CALL q_common('oocq_t','oocqmodu',TRUE,FALSE,g_oocq_m.oocqmodu) RETURNING ls_return
            DISPLAY ls_return TO oocqmodu
            NEXT FIELD oocqmodu
      
         #----<<oocqoriu>>----
         ON ACTION controlp INFIELD oocqoriu
            CALL q_common('oocq_t','oocqoriu',TRUE,FALSE,g_oocq_m.oocqoriu) RETURNING ls_return
            DISPLAY ls_return TO oocqoriu
            NEXT FIELD oocqoriu  
      
         #----<<oocquser>>----
         ON ACTION controlp INFIELD oocquser
            CALL q_common('oocq_t','oocquser',TRUE,FALSE,g_oocq_m.oocquser) RETURNING ls_return
            DISPLAY ls_return TO oocquser
            NEXT FIELD oocquser
      
         #----<<oocqorid>>----
         ON ACTION controlp INFIELD oocqorid
            CALL q_common('oocq_t','oocqorid',TRUE,FALSE,g_oocq_m.oocqorid) RETURNING ls_return
            DISPLAY ls_return TO oocqorid
            NEXT FIELD oocqorid
      
         #----<<oocqdept>>----
         ON ACTION controlp INFIELD oocqdept
            CALL q_common('oocq_t','oocqdept',TRUE,FALSE,g_oocq_m.oocqdept) RETURNING ls_return
            DISPLAY ls_return TO oocqdept
            NEXT FIELD oocqdept
         
         #----<<oocqbuid>>----
         AFTER FIELD oocqbuid
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<oocqdate>>----
         AFTER FIELD oocqdate
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #---------------------------<  Master  >---------------------------
         #----<<oocq001>>----
         #Ctrlp:construct.c.oocq001
         ON ACTION controlp INFIELD oocq001
            #add-point:ON ACTION controlp INFIELD oocq001
            {<point name="construct.c.oocq001" />}
            #END add-point

         #----<<oocq002>>----
         #Ctrlp:construct.c.oocq002
         ON ACTION controlp INFIELD oocq002
            #add-point:ON ACTION controlp INFIELD oocq002
            {<point name="construct.c.oocq002" />}
            #END add-point

         #----<<oocq003>>----
         #Ctrlp:construct.c.oocq003
         ON ACTION controlp INFIELD oocq003
            #add-point:ON ACTION controlp INFIELD oocq003
            {<point name="construct.c.oocq003" />}
            #END add-point

         #----<<oocqstus>>----
         #Ctrlp:construct.c.oocqstus
         ON ACTION controlp INFIELD oocqstus
            #add-point:ON ACTION controlp INFIELD oocqstus
            {<point name="construct.c.oocqstus" />}
            #END add-point

         #----<<oocq004>>----
         #Ctrlp:construct.c.oocq004
         ON ACTION controlp INFIELD oocq004
            #add-point:ON ACTION controlp INFIELD oocq004
            {<point name="construct.c.oocq004" />}
            #END add-point

         #----<<oocq005>>----
         #Ctrlp:construct.c.oocq005
         ON ACTION controlp INFIELD oocq005
            #add-point:ON ACTION controlp INFIELD oocq005
            {<point name="construct.c.oocq005" />}
            #END add-point

         #----<<oocq006>>----
         #Ctrlp:construct.c.oocq006
         ON ACTION controlp INFIELD oocq006
            #add-point:ON ACTION controlp INFIELD oocq006
            {<point name="construct.c.oocq006" />}
            #END add-point

         #----<<oocq007>>----
         #Ctrlp:construct.c.oocq007
         ON ACTION controlp INFIELD oocq007
            #add-point:ON ACTION controlp INFIELD oocq007
            {<point name="construct.c.oocq007" />}
            #END add-point

         #----<<oocq008>>----
         #Ctrlp:construct.c.oocq008
         ON ACTION controlp INFIELD oocq008
            #add-point:ON ACTION controlp INFIELD oocq008
            {<point name="construct.c.oocq008" />}
            #END add-point

         #----<<oocq009>>----
         #Ctrlp:construct.c.oocq009
         ON ACTION controlp INFIELD oocq009
            #add-point:ON ACTION controlp INFIELD oocq009
            {<point name="construct.c.oocq009" />}
            #END add-point

         #----<<oocq010>>----
         #Ctrlp:construct.c.oocq010
         ON ACTION controlp INFIELD oocq010
            #add-point:ON ACTION controlp INFIELD oocq010
            {<point name="construct.c.oocq010" />}
            #END add-point

         #----<<oocq011>>----
         #Ctrlp:construct.c.oocq011
         ON ACTION controlp INFIELD oocq011
            #add-point:ON ACTION controlp INFIELD oocq011
            {<point name="construct.c.oocq011" />}
            #END add-point

         #----<<oocq012>>----
         #Ctrlp:construct.c.oocq012
         ON ACTION controlp INFIELD oocq012
            #add-point:ON ACTION controlp INFIELD oocq012
            {<point name="construct.c.oocq012" />}
            #END add-point

         #----<<oocq013>>----
         #Ctrlp:construct.c.oocq013
         ON ACTION controlp INFIELD oocq013
            #add-point:ON ACTION controlp INFIELD oocq013
            {<point name="construct.c.oocq013" />}
            #END add-point

         #----<<oocq014>>----
         #Ctrlp:construct.c.oocq014
         ON ACTION controlp INFIELD oocq014
            #add-point:ON ACTION controlp INFIELD oocq014
            {<point name="construct.c.oocq014" />}
            #END add-point

         #----<<oocq015>>----
         #Ctrlp:construct.c.oocq015
         ON ACTION controlp INFIELD oocq015
            #add-point:ON ACTION controlp INFIELD oocq015
            {<point name="construct.c.oocq015" />}
            #END add-point

         #----<<oocq016>>----
         #Ctrlp:construct.c.oocq016
         ON ACTION controlp INFIELD oocq016
            #add-point:ON ACTION controlp INFIELD oocq016
            {<point name="construct.c.oocq016" />}
            #END add-point

         #----<<oocq017>>----
         #Ctrlp:construct.c.oocq017
         ON ACTION controlp INFIELD oocq017
            #add-point:ON ACTION controlp INFIELD oocq017
            {<point name="construct.c.oocq017" />}
            #END add-point

         #----<<oocq018>>----
         #Ctrlp:construct.c.oocq018
         ON ACTION controlp INFIELD oocq018
            #add-point:ON ACTION controlp INFIELD oocq018
            {<point name="construct.c.oocq018" />}
            #END add-point

         #----<<oocq019>>----
         #Ctrlp:construct.c.oocq019
         ON ACTION controlp INFIELD oocq019
            #add-point:ON ACTION controlp INFIELD oocq019
            {<point name="construct.c.oocq019" />}
            #END add-point

         #----<<oocq020>>----
         #Ctrlp:construct.c.oocq020
         ON ACTION controlp INFIELD oocq020
            #add-point:ON ACTION controlp INFIELD oocq020
            {<point name="construct.c.oocq020" />}
            #END add-point

         #----<<oocq021>>----
         #Ctrlp:construct.c.oocq021
         ON ACTION controlp INFIELD oocq021
            #add-point:ON ACTION controlp INFIELD oocq021
            {<point name="construct.c.oocq021" />}
            #END add-point

         #----<<oocq022>>----
         #Ctrlp:construct.c.oocq022
         ON ACTION controlp INFIELD oocq022
            #add-point:ON ACTION controlp INFIELD oocq022
            {<point name="construct.c.oocq022" />}
            #END add-point

         #----<<oocq023>>----
         #Ctrlp:construct.c.oocq023
         ON ACTION controlp INFIELD oocq023
            #add-point:ON ACTION controlp INFIELD oocq023
            {<point name="construct.c.oocq023" />}
            #END add-point

         #----<<oocqmodu>>----
         #----<<oocqdate>>----
         #----<<oocqoriu>>----
         #----<<oocqorid>>----
         #----<<oocquser>>----
         #----<<oocqdept>>----
         #----<<oocqbuid>>----

       
      END CONSTRUCT
  
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point    
         
      ON ACTION qbe_select     #條件查詢
         CALL cl_qbe_list() RETURNING lc_qbe_sn
         CALL cl_qbe_display_condition(lc_qbe_sn)
      
      ON ACTION qbe_save       #條件儲存
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
         
      #交談指令共用ACTION
      &include "common_action.4gl"
      CONTINUE DIALOG
  
   END DIALOG
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
 
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aooi018_query()
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point
   
   LET INT_FLAG = 0
 
   CLEAR FORM
   CALL g_browser.clear()
 
   DISPLAY ' ' TO FORMONLY.b_count
 
   CALL aooi018_construct()
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      INITIALIZE g_oocq_m.* TO NULL
      LET g_wc = " 1=1"
      RETURN
   END IF
   
   LET g_browser_cnt = 0
   LET g_current_idx = 1
   LET g_current_row = 1
 
   LET g_searchtype = "3"
   LET g_searchcol = ""
   CALL aooi018_browser_fill(g_wc,g_searchtype,g_searchcol)
   IF g_browser_cnt = 0 THEN
      CALL cl_err('','-100',1)
   END IF
 
END FUNCTION
 
 
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aooi018_fetch(p_flag)
   {<Local define>}
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   DEFINE ls_chk     STRING
   DEFINE li_idx     LIKE type_t.num5
   {</Local define>}
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point
   
   LET ls_chk = g_browser[g_current_idx].b_id 
   IF ls_chk.getIndexOf('.',1) = 0 THEN
      CLEAR FORM
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
      DISPLAY '' TO FORMONLY.b_index
      RETURN
   END IF
   
   #瀏覽頁筆數顯示
   LET li_idx = 1
   FOR li_idx = 1 TO g_browser_root.getLength()
      IF g_browser_root[li_idx] > g_current_idx THEN
       EXIT FOR
      END IF
   END FOR
   LET li_idx = g_current_idx - li_idx + 1
   DISPLAY li_idx TO FORMONLY.b_index   #當下筆數
      
   IF p_flag = '/' THEN
      IF (NOT g_no_ask) THEN      
         CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
         LET INT_FLAG = 0
 
         PROMPT ls_msg CLIPPED,': ' FOR g_jump
            #交談指令共用ACTION
            &include "common_action.4gl" 
         END PROMPT
 
         IF INT_FLAG THEN
            LET INT_FLAG = 0
         ELSE
            IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
               LET g_current_idx = g_jump
            END IF
            LET g_no_ask = FALSE  
         END IF           
      END IF
   END IF    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
              
   LET g_oocq_m.oocq002 = g_browser[g_current_idx].b_oocq002
   LET g_oocq_m.oocq003 = g_browser[g_current_idx].b_oocq003
   LET g_oocq_m.oocq001 = g_browser[g_current_idx].b_oocq001
    
    
   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE oocq001,oocq002,oocq003,oocqstus,oocq004,oocq005,oocq006,oocq007,oocq008,oocq009,oocq010,oocq011,oocq012,oocq013,oocq014,oocq015,oocq016,oocq017,oocq018,oocq019,oocq020,oocq021,oocq022,oocq023,oocqmodu,oocqdate,oocqoriu,oocqorid,oocquser,oocqdept,oocqbuid
 INTO g_oocq_m.oocq001,g_oocq_m.oocq002,g_oocq_m.oocq003,g_oocq_m.oocqstus,g_oocq_m.oocq004,g_oocq_m.oocq005,g_oocq_m.oocq006,g_oocq_m.oocq007,g_oocq_m.oocq008,g_oocq_m.oocq009,g_oocq_m.oocq010,g_oocq_m.oocq011,g_oocq_m.oocq012,g_oocq_m.oocq013,g_oocq_m.oocq014,g_oocq_m.oocq015,g_oocq_m.oocq016,g_oocq_m.oocq017,g_oocq_m.oocq018,g_oocq_m.oocq019,g_oocq_m.oocq020,g_oocq_m.oocq021,g_oocq_m.oocq022,g_oocq_m.oocq023,g_oocq_m.oocqmodu,g_oocq_m.oocqdate,g_oocq_m.oocqoriu,g_oocq_m.oocqorid,g_oocq_m.oocquser,g_oocq_m.oocqdept,g_oocq_m.oocqbuid
 FROM oocq_t
 WHERE oocqent = g_enterprise AND oocq001 = g_oocq_m.oocq001 AND oocq002 = g_oocq_m.oocq002 
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      IF g_oocq_m.oocqstus = "Y" THEN
         CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
      ELSE
         CALL cl_set_act_visible("statechange,reproduce", TRUE)
         CALL cl_set_act_visible("modify,delete", FALSE)
      END IF
   END IF
 
   
   IF SQLCA.sqlcode THEN
       CALL cl_err("oocq_t",SQLCA.sqlcode,1)
       INITIALIZE g_oocq_m.* TO NULL
       RETURN
   END IF
   
   LET g_data_owner = g_oocq_m.oocquser      
   LET g_data_group = g_oocq_m.oocqdept   
   
   #重新顯示
   CALL aooi018_show()
   
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count 
 
END FUNCTION
 
 
#+ 資料新增
PRIVATE FUNCTION aooi018_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point
   
   #隱藏瀏覽頁籤
   CALL gfrm_curr.setElementHidden("worksheet",1)
   CALL gfrm_curr.setElementImage("worksheethidden","small/arr-r.png")
   LET g_worksheet_hidden = 1
   
   LET g_oocq001_t = g_oocq_m.oocq001
      #key2
   LET g_oocq002_t = g_oocq_m.oocq002


   
   #清畫面欄位內容
   CLEAR FORM                    
   INITIALIZE g_oocq_m.* LIKE oocq_t.*
   LET g_oocq002_t = NULL
   
   WHILE TRUE
      LET g_oocq_m.oocq001 = g_oocq001_t
      #key2
      LET g_oocq_m.oocq002 = g_oocq002_t


   
      LET g_oocq_m.oocquser = g_user
      LET g_oocq_m.oocqdept = g_dept
      LET g_oocq_m.oocqbuid = cl_get_current()
      LET g_oocq_m.oocqoriu = g_user 
      LET g_oocq_m.oocqorid = g_dept 
      LET g_oocq_m.oocqmodu = g_user
      LET g_oocq_m.oocqdate = cl_get_current()
      LET g_oocq_m.oocqstus = 'Y'
      CALL gfrm_curr.setElementImage("statechange", "authstatus/valid.png")
  
      
      
      #單頭預設值
      
     
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL aooi018_input("a")
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_oocq_m.* = g_oocq_m_t.*
         CALL aooi018_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      LET g_rec_b = 0
      EXIT WHILE
   END WHILE
   
   #顯示瀏覽頁籤
   CALL gfrm_curr.setElementHidden("worksheet",0)
   CALL gfrm_curr.setElementImage("worksheethidden","small/arr-l.png")
   LET g_worksheet_hidden = 0
   
END FUNCTION
 
 
#+ 資料修改
PRIVATE FUNCTION aooi018_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point
   
   #隱藏瀏覽頁籤
   CALL gfrm_curr.setElementHidden("worksheet",1)
   CALL gfrm_curr.setElementImage("worksheethidden","small/arr-r.png")
   LET g_worksheet_hidden = 1
   
   IF g_oocq_m.oocq001 IS NULL

   THEN
      CALL cl_err("","std-00003",0)
      #顯示瀏覽頁籤
      CALL gfrm_curr.setElementHidden("worksheet",0)
      CALL gfrm_curr.setElementImage("worksheethidden","small/arr-l.png")
      LET g_worksheet_hidden = 0
      RETURN
   END IF 
   
    SELECT UNIQUE oocq001,oocq002,oocq003,oocqstus,oocq004,oocq005,oocq006,oocq007,oocq008,oocq009,oocq010,oocq011,oocq012,oocq013,oocq014,oocq015,oocq016,oocq017,oocq018,oocq019,oocq020,oocq021,oocq022,oocq023,oocqmodu,oocqdate,oocqoriu,oocqorid,oocquser,oocqdept,oocqbuid
 INTO g_oocq_m.oocq001,g_oocq_m.oocq002,g_oocq_m.oocq003,g_oocq_m.oocqstus,g_oocq_m.oocq004,g_oocq_m.oocq005,g_oocq_m.oocq006,g_oocq_m.oocq007,g_oocq_m.oocq008,g_oocq_m.oocq009,g_oocq_m.oocq010,g_oocq_m.oocq011,g_oocq_m.oocq012,g_oocq_m.oocq013,g_oocq_m.oocq014,g_oocq_m.oocq015,g_oocq_m.oocq016,g_oocq_m.oocq017,g_oocq_m.oocq018,g_oocq_m.oocq019,g_oocq_m.oocq020,g_oocq_m.oocq021,g_oocq_m.oocq022,g_oocq_m.oocq023,g_oocq_m.oocqmodu,g_oocq_m.oocqdate,g_oocq_m.oocqoriu,g_oocq_m.oocqorid,g_oocq_m.oocquser,g_oocq_m.oocqdept,g_oocq_m.oocqbuid
 FROM oocq_t
 WHERE oocqent = g_enterprise AND oocq001 = g_oocq_m.oocq001 AND oocq002 = g_oocq_m.oocq002
 
   ERROR ""
  
   LET g_oocq001_t = g_oocq_m.oocq001
      #key2
   LET g_oocq002_t = g_oocq_m.oocq002


   
   BEGIN WORK
   
   OPEN aooi018_cl USING g_enterprise,g_oocq_m.oocq001,g_oocq_m.oocq002
   IF STATUS THEN
      CALL cl_err("OPEN aooi018_cl:", STATUS, 1)
      CLOSE aooi018_cl
      ROLLBACK WORK
      #顯示瀏覽頁籤
      CALL gfrm_curr.setElementHidden("worksheet",0)
      CALL gfrm_curr.setElementImage("worksheethidden","small/arr-l.png")
      LET g_worksheet_hidden = 0
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH aooi018_cl INTO g_oocq_m.oocq001,g_oocq_m.oocq002,g_oocq_m.oocq003,g_oocq_m.oocq001_desc,g_oocq_m.oocr004,g_oocq_m.oocr005,g_oocq_m.oocq003_desc,g_oocq_m.oocqstus,g_oocq_m.oocq004,g_oocq_m.oocq005,g_oocq_m.oocq006,g_oocq_m.oocq007,g_oocq_m.oocq008,g_oocq_m.oocq009,g_oocq_m.oocq010,g_oocq_m.oocq011,g_oocq_m.oocq012,g_oocq_m.oocq013,g_oocq_m.oocq014,g_oocq_m.oocq015,g_oocq_m.oocq016,g_oocq_m.oocq017,g_oocq_m.oocq018,g_oocq_m.oocq019,g_oocq_m.oocq020,g_oocq_m.oocq021,g_oocq_m.oocq022,g_oocq_m.oocq023,g_oocq_m.oocqmodu,g_oocq_m.modu_desc,g_oocq_m.oocqdate,g_oocq_m.oocqoriu,g_oocq_m.oriu_desc,g_oocq_m.oocqorid,g_oocq_m.orid_desc,g_oocq_m.oocquser,g_oocq_m.user_desc,g_oocq_m.oocqdept,g_oocq_m.dept_desc,g_oocq_m.oocqbuid
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_oocq_m.oocq002,SQLCA.sqlcode,0)
      CLOSE aooi018_cl
      ROLLBACK WORK
      #顯示瀏覽頁籤
      CALL gfrm_curr.setElementHidden("worksheet",0)
      CALL gfrm_curr.setElementImage("worksheethidden","small/arr-l.png")
      LET g_worksheet_hidden = 0
      RETURN
   END IF
 
   CALL aooi018_show()
   WHILE TRUE
      LET g_oocq_m.oocq001 = g_oocq001_t
      #key2
      LET g_oocq_m.oocq002 = g_oocq002_t


      LET g_oocq_m.oocqmodu = g_user
      LET g_oocq_m.oocqdate = cl_get_current()
 
      CALL aooi018_input("u")     #欄位更改
 
      IF INT_FLAG THEN
          LET INT_FLAG = 0
          LET g_oocq_m.* = g_oocq_m_t.*
          CALL aooi018_show()
          CALL cl_err('',9001,0)
          EXIT WHILE
      END IF
 
      EXIT WHILE
  
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_used_modified_record(g_oocq_m.oocq002,g_site) THEN 
      ROLLBACK WORK
   END IF
 
   CLOSE aooi018_cl
   COMMIT WORK
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_oocq_m.oocq002,'U')
   
   #顯示瀏覽頁籤
   CALL gfrm_curr.setElementHidden("worksheet",0)
   CALL gfrm_curr.setElementImage("worksheethidden","small/arr-l.png")
   LET g_worksheet_hidden = 0
   
END FUNCTION   
 
#+ 避免資料錯誤
PRIVATE FUNCTION aooi018_check(ps_id,ps_pid ,ps_type)    
   {<Local define>}                                    
   DEFINE ps_id       STRING
   DEFINE ps_pid      STRING
   DEFINE ps_type     STRING
   DEFINE ls_pid      LIKE type_t.chr100
   DEFINE ls_id       LIKE type_t.chr100
   DEFINE ls_type     LIKE type_t.chr100
   DEFINE ls_return   LIKE type_t.num5
   {</Local define>}
   #add-point:check段define
   {<point name="check.define"/>}
   #end add-point
   
   LET ls_return = FALSE
   LET ls_pid = ps_pid
   LET ls_type = ps_type
   
   #比對所有祖先節點
   WHILE TRUE
      
      SELECT oocq003,oocq002 INTO ls_pid,ls_id FROM oocq_t
         WHERE oocq002 = ls_pid
         AND oocq001 = ls_type
 
      IF SQLCA.sqlcode OR ls_pid = ls_id THEN
         EXIT WHILE
      END IF
      
      IF ls_pid = ps_id THEN
         LET ls_return = TRUE
         EXIT WHILE
      END IF
      
   END WHILE
   
   RETURN ls_return
   
END FUNCTION
 
 
#+ 資料輸入
PRIVATE FUNCTION aooi018_input(p_cmd)
   {<Local define>}
   DEFINE p_cmd           LIKE type_t.chr1
   DEFINE l_ac_t          LIKE type_t.num5        #未取消的ARRAY CNT 
   DEFINE l_n             LIKE type_t.num5        #檢查重複用  
   DEFINE l_cnt           LIKE type_t.num5        #檢查重複用  
   DEFINE l_lock_sw       LIKE type_t.chr1        #單身鎖住否  
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否  
   DEFINE l_count         LIKE type_t.num5
   DEFINE l_i             LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5
   DEFINE ls_return       STRING
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   DISPLAY BY NAME g_oocq_m.oocq001,g_oocq_m.oocq002,g_oocq_m.oocq003,g_oocq_m.oocr004,g_oocq_m.oocr005,g_oocq_m.oocqstus,g_oocq_m.oocq004,g_oocq_m.oocq005,g_oocq_m.oocq006,g_oocq_m.oocq007,g_oocq_m.oocq008,g_oocq_m.oocq009,g_oocq_m.oocq010,g_oocq_m.oocq011,g_oocq_m.oocq012,g_oocq_m.oocq013,g_oocq_m.oocq014,g_oocq_m.oocq015,g_oocq_m.oocq016,g_oocq_m.oocq017,g_oocq_m.oocq018,g_oocq_m.oocq019,g_oocq_m.oocq020,g_oocq_m.oocq021,g_oocq_m.oocq022,g_oocq_m.oocq023,g_oocq_m.oocqmodu,g_oocq_m.oocqdate,g_oocq_m.oocqoriu,g_oocq_m.oocqorid,g_oocq_m.oocquser,g_oocq_m.oocqdept,g_oocq_m.oocqbuid
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #單頭段
      INPUT BY NAME g_oocq_m.oocq001,g_oocq_m.oocq002,g_oocq_m.oocq003,g_oocq_m.oocr004,g_oocq_m.oocr005,g_oocq_m.oocqstus,g_oocq_m.oocq004,g_oocq_m.oocq005,g_oocq_m.oocq006,g_oocq_m.oocq007,g_oocq_m.oocq008,g_oocq_m.oocq009,g_oocq_m.oocq010,g_oocq_m.oocq011,g_oocq_m.oocq012,g_oocq_m.oocq013,g_oocq_m.oocq014,g_oocq_m.oocq015,g_oocq_m.oocq016,g_oocq_m.oocq017,g_oocq_m.oocq018,g_oocq_m.oocq019,g_oocq_m.oocq020,g_oocq_m.oocq021,g_oocq_m.oocq022,g_oocq_m.oocq023,g_oocq_m.oocqmodu,g_oocq_m.oocqdate,g_oocq_m.oocqoriu,g_oocq_m.oocqorid,g_oocq_m.oocquser,g_oocq_m.oocqdept,g_oocq_m.oocqbuid 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
            ON ACTION update_item 


         
         BEFORE INPUT
            LET g_before_input_done = FALSE
            CALL aooi018_set_entry(p_cmd)
            CALL aooi018_set_no_entry(p_cmd)
            LET g_before_input_done = TRUE
            
            #其他table資料備份(確定是否更改用)
            LET g_master_multi_table_t.oocq001 = g_oocq_m.oocq001
LET g_master_multi_table_t.oocq002 = g_oocq_m.oocq002
LET g_master_multi_table_t.oocr004 = g_oocq_m.oocr004
LET g_master_multi_table_t.oocr005 = g_oocq_m.oocr005

            
            #add-point:input段define
            {<point name="input.action"/>}
            #end add-point
          
         #---------------------------<  Master  >---------------------------
         #----<<oocq001>>----
         AFTER FIELD oocq001
            #add-point:AFTER FIELD oocq001
            {<point name="input.a.oocq001" />}
            #END add-point

         BEFORE FIELD oocq001
            #add-point:BEFORE FIELD oocq001
            {<point name="input.b.oocq001" />}
            #END add-point

         ON CHANGE oocq001
            #add-point:ON CHANGE oocq001
            {<point name="input.g.oocq001" />}
            #END add-point

         #----<<oocq002>>----
         BEFORE FIELD oocq002
            #add-point:BEFORE FIELD oocq002
            {<point name="input.b.oocq002" />}
            #END add-point

         AFTER FIELD oocq002
            #add-point:AFTER FIELD oocq002
            {<point name="input.a.oocq002" />}
            #END add-point

         ON CHANGE oocq002
            #add-point:ON CHANGE oocq002
            {<point name="input.g.oocq002" />}
            #END add-point

         #----<<oocq003>>----
         AFTER FIELD oocq003
            #add-point:AFTER FIELD oocq003
            {<point name="input.a.oocq003" />}
            #END add-point

         BEFORE FIELD oocq003
            #add-point:BEFORE FIELD oocq003
            {<point name="input.b.oocq003" />}
            #END add-point

         ON CHANGE oocq003
            #add-point:ON CHANGE oocq003
            {<point name="input.g.oocq003" />}
            #END add-point

         #----<<oocqstus>>----
         BEFORE FIELD oocqstus
            #add-point:BEFORE FIELD oocqstus
            {<point name="input.b.oocqstus" />}
            #END add-point

         AFTER FIELD oocqstus
            #add-point:AFTER FIELD oocqstus
            {<point name="input.a.oocqstus" />}
            #END add-point

         ON CHANGE oocqstus
            #add-point:ON CHANGE oocqstus
            {<point name="input.g.oocqstus" />}
            #END add-point

         #----<<oocq004>>----
         BEFORE FIELD oocq004
            #add-point:BEFORE FIELD oocq004
            {<point name="input.b.oocq004" />}
            #END add-point

         AFTER FIELD oocq004
            #add-point:AFTER FIELD oocq004
            {<point name="input.a.oocq004" />}
            #END add-point

         ON CHANGE oocq004
            #add-point:ON CHANGE oocq004
            {<point name="input.g.oocq004" />}
            #END add-point

         #----<<oocq005>>----
         BEFORE FIELD oocq005
            #add-point:BEFORE FIELD oocq005
            {<point name="input.b.oocq005" />}
            #END add-point

         AFTER FIELD oocq005
            #add-point:AFTER FIELD oocq005
            {<point name="input.a.oocq005" />}
            #END add-point

         ON CHANGE oocq005
            #add-point:ON CHANGE oocq005
            {<point name="input.g.oocq005" />}
            #END add-point

         #----<<oocq006>>----
         BEFORE FIELD oocq006
            #add-point:BEFORE FIELD oocq006
            {<point name="input.b.oocq006" />}
            #END add-point

         AFTER FIELD oocq006
            #add-point:AFTER FIELD oocq006
            {<point name="input.a.oocq006" />}
            #END add-point

         ON CHANGE oocq006
            #add-point:ON CHANGE oocq006
            {<point name="input.g.oocq006" />}
            #END add-point

         #----<<oocq007>>----
         BEFORE FIELD oocq007
            #add-point:BEFORE FIELD oocq007
            {<point name="input.b.oocq007" />}
            #END add-point

         AFTER FIELD oocq007
            #add-point:AFTER FIELD oocq007
            {<point name="input.a.oocq007" />}
            #END add-point

         ON CHANGE oocq007
            #add-point:ON CHANGE oocq007
            {<point name="input.g.oocq007" />}
            #END add-point

         #----<<oocq008>>----
         BEFORE FIELD oocq008
            #add-point:BEFORE FIELD oocq008
            {<point name="input.b.oocq008" />}
            #END add-point

         AFTER FIELD oocq008
            #add-point:AFTER FIELD oocq008
            {<point name="input.a.oocq008" />}
            #END add-point

         ON CHANGE oocq008
            #add-point:ON CHANGE oocq008
            {<point name="input.g.oocq008" />}
            #END add-point

         #----<<oocq009>>----
         BEFORE FIELD oocq009
            #add-point:BEFORE FIELD oocq009
            {<point name="input.b.oocq009" />}
            #END add-point

         AFTER FIELD oocq009
            #add-point:AFTER FIELD oocq009
            {<point name="input.a.oocq009" />}
            #END add-point

         ON CHANGE oocq009
            #add-point:ON CHANGE oocq009
            {<point name="input.g.oocq009" />}
            #END add-point

         #----<<oocq010>>----
         BEFORE FIELD oocq010
            #add-point:BEFORE FIELD oocq010
            {<point name="input.b.oocq010" />}
            #END add-point

         AFTER FIELD oocq010
            #add-point:AFTER FIELD oocq010
            {<point name="input.a.oocq010" />}
            #END add-point

         ON CHANGE oocq010
            #add-point:ON CHANGE oocq010
            {<point name="input.g.oocq010" />}
            #END add-point

         #----<<oocq011>>----
         BEFORE FIELD oocq011
            #add-point:BEFORE FIELD oocq011
            {<point name="input.b.oocq011" />}
            #END add-point

         AFTER FIELD oocq011
            #add-point:AFTER FIELD oocq011
            {<point name="input.a.oocq011" />}
            #END add-point

         ON CHANGE oocq011
            #add-point:ON CHANGE oocq011
            {<point name="input.g.oocq011" />}
            #END add-point

         #----<<oocq012>>----
         BEFORE FIELD oocq012
            #add-point:BEFORE FIELD oocq012
            {<point name="input.b.oocq012" />}
            #END add-point

         AFTER FIELD oocq012
            #add-point:AFTER FIELD oocq012
            {<point name="input.a.oocq012" />}
            #END add-point

         ON CHANGE oocq012
            #add-point:ON CHANGE oocq012
            {<point name="input.g.oocq012" />}
            #END add-point

         #----<<oocq013>>----
         BEFORE FIELD oocq013
            #add-point:BEFORE FIELD oocq013
            {<point name="input.b.oocq013" />}
            #END add-point

         AFTER FIELD oocq013
            #add-point:AFTER FIELD oocq013
            {<point name="input.a.oocq013" />}
            #END add-point

         ON CHANGE oocq013
            #add-point:ON CHANGE oocq013
            {<point name="input.g.oocq013" />}
            #END add-point

         #----<<oocq014>>----
         BEFORE FIELD oocq014
            #add-point:BEFORE FIELD oocq014
            {<point name="input.b.oocq014" />}
            #END add-point

         AFTER FIELD oocq014
            #add-point:AFTER FIELD oocq014
            {<point name="input.a.oocq014" />}
            #END add-point

         ON CHANGE oocq014
            #add-point:ON CHANGE oocq014
            {<point name="input.g.oocq014" />}
            #END add-point

         #----<<oocq015>>----
         BEFORE FIELD oocq015
            #add-point:BEFORE FIELD oocq015
            {<point name="input.b.oocq015" />}
            #END add-point

         AFTER FIELD oocq015
            #add-point:AFTER FIELD oocq015
            {<point name="input.a.oocq015" />}
            #END add-point

         ON CHANGE oocq015
            #add-point:ON CHANGE oocq015
            {<point name="input.g.oocq015" />}
            #END add-point

         #----<<oocq016>>----
         BEFORE FIELD oocq016
            #add-point:BEFORE FIELD oocq016
            {<point name="input.b.oocq016" />}
            #END add-point

         AFTER FIELD oocq016
            #add-point:AFTER FIELD oocq016
            {<point name="input.a.oocq016" />}
            #END add-point

         ON CHANGE oocq016
            #add-point:ON CHANGE oocq016
            {<point name="input.g.oocq016" />}
            #END add-point

         #----<<oocq017>>----
         BEFORE FIELD oocq017
            #add-point:BEFORE FIELD oocq017
            {<point name="input.b.oocq017" />}
            #END add-point

         AFTER FIELD oocq017
            #add-point:AFTER FIELD oocq017
            {<point name="input.a.oocq017" />}
            #END add-point

         ON CHANGE oocq017
            #add-point:ON CHANGE oocq017
            {<point name="input.g.oocq017" />}
            #END add-point

         #----<<oocq018>>----
         BEFORE FIELD oocq018
            #add-point:BEFORE FIELD oocq018
            {<point name="input.b.oocq018" />}
            #END add-point

         AFTER FIELD oocq018
            #add-point:AFTER FIELD oocq018
            {<point name="input.a.oocq018" />}
            #END add-point

         ON CHANGE oocq018
            #add-point:ON CHANGE oocq018
            {<point name="input.g.oocq018" />}
            #END add-point

         #----<<oocq019>>----
         BEFORE FIELD oocq019
            #add-point:BEFORE FIELD oocq019
            {<point name="input.b.oocq019" />}
            #END add-point

         AFTER FIELD oocq019
            #add-point:AFTER FIELD oocq019
            {<point name="input.a.oocq019" />}
            #END add-point

         ON CHANGE oocq019
            #add-point:ON CHANGE oocq019
            {<point name="input.g.oocq019" />}
            #END add-point

         #----<<oocq020>>----
         BEFORE FIELD oocq020
            #add-point:BEFORE FIELD oocq020
            {<point name="input.b.oocq020" />}
            #END add-point

         AFTER FIELD oocq020
            #add-point:AFTER FIELD oocq020
            {<point name="input.a.oocq020" />}
            #END add-point

         ON CHANGE oocq020
            #add-point:ON CHANGE oocq020
            {<point name="input.g.oocq020" />}
            #END add-point

         #----<<oocq021>>----
         BEFORE FIELD oocq021
            #add-point:BEFORE FIELD oocq021
            {<point name="input.b.oocq021" />}
            #END add-point

         AFTER FIELD oocq021
            #add-point:AFTER FIELD oocq021
            {<point name="input.a.oocq021" />}
            #END add-point

         ON CHANGE oocq021
            #add-point:ON CHANGE oocq021
            {<point name="input.g.oocq021" />}
            #END add-point

         #----<<oocq022>>----
         BEFORE FIELD oocq022
            #add-point:BEFORE FIELD oocq022
            {<point name="input.b.oocq022" />}
            #END add-point

         AFTER FIELD oocq022
            #add-point:AFTER FIELD oocq022
            {<point name="input.a.oocq022" />}
            #END add-point

         ON CHANGE oocq022
            #add-point:ON CHANGE oocq022
            {<point name="input.g.oocq022" />}
            #END add-point

         #----<<oocq023>>----
         BEFORE FIELD oocq023
            #add-point:BEFORE FIELD oocq023
            {<point name="input.b.oocq023" />}
            #END add-point

         AFTER FIELD oocq023
            #add-point:AFTER FIELD oocq023
            {<point name="input.a.oocq023" />}
            #END add-point

         ON CHANGE oocq023
            #add-point:ON CHANGE oocq023
            {<point name="input.g.oocq023" />}
            #END add-point

         #----<<oocqmodu>>----
         BEFORE FIELD oocqmodu
            #add-point:BEFORE FIELD oocqmodu
            {<point name="input.b.oocqmodu" />}
            #END add-point

         AFTER FIELD oocqmodu
            #add-point:AFTER FIELD oocqmodu
            {<point name="input.a.oocqmodu" />}
            #END add-point

         ON CHANGE oocqmodu
            #add-point:ON CHANGE oocqmodu
            {<point name="input.g.oocqmodu" />}
            #END add-point

         #----<<oocqdate>>----
         BEFORE FIELD oocqdate
            #add-point:BEFORE FIELD oocqdate
            {<point name="input.b.oocqdate" />}
            #END add-point

         AFTER FIELD oocqdate
            #add-point:AFTER FIELD oocqdate
            {<point name="input.a.oocqdate" />}
            #END add-point

         ON CHANGE oocqdate
            #add-point:ON CHANGE oocqdate
            {<point name="input.g.oocqdate" />}
            #END add-point

         #----<<oocqoriu>>----
         BEFORE FIELD oocqoriu
            #add-point:BEFORE FIELD oocqoriu
            {<point name="input.b.oocqoriu" />}
            #END add-point

         AFTER FIELD oocqoriu
            #add-point:AFTER FIELD oocqoriu
            {<point name="input.a.oocqoriu" />}
            #END add-point

         ON CHANGE oocqoriu
            #add-point:ON CHANGE oocqoriu
            {<point name="input.g.oocqoriu" />}
            #END add-point

         #----<<oocqorid>>----
         BEFORE FIELD oocqorid
            #add-point:BEFORE FIELD oocqorid
            {<point name="input.b.oocqorid" />}
            #END add-point

         AFTER FIELD oocqorid
            #add-point:AFTER FIELD oocqorid
            {<point name="input.a.oocqorid" />}
            #END add-point

         ON CHANGE oocqorid
            #add-point:ON CHANGE oocqorid
            {<point name="input.g.oocqorid" />}
            #END add-point

         #----<<oocquser>>----
         BEFORE FIELD oocquser
            #add-point:BEFORE FIELD oocquser
            {<point name="input.b.oocquser" />}
            #END add-point

         AFTER FIELD oocquser
            #add-point:AFTER FIELD oocquser
            {<point name="input.a.oocquser" />}
            #END add-point

         ON CHANGE oocquser
            #add-point:ON CHANGE oocquser
            {<point name="input.g.oocquser" />}
            #END add-point

         #----<<oocqdept>>----
         BEFORE FIELD oocqdept
            #add-point:BEFORE FIELD oocqdept
            {<point name="input.b.oocqdept" />}
            #END add-point

         AFTER FIELD oocqdept
            #add-point:AFTER FIELD oocqdept
            {<point name="input.a.oocqdept" />}
            #END add-point

         ON CHANGE oocqdept
            #add-point:ON CHANGE oocqdept
            {<point name="input.g.oocqdept" />}
            #END add-point

         #----<<oocqbuid>>----
         BEFORE FIELD oocqbuid
            #add-point:BEFORE FIELD oocqbuid
            {<point name="input.b.oocqbuid" />}
            #END add-point

         AFTER FIELD oocqbuid
            #add-point:AFTER FIELD oocqbuid
            {<point name="input.a.oocqbuid" />}
            #END add-point

         ON CHANGE oocqbuid
            #add-point:ON CHANGE oocqbuid
            {<point name="input.g.oocqbuid" />}
            #END add-point

 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<oocq001>>----
         #Ctrlp:input.c.oocq001
         ON ACTION controlp INFIELD oocq001
            #add-point:ON ACTION controlp INFIELD oocq001
            {<point name="input.c.oocq001" />}
            #END add-point

         #----<<oocq002>>----
         #Ctrlp:input.c.oocq002
         ON ACTION controlp INFIELD oocq002
            #add-point:ON ACTION controlp INFIELD oocq002
            {<point name="input.c.oocq002" />}
            #END add-point

         #----<<oocq003>>----
         #Ctrlp:input.c.oocq003
         ON ACTION controlp INFIELD oocq003
            #add-point:ON ACTION controlp INFIELD oocq003
            {<point name="input.c.oocq003" />}
            #END add-point

         #----<<oocqstus>>----
         #Ctrlp:input.c.oocqstus
         ON ACTION controlp INFIELD oocqstus
            #add-point:ON ACTION controlp INFIELD oocqstus
            {<point name="input.c.oocqstus" />}
            #END add-point

         #----<<oocq004>>----
         #Ctrlp:input.c.oocq004
         ON ACTION controlp INFIELD oocq004
            #add-point:ON ACTION controlp INFIELD oocq004
            {<point name="input.c.oocq004" />}
            #END add-point

         #----<<oocq005>>----
         #Ctrlp:input.c.oocq005
         ON ACTION controlp INFIELD oocq005
            #add-point:ON ACTION controlp INFIELD oocq005
            {<point name="input.c.oocq005" />}
            #END add-point

         #----<<oocq006>>----
         #Ctrlp:input.c.oocq006
         ON ACTION controlp INFIELD oocq006
            #add-point:ON ACTION controlp INFIELD oocq006
            {<point name="input.c.oocq006" />}
            #END add-point

         #----<<oocq007>>----
         #Ctrlp:input.c.oocq007
         ON ACTION controlp INFIELD oocq007
            #add-point:ON ACTION controlp INFIELD oocq007
            {<point name="input.c.oocq007" />}
            #END add-point

         #----<<oocq008>>----
         #Ctrlp:input.c.oocq008
         ON ACTION controlp INFIELD oocq008
            #add-point:ON ACTION controlp INFIELD oocq008
            {<point name="input.c.oocq008" />}
            #END add-point

         #----<<oocq009>>----
         #Ctrlp:input.c.oocq009
         ON ACTION controlp INFIELD oocq009
            #add-point:ON ACTION controlp INFIELD oocq009
            {<point name="input.c.oocq009" />}
            #END add-point

         #----<<oocq010>>----
         #Ctrlp:input.c.oocq010
         ON ACTION controlp INFIELD oocq010
            #add-point:ON ACTION controlp INFIELD oocq010
            {<point name="input.c.oocq010" />}
            #END add-point

         #----<<oocq011>>----
         #Ctrlp:input.c.oocq011
         ON ACTION controlp INFIELD oocq011
            #add-point:ON ACTION controlp INFIELD oocq011
            {<point name="input.c.oocq011" />}
            #END add-point

         #----<<oocq012>>----
         #Ctrlp:input.c.oocq012
         ON ACTION controlp INFIELD oocq012
            #add-point:ON ACTION controlp INFIELD oocq012
            {<point name="input.c.oocq012" />}
            #END add-point

         #----<<oocq013>>----
         #Ctrlp:input.c.oocq013
         ON ACTION controlp INFIELD oocq013
            #add-point:ON ACTION controlp INFIELD oocq013
            {<point name="input.c.oocq013" />}
            #END add-point

         #----<<oocq014>>----
         #Ctrlp:input.c.oocq014
         ON ACTION controlp INFIELD oocq014
            #add-point:ON ACTION controlp INFIELD oocq014
            {<point name="input.c.oocq014" />}
            #END add-point

         #----<<oocq015>>----
         #Ctrlp:input.c.oocq015
         ON ACTION controlp INFIELD oocq015
            #add-point:ON ACTION controlp INFIELD oocq015
            {<point name="input.c.oocq015" />}
            #END add-point

         #----<<oocq016>>----
         #Ctrlp:input.c.oocq016
         ON ACTION controlp INFIELD oocq016
            #add-point:ON ACTION controlp INFIELD oocq016
            {<point name="input.c.oocq016" />}
            #END add-point

         #----<<oocq017>>----
         #Ctrlp:input.c.oocq017
         ON ACTION controlp INFIELD oocq017
            #add-point:ON ACTION controlp INFIELD oocq017
            {<point name="input.c.oocq017" />}
            #END add-point

         #----<<oocq018>>----
         #Ctrlp:input.c.oocq018
         ON ACTION controlp INFIELD oocq018
            #add-point:ON ACTION controlp INFIELD oocq018
            {<point name="input.c.oocq018" />}
            #END add-point

         #----<<oocq019>>----
         #Ctrlp:input.c.oocq019
         ON ACTION controlp INFIELD oocq019
            #add-point:ON ACTION controlp INFIELD oocq019
            {<point name="input.c.oocq019" />}
            #END add-point

         #----<<oocq020>>----
         #Ctrlp:input.c.oocq020
         ON ACTION controlp INFIELD oocq020
            #add-point:ON ACTION controlp INFIELD oocq020
            {<point name="input.c.oocq020" />}
            #END add-point

         #----<<oocq021>>----
         #Ctrlp:input.c.oocq021
         ON ACTION controlp INFIELD oocq021
            #add-point:ON ACTION controlp INFIELD oocq021
            {<point name="input.c.oocq021" />}
            #END add-point

         #----<<oocq022>>----
         #Ctrlp:input.c.oocq022
         ON ACTION controlp INFIELD oocq022
            #add-point:ON ACTION controlp INFIELD oocq022
            {<point name="input.c.oocq022" />}
            #END add-point

         #----<<oocq023>>----
         #Ctrlp:input.c.oocq023
         ON ACTION controlp INFIELD oocq023
            #add-point:ON ACTION controlp INFIELD oocq023
            {<point name="input.c.oocq023" />}
            #END add-point

         #----<<oocqmodu>>----
         #Ctrlp:input.c.oocqmodu
         ON ACTION controlp INFIELD oocqmodu
            #add-point:ON ACTION controlp INFIELD oocqmodu
            {<point name="input.c.oocqmodu" />}
            #END add-point

         #----<<oocqdate>>----
         #Ctrlp:input.c.oocqdate
         ON ACTION controlp INFIELD oocqdate
            #add-point:ON ACTION controlp INFIELD oocqdate
            {<point name="input.c.oocqdate" />}
            #END add-point

         #----<<oocqoriu>>----
         #Ctrlp:input.c.oocqoriu
         ON ACTION controlp INFIELD oocqoriu
            #add-point:ON ACTION controlp INFIELD oocqoriu
            {<point name="input.c.oocqoriu" />}
            #END add-point

         #----<<oocqorid>>----
         #Ctrlp:input.c.oocqorid
         ON ACTION controlp INFIELD oocqorid
            #add-point:ON ACTION controlp INFIELD oocqorid
            {<point name="input.c.oocqorid" />}
            #END add-point

         #----<<oocquser>>----
         #Ctrlp:input.c.oocquser
         ON ACTION controlp INFIELD oocquser
            #add-point:ON ACTION controlp INFIELD oocquser
            {<point name="input.c.oocquser" />}
            #END add-point

         #----<<oocqdept>>----
         #Ctrlp:input.c.oocqdept
         ON ACTION controlp INFIELD oocqdept
            #add-point:ON ACTION controlp INFIELD oocqdept
            {<point name="input.c.oocqdept" />}
            #END add-point

         #----<<oocqbuid>>----
         #Ctrlp:input.c.oocqbuid
         ON ACTION controlp INFIELD oocqbuid
            #add-point:ON ACTION controlp INFIELD oocqbuid
            {<point name="input.c.oocqbuid" />}
            #END add-point

 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
           IF aooi018_check(g_oocq_m.oocq002,g_oocq_m.oocq003
              ,g_oocq_m.oocq001
              ) THEN
              CALL cl_err('','tree-001',1)
              NEXT FIELD CURRENT
           END IF
                
            CALL cl_showmsg()   #錯誤訊息統整顯示
            DISPLAY BY NAME g_oocq_m.oocq002             
 
            IF p_cmd <> 'u' THEN
               BEGIN WORK
               LET l_count = 1  
 
               SELECT COUNT(*) INTO l_count FROM oocq_t
                WHERE oocqent = g_enterprise AND oocq001 = g_oocq001_t #
      #key2
                                          AND oocq002 = g_oocq002_t


               IF l_count = 0 THEN
               
                  #add-point:單頭新增前
                  {<point name="input.head.b_insert"/>}
                  #end add-point
               
                  INSERT INTO oocq_t (oocqent,oocq001,oocq002,oocq003,oocqstus,oocq004,oocq005,oocq006,oocq007,oocq008,oocq009,oocq010,oocq011,oocq012,oocq013,oocq014,oocq015,oocq016,oocq017,oocq018,oocq019,oocq020,oocq021,oocq022,oocq023,oocqmodu,oocqdate,oocqoriu,oocqorid,oocquser,oocqdept,oocqbuid)
                  VALUES (g_enterprise,g_oocq_m.oocq001,g_oocq_m.oocq002,g_oocq_m.oocq003,g_oocq_m.oocqstus,g_oocq_m.oocq004,g_oocq_m.oocq005,g_oocq_m.oocq006,g_oocq_m.oocq007,g_oocq_m.oocq008,g_oocq_m.oocq009,g_oocq_m.oocq010,g_oocq_m.oocq011,g_oocq_m.oocq012,g_oocq_m.oocq013,g_oocq_m.oocq014,g_oocq_m.oocq015,g_oocq_m.oocq016,g_oocq_m.oocq017,g_oocq_m.oocq018,g_oocq_m.oocq019,g_oocq_m.oocq020,g_oocq_m.oocq021,g_oocq_m.oocq022,g_oocq_m.oocq023,g_oocq_m.oocqmodu,g_oocq_m.oocqdate,g_oocq_m.oocqoriu,g_oocq_m.oocqorid,g_oocq_m.oocquser,g_oocq_m.oocqdept,g_oocq_m.oocqbuid) # DISK WRITE
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("g_oocq_m",SQLCA.sqlcode,1)  
                     CONTINUE DIALOG
                  END IF
                  
                  #資料多語言用-增/改
                           INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_oocq_m.oocq001 = g_master_multi_table_t.oocq001 AND
         g_oocq_m.oocq002 = g_master_multi_table_t.oocq002 AND
         g_oocq_m.oocr004 = g_master_multi_table_t.oocr004 AND 
         g_oocq_m.oocr005 = g_master_multi_table_t.oocr005 THEN
         ELSE 
            LET l_var_keys[01] = g_oocq_m.oocq001
            LET l_field_keys[01] = 'oocr001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.oocq001
            LET l_var_keys[02] = g_oocq_m.oocq002
            LET l_field_keys[02] = 'oocr002'
            LET l_var_keys_bak[02] = g_master_multi_table_t.oocq002
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'oocr003'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_oocq_m.oocr004
            LET l_fields[01] = 'oocr004'
            LET l_vars[02] = g_oocq_m.oocr005
            LET l_fields[02] = 'oocr005'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'oocrent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'oocr_t')
         END IF 

                  COMMIT WORK
                  
                  #add-point:單頭新增後
                  {<point name="input.head.a_insert"/>}
                  #end add-point
                  
               ELSE
                  CALL cl_err( g_oocq_m.oocq002, 'std-00006', 0 )
                  ROLLBACK WORK
               END IF 
            ELSE
               #add-point:單頭修改前
               {<point name="input.head.b_update"/>}
               #end add-point
               UPDATE oocq_t SET (oocq001,oocq002,oocq003,oocqstus,oocq004,oocq005,oocq006,oocq007,oocq008,oocq009,oocq010,oocq011,oocq012,oocq013,oocq014,oocq015,oocq016,oocq017,oocq018,oocq019,oocq020,oocq021,oocq022,oocq023,oocqmodu,oocqdate,oocqoriu,oocqorid,oocquser,oocqdept,oocqbuid) = (g_oocq_m.oocq001,g_oocq_m.oocq002,g_oocq_m.oocq003,g_oocq_m.oocqstus,g_oocq_m.oocq004,g_oocq_m.oocq005,g_oocq_m.oocq006,g_oocq_m.oocq007,g_oocq_m.oocq008,g_oocq_m.oocq009,g_oocq_m.oocq010,g_oocq_m.oocq011,g_oocq_m.oocq012,g_oocq_m.oocq013,g_oocq_m.oocq014,g_oocq_m.oocq015,g_oocq_m.oocq016,g_oocq_m.oocq017,g_oocq_m.oocq018,g_oocq_m.oocq019,g_oocq_m.oocq020,g_oocq_m.oocq021,g_oocq_m.oocq022,g_oocq_m.oocq023,g_oocq_m.oocqmodu,g_oocq_m.oocqdate,g_oocq_m.oocqoriu,g_oocq_m.oocqorid,g_oocq_m.oocquser,g_oocq_m.oocqdept,g_oocq_m.oocqbuid)
                WHERE oocqent = g_enterprise AND oocq001 = g_oocq001_t #
      #key2
                                          AND oocq002 = g_oocq002_t


               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_oocq_m",SQLCA.sqlcode,1)  
                  ROLLBACK WORK
               ELSE
                  #資料多語言用-增/改
                           INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_oocq_m.oocq001 = g_master_multi_table_t.oocq001 AND
         g_oocq_m.oocq002 = g_master_multi_table_t.oocq002 AND
         g_oocq_m.oocr004 = g_master_multi_table_t.oocr004 AND 
         g_oocq_m.oocr005 = g_master_multi_table_t.oocr005 THEN
         ELSE 
            LET l_var_keys[01] = g_oocq_m.oocq001
            LET l_field_keys[01] = 'oocr001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.oocq001
            LET l_var_keys[02] = g_oocq_m.oocq002
            LET l_field_keys[02] = 'oocr002'
            LET l_var_keys_bak[02] = g_master_multi_table_t.oocq002
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'oocr003'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_oocq_m.oocr004
            LET l_fields[01] = 'oocr004'
            LET l_vars[02] = g_oocq_m.oocr005
            LET l_fields[02] = 'oocr005'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'oocrent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'oocr_t')
         END IF 

                  COMMIT WORK
                  
                  #add-point:單頭修改後
                  {<point name="input.head.a_update"/>}
                  #end add-point
               END IF
            END IF
           #controlp
      END INPUT
          
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name, g_fld_name, g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET g_action_choice="exit"
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET g_action_choice="exit"
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
           
   END DIALOG
   
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
    
END FUNCTION
 
 
#+ 資料複製
PRIVATE FUNCTION aooi018_reproduce()
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
   DEFINE l_newno           LIKE oocq_t.oocq001 
   DEFINE l_oldno           LIKE oocq_t.oocq001 
      #key2
   DEFINE l_newno02     LIKE oocq_t.oocq002 
   DEFINE l_oldno02     LIKE oocq_t.oocq002 


   DEFINE l_master          RECORD LIKE oocq_t.*
   DEFINE l_cnt             LIKE type_t.num5
 
   IF g_oocq_m.oocq001 IS NULL

   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_before_input_done = FALSE
   CALL aooi018_set_entry('a')
   LET g_before_input_done = TRUE
 
   CALL cl_set_head_visible("","YES")
 
   INPUT l_newno       # FROM 
      #key2
        ,l_newno02


   FROM oocq001
      #key2
        ,oocq002


        
      BEFORE INPUT
 
      AFTER FIELD oocq001
         IF l_newno IS NULL THEN
            NEXT FIELD CURRENT
         END IF
         #add-point:AFTER FIELD oocq001
         {<point name="reproduce.a.oocq001" />}
         #end add-point
         
      #key2
      AFTER FIELD oocq002
         IF l_newno IS NULL THEN
            NEXT FIELD CURRENT
         END IF
         #add-point:AFTER FIELD oocq002
         {<point name="reproduce.a.oocq002" />}
         #end add-point


            
      AFTER INPUT
         #確定該key值是否有重複定義
         IF g_oocq_m.oocq001 IS NULL  
      #key2
         OR g_oocq_m.oocq002 IS NULL


         THEN
            NEXT FIELD oocq001                                  
         END IF
         LET l_cnt = 0
         SELECT COUNT(*) INTO l_cnt FROM oocq_t 
          WHERE oocqent = g_enterprise AND oocq001 = l_newno
      #key2
            AND oocq002 = l_newno02


         IF l_cnt > 0 THEN
            CALL cl_err("Reproduce","std-00006",1) 
            NEXT FIELD oocq001 
         END IF
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE INPUT
         
   END INPUT
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   BEGIN WORK
 
   SELECT * INTO l_master.* FROM oocq_t 
    WHERE oocqent = g_enterprise AND oocq001 = g_oocq001_t #
      #key2
      AND oocq002 = g_oocq002_t


            
   LET l_master.oocq001 = l_newno
      #key2
   LET l_master.oocq002 = l_newno02


   LET l_master.oocquser = g_user
   LET l_master.oocqdept = g_dept
   LET l_master.oocqbuid = cl_get_current()
   LET l_master.oocqoriu = g_user 
   LET l_master.oocqorid = g_dept 
   LET l_master.oocqmodu = g_user
   LET l_master.oocqdate = cl_get_current()
   LET l_master.oocqstus = 'Y'
   
   #add-point:單頭複製前
   {<point name="reproduce.head.b_insert"/>}
   #end add-point
   
   INSERT INTO oocq_t VALUES (l_master.*) #複製單頭        
   IF SQLCA.sqlcode THEN
      ROLLBACK WORK
      CALL cl_err("oocq_t",SQLCA.sqlcode,1)
      RETURN
   END IF
   COMMIT WORK
   
   #add-point:單頭複製後
   {<point name="reproduce.head.a_insert"/>}
   #end add-point
   
   LET g_oocq_m.oocq001 = l_oldno
      #key2
   LET g_oocq_m.oocq002 = l_oldno{key}


   
   SELECT oocq001,oocq002,oocq003,oocqstus,oocq004,oocq005,oocq006,oocq007,oocq008,oocq009,oocq010,oocq011,oocq012,oocq013,oocq014,oocq015,oocq016,oocq017,oocq018,oocq019,oocq020,oocq021,oocq022,oocq023,oocqmodu,oocqdate,oocqoriu,oocqorid,oocquser,oocqdept,oocqbuid INTO g_oocq_m.oocq001,g_oocq_m.oocq002,g_oocq_m.oocq003,g_oocq_m.oocqstus,g_oocq_m.oocq004,g_oocq_m.oocq005,g_oocq_m.oocq006,g_oocq_m.oocq007,g_oocq_m.oocq008,g_oocq_m.oocq009,g_oocq_m.oocq010,g_oocq_m.oocq011,g_oocq_m.oocq012,g_oocq_m.oocq013,g_oocq_m.oocq014,g_oocq_m.oocq015,g_oocq_m.oocq016,g_oocq_m.oocq017,g_oocq_m.oocq018,g_oocq_m.oocq019,g_oocq_m.oocq020,g_oocq_m.oocq021,g_oocq_m.oocq022,g_oocq_m.oocq023,g_oocq_m.oocqmodu,g_oocq_m.oocqdate,g_oocq_m.oocqoriu,g_oocq_m.oocqorid,g_oocq_m.oocquser,g_oocq_m.oocqdept,g_oocq_m.oocqbuid FROM oocq_t 
    WHERE oocq001 = g_oocq001_t #
      #key2
                                 AND oocq002 = g_oocq002_t


      
   CALL aooi018_show()
 
END FUNCTION
 
 
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aooi018_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   LET g_oocq_m_t.* = g_oocq_m.*      #保存單頭舊值
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()       
   
   #帶出預設欄位之值
   LET g_oocq_m.modu_desc = cl_get_username(g_oocq_m.oocqmodu)
   LET g_oocq_m.oriu_desc = cl_get_username(g_oocq_m.oocqoriu)
   LET g_oocq_m.user_desc = cl_get_username(g_oocq_m.oocquser)
   LET g_oocq_m.dept_desc = cl_get_deptname(g_oocq_m.oocqdept)
   LET g_oocq_m.orid_desc = cl_get_deptname(g_oocq_m.oocqorid)
   
   #讀入ref值(單頭)
   #add-point:reference段之後
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_oocq_m.oocq001,g_oocq_m.oocq002,g_oocq_m.oocq003,g_oocq_m.oocq001_desc,g_oocq_m.oocr004,g_oocq_m.oocr005,g_oocq_m.oocq003_desc,g_oocq_m.oocqstus,g_oocq_m.oocq004,g_oocq_m.oocq005,g_oocq_m.oocq006,g_oocq_m.oocq007,g_oocq_m.oocq008,g_oocq_m.oocq009,g_oocq_m.oocq010,g_oocq_m.oocq011,g_oocq_m.oocq012,g_oocq_m.oocq013,g_oocq_m.oocq014,g_oocq_m.oocq015,g_oocq_m.oocq016,g_oocq_m.oocq017,g_oocq_m.oocq018,g_oocq_m.oocq019,g_oocq_m.oocq020,g_oocq_m.oocq021,g_oocq_m.oocq022,g_oocq_m.oocq023,g_oocq_m.oocqmodu,g_oocq_m.modu_desc,g_oocq_m.oocqdate,g_oocq_m.oocqoriu,g_oocq_m.oriu_desc,g_oocq_m.oocqorid,g_oocq_m.orid_desc,g_oocq_m.oocquser,g_oocq_m.user_desc,g_oocq_m.oocqdept,g_oocq_m.dept_desc,g_oocq_m.oocqbuid
 
   #根據stus狀態show出對應圖片
   CASE g_oocq_m.oocqstus
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "authstatus/valid.png")
      WHEN "N" 
         CALL gfrm_curr.setElementImage("statechange", "authstatus/void.png")
   END CASE
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
 
 
#+ 資料刪除
PRIVATE FUNCTION aooi018_delete()
   {<Local define>}
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point
   
   IF g_oocq_m.oocq001 IS NULL

   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
    SELECT UNIQUE oocq001,oocq002,oocq003,oocqstus,oocq004,oocq005,oocq006,oocq007,oocq008,oocq009,oocq010,oocq011,oocq012,oocq013,oocq014,oocq015,oocq016,oocq017,oocq018,oocq019,oocq020,oocq021,oocq022,oocq023,oocqmodu,oocqdate,oocqoriu,oocqorid,oocquser,oocqdept,oocqbuid
 INTO g_oocq_m.oocq001,g_oocq_m.oocq002,g_oocq_m.oocq003,g_oocq_m.oocqstus,g_oocq_m.oocq004,g_oocq_m.oocq005,g_oocq_m.oocq006,g_oocq_m.oocq007,g_oocq_m.oocq008,g_oocq_m.oocq009,g_oocq_m.oocq010,g_oocq_m.oocq011,g_oocq_m.oocq012,g_oocq_m.oocq013,g_oocq_m.oocq014,g_oocq_m.oocq015,g_oocq_m.oocq016,g_oocq_m.oocq017,g_oocq_m.oocq018,g_oocq_m.oocq019,g_oocq_m.oocq020,g_oocq_m.oocq021,g_oocq_m.oocq022,g_oocq_m.oocq023,g_oocq_m.oocqmodu,g_oocq_m.oocqdate,g_oocq_m.oocqoriu,g_oocq_m.oocqorid,g_oocq_m.oocquser,g_oocq_m.oocqdept,g_oocq_m.oocqbuid
 FROM oocq_t
 WHERE oocqent = g_enterprise AND oocq001 = g_oocq_m.oocq001 AND oocq002 = g_oocq_m.oocq002
   BEGIN WORK
   
   LET g_master_multi_table_t.oocq001 = g_oocq_m.oocq001
LET g_master_multi_table_t.oocq002 = g_oocq_m.oocq002
LET g_master_multi_table_t.oocr004 = g_oocq_m.oocr004
LET g_master_multi_table_t.oocr005 = g_oocq_m.oocr005

 
   OPEN aooi018_cl USING g_enterprise,g_oocq_m.oocq001,g_oocq_m.oocq002
   IF STATUS THEN
      CALL cl_err("OPEN aooi018_cl:", STATUS, 1)
      CLOSE aooi018_cl
      ROLLBACK WORK
      RETURN
   END IF
 
   # 鎖住將被更改或取消的資料
   FETCH aooi018_cl INTO g_oocq_m.oocq001,g_oocq_m.oocq002,g_oocq_m.oocq003,g_oocq_m.oocq001_desc,g_oocq_m.oocr004,g_oocq_m.oocr005,g_oocq_m.oocq003_desc,g_oocq_m.oocqstus,g_oocq_m.oocq004,g_oocq_m.oocq005,g_oocq_m.oocq006,g_oocq_m.oocq007,g_oocq_m.oocq008,g_oocq_m.oocq009,g_oocq_m.oocq010,g_oocq_m.oocq011,g_oocq_m.oocq012,g_oocq_m.oocq013,g_oocq_m.oocq014,g_oocq_m.oocq015,g_oocq_m.oocq016,g_oocq_m.oocq017,g_oocq_m.oocq018,g_oocq_m.oocq019,g_oocq_m.oocq020,g_oocq_m.oocq021,g_oocq_m.oocq022,g_oocq_m.oocq023,g_oocq_m.oocqmodu,g_oocq_m.modu_desc,g_oocq_m.oocqdate,g_oocq_m.oocqoriu,g_oocq_m.oriu_desc,g_oocq_m.oocqorid,g_oocq_m.orid_desc,g_oocq_m.oocquser,g_oocq_m.user_desc,g_oocq_m.oocqdept,g_oocq_m.dept_desc,g_oocq_m.oocqbuid
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_oocq_m.oocq002,SQLCA.sqlcode,0)
      ROLLBACK WORK
      RETURN
   END IF
 
   CALL aooi018_show()
 
   IF cl_ask_delete() THEN                   #確認一下
      INITIALIZE g_doc.* TO NULL         
      LET g_doc.column1 = "oocq002"       
      LET g_doc.value1 = g_oocq_m.oocq002     
      CALL cl_del_doc()     
 
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete"/>}
      #end add-point
      
      DELETE FROM oocq_t 
       WHERE oocqent = g_enterprise AND oocq001 = g_oocq_m.oocq001 
      #key2
         AND oocq002 = g_oocq_m.oocq002 


      CLEAR FORM
  
      IF SQLCA.sqlcode THEN
         CALL cl_err("oocq_t",SQLCA.sqlcode,0)
         ROLLBACK WORK
      END IF
  
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_field_keys[01] = 'oocr001'
   LET l_var_keys_bak[01] = g_master_multi_table_t.oocq001
   LET l_field_keys[02] = 'oocr002'
   LET l_var_keys_bak[02] = g_master_multi_table_t.oocq002
   LET l_field_keys[03] = 'oocr003'
   LET l_var_keys_bak[03] = g_dlang
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'oocr_t')

      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
      
   END IF
 
   CLOSE aooi018_cl
   COMMIT WORK
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_oocq_m.oocq002,'D')
    
END FUNCTION
 
 
#+ 單頭欄位開啟設定
PRIVATE FUNCTION aooi018_set_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1 
   {</Local define>}   
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point
 
   IF p_cmd = 'a' AND ( NOT g_before_input_done ) THEN
      CALL cl_set_comp_entry("oocq001,oocq002",TRUE)
   END IF
   
END FUNCTION
 
 
#+ 外部參數預設搜尋
PRIVATE FUNCTION aooi018_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   {</Local define>}
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   IF g_searchtype = 0 OR cl_null(g_searchtype) THEN
      LET g_searchtype = 3
   END IF 
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " oocq001 = '", g_argv[1], "' AND "
   END IF
   
      #key2
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " oocq002 = ", g_argv[02], " AND "
   END IF


   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc = ls_wc
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
 
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
 
 
#+ 單頭欄位關閉設定
PRIVATE FUNCTION aooi018_set_no_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1  
   {</Local define>}   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point
 
   IF p_cmd = 'u' AND g_chkey = 'N' AND ( NOT g_before_input_done ) THEN
      CALL cl_set_comp_entry("oocq001,oocq002",FALSE)
   END IF
   
END FUNCTION
 
 
#+ 確認碼變更
PRIVATE FUNCTION aooi018_statechange()
   {<Local define>} 
   DEFINE lc_state LIKE type_t.chr5
   {</Local define>} 
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point
   
   #add-point:statechange段before
   {<point name="statechange.before"/>}
   #end add-point
   ERROR ""
    
   IF g_oocq_m.oocq001 IS NULL

   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         CASE g_oocq_m.oocqstus
            WHEN "Y"
               HIDE OPTION "valid"
            WHEN "N"
               HIDE OPTION "void"
         END CASE
         
      ON ACTION valid
         LET lc_state = "Y"
         EXIT MENU
         
      ON ACTION void
         LET lc_state = "N"
         EXIT MENU
         
   END MENU
   
   IF (lc_state <> "Y" AND lc_state <> "N") OR cl_null(lc_state) THEN
      RETURN
   END IF 
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE oocq_t SET oocqstus = lc_state 
    WHERE oocqent = g_enterprise AND oocq001 = g_oocq_m.oocq001 #
      #key2
                              AND oocq002 = g_oocq_m.oocq002


  
   IF SQLCA.sqlcode THEN
      CALL cl_err('',SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange","authstatus/valid.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange","authstatus/void.png")
      END CASE
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
   
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point 
   
END FUNCTION
 
 
#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
 
function show()
define sql,a,b,c,d varchar(500)
 
  let sql = "select unique oocq002,oocq003,exp_code from aooi018_tmp"
  
  PREPARE aa FROM sql
  DECLARE aaa CURSOR FOR aa
  
  foreach aaa into a,b,c,d
     display a,',',b,',',c,',',d
  end foreach
  
  display '--------2'
 
end function
 
function get_time(p_type)
define p_type string 
DEFINE a DATETIME SECOND TO FRACTION(5)
DEFINE c STRING 
DEFINE b DECIMAL(10,5) 
DEFINE d DECIMAL(10,5) 
display '------------',cl_get_current(),'------------'
LET a = CURRENT SECOND TO FRACTION(5)
LET c = a
LET b = c 
LET d = b
 
if p_type = 'e' then
   let d = d - g_time
else
   let g_time = d
   let d = 0
end if 
 
if d < 0 then
   let d = d + 60
end if 
 
let g_cost = g_cost + d
 
END FUNCTION
 

