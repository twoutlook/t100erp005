#該程式未解開Section, 採用最新樣板產出!
{<section id="aooi921.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0002(2016-04-29 11:51:44), PR版次:
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:
#+ Build......: 000027
#+ Filename...: aooi921
#+ Description: 異常管理檢核設置作業
#+ Creator....: 01534(2016-04-27 15:16:17)
#+ Modifier...: 01534 -SD/PR-

{</section>}

{<section id="aooi921.global" >}
#應用 i05 樣板自動產生(Version:33)
#add-point:填寫註解說明
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用)
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
  
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_ookb_m RECORD
   ookb001 LIKE ookb_t.ookb001, 
   ookb001_desc LIKE type_t.chr80, 
   ookb002 LIKE ookb_t.ookb002, 
   ookbl003 LIKE type_t.chr500, 
   ookb003 LIKE ookb_t.ookb003, 
   ookb004 LIKE ookb_t.ookb004, 
   ookb005 LIKE ookb_t.ookb005, 
   ookbownid LIKE ookb_t.ookbownid, 
   ookbownid_desc LIKE type_t.chr80, 
   ookbowndp LIKE ookb_t.ookbowndp, 
   ookbowndp_desc LIKE type_t.chr80, 
   ookbcrtid LIKE ookb_t.ookbcrtid, 
   ookbcrtid_desc LIKE type_t.chr80, 
   ookbcrtdp LIKE ookb_t.ookbcrtdp, 
   ookbcrtdp_desc LIKE type_t.chr80, 
   ookbcrtdt LIKE ookb_t.ookbcrtdt, 
   ookbmodid LIKE ookb_t.ookbmodid, 
   ookbmodid_desc LIKE type_t.chr80, 
   ookbmoddt LIKE ookb_t.ookbmoddt
                                  END RECORD
 
#add-point:自定義模組變數(Module Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
                                  
#模組變數(Module Variables)
DEFINE g_ookb_m          type_g_ookb_m
DEFINE g_ookb_m_t        type_g_ookb_m
DEFINE g_ookb_m_o        type_g_ookb_m
 
   DEFINE g_ookb001_t LIKE ookb_t.ookb001
DEFINE g_ookb002_t LIKE ookb_t.ookb002
 
 
#DEFINE g_ookb002_t        LIKE ookb_t.ookb002
#DEFINE g_ookb001_t        LIKE ookb_t.ookb001
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位
       b_show          LIKE type_t.chr100,    #外顯欄位
       b_pid           LIKE type_t.chr100,    #父節點id
       b_id            LIKE type_t.chr100,    #本身節點id
       b_exp           LIKE type_t.chr100,    #是否展開
       b_hasC          LIKE type_t.num5,      #是否有子節點
       b_isExp         LIKE type_t.num5,      #是否已展開
       b_expcode       LIKE type_t.num5,      #展開值
       #tree自定義欄位
          b_ookb001 LIKE ookb_t.ookb001,
   b_ookb001_desc LIKE type_t.chr80,
      b_ookb002 LIKE ookb_t.ookb002,
   b_ookb002_desc LIKE type_t.chr80,
      b_ookb003 LIKE ookb_t.ookb003,
      b_ookb004 LIKE ookb_t.ookb004,
   b_ooka003 LIKE ooka_t.ooka003,
   b_ooka003_desc LIKE type_t.chr80,
   b_ooka004 LIKE ooka_t.ooka004,
   b_ooka005 LIKE ooka_t.ooka005
                   END RECORD
 
DEFINE g_browser_root  DYNAMIC ARRAY OF INTEGER    #root資料所在
       
#多table用變數
DEFINE g_master_multi_table_t    RECORD
      ookbl001 LIKE ookbl_t.ookbl001,
      ookbl003 LIKE ookbl_t.ookbl003
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10
DEFINE g_jump                LIKE type_t.num10
DEFINE g_no_ask              LIKE type_t.num5
DEFINE g_rec_b               LIKE type_t.num10
DEFINE l_ac                  LIKE type_t.num10
DEFINE g_curr_diag           ui.Dialog                #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num10         
DEFINE gwin_curr             ui.Window                #Current Window
DEFINE gfrm_curr             ui.Form                  #Current Form
DEFINE g_page_action         STRING                   #page action
DEFINE g_header_hidden       LIKE type_t.num5         #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5         #隱藏工作Panel
DEFINE g_browser_cnt         LIKE type_t.num10        #total count
DEFINE g_page                STRING                   #第幾頁
DEFINE g_current_row         LIKE type_t.num10        #Browser所在筆數
DEFINE g_current_sw          LIKE type_t.num10        #Browser所在筆數用開關
 
DEFINE g_searchcol           LIKE type_t.chr200
DEFINE g_searchstr           LIKE type_t.chr200
DEFINE g_searchtype          LIKE type_t.chr200
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_row_index           LIKE type_t.num10
DEFINE g_root_search         BOOLEAN
DEFINE g_first               LIKE type_t.num5  #標示是否要啟動s_browse重查
DEFINE g_aw                  STRING            #確定當下點擊的單身
DEFINE g_log1                STRING            #log用
DEFINE g_log2                STRING            #log用
DEFINE g_add_browse          STRING            #新增填充用WC
DEFINE g_add_idx             LIKE type_t.num5  #新增資料指標
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="aooi921.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aoo","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT ookb001,'',ookb002,'',ookb003,ookb004,ookb005,ookbownid,'',ookbowndp, 
       '',ookbcrtid,'',ookbcrtdp,'',ookbcrtdt,ookbmodid,'',ookbmoddt", 
                      " FROM ookb_t",
                      " WHERE ookbent= ? AND ookb001=? AND ookb002=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aooi921_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.ookb001,t0.ookb002,t0.ookb003,t0.ookb004,t0.ookb005,t0.ookbownid, 
       t0.ookbowndp,t0.ookbcrtid,t0.ookbcrtdp,t0.ookbcrtdt,t0.ookbmodid,t0.ookbmoddt,t1.ookbl003 ,t2.ooag011 , 
       t3.ooefl003 ,t4.ooag011 ,t5.ooefl003 ,t6.ooag011",
               " FROM ookb_t t0",
                              " LEFT JOIN ookbl_t t1 ON t1.ookblent="||g_enterprise||" AND t1.ookbl001=ookb001 AND t1.ookbl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=ookbownid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=ookbowndp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent="||g_enterprise||" AND t4.ooag001=ookbcrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent="||g_enterprise||" AND t5.ooefl001=ookbcrtdp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=ookbmodid  ",
 
               " WHERE t0.ookbent = " ||g_enterprise|| " AND t0.ookb001 = ? AND t0.ookb002 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aooi921_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aooi921 WITH FORM cl_ap_formpath("aoo",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aooi921_init()   
 
      #進入選單 Menu (="N")
      CALL aooi921_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aooi921
      
   END IF 
   
   CLOSE aooi921_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 

{</section>}

{<section id="aooi921.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aooi921_init()
   #add-point:init段define name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>}
   #end add-point 
   
   #add-point:Function前置處理  name="init.pre_function"
   {<point name="init.pre_function"/>}
   #end add-point
   
   
   
   LET g_add_idx = 1
   LET g_current_idx = 1
    
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init"/>}
   #end add-point
   
   CALL aooi921_default_search()
    
END FUNCTION

{</section>}

{<section id="aooi921.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aooi921_ui_dialog()
   #add-point:ui_dialog段define name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_exit      LIKE type_t.num5    #判別是否為離開作業
   DEFINE la_param  RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   {<point name="ui_dialog.pre_function"/>}
   #end add-point
   
   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm() 
 
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE li_exit = FALSE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_ookb_m.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         LET g_first = 1
         CALL aooi921_init()
      END IF
 
      #當瀏覽頁簽被設定關閉時,使用MENU (開啟時使用DIALOG)
      IF g_worksheet_hidden = 1 THEN
 
         LET g_current_sw = FALSE
 
         #回歸舊筆數位置 (回到當時異動的筆數)
         LET g_current_idx = g_current_row
         LET g_current_sw = TRUE
         CALL cl_show_fld_cont() 
         CALL aooi921_fetch("")    #當每次點任一筆資料都會需要用到
 
         MENU
            #add-point:ui_dialog段其他頁簽的 display array(in menu) name="ui_dialog.more_displayarray_in_menu"
            {<point name="ui_dialog.more_displayarray_in_menu"/>}
            #end add-point
            
            
            #ACTION表單列
            ON ACTION first
               LET g_current_idx = 1
               CALL aooi921_fetch("")
               LET g_current_row = g_current_idx
            
            ON ACTION next
               LET g_current_idx = g_current_idx + 1
               CALL aooi921_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION jump
               CALL aooi921_fetch("/")
               LET g_current_row = g_current_idx
 
            ON ACTION previous
               LET g_current_idx = g_current_idx - 1
               CALL aooi921_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION last 
               LET g_current_idx = g_browser_cnt
               CALL aooi921_fetch("") 
               LET g_current_row = g_current_idx
 
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT MENU 
 
            ON ACTION close
               LET li_exit = TRUE
               EXIT MENU
 
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 1
               END IF
               EXIT MENU
         
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_worksheet_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/mainhidden.png")
                  LET g_worksheet_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/mainhidden.png")
                  LET g_worksheet_hidden = 1
               END IF
               EXIT MENU
         
            ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden
               END IF
 
            
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               
               #add-point:ON ACTION exporttoexcel name="menu2.exporttoexcel"
               {<point name="menu2.exporttoexcel" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aooi921_modify()
               #add-point:ON ACTION modify name="menu2.modify"
               {<point name="menu2.modify" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aooi921_delete(DIALOG)
               #add-point:ON ACTION delete name="menu2.delete"
               {<point name="menu2.delete" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aooi921_insert(DIALOG)
               #add-point:ON ACTION insert name="menu2.insert"
               {<point name="menu2.insert" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu2.output"
               {<point name="menu2.output" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aooi921_reproduce(DIALOG)
               #add-point:ON ACTION reproduce name="menu2.reproduce"
               {<point name="menu2.reproduce" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aooi921_query()
               #add-point:ON ACTION query name="menu2.query"
               {<point name="menu2.query" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
 
            
 
            #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL aooi921_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.menu.related_document"
               {<point name="ui_dialog.menu.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aooi921_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.menu.agendum"
            {<point name="ui_dialog.menu.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aooi921_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.menu.followup"
            {<point name="ui_dialog.menu.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
            
            &include "main_menu_exit_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
 
         END MENU
 
      ELSE
         #第一次進入程式, 或啟動重新查詢
         IF g_first = 0 THEN 
            CALL aooi921_browser_fill(g_wc,g_searchtype)
            LET g_first = 1
         END IF
      
         DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         
            INPUT g_searchstr,g_searchcol,g_searchtype FROM formonly.searchstr,formonly.cbo_searchcol, 
                formonly.rdo_searchtype
               BEFORE INPUT
            END INPUT
            
            #左側瀏覽頁簽
            DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTE(COUNT=g_rec_b)
 
               BEFORE DISPLAY
                  CALL DIALOG.setSelectionMode("s_browse",1) #設定為單選
 
               BEFORE ROW
                  #add-point:ui_dialog段before row1 name="ui_dialog.before_row1"
                  {<point name="ui_dialog.before_row1"/>}
                  #end add-point
                  #回歸舊筆數位置 (回到當時異動的筆數)
                  LET g_current_idx = DIALOG.getCurrentRow("s_browse")
                  IF g_current_row > 1 AND g_current_sw = FALSE THEN
                     CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                     LET g_current_idx = g_current_row
                  END IF
                  #add-point:ui_dialog段before row2 name="ui_dialog.before_row2"
                  {<point name="ui_dialog.before_row2"/>}
                  #end add-point
                  LET g_current_row = g_current_idx #目前指標
                  LET g_current_sw = TRUE
                  CALL cl_show_fld_cont() 
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
 
                  CALL aooi921_fetch("")  #當每次點任一筆資料都會需要用到
 
               ON EXPAND (g_row_index)
                  #樹展開
                  CALL aooi921_browser_expand(g_row_index)
                  LET g_browser[g_row_index].b_isExp = 1
 
               ON COLLAPSE (g_row_index)
                  #樹關閉
                  
               #add-point:ui_dialog段action name="ui_dialog.tree_action"
               {<point name="ui_dialog.tree_action"/>}
               #end add-point
 
            END DISPLAY
 
            #add-point:ui_dialog段其他頁簽的 display array name="ui_dialog.more_displayarray"
            {<point name="ui_dialog.more_displayarray"/>}
            #end add-point
 
            BEFORE DIALOG
               #action default動作(判定是否要先執行特定動作)
               #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aooi921_insert(DIALOG)
            #add-point:ON ACTION insert name="menu.default.insert"
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
 
               LET g_curr_diag = ui.DIALOG.getCurrent()
               LET g_current_sw = FALSE
 
               #add-point:ui_dialog,before dialog1 name="ui_dialog.b_dialog1"
               {<point name="ui_dialog.b_dialog1"/>}
               #end add-point
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_sw = FALSE THEN
                  IF g_current_row > g_browser.getLength() THEN
                     LET g_current_row = g_browser.getLength()
                  END IF 
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               #add-point:ui_dialog,before dialog2 name="ui_dialog.b_dialog2"
               {<point name="ui_dialog.b_dialog2"/>}
               #end add-point
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
               CALL cl_show_fld_cont() 
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               CALL aooi921_fetch("")            #當每次點任一筆資料都會需要用到
               #add-point:ui_dialog,before dialog name="ui_dialog.b_dialog"
               {<point name="ui_dialog.b_dialog"/>}
               #end add-point
 
            AFTER DIALOG 
               #add-point:ui_dialog,after dialog name="ui_dialog.a_dialog"
               {<point name="ui_dialog.a_dialog"/>}
               #end add-point
 
 
            #一般搜尋
            ON ACTION searchdata
               LET g_searchstr = GET_FLDBUF(searchstr)
               LET g_searchcol = GET_FLDBUF(cbo_searchcol)
               #若無輸入關鍵字則查找出所有資料
               IF g_searchcol="0" AND NOT cl_null(g_searchstr) THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "searchcol:" 
                  LET g_errparam.code   = "std-00001" 
                  LET g_errparam.popup  = FALSE 
                  CALL cl_err()
                  CONTINUE DIALOG
               END IF 
               IF NOT cl_null(g_searchstr) THEN
                  LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
                  LET g_wc = g_wc.toLowerCase()
               ELSE
                  LET g_wc = " 1=1 "
               END IF
               LET g_first = 0 #啟動重查
               EXIT DIALOG
 
            #進階搜尋
            #ON ACTION advancesearch
 
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT DIALOG 
            
            ON ACTION close
               LET li_exit = TRUE
               EXIT DIALOG
            
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementImage("mainhidden","16/mainhidden.png")
                  LET g_main_hidden = 1
               END IF
               EXIT DIALOG
 
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_worksheet_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/worksheethidden.png")
                  LET g_worksheet_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/worksheethidden.png")
                  LET g_worksheet_hidden = 1
               END IF
               EXIT DIALOG
 
            ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden
               END IF
 
            
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               
               #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
               {<point name="menu.exporttoexcel" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aooi921_modify()
               #add-point:ON ACTION modify name="menu.modify"
               {<point name="menu.modify" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aooi921_delete(DIALOG)
               #add-point:ON ACTION delete name="menu.delete"
               {<point name="menu.delete" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aooi921_insert(DIALOG)
               #add-point:ON ACTION insert name="menu.insert"
               {<point name="menu.insert" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               {<point name="menu.output" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aooi921_reproduce(DIALOG)
               #add-point:ON ACTION reproduce name="menu.reproduce"
               {<point name="menu.reproduce" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aooi921_query()
               #add-point:ON ACTION query name="menu.query"
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
 
            
            
            #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL aooi921_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aooi921_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aooi921_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
            
            &include "main_menu_exit_dialog.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END DIALOG 
      
      END IF
      
   END WHILE
 
END FUNCTION 

{</section>}

{<section id="aooi921.browser_fill" >}
#+ 瀏覽頁簽where條件組成
PRIVATE FUNCTION aooi921_browser_fill(p_wc,p_type)
   #add-point:browser_fill段define name="browser_fill.define_customerization"
   {<point name="browser_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_wc       STRING 
   DEFINE p_type     LIKE type_t.chr10
   DEFINE l_cnt      LIKE type_t.num10
   DEFINE l_cnt2     LIKE type_t.num10   
   #add-point:browser_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   {<point name="browser_fill.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="browser_fill.before_fill"
   {<point name="browser_fill.before_fill"/>}
   #end add-point
 
   CALL g_browser.clear()
   CLEAR FORM
   LET l_cnt = 0
   LET l_cnt2 = 0
   
   DROP TABLE aooi921_tmp
   
   #Create temp table
   CREATE TEMP TABLE aooi921_tmp
   (
         ookb001 VARCHAR(500),
   ookb001_desc VARCHAR(500),
   ookb002 VARCHAR(500),
   ookb002_desc VARCHAR(500),
   ookb003 VARCHAR(500),
   ookb004 VARCHAR(500),
   ooka003 VARCHAR(500),
   ooka003_desc VARCHAR(500),
   ooka004 VARCHAR(500),
   ooka005 VARCHAR(500),
      #僅含browser的欄位
      exp_code  VARCHAR(5)
   );
 
   #先確定搜尋範圍(若無條件搜尋則只找root出來)
   SELECT COUNT(1) INTO l_cnt FROM ookb_t WHERE ookbent = g_enterprise AND 1=1
   
   #取得符合p_wc的所有資料
   LET g_sql = "SELECT COUNT(1)",
               " FROM ookb_t ",
               "  LEFT JOIN ookbl_t ON ookblent = "||g_enterprise||" AND ookb002 = ookbl001 AND ookbl002 = '",g_dlang,"' ",
               " WHERE ookbent = " ||g_enterprise|| " AND ",p_wc ,cl_sql_add_filter("ookb_t")
   #add-point:browser_fill段cnt wc name="browser_fill.cnt_wc"
   {<point name="browser_fill.cnt_wc"/>}
   #end add-point
              
   PREPARE master_cnt FROM g_sql
   DECLARE master_cntcur CURSOR FOR master_cnt
   OPEN master_cntcur
   FETCH master_cntcur INTO l_cnt2
   LET g_root_search = FALSE
   
   IF l_cnt2 = 0 THEN
      #INITIALIZE g_errparam TO NULL 
      #LET g_errparam.extend = "" 
      #LET g_errparam.code   = "-100" 
      #LET g_errparam.popup  = TRUE 
      #CALL cl_err()
      RETURN
   END IF
   
   IF l_cnt = l_cnt2 THEN
      #未輸入條件時則只查找root節點
      LET p_wc = " ookb002 = ookb001 "
      LET g_root_search = TRUE
   END IF
 
   #取得符合p_wc的所有資料
   LET g_sql = "SELECT ookb001,'',ookb002,'',ookb003,ookb004,'','','','' ",
               " FROM ookb_t",
               "  LEFT JOIN ookbl_t ON ookblent = "||g_enterprise||" AND ookb002 = ookbl001 AND ookbl002 = '",g_dlang,"' ",
               " WHERE ookbent = " ||g_enterprise|| " AND ",p_wc ,cl_sql_add_filter("ookb_t")
   #add-point:browser_fill段sql wc name="browser_fill.sql_wc"
   {<point name="browser_fill.sql_wc"/>}
   #end add-point
   #LET g_sql = cl_sql_add_tabid(g_sql,"ookb_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料           
   PREPARE master_ext FROM g_sql
   DECLARE master_extcur CURSOR FOR master_ext
   
   #單筆update
   #LET g_sql = "SELECT '','','','','','','',ookb001,'',ookb002,'',ookb003,ookb004,'','','','' ",
   #            " FROM ookb_t",
   #            "  LEFT JOIN ookbl_t ON ookblent = "||g_enterprise||" AND ookb002 = ookbl001 AND ookbl002 = '",g_dlang,"' ",
   #            " WHERE ookbent = " ||g_enterprise|| " AND ",
   #            " ookb001 = ?"
   #            ," ookb002 = ?"
 
                
   LET g_sql = " SELECT t0.ookb001,t0.ookb002,t0.ookb003,t0.ookb004,t1.ookbl003 ,t2.ookbl003 ",
               " FROM ookb_t t0",
               "  ",
                              " LEFT JOIN ookbl_t t1 ON t1.ookblent="||g_enterprise||" AND t1.ookbl001=ookb001 AND t1.ookbl002='"||g_dlang||"' ",
               " LEFT JOIN ookbl_t t2 ON t2.ookblent="||g_enterprise||" AND t2.ookbl001=ookb002 AND t2.ookbl002='"||g_dlang||"' ",
 
               " WHERE ookbent = " ||g_enterprise|| " AND ",
               " ookb001 = ?"
               ," AND ookb002 = ?"
 
 
               
   #add-point:browser_fill段sql wc name="browser_fill.refresh"
   {<point name="browser_fill.refresh"/>}
   #end add-point
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料           
   PREPARE master_refresh FROM g_sql
   DECLARE master_refreshcur CURSOR FOR master_refresh
 
   #搜尋建構樹所需的節點
   CASE p_type
      WHEN "1" #上推
         CALL aooi921_match_node(p_wc,p_type) 
      WHEN "2" #下展
         #CALL aooi921_find_speed_tbl(p_wc,p_type) 
         CALL aooi921_match_node(p_wc,p_type) 
      WHEN "3" #全部
         CALL aooi921_match_node(p_wc,p_type) 
   END CASE
 
   CALL aooi921_browser_create(p_type)
     
END FUNCTION

{</section>}

{<section id="aooi921.match_node" >}
PRIVATE FUNCTION aooi921_match_node(p_wc,p_type)
   #add-point:match_node段define name="match_node.define_customerization"
   {<point name="match_node.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_wc         LIKE type_t.chr200
   DEFINE p_type       LIKE type_t.chr10
   DEFINE ls_code      LIKE type_t.chr50
   DEFINE ls_code2     LIKE type_t.chr50
   DEFINE l_bstmp      RECORD    #body欄位
             ookb001 VARCHAR(500),
   ookb001_desc VARCHAR(500),
   ookb002 VARCHAR(500),
   ookb002_desc VARCHAR(500),
   ookb003 VARCHAR(500),
   ookb004 VARCHAR(500),
   ooka003 VARCHAR(500),
   ooka003_desc VARCHAR(500),
   ooka004 VARCHAR(500),
   ooka005 VARCHAR(500)
          #僅含單身table的欄位
   END RECORD 
   DEFINE l_child_list DYNAMIC ARRAY OF RECORD    #body欄位
             ookb001 VARCHAR(500),
   ookb001_desc VARCHAR(500),
   ookb002 VARCHAR(500),
   ookb002_desc VARCHAR(500),
   ookb003 VARCHAR(500),
   ookb004 VARCHAR(500),
   ooka003 VARCHAR(500),
   ooka003_desc VARCHAR(500),
   ooka004 VARCHAR(500),
   ooka005 VARCHAR(500)
          #僅含單身table的欄位
   END RECORD    
   #add-point:match_node段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="match_node.define"
   {<point name="match_node.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="match_node.pre_function"
   {<point name="match_node.pre_function"/>}
   #end add-point
   
   #先找出符合條件的節點並給予展開值
   CASE p_type
      WHEN 1
         LET ls_code = "0" #展開值0則無法展開
      WHEN 2
         LET ls_code = "2"
      WHEN 3
         LET ls_code = "2"
   END CASE
   
   IF cl_null("ookb001") THEN
      LET ls_code = "0"
   END IF 
   
   CALL s_transaction_begin()
 
   LET g_sql = " INSERT INTO aooi921_tmp (ookb001,ookb001_desc,ookb002,ookb002_desc,ookb003,ookb004, 
       ooka003,ooka003_desc,ooka004,ooka005,exp_code) VALUES (?,?,?,?,?,?,?,?,?,?,?)"
   PREPARE master_tmp FROM g_sql
   
   IF g_root_search THEN
      #DECLARE master_tmp_cur CURSOR FOR master_tmp
      #OPEN master_tmp_cur
      FOREACH master_extcur INTO l_bstmp.*
         EXECUTE master_tmp USING l_bstmp.*,ls_code
         #PUT master_tmp_cur FROM l_bstmp.*,ls_code
      END FOREACH
      #FLUSH master_tmp_cur
      CALL s_transaction_end("Y","0")
      RETURN
   END IF
 
   FOREACH master_extcur INTO l_bstmp.*
      IF aooi921_tmp_tbl_chk(l_bstmp.ookb002,ls_code
                  ) THEN
         EXECUTE master_tmp USING l_bstmp.*,ls_code
      END IF
 
      LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
       
      #找出符合條件的節點的所有祖先並給予展開值
      CASE p_type
         WHEN 1
            LET ls_code2 = "1"
         WHEN 2
            LET ls_code2 = "-1"
         WHEN 3
            LET ls_code2 = "1"
      END CASE
      
      #若pid欄位存在才進行後續處理
      #擷取該節點的父節點到temp table中
      LET g_sql = " SELECT ookb001,'',ookb002,'',ookb003,ookb004,'','','','' ",
                  " FROM ookb_t t0",
                  " WHERE ookbent = " ||g_enterprise|| " AND ookb002 = ? ",
                  cl_sql_add_filter("ookb_t")
      PREPARE master_getparent_up FROM g_sql
      
      #擷取該節點的所有父節點
      WHILE TRUE
         IF cl_null(l_child_list[1].ookb002) THEN
            IF l_child_list.getLength() = 1 THEN
               EXIT WHILE
            ELSE
               CALL l_child_list.deleteElement(1)
               CONTINUE WHILE
            END IF
         END IF
      
         EXECUTE master_getparent_up USING l_child_list[1].ookb001
                                           INTO l_bstmp.*
         IF SQLCA.sqlcode THEN
            FREE master_getparent_up
            EXIT WHILE
         END IF
         FREE master_getparent_up
      
      #確定該節點是否存在於temp table中
         IF STATUS = 0 AND aooi921_tmp_tbl_chk(l_bstmp.ookb002,ls_code2
                     ) THEN
            EXECUTE master_tmp USING l_bstmp.*,ls_code2
            LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
         END IF
         CALL l_child_list.deleteElement(1)
      END WHILE
   
   END FOREACH
   
   CLOSE master_tmp
   
   CALL s_transaction_end("Y","0")
 
END FUNCTION

{</section>}

{<section id="aooi921.tmp_tbl_chk" >}
#+ TEMP TABLE CHK
PRIVATE FUNCTION aooi921_tmp_tbl_chk(ps_id,pi_code)
   #add-point:tmp_tbl_chk段define name="tmp_tbl_chk.define_customerization"
   {<point name="tmp_tbl_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_id       STRING
   DEFINE pi_code     LIKE type_t.num10
   DEFINE ps_type     STRING
   DEFINE ls_id       LIKE type_t.chr500
   DEFINE ls_search   LIKE type_t.chr500
   DEFINE ls_type     LIKE type_t.chr500
   DEFINE li_cnt      LIKE type_t.num10
   DEFINE li_code     LIKE type_t.num10   
   #add-point:tmp_tbl_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="tmp_tbl_chk.define"
   {<point name="tmp_tbl_chk.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="tmp_tbl_chk.pre_function"
   {<point name="tmp_tbl_chk.pre_function"/>}
   #end add-point
   
   LET ls_id = ps_id
  
   IF cl_null(ls_id) THEN
      RETURN TRUE
   END IF
   
   LET g_sql = " SELECT COUNT(1) FROM aooi921_tmp ", 
               " WHERE ookb002 = ? "
 
   PREPARE aooi921_get_cnt FROM g_sql
   EXECUTE aooi921_get_cnt USING ls_id 
                                     INTO li_cnt
   FREE aooi921_get_cnt
 
   IF li_cnt = 0 OR SQLCA.sqlcode THEN
      RETURN TRUE
   ELSE
      #資料已存在, 確定是否需要更新展開值
      LET g_sql = " SELECT exp_code FROM aooi921_tmp ",
                  " WHERE ookb002 = ? " 
 
      PREPARE aooi921_chk_exp FROM g_sql
      EXECUTE aooi921_chk_exp USING ls_id 
                                        INTO li_code
      FREE aooi921_chk_exp
      
      #若新展開值>原展開值則做更新
      IF pi_code > li_code THEN
         LET g_sql = " UPDATE aooi921_tmp SET (exp_code) = ('",pi_code,"') ",
                     " WHERE ookb002 = ? "
         PREPARE aooi921_upd_exp FROM g_sql
         EXECUTE aooi921_upd_exp USING ls_id 
         FREE aooi921_upd_exp
      END IF
      
      RETURN FALSE
   END IF
 
END FUNCTION

{</section>}

{<section id="aooi921.browser_expand" >}
#+ Tree子節點展開
PRIVATE FUNCTION aooi921_browser_expand(p_id)
   #add-point:browser_expand段define name="browser_expand.define_customerization"
   {<point name="browser_expand.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_id          LIKE type_t.num10
   DEFINE l_id          LIKE type_t.num10
   DEFINE l_cnt         LIKE type_t.num10
   DEFINE l_keyvalue    LIKE type_t.chr50
   DEFINE l_typevalue   LIKE type_t.chr50
   DEFINE l_type        LIKE type_t.chr50
   DEFINE l_sql         STRING
   DEFINE ls_source     LIKE type_t.chr500
   DEFINE ls_exp_code   LIKE type_t.chr500
   DEFINE l_return      LIKE type_t.num5
   DEFINE ls_ent_wc     LIKE type_t.chr500
   #add-point:browser_expand段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_expand.define"
   {<point name="browser_expand.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="browser_expand.pre_function"
   {<point name="browser_expand.pre_function"/>}
   #end add-point
   
   #若已經展開
   IF g_browser[p_id].b_isExp = 1 THEN
      RETURN
   END IF
   
   LET l_return = FALSE
 
   LET l_keyvalue = g_browser[p_id].b_ookb002
   
   CASE g_browser[p_id].b_expcode
      WHEN -1
         CALL g_browser.deleteElement(p_id)
      WHEN 0
         RETURN
      WHEN 1
         LET ls_source = "aooi921_tmp"
         LET ls_exp_code = "exp_code"
      WHEN 2
         LET ls_source = "ookb_t"
         LET ls_exp_code = "'2'"
         LET ls_ent_wc = " ookbent = " ||g_enterprise|| " AND "
   END CASE
    
   LET l_sql = " SELECT DISTINCT '','','','FALSE','','',",ls_exp_code,",ookb001,'',ookb002,'',ookb003, 
       ookb004,'','','','',t1.ookbl003 ,t2.ookbl003 ",
               " FROM ",ls_source,
                              " LEFT JOIN ookbl_t t1 ON t1.ookblent="||g_enterprise||" AND t1.ookbl001=ookb001 AND t1.ookbl002='"||g_dlang||"' ",
               " LEFT JOIN ookbl_t t2 ON t2.ookblent="||g_enterprise||" AND t2.ookbl001=ookb002 AND t2.ookbl002='"||g_dlang||"' ",
 
               " WHERE ",ls_ent_wc,"ookb001 = '", l_keyvalue,
               "' AND ookb002 <> ookb001",
               " ORDER BY ookb002"
   
   #add-point:browser_expand段before_pre name="browser_expand.before_pre"
   {<point name="browser_expand.before_pre"/>}
   #end add-point
   
   LET l_sql = cl_sql_add_mask(l_sql)              #遮蔽特定資料
   PREPARE tree_expand FROM l_sql
   DECLARE tree_ex_cur CURSOR FOR tree_expand
  
   LET l_id = p_id + 1
   LET g_cnt = p_id + 1
   CALL g_browser.insertElement(l_id)
   LET l_cnt = 1
   FOREACH tree_ex_cur INTO g_browser[l_id].*,g_browser[g_cnt].b_ookb001_desc,g_browser[g_cnt].b_ookb002_desc  

      #pid=父節點id
      LET g_browser[l_id].b_pid = g_browser[p_id].b_id
      #id=本身節點id(採流水號遞增)
      LET g_browser[l_id].b_id = g_browser[p_id].b_id||"."||l_cnt
      #hasC=確認該節點是否有子孫
      CALL aooi921_desc_show(l_id)
      LET g_browser[l_id].b_hasC = aooi921_chk_hasC(l_id)
      LET l_id = l_id + 1
      LET g_cnt = l_id
      CALL g_browser.insertElement(l_id)
      LET l_cnt = l_cnt + 1
      LET l_return = TRUE
   END FOREACH
   
   #刪除空資料
   CALL g_browser.deleteElement(l_id)
   DISPLAY g_browser.getLength() TO FORMONLY.h_count 
 
END FUNCTION

{</section>}

{<section id="aooi921.browser_create" >}
PRIVATE FUNCTION aooi921_browser_create(p_type)
   #add-point:browser_create name="browser_create.define_customerization"
   {<point name="browser_create.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_type   LIKE type_t.chr50
   DEFINE l_pid    LIKE type_t.chr50
   #add-point:browser_create(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_create.define"
   {<point name="browser_create.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="browser_create.pre_function"
   {<point name="browser_create.pre_function"/>}
   #end add-point
   
   #先找出所有的帳別資料
   
   LET l_ac = 1
      #確定root節點所在
      #此處為帳別部分(LV-1)
      
      #抓出LV2的所有資料
      #LET g_sql = " SELECT DISTINCT t0.ookb001,t0.ookb002,t0.ookb003,t0.ookb004,exp_code FROM aooi921_tmp a ", 

      LET g_sql = " SELECT DISTINCT '','','','FALSE','','',exp_code,ookb001,'',ookb002,'',ookb003,ookb004, 
          '','','','',t1.ookbl003 ,t2.ookbl003 FROM aooi921_tmp a ",
                                 " LEFT JOIN ookbl_t t1 ON t1.ookblent="||g_enterprise||" AND t1.ookbl001=ookb001 AND t1.ookbl002='"||g_dlang||"' ",
               " LEFT JOIN ookbl_t t2 ON t2.ookblent="||g_enterprise||" AND t2.ookbl001=ookb002 AND t2.ookbl002='"||g_dlang||"' ",
 
                  " WHERE ",
                  " (( SELECT COUNT(1) FROM aooi921_tmp b WHERE a.ookb001 = b.ookb002 ", 
                  ") = 0 OR ", 
                  " a.ookb002 = a.ookb001 )", 
                  " ORDER BY a.ookb002"
      #add-point:browser_create.before_pre name="browser_create.before_pre"
      {<point name="browser_create.before_pre"/>}
      #end add-point
 
      PREPARE master_getLV2 FROM g_sql
      DECLARE master_getLV2cur CURSOR FOR master_getLV2
      
      #以下為一般資料root(LV-2)
      
      LET g_cnt = l_ac
      FOREACH master_getLV2cur INTO g_browser[g_cnt].*,g_browser[g_cnt].b_ookb001_desc,g_browser[g_cnt].b_ookb002_desc  

         #去除多餘空白
         #LET g_browser[g_cnt].b_ookb002 = g_browser[g_cnt].b_ookb002 CLIPPED
         LET g_browser[g_cnt].b_pid = l_pid
         LET g_browser[g_cnt].b_id  = l_pid,".",g_cnt USING "<<<"
         LET g_browser[g_cnt].b_exp = FALSE
         LET g_browser[g_cnt].b_expcode = 2
         #CASE g_browser[g_cnt].b_expcode
         #   WHEN 2
         #      LET g_browser[g_cnt].b_hasC = aooi921_chk_hasC(g_cnt)
         #   WHEN 1
         #      LET g_browser[g_cnt].b_hasC = aooi921_chk_hasC(g_cnt)
         #   WHEN 0
         #      LET g_browser[g_cnt].b_hasC = FALSE
         #   WHEN -1
         #      #向下查找到展開值不等於-1得節點(temp table中查找)
         #      LET g_cnt = aooi921_find_node(g_cnt)
         #END CASE
         IF cl_null("ookb001") THEN
            LET g_browser[g_cnt].b_hasC = FALSE
         ELSE
            LET g_browser[g_cnt].b_hasC = TRUE
         END IF
 
         LET g_cnt = g_cnt + 1
      END FOREACH
      LET l_ac = g_browser.getLength()
 
   
   #組合描述欄位&刪除多於資料
   FOR l_ac = 1 TO g_browser.getLength()
      IF cl_null(g_browser[l_ac].b_ookb002) THEN
         CALL g_browser.deleteElement(l_ac)
         LET l_ac = l_ac - 1
      ELSE
         CALL aooi921_desc_show(l_ac)
      END IF
   END FOR
   CALL g_browser.deleteElement(l_ac)
 
   LET g_browser_cnt = g_browser.getLength() - g_browser_root.getLength()
 
   FREE tree_expand
   FREE master_getLV2
   
END FUNCTION

{</section>}

{<section id="aooi921.desc_show" >}
#+ 組合顯示在畫面上的資訊
PRIVATE FUNCTION aooi921_desc_show(pi_ac)
   #add-point:desc_show段define name="desc_show.define_customerization"
   {<point name="desc_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_ac   LIKE type_t.num10
   DEFINE li_tmp  LIKE type_t.num10   
   #add-point:desc_show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="desc_show.define"
   {<point name="desc_show.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="desc_show.pre_function"
   {<point name="desc_show.pre_function"/>}
   #end add-point
   
   LET li_tmp = l_ac
   LET l_ac = pi_ac
   
   
   #add-point:browser_create段desc處理 name="desc_show.show"
   {<point name="desc_show.show"/>} 
   #end add-point
 
   LET l_ac = li_tmp
 
END FUNCTION

{</section>}

{<section id="aooi921.find_node" >}
#+ 尋找符合條件的節點
PRIVATE FUNCTION aooi921_find_node(pi_ac)
   #add-point:find_node段define name="find_node.define_customerization"
   {<point name="find_node.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_ac   LIKE type_t.num10
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_tmp  LIKE type_t.num10
   DEFINE ls_pid  STRING
   #add-point:find_node段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="find_node.define"
   {<point name="find_node.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="find_node.pre_function"
   {<point name="find_node.pre_function"/>}
   #end add-point
   
   LET ls_pid = g_browser[pi_ac].b_pid
   
   LET g_sql = " SELECT DISTINCT '','','','FALSE','','',exp_code,ookb001,'',ookb002,'',ookb003,ookb004, 
       '','','','' ",
               " FROM aooi921_tmp ",
               " WHERE ookb001 = ? AND ookb001 <> ookb002",
               " ORDER BY ookb002"
   PREPARE master_getNode FROM g_sql
   DECLARE master_getNodecur CURSOR FOR master_getNode
   
   LET li_idx = pi_ac
   WHILE li_idx <= g_browser.getLength()
      IF g_browser[li_idx].b_expcode = -1 THEN
         OPEN master_getNodecur USING g_browser[li_idx].b_ookb002
         FOREACH master_getNodecur INTO g_browser[g_browser.getLength()+1].*
            CALL aooi921_desc_show(g_browser.getLength())
            LET g_browser[g_browser.getLength()].b_pid = ls_pid
            LET g_browser[g_browser.getLength()].b_id = g_browser.getLength()
            LET g_browser[g_browser.getLength()].b_hasC = aooi921_chk_hasC(g_browser.getLength())
         END FOREACH
         CALL g_browser.deleteElement(li_idx)
         CALL g_browser.deleteElement(g_browser.getLength())
      ELSE
         LET li_idx = li_idx + 1
      END IF
   
   END WHILE
   
   FREE master_getNode
   
   RETURN g_browser.getLength()
 
END FUNCTION

{</section>}

{<section id="aooi921.chk_hasC" >}
#+ QBE資料查詢
PRIVATE FUNCTION aooi921_chk_hasC(pi_id)
   #add-point:chk_hasC段define name="chk_hasC.define_customerization"
   {<point name="chk_hasC.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_id    LIKE type_t.num10
   DEFINE li_cnt   LIKE type_t.num10
   #add-point:chk_hasC段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="chk_hasC.define"
   {<point name="chk_hasC.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="chk_hasC.pre_function"
   {<point name="chk_hasC.pre_function"/>}
   #end add-point
   
   LET g_sql = "SELECT COUNT(ookb001) FROM aooi921_tmp ",
               " WHERE ",
                "ookb001 = ? AND ",
                "exp_code <> '-1' AND ookb002 <> ookb001 "
 
   PREPARE aooi921_temp_chk FROM g_sql
 
   LET g_sql = "SELECT COUNT(1) FROM ookb_t ",
               " WHERE ookbent = " ||g_enterprise|| " AND ", 
               "ookb002 <> ookb001 AND ",
               "ookb001 = ? ",
               cl_sql_add_filter("ookb_t")
   
   PREPARE aooi921_master_chk FROM g_sql
   
   CASE g_browser[pi_id].b_expcode 
      WHEN -1
         RETURN FALSE
      WHEN 0
         RETURN FALSE
      WHEN 1
         EXECUTE aooi921_temp_chk 
           USING g_browser[pi_id].b_ookb002
            INTO li_cnt
         FREE aooi921_temp_chk
      WHEN 2 
         EXECUTE aooi921_master_chk 
           USING g_browser[pi_id].b_ookb002
            INTO li_cnt
         FREE aooi921_master_chk
   END CASE
    
   IF li_cnt > 0 THEN
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF
 
END FUNCTION

{</section>}

{<section id="aooi921.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION aooi921_construct()
   #add-point:cs段define name="cs.define_customerization"
   {<point name="cs.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ls_wc       STRING
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   #add-point:cs段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   {<point name="cs.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="cs.pre_function"
   {<point name="cs.pre_function"/>}
   #end add-point
   
   #清除畫面
   CLEAR FORM
   INITIALIZE g_ookb_m.* TO NULL
   INITIALIZE g_wc TO NULL
   LET g_qryparam.state = "c"
    
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      CONSTRUCT BY NAME g_wc ON ookb001,ookb002,ookbl003,ookb003,ookb004,ookb005,ookbownid,ookbowndp, 
          ookbcrtid,ookbcrtdp,ookbcrtdt,ookbmodid,ookbmoddt 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.before_construct"
            {<point name="cs.before_construct"/>}
            #end add-point 
            
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<ookbcrtdt>>----
         AFTER FIELD ookbcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<ookbmoddt>>----
         AFTER FIELD ookbmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<ookbcnfdt>>----
         
         #----<<ookbpstdt>>----
 
 
 
 
                  #Ctrlp:construct.c.ookb001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ookb001
            #add-point:ON ACTION controlp INFIELD ookb001 name="construct.c.ookb001"
            {<point name="construct.c.ookb001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ookb001
            #add-point:BEFORE FIELD ookb001 name="construct.b.ookb001"
            {<point name="construct.b.ookb001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ookb001
            
            #add-point:AFTER FIELD ookb001 name="construct.a.ookb001"
            {<point name="construct.a.ookb001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.ookb002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ookb002
            #add-point:ON ACTION controlp INFIELD ookb002 name="construct.c.ookb002"
            {<point name="construct.c.ookb002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ookb002
            #add-point:BEFORE FIELD ookb002 name="construct.b.ookb002"
            {<point name="construct.b.ookb002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ookb002
            
            #add-point:AFTER FIELD ookb002 name="construct.a.ookb002"
            {<point name="construct.a.ookb002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ookbl003
            #add-point:BEFORE FIELD ookbl003 name="construct.b.ookbl003"
            {<point name="construct.b.ookbl003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ookbl003
            
            #add-point:AFTER FIELD ookbl003 name="construct.a.ookbl003"
            {<point name="construct.a.ookbl003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.ookbl003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ookbl003
            #add-point:ON ACTION controlp INFIELD ookbl003 name="construct.c.ookbl003"
            {<point name="construct.c.ookbl003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ookb003
            #add-point:BEFORE FIELD ookb003 name="construct.b.ookb003"
            {<point name="construct.b.ookb003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ookb003
            
            #add-point:AFTER FIELD ookb003 name="construct.a.ookb003"
            {<point name="construct.a.ookb003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.ookb003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ookb003
            #add-point:ON ACTION controlp INFIELD ookb003 name="construct.c.ookb003"
            {<point name="construct.c.ookb003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ookb004
            #add-point:BEFORE FIELD ookb004 name="construct.b.ookb004"
            {<point name="construct.b.ookb004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ookb004
            
            #add-point:AFTER FIELD ookb004 name="construct.a.ookb004"
            {<point name="construct.a.ookb004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.ookb004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ookb004
            #add-point:ON ACTION controlp INFIELD ookb004 name="construct.c.ookb004"
            {<point name="construct.c.ookb004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ookb005
            #add-point:BEFORE FIELD ookb005 name="construct.b.ookb005"
            {<point name="construct.b.ookb005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ookb005
            
            #add-point:AFTER FIELD ookb005 name="construct.a.ookb005"
            {<point name="construct.a.ookb005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.ookb005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ookb005
            #add-point:ON ACTION controlp INFIELD ookb005 name="construct.c.ookb005"
            {<point name="construct.c.ookb005" />}
            #END add-point
 
 
         #Ctrlp:construct.c.ookbownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ookbownid
            #add-point:ON ACTION controlp INFIELD ookbownid name="construct.c.ookbownid"
            {<point name="construct.c.ookbownid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ookbownid
            #add-point:BEFORE FIELD ookbownid name="construct.b.ookbownid"
            {<point name="construct.b.ookbownid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ookbownid
            
            #add-point:AFTER FIELD ookbownid name="construct.a.ookbownid"
            {<point name="construct.a.ookbownid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.ookbowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ookbowndp
            #add-point:ON ACTION controlp INFIELD ookbowndp name="construct.c.ookbowndp"
            {<point name="construct.c.ookbowndp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ookbowndp
            #add-point:BEFORE FIELD ookbowndp name="construct.b.ookbowndp"
            {<point name="construct.b.ookbowndp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ookbowndp
            
            #add-point:AFTER FIELD ookbowndp name="construct.a.ookbowndp"
            {<point name="construct.a.ookbowndp" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.ookbcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ookbcrtid
            #add-point:ON ACTION controlp INFIELD ookbcrtid name="construct.c.ookbcrtid"
            {<point name="construct.c.ookbcrtid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ookbcrtid
            #add-point:BEFORE FIELD ookbcrtid name="construct.b.ookbcrtid"
            {<point name="construct.b.ookbcrtid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ookbcrtid
            
            #add-point:AFTER FIELD ookbcrtid name="construct.a.ookbcrtid"
            {<point name="construct.a.ookbcrtid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.ookbcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ookbcrtdp
            #add-point:ON ACTION controlp INFIELD ookbcrtdp name="construct.c.ookbcrtdp"
            {<point name="construct.c.ookbcrtdp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ookbcrtdp
            #add-point:BEFORE FIELD ookbcrtdp name="construct.b.ookbcrtdp"
            {<point name="construct.b.ookbcrtdp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ookbcrtdp
            
            #add-point:AFTER FIELD ookbcrtdp name="construct.a.ookbcrtdp"
            {<point name="construct.a.ookbcrtdp" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ookbcrtdt
            #add-point:BEFORE FIELD ookbcrtdt name="construct.b.ookbcrtdt"
            {<point name="construct.b.ookbcrtdt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.ookbmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ookbmodid
            #add-point:ON ACTION controlp INFIELD ookbmodid name="construct.c.ookbmodid"
            {<point name="construct.c.ookbmodid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ookbmodid
            #add-point:BEFORE FIELD ookbmodid name="construct.b.ookbmodid"
            {<point name="construct.b.ookbmodid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ookbmodid
            
            #add-point:AFTER FIELD ookbmodid name="construct.a.ookbmodid"
            {<point name="construct.a.ookbmodid" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ookbmoddt
            #add-point:BEFORE FIELD ookbmoddt name="construct.b.ookbmoddt"
            {<point name="construct.b.ookbmoddt" />}
            #END add-point
 
 
 
       
      END CONSTRUCT
  
      #add-point:cs段more_construct name="cs.more_construct"
      {<point name="cs.more_construct"/>}
      #end add-point
         
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段before dialog name="cs.before_dialog"
         {<point name="cs.before_dialog"/>}
         #end add-point
      
      ON ACTION qbe_select     #條件查詢
         CALL cl_qbe_list('m') RETURNING ls_wc
      
      ON ACTION qbe_save       #條件儲存
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
      CONTINUE DIALOG
 
   END DIALOG
 
   #add-point:cs段after_construct name="cs.after_construct"
   {<point name="cs.after_construct"/>}
   #end add-point
   
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION

{</section>}

{<section id="aooi921.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aooi921_query()
   #add-point:query段define name="query.define_customerization"
   {<point name="query.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ls_wc STRING
   #add-point:query段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   {<point name="query.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="query.before_query"
   {<point name="query.before_query"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET INT_FLAG = 0
   LET ls_wc = g_wc
 
   #CLEAR FORM
   #CALL g_browser.clear()
 
   DISPLAY " " TO FORMONLY.h_count
 
   CALL aooi921_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      #add-point:query段取消 name="query.cancel"
      {<point name="query.cancel"/>}
      #end add-point
      #CALL aooi921_browser_fill(g_wc,g_searchtype)
      CALL aooi921_fetch("")
      RETURN
   ELSE
      LET g_current_row = 1
      LET g_browser_cnt = 0
      LET g_current_idx = 1
      CALL g_browser.clear()
      LET g_first = 0  #設定重新查詢資料後顯示
   END IF
 
   LET g_searchtype = "3"
   LET g_searchcol = "0"
   CALL aooi921_browser_fill(g_wc,g_searchtype)
   
   IF g_browser_cnt > 0 THEN
      CALL aooi921_fetch("")
   ELSE
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #第一層模糊搜尋
   #IF g_browser_cnt = 0 THEN
   #   LET g_wc = cl_wc_parser(g_wc)
   #   CALL aooi921_browser_fill(g_wc,g_searchtype)
   #END IF
   
   #第二層速記碼搜尋
   #IF g_browser_cnt = 0 THEN
   #   INITIALIZE g_errparam TO NULL 
   #   LET g_errparam.extend = "" 
   #   LET g_errparam.code   = "-100" 
   #   LET g_errparam.popup  = TRUE 
   #   CALL cl_err()
   #END IF
 
END FUNCTION

{</section>}

{<section id="aooi921.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aooi921_fetch(p_flag)
   #add-point:fetch段define name="fetch.define_customerization"
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   DEFINE ls_chk     STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:fetch段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   {<point name="fetch.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="fetch.befroe_fetch"
   {<point name="fetch.befroe_fetch"/>}
   #end add-point 
 
 
   #瀏覽頁筆數顯示
   LET li_idx = 1
   FOR li_idx = 1 TO g_browser_root.getLength()
      IF g_browser_root[li_idx] > g_current_idx THEN
       EXIT FOR
      END IF
   END FOR
   LET li_idx = g_current_idx - li_idx + 1
   #DISPLAY li_idx TO FORMONLY.h_index   #當下筆數
 
   IF p_flag = "/" THEN
      IF (NOT g_no_ask) THEN      
         CALL cl_getmsg("fetch",g_lang) RETURNING ls_msg
         LET INT_FLAG = 0
 
         PROMPT ls_msg CLIPPED,": " FOR g_jump
            #交談指令共用ACTION
            &include "common_action.4gl" 
         END PROMPT
 
         IF INT_FLAG THEN
            LET INT_FLAG = 0
         ELSE
            IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
               LET g_current_idx = g_jump
            END IF
            LET g_no_ask = FALSE  
         END IF           
      END IF
   END IF    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
 
   LET g_ookb_m.ookb002 = g_browser[g_current_idx].b_ookb002
   LET g_ookb_m.ookb001 = g_browser[g_current_idx].b_ookb001
    
   #add-point:fetch段refresh前 name="fetch.before_refresh"
   {<point name="fetch.before_refresh"/>}
   #end add-point
    
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aooi921_master_referesh USING g_ookb_m.ookb001,g_ookb_m.ookb002 INTO g_ookb_m.ookb001,g_ookb_m.ookb002, 
       g_ookb_m.ookb003,g_ookb_m.ookb004,g_ookb_m.ookb005,g_ookb_m.ookbownid,g_ookb_m.ookbowndp,g_ookb_m.ookbcrtid, 
       g_ookb_m.ookbcrtdp,g_ookb_m.ookbcrtdt,g_ookb_m.ookbmodid,g_ookb_m.ookbmoddt,g_ookb_m.ookb001_desc, 
       g_ookb_m.ookbownid_desc,g_ookb_m.ookbowndp_desc,g_ookb_m.ookbcrtid_desc,g_ookb_m.ookbcrtdp_desc, 
       g_ookb_m.ookbmodid_desc 
   
   IF SQLCA.sqlcode THEN
       INITIALIZE g_errparam TO NULL 
       LET g_errparam.extend = "ookb_t:",SQLERRMESSAGE 
       LET g_errparam.code   = SQLCA.sqlcode 
       LET g_errparam.popup  = TRUE 
       CALL cl_err()
       INITIALIZE g_ookb_m.* TO NULL
       RETURN
   END IF
   
   #若無資料則關閉相關功能
   IF g_browser.getLength() = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
   #add-point:fetch段after_fetch name="fetch.after_fetch"
   {<point name="fetch.after_fetch"/>}
   #end add-point
 
   
   
   #保存單頭舊值
   LET g_ookb_m_t.* = g_ookb_m.*
   LET g_ookb_m_o.* = g_ookb_m.*
   
   #重新顯示
   CALL aooi921_show()
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   DISPLAY g_browser.getLength() TO FORMONLY.h_count 
 
   
   
END FUNCTION

{</section>}

{<section id="aooi921.insert" >}
#+ 資料新增
PRIVATE FUNCTION aooi921_insert(l_dialog)
   #add-point:insert段define name="insert.define_customerization"
   {<point name="insert.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE l_dialog   ui.DIALOG
   DEFINE li_addpos  LIKE type_t.num10 #新增節點時產出的畫面實際位置
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   #add-point:insert段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   {<point name="insert.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="insert.pre_function"
   {<point name="insert.pre_function"/>}
   #end add-point
   
   LET g_ookb001_t = g_ookb_m.ookb001
   LET g_ookb002_t = g_ookb_m.ookb002
 
   LET g_ookb002_t = g_ookb_m.ookb002
 
   #清畫面欄位內容
   CLEAR g_ookb_m.*
 
 
   #add-point:單頭預設值 name="insert.before_insert"
   {<point name="insert.before_insert"/>}
   #end add-point 
 
   INITIALIZE g_ookb_m.* LIKE ookb_t.*
   DISPLAY BY NAME g_ookb_m.ookb001,g_ookb_m.ookb001_desc,g_ookb_m.ookb002,g_ookb_m.ookbl003,g_ookb_m.ookb003, 
       g_ookb_m.ookb004,g_ookb_m.ookb005,g_ookb_m.ookbownid,g_ookb_m.ookbownid_desc,g_ookb_m.ookbowndp, 
       g_ookb_m.ookbowndp_desc,g_ookb_m.ookbcrtid,g_ookb_m.ookbcrtid_desc,g_ookb_m.ookbcrtdp,g_ookb_m.ookbcrtdp_desc, 
       g_ookb_m.ookbcrtdt,g_ookb_m.ookbmodid,g_ookb_m.ookbmodid_desc,g_ookb_m.ookbmoddt
   CALL s_transaction_begin()
 
   #其他table資料備份(確定是否更改用)
   LET g_master_multi_table_t.ookbl001 = g_ookb_m.ookb002
LET g_master_multi_table_t.ookbl003 = g_ookb_m.ookbl003
 
 
   WHILE TRUE
      #給予pid,type預設值
      LET g_ookb_m.ookb001 = g_ookb002_t
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_ookb_m.ookbownid = g_user
      LET g_ookb_m.ookbowndp = g_dept
      LET g_ookb_m.ookbcrtid = g_user
      LET g_ookb_m.ookbcrtdp = g_dept 
      LET g_ookb_m.ookbcrtdt = cl_get_current()
      LET g_ookb_m.ookbmodid = g_user
      LET g_ookb_m.ookbmoddt = cl_get_current()
 
 
 
      
      CALL gfrm_curr.setElementImage("statechange", "authstatus/valid.png")
  
      
      
      #單頭預設值
      
     
      #add-point:單頭預設值 name="insert.default"
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL aooi921_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_ookb_m.* = g_ookb_m_t.*
         CALL aooi921_show()
         INITIALIZE g_errparam TO NULL
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         EXIT WHILE
      ELSE
         #分兩種狀況-1.根節點, 2.非根節點
         IF g_ookb_m.ookb001 = g_ookb_m.ookb002 THEN
            #為根節點
            LET li_addpos = g_browser.getLength() + 1
            LET g_browser[li_addpos].b_ookb001 = g_ookb_m.ookb001
            LET g_browser[li_addpos].b_ookb002 = g_ookb_m.ookb002
            LET g_browser[li_addpos].b_exp  = FALSE
            LET g_browser[li_addpos].b_hasC = FALSE
            LET g_browser[li_addpos].b_id  = '0.add',g_add_idx USING "<<<"
            LET g_browser[li_addpos].b_pid = '0',g_add_idx USING "<<<"
            LET g_add_idx = g_add_idx + 1
            CALL aooi921_desc_show(li_addpos)
            LET g_current_idx = li_addpos
         ELSE
            #非根節點, 開始搜尋其父節點(已展開才做處理)
            LET li_cnt = g_cnt
            IF g_browser.getLength() > 0 THEN
               FOR li_idx = 1 TO g_browser.getLength()
                  IF g_browser[li_idx].b_ookb002 = g_ookb_m.ookb001 THEN
                     LET li_addpos = l_dialog.appendNode("s_browse",li_idx)
                     LET g_cnt = li_addpos
                     LET g_browser[li_addpos].b_ookb001 = g_ookb_m.ookb001
                     LET g_browser[li_addpos].b_ookb002 = g_ookb_m.ookb002
                     EXECUTE master_refreshcur USING g_browser[li_addpos].b_ookb001
                                                     ,g_browser[li_addpos].b_ookb002
 
                                                INTO g_browser[g_cnt].b_ookb001,g_browser[g_cnt].b_ookb002, 
                                                    g_browser[g_cnt].b_ookb003,g_browser[g_cnt].b_ookb004, 
                                                    g_browser[g_cnt].b_ookb001_desc,g_browser[g_cnt].b_ookb002_desc 

                     LET g_browser[li_addpos].b_exp  = FALSE
                     LET g_browser[li_addpos].b_hasC = FALSE
                     LET g_browser[li_addpos].b_id  = g_browser[li_idx].b_id, '.add',g_add_idx USING "<<<"
                     LET g_browser[li_addpos].b_pid = g_browser[li_idx].b_id
                     LET g_add_idx = g_add_idx + 1
                     CALL aooi921_desc_show(li_addpos)
                     #打開父節點
                     LET g_browser[li_idx].b_hasC = TRUE
                     LET g_browser[li_idx].b_exp = TRUE
                     LET g_current_idx = li_addpos
                     EXIT FOR
                  END IF
               END FOR
            END IF
            LET g_cnt = li_cnt
         END IF
      END IF
      
      LET g_rec_b = 0
      EXIT WHILE
   END WHILE
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE aooi921_master_referesh USING g_ookb_m.ookb001,g_ookb_m.ookb002 INTO g_ookb_m.ookb001,g_ookb_m.ookb002, 
       g_ookb_m.ookb003,g_ookb_m.ookb004,g_ookb_m.ookb005,g_ookb_m.ookbownid,g_ookb_m.ookbowndp,g_ookb_m.ookbcrtid, 
       g_ookb_m.ookbcrtdp,g_ookb_m.ookbcrtdt,g_ookb_m.ookbmodid,g_ookb_m.ookbmoddt,g_ookb_m.ookb001_desc, 
       g_ookb_m.ookbownid_desc,g_ookb_m.ookbowndp_desc,g_ookb_m.ookbcrtid_desc,g_ookb_m.ookbcrtdp_desc, 
       g_ookb_m.ookbmodid_desc
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_ookb_m.ookb001,g_ookb_m.ookb001_desc,g_ookb_m.ookb002,g_ookb_m.ookbl003,g_ookb_m.ookb003, 
       g_ookb_m.ookb004,g_ookb_m.ookb005,g_ookb_m.ookbownid,g_ookb_m.ookbownid_desc,g_ookb_m.ookbowndp, 
       g_ookb_m.ookbowndp_desc,g_ookb_m.ookbcrtid,g_ookb_m.ookbcrtid_desc,g_ookb_m.ookbcrtdp,g_ookb_m.ookbcrtdp_desc, 
       g_ookb_m.ookbcrtdt,g_ookb_m.ookbmodid,g_ookb_m.ookbmodid_desc,g_ookb_m.ookbmoddt
   
   #功能已完成,通報訊息中心
   CALL aooi921_msgcentre_notify('insert')
   
END FUNCTION

{</section>}

{<section id="aooi921.modify" >}
#+ 資料修改
PRIVATE FUNCTION aooi921_modify()
   #add-point:modify段define name="modify.define_customerization"
   {<point name="modify.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:modify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   {<point name="modify.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="modify.pre_function"
   {<point name="modify.pre_function"/>}
   #end add-point
   
   IF g_ookb_m.ookb001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF 
   
   EXECUTE aooi921_master_referesh USING g_ookb_m.ookb001,g_ookb_m.ookb002 INTO g_ookb_m.ookb001,g_ookb_m.ookb002, 
       g_ookb_m.ookb003,g_ookb_m.ookb004,g_ookb_m.ookb005,g_ookb_m.ookbownid,g_ookb_m.ookbowndp,g_ookb_m.ookbcrtid, 
       g_ookb_m.ookbcrtdp,g_ookb_m.ookbcrtdt,g_ookb_m.ookbmodid,g_ookb_m.ookbmoddt,g_ookb_m.ookb001_desc, 
       g_ookb_m.ookbownid_desc,g_ookb_m.ookbowndp_desc,g_ookb_m.ookbcrtid_desc,g_ookb_m.ookbcrtdp_desc, 
       g_ookb_m.ookbmodid_desc
 
   #檢查是否允許此動作
   IF NOT aooi921_action_chk() THEN
      RETURN
   END IF
  
   LET g_ookb001_t = g_ookb_m.ookb001
   LET g_ookb002_t = g_ookb_m.ookb002
 
   
   CALL s_transaction_begin()
   
   OPEN aooi921_cl USING g_enterprise,g_ookb_m.ookb001,g_ookb_m.ookb002
   IF STATUS THEN
      CLOSE aooi921_cl
      CALL s_transaction_end("N","0")
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aooi921_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH aooi921_cl INTO g_ookb_m.ookb001,g_ookb_m.ookb001_desc,g_ookb_m.ookb002,g_ookb_m.ookbl003,g_ookb_m.ookb003, 
       g_ookb_m.ookb004,g_ookb_m.ookb005,g_ookb_m.ookbownid,g_ookb_m.ookbownid_desc,g_ookb_m.ookbowndp, 
       g_ookb_m.ookbowndp_desc,g_ookb_m.ookbcrtid,g_ookb_m.ookbcrtid_desc,g_ookb_m.ookbcrtdp,g_ookb_m.ookbcrtdp_desc, 
       g_ookb_m.ookbcrtdt,g_ookb_m.ookbmodid,g_ookb_m.ookbmodid_desc,g_ookb_m.ookbmoddt
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CLOSE aooi921_cl
      CALL s_transaction_end("N","0")
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_ookb_m.ookb002,":",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   #其他table資料備份(確定是否更改用)
   LET g_master_multi_table_t.ookbl001 = g_ookb_m.ookb002
LET g_master_multi_table_t.ookbl003 = g_ookb_m.ookbl003
 
 
   CALL aooi921_show()
   WHILE TRUE
      LET g_ookb_m.ookb001 = g_ookb001_t
      LET g_ookb_m.ookb002 = g_ookb002_t
 
      
      #寫入修改者/修改日期資訊
      LET g_ookb_m.ookbmodid = g_user 
LET g_ookb_m.ookbmoddt = cl_get_current()
LET g_ookb_m.ookbmodid_desc = cl_get_username(g_ookb_m.ookbmodid)
 
      #add-point:modify段修改前 name="modify.before_input"
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL aooi921_input("u")     #欄位更改
 
      #add-point:modify段修改後 name="modify.after_input"
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_ookb_m.* = g_ookb_m_t.*
         CALL aooi921_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         EXIT WHILE
      END IF
 
      #若有modid跟moddt則進行update
      UPDATE ookb_t SET (ookbmodid,ookbmoddt) = (g_ookb_m.ookbmodid,g_ookb_m.ookbmoddt)
       WHERE ookbent = g_enterprise AND ookb001 = g_ookb001_t
         AND ookb002 = g_ookb002_t
 
      
      EXIT WHILE
  
   END WHILE
 
   CLOSE aooi921_cl
   CALL s_transaction_end("Y","0")
 
   #功能已完成,通報訊息中心
   CALL aooi921_msgcentre_notify('modify')
   
END FUNCTION

{</section>}

{<section id="aooi921.check" >}
#+ 避免資料錯誤
PRIVATE FUNCTION aooi921_check(ps_id,ps_pid)
   #add-point:check段define name="check.define_customerization"
   {<point name="check.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_id       STRING
   DEFINE ps_pid      STRING
   DEFINE ps_type     STRING
   DEFINE ls_pid      LIKE type_t.chr100
   DEFINE ls_id       LIKE type_t.chr100
   DEFINE ls_type     LIKE type_t.chr100
   DEFINE ls_return   LIKE type_t.num5
   DEFINE ls_sql      STRING
   DEFINE li_cnt      LIKE type_t.num10
   #add-point:check段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="check.define"
   {<point name="check.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="check.pre_function"
   {<point name="check.pre_function"/>}
   #end add-point
   
   #從該節點往上檢查, 若出現ID重複的狀況代表會導致無限迴圈
   LET ls_sql = " SELECT ookb002,ookb001 FROM ",
                " (SELECT ookb002,ookb001 FROM ookb_t WHERE ookbent = " ||g_enterprise|| " AND ookb002<>ookb001)", 

                " WHERE ookb002 = '",ps_id,"' OR ookb001 = '",ps_id,"'",
                " START WITH ookb002='",ps_pid,"'",
                " CONNECT BY PRIOR ookb001=ookb002 "
 
   PREPARE check_cnt FROM ls_sql
   DECLARE check_cntcur CURSOR FOR check_cnt
   OPEN check_cntcur
   FETCH check_cntcur INTO li_cnt
 
   IF li_cnt > 0 THEN
      LET ls_return = TRUE
   ELSE
      LET ls_return = FALSE
   END IF
   
   RETURN ls_return 
   
END FUNCTION

{</section>}

{<section id="aooi921.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION aooi921_reproduce(l_dialog)
   #add-point:reproduce段define name="reproduce.define_customerization"
   {<point name="reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE l_dialog      ui.DIALOG
   DEFINE li_addpos     LIKE type_t.num10
   DEFINE l_newno           LIKE ookb_t.ookb001 
   DEFINE l_oldno           LIKE ookb_t.ookb001 
   DEFINE l_newno02     LIKE ookb_t.ookb002 
   DEFINE l_oldno02     LIKE ookb_t.ookb002 
 
   DEFINE l_master          RECORD LIKE ookb_t.*
   DEFINE l_cnt             LIKE type_t.num10  
   DEFINE li_idx            LIKE type_t.num10  
   DEFINE li_cnt            LIKE type_t.num10  
   #add-point:reproduce段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   {<point name="reproduce.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="reproduce.before_reproduce"
   {<point name="reproduce.before_reproduce"/>}
   #end add-point
 
   #檢查PK欄位是否均有值,若全部為NULL時退出
   IF g_ookb_m.ookb001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF 
 
   EXECUTE aooi921_master_referesh USING g_ookb_m.ookb001,g_ookb_m.ookb002 INTO g_ookb_m.ookb001,g_ookb_m.ookb002, 
       g_ookb_m.ookb003,g_ookb_m.ookb004,g_ookb_m.ookb005,g_ookb_m.ookbownid,g_ookb_m.ookbowndp,g_ookb_m.ookbcrtid, 
       g_ookb_m.ookbcrtdp,g_ookb_m.ookbcrtdt,g_ookb_m.ookbmodid,g_ookb_m.ookbmoddt,g_ookb_m.ookb001_desc, 
       g_ookb_m.ookbownid_desc,g_ookb_m.ookbowndp_desc,g_ookb_m.ookbcrtid_desc,g_ookb_m.ookbcrtdp_desc, 
       g_ookb_m.ookbmodid_desc
 
   #檢查如果有子節點(hasC=1)則顯示錯誤訊息後退出
 
   ERROR ""
 
   CALL cl_set_head_visible("","YES")
 
      LET g_ookb_m.ookb001_desc = ''
   DISPLAY BY NAME g_ookb_m.ookb001_desc
 
 
   LET g_ookb_m.ookb001 = ""
   LET g_ookb_m.ookb002 = ""
 
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_ookb_m.ookbownid = g_user
      LET g_ookb_m.ookbowndp = g_dept
      LET g_ookb_m.ookbcrtid = g_user
      LET g_ookb_m.ookbcrtdp = g_dept 
      LET g_ookb_m.ookbcrtdt = cl_get_current()
      LET g_ookb_m.ookbmodid = g_user
      LET g_ookb_m.ookbmoddt = cl_get_current()
 
 
 
   
   CALL s_transaction_begin()
   
   #其他table資料備份(確定是否更改用)
   LET g_master_multi_table_t.ookbl001 = g_ookb_m.ookb002
LET g_master_multi_table_t.ookbl003 = g_ookb_m.ookbl003
 
 
   #add-point:複製輸入前 name="reproduce.head.b_input"
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #直接呼叫輸入
   CALL aooi921_input("r")
 
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   {<point name="reproduce.after_reproduce" />}
   #end add-point
 
   IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_ookb_m.* = g_ookb_m_t.*
         CALL aooi921_show()
         INITIALIZE g_errparam TO NULL
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      ELSE
         #分兩種狀況-1.根節點, 2.非根節點
         IF g_ookb_m.ookb001 = g_ookb_m.ookb002 THEN
            #為根節點
            LET li_addpos = g_browser.getLength() + 1
            LET g_browser[li_addpos].b_ookb001 = g_ookb_m.ookb001
            LET g_browser[li_addpos].b_ookb002 = g_ookb_m.ookb002
            LET g_browser[li_addpos].b_exp  = FALSE
            LET g_browser[li_addpos].b_hasC = FALSE
            LET g_browser[li_addpos].b_id  = '0.add',g_add_idx USING "<<<"
            LET g_browser[li_addpos].b_pid = '0',g_add_idx USING "<<<"
            LET g_add_idx = g_add_idx + 1
            CALL aooi921_desc_show(li_addpos)
            LET g_current_idx = li_addpos
         ELSE
            #非根節點, 開始搜尋其父節點(已展開才做處理)
            LET li_cnt = g_cnt
            IF g_browser.getLength() > 0 THEN
               FOR li_idx = 1 TO g_browser.getLength()
                  IF g_browser[li_idx].b_ookb002 = g_ookb_m.ookb001 THEN
                     LET li_addpos = l_dialog.appendNode("s_browse",li_idx)
                     LET g_cnt = li_addpos
                     LET g_browser[li_addpos].b_ookb001 = g_ookb_m.ookb001
                     LET g_browser[li_addpos].b_ookb002 = g_ookb_m.ookb002
                     EXECUTE master_refreshcur USING g_browser[li_addpos].b_ookb001
                                                     ,g_browser[li_addpos].b_ookb002
 
                                                INTO g_browser[g_cnt].b_ookb001,g_browser[g_cnt].b_ookb002, 
                                                    g_browser[g_cnt].b_ookb003,g_browser[g_cnt].b_ookb004, 
                                                    g_browser[g_cnt].b_ookb001_desc,g_browser[g_cnt].b_ookb002_desc 

                     LET g_browser[li_addpos].b_exp  = FALSE
                     LET g_browser[li_addpos].b_hasC = FALSE
                     LET g_browser[li_addpos].b_id  = g_browser[li_idx].b_id, '.add',g_add_idx USING "<<<"
                     LET g_browser[li_addpos].b_pid = g_browser[li_idx].b_id
                     LET g_add_idx = g_add_idx + 1
                     CALL aooi921_desc_show(li_addpos)
                     #打開父節點
                     LET g_browser[li_idx].b_hasC = TRUE
                     LET g_browser[li_idx].b_exp = TRUE
                     LET g_current_idx = li_addpos
                     EXIT FOR
                  END IF
               END FOR
            END IF
            LET g_cnt = li_cnt 
         END IF
      END IF
 
   #功能已完成,通報訊息中心
   CALL aooi921_msgcentre_notify('reproduce')
 
END FUNCTION

{</section>}

{<section id="aooi921.input" >}
#+ 資料輸入
PRIVATE FUNCTION aooi921_input(p_cmd)
   #add-point:input段define name="input.define_customerization"
   {<point name="input.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_cmd           LIKE type_t.chr1
   DEFINE l_cmd_t         LIKE type_t.chr1
   DEFINE l_ac_t          LIKE type_t.num10       #未取消的ARRAY CNT 
   DEFINE l_n             LIKE type_t.num10       #檢查重複用
   DEFINE l_cnt           LIKE type_t.num10       #檢查重複用
   DEFINE l_lock_sw       LIKE type_t.chr1        #單身鎖住否
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否
   DEFINE l_count         LIKE type_t.num10
   DEFINE l_i             LIKE type_t.num10
   DEFINE l_insert        LIKE type_t.num10
   DEFINE ls_return       STRING
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:input段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   {<point name="input.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="input.pre_function"
   {<point name="input.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   #將資料輸出到畫面上
   DISPLAY BY NAME g_ookb_m.ookb001,g_ookb_m.ookb001_desc,g_ookb_m.ookb002,g_ookb_m.ookbl003,g_ookb_m.ookb003, 
       g_ookb_m.ookb004,g_ookb_m.ookb005,g_ookb_m.ookbownid,g_ookb_m.ookbownid_desc,g_ookb_m.ookbowndp, 
       g_ookb_m.ookbowndp_desc,g_ookb_m.ookbcrtid,g_ookb_m.ookbcrtid_desc,g_ookb_m.ookbcrtdp,g_ookb_m.ookbcrtdp_desc, 
       g_ookb_m.ookbcrtdt,g_ookb_m.ookbmodid,g_ookb_m.ookbmodid_desc,g_ookb_m.ookbmoddt
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r' 
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF  
   
   CALL cl_set_head_visible("","YES")
 
   LET l_insert = FALSE
   LET g_action_choice = ""
   LET g_qryparam.state = "i"
   
   #控制key欄位可否輸入
   CALL aooi921_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aooi921_set_no_entry(p_cmd)
   #add-point:set_no_entry後 name="input.after_set_no_entry"
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_ookb_m.ookb001,g_ookb_m.ookb002,g_ookb_m.ookbl003,g_ookb_m.ookb003,g_ookb_m.ookb004, 
       g_ookb_m.ookb005
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #單頭段
      INPUT BY NAME g_ookb_m.ookb001,g_ookb_m.ookb002,g_ookb_m.ookbl003,g_ookb_m.ookb003,g_ookb_m.ookb004, 
          g_ookb_m.ookb005 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item name="input.master_input.update_item"
               {<point name="input.master_input.update_item" mark="Y"/>}
               #END add-point
            END IF
 
 
 
 
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            #add-point:input段define name="input.action"
            {<point name="input.action"/>}
            #end add-point
          
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ookb001
            
            #add-point:AFTER FIELD ookb001 name="input.a.ookb001"
            {<point name="input.a.ookb001" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ookb001
            #add-point:BEFORE FIELD ookb001 name="input.b.ookb001"
            {<point name="input.b.ookb001" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE ookb001
            #add-point:ON CHANGE ookb001 name="input.g.ookb001"
            {<point name="input.g.ookb001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ookb002
            #add-point:BEFORE FIELD ookb002 name="input.b.ookb002"
            {<point name="input.b.ookb002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ookb002
            
            #add-point:AFTER FIELD ookb002 name="input.a.ookb002"
            {<point name="input.a.ookb002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE ookb002
            #add-point:ON CHANGE ookb002 name="input.g.ookb002"
            {<point name="input.g.ookb002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ookbl003
            #add-point:BEFORE FIELD ookbl003 name="input.b.ookbl003"
            {<point name="input.b.ookbl003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ookbl003
            
            #add-point:AFTER FIELD ookbl003 name="input.a.ookbl003"
            {<point name="input.a.ookbl003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE ookbl003
            #add-point:ON CHANGE ookbl003 name="input.g.ookbl003"
            {<point name="input.g.ookbl003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ookb003
            #add-point:BEFORE FIELD ookb003 name="input.b.ookb003"
            {<point name="input.b.ookb003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ookb003
            
            #add-point:AFTER FIELD ookb003 name="input.a.ookb003"
            {<point name="input.a.ookb003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE ookb003
            #add-point:ON CHANGE ookb003 name="input.g.ookb003"
            {<point name="input.g.ookb003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ookb004
            #add-point:BEFORE FIELD ookb004 name="input.b.ookb004"
            {<point name="input.b.ookb004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ookb004
            
            #add-point:AFTER FIELD ookb004 name="input.a.ookb004"
            {<point name="input.a.ookb004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE ookb004
            #add-point:ON CHANGE ookb004 name="input.g.ookb004"
            {<point name="input.g.ookb004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ookb005
            #add-point:BEFORE FIELD ookb005 name="input.b.ookb005"
            {<point name="input.b.ookb005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ookb005
            
            #add-point:AFTER FIELD ookb005 name="input.a.ookb005"
            {<point name="input.a.ookb005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE ookb005
            #add-point:ON CHANGE ookb005 name="input.g.ookb005"
            {<point name="input.g.ookb005" />}
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.ookb001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ookb001
            #add-point:ON ACTION controlp INFIELD ookb001 name="input.c.ookb001"
            {<point name="input.c.ookb001" />}
            #END add-point
 
 
         #Ctrlp:input.c.ookb002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ookb002
            #add-point:ON ACTION controlp INFIELD ookb002 name="input.c.ookb002"
            {<point name="input.c.ookb002" />}
            #END add-point
 
 
         #Ctrlp:input.c.ookbl003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ookbl003
            #add-point:ON ACTION controlp INFIELD ookbl003 name="input.c.ookbl003"
            {<point name="input.c.ookbl003" />}
            #END add-point
 
 
         #Ctrlp:input.c.ookb003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ookb003
            #add-point:ON ACTION controlp INFIELD ookb003 name="input.c.ookb003"
            {<point name="input.c.ookb003" />}
            #END add-point
 
 
         #Ctrlp:input.c.ookb004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ookb004
            #add-point:ON ACTION controlp INFIELD ookb004 name="input.c.ookb004"
            {<point name="input.c.ookb004" />}
            #END add-point
 
 
         #Ctrlp:input.c.ookb005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ookb005
            #add-point:ON ACTION controlp INFIELD ookb005 name="input.c.ookb005"
            {<point name="input.c.ookb005" />}
            #END add-point
 
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #避免資料錯誤的檢查
            IF aooi921_check(g_ookb_m.ookb002,g_ookb_m.ookb001
               ) THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "" 
               LET g_errparam.code   = "std-00020" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               NEXT FIELD CURRENT
            END IF
 
            #CALL cl_err_collect_show()   #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_ookb_m.ookb002
 
            #實體新增/修改/複製段落的處理
            CASE
               WHEN p_cmd = "a" OR p_cmd = "r"
                  LET l_count = 1
 
                  SELECT COUNT(1) INTO l_count FROM ookb_t
                   WHERE ookbent = g_enterprise AND ookb001 = g_ookb_m.ookb001
                     AND ookb002 = g_ookb_m.ookb002
 
                         #
                  IF l_count = 0 THEN
                     #add-point:單頭新增前 name="input.head.b_insert"
                     {<point name="input.head.b_insert" mark="Y"/>}
                     #end add-point
 
                     INSERT INTO ookb_t (ookbent,ookb001,ookb002,ookb003,ookb004,ookb005,ookbownid,ookbowndp, 
                         ookbcrtid,ookbcrtdp,ookbcrtdt,ookbmodid,ookbmoddt)
                     VALUES (g_enterprise,g_ookb_m.ookb001,g_ookb_m.ookb002,g_ookb_m.ookb003,g_ookb_m.ookb004, 
                         g_ookb_m.ookb005,g_ookb_m.ookbownid,g_ookb_m.ookbowndp,g_ookb_m.ookbcrtid,g_ookb_m.ookbcrtdp, 
                         g_ookb_m.ookbcrtdt,g_ookb_m.ookbmodid,g_ookb_m.ookbmoddt) 
 
                     #add-point:單頭新增中 name="input.head.m_insert"
                     {<point name="input.head.m_insert"/>}
                     #end add-point
 
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "g_ookb_m:",SQLERRMESSAGE 
                        LET g_errparam.code   = SQLCA.sqlcode 
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err()
                        CONTINUE DIALOG
                     END IF
                  
                     #提速檔資料建置
                     IF g_ookb_m.ookb002 <> g_ookb_m.ookb001 THEN
                        #CALL n_ookbs_generate_child(g_ookb_m.ookb002,g_ookb_m.ookb001)
                     END IF
                     
                     #add-point:單頭新增後 name="input.head.a_insert"
                     {<point name="input.head.a_insert"/>}
                     #end add-point
                     
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_ookb_m.ookb002 = g_master_multi_table_t.ookbl001 AND
         g_ookb_m.ookbl003 = g_master_multi_table_t.ookbl003  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'ookblent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_ookb_m.ookb002
            LET l_field_keys[02] = 'ookbl001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.ookbl001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'ookbl002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_ookb_m.ookbl003
            LET l_fields[01] = 'ookbl003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'ookbl_t')
         END IF 
 
                     CALL s_transaction_end("Y","0")
                  ELSE
                     CALL s_transaction_end("N","0")
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend =  g_ookb_m.ookb002 
                     LET g_errparam.code   =  "std-00006" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                  END IF 
 
               #修改段落
               WHEN p_cmd = "u"  
                  #add-point:單頭修改前 name="input.head.b_update"
                  {<point name="input.head.b_update" mark="Y"/>}
                  #end add-point
                  UPDATE ookb_t SET (ookb001,ookb002,ookb003,ookb004,ookb005,ookbownid,ookbowndp,ookbcrtid, 
                      ookbcrtdp,ookbcrtdt,ookbmodid,ookbmoddt) = (g_ookb_m.ookb001,g_ookb_m.ookb002, 
                      g_ookb_m.ookb003,g_ookb_m.ookb004,g_ookb_m.ookb005,g_ookb_m.ookbownid,g_ookb_m.ookbowndp, 
                      g_ookb_m.ookbcrtid,g_ookb_m.ookbcrtdp,g_ookb_m.ookbcrtdt,g_ookb_m.ookbmodid,g_ookb_m.ookbmoddt) 

                   WHERE ookbent = g_enterprise AND ookb001 = g_ookb001_t #
                     AND ookb002 = g_ookb002_t
 
                  #add-point:單頭修改中 name="input.head.m_update"
                  {<point name="input.head.m_update"/>}
                  #end add-point
                  CASE
                     WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                        CALL s_transaction_end('N','0')
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "ookb_t" 
                        LET g_errparam.code   = "std-00009" 
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err()
                        
                     WHEN SQLCA.sqlcode #其他錯誤
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "ookb_t:",SQLERRMESSAGE 
                        LET g_errparam.code   = SQLCA.sqlcode 
                        LET g_errparam.popup  = TRUE 
                        CALL s_transaction_end('N','0')
                        CALL cl_err()
                        
                     OTHERWISE
                        #add-point:單頭修改後 name="input.head.a_update"
                        {<point name="input.head.a_update"/>}
                        #end add-point
    
                        #資料多語言用-增/改
                                 INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_ookb_m.ookb002 = g_master_multi_table_t.ookbl001 AND
         g_ookb_m.ookbl003 = g_master_multi_table_t.ookbl003  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'ookblent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_ookb_m.ookb002
            LET l_field_keys[02] = 'ookbl001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.ookbl001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'ookbl002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_ookb_m.ookbl003
            LET l_fields[01] = 'ookbl003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'ookbl_t')
         END IF 
 
                        LET g_log1 = util.JSON.stringify(g_ookb_m_t)
                        LET g_log2 = util.JSON.stringify(g_ookb_m)
                        IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                           CALL s_transaction_end('N','0')
                        ELSE
                           CALL s_transaction_end('Y','0')
                        END IF
                  END CASE
 
               OTHERWISE 
            END CASE
 
           #controlp
      END INPUT
      
      #add-point:input段more input  name="input.more_input"
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()    
         #add-point:before dialog name="input.before_dialog"
         {<point name="input.before_dialog"/>}
         #end add-point
          
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name, g_fld_name, g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      #在dialog button (放棄)
      ON ACTION cancel
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #在dialog 右上角 (X)
      ON ACTION close       
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #toolbar 離開
      ON ACTION exit
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
           
   END DIALOG
   
   #add-point:input段after input  name="input.after_input"
   {<point name="input.after_input"/>}
   #end add-point
    
END FUNCTION

{</section>}

{<section id="aooi921.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aooi921_show()
   #add-point:show段define name="show.define_customerization"
   {<point name="show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   {<point name="show.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="show.before"
   {<point name="show.before"/>}
   #end add-point
   
       
   
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
 
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL aooi921_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   #讀入ref值(單頭)
   #add-point:reference段之後 name="show.head.reference"
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_ookb_m.ookb001,g_ookb_m.ookb001_desc,g_ookb_m.ookb002,g_ookb_m.ookbl003,g_ookb_m.ookb003, 
       g_ookb_m.ookb004,g_ookb_m.ookb005,g_ookb_m.ookbownid,g_ookb_m.ookbownid_desc,g_ookb_m.ookbowndp, 
       g_ookb_m.ookbowndp_desc,g_ookb_m.ookbcrtid,g_ookb_m.ookbcrtid_desc,g_ookb_m.ookbcrtdp,g_ookb_m.ookbcrtdp_desc, 
       g_ookb_m.ookbcrtdt,g_ookb_m.ookbmodid,g_ookb_m.ookbmodid_desc,g_ookb_m.ookbmoddt
 
   #顯示狀態(stus)圖片
   
 
   #顯示有特殊格式設定的欄位或說明
   CALL cl_show_fld_cont()   
 
   #add-point:show段之後 name="show.after"
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="aooi921.delete" >}
#+ 資料刪除
PRIVATE FUNCTION aooi921_delete(l_dialog)
   #add-point:delete段define name="delete.define_customerization"
   {<point name="delete.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_dialog        ui.DIALOG
   DEFINE li_status       LIKE type_t.num5  #SQL實體資料刪除狀態
   DEFINE li_cnt          LIKE type_t.num10 #查看本階是否有兄弟資料
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   {<point name="delete.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="delete.pre_function"
   {<point name="delete.pre_function"/>}
   #end add-point
   
   IF g_ookb_m.ookb001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:delete段before_delete name="delete.before_delete"
   {<point name="delete.before_delete"/>}
   #end add-point
 
   EXECUTE aooi921_master_referesh USING g_ookb_m.ookb001,g_ookb_m.ookb002 INTO g_ookb_m.ookb001,g_ookb_m.ookb002, 
       g_ookb_m.ookb003,g_ookb_m.ookb004,g_ookb_m.ookb005,g_ookb_m.ookbownid,g_ookb_m.ookbowndp,g_ookb_m.ookbcrtid, 
       g_ookb_m.ookbcrtdp,g_ookb_m.ookbcrtdt,g_ookb_m.ookbmodid,g_ookb_m.ookbmoddt,g_ookb_m.ookb001_desc, 
       g_ookb_m.ookbownid_desc,g_ookb_m.ookbowndp_desc,g_ookb_m.ookbcrtid_desc,g_ookb_m.ookbcrtdp_desc, 
       g_ookb_m.ookbmodid_desc
    
   #檢查是否允許此動作
   IF NOT aooi921_action_chk() THEN
      RETURN
   END IF
    
   CALL aooi921_show()
   
   #Transaction開始
   CALL s_transaction_begin()
   
   LET g_master_multi_table_t.ookbl001 = g_ookb_m.ookb002
LET g_master_multi_table_t.ookbl003 = g_ookb_m.ookbl003
 
 
   OPEN aooi921_cl USING g_enterprise,g_ookb_m.ookb001,g_ookb_m.ookb002
   IF STATUS THEN
      CLOSE aooi921_cl
      CALL s_transaction_end("N","0")
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aooi921_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH aooi921_cl INTO g_ookb_m.ookb001,g_ookb_m.ookb001_desc,g_ookb_m.ookb002,g_ookb_m.ookbl003,g_ookb_m.ookb003, 
       g_ookb_m.ookb004,g_ookb_m.ookb005,g_ookb_m.ookbownid,g_ookb_m.ookbownid_desc,g_ookb_m.ookbowndp, 
       g_ookb_m.ookbowndp_desc,g_ookb_m.ookbcrtid,g_ookb_m.ookbcrtid_desc,g_ookb_m.ookbcrtdp,g_ookb_m.ookbcrtdp_desc, 
       g_ookb_m.ookbcrtdt,g_ookb_m.ookbmodid,g_ookb_m.ookbmodid_desc,g_ookb_m.ookbmoddt
   IF SQLCA.sqlcode THEN
      CALL s_transaction_end("N","0")
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_ookb_m.ookb002,":",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   #add-point:delete段before_delete name="delete.before_delete_ask"
   {<point name="delete.before_delete_ask"/>}
   #end add-point
 
   #先判斷是否有子節點(hasC) 詢問是否砍除全部
   IF g_browser[g_current_idx].b_hasC THEN
      IF cl_ask_delete_all_node() THEN
         LET li_status = aooi921_sql_delete(TRUE)
      ELSE
         LET li_status = FALSE
      END IF
   ELSE
      #如果沒有子節點,詢問是否刪除本筆資料
      IF cl_ask_delete() THEN
         LET li_status = aooi921_sql_delete(FALSE)
      ELSE
         LET li_status = FALSE
      END IF
   END IF
 
   #檢查實體砍除是否發生意外中止
   IF NOT li_status THEN
      CALL s_transaction_end("N","0")
      CLOSE aooi921_cl
      RETURN
   END IF
 
   #刪除節點與資料內容
   CALL l_dialog.deleteNode("s_browse",g_current_idx)  #deleteNode會順便幫忙做deleteElement
 
   #確認這一階還有沒有兄弟 (有:不異動上階屬性/否:上階hasC及exp設定成0)
   #SELECT COUNT(1) INTO li_cnt
   #  FROM ookb_t
   # WHERE ookb001 = g_ookb_m.ookb001
   #IF g_current_idx > 1 THEN
   #   IF li_cnt = 0  THEN
   #      LET g_browser[g_current_idx - 1].b_hasC = 0
   #      LET g_browser[g_current_idx - 1].b_exp = 0
   #   END IF
   #END IF
 
   #add-point:單頭刪除後 name="delete.head.a_delete"
   {<point name="delete.head.a_delete"/>}
   #end add-point
   
   IF g_current_idx > 1 THEN
      LET g_current_idx = g_current_idx - 1
   END IF
   
   IF g_browser.getLength() > 0 THEN
      CALL aooi921_fetch("")
   END IF
 
   IF NOT cl_log_modified_record('','') THEN 
      CLOSE aooi921_cl
      CALL s_transaction_end('N','0')
   ELSE
      CLOSE aooi921_cl
      CALL s_transaction_end('Y','0')
   END IF
 
   #功能已完成,通報訊息中心
   CALL aooi921_msgcentre_notify('delete')
    
END FUNCTION

{</section>}

{<section id="aooi921.sql_delete" >}
#+ 實體刪除FUNCTION 
PRIVATE FUNCTION aooi921_sql_delete(li_node)
   #add-point:sql_delete段define name="sql_delet.define_customerization"
   {<point name="sql_delet.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_node         LIKE type_t.num5  #TRUE:砍除Node Tree/FALSE:砍除Single Node
   DEFINE li_return       LIKE type_t.num5
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE ls_sql          STRING
   #add-point:sql_delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sql_delet.define"
   {<point name="sql_delet.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="sql_delet.pre_function"
   {<point name="sql_delet.pre_function"/>}
   #end add-point
   
   LET li_return = TRUE
 
   #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL aooi921_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
 
 
   #add-point:單頭刪除前 name="delete.head.b_delete"
   {<point name="delete.head.b_delete" mark="Y"/>}
   #end add-point
   
   IF li_node = TRUE THEN
      #砍除該節點以下所有節點
      LET ls_sql = " SELECT ookb002,ookb001 FROM ",
                   " (SELECT ookb002,ookb001 FROM ookb_t WHERE ookbent = " ||g_enterprise|| " AND ookb002<>ookb001)", 

                   " START WITH ookb001='",g_ookb_m.ookb001,"'",
                   " CONNECT BY PRIOR ookb002 = ookb001"
 
   ELSE 
   
   END IF
 
   DELETE FROM ookb_t
    WHERE ookbent = g_enterprise AND ookb001 = g_ookb_m.ookb001
      AND ookb002 = g_ookb_m.ookb002
 
 
   #add-point:單頭刪除中 name="delete.head.m_delete"
   {<point name="delete.head.m_delete"/>}
   #end add-point
 
   IF SQLCA.sqlcode THEN
      CALL s_transaction_end("N","0")
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "ookb_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   END IF
 
   INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_enterprise
   LET l_field_keys[01] = 'ookblent'
   LET l_var_keys_bak[02] = g_master_multi_table_t.ookbl001
   LET l_field_keys[02] = 'ookbl001'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'ookbl_t')
 
 
   RETURN li_return
 
END FUNCTION

{</section>}

{<section id="aooi921.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION aooi921_set_entry(p_cmd)
   #add-point:set_entry段define name="set_entry.define_customerization"
   {<point name="set_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1 
   #add-point:set_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   {<point name="set_entry.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   {<point name="set_entry.pre_function"/>}
   #end add-point
   
   IF p_cmd = "a" THEN
      CALL cl_set_comp_entry("ookb001,ookb002",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   {<point name="set_entry.after_control"/>}
   #end add-point 
   
END FUNCTION

{</section>}

{<section id="aooi921.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION aooi921_set_no_entry(p_cmd)
   #add-point:set_no_entry段define name="set_no_entry.define_customerization"
   {<point name="set_no_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1
   #add-point:set_no_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   {<point name="set_no_entry.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   {<point name="set_no_entry.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("ookb001,ookb002",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   {<point name="set_no_entry.after_control"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="aooi921.default_search" >}
#+ 外部參數預設搜尋
PRIVATE FUNCTION aooi921_default_search()
   #add-point:default_search段define name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point  
   
   IF g_searchtype = 0 OR cl_null(g_searchtype) THEN
      LET g_searchtype = 3
   END IF 
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " ookb001 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " ookb002 = '", g_argv[02], "' AND "
   END IF
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc = ls_wc
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #CALL aooi921_browser_fill(g_wc,g_searchtype)
 
   #add-point:default_search段結束前 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="aooi921.state_change" >}
   

{</section>}

{<section id="aooi921.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION aooi921_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   {<point name="set_pk_array.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_ookb_m.ookb001
   LET g_pk_array[1].column = 'ookb001'
   LET g_pk_array[2].values = g_ookb_m.ookb002
   LET g_pk_array[2].column = 'ookb002'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
 

{</section>}

{<section id="aooi921.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION aooi921_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   {<point name="msgcentre_notify.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   {<point name="msgcentre_notify.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   {<point name="msgcentre_notify.pre_function"/>}
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL aooi921_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_ookb_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 

{</section>}

{<section id="aooi921.action_chk" >}
PRIVATE FUNCTION aooi921_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   {<point name="action_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:action_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   {<point name="action_chk.define"/>}
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="aooi921.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

