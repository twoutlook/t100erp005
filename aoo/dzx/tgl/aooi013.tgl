#+ Version..: T6-ERP-1.00.00 Build-000110
#+ 
#+ Filename...: aooi013
#+ Buildtype..: 應用 i07 樣板自動產生
#+ Memo.......:


{<point name="global.memo" />}
 
IMPORT os
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
{<Module define>}
 
#單頭 type 宣告
PRIVATE type type_g_ooci_m        RECORD
       ooci001 LIKE ooci_t.ooci001, 
   ooci001_desc LIKE type_t.chr500
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_ooci_d        RECORD
       oocistus LIKE ooci_t.oocistus, 
   ooci002 LIKE ooci_t.ooci002, 
   oocil004 LIKE oocil_t.oocil004, 
   oocil005 LIKE oocil_t.oocil005, 
   oocimodu LIKE ooci_t.oocimodu, 
   modu_desc LIKE type_t.chr80, 
   oocidate DATETIME YEAR TO SECOND, 
   oocioriu LIKE ooci_t.oocioriu, 
   oriu_desc LIKE type_t.chr80, 
   oociorid LIKE ooci_t.oociorid, 
   orid_desc LIKE type_t.chr80, 
   oociuser LIKE ooci_t.oociuser, 
   user_desc LIKE type_t.chr80, 
   oocidept LIKE ooci_t.oocidept, 
   dept_desc LIKE type_t.chr80, 
   oocibuid DATETIME YEAR TO SECOND
       END RECORD

 
#無單頭append欄位定義
DEFINE g_detail_multi_table_t    RECORD
      oocil001 LIKE oocil_t.oocil001,
      oocil002 LIKE oocil_t.oocil002,
      oocil003 LIKE oocil_t.oocil003,
      oocil004 LIKE oocil_t.oocil004,
      oocil005 LIKE oocil_t.oocil005
      END RECORD
 
#模組變數(Module Variables)
DEFINE g_ooci_m          type_g_ooci_m
DEFINE g_ooci_m_t        type_g_ooci_m
 
DEFINE g_ooci001_t     LIKE ooci_t.ooci001

 
DEFINE g_ooci_d          DYNAMIC ARRAY OF type_g_ooci_d
DEFINE g_ooci_d_t        type_g_ooci_d

 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
          b_ooci001 LIKE ooci_t.ooci001,
   b_ooci001_desc LIKE type_t.chr80,
       rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_before_input_done   LIKE type_t.num5 
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
 
{</Module define>}
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#+ 作業開始
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point    
    
   #定義在其他link的程式則無效
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aoo","")
   
   #add-point:作業初始化
   {<point name="main.init"/>}
   #end add-point
 
   #LOCK CURSOR
   LET g_forupd_sql = "SELECT ooci001,'' FROM ooci_t WHERE oocient= ? AND ooci001=? FOR UPDATE"
   LET g_forupd_sql = cl_forupd_sql(g_forupd_sql)
   DECLARE aooi013_cl CURSOR FROM g_forupd_sql   #cursor lock 
   
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aooi013 WITH FORM cl_ap_formpath("aoo",g_prog)
 
      #程式初始化
      CALL aooi013_init()
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #進入選單 Menu (='N')
      CALL aooi013_ui_dialog() 
 
      #畫面關閉
      CLOSE WINDOW w_aooi013
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
    
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aooi013_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aooi013_default_search()
    
END FUNCTION
 
 
#+ 功能選單
PRIVATE FUNCTION aooi013_ui_dialog()
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point  
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   WHILE TRUE
   
      CALL aooi013_browser_fill("dialog")
      
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
         INPUT g_searchstr,g_searchcol FROM formonly.searchstr,formonly.cbo_searchcol
      
            BEFORE INPUT
            
         END INPUT
      
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
         
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
               
               IF g_current_idx > g_browser.getLength() THEN
                  LEt g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aooi013_fetch('') # reload data
               CALL cl_ui_set_browse_page_button(g_curr_diag,g_page_action,g_pagestart,g_browser_cnt)
               LET g_detail_idx = 1
               CALL aooi013_ui_detailshow() #Setting the current row 
         END DISPLAY
        
         DISPLAY ARRAY g_ooci_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL aooi013_ui_detailshow()
               IF g_ooci_d[l_ac].oocistus = "Y" THEN
                  CALL cl_set_act_visible("void", TRUE)
                  CALL cl_set_act_visible("valid", FALSE)
               ELSE
                  CALL cl_set_act_visible("valid", TRUE)
                  CALL cl_set_act_visible("void", FALSE)
               END IF
               
            
               
            # 全選修改狀態
            ON ACTION valid
               CALL aooi013_statechange("Y")
               LET g_action_choice = "valid"
               EXIT DIALOG
               
            ON ACTION void
               CALL aooi013_statechange("N")
               LET g_action_choice = "void"
               EXIT DIALOG
               
         END DISPLAY
        

      
         #add-point:ui_dialog段define
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aooi013_fetch('') # reload data
            END IF
            CALL cl_ui_set_browse_page_button(g_curr_diag,g_page_action,g_pagestart,g_browser_cnt)
            LET g_detail_idx = 1
            CALL aooi013_ui_detailshow() #Setting the current row 
            
            #若無資料則關閉相關功能
            IF g_browser_cnt = 0 THEN
               CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
            ELSE
               CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
            END IF
      
         #Browser用Action
      
         #一般搜尋
         ON ACTION searchdata
            #取得搜尋關鍵字
            INITIALIZE g_wc TO NULL
            INITIALIZE g_wc2 TO NULL
            LET g_searchstr = GET_FLDBUF(searchstr)
            IF NOT aooi013_browser_search("normal") THEN
               CONTINUE DIALOG
            END IF
            LET g_current_idx = 1
            IF g_browser_cnt = 0 THEN
               CALL aooi013_fetch('')
            END IF
            LET g_action_choice = "searchdata"
            EXIT DIALOG
          
         #進階搜尋
         ON ACTION advancesearch    
         
         #升冪排序
         ON ACTION ASCENDING
            INITIALIZE g_wc TO NULL
            INITIALIZE g_wc2 TO NULL
            LET g_order = "ASC"
            LET g_current_idx = 1
            LET g_searchstr = GET_FLDBUF(searchstr)
            
            IF NOT aooi013_browser_search("normal") THEN
               CONTINUE DIALOG
            END IF
            LET g_action_choice = "ASCENDING"
            EXIT DIALOG
       
         #降冪排序
         ON ACTION DESCENDING
            INITIALIZE g_wc TO NULL
            INITIALIZE g_wc2 TO NULL
            LET g_order = "DESC"
            LET g_current_idx = 1
            LET g_searchstr = GET_FLDBUF(searchstr)
            
            IF NOT aooi013_browser_search("normal") THEN
               CONTINUE DIALOG
            END IF
            LET g_action_choice = "descending"
            EXIT DIALOG
          
         #ACTION表單列
         ON ACTION first
            CALL aooi013_fetch('F')
            LET g_current_row = g_current_idx         
          
         ON ACTION previous
            CALL aooi013_fetch('P')
            LET g_current_row = g_current_idx
          
         ON ACTION jump
            CALL aooi013_fetch('/')
            LET g_current_row = g_current_idx
        
         ON ACTION next
            CALL aooi013_fetch('N')
            LET g_current_row = g_current_idx
         
         ON ACTION last
            CALL aooi013_fetch('L')
            LET g_current_row = g_current_idx
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT WHILE     
          
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT WHILE
          
         ON ACTION bw_first               #page first 
            LET g_action_choice = "bw_first"   
			CALL aooi013_browser_fill("first") 
			CALL cl_ui_set_browse_page_button(g_curr_diag,g_page_action,g_pagestart,g_browser_cnt) 
      
         ON ACTION bw_prev                #page previous
            LET g_action_choice = "bw_prev"     
            CALL aooi013_browser_fill("prev") 
			CALL cl_ui_set_browse_page_button(g_curr_diag,g_page_action,g_pagestart,g_browser_cnt) 
      
         ON ACTION bw_next                #page next
            LET g_action_choice = "bw_next"     
            CALL aooi013_browser_fill("next") 
			CALL cl_ui_set_browse_page_button(g_curr_diag,g_page_action,g_pagestart,g_browser_cnt) 
          
         ON ACTION bw_last                #page last 
            LET g_action_choice = "bw_last"     
            CALL aooi013_browser_fill("last") 
			CALL cl_ui_set_browse_page_button(g_curr_diag,g_page_action,g_pagestart,g_browser_cnt) 
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementImage("mainhidden","small/arr-r.png")
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementImage("mainhidden","small/arr-l.png")
               LET g_main_hidden = 1
            END IF
      
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_worksheet_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet",0)
               CALL gfrm_curr.setElementImage("worksheethidden","small/arr-l.png")
               LET g_worksheet_hidden = 0
               NEXT FIELD b_ooci001
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet",1)
               CALL gfrm_curr.setElementImage("worksheethidden","small/arr-r.png")
               LET g_worksheet_hidden = 1
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet_detail",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet_detail",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         


         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_chk_act_auth() THEN 
               CALL aooi013_delete()
            #add-point:ON ACTION delete
            {<point name="menu.delete" />}
            #END add-point

                EXIT DIALOG
            END IF



         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_chk_act_auth() THEN 
               CALL aooi013_insert()
            #add-point:ON ACTION insert
            {<point name="menu.insert" />}
            #END add-point

                EXIT DIALOG
            END IF



         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_chk_act_auth() THEN 
               CALL aooi013_modify()
            #add-point:ON ACTION modify
            {<point name="menu.modify" />}
            #END add-point

                EXIT DIALOG
            END IF



         ON ACTION query
            LET g_action_choice="query"
            IF cl_chk_act_auth() THEN 
               CALL aooi013_query()
            #add-point:ON ACTION query
            {<point name="menu.query" />}
            #END add-point

                EXIT DIALOG
            END IF



         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_chk_act_auth() THEN 
               CALL aooi013_reproduce()
            #add-point:ON ACTION reproduce
            {<point name="menu.reproduce" />}
            #END add-point

                EXIT DIALOG
            END IF

         
         #主選單用ACTION
         &include "main_menu.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
	  
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
 
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aooi013_browser_search(p_type)
   {<Local define>}
   DEFINE p_type LIKE type_t.chr10
   {</Local define>}
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY ooci001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aooi013_browser_fill("first")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
 
 
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aooi013_browser_fill(ps_page_action)
   {<Local define>}
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   {</Local define>}
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "ooci001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   IF g_wc2 <> " 1=1" OR NOT cl_null(g_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE ooci001 ",

                      " FROM ooci_t ",
                      " WHERE ",l_wc, " AND ", l_wc2 
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE ooci001 ",

                      " FROM ooci_t WHERE ",l_wc CLIPPED
 
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
 
   #LET g_page_action = ps_page_action          # Keep Action
   IF ps_page_action = "first" OR              
      ps_page_action = "prev"  OR
      ps_page_action = "next"  OR
      ps_page_action = "last"  THEN
      LET g_page_action = ps_page_action        #g_page_action 這個會影響 browser 下面四個button 的判斷 
   END IF
   
   CASE ps_page_action
      WHEN "first" 
         LET g_pagestart = 1
          
      WHEN "prev"  
         LET g_pagestart = g_pagestart - 25
         IF g_pagestart < 1 THEN
             LET g_pagestart = 1
         END IF
          
      WHEN "next"  
         LET g_pagestart = g_pagestart + 25
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod 25) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - 25
            END WHILE
         END IF
      
      WHEN "last"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod 25) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - 25
         END WHILE
         
      WHEN "dialog"
      
      OTHERWISE
         LET g_pagestart = 1
         
   END CASE
   
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
 
      #依照ooci001,'' Browser欄位定義(取代原本bs_sql功能)
      LET l_sub_sql  = "SELECT DISTINCT ooci001,'' ",
                       " FROM ooci_t ",
                       " ",
                       " WHERE oocient = '" ||g_enterprise|| "' AND ", g_wc," AND ",g_wc2
 
   ELSE
      #單身無輸入資料
      LET l_sub_sql  = "SELECT DISTINCT ooci001,'' ",
                       " FROM ooci_t ",
                       " WHERE oocient = '" ||g_enterprise|| "' AND ", g_wc
                 
   END IF
   
   LET l_sql_rank = "SELECT ooci001,'',DENSE_RANK() OVER(ORDER BY ooci001 ",g_order,") AS RANK ",
                    " FROM (",l_sub_sql,") "
                       
   #定義翻頁CURSOR
   LET g_sql= " SELECT ooci001,'',RANK FROM (",l_sql_rank,") WHERE RANK>=",g_pagestart,
              " AND RANK<",g_pagestart+25,
              " ORDER BY ",l_searchcol," ",g_order
                
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_ooci001,g_browser[g_cnt].b_ooci001_desc    
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_ooci001
      CALL ap_ref_array2(g_ref_fields,"SELECT oocgl003 FROM oocgl_t WHERE oocgl001=? AND oocgl002='"||g_lang||"'","") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_ooci001_desc = g_rtn_fields[1]
      DISPLAY BY NAME g_browser[g_cnt].b_ooci001_desc

      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point    
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err( '', 9035, 0 )
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   CALL aooi013_fetch('')
   
END FUNCTION
 
 
#+ 單頭資料重新顯示
PRIVATE FUNCTION aooi013_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_ooci_m.ooci001 = g_browser[g_current_idx].b_ooci001   

    SELECT UNIQUE ooci001
 INTO g_ooci_m.ooci001
 FROM ooci_t
 WHERE oocient = g_enterprise AND ooci001 = g_ooci_m.ooci001
   CALL aooi013_show()
   
END FUNCTION
 
 
#+ 單身資料重新顯示
PRIVATE FUNCTION aooi013_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      

   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point 
   
END FUNCTION
 
 
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aooi013_ui_browser_refresh()
   {<Local define>}
   DEFINE l_i  LIKE type_t.num10
   {</Local define>}
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_ooci001 = g_ooci_m.ooci001 

         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
 
 
#+ QBE資料查詢
PRIVATE FUNCTION aooi013_construct()
 
   {<Local define>}
   DEFINE lc_qbe_sn   LIKE type_t.num10
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   {</Local define>}
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_ooci_m.* TO NULL
   CALL g_ooci_d.clear()

   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON ooci001
 
         BEFORE CONSTRUCT
            CALL cl_qbe_init()
         
        #---------------------------<  Master  >---------------------------
         #----<<ooci001>>----
         #Ctrlp:construct.c.ooci001
         ON ACTION controlp INFIELD ooci001
            #add-point:ON ACTION controlp INFIELD ooci001
            {<point name="construct.c.ooci001" />}
            #END add-point


         
      END CONSTRUCT
 
      #單身可以混搭多頁簽
      CONSTRUCT g_wc2 ON oocistus,ooci002,oocil004,oocil005,oocimodu,oocidate,oocioriu,oociorid,oociuser,oocidept,oocibuid

         FROM s_detail1[1].oocistus,s_detail1[1].ooci002,s_detail1[1].oocil004,s_detail1[1].oocil005,s_detail1[1].oocimodu,s_detail1[1].oocidate,s_detail1[1].oocioriu,s_detail1[1].oociorid,s_detail1[1].oociuser,s_detail1[1].oocidept,s_detail1[1].oocibuid

                      
         BEFORE CONSTRUCT
            CALL cl_qbe_display_condition(lc_qbe_sn)
         
         #----<<oocimodu>>----
         ON ACTION controlp INFIELD oocimodu
            CALL q_common('ooci_t','oocimodu',TRUE,FALSE,g_ooci_d[l_ac].oocimodu) RETURNING ls_return
            DISPLAY ls_return TO oocimodu
            NEXT FIELD oocimodu
         
         #----<<oocioriu>>----
         ON ACTION controlp INFIELD oocioriu
            CALL q_common('ooci_t','oocioriu',TRUE,FALSE,g_ooci_d[l_ac].oocioriu) RETURNING ls_return
            DISPLAY ls_return TO oocioriu
            NEXT FIELD oocioriu
         
         #----<<oociuser>>----
         ON ACTION controlp INFIELD oociuser
            CALL q_common('ooci_t','oociuser',TRUE,FALSE,g_ooci_d[l_ac].oociuser) RETURNING ls_return
            DISPLAY ls_return TO oociuser
            NEXT FIELD oociuser
         
         #----<<oociorid>>----
         ON ACTION controlp INFIELD oociorid
            CALL q_common('ooci_t','oociorid',TRUE,FALSE,g_ooci_d[l_ac].oociorid) RETURNING ls_return
            DISPLAY ls_return TO oociorid
            NEXT FIELD oociorid
         
         #----<<oocidept>>----
         ON ACTION controlp INFIELD oocidept
            CALL q_common('ooci_t','oocidept',TRUE,FALSE,g_ooci_d[l_ac].oocidept) RETURNING ls_return
            DISPLAY ls_return TO oocidept
            NEXT FIELD oocidept
 
         #----<<oocibuid>>----
         AFTER FIELD oocibuid
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<oocidate>>----
         AFTER FIELD oocidate
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
          
            #---------------------<  Detail: page1  >---------------------
         #----<<oocistus>>----
         #Ctrlp:construct.c.oocistus
         ON ACTION controlp INFIELD oocistus
            #add-point:ON ACTION controlp INFIELD oocistus
            {<point name="construct.c.page1.oocistus" />}
            #END add-point

         #----<<ooci002>>----
         #Ctrlp:construct.c.page1.ooci002
         ON ACTION controlp INFIELD ooci002
            #add-point:ON ACTION controlp INFIELD ooci002
            {<point name="construct.c.page1.ooci002" />}
            #END add-point

         #----<<oocil004>>----
         #Ctrlp:construct.c.oocil004
         ON ACTION controlp INFIELD oocil004
            #add-point:ON ACTION controlp INFIELD oocil004
            {<point name="construct.c.page1.oocil004" />}
            #END add-point

         #----<<oocil005>>----
         #Ctrlp:construct.c.oocil005
         ON ACTION controlp INFIELD oocil005
            #add-point:ON ACTION controlp INFIELD oocil005
            {<point name="construct.c.page1.oocil005" />}
            #END add-point

         #----<<oocimodu>>----
         #----<<modu_desc>>----
         #----<<oocidate>>----
         #----<<oocioriu>>----
         #----<<oriu_desc>>----
         #----<<oociorid>>----
         #----<<orid_desc>>----
         #----<<oociuser>>----
         #----<<user_desc>>----
         #----<<oocidept>>----
         #----<<dept_desc>>----
         #----<<oocibuid>>----
   

          
      END CONSTRUCT
  
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:ui_dialog段b_dialog
         {<point name="cs.before_dialog"/>}
         #end add-point
      
      ON ACTION qbe_select     #條件查詢
         CALL cl_qbe_list() RETURNING lc_qbe_sn
         CALL cl_qbe_display_condition(lc_qbe_sn)
 
      ON ACTION qbe_save       #條件儲存
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
 
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aooi013_query()
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point    
 
   LET INT_FLAG = 0    
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_ooci_d.clear()

   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   
   CALL aooi013_construct()
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      INITIALIZE g_ooci_m.* TO NULL
      LET g_wc = " 1=1"
      LET g_wc2 = " 1=1"
      RETURN
   END IF
 
   CALL aooi013_browser_fill("first")
   IF g_browser_cnt = 0 THEN
      CALL aooi013_fetch('')
   END IF
   
END FUNCTION
 
 
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aooi013_fetch(p_flag)
   {<Local define>}
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   {</Local define>}
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
 
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   DISPLAY g_browser_cnt TO FORMONLY.b_count                #總筆數
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_ooci_m.ooci001 = g_browser[g_current_idx].b_ooci001

   
   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE ooci001
 INTO g_ooci_m.ooci001
 FROM ooci_t
 WHERE oocient = g_enterprise AND ooci001 = g_ooci_m.ooci001
   IF SQLCA.sqlcode THEN
      CALL cl_err("ooci_t",SQLCA.sqlcode,1)
      INITIALIZE g_ooci_m.* TO NULL
       RETURN
   END IF
   
   #LET g_data_owner = g_ooci_d[l_ac].oociuser      
   #LET g_data_group = g_ooci_d[l_ac].oocidept  
   
   #重新顯示   
   CALL aooi013_show()
 
END FUNCTION
 
 
#+ 資料新增
PRIVATE FUNCTION aooi013_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_ooci_d.clear()

 
   INITIALIZE g_ooci_m.* LIKE ooci_t.*             #DEFAULT 設定
   LET g_ooci001_t = NULL

 
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL aooi013_input("a")
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_ooci_m.* = g_ooci_m_t.*
         CALL aooi013_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      CALL g_ooci_d.clear()

 
      LET g_rec_b = 0
      EXIT WHILE
   END WHILE
   
END FUNCTION
 
 
#+ 資料修改
PRIVATE FUNCTION aooi013_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_ooci_m.ooci001 IS NULL

   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
    SELECT UNIQUE ooci001
 INTO g_ooci_m.ooci001
 FROM ooci_t
 WHERE oocient = g_enterprise AND ooci001 = g_ooci_m.ooci001
 
   ERROR ""
  
   LET g_ooci001_t = g_ooci_m.ooci001

   BEGIN WORK
   
   OPEN aooi013_cl USING g_enterprise,g_ooci_m.ooci001

   IF STATUS THEN
      CALL cl_err("OPEN aooi013_cl:", STATUS, 1)
      CLOSE aooi013_cl
      ROLLBACK WORK
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH aooi013_cl INTO g_ooci_m.ooci001,g_ooci_m.ooci001_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_ooci_m.ooci001,SQLCA.sqlcode,0)
      CLOSE aooi013_cl
      ROLLBACK WORK
      RETURN
   END IF
 
   CALL aooi013_show()
   WHILE TRUE
      LET g_ooci001_t = g_ooci_m.ooci001

 
      CALL aooi013_input("u")     #欄位更改
 
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_ooci_m.* = g_ooci_m_t.*
         CALL aooi013_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_ooci_m.ooci001 != g_ooci001_t 

      THEN
         BEGIN WORK
         
         #add-point:單頭(偽)修改前
         {<point name="modify.b_key_update"/>}
         #end add-point
         
         #更新單頭key值
         UPDATE ooci_t SET ooci001 = g_ooci_m.ooci001

          WHERE oocient = g_enterprise AND ooci001 = g_ooci001_t

          IF SQLCA.sqlcode THEN
             CALL cl_err("ooci_t",SQLCA.sqlcode,1) 
             ROLLBACK WORK
             CONTINUE WHILE
         END IF
         
         #add-point:單頭(偽)修改後
         {<point name="modify.a_key_update"/>}
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_used_modified_record(g_ooci_m.ooci001,g_site) THEN 
      ROLLBACK WORK
   END IF
 
   CLOSE aooi013_cl
   COMMIT WORK
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_ooci_m.ooci001,'U')
 
   CALL aooi013_b_fill("1=1")
   
END FUNCTION   
 
 
#+ 資料輸入
PRIVATE FUNCTION aooi013_input(p_cmd)
   {<Local define>}
   DEFINE  p_cmd           LIKE type_t.chr1
   DEFINE  l_cmd           LIKE type_t.chr1
   DEFINE  l_ac_t          LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n             LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt           LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw       LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert  LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete  LIKE type_t.num5                #可刪除否  
   DEFINE  l_count         LIKE type_t.num5
   DEFINE  l_i             LIKE type_t.num5
   DEFINE  l_insert        BOOLEAN
   DEFINE  ls_return       STRING
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point    
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   LET g_forupd_sql = "SELECT oocistus,ooci002,'','',oocimodu,'',oocidate,oocioriu,'',oociorid,'',oociuser,'',oocidept,'',oocibuid FROM ooci_t WHERE oocient=? AND ooci001=? AND ooci002=? FOR UPDATE"
   LET g_forupd_sql = cl_forupd_sql(g_forupd_sql)
   DECLARE aooi013_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
   LET l_allow_insert = cl_detail_input_auth("insert")
   LET l_allow_delete = cl_detail_input_auth("delete")
   LET g_qryparam.state = 'i'
 
   DISPLAY BY NAME g_ooci_m.ooci001
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #單頭段
      INPUT BY NAME g_ooci_m.ooci001 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            LET g_before_input_done = FALSE
            CALL aooi013_set_entry(p_cmd)
            CALL aooi013_set_no_entry(p_cmd)
            LET g_before_input_done = TRUE
            
          
         #---------------------------<  Master  >---------------------------
         #----<<ooci001>>----
         AFTER FIELD ooci001
            #add-point:AFTER FIELD ooci001
            {<point name="input.a.ooci001" />}
            #END add-point

         BEFORE FIELD ooci001
            #add-point:BEFORE FIELD ooci001
            {<point name="input.b.ooci001" />}
            #END add-point

         ON CHANGE ooci001
            #add-point:ON CHANGE ooci001
            {<point name="input.g.ooci001" />}
            #END add-point

 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<ooci001>>----
         #Ctrlp:input.c.ooci001
         ON ACTION controlp INFIELD ooci001
            #add-point:ON ACTION controlp INFIELD ooci001
            {<point name="input.c.ooci001" />}
            #END add-point

 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            BEGIN WORK
 
            #多語言處理
            
                
            CALL cl_showmsg()
            DISPLAY BY NAME g_ooci_m.ooci001             

 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前
               {<point name="input.head.b_update"/>}
               #end add-point
            
               UPDATE ooci_t SET (ooci001) = (g_ooci_m.ooci001)
                WHERE oocient = g_enterprise AND ooci001 = g_ooci001_t

               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_ooci_m",SQLCA.sqlcode,1)  
                  ROLLBACK WORK
               ELSE
                  #資料多語言用-增/改
                  
                  LET g_ooci001_t = g_ooci_m.ooci001

                  COMMIT WORK
               END IF
            
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
           #controlp
 
      END INPUT
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_ooci_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
            ON ACTION update_item 


 
         BEFORE INPUT
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            LET g_before_input_done = FALSE  
            LET g_before_input_done = TRUE
         
         BEFORE ROW
            LET l_insert = FALSE
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_n TO FORMONLY.idx
         
            BEGIN WORK
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN aooi013_cl USING g_enterprise,
                                               g_ooci_m.ooci001

                                               
               IF STATUS THEN
                  CALL cl_err("OPEN aooi013_cl:", STATUS, 1)
                  CLOSE aooi013_cl
                  ROLLBACK WORK
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND NOT cl_null(g_ooci_d[l_ac].ooci002) 

            THEN
               LET l_cmd='u'
               LET g_ooci_d_t.* = g_ooci_d[l_ac].*  #BACKUP
               OPEN aooi013_bcl USING g_enterprise,g_ooci_m.ooci001,

                                                g_ooci_d_t.ooci002

               IF STATUS THEN
                  CALL cl_err("OPEN aooi013_bcl:", STATUS, 1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aooi013_bcl INTO g_ooci_d[l_ac].oocistus,g_ooci_d[l_ac].ooci002,g_ooci_d[l_ac].oocil004,g_ooci_d[l_ac].oocil005,g_ooci_d[l_ac].oocimodu,g_ooci_d[l_ac].modu_desc,g_ooci_d[l_ac].oocidate,g_ooci_d[l_ac].oocioriu,g_ooci_d[l_ac].oriu_desc,g_ooci_d[l_ac].oociorid,g_ooci_d[l_ac].orid_desc,g_ooci_d[l_ac].oociuser,g_ooci_d[l_ac].user_desc,g_ooci_d[l_ac].oocidept,g_ooci_d[l_ac].dept_desc,g_ooci_d[l_ac].oocibuid
                  IF SQLCA.sqlcode THEN
                      CALL cl_err(g_ooci_d_t.ooci002,SQLCA.sqlcode,1)
                      LET l_lock_sw = "Y"
                  END IF
                  CALL aooi013_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            LET g_detail_multi_table_t.oocil001 = g_ooci_m.ooci001
LET g_detail_multi_table_t.oocil002 = g_ooci_d[l_ac].ooci002
LET g_detail_multi_table_t.oocil003 = g_dlang
LET g_detail_multi_table_t.oocil004 = g_ooci_d[l_ac].oocil004
LET g_detail_multi_table_t.oocil005 = g_ooci_d[l_ac].oocil005

        
         BEFORE INSERT
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_ooci_d[l_ac].* TO NULL
            LET g_ooci_d[l_ac].oociuser = g_user
            LET g_ooci_d[l_ac].oocidept = g_dept
            LET g_ooci_d[l_ac].oocibuid = cl_get_current()
            LET g_ooci_d[l_ac].oocioriu = g_user 
            LET g_ooci_d[l_ac].oociorid = g_dept 
            LET g_ooci_d[l_ac].oocimodu = g_user
            LET g_ooci_d[l_ac].oocidate = cl_get_current()
            LET g_ooci_d[l_ac].oocistus = 'Y'
            

            
            LET g_ooci_d_t.* = g_ooci_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aooi013_set_entry_b()
            CALL aooi013_set_no_entry_b()
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM ooci_t 
             WHERE oocient = g_enterprise AND ooci001 = g_ooci_m.ooci001

               AND ooci002 = g_ooci_d[l_ac].ooci002

                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               
               BEGIN WORK
            
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               INSERT INTO ooci_t
                          (oocient,
                           ooci001,
                           oocistus,ooci002,oocimodu,oocidate,oocioriu,oociorid,oociuser,oocidept,oocibuid

                           ) 
                     VALUES(g_enterprise,
                           g_ooci_m.ooci001,
                           g_ooci_d[l_ac].oocistus,g_ooci_d[l_ac].ooci002,g_ooci_d[l_ac].oocimodu,g_ooci_d[l_ac].oocidate,g_ooci_d[l_ac].oocioriu,g_ooci_d[l_ac].oociorid,g_ooci_d[l_ac].oociuser,g_ooci_d[l_ac].oocidept,g_ooci_d[l_ac].oocibuid

                           )
               LET p_cmd = 'u'
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_ooci_d[l_ac].* TO NULL
               ROLLBACK WORK
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("ooci_t",SQLCA.sqlcode,1)  
               ROLLBACK WORK                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_ooci_m.ooci001 = g_detail_multi_table_t.oocil001 AND
         g_ooci_d[l_ac].ooci002 = g_detail_multi_table_t.oocil002 AND
         g_ooci_d[l_ac].oocil004 = g_detail_multi_table_t.oocil003 AND
         g_ooci_d[l_ac].oocil005 = g_detail_multi_table_t.oocil004 THEN
         ELSE 
            LET l_var_keys[01] = g_ooci_m.ooci001
            LET l_field_keys[01] = 'oocil001'
            LET l_var_keys[02] = g_ooci_d[l_ac].ooci002
            LET l_field_keys[02] = 'oocil002'
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'oocil003'
            LET l_vars[01] = g_ooci_d[l_ac].oocil004
            LET l_fields[01] = 'oocil004'
            LET l_vars[02] = g_ooci_d[l_ac].oocil005
            LET l_fields[02] = 'oocil005'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'oocilent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.oocil001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.oocil002
            LET l_var_keys_bak[03] = g_detail_multi_table_t.oocil003
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'oocil_t')
         END IF 

               COMMIT WORK
               ERROR "INSERT O.K"
               #add-point:input段-after_insert
               {<point name="input.body.a_insert"/>}
               #end add-point
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後
            {<point name="input.body.after_insert"/>}
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF NOT cl_null(g_ooci_d_t.ooci002) 

               THEN
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete"/>}
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               IF aooi013_before_delete() THEN 
                  COMMIT WORK
               ELSE 
                  ROLLBACK WORK
                  CANCEL DELETE   
               END IF 
               CLOSE aooi013_bcl
               LET l_count = g_ooci_d.getLength()
            END IF 
            
            #add-point:單身刪除後
            {<point name="input.body.a_delete"/>}
            #end add-point
              
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body.after_delete"/>}
            #end add-point
            CALL aooi013_delete_b(l_count) 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<oocistus>>----
         BEFORE FIELD oocistus
            #add-point:BEFORE FIELD oocistus
            {<point name="input.b.page1.oocistus" />}
            #END add-point

         AFTER FIELD oocistus
            #add-point:AFTER FIELD oocistus
            {<point name="input.a.page1.oocistus" />}
            #END add-point

         ON CHANGE oocistus
            #add-point:ON CHANGE oocistus
            {<point name="input.g.page1.oocistus" />}
            #END add-point

         #----<<ooci002>>----
         BEFORE FIELD ooci002
            #add-point:BEFORE FIELD ooci002
            {<point name="input.b.page1.ooci002" />}
            #END add-point

         AFTER FIELD ooci002
            #add-point:AFTER FIELD ooci002
            {<point name="input.a.page1.ooci002" />}
            #END add-point

         ON CHANGE ooci002
            #add-point:ON CHANGE ooci002
            {<point name="input.g.page1.ooci002" />}
            #END add-point

         #----<<oocil004>>----
         BEFORE FIELD oocil004
            #add-point:BEFORE FIELD oocil004
            {<point name="input.b.page1.oocil004" />}
            #END add-point

         AFTER FIELD oocil004
            #add-point:AFTER FIELD oocil004
            {<point name="input.a.page1.oocil004" />}
            #END add-point

         ON CHANGE oocil004
            #add-point:ON CHANGE oocil004
            {<point name="input.g.page1.oocil004" />}
            #END add-point

         #----<<oocil005>>----
         BEFORE FIELD oocil005
            #add-point:BEFORE FIELD oocil005
            {<point name="input.b.page1.oocil005" />}
            #END add-point

         AFTER FIELD oocil005
            #add-point:AFTER FIELD oocil005
            {<point name="input.a.page1.oocil005" />}
            #END add-point

         ON CHANGE oocil005
            #add-point:ON CHANGE oocil005
            {<point name="input.g.page1.oocil005" />}
            #END add-point

         #----<<oocimodu>>----
         BEFORE FIELD oocimodu
            #add-point:BEFORE FIELD oocimodu
            {<point name="input.b.page1.oocimodu" />}
            #END add-point

         AFTER FIELD oocimodu
            #add-point:AFTER FIELD oocimodu
            {<point name="input.a.page1.oocimodu" />}
            #END add-point

         ON CHANGE oocimodu
            #add-point:ON CHANGE oocimodu
            {<point name="input.g.page1.oocimodu" />}
            #END add-point

         #----<<modu_desc>>----
         #----<<oocidate>>----
         BEFORE FIELD oocidate
            #add-point:BEFORE FIELD oocidate
            {<point name="input.b.page1.oocidate" />}
            #END add-point

         AFTER FIELD oocidate
            #add-point:AFTER FIELD oocidate
            {<point name="input.a.page1.oocidate" />}
            #END add-point

         ON CHANGE oocidate
            #add-point:ON CHANGE oocidate
            {<point name="input.g.page1.oocidate" />}
            #END add-point

         #----<<oocioriu>>----
         BEFORE FIELD oocioriu
            #add-point:BEFORE FIELD oocioriu
            {<point name="input.b.page1.oocioriu" />}
            #END add-point

         AFTER FIELD oocioriu
            #add-point:AFTER FIELD oocioriu
            {<point name="input.a.page1.oocioriu" />}
            #END add-point

         ON CHANGE oocioriu
            #add-point:ON CHANGE oocioriu
            {<point name="input.g.page1.oocioriu" />}
            #END add-point

         #----<<oriu_desc>>----
         #----<<oociorid>>----
         BEFORE FIELD oociorid
            #add-point:BEFORE FIELD oociorid
            {<point name="input.b.page1.oociorid" />}
            #END add-point

         AFTER FIELD oociorid
            #add-point:AFTER FIELD oociorid
            {<point name="input.a.page1.oociorid" />}
            #END add-point

         ON CHANGE oociorid
            #add-point:ON CHANGE oociorid
            {<point name="input.g.page1.oociorid" />}
            #END add-point

         #----<<orid_desc>>----
         #----<<oociuser>>----
         BEFORE FIELD oociuser
            #add-point:BEFORE FIELD oociuser
            {<point name="input.b.page1.oociuser" />}
            #END add-point

         AFTER FIELD oociuser
            #add-point:AFTER FIELD oociuser
            {<point name="input.a.page1.oociuser" />}
            #END add-point

         ON CHANGE oociuser
            #add-point:ON CHANGE oociuser
            {<point name="input.g.page1.oociuser" />}
            #END add-point

         #----<<user_desc>>----
         #----<<oocidept>>----
         BEFORE FIELD oocidept
            #add-point:BEFORE FIELD oocidept
            {<point name="input.b.page1.oocidept" />}
            #END add-point

         AFTER FIELD oocidept
            #add-point:AFTER FIELD oocidept
            {<point name="input.a.page1.oocidept" />}
            #END add-point

         ON CHANGE oocidept
            #add-point:ON CHANGE oocidept
            {<point name="input.g.page1.oocidept" />}
            #END add-point

         #----<<dept_desc>>----
         #----<<oocibuid>>----
         BEFORE FIELD oocibuid
            #add-point:BEFORE FIELD oocibuid
            {<point name="input.b.page1.oocibuid" />}
            #END add-point

         AFTER FIELD oocibuid
            #add-point:AFTER FIELD oocibuid
            {<point name="input.a.page1.oocibuid" />}
            #END add-point

         ON CHANGE oocibuid
            #add-point:ON CHANGE oocibuid
            {<point name="input.g.page1.oocibuid" />}
            #END add-point


         #---------------------<  Detail: page1  >---------------------
         #----<<oocistus>>----
         #Ctrlp:input.c.oocistus
         ON ACTION controlp INFIELD oocistus
            #add-point:ON ACTION controlp INFIELD oocistus
            {<point name="input.c.page1.oocistus" />}
            #END add-point

         #----<<ooci002>>----
         #Ctrlp:input.c.ooci002
         ON ACTION controlp INFIELD ooci002
            #add-point:ON ACTION controlp INFIELD ooci002
            {<point name="input.c.page1.ooci002" />}
            #END add-point

         #----<<oocil004>>----
         #Ctrlp:input.c.oocil004
         ON ACTION controlp INFIELD oocil004
            #add-point:ON ACTION controlp INFIELD oocil004
            {<point name="input.c.page1.oocil004" />}
            #END add-point

         #----<<oocil005>>----
         #Ctrlp:input.c.oocil005
         ON ACTION controlp INFIELD oocil005
            #add-point:ON ACTION controlp INFIELD oocil005
            {<point name="input.c.page1.oocil005" />}
            #END add-point

         #----<<oocimodu>>----
         #Ctrlp:input.c.oocimodu
         ON ACTION controlp INFIELD oocimodu
            #add-point:ON ACTION controlp INFIELD oocimodu
            {<point name="input.c.page1.oocimodu" />}
            #END add-point

         #----<<modu_desc>>----
         #----<<oocidate>>----
         #Ctrlp:input.c.oocidate
         ON ACTION controlp INFIELD oocidate
            #add-point:ON ACTION controlp INFIELD oocidate
            {<point name="input.c.page1.oocidate" />}
            #END add-point

         #----<<oocioriu>>----
         #Ctrlp:input.c.oocioriu
         ON ACTION controlp INFIELD oocioriu
            #add-point:ON ACTION controlp INFIELD oocioriu
            {<point name="input.c.page1.oocioriu" />}
            #END add-point

         #----<<oriu_desc>>----
         #----<<oociorid>>----
         #Ctrlp:input.c.oociorid
         ON ACTION controlp INFIELD oociorid
            #add-point:ON ACTION controlp INFIELD oociorid
            {<point name="input.c.page1.oociorid" />}
            #END add-point

         #----<<orid_desc>>----
         #----<<oociuser>>----
         #Ctrlp:input.c.oociuser
         ON ACTION controlp INFIELD oociuser
            #add-point:ON ACTION controlp INFIELD oociuser
            {<point name="input.c.page1.oociuser" />}
            #END add-point

         #----<<user_desc>>----
         #----<<oocidept>>----
         #Ctrlp:input.c.oocidept
         ON ACTION controlp INFIELD oocidept
            #add-point:ON ACTION controlp INFIELD oocidept
            {<point name="input.c.page1.oocidept" />}
            #END add-point

         #----<<dept_desc>>----
         #----<<oocibuid>>----
         #Ctrlp:input.c.oocibuid
         ON ACTION controlp INFIELD oocibuid
            #add-point:ON ACTION controlp INFIELD oocibuid
            {<point name="input.c.page1.oocibuid" />}
            #END add-point


 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_ooci_d[l_ac].* = g_ooci_d_t.*
               CLOSE aooi013_bcl
               ROLLBACK WORK
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_ooci_d[l_ac].ooci002,-263,1)
               LET g_ooci_d[l_ac].* = g_ooci_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update"/>}
               #end add-point
            
               UPDATE ooci_t SET (oocistus,ooci002,oocimodu,oocidate,oocioriu,oociorid,oociuser,oocidept,oocibuid) = (g_ooci_d[l_ac].oocistus,g_ooci_d[l_ac].ooci002,g_ooci_d[l_ac].oocimodu,g_ooci_d[l_ac].oocidate,g_ooci_d[l_ac].oocioriu,g_ooci_d[l_ac].oociorid,g_ooci_d[l_ac].oociuser,g_ooci_d[l_ac].oocidept,g_ooci_d[l_ac].oocibuid)
                WHERE oocient = g_enterprise AND ooci001 = g_ooci_m.ooci001 

                 AND ooci002 = g_ooci_d_t.ooci002 #項次   

                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("ooci_t",SQLCA.sqlcode,1)   
                  LET g_ooci_d[l_ac].* = g_ooci_d_t.*
               ELSE
                  #資料多語言用-增/改
                           INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_ooci_m.ooci001 = g_detail_multi_table_t.oocil001 AND
         g_ooci_d[l_ac].ooci002 = g_detail_multi_table_t.oocil002 AND
         g_ooci_d[l_ac].oocil004 = g_detail_multi_table_t.oocil003 AND
         g_ooci_d[l_ac].oocil005 = g_detail_multi_table_t.oocil004 THEN
         ELSE 
            LET l_var_keys[01] = g_ooci_m.ooci001
            LET l_field_keys[01] = 'oocil001'
            LET l_var_keys[02] = g_ooci_d[l_ac].ooci002
            LET l_field_keys[02] = 'oocil002'
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'oocil003'
            LET l_vars[01] = g_ooci_d[l_ac].oocil004
            LET l_fields[01] = 'oocil004'
            LET l_vars[02] = g_ooci_d[l_ac].oocil005
            LET l_fields[02] = 'oocil005'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'oocilent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.oocil001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.oocil002
            LET l_var_keys_bak[03] = g_detail_multi_table_t.oocil003
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'oocil_t')
         END IF 

               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
            END IF
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point    
      END INPUT
 

   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET g_action_choice="exit"
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET g_action_choice="exit"
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
END FUNCTION
 
 
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aooi013_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
 
   LET g_ooci_m_t.* = g_ooci_m.*      #保存單頭舊值
   
   DISPLAY BY NAME g_ooci_m.ooci001,g_ooci_m.ooci001_desc
   CALL aooi013_b_fill(g_wc2)                 #單身
 
   CALL aooi013_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point   
   
END FUNCTION
 
 
#+ 帶出reference資料
PRIVATE FUNCTION aooi013_ref_show()
   {<Local define>}
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   {</Local define>}
   #add-point:ref_show段define
   {<point name="ref_show.define"/>}
   #end add-point
   
   LET l_ac_t = l_ac
 
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference
   {<point name="ref_show.head.reference"/>}
   #end add-point
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_ooci_d.getLength()
   #add-point:ref_show段d_reference
   {<point name="ref_show.body.reference"/>}
   #end add-point
   END FOR
   

   
   LET l_ac = l_ac_t
 
END FUNCTION
 
 
#+ 資料複製
PRIVATE FUNCTION aooi013_reproduce()
   {<Local define>}
   DEFINE l_newno     LIKE ooci_t.ooci001 
   DEFINE l_oldno     LIKE ooci_t.ooci001 

   DEFINE l_master    RECORD LIKE ooci_t.*
   DEFINE l_detail    RECORD LIKE ooci_t.*
   DEFINE l_cnt       LIKE type_t.num5
   {</Local define>}
   
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   IF g_ooci_m.ooci001 IS NULL

      THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_before_input_done = FALSE
   CALL aooi013_set_entry('a')
   LET g_before_input_done = TRUE
 
   CALL cl_set_head_visible("","YES")
 
   INPUT l_newno #FROM 

    FROM ooci001 

      BEFORE INPUT
            
      AFTER INPUT
         IF INT_FLAG = 1 THEN
            EXIT INPUT
         END IF
         IF l_newno IS NULL 

            THEN
         CALL cl_err("Reproduce","std-00006",1) 
         NEXT FIELD ooci001 
         END IF
         #確定該key值是否有重複定義
         LET l_cnt = 0
         SELECT COUNT(*) INTO l_cnt FROM ooci_t 
          WHERE oocient = g_enterprise AND ooci001 = l_newno

         IF l_cnt > 0 THEN
            CALL cl_err("Reproduce","std-00006",1)
            #NEXT FIELD ooci001 
         END IF
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE INPUT
   END INPUT
   
   IF INT_FLAG OR l_newno IS NULL THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   BEGIN WORK
   
   LET g_sql = "SELECT * FROM ooci_t WHERE oocient = '" ||g_enterprise|| "' AND ",
               " ooci001 = '",g_ooci_m.ooci001,"'"

   DECLARE aooi013_reproduce CURSOR FROM g_sql
 
   FOREACH aooi013_reproduce INTO l_detail.*
   
      #add-point:單身複製前
      {<point name="reproduce.body.b_insert"/>}
      #end add-point
   
      LET l_detail.ooci001 = l_newno

      LET l_detail.oociuser = g_user
      LET l_detail.oocidept = g_dept
      LET l_detail.oocibuid = cl_get_current()
      LET l_detail.oocioriu = g_user 
      LET l_detail.oociorid = g_dept 
      LET l_detail.oocimodu = g_user
      LET l_detail.oocidate = cl_get_current()
      #LET l_detail.oocistus = 'Y'
 
      INSERT INTO ooci_t VALUES (l_detail.*) #複製單身
      IF SQLCA.sqlcode THEN
         CALL cl_err('Insert error!',SQLCA.sqlcode,1)
         ROLLBACK WORK
         RETURN
      END IF
  
      #add-point:單身複製後
      {<point name="reproduce.body.a_insert"/>}
      #end add-point
   END FOREACH
 
   COMMIT WORK
   ERROR 'ROW(',l_newno,') O.K'
   LET l_oldno = g_ooci_m.ooci001

   
   SELECT ooci001 INTO g_ooci_m.ooci001 FROM ooci_t 
    WHERE oocient = g_enterprise AND ooci001 = l_newno

      
   CALL aooi013_show()
   LET g_ooci_m.ooci001 = l_oldno

   
   SELECT ooci001 INTO g_ooci_m.ooci001 FROM ooci_t 
    WHERE oocient = g_enterprise AND ooci001 = g_ooci_m.ooci001

   CALL aooi013_show()
 
   DISPLAY BY NAME g_ooci_m.ooci001

   
END FUNCTION
 
#+ 資料刪除
PRIVATE FUNCTION aooi013_delete()
   {<Local define>}
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_ooci_m.ooci001 IS NULL

   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
    SELECT UNIQUE ooci001
 INTO g_ooci_m.ooci001
 FROM ooci_t
 WHERE oocient = g_enterprise AND ooci001 = g_ooci_m.ooci001
   BEGIN WORK
   
   
 
   OPEN aooi013_cl USING g_enterprise,g_ooci_m.ooci001

   IF STATUS THEN
      CALL cl_err("OPEN aooi013_cl:", STATUS, 1)
      CLOSE aooi013_cl
      ROLLBACK WORK
      RETURN
   END IF
 
   FETCH aooi013_cl INTO g_ooci_m.ooci001,g_ooci_m.ooci001_desc              # 鎖住將被更改或取消的資料
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_ooci_m.ooci001,SQLCA.sqlcode,0)          #資料被他人LOCK
      ROLLBACK WORK
      RETURN
   END IF
 
   CALL aooi013_show()
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      INITIALIZE g_doc.* TO NULL         
      LET g_doc.column1 = "ooci001"       
      LET g_doc.value1 = g_ooci_m.ooci001     
      CALL cl_del_doc()    
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete"/>}
      #end add-point
      
      DELETE FROM ooci_t WHERE oocient = g_enterprise AND ooci001 = g_ooci_m.ooci001

      IF SQLCA.sqlcode THEN
         CALL cl_err("ooci_t",SQLCA.sqlcode,0)
         ROLLBACK WORK
      END IF
 
      
  
      #add-point:單身刪除後 
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
      CLEAR FORM
      CALL g_ooci_d.clear() 

     
      CALL aooi013_ui_browser_refresh()  
      CALL aooi013_ui_headershow()  
      CALL aooi013_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aooi013_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         CALL aooi013_browser_fill("first")
      END IF
       
   END IF
 
   CLOSE aooi013_cl
   COMMIT WORK
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_ooci_m.ooci001,'D')
    
END FUNCTION
 
 
#+ 單身陣列填充
PRIVATE FUNCTION aooi013_b_fill(p_wc2)
   {<Local define>}
   DEFINE p_wc2      STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_ooci_d.clear()    #g_ooci_d 單頭及單身 

 
   LET g_sql = "SELECT oocistus,ooci002,'','',oocimodu,'',oocidate,oocioriu,'',oociorid,'',oociuser,'',oocidept,'',oocibuid FROM ooci_t WHERE oocient= ? AND ooci001=?"   
 
   IF NOT cl_null(p_wc2) THEN
      LET g_sql=g_sql CLIPPED," AND ",p_wc2 CLIPPED
   END IF
   
   LET g_sql = g_sql, " ORDER BY ooci001,ooci002"
 
   PREPARE aooi013_pb FROM g_sql
   DECLARE b_fill_cs CURSOR FOR aooi013_pb
 
   LET g_cnt = l_ac
   LET l_ac = 1
 
   OPEN b_fill_cs USING g_enterprise,g_ooci_m.ooci001

                                            
   FOREACH b_fill_cs INTO g_ooci_d[l_ac].oocistus,g_ooci_d[l_ac].ooci002,g_ooci_d[l_ac].oocil004,g_ooci_d[l_ac].oocil005,g_ooci_d[l_ac].oocimodu,g_ooci_d[l_ac].modu_desc,g_ooci_d[l_ac].oocidate,g_ooci_d[l_ac].oocioriu,g_ooci_d[l_ac].oriu_desc,g_ooci_d[l_ac].oociorid,g_ooci_d[l_ac].orid_desc,g_ooci_d[l_ac].oociuser,g_ooci_d[l_ac].user_desc,g_ooci_d[l_ac].oocidept,g_ooci_d[l_ac].dept_desc,g_ooci_d[l_ac].oocibuid

                          
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
                        
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
 
      #帶出預設欄位之值
      LET g_ooci_d[l_ac].modu_desc = cl_get_username(g_ooci_d[l_ac].oocimodu)
      LET g_ooci_d[l_ac].oriu_desc = cl_get_username(g_ooci_d[l_ac].oocioriu)
      LET g_ooci_d[l_ac].user_desc = cl_get_username(g_ooci_d[l_ac].oociuser)
      LET g_ooci_d[l_ac].dept_desc = cl_get_deptname(g_ooci_d[l_ac].oocidept)
      LET g_ooci_d[l_ac].orid_desc = cl_get_deptname(g_ooci_d[l_ac].oociorid)
     

     
      #add-point:單身資料抓取
      {<point name="bfill.foreach"/>}
     #end add-point
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         CALL cl_err( '', 9035, 0 )
         EXIT FOREACH
      END IF
   END FOREACH
   CALL g_ooci_d.deleteElement(l_ac)

 
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
END FUNCTION
 
 
#+ 單身db資料刪除
PRIVATE FUNCTION aooi013_before_delete()
   #add-point:before_delete段define
   {<point name="before_delete.define"/>}
   #end add-point 
   
   #add-point:單筆刪除前
   {<point name="delete.body.b_single_delete"/>}
   #end add-point
   
   DELETE FROM ooci_t
    WHERE oocient = g_enterprise AND ooci001 = g_ooci_m.ooci001 AND

          ooci002 = g_ooci_d_t.ooci002

          
   IF SQLCA.sqlcode THEN
      CALL cl_err("ooci_t",SQLCA.sqlcode,1)
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後
   {<point name="delete.body.a_single_delete"/>}
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
 
 
#+ 刪除單身db資料後畫面頁簽連動
PRIVATE FUNCTION aooi013_delete_b(p_total)
   {<Local define>}
   DEFINE p_total LIKE type_t.num5
   {</Local define>}
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 

 
   IF p_total = g_ooci_d.getLength() THEN
      CALL g_ooci_d.deleteElement(l_ac)
   END IF 
   
END FUNCTION
 
 
#+ 單頭欄位開啟設定
PRIVATE FUNCTION aooi013_set_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1  
   {</Local define>}
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' AND ( NOT g_before_input_done ) THEN
      CALL cl_set_comp_entry("ooci001",TRUE)
   END IF
   
END FUNCTION
 
 
#+ 單頭欄位關閉設定
PRIVATE FUNCTION aooi013_set_no_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' AND ( NOT g_before_input_done ) THEN
      CALL cl_set_comp_entry("ooci001",FALSE)
   END IF
   
END FUNCTION
 
 
#+ 單身欄位開啟設定
PRIVATE FUNCTION aooi013_set_entry_b()
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
END FUNCTION
 
 
#+ 單身欄位關閉設定
PRIVATE FUNCTION aooi013_set_no_entry_b()
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point     
END FUNCTION
 
 
#+ 外部參數搜尋, 施工中
PRIVATE FUNCTION aooi013_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   {</Local define>}
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " ooci001 = '", g_argv[1], "' AND "
   END IF
   

   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
 
 
#確認碼變更
PRIVATE FUNCTION aooi013_statechange(pc_state)
   {<Local define>}
   DEFINE pc_state  LIKE type_t.chr5
   DEFINE lc_state  LIKE type_t.chr5
   DEFINE ls_sql    STRING
   DEFINE li_idx    LIKE type_t.num5
   DEFINE li_cnt    LIKE type_t.num5
   DEFINE li_state  LIKE type_t.num5
   {</Local define>}
   
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point 
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""
   
   LET li_idx = l_ac
   
   LET li_state = 1
   LET li_cnt = 0
 
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   FOR l_ac = 1 TO g_ooci_d.getLength()
   
      IF NOT g_curr_diag.isRowSelected("s_detail1", l_ac)  OR
         g_ooci_d[l_ac].oocistus = pc_state THEN
         CONTINUE FOR
      END IF
      
      IF g_ooci_d[l_ac].ooci002 IS NULL

         THEN
         CALL cl_err("","std-00003",0)
         RETURN
      END IF
      
      BEGIN WORK
      
      LET lc_state = pc_state
      
      LET ls_sql = " SELECT oocistus FROM ooci_t ",
                   " WHERE oocient = '" ||g_enterprise|| "' AND ooci002 = '",g_ooci_d[l_ac].ooci002,"'",

                   " FOR UPDATE NOWAIT"
                   
      PREPARE upd_state FROM ls_sql
      DECLARE upd_state_cur CURSOR FOR upd_state
      
      OPEN upd_state_cur
      IF SQLCA.sqlcode THEN
         CALL cl_err('',SQLCA.sqlcode,0)
         CLOSE upd_state_cur
         ROLLBACK WORK
         LET li_cnt = li_cnt + 1
         LET li_state = 2
         CONTINUE FOR
      END IF
      
      UPDATE ooci_t SET oocistus = lc_state 
       WHERE oocient = g_enterprise AND 
             ooci001 = g_ooci_m.ooci001

         AND ooci002 = g_ooci_d[l_ac].ooci002

               
      IF SQLCA.sqlcode THEN
         CALL cl_err('',SQLCA.sqlcode,0)
         CLOSE upd_state_cur
         ROLLBACK WORK
         LET li_cnt = li_cnt + 1
         LET li_state = 2
         CONTINUE FOR
      END IF
      
      COMMIT WORK
      CLOSE upd_state_cur
      
   END FOR
   
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
   
   CASE li_state
      WHEN 1
      WHEN 2
         CALL cl_err(li_cnt,'std-00009',1)
   END CASE
   
   LET l_ac = li_idx
   
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point 
 
END FUNCTION
 
   
#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
 

