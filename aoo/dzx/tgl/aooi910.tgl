#該程式已解開Section, 不再透過樣板產出!
{<section id="aooi910.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0004(2015-02-09 15:20:51), PR版次:
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:
#+ Build......: 000045
#+ Filename...: aooi910
#+ Description: 歷史報表留存設定作業
#+ Creator....: 05177(2014-12-25 14:22:45)
#+ Modifier...: 00742 -SD/PR-

{</section>}

{<section id="aooi910.global" >}
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_oojo_d RECORD
   oojoent      LIKE oojo_t.oojoent,
   oojosite     LIKE oojo_t.oojosite,
   oojo001      LIKE oojo_t.oojo001, 
   oojo001_desc LIKE type_t.chr500, 
   oojo003      LIKE oojo_t.oojo003,
   oojo002      LIKE oojo_t.oojo002, 
   oojo002_desc LIKE type_t.chr500, 
   oojo004      LIKE oojo_t.oojo004, 
   oojostus     LIKE oojo_t.oojostus 
   END RECORD
PRIVATE TYPE type_g_oojo2_d RECORD
   oojoownid    LIKE oojo_t.oojoownid, 
   oojoowndp    LIKE oojo_t.oojoowndp, 
   oojocrtid    LIKE oojo_t.oojocrtid, 
   oojocrtdp    LIKE oojo_t.oojocrtdp, 
   oojocrtdt    DATETIME YEAR TO SECOND, 
   oojomodid    LIKE oojo_t.oojomodid, 
   oojomoddt    DATETIME YEAR TO SECOND, 
   oojoent      LIKE oojo_t.oojoent,
   oojosite     LIKE oojo_t.oojosite,
   oojo001      LIKE oojo_t.oojo001, 
   oojo003      LIKE oojo_t.oojo003,
   oojo002      LIKE oojo_t.oojo002
   END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_oojo_d          DYNAMIC ARRAY OF type_g_oojo_d #單身變數
DEFINE g_oojo_d_t        type_g_oojo_d                  #單身備份
DEFINE g_oojo_d_o        type_g_oojo_d                  #單身備份
DEFINE g_oojo2_d   DYNAMIC ARRAY OF type_g_oojo2_d
DEFINE g_oojo2_d_t type_g_oojo2_d
DEFINE g_oojo2_d_o type_g_oojo2_d
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
DEFINE g_log1               STRING                        #log用
DEFINE g_log2               STRING                        #log用
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="aooi910.main" >}
#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
{<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aoo","")
 
   #add-point:作業初始化
{<point name="main.init" />}
   #end add-point
   
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
{<point name="main.define_sql" />}
   #end add-point
 
   #add-point:main段define_sql
{<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 

   #add-point:main段define_sql
{<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aooi910_bcl CURSOR FROM g_forupd_sql
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
{<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aooi910 WITH FORM cl_ap_formpath("aoo",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aooi910_init()   
 
      #進入選單 Menu (="N")
      CALL aooi910_ui_dialog() 
      
      #add-point:畫面關閉前
{<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aooi910
      
   END IF 
   
   
   
 
   #add-point:作業離開前
{<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 

{</section>}

{<section id="aooi910.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION aooi910_init()
   #add-point:init段define
{<point name="init.define"/>}
   #end add-point   
   
   CALL cl_set_combo_scc('oojo003','179') 
   CALL cl_set_combo_scc('oojo004','178') 
 
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
{<point name="init.init" />}
   #end add-point
   
   CALL aooi910_default_search()
   
END FUNCTION

{</section>}

{<section id="aooi910.other_function" readonly="Y" >}
#add-point:自定義元件(Function) name="other.function"
{<point name="other.function"/>}
#end add-point

{</section>}

{<section id="aooi910.ui_dialog" >}
#+ 功能選單 
PRIVATE FUNCTION aooi910_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5
   DEFINE la_param  RECORD #串查用
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
{<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
{<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL aooi910_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_oojo_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
{<point name="ui_dialog.body.before_display" mark="Y"/>}
               #end add-point
               #讓各頁籤能夠同步指到特定資料
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
{<point name="ui_dialog.body.before_display2"/>}
               #end add-point
               
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #顯示followup圖示
               #+ 此段落由子樣板a48產生
               CALL aooi910_set_pk_array()
               #add-point:ON ACTION agendum
{<point name="show.follow_pic"/>}
               #END add-point
               CALL cl_user_overview_set_follow_pic()
 
 
               #add-point:display array-before row
{<point name="ui_dialog.before_row"/>}
               #end add-point
         
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
         DISPLAY ARRAY g_oojo2_d TO s_detail2.* ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
{<point name="ui_dialog.body2.before_display" mark="Y"/>}
               #end add-point
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
{<point name="ui_dialog.body2.before_display2"/>}
               #end add-point
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #顯示followup圖示
               #+ 此段落由子樣板a48產生
               CALL aooi910_set_pk_array()
               #add-point:ON ACTION agendum
{<point name="show.follow_pic"/>}
               #END add-point
               CALL cl_user_overview_set_follow_pic()
 
 
               #add-point:display array-before row
{<point name="ui_dialog.before_row2"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
      
         #add-point:ui_dialog段自定義display array
{<point name="ui_dialog.more_displayarray"/>}
         #end add-point
    
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            CALL DIALOG.setSelectionMode("s_detail2", 1)
 
            #add-point:ui_dialog段before
{<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aooi910_modify()
               #add-point:ON ACTION modify
{<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aooi910_modify()
               #add-point:ON ACTION modify_detail
{<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aooi910_delete()
               #add-point:ON ACTION delete
{<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION ex_sign_set
            LET g_action_choice="ex_sign_set"
            IF cl_auth_chk_act("ex_sign_set") THEN
               
               #add-point:ON ACTION ex_sign_set
{<point name="menu.ex_sign_set" />}
               CALL aooi910_01()
               #END add-point
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aooi910_insert()
               #add-point:ON ACTION insert
{<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
{<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               
               #add-point:ON ACTION reproduce
{<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aooi910_query()
               #add-point:ON ACTION query
{<point name="menu.query" />}
               #END add-point
               #此段落由子樣板a59產生  
               CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
 
 
            END IF
 
 
         #+ 此段落由子樣板a43產生
#         ON ACTION sign_class_set
#            LET g_action_choice="sign_class_set"
#            IF cl_auth_chk_act("sign_class_set") THEN
               
               #add-point:ON ACTION sign_class_set
{<point name="menu.sign_class_set" />}
               #END add-point
               #EXIT DIALOG   #140819 mark
#            END IF
 
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
            
         
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aooi910_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
{<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aooi910_set_pk_array()
            #add-point:ON ACTION agendum
{<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aooi910_set_pk_array()
            #add-point:ON ACTION followup
{<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
{<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION

{</section>}

{<section id="aooi910.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION aooi910_query()
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
{<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_oojo_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON oojoent,oojosite,oojo001,oojo003,oojo002,oojo004,oojostus,
          oojoownid,oojoowndp,oojocrtid,oojocrtdp,oojocrtdt,oojomodid,oojomoddt
          
         FROM s_detail1[1].oojoent,s_detail1[1].oojosite,s_detail1[1].oojo001,s_detail1[1].oojo003,
              s_detail1[1].oojo002,s_detail1[1].oojo004,s_detail1[1].oojostus,
              s_detail2[1].oojoownid,s_detail2[1].oojoowndp,s_detail2[1].oojocrtid,s_detail2[1].oojocrtdp,
              s_detail2[1].oojocrtdt,s_detail2[1].oojomodid,s_detail2[1].oojomoddt
              
         #此段落由子樣板a11產生
         #共用欄位查詢處理
         ##----<<oojocrtdt>>----
         AFTER FIELD oojocrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<oojomoddt>>----
         AFTER FIELD oojomoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<oojjcnfdt>>----
         
         #----<<oojjpstdt>>----
 
 
      
         #此段落由子樣板a01產生
         BEFORE FIELD oojostus
            #add-point:BEFORE FIELD oojostus
{<point name="query.b.page1.oojostus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojostus
            #add-point:AFTER FIELD oojostus
{<point name="query.a.page1.oojostus" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oojostus
         ON ACTION controlp INFIELD oojostus
            #add-point:ON ACTION controlp INFIELD oojostus
{<point name="query.c.page1.oojostus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojosite
            #add-point:BEFORE FIELD oojosite
{<point name="query.b.page1.oojosite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojosite
            
            #add-point:AFTER FIELD oojosite
{<point name="query.a.page1.oojosite" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oojosite
         ON ACTION controlp INFIELD oojosite
            #add-point:ON ACTION controlp INFIELD oojosite
{<point name="query.c.page1.oojosite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojj006
            #add-point:BEFORE FIELD oojj006
{<point name="query.b.page1.oojj006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojj006
            
            #add-point:AFTER FIELD oojj006
{<point name="query.a.page1.oojj006" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oojj006
         ON ACTION controlp INFIELD oojj006
            #add-point:ON ACTION controlp INFIELD oojj006
{<point name="query.c.page1.oojj006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojo003
            #add-point:BEFORE FIELD oojo003
{<point name="query.b.page1.oojo003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojo003
            
            #add-point:AFTER FIELD oojo003
{<point name="query.a.page1.oojo003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oojo003
         ON ACTION controlp INFIELD oojo003
            #add-point:ON ACTION controlp INFIELD oojo003
{<point name="query.c.page1.oojo003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojo004
            #add-point:BEFORE FIELD oojo004
{<point name="query.b.page1.oojo004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojo004
            
            #add-point:AFTER FIELD oojo004
{<point name="query.a.page1.oojo004" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oojo004
         ON ACTION controlp INFIELD oojo004
            #add-point:ON ACTION controlp INFIELD oojo004
{<point name="query.c.page1.oojo004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojo001
            #add-point:BEFORE FIELD oojo001
{<point name="query.b.page1.oojo001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojo001
            
            #add-point:AFTER FIELD oojo001
{<point name="query.a.page1.oojo001" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oojo001
         ON ACTION controlp INFIELD oojo001
            #add-point:ON ACTION controlp INFIELD oojo001
{<point name="query.c.page1.oojo001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojo002
            #add-point:BEFORE FIELD oojo002
{<point name="query.b.page1.oojo002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojo002
            
            #add-point:AFTER FIELD oojo002
{<point name="query.a.page1.oojo002" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oojo002
         ON ACTION controlp INFIELD oojo002
            #add-point:ON ACTION controlp INFIELD oojo002
{<point name="query.c.page1.oojo002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojj005
            #add-point:BEFORE FIELD oojj005
{<point name="query.b.page1.oojj005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojj005
            
            #add-point:AFTER FIELD oojj005
{<point name="query.a.page1.oojj005" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oojj005
         ON ACTION controlp INFIELD oojj005
            #add-point:ON ACTION controlp INFIELD oojj005
{<point name="query.c.page1.oojj005" />}
            #END add-point
 
  
         
                  #此段落由子樣板a01產生
         BEFORE FIELD oojoownid
            #add-point:BEFORE FIELD oojoownid
{<point name="query.b.page2.oojoownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojoownid
            
            #add-point:AFTER FIELD oojoownid
{<point name="query.a.page2.oojoownid" />}
            #END add-point
            
 
         #Ctrlp:query.c.page2.oojoownid
         ON ACTION controlp INFIELD oojoownid
            #add-point:ON ACTION controlp INFIELD oojoownid
{<point name="query.c.page2.oojoownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojoowndp
            #add-point:BEFORE FIELD oojoowndp
{<point name="query.b.page2.oojoowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojoowndp
            
            #add-point:AFTER FIELD oojoowndp
{<point name="query.a.page2.oojoowndp" />}
            #END add-point
            
 
         #Ctrlp:query.c.page2.oojoowndp
         ON ACTION controlp INFIELD oojoowndp
            #add-point:ON ACTION controlp INFIELD oojoowndp
{<point name="query.c.page2.oojoowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojocrtid
            #add-point:BEFORE FIELD oojocrtid
{<point name="query.b.page2.oojocrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojocrtid
            
            #add-point:AFTER FIELD oojocrtid
{<point name="query.a.page2.oojocrtid" />}
            #END add-point
            
 
         #Ctrlp:query.c.page2.oojocrtid
         ON ACTION controlp INFIELD oojocrtid
            #add-point:ON ACTION controlp INFIELD oojocrtid
{<point name="query.c.page2.oojocrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojocrtdp
            #add-point:BEFORE FIELD oojocrtdp
{<point name="query.b.page2.oojocrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojocrtdp
            
            #add-point:AFTER FIELD oojocrtdp
{<point name="query.a.page2.oojocrtdp" />}
            #END add-point
            
 
         #Ctrlp:query.c.page2.oojocrtdp
         ON ACTION controlp INFIELD oojocrtdp
            #add-point:ON ACTION controlp INFIELD oojocrtdp
{<point name="query.c.page2.oojocrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojocrtdt
            #add-point:BEFORE FIELD oojocrtdt
{<point name="query.b.page2.oojocrtdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojomodid
            #add-point:BEFORE FIELD oojomodid
{<point name="query.b.page2.oojomodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojomodid
            
            #add-point:AFTER FIELD oojomodid
{<point name="query.a.page2.oojomodid" />}
            #END add-point
            
 
         #Ctrlp:query.c.page2.oojomodid
         ON ACTION controlp INFIELD oojomodid
            #add-point:ON ACTION controlp INFIELD oojomodid
{<point name="query.c.page2.oojomodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojomoddt
            #add-point:BEFORE FIELD oojomoddt
{<point name="query.b.page2.oojomoddt" />}
            #END add-point
 
  
 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
{<point name="cs.before_construct"/>}
            #end add-point 
      
      END CONSTRUCT
  
      #add-point:query段more_construct
{<point name="query.more_construct"/>}
      #end add-point 
  
      BEFORE DIALOG 
         CALL cl_qbe_init()
         #add-point:query段before_dialog
{<point name="query.before_dialog"/>}
         #end add-point 
      
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
      
      ON ACTION qbe_save
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
{<point name="query.after_construct"/>}
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   ELSE
      LET g_error_show = 1
      LET g_detail_idx = 1
   END IF
    
   CALL aooi910_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION

{</section>}

{<section id="aooi910.modify" >}
#+ 資料修改
PRIVATE FUNCTION aooi910_modify()
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   #add-point:modify段define
{<point name="modify.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   
   #add-point:modify開始前
{<point name="modify.define_sql" mark="Y"/>}
   #end add-point
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
{<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_oojo_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_oojo_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aooi910_b_fill(g_wc2)
            LET g_detail_cnt = g_oojo_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
{<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = g_detail_idx
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_oojo_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_oojo_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_oojo_d[l_ac].oojoent IS NOT NULL
               AND g_oojo_d[l_ac].oojosite IS NOT NULL
               AND g_oojo_d[l_ac].oojo001 IS NOT NULL
               AND g_oojo_d[l_ac].oojo002 IS NOT NULL
               AND g_oojo_d[l_ac].oojo003 IS NOT NULL
            THEN
               LET l_cmd='u'
               LET g_oojo_d_t.* = g_oojo_d[l_ac].*  #BACKUP
               LET g_oojo_d_o.* = g_oojo_d[l_ac].*  #BACKUP
               IF NOT aooi910_lock_b("oojo_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aooi910_bcl INTO g_oojo_d[l_ac].oojoent,g_oojo_d[l_ac].oojosite,g_oojo_d[l_ac].oojo001, 
                      g_oojo_d[l_ac].oojo002,g_oojo_d[l_ac].oojo003,g_oojo_d[l_ac].oojo004,g_oojo_d[l_ac].oojostus, 
                      g_oojo2_d[l_ac].oojoownid,g_oojo2_d[l_ac].oojoowndp,g_oojo2_d[l_ac].oojocrtid,g_oojo2_d[l_ac].oojocrtdp,
                      g_oojo2_d[l_ac].oojocrtdt,g_oojo2_d[l_ac].oojomodid,g_oojo2_d[l_ac].oojomoddt 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_oojo_d_t.oojosite 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL aooi910_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a' #新增
            END IF
            #add-point:modify段before row
{<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_oojo_d_t.* TO NULL
            INITIALIZE g_oojo_d_o.* TO NULL
            INITIALIZE g_oojo_d[l_ac].* TO NULL 
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
            #公用欄位新增給值
            LET g_oojo2_d[l_ac].oojoownid = g_user
            LET g_oojo2_d[l_ac].oojoowndp = g_dept
            LET g_oojo2_d[l_ac].oojocrtid = g_user
            LET g_oojo2_d[l_ac].oojocrtdp = g_dept 
            LET g_oojo2_d[l_ac].oojocrtdt = cl_get_current()
            LET g_oojo2_d[l_ac].oojomodid = ""
            LET g_oojo2_d[l_ac].oojomoddt = ""
            LET g_oojo_d[l_ac].oojostus = ""
 
 
            #自定義預設值(單身2)
            
            #add-point:modify段before備份
{<point name="input.body.before_bak"/>}
            #end add-point
            LET g_oojo_d_t.* = g_oojo_d[l_ac].*     #新輸入資料
            LET g_oojo_d_o.* = g_oojo_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aooi910_set_entry_b("a")
            CALL aooi910_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_oojo_d[li_reproduce_target].* = g_oojo_d[li_reproduce].*
               LET g_oojo2_d[li_reproduce_target].* = g_oojo2_d[li_reproduce].*
 
#               LET g_oojo_d[g_oojo_d.getLength()].oojosite = NULL
               LET g_oojo_d[g_oojo_d.getLength()].oojo001 = NULL
               LET g_oojo_d[g_oojo_d.getLength()].oojo002 = NULL
 
            END IF
            
            #add-point:modify段before insert
{<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF

            #檢查作業編號(oojo001)是否存在
            IF g_oojo_d[g_detail_idx].oojo001 <> "ALL" THEN
               LET l_msgcode =''
               IF g_oojo_d[g_detail_idx].oojo001 IS NOT NULL THEN
                  CALL aooi910_chk_field("oojo001",g_oojo_d[g_detail_idx].oojo001,"","") RETURNING l_msgcode
               END IF
               
               IF NOT cl_null(l_msgcode) OR l_msgcode IS NOT NULL THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.code   = l_msgcode
                  LET g_errparam.popup  = FALSE 
                  CALL cl_err() 
                  NEXT FIELD CURRENT
               END IF
            END IF
            
            #檢查用戶或角色(oojo002)是否存在
            IF g_oojo_d[g_detail_idx].oojo003 = "1" THEN
               LET g_oojo_d[g_detail_idx].oojo002 = "ALL"
            ELSE
               LET l_msgcode =''
               IF g_oojo_d[g_detail_idx].oojo002 IS NOT NULL THEN
                  CASE g_oojo_d[g_detail_idx].oojo003
                     WHEN '2'
                        CALL aooi910_chk_field("oojo002","2",g_oojo_d[g_detail_idx].oojo002,g_enterprise) RETURNING l_msgcode
                     WHEN '3'
                        CALL aooi910_chk_field("oojo002","3",g_oojo_d[g_detail_idx].oojo002,g_enterprise) RETURNING l_msgcode
                  END CASE
               END IF
               
               IF NOT cl_null(l_msgcode) OR l_msgcode IS NOT NULL THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.code   = l_msgcode
                  LET g_errparam.popup  = FALSE
                  CALL cl_err()    
                  NEXT FIELD CURRENT
               END IF
            END IF 

            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM oojo_t 
             WHERE oojoent = g_enterprise AND oojosite = "ALL"
                                       AND oojo001 = g_oojo_d[l_ac].oojo001
                                       AND oojo002 = g_oojo_d[l_ac].oojo002
                                       AND oojo002 = g_oojo_d[l_ac].oojo003
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
{<point name="input.body.b_insert"/>}
               #end add-point
            
               INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_enterprise
               LET gs_keys[2] = "ALL"
               LET gs_keys[3] = g_oojo_d[g_detail_idx].oojo001
               LET gs_keys[4] = g_oojo_d[g_detail_idx].oojo002
               LET gs_keys[5] = g_oojo_d[g_detail_idx].oojo003
               CALL aooi910_insert_b('oojo_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
{<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               INITIALIZE g_oojo_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "oojo_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aooi910_b_fill(g_wc2)
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
{<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
#               LET g_wc2 = g_wc2, " OR (oojosite = '", g_oojo_d[l_ac].oojosite, "' "
#                                  ," AND oojo001 = '", g_oojo_d[l_ac].oojo001, "' "
#                                  ," AND oojo002 = '", g_oojo_d[l_ac].oojo002, "' "
# 
#                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除ask前
{<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
{<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_oojo_d_t.oojosite
               LET gs_keys[02] = g_oojo_d_t.oojo001
               LET gs_keys[03] = g_oojo_d_t.oojo003
 
               #刪除同層單身               
               IF NOT aooi910_delete_b('oojo_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aooi910_bcl
                  CANCEL DELETE
               END IF
               
               DELETE FROM oojo_t
                WHERE oojoent = g_oojo_d_t.oojoent
                      AND oojosite = g_oojo_d_t.oojosite
                      AND oojo001 = g_oojo_d_t.oojo001
                      AND oojo002 = g_oojo_d_t.oojo002
                      AND oojo003 = g_oojo_d_t.oojo003
 
                      
               #add-point:單身刪除中
{<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "oojo_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
                  #add-point:單身刪除後
{<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aooi910_bcl
               LET l_count = g_oojo_d.getLength()
               INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_oojo_d[g_detail_idx].oojoent
               LET gs_keys[2] = g_oojo_d[g_detail_idx].oojosite
               LET gs_keys[3] = g_oojo_d[g_detail_idx].oojo001
               LET gs_keys[4] = g_oojo_d[g_detail_idx].oojo002
               LET gs_keys[5] = g_oojo_d[g_detail_idx].oojo003
 
               #+ 此段落由子樣板a47產生
               #刪除相關文件
               CALL aooi910_set_pk_array()
               #add-point:相關文件刪除前
{<point name="delete.befroe.related_document_remove"/>}
               #end add-point   
               CALL cl_doc_remove()  

            END IF 
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身刪除後2
{<point name="input.body.after_delete"/>}
               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_oojo_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojostus
            #add-point:BEFORE FIELD oojostus
{<point name="input.b.page1.oojostus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojostus
            
            #add-point:AFTER FIELD oojostus
{<point name="input.a.page1.oojostus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oojostus
            #add-point:ON CHANGE oojostus
{<point name="input.g.page1.oojostus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojosite
            #add-point:BEFORE FIELD oojosite
{<point name="input.b.page1.oojosite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojosite
            #add-point:AFTER FIELD oojosite
{<point name="input.a.page1.oojosite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oojosite
            #add-point:ON CHANGE oojosite
{<point name="input.g.page1.oojosite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojj005
            #add-point:BEFORE FIELD oojj005
{<point name="input.b.page1.oojj006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojj005
            
            #add-point:AFTER FIELD oojj005
{<point name="input.a.page1.oojj006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oojj005
            #add-point:ON CHANGE oojj005
{<point name="input.g.page1.oojj006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojo003
            #add-point:AFTER FIELD oojo003
{<point name="input.a.page1.oojo003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojo003
            #add-point:BEFORE FIELD oojo003
{<point name="input.b.page1.oojo003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE oojo003
            #add-point:ON CHANGE oojo003
{<point name="input.g.page1.oojo003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojo004
            
            #add-point:AFTER FIELD oojo004
{<point name="input.a.page1.oojo004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojo004
            #add-point:BEFORE FIELD oojo004
{<point name="input.b.page1.oojo004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE oojo004
            #add-point:ON CHANGE oojo004
{<point name="input.g.page1.oojo004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojo001
            
            #add-point:AFTER FIELD oojo001
{<point name="input.a.page1.oojo001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojo001
            #add-point:BEFORE FIELD oojo001
{<point name="input.b.page1.oojo001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE oojo001
            #add-point:ON CHANGE oojo001
{<point name="input.g.page1.oojo001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojo002       
            #add-point:AFTER FIELD oojo002
{<point name="input.a.page1.oojo002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojo002
            #add-point:BEFORE FIELD oojo002
{<point name="input.b.page1.oojo002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE oojo002
            #add-point:ON CHANGE oojo002
{<point name="input.g.page1.oojo002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oojoent
            
            #add-point:AFTER FIELD oojoent
{<point name="input.a.page1.oojj005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD oojoent
            #add-point:BEFORE FIELD oojoent
{<point name="input.b.page1.oojj005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE oojoent
            #add-point:ON CHANGE oojoent
{<point name="input.g.page1.oojj005" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.oojostus
         ON ACTION controlp INFIELD oojostus
            #add-point:ON ACTION controlp INFIELD oojostus
{<point name="input.c.page1.oojostus" />}
            #END add-point
 
         #Ctrlp:input.c.page1.oojosite
         ON ACTION controlp INFIELD oojosite
            #add-point:ON ACTION controlp INFIELD oojosite
{<point name="input.c.page1.oojosite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.oojj006
         ON ACTION controlp INFIELD oojj006
            #add-point:ON ACTION controlp INFIELD oojj006
{<point name="input.c.page1.oojj006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.oojo003
         ON ACTION controlp INFIELD oojo003
            #add-point:ON ACTION controlp INFIELD oojo003
{<point name="input.c.page1.oojo003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.oojo004
         ON ACTION controlp INFIELD oojo004
            #add-point:ON ACTION controlp INFIELD oojo004
{<point name="input.c.page1.oojo004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.oojo001
         ON ACTION controlp INFIELD oojo001
            #add-point:ON ACTION controlp INFIELD oojo001
{<point name="input.c.page1.oojo001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.oojo002
         ON ACTION controlp INFIELD oojo002
            #add-point:ON ACTION controlp INFIELD oojo002
{<point name="input.c.page1.oojo002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.oojj005
         ON ACTION controlp INFIELD oojj005
            #add-point:ON ACTION controlp INFIELD oojj005
{<point name="input.c.page1.oojj005" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               LET g_oojo_d[l_ac].* = g_oojo_d_t.*
               CLOSE aooi910_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #檢查作業編號(oojo001)是否存在
            IF g_oojo_d[g_detail_idx].oojo001 <> "ALL" THEN
               LET l_msgcode =''
               IF g_oojo_d[g_detail_idx].oojo001 IS NOT NULL THEN
                  CALL aooi910_chk_field("oojo001",g_oojo_d[g_detail_idx].oojo001,"","") RETURNING l_msgcode
               END IF
               
               IF NOT cl_null(l_msgcode) OR l_msgcode IS NOT NULL THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.code   = l_msgcode
                  LET g_errparam.popup  = FALSE 
                  CALL cl_err() 
                  NEXT FIELD CURRENT
               END IF
            END IF
            
            #檢查用戶或角色(oojo002)是否存在
            IF g_oojo_d[g_detail_idx].oojo003 = "1" THEN
               LET g_oojo_d[g_detail_idx].oojo002 = "ALL"
            ELSE
               LET l_msgcode =''
               IF g_oojo_d[g_detail_idx].oojo002 IS NOT NULL THEN
                  CASE g_oojo_d[g_detail_idx].oojo003
                     WHEN '2'
                        CALL aooi910_chk_field("oojo002","2",g_oojo_d[g_detail_idx].oojo002,g_enterprise) RETURNING l_msgcode
                     WHEN '3'
                        CALL aooi910_chk_field("oojo002","3",g_oojo_d[g_detail_idx].oojo002,g_enterprise) RETURNING l_msgcode
                  END CASE
               END IF
               
               IF NOT cl_null(l_msgcode) OR l_msgcode IS NOT NULL THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.code   = l_msgcode
                  LET g_errparam.popup  = FALSE
                  CALL cl_err()    
                  NEXT FIELD CURRENT
               END IF
            END IF 
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_oojo_d[l_ac].oojosite
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               LET g_oojo_d[l_ac].* = g_oojo_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               LET g_oojo2_d[l_ac].oojomodid = g_user 
               LET g_oojo2_d[l_ac].oojomoddt = cl_get_current()
 
            
               #add-point:單身修改前
{<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE oojo_t SET (oojosite,oojo001,oojo002,oojo003,
                   oojo004,oojostus,oojoownid,oojoowndp,oojocrtid,
                   oojocrtdp,oojocrtdt,oojomodid,oojomoddt) = 
                   ("ALL",g_oojo_d[l_ac].oojo001,g_oojo_d[l_ac].oojo002,g_oojo_d[l_ac].oojo003,
                   g_oojo_d[l_ac].oojo004,g_oojo_d[l_ac].oojostus,g_oojo2_d[l_ac].oojoownid,g_oojo2_d[l_ac].oojoowndp,g_oojo2_d[l_ac].oojocrtid,
                   g_oojo2_d[l_ac].oojocrtdp,g_oojo2_d[l_ac].oojocrtdt,g_oojo2_d[l_ac].oojomodid,g_oojo2_d[l_ac].oojomoddt)
                WHERE oojoent = g_oojo_d_t.oojoent
                  AND oojosite = g_oojo_d_t.oojosite
                  AND oojo001 = g_oojo_d_t.oojo001
                  AND oojo002 = g_oojo_d_t.oojo002
                  AND oojo003 = g_oojo_d_t.oojo003
                  
               #add-point:單身修改中
{<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "oojo_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "oojo_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  OTHERWISE
#                     INITIALIZE gs_keys TO NULL 
#                     LET gs_keys[1] = g_oojo_d[g_detail_idx].oojoent
#                     LET gs_keys_bak[1] = g_oojo_d_t.oojoent
#                     LET gs_keys[2] = g_oojo_d[g_detail_idx].oojosite
#                     LET gs_keys_bak[2] = g_oojo_d_t.oojosite
#                     LET gs_keys[3] = g_oojo_d[g_detail_idx].oojo001
#                     LET gs_keys_bak[3] = g_oojo_d_t.oojo001
#                     LET gs_keys[4] = g_oojo_d[g_detail_idx].oojo002
#                     LET gs_keys_bak[4] = g_oojo_d_t.oojo002
#                     LET gs_keys[5] = g_oojo_d[g_detail_idx].oojo003
#                     LET gs_keys_bak[5] = g_oojo_d_t.oojo003
#                     CALL aooi910_update_b('oojo_t',gs_keys,gs_keys_bak,"'1'")
#                     #資料多語言用-增/改
#                     
#                     LET g_log1 = util.JSON.stringify(g_oojo_d_t)
#                     LET g_log2 = util.JSON.stringify(g_oojo_d[l_ac])
#                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
#                        CALL s_transaction_end('N','0')
#                     END IF
               END CASE
               
               #add-point:單身修改後
{<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL aooi910_unlock_b("oojo_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
             #add-point:單身after row
{<point name="input.body.a_row"/>}
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後
{<point name="input.body.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_oojo_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_oojo_d.getLength()+1
            
      END INPUT
      
 
      
      DISPLAY ARRAY g_oojo2_d TO s_detail2.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL aooi910_b_fill(g_wc2)
            CALL FGL_SET_ARR_CURR(g_detail_idx)
      
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            LET g_temp_idx = l_ac
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL cl_show_fld_cont() 
            
         #add-point:page2自定義行為
{<point name="input.body2.action"/>}
         #end add-point
            
      END DISPLAY
 
      
      #add-point:before_more_input
{<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
{<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD oojostus
            WHEN "s_detail2"
               NEXT FIELD oojoownid
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:modify段修改後
{<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE aooi910_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION

{</section>}

{<section id="aooi910.delete" >}
#+ 資料刪除
PRIVATE FUNCTION aooi910_delete()
   DEFINE li_idx          LIKE type_t.num5
   DEFINE li_ac_t         LIKE type_t.num5
   DEFINE li_detail_tmp   LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:delete段define
{<point name="delete.define"/>}
   #end add-point 
   
   #add-point:單身刪除前
{<point name="delete.body.before_delete"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET li_ac_t = l_ac
   
   LET li_detail_tmp = g_detail_idx
    
   #lock所有所選資料
   FOR li_idx = 1 TO g_oojo_d.getLength()
      LET g_detail_idx = li_idx
      #已選擇的資料
      IF g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         #確定是否有被鎖定
         IF NOT aooi910_lock_b("oojo_t") THEN
            #已被他人鎖定
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF
   END FOR
   
   #add-point:單身刪除詢問前
{<point name="delete.body.b_delete_ask"/>}
   #end add-point  
   
   #詢問是否確定刪除所選資料
   IF NOT cl_ask_del_detail() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   FOR li_idx = 1 TO g_oojo_d.getLength()
      IF g_oojo_d[li_idx].oojoent IS NOT NULL 
         AND g_oojo_d[li_idx].oojosite IS NOT NULL
         AND g_oojo_d[li_idx].oojo001 IS NOT NULL
         AND g_oojo_d[li_idx].oojo002 IS NOT NULL
         AND g_oojo_d[li_idx].oojo003 IS NOT NULL
         AND g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         
         #add-point:單身刪除前
{<point name="delete.body.b_delete" mark="Y"/>}
         #end add-point   
         
         DELETE FROM oojo_t
          WHERE oojoent = g_oojo_d[li_idx].oojoent 
                AND oojosite = g_oojo_d[li_idx].oojosite
                AND oojo001 = g_oojo_d[li_idx].oojo001
                AND oojo002 = g_oojo_d[li_idx].oojo002
                AND oojo003 = g_oojo_d[li_idx].oojo003
 
         #add-point:單身刪除中
{<point name="delete.body.m_delete"/>}
         #end add-point  
                
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "oojo_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
#            LET g_detail_cnt = g_detail_cnt-1
#            LET l_ac = li_idx

            #add-point:單身同步刪除前(同層table)
{<point name="delete.body.a_delete"/>}
            #end add-point
#            LET g_detail_idx = li_idx
#            INITIALIZE gs_keys TO NULL 
#            LET gs_keys[1] = g_oojo_d[g_detail_idx].oojosite
#            LET gs_keys[2] = g_oojo_d[g_detail_idx].oojo001
#            LET gs_keys[3] = g_oojo_d[g_detail_idx].oojo002
 
            #add-point:單身同步刪除中(同層table)
{<point name="delete.body.a_delete2"/>}
            #end add-point
            IF NOT aooi910_delete_b('oojo_t',gs_keys,"'1'") THEN
               CALL s_transaction_end('N','0')
               CLOSE aooi910_bcl
#               CANCEL DELETE
            END IF
            #add-point:單身同步刪除後(同層table)
{<point name="delete.body.a_delete3"/>}
            #end add-point
         END IF 
      END IF 
    
   END FOR
   CALL s_transaction_end('Y','0')
   
   LET g_detail_idx = li_detail_tmp
            
   #add-point:單身刪除後
{<point name="delete.after"/>}
   #end add-point  
   
   LET l_ac = li_ac_t
   
   #刷新資料
   CALL aooi910_b_fill(g_wc2)
            
END FUNCTION

{</section>}

{<section id="aooi910.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION aooi910_b_fill(p_wc2)              #BODY FILL UP
   DEFINE p_wc2    STRING
   #add-point:b_fill段define
{<point name="b_fill.define"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
{<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT UNIQUE t0.oojoent,t0.oojosite,t0.oojo001,t0.oojo002,t0.oojo003,
       t0.oojo004,t0.oojostus,t0.oojoownid,t0.oojoowndp,t0.oojocrtid,
       t0.oojocrtdp,t0.oojocrtdt,t0.oojomodid,t0.oojomoddt FROM oojo_t t0",
               "",
#                              " LEFT JOIN gzzal_t t1 ON t1.gzzal001=t0.oojo001 AND t1.gzzal002='"||g_dlang||"' ",

                " WHERE t0.oojoent= ? AND t0.oojosite='ALL' AND (",p_wc2,") "
    
   LET g_sql = g_sql, cl_sql_add_filter("oojo_t"),
                      " ORDER BY t0.oojo001,t0.oojo002"
   
   #add-point:b_fill段sql之後
{<point name="b_fill.sql_after"/>}
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"oojo_t")            #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE aooi910_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR aooi910_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_oojo_d.clear()
   CALL g_oojo2_d.clear()   
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_oojo_d[l_ac].oojoent,g_oojo_d[l_ac].oojosite,g_oojo_d[l_ac].oojo001,g_oojo_d[l_ac].oojo002,g_oojo_d[l_ac].oojo003,
       g_oojo_d[l_ac].oojo004,g_oojo_d[l_ac].oojostus,g_oojo2_d[l_ac].oojoownid,g_oojo2_d[l_ac].oojoowndp,g_oojo2_d[l_ac].oojocrtid,
       g_oojo2_d[l_ac].oojocrtdp,g_oojo2_d[l_ac].oojocrtdt,g_oojo2_d[l_ac].oojomodid,g_oojo2_d[l_ac].oojomoddt
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
{<point name="b_fill.fill"/>}
      LET g_oojo_d[l_ac].oojo001_desc = aooi910_get_desc("oojo001",g_oojo_d[l_ac].oojo001,"")
      
      LET g_oojo_d[l_ac].oojo002_desc = aooi910_get_desc("oojo002",g_oojo_d[l_ac].oojo002,g_oojo_d[l_ac].oojo003)

      #end add-point
      
      CALL aooi910_detail_show()
 
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
         END IF
         EXIT FOREACH
      END IF
 
      LET l_ac = l_ac + 1
      
   END FOREACH
 
   LET g_error_show = 0
   
 
   
   CALL g_oojo_d.deleteElement(g_oojo_d.getLength())   
   CALL g_oojo2_d.deleteElement(g_oojo2_d.getLength())
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_oojo_d.getLength()
      LET g_oojo2_d[l_ac].oojoent = g_oojo_d[l_ac].oojoent 
      LET g_oojo2_d[l_ac].oojosite = g_oojo_d[l_ac].oojosite 
      LET g_oojo2_d[l_ac].oojo001 = g_oojo_d[l_ac].oojo001 
      LET g_oojo2_d[l_ac].oojo002 = g_oojo_d[l_ac].oojo002 
      LET g_oojo2_d[l_ac].oojo003 = g_oojo_d[l_ac].oojo003 
   END FOR
   
   IF g_cnt > g_oojo_d.getLength() THEN
      LET l_ac = g_oojo_d.getLength()
   ELSE
      LET l_ac = g_cnt
   END IF
   LET g_cnt = l_ac
 
   #add-point:b_fill段資料填充(其他單身)
{<point name="b_fill.others.fill"/>}
   #end add-point
   
   ERROR "" 
 
   LET g_detail_cnt = g_oojo_d.getLength()
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   
   CLOSE b_fill_curs
   FREE aooi910_pb
   
END FUNCTION

{</section>}

{<section id="aooi910.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION aooi910_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
{<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " oojosite = 'default' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " oojo001 = '", g_argv[02], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " oojo002 = '", g_argv[03], "' AND "
   END IF
   
   #add-point:default_search段after sql
{<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
      #預設查詢條件
      LET g_wc2 = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc2) THEN
         LET g_wc2 = " 1=1"
      END IF
   END IF
 
END FUNCTION

{</section>}

{<section id="aooi910.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION aooi910_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
{<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "oojo_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> 'oojo_t' THEN
   
      #add-point:delete_b段刪除前
{<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
#      DELETE FROM oojo_t
#       WHERE oojoent = g_enterprise AND
#         oojosite = ps_keys_bak[1] AND oojo001 = ps_keys_bak[2] AND oojo002 = ps_keys_bak[3]
 
      #add-point:delete_b段刪除中
{<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
      END IF
      
      #add-point:delete_b段刪除後
{<point name="delete_b.a_delete"/>}
      #end add-point
      
   END IF
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="aooi910.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION aooi910_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
{<point name="insert_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   #LET ls_group = "oojo_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
{<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point
      INSERT INTO oojo_t
                  (oojoent,oojosite,oojo001,oojo002,oojo003,
                   oojo004,oojostus,oojoownid,oojoowndp,oojocrtid,oojocrtdp,oojocrtdt,oojomodid,oojomoddt)
            VALUES(ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],
                   g_oojo_d[l_ac].oojo004,g_oojo_d[l_ac].oojostus,g_oojo2_d[l_ac].oojoownid,g_oojo2_d[l_ac].oojoowndp,
                   g_oojo2_d[l_ac].oojocrtid,g_oojo2_d[l_ac].oojocrtdp,g_oojo2_d[l_ac].oojocrtdt,g_oojo2_d[l_ac].oojomodid,g_oojo2_d[l_ac].oojomoddt)
      #add-point:insert_b段新增中
{<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "oojo_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      #add-point:insert_b段新增後
{<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION

{</section>}

{<section id="aooi910.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION aooi910_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
{<point name="update_b.define"/>}
   #end add-point     
   
   #比對新舊值, 判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #若key無變動, 不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #若key有變動, 則連動其他table的資料   
   #判斷是否是同一群組的table
   LET ls_group = "oojo_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "oojo_t" THEN
      #add-point:update_b段修改前
{<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE oojo_t 
         SET (oojoent,oojosite,oojo001,oojo002,oojo003,oojo004,
              oojoownid,oojoowndp,oojocrtid,oojocrtdp,oojocrtdt,oojomodid,oojomoddt) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],
              g_oojo_d[l_ac].oojo004,g_oojo2_d[l_ac].oojoownid,g_oojo2_d[l_ac].oojoowndp,g_oojo2_d[l_ac].oojocrtid, 
              g_oojo2_d[l_ac].oojocrtdp,g_oojo2_d[l_ac].oojocrtdt,g_oojo2_d[l_ac].oojomodid,g_oojo2_d[l_ac].oojomoddt)

         WHERE oojoent = ps_keys_bak[1] AND oojosite = ps_keys_bak[2] 
           AND oojo001 = ps_keys_bak[3] AND oojo002 = ps_keys_bak[4] 
           AND oojo003 = ps_keys_bak[5]
      #add-point:update_b段修改中
{<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "oojo_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "oojo_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
         
      END CASE
      #add-point:update_b段修改後
{<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION

{</section>}

{<section id="aooi910.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION aooi910_lock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
{<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aooi910_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "oojo_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aooi910_bcl USING g_oojo_d[g_detail_idx].oojoent,g_oojo_d[g_detail_idx].oojosite,
                             g_oojo_d[g_detail_idx].oojo001,g_oojo_d[g_detail_idx].oojo002,
                             g_oojo_d[g_detail_idx].oojo003
                                       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aooi910_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         RETURN FALSE
      END IF
   
   END IF

   RETURN TRUE
END FUNCTION

{</section>}

{<section id="aooi910.set_pk_array" >}
   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aooi910_set_pk_array()
   #add-point:set_pk_array段define
{<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
{<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_oojo2_d[l_ac].oojoent
   LET g_pk_array[1].column = 'oojoent'
   LET g_pk_array[2].values = g_oojo2_d[l_ac].oojosite
   LET g_pk_array[2].column = 'oojosite'
   LET g_pk_array[3].values = g_oojo_d[l_ac].oojo001
   LET g_pk_array[3].column = 'oojo001'
   LET g_pk_array[4].values = g_oojo_d[l_ac].oojo002
   LET g_pk_array[4].column = 'oojo002'
   LET g_pk_array[5].values = g_oojo_d[l_ac].oojo003
   LET g_pk_array[5].column = 'oojo003'
   
   #add-point:set_pk_array段之後
{<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 


{</section>}

