<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aooi270" std_prog="aooi270" erpver="1.0" module="AOO" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="construct.c.page1.oocu001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oocu001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocu001  #顯示到畫面上
            NEXT FIELD oocu001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.oocucrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocucrtdp  #顯示到畫面上
            NEXT FIELD oocucrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.oocucrtid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocucrtid  #顯示到畫面上
            NEXT FIELD oocucrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.oocumodid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocumodid  #顯示到畫面上
            NEXT FIELD oocumodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.oocuowndp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocuowndp  #顯示到畫面上
            NEXT FIELD oocuowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.oocuownid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocuownid  #顯示到畫面上
            NEXT FIELD oocuownid                     #返回原欄位
    

]]>
  </point>
  <point name="detail_show.body2.reference" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocu2_d[l_ac].oocuownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_oocu2_d[l_ac].oocuownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_oocu2_d[l_ac].oocuownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocu2_d[l_ac].oocuowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_oocu2_d[l_ac].oocuowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_oocu2_d[l_ac].oocuowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocu2_d[l_ac].oocucrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_oocu2_d[l_ac].oocucrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_oocu2_d[l_ac].oocucrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocu2_d[l_ac].oocucrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_oocu2_d[l_ac].oocucrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_oocu2_d[l_ac].oocucrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocu2_d[l_ac].oocumodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_oocu2_d[l_ac].oocumodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_oocu2_d[l_ac].oocumodid_desc
]]>
  </point>
  <point name="detail_show.reference" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_oocu_d[l_ac].oocu001
   CALL ap_ref_array2(g_ref_fields," SELECT oocul003,oocul004,oocul005 FROM oocul_t WHERE ooculent = '"||g_enterprise||"' AND oocul001 = ? AND oocul002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_oocu_d[l_ac].oocul003 = g_rtn_fields[1] 
   LET g_oocu_d[l_ac].oocul004 = g_rtn_fields[2] 
   LET g_oocu_d[l_ac].oocul005 = g_rtn_fields[3] 
   DISPLAY BY NAME g_oocu_d[l_ac].oocul003,g_oocu_d[l_ac].oocul004,g_oocu_d[l_ac].oocul005]]>
  </point>
  <point name="input.a.page1.oocu001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_oocu_d[g_detail_idx].oocu001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_oocu_d[g_detail_idx].oocu001 != g_oocu_d_t.oocu001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM oocu_t WHERE "||"oocuent = '" ||g_enterprise|| "' AND "||"oocu001 = '"||g_oocu_d[g_detail_idx].oocu001 ||"'",'std-00004',0) THEN 
                     LET g_oocu_d[l_ac].oocu001 = g_oocu_d_t.oocu001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.oocu003" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_oocu_d[l_ac].oocu003) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page1.oocu004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_oocu_d[l_ac].oocu004) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.oocu001_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_oocu2_d[g_detail_idx].oocu001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_oocu2_d[g_detail_idx].oocu001 != g_oocu2_d_t.oocu001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM oocu_t WHERE "||"oocuent = '" ||g_enterprise|| "' AND "||"oocu001 = '"||g_oocu2_d[g_detail_idx].oocu001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.detail_input.page1.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF  NOT cl_null(g_oocu_d[l_ac].oocu001) THEN 
                   CALL n_oocul(g_oocu_d[l_ac].oocu001)
                   INITIALIZE g_ref_fields TO NULL 
                   LET g_ref_fields[1] = g_oocu_d[l_ac].oocu001
                   CALL ap_ref_array2(g_ref_fields," SELECT oocul003,oocul004,oocul005 FROM oocul_t WHERE ooculent = '"||g_enterprise||"' AND oocul001 = ? AND oocul002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
                   LET g_oocu_d[l_ac].oocul003 = g_rtn_fields[1] 
                   LET g_oocu_d[l_ac].oocul004 = g_rtn_fields[2]
                   LET g_oocu_d[l_ac].oocul005 = g_rtn_fields[3]                   
                END IF]]>
  </point>
  <section id="aooi270.b_fill" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aooi270_b_fill(p_wc2)              #BODY FILL UP
   DEFINE p_wc2           STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE oocustus,oocu001,'','','',oocu002,oocu003,oocu004,oocu001,oocuownid,'', 
       oocuowndp,'',oocucrtid,'',oocucrtdp,'',oocucrtdt,oocumodid,'',oocumoddt FROM oocu_t",
               " LEFT JOIN oocul_t ON oocu001 = oocul001 AND oocul002 = '",g_lang,"'",
               " WHERE oocuent= ? AND 1=1 AND ", p_wc2 
    
   LET g_sql = g_sql, #,cl_get_extra_cond('zzuser', 'zzgrup') 
                      " ORDER BY oocu_t.oocu001"
  
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
  
   PREPARE aooi270_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR aooi270_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_oocu_d.clear()
   CALL g_oocu2_d.clear()   
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_oocu_d[l_ac].oocustus,g_oocu_d[l_ac].oocu001,g_oocu_d[l_ac].oocul003,g_oocu_d[l_ac].oocul004, 
       g_oocu_d[l_ac].oocul005,g_oocu_d[l_ac].oocu002,g_oocu_d[l_ac].oocu003,g_oocu_d[l_ac].oocu004, 
       g_oocu2_d[l_ac].oocu001,g_oocu2_d[l_ac].oocuownid,g_oocu2_d[l_ac].oocuownid_desc,g_oocu2_d[l_ac].oocuowndp, 
       g_oocu2_d[l_ac].oocuowndp_desc,g_oocu2_d[l_ac].oocucrtid,g_oocu2_d[l_ac].oocucrtid_desc,g_oocu2_d[l_ac].oocucrtdp, 
       g_oocu2_d[l_ac].oocucrtdp_desc,g_oocu2_d[l_ac].oocucrtdt,g_oocu2_d[l_ac].oocumodid,g_oocu2_d[l_ac].oocumodid_desc, 
       g_oocu2_d[l_ac].oocumoddt
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL aooi270_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec THEN
      IF g_error_show = 1 THEN
         CALL cl_err("oocu_t",9035,1)
      END IF
   END IF 
   LET g_error_show = 0
   
 
  
   
   CALL g_oocu_d.deleteElement(g_oocu_d.getLength())   
   CALL g_oocu2_d.deleteElement(g_oocu2_d.getLength())
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_oocu_d.getLength()
      LET g_oocu2_d[l_ac].oocu001 = g_oocu_d[l_ac].oocu001 
 
   END FOR
   
   IF g_cnt > g_oocu_d.getLength() THEN
      LET l_ac = g_oocu_d.getLength()
   ELSE
      LET l_ac = g_cnt
   END IF
   LET g_cnt = l_ac
 
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   LET g_detail_cnt = g_oocu_d.getLength() 
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   
   CLOSE b_fill_curs
   FREE aooi270_pb
   
END FUNCTION
]]>
  </section>
  <section id="aooi270.default_search" ver="1" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aooi270_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " oocu001 = '", g_argv[1], "' AND "
   END IF
   
 
 
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aooi270.delete" ver="1" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aooi270_delete()
   DEFINE li_ac LIKE type_t.num5
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point 
   
   IF NOT cl_ask_delete() THEN
      LET INT_FLAG = 1 #不刪除
   ELSE
      LET INT_FLAG = 0 #要刪除
   END IF
   
   LET li_ac = ARR_CURR()
   
   CALL s_transaction_begin()  
 
   #add-point:delete段刪除前
   {<point name="delete.b_delete" mark="Y"/>}
   #end add-point 
   DELETE FROM oocu_t 
         WHERE oocu001 = g_oocu_d[li_ac].oocu001
 
   #add-point:delete段刪除中
   {<point name="delete.m_delete"/>}
   #end add-point 
   IF SQLCA.sqlcode THEN
      CALL cl_err("oocu_t",SQLCA.sqlcode,1) 
      CALL s_transaction_end('N','0')
   ELSE
      CALL s_transaction_end('Y','0')
   END IF
   #add-point:delete段刪除後
   {<point name="delete.a_delete"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="aooi270.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aooi270_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "oocu_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
   
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
      DELETE FROM oocu_t
       WHERE oocuent = g_enterprise AND
         oocu001 = ps_keys_bak[1]
 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="aooi270.description" ver="11" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000010
#+ 
#+ Filename...: aooi270
#+ Description: 材積重維護作業
#+ Creator....: 02587(2014/05/19)
#+ Modifier...: 02587(2014/05/19)
#+ Buildtype..: 應用 i02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="aooi270.detail_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION aooi270_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
   #帶出公用欄位reference值page2
   #此段落由子樣板a12產生
      #LET g_oocu2_d[l_ac].oocuownid_desc = cl_get_username(g_oocu2_d[l_ac].oocuownid)
      #LET g_oocu2_d[l_ac].oocuowndp_desc = cl_get_deptname(g_oocu2_d[l_ac].oocuowndp)
      #LET g_oocu2_d[l_ac].oocucrtid_desc = cl_get_username(g_oocu2_d[l_ac].oocucrtid)
      #LET g_oocu2_d[l_ac].oocucrtdp_desc = cl_get_deptname(g_oocu2_d[l_ac].oocucrtdp)
      #LET g_oocu2_d[l_ac].oocumodid_desc = cl_get_username(g_oocu2_d[l_ac].oocumodid)
      ##LET .oocucnfid_desc = cl_get_deptname(.oocucnfid)
      ##LET .oocupstid_desc = cl_get_deptname(.oocupstid)
      
 
 
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
   #add-point:show段單身reference
   {<point name="detail_show.body2.reference"/>}
   #end add-point
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="aooi270.global" ver="1" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_oocu_d RECORD
       oocustus LIKE oocu_t.oocustus, 
   oocu001 LIKE oocu_t.oocu001, 
   oocul003 LIKE oocul_t.oocul003, 
   oocul004 LIKE oocul_t.oocul004, 
   oocul005 LIKE oocul_t.oocul005, 
   oocu002 LIKE oocu_t.oocu002, 
   oocu003 LIKE oocu_t.oocu003, 
   oocu004 LIKE oocu_t.oocu004
       END RECORD
PRIVATE TYPE type_g_oocu2_d RECORD
       oocu001 LIKE oocu_t.oocu001, 
   oocuownid LIKE oocu_t.oocuownid, 
   oocuownid_desc LIKE type_t.chr500, 
   oocuowndp LIKE oocu_t.oocuowndp, 
   oocuowndp_desc LIKE type_t.chr500, 
   oocucrtid LIKE oocu_t.oocucrtid, 
   oocucrtid_desc LIKE type_t.chr500, 
   oocucrtdp LIKE oocu_t.oocucrtdp, 
   oocucrtdp_desc LIKE type_t.chr500, 
   oocucrtdt DATETIME YEAR TO SECOND, 
   oocumodid LIKE oocu_t.oocumodid, 
   oocumodid_desc LIKE type_t.chr500, 
   oocumoddt DATETIME YEAR TO SECOND
       END RECORD
 
 
DEFINE g_detail_multi_table_t    RECORD
      oocul001 LIKE oocul_t.oocul001,
      oocul002 LIKE oocul_t.oocul002,
      oocul003 LIKE oocul_t.oocul003,
      oocul004 LIKE oocul_t.oocul004,
      oocul005 LIKE oocul_t.oocul005
      END RECORD
 
#模組變數(Module Variables)
DEFINE g_oocu_d          DYNAMIC ARRAY OF type_g_oocu_d
DEFINE g_oocu_d_t        type_g_oocu_d
DEFINE g_oocu2_d   DYNAMIC ARRAY OF type_g_oocu2_d
DEFINE g_oocu2_d_t type_g_oocu2_d
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aooi270.init" ver="1" status="" src="s">
    <![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION aooi270_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   
      CALL cl_set_combo_scc('oocu002','62') 
 
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL aooi270_default_search()
   
END FUNCTION
]]>
  </section>
  <section id="aooi270.insert" ver="1" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aooi270_insert()
   DEFINE li_ac LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="insert.define"/>}
   #end add-point 
   
   #輸入前動作  
   LET li_ac = l_ac 
   LET l_ac = 1   
   LET g_before_input_done = FALSE                                        
   CALL aooi270_set_entry_b("a")  
   
   CALL aooi270_set_no_entry_b("a")                                          
   LET g_before_input_done = TRUE                                            
   
   #append欄位         
      
 
      
 
   
   #add-point:insert段before insert
   {<point name="insert.before_insert"/>}
   #end add-point  
 
   #資料輸入
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM) 
      INPUT g_oocu_d[1].* FROM s_detail1[1].*
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         BEFORE INPUT
         
      END INPUT
      
 
      
      BEFORE DIALOG 
   
   END DIALOG
   
   #輸入後動作
   IF INT_FLAG THEN
      CALL cl_err("",9001,0)
      LET INT_FLAG = 1
      RETURN
   END IF
   
   CALL s_transaction_begin()                    
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="aooi270.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aooi270_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "oocu_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO oocu_t
                  (oocuent,
                   oocu001
                   ,oocustus,oocu002,oocu003,oocu004,oocuownid,oocuowndp,oocucrtid,oocucrtdp,oocucrtdt,oocumodid,oocumoddt) 
            VALUES(g_enterprise,
                   ps_keys[1]
                   ,g_oocu_d[l_ac].oocustus,g_oocu_d[l_ac].oocu002,g_oocu_d[l_ac].oocu003,g_oocu_d[l_ac].oocu004, 
                       g_oocu2_d[l_ac].oocuownid,g_oocu2_d[l_ac].oocuowndp,g_oocu2_d[l_ac].oocucrtid, 
                       g_oocu2_d[l_ac].oocucrtdp,g_oocu2_d[l_ac].oocucrtdt,g_oocu2_d[l_ac].oocumodid, 
                       g_oocu2_d[l_ac].oocumoddt)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("oocu_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="aooi270.link_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動單身idx
PRIVATE FUNCTION aooi270_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define
   {<point name="link_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
 
   END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="aooi270.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aooi270_lock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aooi270_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "oocu_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aooi270_bcl USING g_enterprise,
                                       g_oocu_d[g_detail_idx].oocu001
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("aooi270_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aooi270.main" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aoo","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
 
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_aooi270 WITH FORM cl_ap_formpath("aoo",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aooi270_init()   
 
      #進入選單 Menu (="N")
      CALL aooi270_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aooi270
      
   END IF 
   
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="aooi270.modify" ver="1" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aooi270_modify()
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
 
   #add-point:modify段define_sql
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT oocustus,oocu001,'','','',oocu002,oocu003,oocu004,'',oocuownid,'',oocuowndp, 
       '',oocucrtid,'',oocucrtdp,'',oocucrtdt,oocumodid,'',oocumoddt FROM oocu_t WHERE oocuent=? AND  
       oocu001=? FOR UPDATE"
   #add-point:modify段define_sql
   {<point name="modify.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE aooi270_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
   
 
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_oocu_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.detail_input.page1.update_item" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_oocu_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aooi270_b_fill(g_wc2)
            LET g_detail_cnt = g_oocu_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = g_detail_idx 
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_oocu_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_oocu_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_oocu_d[l_ac].oocu001 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_oocu_d_t.* = g_oocu_d[l_ac].*  #BACKUP
               IF NOT aooi270_lock_b("oocu_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aooi270_bcl INTO g_oocu_d[l_ac].oocustus,g_oocu_d[l_ac].oocu001,g_oocu_d[l_ac].oocul003, 
                      g_oocu_d[l_ac].oocul004,g_oocu_d[l_ac].oocul005,g_oocu_d[l_ac].oocu002,g_oocu_d[l_ac].oocu003, 
                      g_oocu_d[l_ac].oocu004,g_oocu2_d[l_ac].oocu001,g_oocu2_d[l_ac].oocuownid,g_oocu2_d[l_ac].oocuownid_desc, 
                      g_oocu2_d[l_ac].oocuowndp,g_oocu2_d[l_ac].oocuowndp_desc,g_oocu2_d[l_ac].oocucrtid, 
                      g_oocu2_d[l_ac].oocucrtid_desc,g_oocu2_d[l_ac].oocucrtdp,g_oocu2_d[l_ac].oocucrtdp_desc, 
                      g_oocu2_d[l_ac].oocucrtdt,g_oocu2_d[l_ac].oocumodid,g_oocu2_d[l_ac].oocumodid_desc, 
                      g_oocu2_d[l_ac].oocumoddt
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_oocu_d_t.oocu001,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL aooi270_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            LET g_detail_multi_table_t.oocul001 = g_oocu_d[l_ac].oocu001
LET g_detail_multi_table_t.oocul002 = g_dlang
LET g_detail_multi_table_t.oocul003 = g_oocu_d[l_ac].oocul003
LET g_detail_multi_table_t.oocul004 = g_oocu_d[l_ac].oocul004
LET g_detail_multi_table_t.oocul005 = g_oocu_d[l_ac].oocul005
 
            #其他table進行lock
                        INITIALIZE l_var_keys TO NULL 
            INITIALIZE l_field_keys TO NULL 
            LET l_field_keys[01] = 'oocul001'
            LET l_var_keys[01] = g_oocu_d[l_ac].oocu001
            LET l_field_keys[02] = 'oocul002'
            LET l_var_keys[02] = g_dlang
            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'oocul_t') THEN
               RETURN 
            END IF 
 
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_oocu_d_t.* TO NULL
            INITIALIZE g_oocu_d[l_ac].* TO NULL 
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_oocu2_d[l_ac].oocuownid = g_user
      LET g_oocu2_d[l_ac].oocuowndp = g_dept
      LET g_oocu2_d[l_ac].oocucrtid = g_user
      LET g_oocu2_d[l_ac].oocucrtdp = g_dept 
      LET g_oocu2_d[l_ac].oocucrtdt = cl_get_current()
      LET g_oocu2_d[l_ac].oocumodid = ""
      LET g_oocu2_d[l_ac].oocumoddt = ""
      LET g_oocu_d[l_ac].oocustus = ""
 
 
                  LET g_oocu_d[l_ac].oocustus = "Y"
      LET g_oocu_d[l_ac].oocu002 = "1"
 
 
            LET g_oocu_d_t.* = g_oocu_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aooi270_set_entry_b("a")
            CALL aooi270_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_oocu_d[li_reproduce_target].* = g_oocu_d[li_reproduce].*
               LET g_oocu2_d[li_reproduce_target].* = g_oocu2_d[li_reproduce].*
 
               LET g_oocu_d[g_oocu_d.getLength()].oocu001 = NULL
 
            END IF
            LET g_detail_multi_table_t.oocul001 = g_oocu_d[l_ac].oocu001
LET g_detail_multi_table_t.oocul002 = g_dlang
LET g_detail_multi_table_t.oocul003 = g_oocu_d[l_ac].oocul003
LET g_detail_multi_table_t.oocul004 = g_oocu_d[l_ac].oocul004
LET g_detail_multi_table_t.oocul005 = g_oocu_d[l_ac].oocul005
 
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM oocu_t 
             WHERE oocuent = g_enterprise AND oocu001 = g_oocu_d[l_ac].oocu001
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_oocu_d[g_detail_idx].oocu001
               CALL aooi270_insert_b('oocu_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_oocu_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("oocu_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aooi270_b_fill(g_wc2)
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_oocu_d[l_ac].oocu001 = g_detail_multi_table_t.oocul001 AND
         g_oocu_d[l_ac].oocul003 = g_detail_multi_table_t.oocul003 AND
         g_oocu_d[l_ac].oocul004 = g_detail_multi_table_t.oocul004 AND
         g_oocu_d[l_ac].oocul005 = g_detail_multi_table_t.oocul005 THEN
         ELSE 
            LET l_var_keys[01] = g_oocu_d[l_ac].oocu001
            LET l_field_keys[01] = 'oocul001'
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'oocul002'
            LET l_vars[01] = g_oocu_d[l_ac].oocul003
            LET l_fields[01] = 'oocul003'
            LET l_vars[02] = g_oocu_d[l_ac].oocul004
            LET l_fields[02] = 'oocul004'
            LET l_vars[03] = g_oocu_d[l_ac].oocul005
            LET l_fields[03] = 'oocul005'
            LET l_vars[04] = g_enterprise 
            LET l_fields[04] = 'ooculent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.oocul001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.oocul002
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'oocul_t')
         END IF 
 
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (oocu001 = '", g_oocu_d[l_ac].oocu001, "' "
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_oocu_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_oocu_d.deleteElement(l_ac)
               NEXT FIELD oocu001
            END IF
            IF g_oocu_d[l_ac].oocu001 IS NOT NULL
 
               THEN     
            
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM oocu_t
                WHERE oocuent = g_enterprise AND 
                      oocu001 = g_oocu_d_t.oocu001
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("oocu_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'oocul001'
                  LET l_field_keys[02] = 'oocul002'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.oocul001
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.oocul002
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'oocul_t')
 
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aooi270_bcl
               LET l_count = g_oocu_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_oocu_d[g_detail_idx].oocu001
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aooi270_delete_b('oocu_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<oocustus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocustus
            #add-point:BEFORE FIELD oocustus
            {<point name="input.b.page1.oocustus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocustus
            
            #add-point:AFTER FIELD oocustus
            {<point name="input.a.page1.oocustus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocustus
            #add-point:ON CHANGE oocustus
            {<point name="input.g.page1.oocustus" />}
            #END add-point
 
         #----<<oocu001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocu001
            #add-point:BEFORE FIELD oocu001
            {<point name="input.b.page1.oocu001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocu001
            
            #add-point:AFTER FIELD oocu001
            {<point name="input.a.page1.oocu001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocu001
            #add-point:ON CHANGE oocu001
            {<point name="input.g.page1.oocu001" />}
            #END add-point
 
         #----<<oocul003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocul003
            #add-point:BEFORE FIELD oocul003
            {<point name="input.b.page1.oocul003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocul003
            
            #add-point:AFTER FIELD oocul003
            {<point name="input.a.page1.oocul003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocul003
            #add-point:ON CHANGE oocul003
            {<point name="input.g.page1.oocul003" />}
            #END add-point
 
         #----<<oocul004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocul004
            #add-point:BEFORE FIELD oocul004
            {<point name="input.b.page1.oocul004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocul004
            
            #add-point:AFTER FIELD oocul004
            {<point name="input.a.page1.oocul004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocul004
            #add-point:ON CHANGE oocul004
            {<point name="input.g.page1.oocul004" />}
            #END add-point
 
         #----<<oocul005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocul005
            #add-point:BEFORE FIELD oocul005
            {<point name="input.b.page1.oocul005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocul005
            
            #add-point:AFTER FIELD oocul005
            {<point name="input.a.page1.oocul005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocul005
            #add-point:ON CHANGE oocul005
            {<point name="input.g.page1.oocul005" />}
            #END add-point
 
         #----<<oocu002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocu002
            #add-point:BEFORE FIELD oocu002
            {<point name="input.b.page1.oocu002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocu002
            
            #add-point:AFTER FIELD oocu002
            {<point name="input.a.page1.oocu002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocu002
            #add-point:ON CHANGE oocu002
            {<point name="input.g.page1.oocu002" />}
            #END add-point
 
         #----<<oocu003>>----
         #此段落由子樣板a02產生
         AFTER FIELD oocu003
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_oocu_d[l_ac].oocu003,"0","0","","","azz-00079",1) THEN
               NEXT FIELD oocu003
            END IF
 
 
            #add-point:AFTER FIELD oocu003
            {<point name="input.a.page1.oocu003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocu003
            #add-point:BEFORE FIELD oocu003
            {<point name="input.b.page1.oocu003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE oocu003
            #add-point:ON CHANGE oocu003
            {<point name="input.g.page1.oocu003" />}
            #END add-point
 
         #----<<oocu004>>----
         #此段落由子樣板a02產生
         AFTER FIELD oocu004
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_oocu_d[l_ac].oocu004,"0","0","","","azz-00079",1) THEN
               NEXT FIELD oocu004
            END IF
 
 
            #add-point:AFTER FIELD oocu004
            {<point name="input.a.page1.oocu004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocu004
            #add-point:BEFORE FIELD oocu004
            {<point name="input.b.page1.oocu004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE oocu004
            #add-point:ON CHANGE oocu004
            {<point name="input.g.page1.oocu004" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<oocustus>>----
         #Ctrlp:input.c.page1.oocustus
         ON ACTION controlp INFIELD oocustus
            #add-point:ON ACTION controlp INFIELD oocustus
            {<point name="input.c.page1.oocustus" />}
            #END add-point
 
         #----<<oocu001>>----
         #Ctrlp:input.c.page1.oocu001
         ON ACTION controlp INFIELD oocu001
            #add-point:ON ACTION controlp INFIELD oocu001
            {<point name="input.c.page1.oocu001" />}
            #END add-point
 
         #----<<oocul003>>----
         #Ctrlp:input.c.page1.oocul003
         ON ACTION controlp INFIELD oocul003
            #add-point:ON ACTION controlp INFIELD oocul003
            {<point name="input.c.page1.oocul003" />}
            #END add-point
 
         #----<<oocul004>>----
         #Ctrlp:input.c.page1.oocul004
         ON ACTION controlp INFIELD oocul004
            #add-point:ON ACTION controlp INFIELD oocul004
            {<point name="input.c.page1.oocul004" />}
            #END add-point
 
         #----<<oocul005>>----
         #Ctrlp:input.c.page1.oocul005
         ON ACTION controlp INFIELD oocul005
            #add-point:ON ACTION controlp INFIELD oocul005
            {<point name="input.c.page1.oocul005" />}
            #END add-point
 
         #----<<oocu002>>----
         #Ctrlp:input.c.page1.oocu002
         ON ACTION controlp INFIELD oocu002
            #add-point:ON ACTION controlp INFIELD oocu002
            {<point name="input.c.page1.oocu002" />}
            #END add-point
 
         #----<<oocu003>>----
         #Ctrlp:input.c.page1.oocu003
         ON ACTION controlp INFIELD oocu003
            #add-point:ON ACTION controlp INFIELD oocu003
            {<point name="input.c.page1.oocu003" />}
            #END add-point
 
         #----<<oocu004>>----
         #Ctrlp:input.c.page1.oocu004
         ON ACTION controlp INFIELD oocu004
            #add-point:ON ACTION controlp INFIELD oocu004
            {<point name="input.c.page1.oocu004" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_oocu_d[l_ac].* = g_oocu_d_t.*
               CLOSE aooi270_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_oocu_d[l_ac].oocu001,-263,1)
               LET g_oocu_d[l_ac].* = g_oocu_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               LET g_oocu2_d[l_ac].oocumodid = g_user 
LET g_oocu2_d[l_ac].oocumoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE oocu_t SET (oocustus,oocu001,oocu002,oocu003,oocu004,oocuownid,oocuowndp,oocucrtid, 
                   oocucrtdp,oocucrtdt,oocumodid,oocumoddt) = (g_oocu_d[l_ac].oocustus,g_oocu_d[l_ac].oocu001, 
                   g_oocu_d[l_ac].oocu002,g_oocu_d[l_ac].oocu003,g_oocu_d[l_ac].oocu004,g_oocu2_d[l_ac].oocuownid, 
                   g_oocu2_d[l_ac].oocuowndp,g_oocu2_d[l_ac].oocucrtid,g_oocu2_d[l_ac].oocucrtdp,g_oocu2_d[l_ac].oocucrtdt, 
                   g_oocu2_d[l_ac].oocumodid,g_oocu2_d[l_ac].oocumoddt)
                WHERE oocuent = g_enterprise AND
                  oocu001 = g_oocu_d_t.oocu001 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("oocu_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("oocu_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_oocu_d[g_detail_idx].oocu001
               LET gs_keys_bak[1] = g_oocu_d_t.oocu001
               CALL aooi270_update_b('oocu_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_oocu_d[l_ac].oocu001 = g_detail_multi_table_t.oocul001 AND
         g_oocu_d[l_ac].oocul003 = g_detail_multi_table_t.oocul003 AND
         g_oocu_d[l_ac].oocul004 = g_detail_multi_table_t.oocul004 AND
         g_oocu_d[l_ac].oocul005 = g_detail_multi_table_t.oocul005 THEN
         ELSE 
            LET l_var_keys[01] = g_oocu_d[l_ac].oocu001
            LET l_field_keys[01] = 'oocul001'
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'oocul002'
            LET l_vars[01] = g_oocu_d[l_ac].oocul003
            LET l_fields[01] = 'oocul003'
            LET l_vars[02] = g_oocu_d[l_ac].oocul004
            LET l_fields[02] = 'oocul004'
            LET l_vars[03] = g_oocu_d[l_ac].oocul005
            LET l_fields[03] = 'oocul005'
            LET l_vars[04] = g_enterprise 
            LET l_fields[04] = 'ooculent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.oocul001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.oocul002
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'oocul_t')
         END IF 
 
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL aooi270_unlock_b("oocu_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            CALL cl_multitable_unlock()
             #add-point:單身after row
            {<point name="input.body.a_row"/>}
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_oocu_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_oocu_d.getLength()+1
            
      END INPUT
      
 
      
      DISPLAY ARRAY g_oocu2_d TO s_detail2.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL aooi270_b_fill(g_wc2)
            CALL FGL_SET_ARR_CURR(g_detail_idx)
      
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            LET g_temp_idx = l_ac
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL cl_show_fld_cont() 
            
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
            
      END DISPLAY
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD oocustus
            WHEN "s_detail2"
               NEXT FIELD oocu001_2
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE aooi270_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
  </section>
  <section id="aooi270.modify_detail_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION aooi270_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "oocustus"
      WHEN "s_detail2"
         LET ls_return = "oocu001_2"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="aooi270.other_dialog" ver="1" status="" src="s">
    <![CDATA[ 
]]>
  </section>
  <section id="aooi270.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aooi270.query" ver="1" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aooi270_query()
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_oocu_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON oocustus,oocu001,oocul003,oocul004,oocul005,oocu002,oocu003,oocu004,oocuownid, 
          oocuowndp,oocucrtid,oocucrtdp,oocucrtdt,oocumodid,oocumoddt 
 
         FROM s_detail1[1].oocustus,s_detail1[1].oocu001,s_detail1[1].oocul003,s_detail1[1].oocul004, 
             s_detail1[1].oocul005,s_detail1[1].oocu002,s_detail1[1].oocu003,s_detail1[1].oocu004,s_detail2[1].oocuownid, 
             s_detail2[1].oocuowndp,s_detail2[1].oocucrtid,s_detail2[1].oocucrtdp,s_detail2[1].oocucrtdt, 
             s_detail2[1].oocumodid,s_detail2[1].oocumoddt 
      
         #此段落由子樣板a11產生
         ##----<<oocuownid>>----
         #ON ACTION controlp INFIELD oocuownid
         #   CALL q_common('','oocuownid',TRUE,FALSE,g_oocu2_d[1].oocuownid) RETURNING ls_return
         #   DISPLAY ls_return TO oocuownid
         #   NEXT FIELD oocuownid  
         #
         ##----<<oocuowndp>>----
         #ON ACTION controlp INFIELD oocuowndp
         #   CALL q_common('','oocuowndp',TRUE,FALSE,g_oocu2_d[1].oocuowndp) RETURNING ls_return
         #   DISPLAY ls_return TO oocuowndp
         #   NEXT FIELD oocuowndp
         #
         ##----<<oocucrtid>>----
         #ON ACTION controlp INFIELD oocucrtid
         #   CALL q_common('','oocucrtid',TRUE,FALSE,g_oocu2_d[1].oocucrtid) RETURNING ls_return
         #   DISPLAY ls_return TO oocucrtid
         #   NEXT FIELD oocucrtid
         #
         ##----<<oocucrtdp>>----
         #ON ACTION controlp INFIELD oocucrtdp
         #   CALL q_common('','oocucrtdp',TRUE,FALSE,g_oocu2_d[1].oocucrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO oocucrtdp
         #   NEXT FIELD oocucrtdp
         #
         ##----<<oocumodid>>----
         #ON ACTION controlp INFIELD oocumodid
         #   CALL q_common('','oocumodid',TRUE,FALSE,g_oocu2_d[1].oocumodid) RETURNING ls_return
         #   DISPLAY ls_return TO oocumodid
         #   NEXT FIELD oocumodid
         #
         ##----<<oocucnfid>>----
         ##ON ACTION controlp INFIELD oocucnfid
         ##   CALL q_common('','oocucnfid',TRUE,FALSE,.oocucnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO oocucnfid
         ##   NEXT FIELD oocucnfid
         #
         ##----<<oocupstid>>----
         ##ON ACTION controlp INFIELD oocupstid
         ##   CALL q_common('','oocupstid',TRUE,FALSE,.oocupstid) RETURNING ls_return
         ##   DISPLAY ls_return TO oocupstid
         ##   NEXT FIELD oocupstid
         
         ##----<<oocucrtdt>>----
         AFTER FIELD oocucrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<oocumoddt>>----
         AFTER FIELD oocumoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<oocucnfdt>>----
         #AFTER FIELD oocucnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<oocupstdt>>----
         #AFTER FIELD oocupstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
      
         #---------------------<  Detail: page1  >---------------------
         #----<<oocustus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocustus
            #add-point:BEFORE FIELD oocustus
            {<point name="query.b.page1.oocustus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocustus
            
            #add-point:AFTER FIELD oocustus
            {<point name="query.a.page1.oocustus" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oocustus
         ON ACTION controlp INFIELD oocustus
            #add-point:ON ACTION controlp INFIELD oocustus
            {<point name="query.c.page1.oocustus" />}
            #END add-point
 
         #----<<oocu001>>----
         #Ctrlp:construct.c.page1.oocu001
         ON ACTION controlp INFIELD oocu001
            #add-point:ON ACTION controlp INFIELD oocu001
            {<point name="construct.c.page1.oocu001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocu001
            #add-point:BEFORE FIELD oocu001
            {<point name="query.b.page1.oocu001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocu001
            
            #add-point:AFTER FIELD oocu001
            {<point name="query.a.page1.oocu001" />}
            #END add-point
            
 
         #----<<oocul003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocul003
            #add-point:BEFORE FIELD oocul003
            {<point name="query.b.page1.oocul003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocul003
            
            #add-point:AFTER FIELD oocul003
            {<point name="query.a.page1.oocul003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oocul003
         ON ACTION controlp INFIELD oocul003
            #add-point:ON ACTION controlp INFIELD oocul003
            {<point name="query.c.page1.oocul003" />}
            #END add-point
 
         #----<<oocul004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocul004
            #add-point:BEFORE FIELD oocul004
            {<point name="query.b.page1.oocul004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocul004
            
            #add-point:AFTER FIELD oocul004
            {<point name="query.a.page1.oocul004" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oocul004
         ON ACTION controlp INFIELD oocul004
            #add-point:ON ACTION controlp INFIELD oocul004
            {<point name="query.c.page1.oocul004" />}
            #END add-point
 
         #----<<oocul005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocul005
            #add-point:BEFORE FIELD oocul005
            {<point name="query.b.page1.oocul005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocul005
            
            #add-point:AFTER FIELD oocul005
            {<point name="query.a.page1.oocul005" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oocul005
         ON ACTION controlp INFIELD oocul005
            #add-point:ON ACTION controlp INFIELD oocul005
            {<point name="query.c.page1.oocul005" />}
            #END add-point
 
         #----<<oocu002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocu002
            #add-point:BEFORE FIELD oocu002
            {<point name="query.b.page1.oocu002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocu002
            
            #add-point:AFTER FIELD oocu002
            {<point name="query.a.page1.oocu002" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oocu002
         ON ACTION controlp INFIELD oocu002
            #add-point:ON ACTION controlp INFIELD oocu002
            {<point name="query.c.page1.oocu002" />}
            #END add-point
 
         #----<<oocu003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocu003
            #add-point:BEFORE FIELD oocu003
            {<point name="query.b.page1.oocu003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocu003
            
            #add-point:AFTER FIELD oocu003
            {<point name="query.a.page1.oocu003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oocu003
         ON ACTION controlp INFIELD oocu003
            #add-point:ON ACTION controlp INFIELD oocu003
            {<point name="query.c.page1.oocu003" />}
            #END add-point
 
         #----<<oocu004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocu004
            #add-point:BEFORE FIELD oocu004
            {<point name="query.b.page1.oocu004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocu004
            
            #add-point:AFTER FIELD oocu004
            {<point name="query.a.page1.oocu004" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oocu004
         ON ACTION controlp INFIELD oocu004
            #add-point:ON ACTION controlp INFIELD oocu004
            {<point name="query.c.page1.oocu004" />}
            #END add-point
 
  
         
         #---------------------<  Detail: page2  >---------------------
         #----<<oocuownid>>----
         #Ctrlp:construct.c.page2.oocuownid
         ON ACTION controlp INFIELD oocuownid
            #add-point:ON ACTION controlp INFIELD oocuownid
            {<point name="construct.c.page2.oocuownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocuownid
            #add-point:BEFORE FIELD oocuownid
            {<point name="query.b.page2.oocuownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocuownid
            
            #add-point:AFTER FIELD oocuownid
            {<point name="query.a.page2.oocuownid" />}
            #END add-point
            
 
         #----<<oocuownid_desc>>----
         #----<<oocuowndp>>----
         #Ctrlp:construct.c.page2.oocuowndp
         ON ACTION controlp INFIELD oocuowndp
            #add-point:ON ACTION controlp INFIELD oocuowndp
            {<point name="construct.c.page2.oocuowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocuowndp
            #add-point:BEFORE FIELD oocuowndp
            {<point name="query.b.page2.oocuowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocuowndp
            
            #add-point:AFTER FIELD oocuowndp
            {<point name="query.a.page2.oocuowndp" />}
            #END add-point
            
 
         #----<<oocuowndp_desc>>----
         #----<<oocucrtid>>----
         #Ctrlp:construct.c.page2.oocucrtid
         ON ACTION controlp INFIELD oocucrtid
            #add-point:ON ACTION controlp INFIELD oocucrtid
            {<point name="construct.c.page2.oocucrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocucrtid
            #add-point:BEFORE FIELD oocucrtid
            {<point name="query.b.page2.oocucrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocucrtid
            
            #add-point:AFTER FIELD oocucrtid
            {<point name="query.a.page2.oocucrtid" />}
            #END add-point
            
 
         #----<<oocucrtid_desc>>----
         #----<<oocucrtdp>>----
         #Ctrlp:construct.c.page2.oocucrtdp
         ON ACTION controlp INFIELD oocucrtdp
            #add-point:ON ACTION controlp INFIELD oocucrtdp
            {<point name="construct.c.page2.oocucrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocucrtdp
            #add-point:BEFORE FIELD oocucrtdp
            {<point name="query.b.page2.oocucrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocucrtdp
            
            #add-point:AFTER FIELD oocucrtdp
            {<point name="query.a.page2.oocucrtdp" />}
            #END add-point
            
 
         #----<<oocucrtdp_desc>>----
         #----<<oocucrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocucrtdt
            #add-point:BEFORE FIELD oocucrtdt
            {<point name="query.b.page2.oocucrtdt" />}
            #END add-point
 
         #----<<oocumodid>>----
         #Ctrlp:construct.c.page2.oocumodid
         ON ACTION controlp INFIELD oocumodid
            #add-point:ON ACTION controlp INFIELD oocumodid
            {<point name="construct.c.page2.oocumodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocumodid
            #add-point:BEFORE FIELD oocumodid
            {<point name="query.b.page2.oocumodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocumodid
            
            #add-point:AFTER FIELD oocumodid
            {<point name="query.a.page2.oocumodid" />}
            #END add-point
            
 
         #----<<oocumodid_desc>>----
         #----<<oocumoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocumoddt
            #add-point:BEFORE FIELD oocumoddt
            {<point name="query.b.page2.oocumoddt" />}
            #END add-point
 
  
 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
  
      BEFORE DIALOG 
         CALL cl_qbe_init()
         #add-point:query段before_dialog
         {<point name="query.before_dialog"/>}
         #end add-point 
      
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
      
      ON ACTION qbe_save
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF
    
   LET g_error_show = 1
   CALL aooi270_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
]]>
  </section>
  <section id="aooi270.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aooi270_set_entry_b(p_cmd)                                                  
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    
]]>
  </section>
  <section id="aooi270.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aooi270_set_no_entry_b(p_cmd)                                               
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point  
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  
]]>
  </section>
  <section id="aooi270.state_change" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="aooi270.ui_dialog" ver="2" status="" src="s">
    <![CDATA[#+ 功能選單 
PRIVATE FUNCTION aooi270_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL aooi270_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_oocu_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
               {<point name="ui_dialog.body.before_display" mark="Y"/>}
               #end add-point
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
               {<point name="ui_dialog.body.before_display2"/>}
               #end add-point
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row"/>}
               #end add-point                        
      
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
         DISPLAY ARRAY g_oocu2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
               {<point name="ui_dialog.body2.before_display" mark="Y"/>}
               #end add-point
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
               {<point name="ui_dialog.body2.before_display2"/>}
               #end add-point
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row2"/>}
               #end add-point
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aooi270_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aooi270_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aooi270_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
            
         
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
  </section>
  <section id="aooi270.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aooi270_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE aooi270_bcl
   #END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="aooi270.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aooi270_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #判斷是否是同一群組的table
   LET ls_group = "oocu_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "oocu_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE oocu_t 
         SET (oocu001
              ,oocustus,oocu002,oocu003,oocu004,oocuownid,oocuowndp,oocucrtid,oocucrtdp,oocucrtdt,oocumodid,oocumoddt) 
              = 
             (ps_keys[1]
              ,g_oocu_d[l_ac].oocustus,g_oocu_d[l_ac].oocu002,g_oocu_d[l_ac].oocu003,g_oocu_d[l_ac].oocu004, 
                  g_oocu2_d[l_ac].oocuownid,g_oocu2_d[l_ac].oocuowndp,g_oocu2_d[l_ac].oocucrtid,g_oocu2_d[l_ac].oocucrtdp, 
                  g_oocu2_d[l_ac].oocucrtdt,g_oocu2_d[l_ac].oocumodid,g_oocu2_d[l_ac].oocumoddt) 
         WHERE oocu001 = ps_keys_bak[1]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("oocu_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("oocu_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
</add_points>
