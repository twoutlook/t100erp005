<add_points prog="aooi020" std_prog="aooi020" erpver="1.0" module="AOO" ver="3" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="construct.c.page1_info.oocgcrtdp" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocgcrtdp  #顯示到畫面上

            NEXT FIELD oocgcrtdp                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1_info.oocgcrtid" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocgcrtid  #顯示到畫面上

            NEXT FIELD oocgcrtid                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1_info.oocgmodid" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocgmodid  #顯示到畫面上

            NEXT FIELD oocgmodid                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1_info.oocgowndp" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocgowndp  #顯示到畫面上

            NEXT FIELD oocgowndp                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1_info.oocgownid" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocgownid  #顯示到畫面上

            NEXT FIELD oocgownid                     #返回原欄位

]]>
</point>
  <point name="detail_show.body2.reference" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            SELECT oocgl003 INTO g_oocg_d[l_ac].oocgl003
        FROM oocgl_t
       WHERE oocgl001 = g_oocg_d[l_ac].oocg001
         AND oocglent = g_enterprise
         AND oocgl002 = g_dlang
      SELECT oocgl004 INTO g_oocg_d[l_ac].oocgl004
        FROM oocgl_t
       WHERE oocgl001 = g_oocg_d[l_ac].oocg001
         AND oocglent = g_enterprise
         AND oocgl002 = g_dlang
      SELECT oocel003 INTO g_oocg_d[l_ac].oocg002_desc 
        FROM oocel_t 
       WHERE oocel001 = g_oocg_d[l_ac].oocg002 
         AND oocelent = g_enterprise
         AND oocel002 = g_dlang
         
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_oocg_d[l_ac].oocg010
      CALL ap_ref_array2(g_ref_fields,"SELECT gzot002 FROM gzot_t WHERE gzot001=? ","") RETURNING g_rtn_fields
      LET g_oocg_d[l_ac].oocg010_desc = g_rtn_fields[1]

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_oocg_d[l_ac].oocg010
      CALL ap_ref_array2(g_ref_fields,"SELECT gzot003 FROM gzot_t WHERE gzot001=? ","") RETURNING g_rtn_fields
      LET g_oocg_d[l_ac].gzot003 = g_rtn_fields[1]
      
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocg2_d[l_ac].oocgmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_oocg2_d[l_ac].oocgmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_oocg2_d[l_ac].oocgmodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocg2_d[l_ac].oocgownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_oocg2_d[l_ac].oocgownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_oocg2_d[l_ac].oocgownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocg2_d[l_ac].oocgowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_oocg2_d[l_ac].oocgowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_oocg2_d[l_ac].oocgowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocg2_d[l_ac].oocgcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_oocg2_d[l_ac].oocgcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_oocg2_d[l_ac].oocgcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocg2_d[l_ac].oocgcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_oocg2_d[l_ac].oocgcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_oocg2_d[l_ac].oocgcrtdp_desc
]]>
</point>
  <point name="detail_show.reference" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[           ]]>
</point>
  <point name="input.a.page1_info.oocg001_2" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_oocg1_info_d[g_detail_idx].oocg001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_oocg1_info_d[g_detail_idx].oocg001 != g_oocg1_info_d_t.oocg001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM oocg_t WHERE "||"oocgent = '" ||g_enterprise|| "' AND "||"oocg001 = '"||g_oocg1_info_d[g_detail_idx].oocg001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="function.aooi020_check_oocg001" cite_std="N" status="" ver="2" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[# 檢查KEY值是否重複
PRIVATE FUNCTION aooi020_check_oocg001(p_cmd)
DEFINE p_cmd LIKE type_t.chr1
   
   IF  NOT cl_null(g_oocg_d[l_ac].oocg001) THEN
      IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_oocg_d[l_ac].oocg001 != g_oocg_d_t.oocg001))) THEN
         IF NOT ap_chk_notDup(g_oocg_d[l_ac].oocg001,"SELECT COUNT(*) FROM oocg_t WHERE "||
                  "oocgent = '" ||g_enterprise|| "' AND "||"oocg001 = '"||
                  g_oocg_d[l_ac].oocg001 ||"'",'std-00004',0) THEN
            RETURN '1'
         END IF
      END IF
   ELSE
      RETURN '2'
   END IF
   RETURN '0'
END FUNCTION]]>
</point>
  <point name="function.aooi020_check_oocg010" cite_std="N" status="" ver="2" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[#時區檢查
PRIVATE FUNCTION aooi020_check_oocg010()
DEFINE l_n      LIKE type_t.num5
 
  LET g_errno = ''
  IF NOT cl_null(g_oocg_d[l_ac].oocg010) THEN
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM gzot_t
       WHERE gzot001 = g_oocg_d[l_ac].oocg010
      IF l_n = 0 THEN
         LET g_errno = 'aoo-00159'
      ELSE
          LET l_n = 0
          SELECT COUNT(*) INTO l_n
            FROM gzot_t
           WHERE gzot001 = g_oocg_d[l_ac].oocg010
             AND gzotstus = 'Y'
          IF l_n = 0 THEN
             LET g_errno = 'aoo-00160'
          END IF
      END IF
  END IF
END FUNCTION]]>
</point>
  <point name="function.aooi020_set_comb" cite_std="N" status="" ver="2" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[# 动态显示下拉框
PRIVATE FUNCTION aooi020_set_comb()
   CALL cl_set_combo_scc("oocg007",7)
   CALL cl_set_combo_scc("oocg008",2)
   CALL cl_set_combo_scc("oocg009",8)
END FUNCTION]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="u" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[      #SELECT oocgl003 INTO g_oocg_d[l_ac].oocgl003
      #  FROM oocgl_t
      # WHERE oocgl001 = g_oocg_d[l_ac].oocg001
      #   AND oocglent = g_enterprise
      #   AND oocgl002 = g_dlang
      SELECT oocgl004 INTO g_oocg_d[l_ac].oocgl004
        FROM oocgl_t
       WHERE oocgl001 = g_oocg_d[l_ac].oocg001
         AND oocglent = g_enterprise
         AND oocgl002 = g_dlang
      #SELECT oocel003 INTO g_oocg_d[l_ac].oocg002_desc 
      #  FROM oocel_t 
      # WHERE oocel001 = g_oocg_d[l_ac].oocg002 
      #   AND oocelent = g_enterprise
      #   AND oocel002 = g_dlang
         
      #INITIALIZE g_ref_fields TO NULL
      #LET g_ref_fields[1] = g_oocg_d[l_ac].oocg010
      #CALL ap_ref_array2(g_ref_fields,"SELECT gzot002 FROM gzot_t WHERE gzot001=? ","") RETURNING g_rtn_fields
      #LET g_oocg_d[l_ac].oocg010_desc = g_rtn_fields[1]

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_oocg_d[l_ac].oocg010
      CALL ap_ref_array2(g_ref_fields,"SELECT gzot003 FROM gzot_t WHERE gzot001=? ","") RETURNING g_rtn_fields
      LET g_oocg_d[l_ac].gzot003 = g_rtn_fields[1]
    ]]>
</point>
  <point name="construct.c.page1.oocg001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_oocg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocg001  #顯示到畫面上

            NEXT FIELD oocg001                     #返回原欄位]]>
</point>
  <point name="construct.c.page1.oocg002" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooce001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocg002  #顯示到畫面上

            NEXT FIELD oocg002                     #返回原欄位]]>
</point>
  <point name="construct.c.page1.oocg010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_gzot001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocg010  #顯示到畫面上

            NEXT FIELD oocg010                     #返回原欄位

]]>
</point>
  <point name="construct.c.page2.oocgcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocgcrtdp  #顯示到畫面上

            NEXT FIELD oocgcrtdp                     #返回原欄位

]]>
</point>
  <point name="construct.c.page2.oocgcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocgcrtid  #顯示到畫面上

            NEXT FIELD oocgcrtid                     #返回原欄位

]]>
</point>
  <point name="construct.c.page2.oocgmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocgmodid  #顯示到畫面上

            NEXT FIELD oocgmodid                     #返回原欄位

]]>
</point>
  <point name="construct.c.page2.oocgowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocgowndp  #顯示到畫面上

            NEXT FIELD oocgowndp                     #返回原欄位

]]>
</point>
  <point name="construct.c.page2.oocgownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocgownid  #顯示到畫面上

            NEXT FIELD oocgownid                     #返回原欄位

]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="detail_show.body.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="detail_show.body1_info.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocg2_d[l_ac].oocgmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_oocg2_d[l_ac].oocgmodid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocg2_d[l_ac].oocgmodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocg2_d[l_ac].oocgownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_oocg2_d[l_ac].oocgownid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocg2_d[l_ac].oocgownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocg2_d[l_ac].oocgowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_oocg2_d[l_ac].oocgowndp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocg2_d[l_ac].oocgowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocg2_d[l_ac].oocgcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_oocg2_d[l_ac].oocgcrtid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocg2_d[l_ac].oocgcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocg2_d[l_ac].oocgcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_oocg2_d[l_ac].oocgcrtdp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocg2_d[l_ac].oocgcrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocg_d[l_ac].oocg010
            CALL ap_ref_array2(g_ref_fields,"SELECT gzot002 FROM gzot_t WHERE gzot001=? ","") RETURNING g_rtn_fields
            LET g_oocg_d[l_ac].oocg010_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocg_d[l_ac].oocg010_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocg_d[l_ac].oocg010
            CALL ap_ref_array2(g_ref_fields,"SELECT gzot003 FROM gzot_t WHERE gzot001=? ","") RETURNING g_rtn_fields
            LET g_oocg_d[l_ac].gzot003 = g_rtn_fields[1]
            DISPLAY BY NAME g_oocg_d[l_ac].gzot003]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL aooi020_set_comb()]]>
</point>
  <point name="input.a.page1.oocg001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a05產生
            CALL aooi020_check_oocg001(l_cmd) RETURNING l_result
            IF l_result = '1' THEN
               LET g_oocg_d[l_ac].oocg001 = g_oocg_d_t.oocg001
               NEXT FIELD oocg001
            END IF]]>
</point>
  <point name="input.a.page1.oocg002" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_oocg_d[l_ac].oocg002_desc = ""
            DISPLAY g_oocg_d[l_ac].oocg002_desc TO s_detail1[l_ac].oocg002_desc
            IF NOT cl_null(g_oocg_d[l_ac].oocg002) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_oocg_d[l_ac].oocg002

               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_ooce001") THEN
                  LET g_oocg_d[l_ac].oocg002 = g_oocg_d_t.oocg002
                  SELECT oocel003 INTO g_oocg_d[l_ac].oocg002_desc
                    FROM oocel_t
                   WHERE oocel001 = g_oocg_d[l_ac].oocg002
                     AND oocelent = g_enterprise
                     AND oocel002 = g_dlang
                  DISPLAY g_oocg_d[l_ac].oocg002_desc TO s_detail1[l_ac].oocg002_desc
                  NEXT FIELD oocg002
               END IF
            END IF
            SELECT oocel003 INTO g_oocg_d[l_ac].oocg002_desc
              FROM oocel_t
             WHERE oocel001 = g_oocg_d[l_ac].oocg002
               AND oocelent = g_enterprise
               AND oocel002 = g_dlang
            DISPLAY g_oocg_d[l_ac].oocg002_desc TO s_detail1[l_ac].oocg002_desc]]>
</point>
  <point name="input.a.page1.oocg010" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_oocg_d[l_ac].oocg010_desc = ""
            LET g_oocg_d[l_ac].gzot003 = ""
            DISPLAY g_oocg_d[l_ac].oocg010_desc TO s_detail1[l_ac].oocg010_desc
            DISPLAY g_oocg_d[l_ac].gzot003 TO s_detail1[l_ac].gzot003
            IF NOT cl_null(g_oocg_d[l_ac].oocg010) THEN   
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_oocg_d[l_ac].oocg010

               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_gzot001") THEN
                  LET g_oocg_d[l_ac].oocg010 = g_oocg_d_t.oocg010
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_oocg_d[l_ac].oocg010
                  CALL ap_ref_array2(g_ref_fields,"SELECT gzot002,gzot003 FROM gzot_t WHERE gzot001=? ","") RETURNING g_rtn_fields
                  LET g_oocg_d[l_ac].oocg010_desc = g_rtn_fields[1]
                  LET g_oocg_d[l_ac].gzot003 = g_rtn_fields[2]
                  DISPLAY g_oocg_d[l_ac].oocg010_desc TO s_detail1[l_ac].oocg010_desc
                  DISPLAY g_oocg_d[l_ac].gzot003 TO s_detail1[l_ac].gzot003
                  NEXT FIELD oocg010
               END IF
            END IF  
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocg_d[l_ac].oocg010
            CALL ap_ref_array2(g_ref_fields,"SELECT gzot002,gzot003 FROM gzot_t WHERE gzot001=? ","") RETURNING g_rtn_fields
            LET g_oocg_d[l_ac].oocg010_desc = g_rtn_fields[1]
            LET g_oocg_d[l_ac].gzot003 = g_rtn_fields[2]
            DISPLAY g_oocg_d[l_ac].oocg010_desc TO s_detail1[l_ac].oocg010_desc
            DISPLAY g_oocg_d[l_ac].gzot003 TO s_detail1[l_ac].gzot003]]>
</point>
  <point name="input.a.page2.oocg001_2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a05產生
            IF  NOT cl_null(g_oocg2_d[l_ac].oocg001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_oocg2_d[l_ac].oocg001 != g_oocg2_d_t.oocg001))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM oocg_t WHERE "||"oocgent = '" ||g_enterprise|| "' AND "||"oocg001 = '"||g_oocg2_d[l_ac].oocg001 ||"'",'std-00004',0) THEN 
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.oocgcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocg2_d[l_ac].oocgcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_oocg2_d[l_ac].oocgcrtdp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocg2_d[l_ac].oocgcrtdp_desc
]]>
</point>
  <point name="input.a.page2.oocgcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocg2_d[l_ac].oocgcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_oocg2_d[l_ac].oocgcrtid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocg2_d[l_ac].oocgcrtid_desc
]]>
</point>
  <point name="input.a.page2.oocgmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocg2_d[l_ac].oocgmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_oocg2_d[l_ac].oocgmodid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocg2_d[l_ac].oocgmodid_desc
]]>
</point>
  <point name="input.a.page2.oocgowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocg2_d[l_ac].oocgowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_oocg2_d[l_ac].oocgowndp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocg2_d[l_ac].oocgowndp_desc
]]>
</point>
  <point name="input.a.page2.oocgownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocg2_d[l_ac].oocgownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_oocg2_d[l_ac].oocgownid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocg2_d[l_ac].oocgownid_desc
]]>
</point>
  <point name="input.b.page1.oocg007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aooi020_set_comb()]]>
</point>
  <point name="input.b.page1.oocg008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aooi020_set_comb()]]>
</point>
  <point name="input.b.page1.oocg009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aooi020_set_comb()]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_oocg_d[l_ac].oocgstus = "Y"]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            SELECT oocgl003,oocgl004 
              INTO g_oocg_d[l_ac].oocgl003,g_oocg_d[l_ac].oocgl004
              FROM oocgl_t
             WHERE oocgl001 = g_oocg_d[l_ac].oocg001
               AND oocgl002 = g_dlang 
               AND oocglent = g_enterprise
            SELECT oocel003 INTO g_oocg_d[l_ac].oocg002_desc 
              FROM oocel_t 
             WHERE oocel001 = g_oocg_d[l_ac].oocg002 
               AND oocelent = g_enterprise
               AND oocel002 = g_dlang]]>
</point>
  <point name="input.c.page1.oocg002" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_oocg_d[l_ac].oocg002             #給予default值

            #給予arg
            LET g_qryparam.where = " oocestus = 'Y' "       #过滤条件
            CALL q_ooce001()                                #呼叫開窗

            LET g_oocg_d[l_ac].oocg002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_oocg_d[l_ac].oocg002 TO oocg002              #顯示到畫面上
            SELECT oocel003 INTO g_oocg_d[l_ac].oocg002_desc
              FROM oocel_t
             WHERE oocel001 = g_oocg_d[l_ac].oocg002
               AND oocelent = g_enterprise
               AND oocel002 = g_dlang
            DISPLAY g_oocg_d[l_ac].oocg002_desc TO s_detail1[l_ac].oocg002_desc
            LET g_qryparam.where = ""                #清空条件
            NEXT FIELD oocg002                          #返回原欄位]]>
</point>
  <point name="input.c.page1.oocg010" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_oocg_d[l_ac].oocg010             #給予default值

            #給予arg
            LET g_qryparam.where = " gzotstus = 'Y'"
            CALL q_gzot001()                                #呼叫開窗

            LET g_oocg_d[l_ac].oocg010 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_oocg_d[l_ac].oocg010 TO oocg010              #顯示到畫面上
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocg_d[l_ac].oocg010
            CALL ap_ref_array2(g_ref_fields,"SELECT gzot002,gzot003 FROM gzot_t WHERE gzot001=? ","") RETURNING g_rtn_fields
            LET g_oocg_d[l_ac].oocg010_desc = g_rtn_fields[1]
            LET g_oocg_d[l_ac].gzot003 = g_rtn_fields[2]
            DISPLAY g_oocg_d[l_ac].oocg010_desc TO s_detail1[l_ac].oocg010_desc
            DISPLAY g_oocg_d[l_ac].gzot003 TO s_detail1[l_ac].gzot003
            NEXT FIELD oocg010                          #返回原欄位

]]>
</point>
  <point name="input.detail_input.page1.update_item" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               IF NOT cl_null(g_oocg_d[l_ac].oocg001)  THEN
                  CALL n_oocgl(g_oocg_d[l_ac].oocg001)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_oocg_d[l_ac].oocg001
                  CALL ap_ref_array2(g_ref_fields," SELECT oocgl003,oocgl004 FROM oocgl_t WHERE oocglent = '"
                      ||g_enterprise||"' AND oocgl001 = ? AND oocgl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_oocg_d[l_ac].oocgl003 = g_rtn_fields[1]
                  LET g_oocg_d[l_ac].oocgl004 = g_rtn_fields[2]

                  DISPLAY BY NAME g_oocg_d[l_ac].oocgl003
                  DISPLAY BY NAME g_oocg_d[l_ac].oocgl004
               END IF]]>
</point>
  <point name="menu.Administrative" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL aooi020_admin()]]>
</point>
  <point name="menu.Counties" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL aooi020_counties()]]>
</point>
  <point name="menu.Province" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL aooi020_province()]]>
</point>
  <point name="menu.States" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL aooi020_states()]]>
</point>
  <point name="menu.Sycategory" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL aooi020_sycategory()]]>
</point>
  <point name="menu.administrative" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL aooi020_admin()]]>
</point>
  <point name="menu.counties" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL aooi020_counties()]]>
</point>
  <point name="menu.postal" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL aooi020_postal()]]>
</point>
  <point name="menu.province" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL aooi020_province()]]>
</point>
  <point name="menu.states" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL aooi020_states()]]>
</point>
  <point name="menu.sycategory" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL aooi020_sycategory()]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE  l_result        LIKE type_t.chr1]]>
</point>
  <point name="modify.define_sql" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_errshow = 1]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.body.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.body.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body.before_display2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.before_display2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.oocg001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.oocg001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.oocgl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.oocgl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.oocgl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.oocgl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.oocgl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.oocgl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.oocg002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.oocg002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.oocg003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.oocg003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.oocg003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.oocg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.oocg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.oocg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.oocg006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.oocg006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.oocg006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.oocg007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.oocg007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.oocg007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.oocg008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.oocg008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.oocg008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.oocg009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.oocg009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.oocg009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.oocg005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.oocg005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.oocg005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.oocg010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.oocg010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.gzot003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.gzot003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.gzot003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.oocg001_s_detail1_info" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page2.oocg001_s_detail1_info" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page2.oocg001_s_detail1_info" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.oocgmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page2.oocgmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.oocgmoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.oocgownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page2.oocgownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.oocgowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page2.oocgowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.oocgcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page2.oocgcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.oocgcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page2.oocgcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.oocgcrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.more_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.oocg001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.oocg001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.oocgl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.oocgl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.oocgl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.oocgl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.oocgl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.oocgl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.oocg002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.oocg002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.oocg003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.oocg003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.oocg003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.oocg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.oocg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.oocg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.oocg006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.oocg006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.oocg006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.oocg007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.oocg007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.oocg008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.oocg008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.oocg009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.oocg009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.oocg005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.oocg005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.oocg005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.oocg010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.oocg010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzot003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzot003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzot003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.oocg001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.oocgl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.oocgl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.oocg003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.oocg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.oocg006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.oocg007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.oocg008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.oocg009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.oocg005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzot003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.detail_input.page2.update_item" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page2.oocg001_s_detail1_info" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page2.oocg001_s_detail1_info" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page2.oocg001_s_detail1_info" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page2.oocg001_s_detail1_info" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.a_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.a_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.before_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.others.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="link_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.page_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="aooi020.b_fill" ver="8" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aooi020_b_fill(p_wc2)              #BODY FILL UP
   DEFINE p_wc2    STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE oocgstus,oocg001,oocg002,oocg003,oocg004,oocg006,oocg007,oocg008,oocg009, 
       oocg005,oocg010,oocg001,oocgmodid,oocgmoddt,oocgownid,oocgowndp,oocgcrtid,oocgcrtdp,oocgcrtdt , 
       t1.oocel003 ,t2.gzot002 ,t3.oofa011 ,t4.oofa011 ,t5.ooefl003 ,t6.oofa011 ,t7.ooefl003 FROM oocg_t", 

               " LEFT JOIN gzot_t ON oocg001 = gzot001 LEFT JOIN oocgl_t ON oocg001 = oocgl001 AND oocgl002 = '",g_lang,"'",
                              " LEFT JOIN oocel_t t1 ON t1.oocelent='"||g_enterprise||"' AND t1.oocel001=oocg002 AND t1.oocel002='"||g_dlang||"' ",
               " LEFT JOIN gzot_t t2 ON t2.gzot001=oocg010  ",
               " LEFT JOIN oofa_t t3 ON t3.oofaent='"||g_enterprise||"' AND t3.oofa002='2' AND t3.oofa003=oocgmodid  ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=oocgownid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=oocgowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t6 ON t6.oofaent='"||g_enterprise||"' AND t6.oofa002='2' AND t6.oofa003=oocgcrtid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=oocgcrtdp AND t7.ooefl002='"||g_dlang||"' ",
 
               " WHERE oocgent= ? AND 1=1 AND ", p_wc2 
    
   LET g_sql = g_sql, cl_sql_add_filter("oocg_t"),
                      " ORDER BY oocg_t.oocg001"
   
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE aooi020_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR aooi020_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_oocg_d.clear()
   CALL g_oocg2_d.clear()   
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_oocg_d[l_ac].oocgstus,g_oocg_d[l_ac].oocg001,g_oocg_d[l_ac].oocg002,g_oocg_d[l_ac].oocg003, 
       g_oocg_d[l_ac].oocg004,g_oocg_d[l_ac].oocg006,g_oocg_d[l_ac].oocg007,g_oocg_d[l_ac].oocg008,g_oocg_d[l_ac].oocg009, 
       g_oocg_d[l_ac].oocg005,g_oocg_d[l_ac].oocg010,g_oocg2_d[l_ac].oocg001,g_oocg2_d[l_ac].oocgmodid, 
       g_oocg2_d[l_ac].oocgmoddt,g_oocg2_d[l_ac].oocgownid,g_oocg2_d[l_ac].oocgowndp,g_oocg2_d[l_ac].oocgcrtid, 
       g_oocg2_d[l_ac].oocgcrtdp,g_oocg2_d[l_ac].oocgcrtdt,g_oocg_d[l_ac].oocg002_desc,g_oocg_d[l_ac].oocg010_desc, 
       g_oocg2_d[l_ac].oocgmodid_desc,g_oocg2_d[l_ac].oocgownid_desc,g_oocg2_d[l_ac].oocgowndp_desc, 
       g_oocg2_d[l_ac].oocgcrtid_desc,g_oocg2_d[l_ac].oocgcrtdp_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL aooi020_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec THEN
      IF g_error_show = 1 THEN
         CALL cl_err("oocg_t",9035,1)
      END IF
   END IF 
   LET g_error_show = 0
   
 
   
   CALL g_oocg_d.deleteElement(g_oocg_d.getLength())   
   CALL g_oocg2_d.deleteElement(g_oocg2_d.getLength())
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_oocg_d.getLength()
      LET g_oocg2_d[l_ac].oocg001 = g_oocg_d[l_ac].oocg001 
 
   END FOR
   
   IF g_cnt > g_oocg_d.getLength() THEN
      LET l_ac = g_oocg_d.getLength()
   ELSE
      LET l_ac = g_cnt
   END IF
   LET g_cnt = l_ac
 
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
   
   ERROR "" 
 
   LET g_detail_cnt = g_oocg_d.getLength()
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   
   CLOSE b_fill_curs
   FREE aooi020_pb
   
END FUNCTION
]]>
</section>
  <section id="aooi020.default_search" ver="4" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aooi020_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " oocg001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aooi020.delete" ver="2" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION aooi020_delete()
   DEFINE li_idx           LIKE type_t.num5
   DEFINE li_detail_tmp    LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point 
   
   #add-point:單身刪除前
   {<point name="delete.body.before_delete"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET li_detail_tmp = g_detail_idx
    
   #lock所有所選資料
   FOR li_idx = 1 TO g_oocg_d.getLength()
      LET g_detail_idx = li_idx
      #已選擇的資料
      IF g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         #確定是否有被鎖定
         IF NOT aooi020_lock_b("oocg_t") THEN
            #已被他人鎖定
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF
   END FOR
   
   #add-point:單身刪除詢問前
   {<point name="delete.body.b_delete_ask"/>}
   #end add-point  
   
   #詢問是否確定刪除所選資料
   IF NOT cl_ask_del_detail() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   FOR li_idx = 1 TO g_oocg_d.getLength()
      IF g_oocg_d[li_idx].oocg001 IS NOT NULL
 
         AND g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         
         #add-point:單身刪除前
         {<point name="delete.body.b_delete" mark="Y"/>}
         #end add-point   
         
         DELETE FROM oocg_t
          WHERE oocgent = g_enterprise AND 
                oocg001 = g_oocg_d[li_idx].oocg001
 
         #add-point:單身刪除中
         {<point name="delete.body.m_delete"/>}
         #end add-point  
                
         IF SQLCA.sqlcode THEN
            CALL cl_err("oocg_t",SQLCA.sqlcode,1)
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            LET g_detail_cnt = g_detail_cnt-1
            INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'oocgl001'
                  LET l_field_keys[02] = 'oocgl002'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.oocgl001
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.oocgl002
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'oocgl_t')
 
            #add-point:單身同步刪除前(同層table)
            {<point name="delete.body.a_delete"/>}
            #end add-point
            LET g_detail_idx = li_idx
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_oocg_d[g_detail_idx].oocg001
 
            #add-point:單身同步刪除中(同層table)
            {<point name="delete.body.a_delete2"/>}
            #end add-point
                           CALL aooi020_delete_b('oocg_t',gs_keys,"'1'")
            #add-point:單身同步刪除後(同層table)
            {<point name="delete.body.a_delete3"/>}
            #end add-point
         END IF 
      END IF 
    
   END FOR
   CALL s_transaction_end('Y','0')
   
   LET g_detail_idx = li_detail_tmp
            
   #add-point:單身刪除後
   {<point name="delete.after"/>}
   #end add-point  
   
   #刷新資料
   CALL aooi020_b_fill(g_wc2)
            
END FUNCTION
]]>
</section>
  <section id="aooi020.delete_b" ver="3" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aooi020_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "oocg_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> 'oocg_t' THEN
   
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
      DELETE FROM oocg_t
       WHERE oocgent = g_enterprise AND
         oocg001 = ps_keys_bak[1]
 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
</section>
  <section id="aooi020.description" ver="14" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000283
#+ 
#+ Filename...: aooi020
#+ Description: 國家地區維護作業
#+ Creator....: 01258(2013/07/01)
#+ Modifier...: 02294(2014/06/28)
#+ Buildtype..: 應用 i02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="aooi020.detail_show" ver="4" status="" src="s">
<![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION aooi020_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
   #帶出公用欄位reference值page2
   #此段落由子樣板a12產生
      #LET g_oocg2_d[l_ac].oocgownid_desc = cl_get_username(g_oocg2_d[l_ac].oocgownid)
      #LET g_oocg2_d[l_ac].oocgowndp_desc = cl_get_deptname(g_oocg2_d[l_ac].oocgowndp)
      #LET g_oocg2_d[l_ac].oocgcrtid_desc = cl_get_username(g_oocg2_d[l_ac].oocgcrtid)
      #LET g_oocg2_d[l_ac].oocgcrtdp_desc = cl_get_deptname(g_oocg2_d[l_ac].oocgcrtdp)
      #LET g_oocg2_d[l_ac].oocgmodid_desc = cl_get_username(g_oocg2_d[l_ac].oocgmodid)
      
 
 
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
   #add-point:show段單身reference
   {<point name="detail_show.body2.reference"/>}
   #end add-point
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="aooi020.global" ver="5" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_oocg_d RECORD
       oocgstus LIKE oocg_t.oocgstus, 
   oocg001 LIKE oocg_t.oocg001, 
   oocgl003 LIKE oocgl_t.oocgl003, 
   oocgl004 LIKE oocgl_t.oocgl004, 
   oocg002 LIKE oocg_t.oocg002, 
   oocg002_desc LIKE type_t.chr500, 
   oocg003 LIKE oocg_t.oocg003, 
   oocg004 LIKE oocg_t.oocg004, 
   oocg006 LIKE oocg_t.oocg006, 
   oocg007 LIKE oocg_t.oocg007, 
   oocg008 LIKE oocg_t.oocg008, 
   oocg009 LIKE oocg_t.oocg009, 
   oocg005 LIKE oocg_t.oocg005, 
   oocg010 LIKE oocg_t.oocg010, 
   oocg010_desc LIKE type_t.chr500, 
   gzot003 LIKE gzot_t.gzot003
       END RECORD
PRIVATE TYPE type_g_oocg2_d RECORD
       oocg001 LIKE oocg_t.oocg001, 
   oocgmodid LIKE oocg_t.oocgmodid, 
   oocgmodid_desc LIKE type_t.chr500, 
   oocgmoddt DATETIME YEAR TO SECOND, 
   oocgownid LIKE oocg_t.oocgownid, 
   oocgownid_desc LIKE type_t.chr500, 
   oocgowndp LIKE oocg_t.oocgowndp, 
   oocgowndp_desc LIKE type_t.chr500, 
   oocgcrtid LIKE oocg_t.oocgcrtid, 
   oocgcrtid_desc LIKE type_t.chr500, 
   oocgcrtdp LIKE oocg_t.oocgcrtdp, 
   oocgcrtdp_desc LIKE type_t.chr500, 
   oocgcrtdt DATETIME YEAR TO SECOND
       END RECORD
 
 
DEFINE g_detail_multi_table_t    RECORD
      gzot001 LIKE gzot_t.gzot001,
      gzot003 LIKE gzot_t.gzot003,
      oocgl001 LIKE oocgl_t.oocgl001,
      oocgl002 LIKE oocgl_t.oocgl002,
      oocgl003 LIKE oocgl_t.oocgl003,
      oocgl004 LIKE oocgl_t.oocgl004
      END RECORD
 
#模組變數(Module Variables)
DEFINE g_oocg_d          DYNAMIC ARRAY OF type_g_oocg_d
DEFINE g_oocg_d_t        type_g_oocg_d
DEFINE g_oocg2_d   DYNAMIC ARRAY OF type_g_oocg2_d
DEFINE g_oocg2_d_t type_g_oocg2_d
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
DEFINE g_log1               STRING                        #log用
DEFINE g_log2               STRING                        #log用
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="aooi020.init" ver="1" status="" src="s">
<![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION aooi020_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   
      CALL cl_set_combo_scc('oocg007','7') 
   CALL cl_set_combo_scc('oocg008','2') 
   CALL cl_set_combo_scc('oocg009','8') 
 
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL aooi020_default_search()
   
END FUNCTION
]]>
</section>
  <section id="aooi020.insert" ver="5" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION aooi020_insert()
   #add-point:delete段define
   {<point name="insert.define"/>}
   #end add-point                
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   LET g_insert = 'Y'
   CALL aooi020_modify()
            
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="aooi020.insert_b" ver="2" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aooi020_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "oocg_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO oocg_t
                  (oocgent,
                   oocg001
                   ,oocgstus,oocg002,oocg003,oocg004,oocg006,oocg007,oocg008,oocg009,oocg005,oocg010,oocgmodid,oocgmoddt,oocgownid,oocgowndp,oocgcrtid,oocgcrtdp,oocgcrtdt) 
            VALUES(g_enterprise,
                   ps_keys[1]
                   ,g_oocg_d[l_ac].oocgstus,g_oocg_d[l_ac].oocg002,g_oocg_d[l_ac].oocg003,g_oocg_d[l_ac].oocg004, 
                       g_oocg_d[l_ac].oocg006,g_oocg_d[l_ac].oocg007,g_oocg_d[l_ac].oocg008,g_oocg_d[l_ac].oocg009, 
                       g_oocg_d[l_ac].oocg005,g_oocg_d[l_ac].oocg010,g_oocg2_d[l_ac].oocgmodid,g_oocg2_d[l_ac].oocgmoddt, 
                       g_oocg2_d[l_ac].oocgownid,g_oocg2_d[l_ac].oocgowndp,g_oocg2_d[l_ac].oocgcrtid, 
                       g_oocg2_d[l_ac].oocgcrtdp,g_oocg2_d[l_ac].oocgcrtdt)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("oocg_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION
]]>
</section>
  <section id="aooi020.link_b" ver="1" status="" src="s">
<![CDATA[#+ 連動單身idx
PRIVATE FUNCTION aooi020_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define
   {<point name="link_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
 
   END IF
   
 
 
END FUNCTION
]]>
</section>
  <section id="aooi020.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aooi020_lock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aooi020_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "oocg_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aooi020_bcl USING g_enterprise,
                                       g_oocg_d[g_detail_idx].oocg001
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("aooi020_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aooi020.main" ver="8" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aoo","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
 
 
   #add-point:main段define_sql
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT oocgstus,oocg001,oocg002,oocg003,oocg004,oocg006,oocg007,oocg008,oocg009, 
       oocg005,oocg010,oocg001,oocgmodid,oocgmoddt,oocgownid,oocgowndp,oocgcrtid,oocgcrtdp,oocgcrtdt  
       FROM oocg_t WHERE oocgent=? AND oocg001=? FOR UPDATE"
   #add-point:main段define_sql
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aooi020_bcl CURSOR FROM g_forupd_sql
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aooi020 WITH FORM cl_ap_formpath("aoo",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aooi020_init()   
 
      #進入選單 Menu (="N")
      CALL aooi020_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aooi020
      
   END IF 
   
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="aooi020.modify" ver="9" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION aooi020_modify()
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   
   #add-point:modify開始前
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_oocg_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.detail_input.page1.update_item" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_oocg_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aooi020_b_fill(g_wc2)
            LET g_detail_cnt = g_oocg_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = g_detail_idx
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_oocg_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_oocg_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_oocg_d[l_ac].oocg001 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_oocg_d_t.* = g_oocg_d[l_ac].*  #BACKUP
               IF NOT aooi020_lock_b("oocg_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aooi020_bcl INTO g_oocg_d[l_ac].oocgstus,g_oocg_d[l_ac].oocg001,g_oocg_d[l_ac].oocg002, 
                      g_oocg_d[l_ac].oocg003,g_oocg_d[l_ac].oocg004,g_oocg_d[l_ac].oocg006,g_oocg_d[l_ac].oocg007, 
                      g_oocg_d[l_ac].oocg008,g_oocg_d[l_ac].oocg009,g_oocg_d[l_ac].oocg005,g_oocg_d[l_ac].oocg010 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_oocg_d_t.oocg001,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL aooi020_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            LET g_detail_multi_table_t.oocgl001 = g_oocg_d[l_ac].oocg001
LET g_detail_multi_table_t.oocgl002 = g_dlang
LET g_detail_multi_table_t.oocgl003 = g_oocg_d[l_ac].oocgl003
LET g_detail_multi_table_t.oocgl004 = g_oocg_d[l_ac].oocgl004
 
            #其他table進行lock
                        INITIALIZE l_var_keys TO NULL 
            INITIALIZE l_field_keys TO NULL 
            LET l_field_keys[01] = 'oocgl001'
            LET l_var_keys[01] = g_oocg_d[l_ac].oocg001
            LET l_field_keys[02] = 'oocgl002'
            LET l_var_keys[02] = g_dlang
            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'oocgl_t') THEN
               RETURN 
            END IF 
 
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_oocg_d_t.* TO NULL
            INITIALIZE g_oocg_d[l_ac].* TO NULL 
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_oocg2_d[l_ac].oocgownid = g_user
      LET g_oocg2_d[l_ac].oocgowndp = g_dept
      LET g_oocg2_d[l_ac].oocgcrtid = g_user
      LET g_oocg2_d[l_ac].oocgcrtdp = g_dept 
      LET g_oocg2_d[l_ac].oocgcrtdt = cl_get_current()
      LET g_oocg2_d[l_ac].oocgmodid = ""
      LET g_oocg2_d[l_ac].oocgmoddt = ""
      LET g_oocg_d[l_ac].oocgstus = ""
 
 
            
            LET g_oocg_d_t.* = g_oocg_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aooi020_set_entry_b("a")
            CALL aooi020_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_oocg_d[li_reproduce_target].* = g_oocg_d[li_reproduce].*
               LET g_oocg2_d[li_reproduce_target].* = g_oocg2_d[li_reproduce].*
 
               LET g_oocg_d[g_oocg_d.getLength()].oocg001 = NULL
 
            END IF
            LET g_detail_multi_table_t.oocgl001 = g_oocg_d[l_ac].oocg001
LET g_detail_multi_table_t.oocgl002 = g_dlang
LET g_detail_multi_table_t.oocgl003 = g_oocg_d[l_ac].oocgl003
LET g_detail_multi_table_t.oocgl004 = g_oocg_d[l_ac].oocgl004
 
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM oocg_t 
             WHERE oocgent = g_enterprise AND oocg001 = g_oocg_d[l_ac].oocg001
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_oocg_d[g_detail_idx].oocg001
               CALL aooi020_insert_b('oocg_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_oocg_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("oocg_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aooi020_b_fill(g_wc2)
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_oocg_d[l_ac].oocg001 = g_detail_multi_table_t.gzot001 AND
         g_oocg_d[l_ac].gzot003 = g_detail_multi_table_t.gzot003 THEN
         ELSE 
            LET l_var_keys[01] = g_oocg_d[l_ac].oocg001
            LET l_field_keys[01] = 'gzot001'
            LET l_vars[01] = g_oocg_d[l_ac].gzot003
            LET l_fields[01] = 'gzot003'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.gzot001
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzot_t')
         END IF 
          INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_oocg_d[l_ac].oocg001 = g_detail_multi_table_t.oocgl001 AND
         g_oocg_d[l_ac].oocgl003 = g_detail_multi_table_t.oocgl003 AND
         g_oocg_d[l_ac].oocgl004 = g_detail_multi_table_t.oocgl004 THEN
         ELSE 
            LET l_var_keys[01] = g_oocg_d[l_ac].oocg001
            LET l_field_keys[01] = 'oocgl001'
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'oocgl002'
            LET l_vars[01] = g_oocg_d[l_ac].oocgl003
            LET l_fields[01] = 'oocgl003'
            LET l_vars[02] = g_oocg_d[l_ac].oocgl004
            LET l_fields[02] = 'oocgl004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'oocglent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.oocgl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.oocgl002
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'oocgl_t')
         END IF 
 
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (oocg001 = '", g_oocg_d[l_ac].oocg001, "' "
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_oocg_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_oocg_d.deleteElement(l_ac)
               NEXT FIELD oocg001
            END IF
            IF g_oocg_d[l_ac].oocg001 IS NOT NULL
 
               THEN     
            
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM oocg_t
                WHERE oocgent = g_enterprise AND 
                      oocg001 = g_oocg_d_t.oocg001
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("oocg_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'oocgl001'
                  LET l_field_keys[02] = 'oocgl002'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.oocgl001
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.oocgl002
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'oocgl_t')
 
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aooi020_bcl
               LET l_count = g_oocg_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_oocg_d[g_detail_idx].oocg001
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aooi020_delete_b('oocg_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD oocg001
            #add-point:BEFORE FIELD oocg001
            {<point name="input.b.page1.oocg001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg001
            
            #add-point:AFTER FIELD oocg001
            {<point name="input.a.page1.oocg001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocg001
            #add-point:ON CHANGE oocg001
            {<point name="input.g.page1.oocg001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocgl003
            #add-point:BEFORE FIELD oocgl003
            {<point name="input.b.page1.oocgl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocgl003
            
            #add-point:AFTER FIELD oocgl003
            {<point name="input.a.page1.oocgl003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocgl003
            #add-point:ON CHANGE oocgl003
            {<point name="input.g.page1.oocgl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocgl004
            #add-point:BEFORE FIELD oocgl004
            {<point name="input.b.page1.oocgl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocgl004
            
            #add-point:AFTER FIELD oocgl004
            {<point name="input.a.page1.oocgl004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocgl004
            #add-point:ON CHANGE oocgl004
            {<point name="input.g.page1.oocgl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg002
            
            #add-point:AFTER FIELD oocg002
            {<point name="input.a.page1.oocg002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocg002
            #add-point:BEFORE FIELD oocg002
            {<point name="input.b.page1.oocg002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE oocg002
            #add-point:ON CHANGE oocg002
            {<point name="input.g.page1.oocg002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocg003
            #add-point:BEFORE FIELD oocg003
            {<point name="input.b.page1.oocg003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg003
            
            #add-point:AFTER FIELD oocg003
            {<point name="input.a.page1.oocg003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocg003
            #add-point:ON CHANGE oocg003
            {<point name="input.g.page1.oocg003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocg004
            #add-point:BEFORE FIELD oocg004
            {<point name="input.b.page1.oocg004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg004
            
            #add-point:AFTER FIELD oocg004
            {<point name="input.a.page1.oocg004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocg004
            #add-point:ON CHANGE oocg004
            {<point name="input.g.page1.oocg004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocg006
            #add-point:BEFORE FIELD oocg006
            {<point name="input.b.page1.oocg006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg006
            
            #add-point:AFTER FIELD oocg006
            {<point name="input.a.page1.oocg006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocg006
            #add-point:ON CHANGE oocg006
            {<point name="input.g.page1.oocg006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocg007
            #add-point:BEFORE FIELD oocg007
            {<point name="input.b.page1.oocg007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg007
            
            #add-point:AFTER FIELD oocg007
            {<point name="input.a.page1.oocg007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocg007
            #add-point:ON CHANGE oocg007
            {<point name="input.g.page1.oocg007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocg008
            #add-point:BEFORE FIELD oocg008
            {<point name="input.b.page1.oocg008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg008
            
            #add-point:AFTER FIELD oocg008
            {<point name="input.a.page1.oocg008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocg008
            #add-point:ON CHANGE oocg008
            {<point name="input.g.page1.oocg008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocg009
            #add-point:BEFORE FIELD oocg009
            {<point name="input.b.page1.oocg009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg009
            
            #add-point:AFTER FIELD oocg009
            {<point name="input.a.page1.oocg009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocg009
            #add-point:ON CHANGE oocg009
            {<point name="input.g.page1.oocg009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocg005
            #add-point:BEFORE FIELD oocg005
            {<point name="input.b.page1.oocg005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg005
            
            #add-point:AFTER FIELD oocg005
            {<point name="input.a.page1.oocg005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocg005
            #add-point:ON CHANGE oocg005
            {<point name="input.g.page1.oocg005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg010
            
            #add-point:AFTER FIELD oocg010
            {<point name="input.a.page1.oocg010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocg010
            #add-point:BEFORE FIELD oocg010
            {<point name="input.b.page1.oocg010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE oocg010
            #add-point:ON CHANGE oocg010
            {<point name="input.g.page1.oocg010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzot003
            #add-point:BEFORE FIELD gzot003
            {<point name="input.b.page1.gzot003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzot003
            
            #add-point:AFTER FIELD gzot003
            {<point name="input.a.page1.gzot003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzot003
            #add-point:ON CHANGE gzot003
            {<point name="input.g.page1.gzot003" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.oocg001
         ON ACTION controlp INFIELD oocg001
            #add-point:ON ACTION controlp INFIELD oocg001
            {<point name="input.c.page1.oocg001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.oocgl003
         ON ACTION controlp INFIELD oocgl003
            #add-point:ON ACTION controlp INFIELD oocgl003
            {<point name="input.c.page1.oocgl003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.oocgl004
         ON ACTION controlp INFIELD oocgl004
            #add-point:ON ACTION controlp INFIELD oocgl004
            {<point name="input.c.page1.oocgl004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.oocg002
         ON ACTION controlp INFIELD oocg002
            #add-point:ON ACTION controlp INFIELD oocg002
            {<point name="input.c.page1.oocg002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.oocg003
         ON ACTION controlp INFIELD oocg003
            #add-point:ON ACTION controlp INFIELD oocg003
            {<point name="input.c.page1.oocg003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.oocg004
         ON ACTION controlp INFIELD oocg004
            #add-point:ON ACTION controlp INFIELD oocg004
            {<point name="input.c.page1.oocg004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.oocg006
         ON ACTION controlp INFIELD oocg006
            #add-point:ON ACTION controlp INFIELD oocg006
            {<point name="input.c.page1.oocg006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.oocg007
         ON ACTION controlp INFIELD oocg007
            #add-point:ON ACTION controlp INFIELD oocg007
            {<point name="input.c.page1.oocg007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.oocg008
         ON ACTION controlp INFIELD oocg008
            #add-point:ON ACTION controlp INFIELD oocg008
            {<point name="input.c.page1.oocg008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.oocg009
         ON ACTION controlp INFIELD oocg009
            #add-point:ON ACTION controlp INFIELD oocg009
            {<point name="input.c.page1.oocg009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.oocg005
         ON ACTION controlp INFIELD oocg005
            #add-point:ON ACTION controlp INFIELD oocg005
            {<point name="input.c.page1.oocg005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.oocg010
         ON ACTION controlp INFIELD oocg010
            #add-point:ON ACTION controlp INFIELD oocg010
            {<point name="input.c.page1.oocg010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzot003
         ON ACTION controlp INFIELD gzot003
            #add-point:ON ACTION controlp INFIELD gzot003
            {<point name="input.c.page1.gzot003" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_oocg_d[l_ac].* = g_oocg_d_t.*
               CLOSE aooi020_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_oocg_d[l_ac].oocg001,-263,1)
               LET g_oocg_d[l_ac].* = g_oocg_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               LET g_oocg2_d[l_ac].oocgmodid = g_user 
LET g_oocg2_d[l_ac].oocgmoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE oocg_t SET (oocgstus,oocg001,oocg002,oocg003,oocg004,oocg006,oocg007,oocg008,oocg009, 
                   oocg005,oocg010,oocgmodid,oocgmoddt,oocgownid,oocgowndp,oocgcrtid,oocgcrtdp,oocgcrtdt) = (g_oocg_d[l_ac].oocgstus, 
                   g_oocg_d[l_ac].oocg001,g_oocg_d[l_ac].oocg002,g_oocg_d[l_ac].oocg003,g_oocg_d[l_ac].oocg004, 
                   g_oocg_d[l_ac].oocg006,g_oocg_d[l_ac].oocg007,g_oocg_d[l_ac].oocg008,g_oocg_d[l_ac].oocg009, 
                   g_oocg_d[l_ac].oocg005,g_oocg_d[l_ac].oocg010,g_oocg2_d[l_ac].oocgmodid,g_oocg2_d[l_ac].oocgmoddt, 
                   g_oocg2_d[l_ac].oocgownid,g_oocg2_d[l_ac].oocgowndp,g_oocg2_d[l_ac].oocgcrtid,g_oocg2_d[l_ac].oocgcrtdp, 
                   g_oocg2_d[l_ac].oocgcrtdt)
                WHERE oocgent = g_enterprise AND
                  oocg001 = g_oocg_d_t.oocg001 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("oocg_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("oocg_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_oocg_d[g_detail_idx].oocg001
               LET gs_keys_bak[1] = g_oocg_d_t.oocg001
               CALL aooi020_update_b('oocg_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_oocg_d[l_ac].oocg001 = g_detail_multi_table_t.gzot001 AND
         g_oocg_d[l_ac].gzot003 = g_detail_multi_table_t.gzot003 THEN
         ELSE 
            LET l_var_keys[01] = g_oocg_d[l_ac].oocg001
            LET l_field_keys[01] = 'gzot001'
            LET l_vars[01] = g_oocg_d[l_ac].gzot003
            LET l_fields[01] = 'gzot003'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.gzot001
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzot_t')
         END IF 
          INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_oocg_d[l_ac].oocg001 = g_detail_multi_table_t.oocgl001 AND
         g_oocg_d[l_ac].oocgl003 = g_detail_multi_table_t.oocgl003 AND
         g_oocg_d[l_ac].oocgl004 = g_detail_multi_table_t.oocgl004 THEN
         ELSE 
            LET l_var_keys[01] = g_oocg_d[l_ac].oocg001
            LET l_field_keys[01] = 'oocgl001'
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'oocgl002'
            LET l_vars[01] = g_oocg_d[l_ac].oocgl003
            LET l_fields[01] = 'oocgl003'
            LET l_vars[02] = g_oocg_d[l_ac].oocgl004
            LET l_fields[02] = 'oocgl004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'oocglent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.oocgl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.oocgl002
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'oocgl_t')
         END IF 
 
                     LET g_log1 = util.JSON.stringify(g_oocg_d_t)
                     LET g_log2 = util.JSON.stringify(g_oocg_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL aooi020_unlock_b("oocg_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            CALL cl_multitable_unlock()
             #add-point:單身after row
            {<point name="input.body.a_row"/>}
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_oocg_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_oocg_d.getLength()+1
            
      END INPUT
      
      INPUT ARRAY g_oocg2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
 
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.detail_input.page2.update_item" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
          CALL FGL_SET_ARR_CURR(g_detail_idx)
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            CALL aooi020_b_fill(g_wc2)
            LET g_detail_cnt = g_oocg2_d.getLength()
 
         BEFORE INSERT
            LET g_insert = 'Y' 
            NEXT FIELD oocg001
 
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_oocg2_d[l_ac].* TO NULL 
            INITIALIZE g_oocg2_d_t.* TO NULL
            #公用欄位給值(單身2)
            #此段落由子樣板a14產生    
      LET g_oocg2_d[l_ac].oocgownid = g_user
      LET g_oocg2_d[l_ac].oocgowndp = g_dept
      LET g_oocg2_d[l_ac].oocgcrtid = g_user
      LET g_oocg2_d[l_ac].oocgcrtdp = g_dept 
      LET g_oocg2_d[l_ac].oocgcrtdt = cl_get_current()
      LET g_oocg2_d[l_ac].oocgmodid = ""
      LET g_oocg2_d[l_ac].oocgmoddt = ""
      LET g_oocg_d[l_ac].oocgstus = ""
 
 
            
            LET g_oocg_d_t.* = g_oocg_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aooi020_set_entry_b("a")
            CALL aooi020_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_oocg_d[li_reproduce_target].* = g_oocg_d[li_reproduce].*
               LET g_oocg2_d[li_reproduce_target].* = g_oocg2_d[li_reproduce].*
 
               LET g_oocg2_d[li_reproduce_target].oocg001 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW 
            #add-point:modify段before row
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_cmd = ''
            LET l_ac = g_detail_idx
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_oocg2_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            
            LET g_detail_cnt = g_oocg2_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_oocg2_d[l_ac].oocg001 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_oocg2_d_t.* = g_oocg2_d[l_ac].*  #BACKUP
               IF NOT aooi020_lock_b("oocg_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aooi020_bcl INTO g_oocg2_d[l_ac].oocg001,g_oocg2_d[l_ac].oocgmodid,g_oocg2_d[l_ac].oocgmoddt, 
                      g_oocg2_d[l_ac].oocgownid,g_oocg2_d[l_ac].oocgowndp,g_oocg2_d[l_ac].oocgcrtid, 
                      g_oocg2_d[l_ac].oocgcrtdp,g_oocg2_d[l_ac].oocgcrtdt
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL cl_show_fld_cont()
                  CALL aooi020_detail_show()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_oocg2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_oocg2_d.deleteElement(l_ac)
               NEXT FIELD oocg001
            END IF
            IF g_oocg2_d[l_ac].oocg001 IS NOT NULL 
            THEN   
               
               #add-point:單身2ask刪除前
               {<point name="input.body2.b_delete_ask">}
               #end add-point 
            
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM oocg_t
                WHERE oocgent = g_enterprise AND
                  oocg001 = g_oocg2_d_t.oocg001
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point 
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("oocg_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'oocgl001'
                  LET l_field_keys[02] = 'oocgl002'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.oocgl001
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.oocgl002
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'oocgl_t')
 
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aooi020_bcl
               LET l_count = g_oocg_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_oocg2_d[g_detail_idx].oocg001
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL aooi020_delete_b('oocg_t',gs_keys,"'2'")
 
         AFTER INSERT    
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM oocg_t 
             WHERE oocgent = g_enterprise AND
                   oocg001 = g_oocg2_d[l_ac].oocg001
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_oocg2_d[g_detail_idx].oocg001
               CALL aooi020_insert_b('oocg_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_oocg_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("oocg_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aooi020_b_fill(g_wc2)
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               LET g_wc2 = g_wc2, " OR (oocg001 = '", g_oocg2_d[l_ac].oocg001, "' "
                                  ,")"
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_oocg2_d[l_ac].* = g_oocg2_d_t.*
               CLOSE aooi020_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_oocg2_d[l_ac].* = g_oocg2_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身2)
               LET g_oocg2_d[l_ac].oocgmodid = g_user 
LET g_oocg2_d[l_ac].oocgmoddt = cl_get_current()
 
               
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE oocg_t SET (oocgstus,oocg001,oocg002,oocg003,oocg004,oocg006,oocg007,oocg008,oocg009, 
                   oocg005,oocg010,oocgmodid,oocgmoddt,oocgownid,oocgowndp,oocgcrtid,oocgcrtdp,oocgcrtdt) = (g_oocg_d[l_ac].oocgstus, 
                   g_oocg_d[l_ac].oocg001,g_oocg_d[l_ac].oocg002,g_oocg_d[l_ac].oocg003,g_oocg_d[l_ac].oocg004, 
                   g_oocg_d[l_ac].oocg006,g_oocg_d[l_ac].oocg007,g_oocg_d[l_ac].oocg008,g_oocg_d[l_ac].oocg009, 
                   g_oocg_d[l_ac].oocg005,g_oocg_d[l_ac].oocg010,g_oocg2_d[l_ac].oocgmodid,g_oocg2_d[l_ac].oocgmoddt, 
                   g_oocg2_d[l_ac].oocgownid,g_oocg2_d[l_ac].oocgowndp,g_oocg2_d[l_ac].oocgcrtid,g_oocg2_d[l_ac].oocgcrtdp, 
                   g_oocg2_d[l_ac].oocgcrtdt) #自訂欄位頁簽
                WHERE oocgent = g_enterprise AND
                  oocg001 = g_oocg2_d_t.oocg001 #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("oocg_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("oocg_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_oocg2_d[g_detail_idx].oocg001
               LET gs_keys_bak[1] = g_oocg2_d_t.oocg001
               CALL aooi020_update_b('oocg_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_oocg2_d_t)
                     LET g_log2 = util.JSON.stringify(g_oocg2_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD oocg001_s_detail1_info
            #add-point:BEFORE FIELD oocg001_s_detail1_info
            {<point name="input.b.page2.oocg001_s_detail1_info" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg001_s_detail1_info
            
            #add-point:AFTER FIELD oocg001_s_detail1_info
            {<point name="input.a.page2.oocg001_s_detail1_info" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocg001_s_detail1_info
            #add-point:ON CHANGE oocg001_s_detail1_info
            {<point name="input.g.page2.oocg001_s_detail1_info" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page2.oocg001_s_detail1_info
         ON ACTION controlp INFIELD oocg001_s_detail1_info
            #add-point:ON ACTION controlp INFIELD oocg001_s_detail1_info
            {<point name="input.c.page2.oocg001_s_detail1_info" />}
            #END add-point
 
 
 
         AFTER ROW
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_oocg2_d[l_ac].* = g_oocg2_d_t.*
               END IF
               CLOSE aooi020_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
 
            CALL aooi020_unlock_b("oocg_t")
            CALL s_transaction_end('Y','0')
            #add-point:單身after row
            {<point name="input.body2.a_row"/>}
            #end add-point
            
         AFTER INPUT
            #add-point:單身2input後
            {<point name="input.body2.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_oocg2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_oocg2_d.getLength()+1
 
      END INPUT
 
      
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD oocgstus
            WHEN "s_detail2"
               NEXT FIELD oocg001_2
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE aooi020_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
</section>
  <section id="aooi020.modify_detail_chk" ver="3" status="" src="s">
<![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION aooi020_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "oocgstus"
      WHEN "s_detail2"
         LET ls_return = "oocg001_2"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
</section>
  <section id="aooi020.other_dialog" ver="1" status="" src="s">
<![CDATA[ 
]]>
</section>
  <section id="aooi020.other_function" ver="2" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="aooi020.query" ver="6" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aooi020_query()
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_oocg_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON oocg001,oocgl003,oocgl004,oocg002,oocg003,oocg004,oocg006,oocg007,oocg008,oocg009, 
          oocg005,oocg010,gzot003,oocg001_s_detail1_info,oocgmodid,oocgmoddt,oocgownid,oocgowndp,oocgcrtid, 
          oocgcrtdp,oocgcrtdt 
 
         FROM s_detail1[1].oocg001,s_detail1[1].oocgl003,s_detail1[1].oocgl004,s_detail1[1].oocg002, 
             s_detail1[1].oocg003,s_detail1[1].oocg004,s_detail1[1].oocg006,s_detail1[1].oocg007,s_detail1[1].oocg008, 
             s_detail1[1].oocg009,s_detail1[1].oocg005,s_detail1[1].oocg010,s_detail1[1].gzot003,s_detail2[1].oocg001_s_detail1_info, 
             s_detail2[1].oocgmodid,s_detail2[1].oocgmoddt,s_detail2[1].oocgownid,s_detail2[1].oocgowndp, 
             s_detail2[1].oocgcrtid,s_detail2[1].oocgcrtdp,s_detail2[1].oocgcrtdt 
      
         #此段落由子樣板a11產生
         ##----<<oocgcrtdt>>----
         AFTER FIELD oocgcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<oocgmoddt>>----
         AFTER FIELD oocgmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<oocgcnfdt>>----
         
         #----<<oocgpstdt>>----
 
 
      
                  #Ctrlp:construct.c.page1.oocg001
         ON ACTION controlp INFIELD oocg001
            #add-point:ON ACTION controlp INFIELD oocg001
            {<point name="construct.c.page1.oocg001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocg001
            #add-point:BEFORE FIELD oocg001
            {<point name="query.b.page1.oocg001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg001
            
            #add-point:AFTER FIELD oocg001
            {<point name="query.a.page1.oocg001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocgl003
            #add-point:BEFORE FIELD oocgl003
            {<point name="query.b.page1.oocgl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocgl003
            
            #add-point:AFTER FIELD oocgl003
            {<point name="query.a.page1.oocgl003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oocgl003
         ON ACTION controlp INFIELD oocgl003
            #add-point:ON ACTION controlp INFIELD oocgl003
            {<point name="query.c.page1.oocgl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocgl004
            #add-point:BEFORE FIELD oocgl004
            {<point name="query.b.page1.oocgl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocgl004
            
            #add-point:AFTER FIELD oocgl004
            {<point name="query.a.page1.oocgl004" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oocgl004
         ON ACTION controlp INFIELD oocgl004
            #add-point:ON ACTION controlp INFIELD oocgl004
            {<point name="query.c.page1.oocgl004" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.oocg002
         ON ACTION controlp INFIELD oocg002
            #add-point:ON ACTION controlp INFIELD oocg002
            {<point name="construct.c.page1.oocg002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocg002
            #add-point:BEFORE FIELD oocg002
            {<point name="query.b.page1.oocg002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg002
            
            #add-point:AFTER FIELD oocg002
            {<point name="query.a.page1.oocg002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocg003
            #add-point:BEFORE FIELD oocg003
            {<point name="query.b.page1.oocg003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg003
            
            #add-point:AFTER FIELD oocg003
            {<point name="query.a.page1.oocg003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oocg003
         ON ACTION controlp INFIELD oocg003
            #add-point:ON ACTION controlp INFIELD oocg003
            {<point name="query.c.page1.oocg003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocg004
            #add-point:BEFORE FIELD oocg004
            {<point name="query.b.page1.oocg004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg004
            
            #add-point:AFTER FIELD oocg004
            {<point name="query.a.page1.oocg004" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oocg004
         ON ACTION controlp INFIELD oocg004
            #add-point:ON ACTION controlp INFIELD oocg004
            {<point name="query.c.page1.oocg004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocg006
            #add-point:BEFORE FIELD oocg006
            {<point name="query.b.page1.oocg006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg006
            
            #add-point:AFTER FIELD oocg006
            {<point name="query.a.page1.oocg006" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oocg006
         ON ACTION controlp INFIELD oocg006
            #add-point:ON ACTION controlp INFIELD oocg006
            {<point name="query.c.page1.oocg006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocg007
            #add-point:BEFORE FIELD oocg007
            {<point name="query.b.page1.oocg007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg007
            
            #add-point:AFTER FIELD oocg007
            {<point name="query.a.page1.oocg007" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oocg007
         ON ACTION controlp INFIELD oocg007
            #add-point:ON ACTION controlp INFIELD oocg007
            {<point name="query.c.page1.oocg007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocg008
            #add-point:BEFORE FIELD oocg008
            {<point name="query.b.page1.oocg008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg008
            
            #add-point:AFTER FIELD oocg008
            {<point name="query.a.page1.oocg008" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oocg008
         ON ACTION controlp INFIELD oocg008
            #add-point:ON ACTION controlp INFIELD oocg008
            {<point name="query.c.page1.oocg008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocg009
            #add-point:BEFORE FIELD oocg009
            {<point name="query.b.page1.oocg009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg009
            
            #add-point:AFTER FIELD oocg009
            {<point name="query.a.page1.oocg009" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oocg009
         ON ACTION controlp INFIELD oocg009
            #add-point:ON ACTION controlp INFIELD oocg009
            {<point name="query.c.page1.oocg009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocg005
            #add-point:BEFORE FIELD oocg005
            {<point name="query.b.page1.oocg005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg005
            
            #add-point:AFTER FIELD oocg005
            {<point name="query.a.page1.oocg005" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.oocg005
         ON ACTION controlp INFIELD oocg005
            #add-point:ON ACTION controlp INFIELD oocg005
            {<point name="query.c.page1.oocg005" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.oocg010
         ON ACTION controlp INFIELD oocg010
            #add-point:ON ACTION controlp INFIELD oocg010
            {<point name="construct.c.page1.oocg010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocg010
            #add-point:BEFORE FIELD oocg010
            {<point name="query.b.page1.oocg010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg010
            
            #add-point:AFTER FIELD oocg010
            {<point name="query.a.page1.oocg010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzot003
            #add-point:BEFORE FIELD gzot003
            {<point name="query.b.page1.gzot003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzot003
            
            #add-point:AFTER FIELD gzot003
            {<point name="query.a.page1.gzot003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gzot003
         ON ACTION controlp INFIELD gzot003
            #add-point:ON ACTION controlp INFIELD gzot003
            {<point name="query.c.page1.gzot003" />}
            #END add-point
 
  
         
                  #此段落由子樣板a01產生
         BEFORE FIELD oocg001_s_detail1_info
            #add-point:BEFORE FIELD oocg001_s_detail1_info
            {<point name="query.b.page2.oocg001_s_detail1_info" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocg001_s_detail1_info
            
            #add-point:AFTER FIELD oocg001_s_detail1_info
            {<point name="query.a.page2.oocg001_s_detail1_info" />}
            #END add-point
            
 
         #Ctrlp:query.c.page2.oocg001_s_detail1_info
         ON ACTION controlp INFIELD oocg001_s_detail1_info
            #add-point:ON ACTION controlp INFIELD oocg001_s_detail1_info
            {<point name="query.c.page2.oocg001_s_detail1_info" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.oocgmodid
         ON ACTION controlp INFIELD oocgmodid
            #add-point:ON ACTION controlp INFIELD oocgmodid
            {<point name="construct.c.page2.oocgmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocgmodid
            #add-point:BEFORE FIELD oocgmodid
            {<point name="query.b.page2.oocgmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocgmodid
            
            #add-point:AFTER FIELD oocgmodid
            {<point name="query.a.page2.oocgmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocgmoddt
            #add-point:BEFORE FIELD oocgmoddt
            {<point name="query.b.page2.oocgmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.oocgownid
         ON ACTION controlp INFIELD oocgownid
            #add-point:ON ACTION controlp INFIELD oocgownid
            {<point name="construct.c.page2.oocgownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocgownid
            #add-point:BEFORE FIELD oocgownid
            {<point name="query.b.page2.oocgownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocgownid
            
            #add-point:AFTER FIELD oocgownid
            {<point name="query.a.page2.oocgownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.oocgowndp
         ON ACTION controlp INFIELD oocgowndp
            #add-point:ON ACTION controlp INFIELD oocgowndp
            {<point name="construct.c.page2.oocgowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocgowndp
            #add-point:BEFORE FIELD oocgowndp
            {<point name="query.b.page2.oocgowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocgowndp
            
            #add-point:AFTER FIELD oocgowndp
            {<point name="query.a.page2.oocgowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.oocgcrtid
         ON ACTION controlp INFIELD oocgcrtid
            #add-point:ON ACTION controlp INFIELD oocgcrtid
            {<point name="construct.c.page2.oocgcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocgcrtid
            #add-point:BEFORE FIELD oocgcrtid
            {<point name="query.b.page2.oocgcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocgcrtid
            
            #add-point:AFTER FIELD oocgcrtid
            {<point name="query.a.page2.oocgcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.oocgcrtdp
         ON ACTION controlp INFIELD oocgcrtdp
            #add-point:ON ACTION controlp INFIELD oocgcrtdp
            {<point name="construct.c.page2.oocgcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocgcrtdp
            #add-point:BEFORE FIELD oocgcrtdp
            {<point name="query.b.page2.oocgcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocgcrtdp
            
            #add-point:AFTER FIELD oocgcrtdp
            {<point name="query.a.page2.oocgcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocgcrtdt
            #add-point:BEFORE FIELD oocgcrtdt
            {<point name="query.b.page2.oocgcrtdt" />}
            #END add-point
 
  
 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
  
      BEFORE DIALOG 
         CALL cl_qbe_init()
         #add-point:query段before_dialog
         {<point name="query.before_dialog"/>}
         #end add-point 
      
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
      
      ON ACTION qbe_save
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF
    
   LET g_error_show = 1
   CALL aooi020_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
]]>
</section>
  <section id="aooi020.set_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aooi020_set_entry_b(p_cmd)                                                  
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    
]]>
</section>
  <section id="aooi020.set_no_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aooi020_set_no_entry_b(p_cmd)                                               
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point  
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  
]]>
</section>
  <section id="aooi020.state_change" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="aooi020.ui_dialog" ver="9" status="" src="s">
<![CDATA[#+ 功能選單 
PRIVATE FUNCTION aooi020_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL aooi020_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_oocg_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
               {<point name="ui_dialog.body.before_display" mark="Y"/>}
               #end add-point
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
               {<point name="ui_dialog.body.before_display2"/>}
               #end add-point
               
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row"/>}
               #end add-point
         
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
         DISPLAY ARRAY g_oocg2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
               {<point name="ui_dialog.body2.before_display" mark="Y"/>}
               #end add-point
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
               {<point name="ui_dialog.body2.before_display2"/>}
               #end add-point
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row2"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
    
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            CALL DIALOG.setSelectionMode("s_detail2", 1)
 
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aooi020_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aooi020_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aooi020_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aooi020_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aooi020_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
            
         
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
</section>
  <section id="aooi020.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aooi020_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE aooi020_bcl
   #END IF
   
 
 
END FUNCTION
]]>
</section>
  <section id="aooi020.update_b" ver="2" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aooi020_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #判斷是否是同一群組的table
   LET ls_group = "oocg_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "oocg_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE oocg_t 
         SET (oocg001
              ,oocgstus,oocg002,oocg003,oocg004,oocg006,oocg007,oocg008,oocg009,oocg005,oocg010,oocgmodid,oocgmoddt,oocgownid,oocgowndp,oocgcrtid,oocgcrtdp,oocgcrtdt) 
              = 
             (ps_keys[1]
              ,g_oocg_d[l_ac].oocgstus,g_oocg_d[l_ac].oocg002,g_oocg_d[l_ac].oocg003,g_oocg_d[l_ac].oocg004, 
                  g_oocg_d[l_ac].oocg006,g_oocg_d[l_ac].oocg007,g_oocg_d[l_ac].oocg008,g_oocg_d[l_ac].oocg009, 
                  g_oocg_d[l_ac].oocg005,g_oocg_d[l_ac].oocg010,g_oocg2_d[l_ac].oocgmodid,g_oocg2_d[l_ac].oocgmoddt, 
                  g_oocg2_d[l_ac].oocgownid,g_oocg2_d[l_ac].oocgowndp,g_oocg2_d[l_ac].oocgcrtid,g_oocg2_d[l_ac].oocgcrtdp, 
                  g_oocg2_d[l_ac].oocgcrtdt) 
         WHERE oocg001 = ps_keys_bak[1]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("oocg_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("oocg_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
</section>
</add_points>