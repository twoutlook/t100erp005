<add_points prog="aooi391" std_prog="aooi391" erpver="1.0" module="AOO" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="construct.c.oofj001" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_oofj001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oofj001  #顯示到畫面上

            NEXT FIELD oofj001                     #返回原欄位

]]>
</point>
  <point name="construct.c.oofjcrtdp" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oofjcrtdp  #顯示到畫面上

            NEXT FIELD oofjcrtdp                     #返回原欄位

]]>
</point>
  <point name="construct.c.oofjcrtid" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oofjcrtid  #顯示到畫面上

            NEXT FIELD oofjcrtid                     #返回原欄位

]]>
</point>
  <point name="construct.c.oofjmodid" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oofjmodid  #顯示到畫面上

            NEXT FIELD oofjmodid                     #返回原欄位

]]>
</point>
  <point name="construct.c.oofjowndp" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oofjowndp  #顯示到畫面上

            NEXT FIELD oofjowndp                     #返回原欄位

]]>
</point>
  <point name="construct.c.oofjownid" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oofjownid  #顯示到畫面上

            NEXT FIELD oofjownid                     #返回原欄位

]]>
</point>
  <point name="input.a.oofj001" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF NOT cl_null(g_oofj_m.oofj001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_oofj_m.oofj001 != g_oofj001_t ))) THEN 
                  IF NOT ap_chk_notDup(g_oofj_m.oofj001,"SELECT COUNT(*) FROM oofj_t WHERE "||"oofjent = '" ||g_enterprise|| "' AND "||"oofj001 = '"||g_oofj_m.oofj001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.a.page1.oofk002" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF NOT cl_null(g_oofj_m.oofj001) AND NOT cl_null(g_oofk_d[l_ac].oofk002) AND NOT cl_null(g_oofk_d[l_ac].oofk003) AND NOT cl_null(g_oofk_d[l_ac].oofk004) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_oofj_m.oofj001 != g_oofj001_t OR g_oofk_d[l_ac].oofk002 != g_oofk_d_t.oofk002 OR g_oofk_d[l_ac].oofk003 != g_oofk_d_t.oofk003 OR g_oofk_d[l_ac].oofk004 != g_oofk_d_t.oofk004))) THEN 
                  IF NOT ap_chk_notDup(g_oofk_d[l_ac].oofk002,"SELECT COUNT(*) FROM oofk_t WHERE "||"oofkent = '" ||g_enterprise|| "' AND "||"oofk001 = '"||g_oofj_m.oofj001 ||"' AND "|| "oofk002 = '"||g_oofk_d[l_ac].oofk002 ||"' AND "|| "oofk003 = '"||g_oofk_d[l_ac].oofk003 ||"' AND "|| "oofk004 = '"||g_oofk_d[l_ac].oofk004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.oofk003" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_oofj_m.oofj001) AND NOT cl_null(g_oofk_d[l_ac].oofk002) AND NOT cl_null(g_oofk_d[l_ac].oofk003) AND NOT cl_null(g_oofk_d[l_ac].oofk004) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_oofj_m.oofj001 != g_oofj001_t OR g_oofk_d[l_ac].oofk002 != g_oofk_d_t.oofk002 OR g_oofk_d[l_ac].oofk003 != g_oofk_d_t.oofk003 OR g_oofk_d[l_ac].oofk004 != g_oofk_d_t.oofk004))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM oofk_t WHERE "||"oofkent = '" ||g_enterprise|| "' AND "||"oofk001 = '"||g_oofj_m.oofj001 ||"' AND "|| "oofk002 = '"||g_oofk_d[l_ac].oofk002 ||"' AND "|| "oofk003 = '"||g_oofk_d[l_ac].oofk003 ||"' AND "|| "oofk004 = '"||g_oofk_d[l_ac].oofk004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.oofk004" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_oofj_m.oofj001) AND NOT cl_null(g_oofk_d[l_ac].oofk002) AND NOT cl_null(g_oofk_d[l_ac].oofk003) AND NOT cl_null(g_oofk_d[l_ac].oofk004) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_oofj_m.oofj001 != g_oofj001_t OR g_oofk_d[l_ac].oofk002 != g_oofk_d_t.oofk002 OR g_oofk_d[l_ac].oofk003 != g_oofk_d_t.oofk003 OR g_oofk_d[l_ac].oofk004 != g_oofk_d_t.oofk004))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM oofk_t WHERE "||"oofkent = '" ||g_enterprise|| "' AND "||"oofk001 = '"||g_oofj_m.oofj001 ||"' AND "|| "oofk002 = '"||g_oofk_d[l_ac].oofk002 ||"' AND "|| "oofk003 = '"||g_oofk_d[l_ac].oofk003 ||"' AND "|| "oofk004 = '"||g_oofk_d[l_ac].oofk004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="show.head.reference" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   CALL aooi391_desc()]]>
</point>
  <point name="function.aooi391_desc" cite_std="N" status="" order="1" ver="1" cite_ver="" new="Y" src="s" mark_hard="N">
<![CDATA[#說明，助記碼欄位顯示
PRIVATE FUNCTION aooi391_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_oofj_m.oofjownid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_oofj_m.oofjownid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_oofj_m.oofjownid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_oofj_m.oofjowndp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_oofj_m.oofjowndp_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_oofj_m.oofjowndp_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_oofj_m.oofjcrtid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_oofj_m.oofjcrtid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_oofj_m.oofjcrtid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_oofj_m.oofjcrtdp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_oofj_m.oofjcrtdp_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_oofj_m.oofjcrtdp_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_oofj_m.oofjmodid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_oofj_m.oofjmodid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_oofj_m.oofjmodid_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_oofj_m.oofj001
   CALL ap_ref_array2(g_ref_fields," SELECT oofjl003 FROM oofjl_t WHERE oofjlent = '"||g_enterprise||"' AND oofjl001 = ? AND oofjl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_oofj_m.oofjl003 = g_rtn_fields[1] 
   DISPLAY BY NAME g_oofj_m.oofjl003
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_oofj_m.oofj001
   CALL ap_ref_array2(g_ref_fields," SELECT oofjl004 FROM oofjl_t WHERE oofjlent = '"||g_enterprise||"' AND oofjl001 = ? AND oofjl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_oofj_m.oofjl004 = g_rtn_fields[1] 
   DISPLAY BY NAME g_oofj_m.oofjl004
END FUNCTION]]>
</point>
  <point name="function.aooi391_b_fill1" cite_std="N" status="" order="2" ver="1" cite_ver="" new="Y" src="s" mark_hard="N">
<![CDATA[#單身2填充
PRIVATE FUNCTION aooi391_b_fill1()
   
   CALL g_oofk_d1.clear()
   LET g_wc_table2 = cl_replace_str(g_wc_table2,"oofk002_1","oofk002")
   LET g_wc_table2 = cl_replace_str(g_wc_table2,"oofk003_1","oofk003")
   LET g_wc_table2 = cl_replace_str(g_wc_table2,"oofk004_1","oofk004")
   LET g_wc_table2 = cl_replace_str(g_wc_table2,"oofk005_1","oofk005")
   LET g_sql = "SELECT  UNIQUE oofk002,oofk003,oofk004,oofk005 FROM oofk_t",
               " WHERE oofkent=? AND oofk001=? AND oofk002 = ' '"
   IF NOT cl_null(g_wc_table2) THEN
      LET g_sql = g_sql CLIPPED, " AND ", g_wc_table2 CLIPPED
   END IF
 
   LET g_sql = g_sql, " ORDER BY oofk_t.oofk002"

   PREPARE aooi391_pb1 FROM g_sql
   DECLARE b_fill_cs1 CURSOR FOR aooi391_pb1
 
   LET g_cnt = l_ac1
   LET l_ac1 = 1
 
   OPEN b_fill_cs1 USING g_enterprise,g_oofj_m.oofj001
                                            
   FOREACH b_fill_cs1 INTO g_oofk_d1[l_ac1].oofk002_1,g_oofk_d1[l_ac1].oofk003_1,g_oofk_d1[l_ac1].oofk004_1,g_oofk_d1[l_ac1].oofk005_1
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      LET l_ac1 = l_ac1 + 1
      IF l_ac > g_max_rec THEN
         CALL cl_err( '', 9035, 0 )
         EXIT FOREACH
      END IF
   END FOREACH
   
   CALL g_oofk_d1.deleteElement(g_oofk_d1.getLength())

   LET l_ac1 = g_cnt
   LET g_cnt = 0  
   
   FREE aooi391_pb1
END FUNCTION]]>
</point>
  <point name="function.aooi391_chk_oofk" cite_std="N" status="" order="3" ver="1" cite_ver="" new="Y" src="s" mark_hard="N">
<![CDATA[#數值FROM TO檢查
PRIVATE FUNCTION aooi391_chk_oofk(p_cmd,p_oofk003)
DEFINE l_n         LIKE type_t.num5
DEFINE l_sql       STRING
DEFINE p_cmd       LIKE type_t.chr1
DEFINE p_oofk003   LIKE oofk_t.oofk003
DEFINE l_oofk003   LIKE oofk_t.oofk003
DEFINE l_oofk004   LIKE oofk_t.oofk004

   LET g_errno = ""
   IF p_cmd = 'a' THEN
      LET l_sql = " SELECT oofk003,oofk004 ",
                  "   FROM oofk_t",
                  "  WHERE oofkent = '",g_enterprise,"' ",
                  "    AND oofk001 = '",g_oofj_m.oofj001,"' ",
                  "    AND oofk002 = '",g_oofk_d1[l_ac1].oofk002_1,"' "
   ELSE
      LET l_sql = " SELECT oofk003,oofk004 ",
                  "   FROM oofk_t",
                  "  WHERE oofkent = '",g_enterprise,"' ",
                  "    AND oofk001 = '",g_oofj_m.oofj001,"' ",
                  "    AND oofk002 = '",g_oofk_d1[l_ac1].oofk002_1,"' ",
                  "    AND oofk003 <> '",g_oofk_d1_t.oofk003_1,"' ",
                  "    AND oofk004 <> '",g_oofk_d1_t.oofk004_1,"' "
   END IF
   PREPARE aooi391_chk_oofk003_pb FROM l_sql
   DECLARE aooi391_chk_oofk003_cs CURSOR FOR aooi391_chk_oofk003_pb
   FOREACH aooi391_chk_oofk003_cs INTO l_oofk003,l_oofk004
      IF cl_null(l_oofk004) AND NOT cl_null(l_oofk003) THEN
         LET g_errno = 'aoo-00228'
         RETURN
      ELSE
         IF p_oofk003 >= l_oofk003 AND p_oofk003<= l_oofk004 THEN
            LET g_errno = 'aoo-00228'
            RETURN
         END IF
      END IF
   END FOREACH

END FUNCTION]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   LET g_sql = "SELECT  UNIQUE oofk002,oofk003,oofk004,oofk005 FROM oofk_t",  
               " WHERE oofkent=? AND oofk001=? AND oofk003 = 0 AND oofk004 = 0 "
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
   END IF
   LET g_sql = g_sql, " ORDER BY oofk_t.oofk002"]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[      SELECT oofjl003,oofjl004 INTO g_browser[g_cnt].b_oofjl003,g_browser[g_cnt].b_oofjl004
        FROM oofjl_t
       WHERE oofjlent = g_enterprise
         AND oofjl001 = g_browser[g_cnt].b_oofj001
         AND oofjl002 = g_dlang]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="u" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[      CONSTRUCT g_wc_table2 ON oofk002_1,oofk003_1,oofk004_1,oofk005_1
           FROM s_detail2[1].oofk002_1,s_detail2[1].oofk003_1,s_detail2[1].oofk004_1,s_detail2[1].oofk005_1
                      
         BEFORE CONSTRUCT

         BEFORE FIELD oofk002_1

         AFTER FIELD oofk002_1

         BEFORE FIELD oofk003_1
        
         AFTER FIELD oofk003_1
            
         BEFORE FIELD oofk004_1
           
         AFTER FIELD oofk004_1
           
         BEFORE FIELD oofk005_1
            
         AFTER FIELD oofk005_1

      END CONSTRUCT]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   LET g_wc3 = g_wc_table2]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   INITIALIZE g_wc_table2 TO NULL]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[      DELETE FROM oofjl_t
       WHERE oofjlent = g_enterprise
         AND oofjl001 = g_oofj_m.oofj001
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_oofj_m.oofj001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF   ]]>
</point>
  <point name="global.variable" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[ TYPE type_g_oofk_d1        RECORD
       oofk002_1 LIKE oofk_t.oofk002, 
       oofk003_1 LIKE oofk_t.oofk003, 
       oofk004_1 LIKE oofk_t.oofk004, 
       oofk005_1 LIKE oofk_t.oofk005
       END RECORD
       
       
DEFINE g_oofk_d1          DYNAMIC ARRAY OF type_g_oofk_d1
DEFINE g_oofk_d1_t        type_g_oofk_d1
DEFINE g_wc_table2        STRING                        #第2個單身table所使用的g_wc
DEFINE g_wc3              STRING
DEFINE l_ac1              LIKE type_t.num5  ]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_oofk_d1.getLength() THEN
         LET g_detail_idx = g_oofk_d1.getLength()
      END IF
      IF g_detail_idx = 0 AND g_oofk_d1.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_oofk_d1.getLength() TO FORMONLY.cnt
   END IF
   ]]>
</point>
  <point name="init.init" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   CALL cl_set_comp_entry("oofk002_1",FALSE)
   CALL cl_set_comp_required("oofk005_1",TRUE)]]>
</point>
  <point name="input.body.before_input" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            LET l_n1 = 0
            SELECT COUNT(*) INTO l_n1
              FROM oofk_t
             WHERE oofkent = g_enterprise
               AND oofk001 = g_oofj_m.oofj001
               AND oofk002 = ' '
            IF l_n1 > 0  THEN
               CALL cl_err('','aoo-00237',0)
               EXIT DIALOG
            END IF]]>
</point>
  <point name="input.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   DEFINE  l_n1            LIKE type_t.num5]]>
</point>
  <point name="input.master_input.update_item" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[               IF NOT cl_null(g_oofj_m.oofj001)  THEN
                  CALL n_oofjl(g_oofj_m.oofj001)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_oofj_m.oofj001
                  CALL ap_ref_array2(g_ref_fields," SELECT oofjl003,oofjl004 FROM oofjl_t WHERE oofjlent = '"
                      ||g_enterprise||"' AND oofjl001 = ? AND oofjl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_oofj_m.oofjl003 = g_rtn_fields[1]
                  LET g_oofj_m.oofjl004 = g_rtn_fields[2]

                  DISPLAY BY NAME g_oofj_m.oofjl003
                  DISPLAY BY NAME g_oofj_m.oofjl004
               END IF]]>
</point>
  <point name="input.more_input" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[      INPUT ARRAY g_oofk_d1 FROM s_detail2.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_oofk_d1.getLength()+1) 
              LET g_insert = 'N' 
            END IF 
            CALL aooi391_b_fill1()
            LET g_rec_b = g_oofk_d1.getLength()
            LET l_n1 = 0
            SELECT COUNT(*) INTO l_n1
              FROM oofk_t
             WHERE oofkent = g_enterprise
               AND oofk001 = g_oofj_m.oofj001
               AND oofk002 <> ' '
            IF l_n1 > 0  THEN
               CALL cl_err('','aoo-00237',0)
               EXIT DIALOG
            END IF
               
               
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac1 = ARR_CURR()
            LET g_detail_idx = l_ac1
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac1 TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aooi391_cl USING g_enterprise,g_oofj_m.oofj001

            IF STATUS THEN
               CALL cl_err("OPEN aooi391_cl:", STATUS, 1)
               CLOSE aooi391_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_oofk_d1.getLength()
            
            IF g_rec_b >= l_ac1 AND g_oofk_d1[l_ac1].oofk002_1 IS NOT NULL AND NOT cl_null(g_oofk_d1[l_ac1].oofk003_1) AND NOT cl_null(g_oofk_d1[l_ac1].oofk004_1) THEN
               LET l_cmd='u'
			   LET g_oofk_d1_t.* = g_oofk_d1[l_ac1].*  #BACKUP
			   OPEN aooi391_bcl USING g_enterprise,g_oofj_m.oofj001,' ',g_oofk_d1[g_detail_idx].oofk003_1,g_oofk_d1[g_detail_idx].oofk004_1
			   IF SQLCA.sqlcode THEN
                  CALL cl_err("aooi391_bcl",SQLCA.sqlcode,1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aooi391_bcl INTO g_oofk_d1[l_ac1].oofk002_1,g_oofk_d1[l_ac1].oofk003_1,g_oofk_d1[l_ac1].oofk004_1,g_oofk_d1[l_ac1].oofk005_1
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_oofk_d1_t.oofk002_1,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  LET g_bfill = "N"
                  CALL aooi391_show()
				  LET g_bfill = "Y"
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_oofk_d1[l_ac1].* TO NULL 
            LET g_oofk_d1[l_ac1].oofk002_1 = ' '
            LET g_oofk_d1_t.* = g_oofk_d1[l_ac1].*     #新輸入資料
            CALL cl_show_fld_cont()
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM oofk_t 
             WHERE oofkent = g_enterprise 
               AND oofk001 = g_oofj_m.oofj001
               AND oofk002 = g_oofk_d1[l_ac1].oofk002_1
               AND oofk003 = g_oofk_d1[l_ac1].oofk003_1
               AND oofk004 = g_oofk_d1[l_ac1].oofk004_1
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
#               INITIALIZE gs_keys TO NULL 
#               LET gs_keys[1] = g_oofj_m.oofj001
#               LET gs_keys[2] = g_oofk_d1[l_ac1].oofk002_1
#               LET gs_keys[3] = g_oofk_d1[l_ac1].oofk003_1
#               LET gs_keys[4] = g_oofk_d1[l_ac1].oofk004_1
               INSERT INTO oofk_t(oofkent,oofk001,oofk002,oofk003,oofk004,oofk005) 
	           VALUES(g_enterprise,g_oofj_m.oofj001,g_oofk_d1[l_ac1].oofk002_1,g_oofk_d1[l_ac1].oofk003_1,g_oofk_d1[l_ac1].oofk004_1,g_oofk_d1[l_ac1].oofk005_1) 
	           IF SQLCA.sqlcode THEN
	              CALL cl_err("oofk_t",SQLCA.sqlcode,0)
	           END IF
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_oofk_d1[l_ac1].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("oofk_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF NOT cl_null(g_oofk_d1[l_ac1].oofk002_1) 
               AND NOT cl_null(g_oofk_d1_t.oofk003_1) 
               AND NOT cl_null(g_oofk_d1_t.oofk004_1) THEN 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
          
               DELETE FROM oofk_t
                WHERE oofkent = g_enterprise
                  AND oofk001 = g_oofj_m.oofj001 
                  AND oofk002 = g_oofk_d1_t.oofk002_1
                  AND oofk003 = g_oofk_d1_t.oofk003_1
                  AND oofk004 = g_oofk_d1_t.oofk004_1
              
               IF SQLCA.sqlcode THEN
                  CALL cl_err("oofk_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aooi391_bcl
               LET l_count = g_oofk_d1.getLength()
            END IF 
               INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_oofj_m.oofj001
               LET gs_keys[2] = g_oofk_d1[l_ac1].oofk002_1
               LET gs_keys[3] = g_oofk_d1[l_ac1].oofk003_1
               LET gs_keys[4] = g_oofk_d1[l_ac1].oofk004_1

              
         AFTER DELETE 
            CALL aooi391_delete_b('oofk_t',gs_keys,"'1'")
  
         BEFORE FIELD oofk003_1

         AFTER FIELD oofk003_1
            IF NOT cl_null(g_oofj_m.oofj001) AND g_oofk_d1[l_ac1].oofk002_1 IS NOT NULL AND NOT cl_null(g_oofk_d1[l_ac1].oofk003_1) AND NOT cl_null(g_oofk_d1[l_ac1].oofk004_1) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_oofj_m.oofj001 != g_oofj001_t OR g_oofk_d1[l_ac1].oofk002_1 != g_oofk_d1_t.oofk002_1 OR g_oofk_d1[l_ac1].oofk003_1 != g_oofk_d1_t.oofk003_1 OR g_oofk_d1[l_ac1].oofk004_1 != g_oofk_d1_t.oofk004_1))) THEN 
                  IF NOT ap_chk_notDup(g_oofk_d1[l_ac1].oofk003_1,"SELECT COUNT(*) FROM oofk_t WHERE "||"oofkent = '" ||g_enterprise|| "' AND "||"oofk001 = '"||g_oofj_m.oofj001 ||"' AND "|| "oofk002 = '"||g_oofk_d1[l_ac1].oofk002_1 ||"' AND "|| "oofk003 = '"||g_oofk_d1[l_ac1].oofk003_1 ||"' AND "|| "oofk004 = '"||g_oofk_d1[l_ac1].oofk004_1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF g_oofk_d1[l_ac1].oofk003_1 > g_oofk_d1[l_ac1].oofk004_1 THEN
                  CALL cl_err(g_oofk_d1[l_ac1].oofk003_1,'aoo-00229',1)
                  LET g_oofk_d1[l_ac1].oofk003_1 = g_oofk_d1_t.oofk003_1
                  NEXT FIELD oofk003_1
               END IF
            END IF
            IF NOT cl_null(g_oofk_d1[l_ac1].oofk003_1) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND g_oofk_d1[l_ac1].oofk003_1 <> g_oofk_d1_t.oofk003_1) THEN
                  CALL aooi391_chk_oofk(l_cmd,g_oofk_d1[l_ac1].oofk003_1)
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_oofk_d1[l_ac1].oofk003_1,g_errno,1)
                     LET g_oofk_d1[l_ac1].oofk003_1 = g_oofk_d1_t.oofk003_1
                     NEXT FIELD oofk003_1
                  END IF
               END IF
            END IF
            
         ON CHANGE oofk003_1

         BEFORE FIELD oofk004_1

         AFTER FIELD oofk004_1
            
            IF NOT cl_null(g_oofj_m.oofj001) AND g_oofk_d1[l_ac1].oofk002_1 IS NOT NULL AND NOT cl_null(g_oofk_d1[l_ac1].oofk003_1) AND NOT cl_null(g_oofk_d1[l_ac1].oofk004_1) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_oofj_m.oofj001 != g_oofj001_t OR g_oofk_d1[l_ac1].oofk002_1 != g_oofk_d1_t.oofk002_1 OR g_oofk_d1[l_ac1].oofk003_1 != g_oofk_d1_t.oofk003_1 OR g_oofk_d1[l_ac1].oofk004_1 != g_oofk_d1_t.oofk004_1))) THEN 
                  IF NOT ap_chk_notDup(g_oofk_d1[l_ac1].oofk004_1,"SELECT COUNT(*) FROM oofk_t WHERE "||"oofkent = '" ||g_enterprise|| "' AND "||"oofk001 = '"||g_oofj_m.oofj001 ||"' AND "|| "oofk002 = '"||g_oofk_d1[l_ac1].oofk002_1 ||"' AND "|| "oofk003 = '"||g_oofk_d1[l_ac1].oofk003_1 ||"' AND "|| "oofk004 = '"||g_oofk_d1[l_ac1].oofk004_1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF g_oofk_d1[l_ac1].oofk003_1 > g_oofk_d1[l_ac1].oofk004_1 THEN
                  CALL cl_err(g_oofk_d1[l_ac1].oofk004_1,'aoo-00229',1)
                  LET g_oofk_d1[l_ac1].oofk004_1 = g_oofk_d1_t.oofk004_1
                  NEXT FIELD oofk004_1
               END IF
            END IF
            IF NOT cl_null(g_oofk_d1[l_ac1].oofk004_1) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND g_oofk_d1[l_ac1].oofk004_1 <> g_oofk_d1_t.oofk004_1) THEN
                  CALL aooi391_chk_oofk(l_cmd,g_oofk_d1[l_ac1].oofk004_1)
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_oofk_d1[l_ac1].oofk004_1,g_errno,1)
                     LET g_oofk_d1[l_ac1].oofk004_1 = g_oofk_d1_t.oofk004_1
                     NEXT FIELD oofk004_1
                  END IF
               END IF
            END IF

         ON CHANGE oofk004_1
     
         BEFORE FIELD oofk005_1
         
         AFTER FIELD oofk005_1

         ON CHANGE oofk005_1

 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_oofk_d1[l_ac1].* = g_oofk_d1_t.*
               CLOSE aooi391_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_oofk_d1[l_ac1].oofk002_1,-263,1)
               LET g_oofk_d1[l_ac1].* = g_oofk_d1_t.*
            ELSE
      
               UPDATE oofk_t SET (oofk001,oofk002,oofk003,oofk004,oofk005) = (g_oofj_m.oofj001,g_oofk_d1[l_ac1].oofk002_1,g_oofk_d1[l_ac1].oofk003_1,g_oofk_d1[l_ac1].oofk004_1,g_oofk_d1[l_ac1].oofk005_1)
                WHERE oofkent = g_enterprise 
                  AND oofk001 = g_oofj_m.oofj001 
                  AND oofk002 = g_oofk_d1_t.oofk002_1  
                  AND oofk003 = g_oofk_d1_t.oofk003_1 
                  AND oofk004 = g_oofk_d1_t.oofk004_1  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("oofk_t",SQLCA.sqlcode,1)   
                  LET g_oofk_d1[l_ac1].* = g_oofk_d1_t.*
               ELSE
                  INITIALIZE gs_keys TO NULL 
                  LET gs_keys[1] = g_oofj_m.oofj001
                  LET gs_keys_bak[1] = g_oofj001_t 
                  LET gs_keys[2] = g_oofk_d1[l_ac1].oofk002_1
                  LET gs_keys_bak[2] = g_oofk_d1_t.oofk002_1
                  LET gs_keys[3] = g_oofk_d1[l_ac1].oofk003_1
                  LET gs_keys_bak[3] = g_oofk_d1_t.oofk003_1
                  LET gs_keys[4] = g_oofk_d1[l_ac1].oofk004_1
                  LET gs_keys_bak[4] = g_oofk_d1_t.oofk004_1
                  UPDATE oofk_t SET (oofk001,oofk002,oofk003,oofk004,oofk005) = 
                                    (g_oofj_m.oofj001,g_oofk_d1[l_ac1].oofk002_1,g_oofk_d1[l_ac1].oofk003_1,g_oofk_d1[l_ac1].oofk004_1,g_oofk_d1[l_ac1].oofk005_1) 
                   WHERE oofkent = g_enterprise
                     AND oofk001 = g_oofj001_t
                     AND oofk002 = g_oofk_d1_t.oofk002_1
                     AND oofk003 = g_oofk_d1_t.oofk003_1
                     AND oofk004 = g_oofk_d1_t.oofk004_1
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("",SQLCA.sqlcode,0)
                  END IF
               END IF
            END IF
            
         AFTER ROW
            CALL aooi391_unlock_b("oofk_t","'1'")
            CALL s_transaction_end('Y','0')           
         AFTER INPUT
         
      END INPUT]]>
</point>
  <point name="insert.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   CALL g_oofk_d1.clear()  ]]>
</point>
  <point name="reproduce.a.oofj001" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[         IF NOT cl_null(l_newno) THEN
            IF NOT ap_chk_notDup(l_newno,"SELECT COUNT(*) FROM oofj_t WHERE "||"oofjent = '" ||g_enterprise|| "' AND "||"oofj001 = '"||l_newno ||"'",'std-00004',0) THEN 
               LET l_newno = ""
               NEXT FIELD CURRENT
            END IF
         END IF]]>
</point>
  <point name="reproduce.head.a_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   INSERT INTO oofjl_t(oofjlent,oofjl001,oofjl002,oofjl003,oofjl004)
   SELECT g_enterprise,l_newno,oofjl002,oofjl003,oofjl004
     FROM oofjl_t
    WHERE oofjlent = g_enterprise 
      AND oofjl001 = g_oofj_m.oofj001
   IF SQLCA.sqlcode THEN
      CALL cl_err("oofjl_t",SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF    ]]>
</point>
  <point name="reproduce.head.m_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[     ]]>
</point>
  <point name="show.after" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   IF g_bfill = "Y" THEN
      CALL aooi391_b_fill1()                 #單身2
   END IF]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[         DISPLAY ARRAY g_oofk_d1 TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               CALL aooi391_idx_chk()
			   LET l_ac1 = DIALOG.getCurrentRow("s_detail2")
  
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac1 = DIALOG.getCurrentRow("s_detail2")
               CALL aooi391_idx_chk()
               LET g_current_page = 2
               
         END DISPLAY]]>
</point>
  <point name="global.memo" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.oofj001" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.oofj001" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.oofjl003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.oofjl003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.c.oofjl003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.oofjl004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.oofjl004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.c.oofjl004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.oofjstus" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.oofjstus" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.c.oofjstus" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.oofjownid" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.oofjownid" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.oofjowndp" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.oofjowndp" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.oofjcrtid" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.oofjcrtid" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.oofjcrtdp" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.oofjcrtdp" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.oofjcrtdt" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.oofjmodid" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.oofjmodid" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.oofjmoddt" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.oofk002" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.oofk002" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.oofk002" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.oofk003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.oofk003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.oofk003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.oofk004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.oofk004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.oofk004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.oofk005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.oofk005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.oofk005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="query.other" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="fetch.after" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="insert.default" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.other_sql" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.before_input" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.oofj001" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.oofj001" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.oofjl003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.a.oofjl003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.oofjl003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.oofjl004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.a.oofjl004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.oofjl004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.oofjstus" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.a.oofjstus" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.oofjstus" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.c.oofj001" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.c.oofjl003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.c.oofjl004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.c.oofjstus" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.oofk002" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.oofk002" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.oofk003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.oofk003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.oofk004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.oofk004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.oofk005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.oofk005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.oofk005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.oofk002" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.oofk003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.oofk004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.oofk005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="show.body.reference" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="show.other" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete_b.other" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="insert_b.other" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="update_b.other" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="lock_b.other" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="statechange.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="statechange.before" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="statechange.inactive" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="statechange.active" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="statechange.after" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="">
<![CDATA[]]>
</point>
  <section id="aooi391.b_fill" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aooi391_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_oofk_d.clear()    #g_oofk_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aooi391_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE oofk002,oofk003,oofk004,oofk005 FROM oofk_t",   
                  " INNER JOIN oofj_t ON oofj001 = oofk001 ",
 
                  #"",
                  
                  "",
                  " WHERE oofkent=? AND oofk001=?"
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY oofk_t.oofk002,oofk_t.oofk003,oofk_t.oofk004"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      PREPARE aooi391_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR aooi391_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_oofj_m.oofj001
 
                                               
      FOREACH b_fill_cs INTO g_oofk_d[l_ac].oofk002,g_oofk_d[l_ac].oofk003,g_oofk_d[l_ac].oofk004,g_oofk_d[l_ac].oofk005 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec AND g_error_show = 1 THEN
            CALL cl_err( '', 9035, 1)
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_oofk_d.deleteElement(g_oofk_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aooi391_pb
 
   
END FUNCTION
]]>
</section>
  <section id="aooi391.b_fill2" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aooi391_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aooi391_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="aooi391.browser_fill" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aooi391_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_oofj_m.* TO NULL
   CALL g_oofk_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "oofj001"
 
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE oofj001 ",
 
                        " FROM oofj_t ",
                              " ",
                              " LEFT JOIN oofk_t ON oofkent = oofjent AND oofj001 = oofk001 ",
 
 
                              " LEFT JOIN oofjl_t ON oofj001 = oofjl001 AND oofjl002 = '",g_lang,"' ", 
                              " ", 
                       " WHERE oofjent = '" ||g_enterprise|| "' AND oofkent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE oofj001 ",
 
                        " FROM oofj_t ", 
                              " ",
                              " LEFT JOIN oofjl_t ON oofj001 = oofjl001 AND oofjl002 = '",g_lang,"' ",
                        "WHERE oofjent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED
 
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
   
   #LET g_page_action = ps_page_action          # Keep Action
   
   IF ps_page_action = "F" OR
      ps_page_action = "P" OR
      ps_page_action = "N" OR
      ps_page_action = "L" THEN
      LET g_page_action = ps_page_action
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
            LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
         
      WHEN '/'
         LET g_pagestart = g_jump
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = 1
         END IF
         
   END CASE
  
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
      #依照oofj001,'','' Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT oofjstus,oofj001,'','',DENSE_RANK() OVER(ORDER BY oofj001 ", 
          g_order,") AS RANK ",
                        " FROM oofj_t ",
                              " ",
                              " LEFT JOIN oofk_t ON oofkent = oofjent AND oofj001 = oofk001 ",
 
 
                              " LEFT JOIN oofjl_t ON oofj001 = oofjl001 AND oofjl002 = '",g_lang,"' ",
                              " ",
                       " ",
                       " WHERE oofjent = '" ||g_enterprise|| "' AND ",g_wc," AND ",g_wc2
   ELSE
      #單身無輸入資料
      LET l_sql_rank = "SELECT DISTINCT oofjstus,oofj001,'','',DENSE_RANK() OVER(ORDER BY oofj001 ", 
          g_order,") AS RANK ",
                       " FROM oofj_t ",
                            "  ",
                            "  LEFT JOIN oofjl_t ON oofj001 = oofjl001 AND oofjl002 = '",g_lang,"' ",
                       " WHERE oofjent = '" ||g_enterprise|| "' AND ", g_wc
   END IF
   
   #定義翻頁CURSOR
   LET g_sql= "SELECT oofjstus,oofj001,'','' FROM (",l_sql_rank,") WHERE ",
              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
               
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
               
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_oofj001,g_browser[g_cnt].b_oofjl003, 
       g_browser[g_cnt].b_oofjl004
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
 
 
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="aooi391.browser_search" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aooi391_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY oofj001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aooi391_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aooi391.construct" ver="1" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aooi391_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_oofj_m.* TO NULL
   CALL g_oofk_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON oofj001,oofjl003,oofjl004,oofjstus,oofjownid,oofjowndp,oofjcrtid,oofjcrtdp, 
          oofjcrtdt,oofjmodid,oofjmoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<oofjownid>>----
         #ON ACTION controlp INFIELD oofjownid
         #   CALL q_common('oofj_t','oofjownid',TRUE,FALSE,g_oofj_m.oofjownid) RETURNING ls_return
         #   DISPLAY ls_return TO oofjownid
         #   NEXT FIELD oofjownid  
         #
         ##----<<oofjowndp>>----
         #ON ACTION controlp INFIELD oofjowndp
         #   CALL q_common('oofj_t','oofjowndp',TRUE,FALSE,g_oofj_m.oofjowndp) RETURNING ls_return
         #   DISPLAY ls_return TO oofjowndp
         #   NEXT FIELD oofjowndp
         #
         ##----<<oofjcrtid>>----
         #ON ACTION controlp INFIELD oofjcrtid
         #   CALL q_common('oofj_t','oofjcrtid',TRUE,FALSE,g_oofj_m.oofjcrtid) RETURNING ls_return
         #   DISPLAY ls_return TO oofjcrtid
         #   NEXT FIELD oofjcrtid
         #
         ##----<<oofjcrtdp>>----
         #ON ACTION controlp INFIELD oofjcrtdp
         #   CALL q_common('oofj_t','oofjcrtdp',TRUE,FALSE,g_oofj_m.oofjcrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO oofjcrtdp
         #   NEXT FIELD oofjcrtdp
         #
         ##----<<oofjmodid>>----
         #ON ACTION controlp INFIELD oofjmodid
         #   CALL q_common('oofj_t','oofjmodid',TRUE,FALSE,g_oofj_m.oofjmodid) RETURNING ls_return
         #   DISPLAY ls_return TO oofjmodid
         #   NEXT FIELD oofjmodid
         #
         ##----<<oofjcnfid>>----
         ##ON ACTION controlp INFIELD oofjcnfid
         ##   CALL q_common('oofj_t','oofjcnfid',TRUE,FALSE,g_oofj_m.oofjcnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO oofjcnfid
         ##   NEXT FIELD oofjcnfid
         #
         ##----<<oofjpstid>>----
         ##ON ACTION controlp INFIELD oofjpstid
         ##   CALL q_common('oofj_t','oofjpstid',TRUE,FALSE,g_oofj_m.oofjpstid) RETURNING ls_return
         ##   DISPLAY ls_return TO oofjpstid
         ##   NEXT FIELD oofjpstid
         
         ##----<<oofjcrtdt>>----
         AFTER FIELD oofjcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<oofjmoddt>>----
         AFTER FIELD oofjmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<oofjcnfdt>>----
         #AFTER FIELD oofjcnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<oofjpstdt>>----
         #AFTER FIELD oofjpstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
         #---------------------------<  Master  >---------------------------
         #----<<oofj001>>----
         #Ctrlp:construct.c.oofj001
         ON ACTION controlp INFIELD oofj001
            #add-point:ON ACTION controlp INFIELD oofj001
            {<point name="construct.c.oofj001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oofj001
            #add-point:BEFORE FIELD oofj001
            {<point name="construct.b.oofj001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofj001
            
            #add-point:AFTER FIELD oofj001
            {<point name="construct.a.oofj001" />}
            #END add-point
            
 
         #----<<oofjl003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oofjl003
            #add-point:BEFORE FIELD oofjl003
            {<point name="construct.b.oofjl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofjl003
            
            #add-point:AFTER FIELD oofjl003
            {<point name="construct.a.oofjl003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.oofjl003
         ON ACTION controlp INFIELD oofjl003
            #add-point:ON ACTION controlp INFIELD oofjl003
            {<point name="construct.c.oofjl003" />}
            #END add-point
 
         #----<<oofjl004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oofjl004
            #add-point:BEFORE FIELD oofjl004
            {<point name="construct.b.oofjl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofjl004
            
            #add-point:AFTER FIELD oofjl004
            {<point name="construct.a.oofjl004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.oofjl004
         ON ACTION controlp INFIELD oofjl004
            #add-point:ON ACTION controlp INFIELD oofjl004
            {<point name="construct.c.oofjl004" />}
            #END add-point
 
         #----<<oofjstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oofjstus
            #add-point:BEFORE FIELD oofjstus
            {<point name="construct.b.oofjstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofjstus
            
            #add-point:AFTER FIELD oofjstus
            {<point name="construct.a.oofjstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.oofjstus
         ON ACTION controlp INFIELD oofjstus
            #add-point:ON ACTION controlp INFIELD oofjstus
            {<point name="construct.c.oofjstus" />}
            #END add-point
 
         #----<<oofjownid>>----
         #Ctrlp:construct.c.oofjownid
         ON ACTION controlp INFIELD oofjownid
            #add-point:ON ACTION controlp INFIELD oofjownid
            {<point name="construct.c.oofjownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oofjownid
            #add-point:BEFORE FIELD oofjownid
            {<point name="construct.b.oofjownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofjownid
            
            #add-point:AFTER FIELD oofjownid
            {<point name="construct.a.oofjownid" />}
            #END add-point
            
 
         #----<<oofjowndp>>----
         #Ctrlp:construct.c.oofjowndp
         ON ACTION controlp INFIELD oofjowndp
            #add-point:ON ACTION controlp INFIELD oofjowndp
            {<point name="construct.c.oofjowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oofjowndp
            #add-point:BEFORE FIELD oofjowndp
            {<point name="construct.b.oofjowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofjowndp
            
            #add-point:AFTER FIELD oofjowndp
            {<point name="construct.a.oofjowndp" />}
            #END add-point
            
 
         #----<<oofjcrtid>>----
         #Ctrlp:construct.c.oofjcrtid
         ON ACTION controlp INFIELD oofjcrtid
            #add-point:ON ACTION controlp INFIELD oofjcrtid
            {<point name="construct.c.oofjcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oofjcrtid
            #add-point:BEFORE FIELD oofjcrtid
            {<point name="construct.b.oofjcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofjcrtid
            
            #add-point:AFTER FIELD oofjcrtid
            {<point name="construct.a.oofjcrtid" />}
            #END add-point
            
 
         #----<<oofjcrtdp>>----
         #Ctrlp:construct.c.oofjcrtdp
         ON ACTION controlp INFIELD oofjcrtdp
            #add-point:ON ACTION controlp INFIELD oofjcrtdp
            {<point name="construct.c.oofjcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oofjcrtdp
            #add-point:BEFORE FIELD oofjcrtdp
            {<point name="construct.b.oofjcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofjcrtdp
            
            #add-point:AFTER FIELD oofjcrtdp
            {<point name="construct.a.oofjcrtdp" />}
            #END add-point
            
 
         #----<<oofjcrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oofjcrtdt
            #add-point:BEFORE FIELD oofjcrtdt
            {<point name="construct.b.oofjcrtdt" />}
            #END add-point
 
         #----<<oofjmodid>>----
         #Ctrlp:construct.c.oofjmodid
         ON ACTION controlp INFIELD oofjmodid
            #add-point:ON ACTION controlp INFIELD oofjmodid
            {<point name="construct.c.oofjmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oofjmodid
            #add-point:BEFORE FIELD oofjmodid
            {<point name="construct.b.oofjmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofjmodid
            
            #add-point:AFTER FIELD oofjmodid
            {<point name="construct.a.oofjmodid" />}
            #END add-point
            
 
         #----<<oofjmoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oofjmoddt
            #add-point:BEFORE FIELD oofjmoddt
            {<point name="construct.b.oofjmoddt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON oofk002,oofk003,oofk004,oofk005
           FROM s_detail1[1].oofk002,s_detail1[1].oofk003,s_detail1[1].oofk004,s_detail1[1].oofk005
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<oofk002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oofk002
            #add-point:BEFORE FIELD oofk002
            {<point name="construct.b.page1.oofk002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofk002
            
            #add-point:AFTER FIELD oofk002
            {<point name="construct.a.page1.oofk002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.oofk002
         ON ACTION controlp INFIELD oofk002
            #add-point:ON ACTION controlp INFIELD oofk002
            {<point name="construct.c.page1.oofk002" />}
            #END add-point
 
         #----<<oofk003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oofk003
            #add-point:BEFORE FIELD oofk003
            {<point name="construct.b.page1.oofk003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofk003
            
            #add-point:AFTER FIELD oofk003
            {<point name="construct.a.page1.oofk003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.oofk003
         ON ACTION controlp INFIELD oofk003
            #add-point:ON ACTION controlp INFIELD oofk003
            {<point name="construct.c.page1.oofk003" />}
            #END add-point
 
         #----<<oofk004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oofk004
            #add-point:BEFORE FIELD oofk004
            {<point name="construct.b.page1.oofk004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofk004
            
            #add-point:AFTER FIELD oofk004
            {<point name="construct.a.page1.oofk004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.oofk004
         ON ACTION controlp INFIELD oofk004
            #add-point:ON ACTION controlp INFIELD oofk004
            {<point name="construct.c.page1.oofk004" />}
            #END add-point
 
         #----<<oofk005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oofk005
            #add-point:BEFORE FIELD oofk005
            {<point name="construct.b.page1.oofk005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofk005
            
            #add-point:AFTER FIELD oofk005
            {<point name="construct.a.page1.oofk005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.oofk005
         ON ACTION controlp INFIELD oofk005
            #add-point:ON ACTION controlp INFIELD oofk005
            {<point name="construct.c.page1.oofk005" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aooi391.default_search" ver="1" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aooi391_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " oofj001 = '", g_argv[1], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aooi391.delete" ver="1" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION aooi391_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_oofj_m.oofj001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
    SELECT UNIQUE oofj001,oofjstus,oofjownid,oofjowndp,oofjcrtid,oofjcrtdp,oofjcrtdt,oofjmodid,oofjmoddt 

 INTO g_oofj_m.oofj001,g_oofj_m.oofjstus,g_oofj_m.oofjownid,g_oofj_m.oofjowndp,g_oofj_m.oofjcrtid,g_oofj_m.oofjcrtdp, 
     g_oofj_m.oofjcrtdt,g_oofj_m.oofjmodid,g_oofj_m.oofjmoddt
 FROM oofj_t
 WHERE oofjent = g_enterprise AND oofj001 = g_oofj_m.oofj001
   
   LET g_master_multi_table_t.oofjl001 = g_oofj_m.oofj001
LET g_master_multi_table_t.oofjl003 = g_oofj_m.oofjl003
LET g_master_multi_table_t.oofjl004 = g_oofj_m.oofjl004
 
 
   CALL aooi391_show()
   
   CALL s_transaction_begin()
 
   OPEN aooi391_cl USING g_enterprise,g_oofj_m.oofj001
 
   IF STATUS THEN
      CALL cl_err("OPEN aooi391_cl:", STATUS, 1)
      CLOSE aooi391_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   FETCH aooi391_cl INTO g_oofj_m.oofj001,g_oofj_m.oofjl003,g_oofj_m.oofjl004,g_oofj_m.oofjstus,g_oofj_m.oofjownid, 
       g_oofj_m.oofjownid_desc,g_oofj_m.oofjowndp,g_oofj_m.oofjowndp_desc,g_oofj_m.oofjcrtid,g_oofj_m.oofjcrtid_desc, 
       g_oofj_m.oofjcrtdp,g_oofj_m.oofjcrtdp_desc,g_oofj_m.oofjcrtdt,g_oofj_m.oofjmodid,g_oofj_m.oofjmodid_desc, 
       g_oofj_m.oofjmoddt              #鎖住將被更改或取消的資料
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_oofj_m.oofj001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      INITIALIZE g_doc.* TO NULL         
      LET g_doc.column1 = "oofj001"       
      LET g_doc.value1 = g_oofj_m.oofj001     
      CALL cl_doc_remove()   
  
      #資料備份
      LET g_oofj001_t = g_oofj_m.oofj001
 
 
      DELETE FROM oofj_t
       WHERE oofjent = g_enterprise AND oofj001 = g_oofj_m.oofj001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_oofj_m.oofj001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM oofk_t
       WHERE oofkent = g_enterprise AND oofk001 = g_oofj_m.oofj001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("oofk_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_oofk_d.clear() 
 
     
      CALL aooi391_ui_browser_refresh()  
      CALL aooi391_ui_headershow()  
      CALL aooi391_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aooi391_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL aooi391_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.oofjl001
   LET l_field_keys[01] = 'oofjl001'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'oofjl002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'oofjl_t')
 
      
      #單身多語言刪除
      
 
 
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE aooi391_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_oofj_m.oofj001,'D')
    
END FUNCTION
]]>
</section>
  <section id="aooi391.delete_b" ver="1" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aooi391_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM oofk_t
       WHERE oofkent = g_enterprise AND
         oofk001 = ps_keys_bak[1] AND oofk002 = ps_keys_bak[2] AND oofk003 = ps_keys_bak[3] AND oofk004 = ps_keys_bak[4]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aooi391.description" ver="1" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(版次:1) Build-000074
#+ 
#+ Filename...: aooi391
#+ Description: 編碼轉換表維護作業
#+ Creator....: 02482(13/09/25)
#+ Modifier...: 02482(13/09/25)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="aooi391.detail_reproduce" ver="1" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aooi391_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE oofk_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aooi391_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aooi391_detail AS ",
                "SELECT * FROM oofk_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aooi391_detail SELECT * FROM oofk_t 
                                         WHERE oofkent = g_enterprise AND oofk001 = g_oofj001_t
 
   
   #將key修正為調整後   
   UPDATE aooi391_detail 
      #更新key欄位
      SET oofk001 = g_oofj_m.oofj001
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO oofk_t SELECT * FROM aooi391_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aooi391_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_oofj001_t = g_oofj_m.oofj001
 
   
   DROP TABLE aooi391_detail
   
END FUNCTION
]]>
</section>
  <section id="aooi391.detail_show" ver="1" status="" src="s">
<![CDATA[#+ 單身reference detail_show
PRIVATE FUNCTION aooi391_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aooi391.fetch" ver="1" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aooi391_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_oofj_m.oofj001 = g_browser[g_current_idx].b_oofj001
 
   
   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE oofj001,oofjstus,oofjownid,oofjowndp,oofjcrtid,oofjcrtdp,oofjcrtdt,oofjmodid,oofjmoddt 

 INTO g_oofj_m.oofj001,g_oofj_m.oofjstus,g_oofj_m.oofjownid,g_oofj_m.oofjowndp,g_oofj_m.oofjcrtid,g_oofj_m.oofjcrtdp, 
     g_oofj_m.oofjcrtdt,g_oofj_m.oofjmodid,g_oofj_m.oofjmoddt
 FROM oofj_t
 WHERE oofjent = g_enterprise AND oofj001 = g_oofj_m.oofj001
   IF SQLCA.sqlcode THEN
      CALL cl_err("oofj_t",SQLCA.sqlcode,1)
      INITIALIZE g_oofj_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL aooi391_show()
 
END FUNCTION
]]>
</section>
  <section id="aooi391.fill_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aooi391_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段define
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="aooi391.filter" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aooi391_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON oofj001
                          FROM s_browse[1].b_oofj001
 
         BEFORE CONSTRUCT
               DISPLAY aooi391_filter_parser('oofj001') TO s_browse[1].b_oofj001
      
                            #add-point:filter段cs_ctrl
                            {<point name="filter.cs_ctrl"/>}
                            #end add-point
	  
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aooi391_filter_show('oofj001')
 
END FUNCTION
]]>
</section>
  <section id="aooi391.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aooi391_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="aooi391.filter_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aooi391_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aooi391_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="aooi391.global" ver="1" status="" src="s">
<![CDATA[{<point name="global.memo" />}
    
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_oofj_m        RECORD
       oofj001 LIKE oofj_t.oofj001, 
   oofjl003 LIKE oofjl_t.oofjl003, 
   oofjl004 LIKE oofjl_t.oofjl004, 
   oofjstus LIKE oofj_t.oofjstus, 
   oofjownid LIKE oofj_t.oofjownid, 
   oofjownid_desc LIKE type_t.chr80, 
   oofjowndp LIKE oofj_t.oofjowndp, 
   oofjowndp_desc LIKE type_t.chr80, 
   oofjcrtid LIKE oofj_t.oofjcrtid, 
   oofjcrtid_desc LIKE type_t.chr80, 
   oofjcrtdp LIKE oofj_t.oofjcrtdp, 
   oofjcrtdp_desc LIKE type_t.chr80, 
   oofjcrtdt DATETIME YEAR TO SECOND, 
   oofjmodid LIKE oofj_t.oofjmodid, 
   oofjmodid_desc LIKE type_t.chr80, 
   oofjmoddt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_oofk_d        RECORD
       oofk002 LIKE oofk_t.oofk002, 
   oofk003 LIKE oofk_t.oofk003, 
   oofk004 LIKE oofk_t.oofk004, 
   oofk005 LIKE oofk_t.oofk005
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_oofj_m          type_g_oofj_m
DEFINE g_oofj_m_t        type_g_oofj_m
 
   DEFINE g_oofj001_t LIKE oofj_t.oofj001
 
 
DEFINE g_oofk_d          DYNAMIC ARRAY OF type_g_oofk_d
DEFINE g_oofk_d_t        type_g_oofk_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_oofj001 LIKE oofj_t.oofj001,
   b_oofjl003 LIKE type_t.chr80,
   b_oofjl004 LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_oofj001 LIKE oofj_t.oofj001,
   b_oofjl003 LIKE type_t.chr80,
   b_oofjl004 LIKE type_t.chr80
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      oofjl001 LIKE oofjl_t.oofjl001,
      oofjl003 LIKE oofjl_t.oofjl003,
      oofjl004 LIKE oofjl_t.oofjl004
      END RECORD
#無單身append欄位定義
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="aooi391.idx_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION aooi391_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_oofk_d.getLength() THEN
         LET g_detail_idx = g_oofk_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_oofk_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_oofk_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aooi391.init" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aooi391_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('oofjstus','17','N,Y')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aooi391_default_search()
    
END FUNCTION
]]>
</section>
  <section id="aooi391.input" ver="1" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION aooi391_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT oofk002,oofk003,oofk004,oofk005 FROM oofk_t WHERE oofkent=? AND oofk001=?  
       AND oofk002=? AND oofk003=? AND oofk004=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE aooi391_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aooi391_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aooi391_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_oofj_m.oofj001,g_oofj_m.oofjl003,g_oofj_m.oofjl004,g_oofj_m.oofjstus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="aooi391.input.body" ver="1" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_oofk_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_oofk_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aooi391_b_fill()
            LET g_rec_b = g_oofk_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aooi391_cl USING g_enterprise,g_oofj_m.oofj001
 
            IF STATUS THEN
               CALL cl_err("OPEN aooi391_cl:", STATUS, 1)
               CLOSE aooi391_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_oofk_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_oofk_d[l_ac].oofk002 IS NOT NULL
               AND g_oofk_d[l_ac].oofk003 IS NOT NULL
 
               AND g_oofk_d[l_ac].oofk004 IS NOT NULL
 
 
            THEN
               LET l_cmd='u'
               LET g_oofk_d_t.* = g_oofk_d[l_ac].*  #BACKUP
               CALL aooi391_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aooi391_set_no_entry_b(l_cmd)
               IF NOT aooi391_lock_b("oofk_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aooi391_bcl INTO g_oofk_d[l_ac].oofk002,g_oofk_d[l_ac].oofk003,g_oofk_d[l_ac].oofk004, 
                      g_oofk_d[l_ac].oofk005
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_oofk_d_t.oofk002,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aooi391_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_oofk_d[l_ac].* TO NULL 
                  LET g_oofk_d[l_ac].oofk003 = "0"
      LET g_oofk_d[l_ac].oofk004 = "0"
 
 
            LET g_oofk_d_t.* = g_oofk_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aooi391_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aooi391_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_oofk_d[li_reproduce_target].* = g_oofk_d[li_reproduce].*
 
               LET g_oofk_d[li_reproduce_target].oofk002 = NULL
               LET g_oofk_d[li_reproduce_target].oofk003 = NULL
 
               LET g_oofk_d[li_reproduce_target].oofk004 = NULL
 
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM oofk_t 
             WHERE oofkent = g_enterprise AND oofk001 = g_oofj_m.oofj001
 
               AND oofk002 = g_oofk_d[l_ac].oofk002
               AND oofk003 = g_oofk_d[l_ac].oofk003
 
               AND oofk004 = g_oofk_d[l_ac].oofk004
 
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_oofj_m.oofj001
               LET gs_keys[2] = g_oofk_d[g_detail_idx].oofk002
               LET gs_keys[3] = g_oofk_d[g_detail_idx].oofk003
               LET gs_keys[4] = g_oofk_d[g_detail_idx].oofk004
               CALL aooi391_insert_b('oofk_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_oofk_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("oofk_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aooi391_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_oofk_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_oofk_d.deleteElement(l_ac)
               NEXT FIELD oofk002
            END IF
         
            IF g_oofk_d[l_ac].oofk002 IS NOT NULL
               AND g_oofk_d_t.oofk003 IS NOT NULL
 
               AND g_oofk_d_t.oofk004 IS NOT NULL
 
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM oofk_t
                WHERE oofkent = g_enterprise AND oofk001 = g_oofj_m.oofj001 AND
 
                      oofk002 = g_oofk_d_t.oofk002
                  AND oofk003 = g_oofk_d_t.oofk003
 
                  AND oofk004 = g_oofk_d_t.oofk004
 
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("oofk_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aooi391_bcl
               LET l_count = g_oofk_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_oofj_m.oofj001
               LET gs_keys[2] = g_oofk_d[g_detail_idx].oofk002
               LET gs_keys[3] = g_oofk_d[g_detail_idx].oofk003
               LET gs_keys[4] = g_oofk_d[g_detail_idx].oofk004
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aooi391_delete_b('oofk_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<oofk002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oofk002
            #add-point:BEFORE FIELD oofk002
            {<point name="input.b.page1.oofk002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofk002
            
            #add-point:AFTER FIELD oofk002
            {<point name="input.a.page1.oofk002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oofk002
            #add-point:ON CHANGE oofk002
            {<point name="input.g.page1.oofk002" />}
            #END add-point
 
         #----<<oofk003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oofk003
            #add-point:BEFORE FIELD oofk003
            {<point name="input.b.page1.oofk003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofk003
            
            #add-point:AFTER FIELD oofk003
            {<point name="input.a.page1.oofk003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oofk003
            #add-point:ON CHANGE oofk003
            {<point name="input.g.page1.oofk003" />}
            #END add-point
 
         #----<<oofk004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oofk004
            #add-point:BEFORE FIELD oofk004
            {<point name="input.b.page1.oofk004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofk004
            
            #add-point:AFTER FIELD oofk004
            {<point name="input.a.page1.oofk004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oofk004
            #add-point:ON CHANGE oofk004
            {<point name="input.g.page1.oofk004" />}
            #END add-point
 
         #----<<oofk005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oofk005
            #add-point:BEFORE FIELD oofk005
            {<point name="input.b.page1.oofk005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofk005
            
            #add-point:AFTER FIELD oofk005
            {<point name="input.a.page1.oofk005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oofk005
            #add-point:ON CHANGE oofk005
            {<point name="input.g.page1.oofk005" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<oofk002>>----
         #Ctrlp:input.c.page1.oofk002
         ON ACTION controlp INFIELD oofk002
            #add-point:ON ACTION controlp INFIELD oofk002
            {<point name="input.c.page1.oofk002" />}
            #END add-point
 
         #----<<oofk003>>----
         #Ctrlp:input.c.page1.oofk003
         ON ACTION controlp INFIELD oofk003
            #add-point:ON ACTION controlp INFIELD oofk003
            {<point name="input.c.page1.oofk003" />}
            #END add-point
 
         #----<<oofk004>>----
         #Ctrlp:input.c.page1.oofk004
         ON ACTION controlp INFIELD oofk004
            #add-point:ON ACTION controlp INFIELD oofk004
            {<point name="input.c.page1.oofk004" />}
            #END add-point
 
         #----<<oofk005>>----
         #Ctrlp:input.c.page1.oofk005
         ON ACTION controlp INFIELD oofk005
            #add-point:ON ACTION controlp INFIELD oofk005
            {<point name="input.c.page1.oofk005" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_oofk_d[l_ac].* = g_oofk_d_t.*
               CLOSE aooi391_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_oofk_d[l_ac].oofk002,-263,1)
               LET g_oofk_d[l_ac].* = g_oofk_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE oofk_t SET (oofk001,oofk002,oofk003,oofk004,oofk005) = (g_oofj_m.oofj001,g_oofk_d[l_ac].oofk002, 
                   g_oofk_d[l_ac].oofk003,g_oofk_d[l_ac].oofk004,g_oofk_d[l_ac].oofk005)
                WHERE oofkent = g_enterprise AND oofk001 = g_oofj_m.oofj001 
 
                  AND oofk002 = g_oofk_d_t.oofk002 #項次   
                  AND oofk003 = g_oofk_d_t.oofk003  
 
                  AND oofk004 = g_oofk_d_t.oofk004  
 
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("oofk_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_oofk_d[l_ac].* = g_oofk_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("oofk_t",SQLCA.sqlcode,1)
                     LET g_oofk_d[l_ac].* = g_oofk_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_oofj_m.oofj001
               LET gs_keys_bak[1] = g_oofj001_t
               LET gs_keys[2] = g_oofk_d[g_detail_idx].oofk002
               LET gs_keys_bak[2] = g_oofk_d_t.oofk002
               LET gs_keys[3] = g_oofk_d[g_detail_idx].oofk003
               LET gs_keys_bak[3] = g_oofk_d_t.oofk003
               LET gs_keys[4] = g_oofk_d[g_detail_idx].oofk004
               LET gs_keys_bak[4] = g_oofk_d_t.oofk004
               CALL aooi391_update_b('oofk_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aooi391_unlock_b("oofk_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_oofk_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_oofk_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="aooi391.input.head" ver="1" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_oofj_m.oofj001,g_oofj_m.oofjl003,g_oofj_m.oofjl004,g_oofj_m.oofjstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
 
         ON ACTION update_item
            #add-point:ON ACTION update_item
            {<point name="input.master_input.update_item" />}
            #END add-point
 
     
         BEFORE INPUT
            LET g_master_multi_table_t.oofjl001 = g_oofj_m.oofj001
LET g_master_multi_table_t.oofjl003 = g_oofj_m.oofjl003
LET g_master_multi_table_t.oofjl004 = g_oofj_m.oofjl004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.oofjl001 = ''
LET g_master_multi_table_t.oofjl003 = ''
LET g_master_multi_table_t.oofjl004 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
         #---------------------------<  Master  >---------------------------
         #----<<oofj001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oofj001
            #add-point:BEFORE FIELD oofj001
            {<point name="input.b.oofj001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofj001
            
            #add-point:AFTER FIELD oofj001
            {<point name="input.a.oofj001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oofj001
            #add-point:ON CHANGE oofj001
            {<point name="input.g.oofj001" />}
            #END add-point
 
         #----<<oofjl003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oofjl003
            #add-point:BEFORE FIELD oofjl003
            {<point name="input.b.oofjl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofjl003
            
            #add-point:AFTER FIELD oofjl003
            {<point name="input.a.oofjl003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oofjl003
            #add-point:ON CHANGE oofjl003
            {<point name="input.g.oofjl003" />}
            #END add-point
 
         #----<<oofjl004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oofjl004
            #add-point:BEFORE FIELD oofjl004
            {<point name="input.b.oofjl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofjl004
            
            #add-point:AFTER FIELD oofjl004
            {<point name="input.a.oofjl004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oofjl004
            #add-point:ON CHANGE oofjl004
            {<point name="input.g.oofjl004" />}
            #END add-point
 
         #----<<oofjstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oofjstus
            #add-point:BEFORE FIELD oofjstus
            {<point name="input.b.oofjstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oofjstus
            
            #add-point:AFTER FIELD oofjstus
            {<point name="input.a.oofjstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oofjstus
            #add-point:ON CHANGE oofjstus
            {<point name="input.g.oofjstus" />}
            #END add-point
 
         #----<<oofjownid>>----
         #----<<oofjowndp>>----
         #----<<oofjcrtid>>----
         #----<<oofjcrtdp>>----
         #----<<oofjcrtdt>>----
         #----<<oofjmodid>>----
         #----<<oofjmoddt>>----
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<oofj001>>----
         #Ctrlp:input.c.oofj001
         ON ACTION controlp INFIELD oofj001
            #add-point:ON ACTION controlp INFIELD oofj001
            {<point name="input.c.oofj001" />}
            #END add-point
 
         #----<<oofjl003>>----
         #Ctrlp:input.c.oofjl003
         ON ACTION controlp INFIELD oofjl003
            #add-point:ON ACTION controlp INFIELD oofjl003
            {<point name="input.c.oofjl003" />}
            #END add-point
 
         #----<<oofjl004>>----
         #Ctrlp:input.c.oofjl004
         ON ACTION controlp INFIELD oofjl004
            #add-point:ON ACTION controlp INFIELD oofjl004
            {<point name="input.c.oofjl004" />}
            #END add-point
 
         #----<<oofjstus>>----
         #Ctrlp:input.c.oofjstus
         ON ACTION controlp INFIELD oofjstus
            #add-point:ON ACTION controlp INFIELD oofjstus
            {<point name="input.c.oofjstus" />}
            #END add-point
 
         #----<<oofjownid>>----
         #----<<oofjowndp>>----
         #----<<oofjcrtid>>----
         #----<<oofjcrtdp>>----
         #----<<oofjcrtdt>>----
         #----<<oofjmodid>>----
         #----<<oofjmoddt>>----
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_oofj_m.oofj001             
 
                            
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO oofj_t (oofjent,oofj001,oofjstus,oofjownid,oofjowndp,oofjcrtid,oofjcrtdp, 
                   oofjcrtdt,oofjmodid,oofjmoddt)
               VALUES (g_enterprise,g_oofj_m.oofj001,g_oofj_m.oofjstus,g_oofj_m.oofjownid,g_oofj_m.oofjowndp, 
                   g_oofj_m.oofjcrtid,g_oofj_m.oofjcrtdp,g_oofj_m.oofjcrtdt,g_oofj_m.oofjmodid,g_oofj_m.oofjmoddt)  

               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_oofj_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_oofj_m.oofj001 = g_master_multi_table_t.oofjl001 AND
         g_oofj_m.oofjl003 = g_master_multi_table_t.oofjl003 AND 
         g_oofj_m.oofjl004 = g_master_multi_table_t.oofjl004  THEN
         ELSE 
            LET l_var_keys[01] = g_oofj_m.oofj001
            LET l_field_keys[01] = 'oofjl001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.oofjl001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'oofjl002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_oofj_m.oofjl003
            LET l_fields[01] = 'oofjl003'
            LET l_vars[02] = g_oofj_m.oofjl004
            LET l_fields[02] = 'oofjl004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'oofjlent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'oofjl_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aooi391_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE oofj_t SET (oofj001,oofjstus,oofjownid,oofjowndp,oofjcrtid,oofjcrtdp,oofjcrtdt, 
                   oofjmodid,oofjmoddt) = (g_oofj_m.oofj001,g_oofj_m.oofjstus,g_oofj_m.oofjownid,g_oofj_m.oofjowndp, 
                   g_oofj_m.oofjcrtid,g_oofj_m.oofjcrtdp,g_oofj_m.oofjcrtdt,g_oofj_m.oofjmodid,g_oofj_m.oofjmoddt) 

                WHERE oofjent = g_enterprise AND oofj001 = g_oofj001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("oofj_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_oofj_m.oofj001 = g_master_multi_table_t.oofjl001 AND
         g_oofj_m.oofjl003 = g_master_multi_table_t.oofjl003 AND 
         g_oofj_m.oofjl004 = g_master_multi_table_t.oofjl004  THEN
         ELSE 
            LET l_var_keys[01] = g_oofj_m.oofj001
            LET l_field_keys[01] = 'oofjl001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.oofjl001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'oofjl002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_oofj_m.oofjl003
            LET l_fields[01] = 'oofjl003'
            LET l_vars[02] = g_oofj_m.oofjl004
            LET l_fields[02] = 'oofjl004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'oofjlent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'oofjl_t')
         END IF 
 
               CALL s_transaction_end('Y','0')
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_oofj001_t = g_oofj_m.oofj001
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="aooi391.input.other" ver="1" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD oofj001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD oofk002
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="aooi391.insert" ver="1" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION aooi391_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_oofk_d.clear()   
 
 
   INITIALIZE g_oofj_m.* LIKE oofj_t.*             #DEFAULT 設定
   
   LET g_oofj001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_oofj_m.oofjownid = g_user
      LET g_oofj_m.oofjowndp = g_dept
      LET g_oofj_m.oofjcrtid = g_user
      LET g_oofj_m.oofjcrtdp = g_dept 
      LET g_oofj_m.oofjcrtdt = cl_get_current()
      LET g_oofj_m.oofjmodid = ""
      LET g_oofj_m.oofjmoddt = ""
      #LET g_oofj_m.oofjstus = ""
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_oofj_m.oofjstus = "Y"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL aooi391_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_oofj_m.* = g_oofj_m_t.*
         CALL aooi391_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_oofk_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   
   LET g_oofj001_t = g_oofj_m.oofj001
 
   
   LET g_wc = g_wc,  
              " OR ( oofjent = '" ||g_enterprise|| "' AND",
              " oofj001 = '", g_oofj_m.oofj001 CLIPPED, "' "
 
              , ") "
   
   CLOSE aooi391_cl
   
END FUNCTION
]]>
</section>
  <section id="aooi391.insert_b" ver="1" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aooi391_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO oofk_t
                  (oofkent,
                   oofk001,
                   oofk002,oofk003,oofk004
                   ,oofk005) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_oofk_d[g_detail_idx].oofk005)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("oofk_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="aooi391.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aooi391_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aooi391_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "oofk_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aooi391_bcl USING g_enterprise,
                                       g_oofj_m.oofj001,g_oofk_d[g_detail_idx].oofk002,g_oofk_d[g_detail_idx].oofk003, 
                                           g_oofk_d[g_detail_idx].oofk004
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("aooi391_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aooi391.main" ver="1" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aoo","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT oofj001,'','',oofjstus,oofjownid,'',oofjowndp,'',oofjcrtid,'',oofjcrtdp, 
       '',oofjcrtdt,oofjmodid,'',oofjmoddt FROM oofj_t WHERE oofjent= ? AND oofj001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE aooi391_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_aooi391 WITH FORM cl_ap_formpath("aoo",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aooi391_init()   
 
      #進入選單 Menu (="N")
      CALL aooi391_ui_dialog() 
	  
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aooi391
      
   END IF 
   
   CLOSE aooi391_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="aooi391.modify" ver="1" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION aooi391_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_oofj_m.oofj001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
    SELECT UNIQUE oofj001,oofjstus,oofjownid,oofjowndp,oofjcrtid,oofjcrtdp,oofjcrtdt,oofjmodid,oofjmoddt 

 INTO g_oofj_m.oofj001,g_oofj_m.oofjstus,g_oofj_m.oofjownid,g_oofj_m.oofjowndp,g_oofj_m.oofjcrtid,g_oofj_m.oofjcrtdp, 
     g_oofj_m.oofjcrtdt,g_oofj_m.oofjmodid,g_oofj_m.oofjmoddt
 FROM oofj_t
 WHERE oofjent = g_enterprise AND oofj001 = g_oofj_m.oofj001
 
   ERROR ""
  
   LET g_oofj001_t = g_oofj_m.oofj001
 
   CALL s_transaction_begin()
   
   OPEN aooi391_cl USING g_enterprise,g_oofj_m.oofj001
 
   IF STATUS THEN
      CALL cl_err("OPEN aooi391_cl:", STATUS, 1)
      CLOSE aooi391_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH aooi391_cl INTO g_oofj_m.oofj001,g_oofj_m.oofjl003,g_oofj_m.oofjl004,g_oofj_m.oofjstus,g_oofj_m.oofjownid, 
       g_oofj_m.oofjownid_desc,g_oofj_m.oofjowndp,g_oofj_m.oofjowndp_desc,g_oofj_m.oofjcrtid,g_oofj_m.oofjcrtid_desc, 
       g_oofj_m.oofjcrtdp,g_oofj_m.oofjcrtdp_desc,g_oofj_m.oofjcrtdt,g_oofj_m.oofjmodid,g_oofj_m.oofjmodid_desc, 
       g_oofj_m.oofjmoddt
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_oofj_m.oofj001,SQLCA.sqlcode,0)
      CLOSE aooi391_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL aooi391_show()
   WHILE TRUE
      LET g_oofj001_t = g_oofj_m.oofj001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_oofj_m.oofjmodid = g_user 
LET g_oofj_m.oofjmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL aooi391_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_oofj_m.* = g_oofj_m_t.*
         CALL aooi391_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_oofj_m.oofj001 != g_oofj001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE oofk_t SET oofk001 = g_oofj_m.oofj001
 
          WHERE oofkent = g_enterprise AND oofk001 = g_oofj001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("oofk_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("oofk_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_oofj_m.oofj001,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE aooi391_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_oofj_m.oofj001,'U')
 
END FUNCTION   
]]>
</section>
  <section id="aooi391.other_dialog" ver="1" status="" src="s">
<![CDATA[ 
]]>
</section>
  <section id="aooi391.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="aooi391.query" ver="1" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aooi391_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_oofk_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL aooi391_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aooi391_browser_fill("")
      CALL aooi391_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aooi391_filter_show('oofj001')
   CALL aooi391_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL aooi391_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aooi391.reproduce" ver="1" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION aooi391_reproduce()
   DEFINE l_newno     LIKE oofj_t.oofj001 
   DEFINE l_oldno     LIKE oofj_t.oofj001 
 
   DEFINE l_master    RECORD LIKE oofj_t.*
   DEFINE l_detail    RECORD LIKE oofk_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_oofj_m.oofj001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_oofj001_t = g_oofj_m.oofj001
 
    
   LET g_oofj_m.oofj001 = ""
 
    
   CALL aooi391_set_entry('a')
   CALL aooi391_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_oofj_m.oofjownid = g_user
      LET g_oofj_m.oofjowndp = g_dept
      LET g_oofj_m.oofjcrtid = g_user
      LET g_oofj_m.oofjcrtdp = g_dept 
      LET g_oofj_m.oofjcrtdt = cl_get_current()
      LET g_oofj_m.oofjmodid = ""
      LET g_oofj_m.oofjmoddt = ""
      #LET g_oofj_m.oofjstus = ""
 
 
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aooi391_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   
   LET g_wc = g_wc,  
              " OR (",
              " oofj001 = '", g_oofj_m.oofj001 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aooi391.set_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aooi391_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("oofj001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aooi391.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aooi391_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="aooi391.set_no_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aooi391_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("oofj001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aooi391.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aooi391_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="aooi391.show" ver="1" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aooi391_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_oofj_m_t.* = g_oofj_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL aooi391_b_fill() #單身填充
      CALL aooi391_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_oofj_m.oofjownid_desc = cl_get_username(g_oofj_m.oofjownid)
      #LET g_oofj_m.oofjowndp_desc = cl_get_deptname(g_oofj_m.oofjowndp)
      #LET g_oofj_m.oofjcrtid_desc = cl_get_username(g_oofj_m.oofjcrtid)
      #LET g_oofj_m.oofjcrtdp_desc = cl_get_deptname(g_oofj_m.oofjcrtdp)
      #LET g_oofj_m.oofjmodid_desc = cl_get_username(g_oofj_m.oofjmodid)
      ##LET g_oofj_m.oofjcnfid_desc = cl_get_deptname(g_oofj_m.oofjcnfid)
      ##LET g_oofj_m.oofjpstid_desc = cl_get_deptname(g_oofj_m.oofjpstid)
      
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_oofj_m.oofj001,g_oofj_m.oofjl003,g_oofj_m.oofjl004,g_oofj_m.oofjstus,g_oofj_m.oofjownid, 
       g_oofj_m.oofjownid_desc,g_oofj_m.oofjowndp,g_oofj_m.oofjowndp_desc,g_oofj_m.oofjcrtid,g_oofj_m.oofjcrtid_desc, 
       g_oofj_m.oofjcrtdp,g_oofj_m.oofjcrtdp_desc,g_oofj_m.oofjcrtdt,g_oofj_m.oofjmodid,g_oofj_m.oofjmodid_desc, 
       g_oofj_m.oofjmoddt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_oofj_m.oofjstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
 
 
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_oofk_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aooi391_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aooi391.signature" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="aooi391.state_change" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION aooi391_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_oofj_m.oofj001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         CASE g_oofj_m.oofjstus
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
 
 
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION inactive
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.inactive"/>}
         #end add-point
         EXIT MENU
      ON ACTION active
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.active"/>}
         #end add-point
         EXIT MENU
 
 
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
 
 
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE oofj_t SET oofjstus = lc_state 
    WHERE oofjent = g_enterprise AND oofj001 = g_oofj_m.oofj001
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
 
 
         
      END CASE
      LET g_oofj_m.oofjstus = lc_state
      DISPLAY BY NAME g_oofj_m.oofjstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="aooi391.ui_browser_refresh" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aooi391_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_oofj001 = g_oofj_m.oofj001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="aooi391.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aooi391_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="aooi391.ui_dialog" ver="1" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION aooi391_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aooi391_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL aooi391_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_oofj001 = g_oofj001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aooi391_fetch('') # reload data
               LET l_ac = 1
               CALL aooi391_ui_detailshow() #Setting the current row 
      
               CALL aooi391_idx_chk()
               #NEXT FIELD oofk002
         
         END DISPLAY
        
         DISPLAY ARRAY g_oofk_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL aooi391_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL aooi391_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aooi391_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aooi391_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aooi391_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
            
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD oofk002
            END IF
        
         ON ACTION statechange
            CALL aooi391_statechange()
            LET g_action_choice = "statechange"
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aooi391_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aooi391_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL aooi391_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #ACTION表單列
         ON ACTION filter
            CALL aooi391_filter()
            EXIT DIALOG
         
         ON ACTION first
            CALL aooi391_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aooi391_idx_chk()
            
         ON ACTION previous
            CALL aooi391_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aooi391_idx_chk()
            
         ON ACTION jump
            CALL aooi391_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aooi391_idx_chk()
            
         ON ACTION next
            CALL aooi391_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aooi391_idx_chk()
            
         ON ACTION last
            CALL aooi391_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aooi391_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet_detail",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet_detail",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
 
         ON ACTION delete
 
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN 
               CALL aooi391_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
            END IF
 
 
         ON ACTION insert
 
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN 
               CALL aooi391_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify
 
            LET g_aw = ''
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL aooi391_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify_detail
 
            LET g_aw = g_curr_diag.getCurrentItem()
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN 
               CALL aooi391_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
 
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL aooi391_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF
 
 
         ON ACTION reproduce
 
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN 
               CALL aooi391_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
         
         ON ACTION related_document
            CALL cl_doc()
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="aooi391.ui_headershow" ver="1" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aooi391_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_oofj_m.oofj001 = g_browser[g_current_idx].b_oofj001   
 
    SELECT UNIQUE oofj001,oofjstus,oofjownid,oofjowndp,oofjcrtid,oofjcrtdp,oofjcrtdt,oofjmodid,oofjmoddt 

 INTO g_oofj_m.oofj001,g_oofj_m.oofjstus,g_oofj_m.oofjownid,g_oofj_m.oofjowndp,g_oofj_m.oofjcrtid,g_oofj_m.oofjcrtdp, 
     g_oofj_m.oofjcrtdt,g_oofj_m.oofjmodid,g_oofj_m.oofjmoddt
 FROM oofj_t
 WHERE oofjent = g_enterprise AND oofj001 = g_oofj_m.oofj001
   CALL aooi391_show()
   
END FUNCTION
]]>
</section>
  <section id="aooi391.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aooi391_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aooi391_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aooi391.update_b" ver="1" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aooi391_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "oofk_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE oofk_t 
         SET (oofk001,
              oofk002,oofk003,oofk004
              ,oofk005) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_oofk_d[g_detail_idx].oofk005) 
         WHERE oofkent = g_enterprise AND oofk001 = ps_keys_bak[1] AND oofk002 = ps_keys_bak[2] AND oofk003 = ps_keys_bak[3] AND oofk004 = ps_keys_bak[4]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("oofk_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("oofk_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>