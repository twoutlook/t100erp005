<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aoor700" std_prog="aoor700" erpver="1.0" module="AOO" ver="3" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="R" status="u"/>
    <free_style value="N" status="u"/>
    <start_arg value="" status="u"/>
  </other>
  <point name="function.aoor700_create_tmp" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aoor700_create_tmp()
   DROP TABLE aoor700_gzzo_tmp
   DROP TABLE aoor700_gzzo_tmp2

   SELECT gzzo001,gzzol003 FROM gzcb_t WHERE 1=2 INTO TEMP aoor700_gzzo_tmp
   SELECT gzzo001,gzzol003 FROM gzcb_t WHERE 1=2 INTO TEMP aoor700_gzzo_tmp2
END FUNCTION]]>
  </point>
  <point name="function.aoor700_gzzo_fill" order="2" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aoor700_gzzo_fill()
   LET g_sql = " SELECT UNIQUE gzzj_t.gzzj001,gzzol_t.gzzol003 FROM gzzj_t 
                 LEFT OUTER JOIN gzzol_t ON gzzj_t.gzzj001 = gzzol_t.gzzol001 AND gzzol002 ='",g_dlang,"' 
                 LEFT OUTER JOIN oobx_t ON gzzj_t.gzzj001 = oobx_t.oobx002",
                " WHERE oobx_t.oobxstus = 'Y' AND oobx_t.oobx009 = 'Y'  "
   LET g_sql = g_sql , " ORDER BY gzzj001 "
    
   PREPARE aoor700_pb1 FROM g_sql
   DECLARE b_fill_cs CURSOR FOR aoor700_pb1
    
   LET g_cnt = l_ac
   LET l_ac = 1
    
   FOREACH b_fill_cs INTO g_gzzo_d[l_ac].gzzj001,g_gzzo_d[l_ac].gzzol003
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
      
      CALL s_azzi930_get_module_name(g_gzzo_d[l_ac].gzzj001) RETURNING g_gzzo_d[l_ac].gzzol003   #15/06/25 Sarah add
      
      INSERT INTO aoor700_gzzo_tmp VALUES(g_gzzo_d[l_ac].gzzj001,g_gzzo_d[l_ac].gzzol003)    
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF

   END FOREACH  
   CALL g_gzzo_d.deleteElement(l_ac)
END FUNCTION]]>
  </point>
  <point name="function.aoor700_left_go_right" order="3" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aoor700_left_go_right(l_idx)
   DEFINE l_idx    LIKE type_t.num5
   DEFINE ls_cnt   LIKE type_t.num5
   DEFINE l_cnt    LIKE type_t.num5
   DEFINE l_cnt2   LIKE type_t.num5
   
   IF NOT cl_null(g_gzzo_d[l_idx].gzzj001) THEN
      LET ls_cnt = g_gzzo_d2.getlength()
      LET l_cnt = 1
      FOR l_cnt = 1 TO ls_cnt
         LET l_cnt2 = l_cnt
         IF (g_gzzo_d2[l_cnt2].gzzj001>g_gzzo_d[l_idx].gzzj001) THEN
            CALL g_gzzo_d2.insertElement(l_cnt2)
            LET g_gzzo_d2[l_cnt2].* = g_gzzo_d[l_idx].*
            EXIT FOR
         END IF
      END FOR
      IF g_gzzo_d2.getlength() = ls_cnt THEN   
         CALL g_gzzo_d2.appendElement()
         LET ls_cnt = ls_cnt+1
         LET g_gzzo_d2[ls_cnt].* = g_gzzo_d[l_idx].*
      END IF
      CALL g_gzzo_d.deleteElement(l_idx)
      INSERT INTO aoor700_gzzo_tmp2 VALUES(g_gzzo_d2[ls_cnt].gzzj001,g_gzzo_d2[ls_cnt].gzzol003)
      DELETE FROM aoor700_gzzo_tmp WHERE gzzo001 = g_gzzo_d2[ls_cnt].gzzj001
                                     AND gzzol003 = g_gzzo_d2[ls_cnt].gzzol003

      
   END IF

END FUNCTION]]>
  </point>
  <point name="function.aoor700_right_go_left" order="4" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aoor700_right_go_left(l_idx)
   DEFINE l_idx    LIKE type_t.num5
   DEFINE ls_cnt   LIKE type_t.num5
   DEFINE l_cnt    LIKE type_t.num5
   DEFINE l_cnt2   LIKE type_t.num5
   
   IF NOT cl_null(g_gzzo_d2[l_idx].gzzj001) THEN
      LET ls_cnt = g_gzzo_d.getlength()
      LET l_cnt = 1
      FOR l_cnt = 1 TO ls_cnt
         LET l_cnt2 = l_cnt
         IF (g_gzzo_d[l_cnt2].gzzj001>g_gzzo_d2[l_idx].gzzj001) THEN
            CALL g_gzzo_d.insertElement(l_cnt2)
            LET g_gzzo_d[l_cnt2].* = g_gzzo_d2[l_idx].*
            EXIT FOR
         END IF
      END FOR
      IF g_gzzo_d.getlength() = ls_cnt THEN   
         CALL g_gzzo_d.appendElement()
         LET ls_cnt = ls_cnt+1
         LET g_gzzo_d[ls_cnt].* = g_gzzo_d2[l_idx].*
      END IF
      CALL g_gzzo_d2.deleteElement(l_idx)
      INSERT INTO aoor700_gzzo_tmp VALUES(g_gzzo_d[ls_cnt].gzzj001,g_gzzo_d[ls_cnt].gzzol003)
      DELETE FROM aoor700_gzzo_tmp2 WHERE gzzo001 = g_gzzo_d[ls_cnt].gzzj001
                                     AND gzzol003 = g_gzzo_d[ls_cnt].gzzol003
   END IF
END FUNCTION]]>
  </point>
  <point name="global.variable" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10
DEFINE g_jump                LIKE type_t.num10
DEFINE g_no_ask              LIKE type_t.num5
DEFINE g_rec_b               LIKE type_t.num5
DEFINE l_ac                  LIKE type_t.num5
DEFINE ls_cnt                 LIKE type_t.num10

DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page

TYPE type_g_gzzo_d        RECORD
   gzzj001  LIKE gzzj_t.gzzj001,
   gzzol003 LIKE gzzol_t.gzzol003
END RECORD

DEFINE g_gzzo_d          DYNAMIC ARRAY OF type_g_gzzo_d
DEFINE g_gzzo_d_t        type_g_gzzo_d

DEFINE g_gzzo_d2          DYNAMIC ARRAY OF type_g_gzzo_d
DEFINE g_gzzo_d2_t        type_g_gzzo_d

DEFINE g_gzzo001           STRING]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.m.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_master.edate) AND NOT cl_null(g_master.bdate) THEN
                  IF g_master.edate < g_master.bdate THEN
                     INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "" 
                        LET g_errparam.code   = "-1152" 
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err()
                     LET g_master.edate = NULL
                     DISPLAY g_master.edate TO edate
                     NEXT FIELD edate
                  END IF
               END IF]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL DIALOG.setSelectionMode("s_detail1",1)]]>
  </point>
  <point name="main.servicecall" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL aoor700_create_tmp()]]>
  </point>
  <point name="process.exit_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="process.pre_process" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[#   IF cl_null(g_master.wc) THEN 
      LET g_master.wc = "1=1"
#   END IF
   
   INITIALIZE g_gzzo001 TO NULL
   FOR ls_cnt = 1 TO g_gzzo_d2.getlength()
      IF (ls_cnt == 1) THEN
         LET g_gzzo001 = g_gzzo001 , "'",g_gzzo_d2[ls_cnt].gzzj001 
         IF (g_gzzo_d2.getlength() == 1) THEN
            LET g_gzzo001 = g_gzzo001 , "'"
         END IF
      ELSE
         IF (ls_cnt == g_gzzo_d2.getlength()) THEN
            LET g_gzzo001 = g_gzzo001 , "' OR oobx002 = '", g_gzzo_d2[ls_cnt].gzzj001,"'"
         ELSE
            LET g_gzzo001 = g_gzzo001 , "' OR oobx002 = '", g_gzzo_d2[ls_cnt].gzzj001 
         END IF
      END IF
   END FOR
#   INITIALIZE g_gzzo001.* TO NULL
#   SELECT gzzo001 FROM aoor700_gzzo_tmp2 INTO g_gzzo001.*
   LET g_master.wc = g_master.wc , " AND oobx009 = 'Y' AND (oobx002 = ",g_gzzo001, ") AND (oobxstus = 'Y' OR oobxstus = 'N') "
#   , g_gzzo001.*
   

   
#2.若上述單據之可選單據狀態碼選項於azzi600[C:系統應用欄位四]之設定值,
#  若均小於等於單據狀態碼(xxxxstus)於azzi600[C:系統應用欄位四]之設定值者須排除


   
   IF (g_master.pageskip == 'Y') THEN
      CALL aoor700_x02(g_master.wc,g_master.edate,g_master.bdate,g_master.print,g_master.show)
   ELSE 
      CALL aoor700_x01(g_master.wc,g_master.edate,g_master.bdate,g_master.print,g_master.show)
   END IF]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_master.print = 'N'
   LET g_master.pageskip = 'N'
   LET g_master.show = 'Y' 
   CALL aoor700_gzzo_fill()]]>
  </point>
  <point name="ui_dialog.before_dialog2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="ui_dialog.more_action" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ON ACTION allin
            LET g_action_choice="allin"
            IF cl_auth_chk_act("allin") THEN
               LET ls_cnt = g_gzzo_d.getlength()
               FOR l_ac = 1 TO ls_cnt
                  LET g_detail_idx = 1
                  CALL aoor700_left_go_right(g_detail_idx)
               END FOR
               
               DISPLAY ARRAY g_gzzo_d2 TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)                             
               BEFORE ROW
                  LET l_ac = DIALOG.getCurrentRow("s_detail2")
                  LET g_detail_idx2 = l_ac
               BEFORE DISPLAY 
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
                  LET l_ac = DIALOG.getCurrentRow("s_detail2")
                  LET g_current_page = 1
                  EXIT DISPLAY
               END DISPLAY
               
               DISPLAY ARRAY g_gzzo_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b)                          
               BEFORE ROW
                  LET l_ac = DIALOG.getCurrentRow("s_detail1")
                  LET g_detail_idx = l_ac
               BEFORE DISPLAY 
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
                  LET l_ac = DIALOG.getCurrentRow("s_detail1")
                  LET g_current_page = 1
                  EXIT DISPLAY
               END DISPLAY
            END IF

         ON ACTION in
            LET g_action_choice="in"
            IF cl_auth_chk_act("in") THEN
               LET ls_cnt = 0
               LET ls_cnt = g_gzzo_d.getlength()
               IF ls_cnt > 0 THEN
                  FOR g_detail_idx = 1 TO ls_cnt
                     IF DIALOG.isRowSelected("s_detail1",g_detail_idx) THEN
                        CALL aoor700_left_go_right(g_detail_idx)
                     END IF
                  END FOR
               END IF
               
               DISPLAY ARRAY g_gzzo_d2 TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)                             
               BEFORE ROW
                  LET l_ac = DIALOG.getCurrentRow("s_detail2")
                  LET g_detail_idx2 = l_ac
               BEFORE DISPLAY 
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
                  LET l_ac = DIALOG.getCurrentRow("s_detail2")
                  LET g_current_page = 1
                  EXIT DISPLAY
               END DISPLAY
               
               DISPLAY ARRAY g_gzzo_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b)             
               BEFORE ROW
                  LET l_ac = DIALOG.getCurrentRow("s_detail1")
                  LET g_detail_idx = l_ac
               BEFORE DISPLAY 
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
                  LET l_ac = DIALOG.getCurrentRow("s_detail1")
                  LET g_current_page = 1
                  EXIT DISPLAY
               END DISPLAY               
            END IF
            
         ON ACTION allout
            LET g_action_choice="allout"
            IF cl_auth_chk_act("allout") THEN
               LET ls_cnt = g_gzzo_d2.getlength()
               FOR l_ac = 1 TO ls_cnt
                  LET g_detail_idx2 = 1
                  CALL aoor700_right_go_left(g_detail_idx2)
               END FOR
               
               DISPLAY ARRAY g_gzzo_d2 TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b)                            
               BEFORE ROW
                  LET l_ac = DIALOG.getCurrentRow("s_detail1")
                  LET g_detail_idx = l_ac
               BEFORE DISPLAY 
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
                  LET l_ac = DIALOG.getCurrentRow("s_detail1")
                  LET g_current_page = 1
                  EXIT DISPLAY
               END DISPLAY
              
               DISPLAY ARRAY g_gzzo_d2 TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)                             
               BEFORE ROW
                  LET l_ac = DIALOG.getCurrentRow("s_detail2")
                  LET g_detail_idx2 = l_ac
               BEFORE DISPLAY 
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
                  LET l_ac = DIALOG.getCurrentRow("s_detail2")
                  LET g_current_page = 1
                  EXIT DISPLAY
               END DISPLAY
            END IF

         ON ACTION out
            LET g_action_choice="out"
            IF cl_auth_chk_act("out") THEN
               LET ls_cnt = 0
               LET ls_cnt = g_gzzo_d2.getlength()
               IF ls_cnt > 0 THEN
                  FOR g_detail_idx2 = 1 TO ls_cnt
                     IF DIALOG.isRowSelected("s_detail2",g_detail_idx2) THEN
                        CALL aoor700_right_go_left(g_detail_idx2)
                     END IF
                  END FOR
               END IF
               
               DISPLAY ARRAY g_gzzo_d2 TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b)              
               BEFORE ROW
                  LET l_ac = DIALOG.getCurrentRow("s_detail1")
                  LET g_detail_idx = l_ac
               BEFORE DISPLAY 
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
                  LET l_ac = DIALOG.getCurrentRow("s_detail1")
                  LET g_current_page = 1
                  EXIT DISPLAY
               END DISPLAY

               DISPLAY ARRAY g_gzzo_d2 TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)              
               BEFORE ROW
                  LET l_ac = DIALOG.getCurrentRow("s_detail2")
                  LET g_detail_idx2 = l_ac
               BEFORE DISPLAY 
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
                  LET l_ac = DIALOG.getCurrentRow("s_detail2")
                  LET g_current_page = 1
                  EXIT DISPLAY
               END DISPLAY
            END IF]]>
  </point>
  <point name="ui_dialog.more_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           DISPLAY ARRAY g_gzzo_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b)

            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac

            BEFORE DISPLAY

               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1

         END DISPLAY
         
         DISPLAY ARRAY g_gzzo_d2 TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx2 = l_ac

            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx2)
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 1

         END DISPLAY]]>
  </point>
  <section id="aoor700.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000045
#+ 
#+ Filename...: aoor700
#+ Description: 未確認未過賬單據檢核表
#+ Creator....: 05423(2014-08-11 16:04:26)
#+ Modifier...: 05423(2014-10-28 11:26:11) -SD/PR-
]]>
  </section>
  <section id="aoor700.get_buffer" ver="2" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION aoor700_get_buffer(p_dialog)
   DEFINE p_dialog   ui.DIALOG
   
   LET g_master.bdate = p_dialog.getFieldBuffer('bdate')
   LET g_master.edate = p_dialog.getFieldBuffer('edate')
   LET g_master.print = p_dialog.getFieldBuffer('print')
   LET g_master.pageskip = p_dialog.getFieldBuffer('pageskip')
   LET g_master.show = p_dialog.getFieldBuffer('show')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理
   {<point name="get_buffer.others"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="aoor700.global" ver="6" status="" src="s" readonly="">
    <![CDATA[#應用 r01 樣板自動產生(Version:12)
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE gi_hiden_rep_temp    LIKE type_t.num5             
   DEFINE g_chk_jobid          LIKE type_t.num5               
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       bdate LIKE type_t.chr500, 
   edate LIKE type_t.chr500, 
   print LIKE type_t.chr500, 
   pageskip LIKE type_t.chr500, 
   show LIKE type_t.chr500,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aoor700.init" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 初始化作業
PRIVATE FUNCTION aoor700_init()
   #add-point:init段define 
   {<point name="init.define" edit="s"/>}
   #end add-point
   #add-point:init段define (客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point
   
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aoor700.main" ver="4" status="" src="s" readonly="">
    <![CDATA[MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define 
   {<point name="main.define" edit="s"/>}
   #end add-point 
   #add-point:main段define (客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point 
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aoo","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point   
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
      CALL util.JSON.parse(ls_js,g_master)      #r類背景參數解析入口
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL aoor700_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aoor700 WITH FORM cl_ap_formpath("aoo",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL aoor700_init()
 
      #進入選單 Menu (="N")
      CALL aoor700_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_aoor700
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
  </section>
  <section id="aoor700.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
  </section>
  <section id="aoor700.process" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION aoor700_process(ls_js)
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_r01_status LIKE type_t.num5
   DEFINE l_token       base.StringTokenizer      #cmdrun使用
   DEFINE ls_next       STRING                    #cmdrun使用
   DEFINE l_cnt         LIKE type_t.num5          #cmdrun使用   
   DEFINE l_arg         DYNAMIC ARRAY OF STRING   ##cmdrun使用的陣列 
   #add-point:process段define 
   {<point name="process.define" edit="s"/>}
   #end add-point
   #add-point:process段define (客製用)
   {<point name="process.define_customerization" edit="c"/>}
   #end add-point
 
   INITIALIZE lc_param TO NULL
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數   #r類不用計算進度條
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE aoor700_process_cs CURSOR FROM ls_sql
#  FOREACH aoor700_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" OR g_bgjob = "T" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
      CALL cl_schedule_exec_call(li_r01_status)
   END IF
END FUNCTION
]]>
  </section>
  <section id="aoor700.transfer_argv" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION aoor700_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define 
   {<point name="transfer_agrv.define" edit="s"/>}
   #end add-point
   #add-point:transfer_agrv段define (客製用)
   {<point name="transfer_agrv.define_customerization" edit="c"/>}
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
]]>
  </section>
  <section id="aoor700.ui_dialog" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION aoor700_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define 
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define (客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      {<point name="ui_dialog.before_dialog2"/>}
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:2)
         INPUT BY NAME g_master.bdate,g_master.edate,g_master.print,g_master.pageskip,g_master.show 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION allin
            LET g_action_choice="allin"
            IF cl_auth_chk_act("allin") THEN
               
               #add-point:ON ACTION allin
               {<point name="input.master_input.allin" />}
               #END add-point
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION out
            LET g_action_choice="out"
            IF cl_auth_chk_act("out") THEN
               
               #add-point:ON ACTION out
               {<point name="input.master_input.out" />}
               #END add-point
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION allout
            LET g_action_choice="allout"
            IF cl_auth_chk_act("allout") THEN
               
               #add-point:ON ACTION allout
               {<point name="input.master_input.allout" />}
               #END add-point
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION in
            LET g_action_choice="in"
            IF cl_auth_chk_act("in") THEN
               
               #add-point:ON ACTION in
               {<point name="input.master_input.in" />}
               #END add-point
            END IF
 
 
 
         
            BEFORE INPUT
               #add-point:資料輸入前
               {<point name="input.m.before_input"/>}
               #end add-point
         
                     #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bdate
            #add-point:BEFORE FIELD bdate
            {<point name="input.b.bdate" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bdate
            
            #add-point:AFTER FIELD bdate
            {<point name="input.a.bdate" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bdate
            #add-point:ON CHANGE bdate
            {<point name="input.g.bdate" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD edate
            #add-point:BEFORE FIELD edate
            {<point name="input.b.edate" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD edate
            
            #add-point:AFTER FIELD edate
            {<point name="input.a.edate" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE edate
            #add-point:ON CHANGE edate
            {<point name="input.g.edate" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD print
            #add-point:BEFORE FIELD print
            {<point name="input.b.print" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD print
            
            #add-point:AFTER FIELD print
            {<point name="input.a.print" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE print
            #add-point:ON CHANGE print
            {<point name="input.g.print" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pageskip
            #add-point:BEFORE FIELD pageskip
            {<point name="input.b.pageskip" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pageskip
            
            #add-point:AFTER FIELD pageskip
            {<point name="input.a.pageskip" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pageskip
            #add-point:ON CHANGE pageskip
            {<point name="input.g.pageskip" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD show
            #add-point:BEFORE FIELD show
            {<point name="input.b.show" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD show
            
            #add-point:AFTER FIELD show
            {<point name="input.a.show" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE show
            #add-point:ON CHANGE show
            {<point name="input.g.show" />}
            #END add-point 
 
 
                     #Ctrlp:input.c.bdate
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bdate
            #add-point:ON ACTION controlp INFIELD bdate
            {<point name="input.c.bdate" />}
            #END add-point
 
         #Ctrlp:input.c.edate
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD edate
            #add-point:ON ACTION controlp INFIELD edate
            {<point name="input.c.edate" />}
            #END add-point
 
         #Ctrlp:input.c.print
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD print
            #add-point:ON ACTION controlp INFIELD print
            {<point name="input.c.print" />}
            #END add-point
 
         #Ctrlp:input.c.pageskip
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pageskip
            #add-point:ON ACTION controlp INFIELD pageskip
            {<point name="input.c.pageskip" />}
            #END add-point
 
         #Ctrlp:input.c.show
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD show
            #add-point:ON ACTION controlp INFIELD show
            {<point name="input.c.show" />}
            #END add-point
 
 
               
            AFTER INPUT
               #add-point:資料輸入後
               {<point name="input.m.after_input"/>}
               #end add-point
               
            #add-point:其他管控(on row change, etc...)
            {<point name="input.other"/>}
            #end add-point
         END INPUT
 
 
         
         
      
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL cl_qbe_display_condition(FGL_GETENV("QUERYPLANID"), g_user)
            CALL aoor700_get_buffer(l_dialog)
 
         ON ACTION qbe_select
            LET ls_wc = ""
            #需要用ITM類程式查詢方案在CONSTRUCT的功能，將值set到畫面上
            CALL cl_qbe_list("c") RETURNING ls_wc
            CALL aoor700_get_buffer(l_dialog)
            IF NOT cl_null(ls_wc) THEN
               LET g_master.wc = ls_wc
               #取得條件後需要執行項目,應新增於下方adp
               #add-point:ui_dialog段qbe_select後
               {<point name="ui_dialog.qbe_select"/>}
               #end add-point
            END IF
 
         ON ACTION qbe_save
            CALL cl_qbe_save()
 
         ON ACTION output
            LET g_action_choice = "output"
            ACCEPT DIALOG
 
         ON ACTION quickprint
            LET g_action_choice = "quickprint"
            ACCEPT DIALOG
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         ON ACTION rpt_replang
            CALL cl_gr_set_dlang()
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL aoor700_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
 
     #LET lc_param.wc = g_master.wc    #r類主程式不在意lc_param,不使用轉換
      #add-point:ui_dialog段exit dialog 
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(g_master)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL aoor700_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = aoor700_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF           
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         {<point name="process.after_schedule"/>}
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         LET gi_hiden_rep_temp = FALSE   #報表樣板設定
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
]]>
  </section>
</add_points>
