#該程式未解開Section, 採用最新樣板產出!
{<section id="aoop170.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0005(2015-07-03 15:18:27), PR版次:0005(2016-12-14 15:37:38)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000111
#+ Filename...: aoop170
#+ Description: 產生月匯率批次作業
#+ Creator....: 01996(2014-06-18 10:09:24)
#+ Modifier...: 01534 -SD/PR- 08734
 
{</section>}
 
{<section id="aoop170.global" >}
#應用 p01 樣板自動產生(Version:19)
#add-point:填寫註解說明 name="global.memo" name="global.memo"
#Memos
#161124-00048#13  2016/12/14 By 08734    星号整批调整
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE g_chk_jobid          LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable) name="global.parameter"
   
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       ooan001 LIKE ooan_t.ooan001, 
   ooan002 LIKE ooan_t.ooan002, 
   ooan003 LIKE ooan_t.ooan003, 
   year LIKE type_t.chr500, 
   month LIKE type_t.chr500, 
   exrate_source LIKE type_t.chr500, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable) name="global.variable"
DEFINE g_ooan001    LIKE ooan_t.ooan001
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明 name="global.argv"

#end add-point
 
{</section>}
 
{<section id="aoop170.main" >}
MAIN
   #add-point:main段define (客製用) name="main.define_customerization"
   
   #end add-point 
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define name="main.define"
   
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義 name="main.before_ap_init"
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aoo","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js name="main.background"
   
   #end add-point
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
     #CALL util.JSON.parse(ls_js,g_master)   #p類主要使用l_param,此處不解析
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
      CALL aoop170_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aoop170 WITH FORM cl_ap_formpath("aoo",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL aoop170_init()
 
      #進入選單 Menu (="N")
      CALL aoop170_ui_dialog()
 
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_aoop170
   END IF
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="aoop170.init" >}
#+ 初始化作業
PRIVATE FUNCTION aoop170_init()
 
   #add-point:init段define (客製用) name="init.define_customerization"
   
   #end add-point
   #add-point:ui_dialog段define name="init.define"
   
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化 name="init.init"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="aoop170.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aoop170_ui_dialog()
 
   #add-point:ui_dialog段define (客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define name="ui_dialog.define"
 
   #end add-point
   
   #add-point:ui_dialog段before dialog name="ui_dialog.before_dialog"
   LET g_master.year = YEAR(g_today)
   LET g_master.month = MONTH(g_today)
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2 name="ui_dialog.before_dialog2"
      
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:3)
         INPUT BY NAME g_master.year,g_master.month,g_master.exrate_source 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前 name="input.m.before_input"
               
               #end add-point
         
                     #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD year
            #add-point:BEFORE FIELD year name="input.b.year"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD year
            
            #add-point:AFTER FIELD year name="input.a.year"
            IF NOT cl_null(g_master.year) THEN
               IF g_master.year > 9999 OR g_master.year < 1 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'aoo-00320'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  INITIALIZE g_master.year TO NULL
                  NEXT FIELD CURRENT
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE year
            #add-point:ON CHANGE year name="input.g.year"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD month
            #add-point:BEFORE FIELD month name="input.b.month"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD month
            
            #add-point:AFTER FIELD month name="input.a.month"
            IF NOT cl_null(g_master.month) THEN
               IF g_master.month > 12 OR g_master.month < 1 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'aoo-00321'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  INITIALIZE g_master.month TO NULL
                  NEXT FIELD CURRENT
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE month
            #add-point:ON CHANGE month name="input.g.month"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD exrate_source
            #add-point:BEFORE FIELD exrate_source name="input.b.exrate_source"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD exrate_source
            
            #add-point:AFTER FIELD exrate_source name="input.a.exrate_source"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE exrate_source
            #add-point:ON CHANGE exrate_source name="input.g.exrate_source"
            
            #END add-point 
 
 
 
                     #Ctrlp:input.c.year
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD year
            #add-point:ON ACTION controlp INFIELD year name="input.c.year"
            
            #END add-point
 
 
         #Ctrlp:input.c.month
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD month
            #add-point:ON ACTION controlp INFIELD month name="input.c.month"
            
            #END add-point
 
 
         #Ctrlp:input.c.exrate_source
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD exrate_source
            #add-point:ON ACTION controlp INFIELD exrate_source name="input.c.exrate_source"
            
            #END add-point
 
 
 
               
            AFTER INPUT
               #add-point:資料輸入後 name="input.m.after_input"
               
               #end add-point
               
            #add-point:其他管控(on row change, etc...) name="input.other"
            
            #end add-point
         END INPUT
 
 
 
         
         #應用 a58 樣板自動產生(Version:3)
         CONSTRUCT BY NAME g_master.wc ON ooan002,ooan003
            BEFORE CONSTRUCT
               #add-point:cs段before_construct name="cs.head.before_construct"
               #add by lixh 20150703 150702-00006#4
               SELECT ooef015 INTO g_ooan001 FROM ooef_t
                WHERE ooefent = g_enterprise
                  AND ooef001 = g_site  
               DISPLAY g_ooan001 TO ooan001                
               #add by lixh 20150703 150702-00006#4                 
               #end add-point 
         
            #公用欄位開窗相關處理
            
               
            #一般欄位開窗相關處理    
                     #Ctrlp:construct.c.ooan002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ooan002
            #add-point:ON ACTION controlp INFIELD ooan002 name="construct.c.ooan002"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooai001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO ooan002  #顯示到畫面上
            NEXT FIELD ooan002                    #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ooan002
            #add-point:BEFORE FIELD ooan002 name="construct.b.ooan002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ooan002
            
            #add-point:AFTER FIELD ooan002 name="construct.a.ooan002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.ooan003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ooan003
            #add-point:ON ACTION controlp INFIELD ooan003 name="construct.c.ooan003"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooai001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO ooan003  #顯示到畫面上
            NEXT FIELD ooan003                    #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ooan003
            #add-point:BEFORE FIELD ooan003 name="construct.b.ooan003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ooan003
            
            #add-point:AFTER FIELD ooan003 name="construct.a.ooan003"
            
            #END add-point
            
 
 
 
            
            #add-point:其他管控 name="cs.other"
            
            #end add-point
            
         END CONSTRUCT
 
 
 
      
         #add-point:ui_dialog段construct name="ui_dialog.more_construct"
#         CONSTRUCT BY NAME g_wc ON ooan001,ooan002,ooan003
#            
#            ON ACTION controlp INFIELD ooan001
#               INITIALIZE g_qryparam.* TO NULL
#               LET g_qryparam.state = 'c'
#               LET g_qryparam.reqry = FALSE
#               CALL q_ooal002_3()                           #呼叫開窗
#               DISPLAY g_qryparam.return1 TO ooan001  #顯示到畫面上
#               NEXT FIELD ooan001
#            ON ACTION controlp INFIELD ooan002
#               INITIALIZE g_qryparam.* TO NULL
#               LET g_qryparam.state = 'c'
#               LET g_qryparam.reqry = FALSE
#               CALL q_ooai001()                           #呼叫開窗
#               DISPLAY g_qryparam.return1 TO ooan002  #顯示到畫面上
#               NEXT FIELD ooan002
#            ON ACTION controlp INFIELD ooan003
#               INITIALIZE g_qryparam.* TO NULL
#               LET g_qryparam.state = 'c'
#               LET g_qryparam.reqry = FALSE
#               CALL q_ooai001()                           #呼叫開窗
#               DISPLAY g_qryparam.return1 TO ooan003  #顯示到畫面上
#               NEXT FIELD ooan003
#         END CONSTRUCT
         #end add-point
         #add-point:ui_dialog段input name="ui_dialog.more_input"
#         INPUT BY NAME tm.year,tm.month ATTRIBUTE(WITHOUT DEFAULTS)
#            
#            AFTER FIELD year
##               IF NOT cl_ap_chk_Range(tm.year,"1","1","9999","1","azz-00079",1) THEN
##                  NEXT FIELD CURRENT
##               END IF
#                IF NOT cl_null(tm.year) THEN
#                   IF tm.year > 9999 OR tm.year < 1 THEN
#                      CALL cl_err('','aoo-00320',1)
#                      INITIALIZE tm.year TO NULL
#                      NEXT FIELD CURRENT
#                   END IF
#                END IF
#            AFTER FIELD month
##               IF NOT cl_ap_chk_Range(tm.month,"1","1","12","1","azz-00079",1) THEN
##                  NEXT FIELD CURRENT
##               END IF
#                IF NOT cl_null(tm.month) THEN
#                   IF tm.month > 12 OR tm.month < 1 THEN
#                      CALL cl_err('','aoo-00321',1)
#                      INITIALIZE tm.month TO NULL
#                      NEXT FIELD CURRENT
#                   END IF
#                END IF
#         END INPUT
         #end add-point
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
       
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL aoop170_get_buffer(l_dialog)
            #add-point:ui_dialog段before dialog name="ui_dialog.before_dialog3"
            
            #end add-point
 
         ON ACTION batch_execute
            LET g_action_choice = "batch_execute"
            ACCEPT DIALOG
 
         #add-point:ui_dialog段before_qbeclear name="ui_dialog.before_qbeclear"
         
         #end add-point
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear name="ui_dialog.qbeclear"
            
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action name="ui_dialog.more_action"
         
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL aoop170_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
      
      LET lc_param.wc = g_master.wc    #把畫面上的wc傳遞到參數變數
      #請在下方的add-point內進行把畫面的輸入資料(g_master)轉換到傳遞參數變數(lc_param)的動作
      #add-point:ui_dialog段exit dialog name="process.exit_dialog"
      #add by lixh 20150703 150702-00006#4  
      IF cl_null(g_master.wc) THEN
         LET g_master.wc = " 1=1"
      END IF 
      LET g_master.wc = g_master.wc," AND ooan001 = '",g_ooan001,"'"
      LET lc_param.wc = g_master.wc 
      #add by lixh 20150703 150702-00006#4  
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL aoop170_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = aoop170_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule name="process.after_schedule"
         
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
 
{</section>}
 
{<section id="aoop170.transfer_argv" >}
#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION aoop170_transfer_argv(ls_js)
 
   #add-point:transfer_agrv段define (客製用) name="transfer_agrv.define_customerization"
   
   #end add-point
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define name="transfer_agrv.define"
   
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容 name="transfer.argv.define"
   
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
 
{</section>}
 
{<section id="aoop170.process" >}
#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION aoop170_process(ls_js)
 
   #add-point:process段define (客製用) name="process.define_customerization"
   
   #end add-point
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_p01_status LIKE type_t.num5
   #add-point:process段define name="process.define"
   
   #end add-point
 
  #INITIALIZE lc_param TO NULL           #p類不可以清空
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
   LET li_p01_status = 1
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理 name="process.pre_process"
   CALL s_transaction_begin()
   IF NOT aoop170_data() THEN
      CALL s_transaction_end('N','1')
      RETURN 
   ELSE
      DISPLAY 100 TO stagecomplete
      CALL s_transaction_end('Y','0')
   END IF
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress name="process.count_progress"
      
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE aoop170_process_cs CURSOR FROM ls_sql
#  FOREACH aoop170_process_cs INTO
   #add-point:process段process name="process.process"
   
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理 name="process.foreground_finish"
      
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理 name="process.background_finish"
      
      #end add-point
      CALL cl_schedule_exec_call(li_p01_status)
   END IF
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL aoop170_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="aoop170.get_buffer" >}
PRIVATE FUNCTION aoop170_get_buffer(p_dialog)
 
   #add-point:process段define (客製用) name="get_buffer.define_customerization"
   
   #end add-point
   DEFINE p_dialog   ui.DIALOG
   #add-point:process段define name="get_buffer.define"
   
   #end add-point
 
   
   LET g_master.year = p_dialog.getFieldBuffer('year')
   LET g_master.month = p_dialog.getFieldBuffer('month')
   LET g_master.exrate_source = p_dialog.getFieldBuffer('exrate_source')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理 name="get_buffer.others"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="aoop170.msgcentre_notify" >}
PRIVATE FUNCTION aoop170_msgcentre_notify()
 
   #add-point:process段define (客製用) name="msgcentre_notify.define_customerization"
   
   #end add-point
   DEFINE lc_state LIKE type_t.chr5
   #add-point:process段define name="msgcentre_notify.define"
   
   #end add-point
 
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = "process"
 
   #add-point:msgcentre其他通知 name="msg_centre.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="aoop170.other_function" readonly="Y" >}
#add-point:自定義元件(Function) name="other.function"

PRIVATE FUNCTION aoop170_data()
DEFINE l_wc   STRING
DEFINE l_year_month  LIKE type_t.chr10
DEFINE l_sql  STRING
DEFINE l_bdate   LIKE type_t.dat
DEFINE l_edate   LIKE type_t.dat
#DEFINE l_ooao  RECORD LIKE ooao_t.*  #161124-00048#13  2016/12/14 By 08734 mark
#161124-00048#13  2016/12/14 By 08734 add(S)
DEFINE l_ooao RECORD  #月匯率資料檔
       ooaoent LIKE ooao_t.ooaoent, #企业编号
       ooao001 LIKE ooao_t.ooao001, #汇率参照表号
       ooao002 LIKE ooao_t.ooao002, #交易币种
       ooao003 LIKE ooao_t.ooao003, #基础币种
       ooao004 LIKE ooao_t.ooao004, #年月
       ooao005 LIKE ooao_t.ooao005, #银行买入汇率
       ooao006 LIKE ooao_t.ooao006, #银行卖出汇率
       ooao007 LIKE ooao_t.ooao007, #银行中价汇率
       ooao008 LIKE ooao_t.ooao008, #海关买入汇率
       ooao009 LIKE ooao_t.ooao009, #海关卖出汇率
       ooao010 LIKE ooao_t.ooao010, #外汇收盘汇率
       ooao011 LIKE ooao_t.ooao011, #重评价汇率
       ooao012 LIKE ooao_t.ooao012, #更新时间
       ooao013 LIKE ooao_t.ooao013, #更新方式
       ooao014 LIKE ooao_t.ooao014, #交易货币批量
       ooao015 LIKE ooao_t.ooao015, #汇率录入方式
       ooaoownid LIKE ooao_t.ooaoownid, #资料所有者
       ooaoowndp LIKE ooao_t.ooaoowndp, #资料所有部门
       ooaocrtid LIKE ooao_t.ooaocrtid, #资料录入者
       ooaocrtdp LIKE ooao_t.ooaocrtdp, #资料录入部门
       ooaocrtdt LIKE ooao_t.ooaocrtdt, #资料创建日
       ooaomodid LIKE ooao_t.ooaomodid, #资料更改者
       ooaomoddt LIKE ooao_t.ooaomoddt, #最近更改日
       ooaostus LIKE ooao_t.ooaostus #状态码
END RECORD
#161124-00048#13  2016/12/14 By 08734 add(E)
DEFINE l_date DATETIME YEAR TO SECOND
DEFINE l_year STRING
DEFINE l_month STRING
DEFINE l_cnt   LIKE type_t.num5

   ##1.若已有符合產生年月條件的月匯率資料,則先做刪除
   
   LET l_wc = cl_replace_str(g_master.wc,'ooan001','ooao001')
   LET l_wc = cl_replace_str(l_wc,'ooan002','ooao002')
   LET l_wc = cl_replace_str(l_wc,'ooan003','ooao003')
   
   LET l_year = g_master.year USING "&&&&"
   LET l_month = g_master.month USING "&&"
   LET l_year_month = l_year,l_month   
   
   LET l_sql = "DELETE FROM ooao_t ",
               " WHERE ooaoent = ",g_enterprise," AND ooao004 = '",l_year_month CLIPPED,"' AND ",l_wc
   PREPARE del_ooao_prep FROM l_sql
   EXECUTE del_ooao_prep
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.SQLCODE
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   
   ##2.日匯率資料抓取
   ##依據匯率產生來源(g_master.exrate_source)的選擇,決定怎麼產生月匯率
   ###舉例：產生年月輸入2014/12
   ###1.月平均匯率
   ###=>抓取2014/12/01~2014/12/31的所有日匯率加總平均後寫入月匯率檔
   ###2.當期期末匯率
   ###=>抓取2014年12月最後一天(抓日匯率檔裡介於2014/12/01~2014/12/31中最大的日期)的日匯率寫入月匯率檔
   CALL s_date_get_ymtodate(g_master.year,g_master.month,g_master.year,g_master.month) RETURNING l_bdate,l_edate
   CASE g_master.exrate_source
      WHEN '1'   #1.月平均匯率  
         LET l_sql = "SELECT ooan001,ooan002,ooan003,ooan012,ooan013,",
                     "       SUM(ooan005)/COUNT(1),SUM(ooan006)/COUNT(1),SUM(ooan007)/COUNT(1),",
                     "       SUM(ooan008)/COUNT(1),SUM(ooan009)/COUNT(1)",
                     "  FROM ooan_t,ooam_t",
                     " WHERE ",g_master.wc,
                     "   AND ooan004 BETWEEN '",l_bdate,"' AND '",l_edate,"'",
                     "   AND ooanent = ",g_enterprise,
                     "   AND ooanent = ooament AND ooan001 = ooam001 AND ooan003 = ooam003 AND ooan004 = ooam004 AND ooamstus = 'Y'",
                     " GROUP BY ooan001,ooan002,ooan003,ooan012,ooan013",
                     " ORDER BY ooan001,ooan002,ooan003,ooan012,ooan013"
      WHEN '2'   #2.當期期末匯率
         LET l_sql = "SELECT a.ooan001,a.ooan002,a.ooan003,a.ooan012,a.ooan013,",
                     "       b.ooan005,b.ooan006,b.ooan007,b.ooan008,b.ooan009",
                     "  FROM (SELECT ooan001,ooan002,ooan003,ooan012,ooan013,MAX(ooan004) ooan004",
                     "          FROM ooan_t,ooam_t",
                     "         WHERE ",g_master.wc,
                     "           AND ooan004 BETWEEN '",l_bdate,"' AND '",l_edate,"'",
                     "           AND ooanent = ",g_enterprise,
                     "           AND ooanent = ooament AND ooan001 = ooam001 AND ooan003 = ooam003 AND ooan004 = ooam004 AND ooamstus = 'Y'",
                     "         GROUP BY ooan001,ooan002,ooan003,ooan012,ooan013) a,ooan_t b",
                     " WHERE a.ooan001=b.ooan001 AND a.ooan002=b.ooan002 AND a.ooan003=b.ooan003",
                     "   AND a.ooan012=b.ooan012 AND a.ooan013=b.ooan013 AND a.ooan004=b.ooan004",
                     " ORDER BY a.ooan001,a.ooan002,a.ooan003,a.ooan012,a.ooan013"
   END CASE
   PREPARE sel_ooan_prep FROM l_sql
   DECLARE sel_ooan_curs CURSOR FOR sel_ooan_prep
   LET l_date = cl_get_current() 
   LET l_cnt = 0
   FOREACH sel_ooan_curs INTO l_ooao.ooao001,l_ooao.ooao002,l_ooao.ooao003,l_ooao.ooao014,l_ooao.ooao015,
                              l_ooao.ooao005,l_ooao.ooao006,l_ooao.ooao007,l_ooao.ooao008,l_ooao.ooao009
       IF SQLCA.SQLCODE THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = SQLCA.SQLCODE
          LET g_errparam.extend = ""
          LET g_errparam.popup = TRUE
          CALL cl_err()

          RETURN FALSE
       END IF
       
       ##3.寫入月匯率檔
       LET l_ooao.ooaoent = g_enterprise
       LET l_ooao.ooao004 = l_year_month
       LET l_ooao.ooao011 = l_ooao.ooao007
       LET l_ooao.ooao013 = '3'
       LET l_ooao.ooaoownid = g_user
       LET l_ooao.ooaoowndp = g_dept
       LET l_ooao.ooaocrtid = g_user
       LET l_ooao.ooaocrtdp = g_dept
       #INSERT INTO ooao_t VALUES(l_ooao.*)  #161124-00048#13  2016/12/14 By 08734 mark
       INSERT INTO ooao_t(ooaoent,ooao001,ooao002,ooao003,ooao004,ooao005,ooao006,ooao007,ooao008,ooao009,ooao010,ooao011,
            ooao012,ooao013,ooao014,ooao015,ooaoownid,ooaoowndp,ooaocrtid,ooaocrtdp,ooaocrtdt,ooaomodid,ooaomoddt,ooaostus)  #161124-00048#13  2016/12/14 By 08734 add
          VALUES(l_ooao.ooaoent,l_ooao.ooao001,l_ooao.ooao002,l_ooao.ooao003,l_ooao.ooao004,l_ooao.ooao005,l_ooao.ooao006,l_ooao.ooao007,l_ooao.ooao008,l_ooao.ooao009,l_ooao.ooao010,l_ooao.ooao011,
            l_ooao.ooao012,l_ooao.ooao013,l_ooao.ooao014,l_ooao.ooao015,l_ooao.ooaoownid,l_ooao.ooaoowndp,l_ooao.ooaocrtid,l_ooao.ooaocrtdp,l_ooao.ooaocrtdt,l_ooao.ooaomodid,l_ooao.ooaomoddt,l_ooao.ooaostus)
       IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] = 0 THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = SQLCA.SQLCODE
          LET g_errparam.extend = ""
          LET g_errparam.popup = TRUE
          CALL cl_err()

          RETURN FALSE
       END IF
       UPDATE ooao_t SET ooao012 = l_date,ooaocrtdt = l_date
                   WHERE ooaoent = g_enterprise
                     AND ooao001 = l_ooao.ooao001
                     AND ooao002 = l_ooao.ooao002
                     AND ooao003 = l_ooao.ooao003
                     AND ooao004 = l_ooao.ooao004
       IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] = 0 THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = SQLCA.SQLCODE
          LET g_errparam.extend = ""
          LET g_errparam.popup = TRUE
          CALL cl_err()

          RETURN FALSE
       END IF
       LET l_cnt = l_cnt + 1
   END FOREACH
   IF l_cnt = 0 THEN
      RETURN FALSE
   END IF
   RETURN TRUE
END FUNCTION

#end add-point
 
{</section>}
 
