#該程式未解開Section, 採用最新樣板產出!
{<section id="aoop390.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0004(2015-03-02 10:47:20), PR版次:0004(2015-12-24 16:46:13)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000048
#+ Filename...: aoop390
#+ Description: 自動編碼最大流水號更新作業
#+ Creator....: 01588(2014-12-29 11:17:07)
#+ Modifier...: 04543 -SD/PR- 01588
 
{</section>}
 
{<section id="aoop390.global" >}
#應用 p01 樣板自動產生(Version:18)
#add-point:填寫註解說明
#Memos
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE g_chk_jobid          LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
        oofg002          LIKE oofg_t.oofg002,
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       oofg001 LIKE oofg_t.oofg001, 
   oofg002 LIKE oofg_t.oofg002, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
DEFINE g_oofg      DYNAMIC ARRAY OF RECORD
         oofg001   LIKE oofg_t.oofg001,
         oofg005   LIKE oofg_t.oofg005
                   END RECORD
DEFINE g_length    LIKE type_t.num10
DEFINE l_ac        LIKE type_t.num5
DEFINE g_sql1      STRING
DEFINE g_sql2      STRING   #151224-00018#1 by stellar add
DEFINE g_oofg003   LIKE oofg_t.oofg003
DEFINE g_oofg009   LIKE oofg_t.oofg009
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
 
#add-point:傳入參數說明

#end add-point
 
{</section>}
 
{<section id="aoop390.main" >}
MAIN
   #add-point:main段define (客製用)
   
   #end add-point 
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define 
   
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aoo","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   
   #end add-point
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
     #CALL util.JSON.parse(ls_js,g_master)   #p類主要使用l_param,此處不解析
      #add-point:Service Call
      
      #end add-point
      CALL aoop390_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aoop390 WITH FORM cl_ap_formpath("aoo",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL aoop390_init()
 
      #進入選單 Menu (="N")
      CALL aoop390_ui_dialog()
 
      #add-point:畫面關閉前
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_aoop390
   END IF
 
   #add-point:作業離開前
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="aoop390.init" >}
#+ 初始化作業
PRIVATE FUNCTION aoop390_init()
 
   #add-point:init段define (客製用)
   
   #end add-point
   #add-point:ui_dialog段define 
   
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化

   CALL cl_set_combo_scc('oofg002','15')
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="aoop390.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aoop390_ui_dialog()
 
   #add-point:ui_dialog段define (客製用)
   
   #end add-point
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define 
   
   #end add-point
   
   #add-point:ui_dialog段before dialog
   
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:3)
         INPUT BY NAME g_master.oofg002 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前 name="input.m.before_input"
               
               #end add-point
         
                     #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD oofg002
            #add-point:BEFORE FIELD oofg002 name="input.b.oofg002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD oofg002
            
            #add-point:AFTER FIELD oofg002 name="input.a.oofg002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE oofg002
            #add-point:ON CHANGE oofg002 name="input.g.oofg002"
            
            #END add-point 
 
 
 
                     #Ctrlp:input.c.oofg002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD oofg002
            #add-point:ON ACTION controlp INFIELD oofg002 name="input.c.oofg002"
            
            #END add-point
 
 
 
               
            AFTER INPUT
               #add-point:資料輸入後 name="input.m.after_input"
               
               #end add-point
               
            #add-point:其他管控(on row change, etc...) name="input.other"
            
            #end add-point
         END INPUT
 
 
 
         
         #應用 a58 樣板自動產生(Version:3)
         CONSTRUCT BY NAME g_master.wc ON oofg001
            BEFORE CONSTRUCT
               #add-point:cs段before_construct name="cs.head.before_construct"
               
               #end add-point 
         
            #公用欄位開窗相關處理
            
               
            #一般欄位開窗相關處理    
                     #Ctrlp:construct.c.oofg001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD oofg001
            #add-point:ON ACTION controlp INFIELD oofg001 name="construct.c.oofg001"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oofg001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oofg001  #顯示到畫面上
            NEXT FIELD oofg001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD oofg001
            #add-point:BEFORE FIELD oofg001 name="construct.b.oofg001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD oofg001
            
            #add-point:AFTER FIELD oofg001 name="construct.a.oofg001"
            
            #END add-point
            
 
 
 
            
            #add-point:其他管控 name="cs.other"
            
            #end add-point
            
         END CONSTRUCT
 
 
 
      
         #add-point:ui_dialog段construct
         
         #end add-point
         #add-point:ui_dialog段input
         
         #end add-point
         #add-point:ui_dialog段自定義display array
         
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL aoop390_get_buffer(l_dialog)
            #add-point:ui_dialog段before dialog
            
            #end add-point
 
         ON ACTION batch_execute
            LET g_action_choice = "batch_execute"
            ACCEPT DIALOG
 
         #add-point:ui_dialog段before_qbeclear
         
         #end add-point
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear
            
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL aoop390_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
      
      LET lc_param.wc = g_master.wc    #把畫面上的wc傳遞到參數變數
      #請在下方的add-point內進行把畫面的輸入資料(g_master)轉換到傳遞參數變數(lc_param)的動作
      #add-point:ui_dialog段exit dialog
      LET lc_param.wc = g_master.wc
      LET lc_param.oofg002 = g_master.oofg002
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL aoop390_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = aoop390_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
 
{</section>}
 
{<section id="aoop390.transfer_argv" >}
#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION aoop390_transfer_argv(ls_js)
 
   #add-point:transfer_agrv段define (客製用)
   
   #end add-point
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define 
   
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容
   LET la_cmdrun.param[1] = la_param.oofg002
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
 
{</section>}
 
{<section id="aoop390.process" >}
#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION aoop390_process(ls_js)
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_p01_status LIKE type_t.num5
   #add-point:process段define 
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_msg       STRING
   #end add-point
 
  #INITIALIZE lc_param TO NULL           #p類不可以清空
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
   LET li_p01_status = 1
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理
   IF cl_null(lc_param.oofg002) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = ''
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      
      CALL cl_err()
      RETURN
   END IF
   
   IF cl_null(lc_param.wc) THEN
      LET lc_param.wc = " 1=1"
   END IF
   
   LET l_success = TRUE
   
   LET ls_sql = "SELECT oofg001,oofg005 ",
                "  FROM oofg_t ",
                " WHERE oofgent = ",g_enterprise,
                "   AND oofg002 = '",lc_param.oofg002,"'",
                "   AND oofg008 = '9' ",
                "   AND ",lc_param.wc,
                " ORDER BY oofg001,oofg005 "
   DECLARE aoop390_process_cs CURSOR FROM ls_sql
   
   LET l_ac = 1
   FOREACH aoop390_process_cs INTO g_oofg[l_ac].oofg001,g_oofg[l_ac].oofg005
      IF SQLCA.sqlcode THEN
         CALL cl_errmsg("FOREACH aoop390_process_cs","","",SQLCA.sqlcode,1)
         LET l_success = FALSE
         EXIT FOREACH
      END IF
      
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec AND g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
   END FOREACH
   
   LET l_ac = l_ac -1
   CALL g_oofg.deleteElement(g_oofg.getLength())
   IF NOT l_success THEN
      RETURN
   END IF
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      LET li_count = l_ac + 1
      CALL cl_progress_bar_no_window(li_count)
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE aoop390_process_cs CURSOR FROM ls_sql
#  FOREACH aoop390_process_cs INTO
   #add-point:process段process
   CALL s_transaction_begin()
   
   FOR l_ac = 1 TO g_oofg.getLength()
    
      IF g_bgjob <> "Y" THEN
         LET l_msg = cl_getmsg_parm('aoo-00038',g_lang,g_oofg[l_ac].oofg001||'|'||g_oofg[l_ac].oofg005)
         CALL cl_progress_no_window_ing(l_msg)
      END IF
      
      #前段累積長度
      CALL aoop390_oofg009_sum()
           RETURNING l_success
      IF NOT l_success THEN
         EXIT FOR
      END IF
      
      #根據不同的編碼性質，組成不同的SQL
      CALL aoop390_get_sql(lc_param.oofg002)
           RETURNING l_success
      IF NOT l_success THEN
         EXIT FOR
      END IF
      
      #151224-00018#1 by stellar add ----- (S)
      #將不存在對應table內的oofi_t刪除
      CALL aoop390_oofi_del()
           RETURNING l_success
      IF NOT l_success THEN
         EXIT FOR
      END IF
      #151224-00018#1 by stellar add ----- (E)
      
      #對sql資料進行處理
      CALL aoop390_process1()
           RETURNING l_success
      IF NOT l_success THEN
         EXIT FOR
      END IF
   END FOR
   
   IF l_success THEN 
      IF g_bgjob <> "Y" THEN
         LET l_msg = cl_getmsg('aoo-00162',g_lang)
         CALL cl_progress_no_window_ing(l_msg)
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      IF NOT l_success THEN
         RETURN
      END IF
      CALL cl_ask_confirm3("aoo-00162","")
      RETURN
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
 
      #end add-point
      CALL cl_schedule_exec_call(li_p01_status)
   END IF
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL aoop390_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="aoop390.get_buffer" >}
PRIVATE FUNCTION aoop390_get_buffer(p_dialog)
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE p_dialog   ui.DIALOG
   #add-point:process段define
   
   #end add-point
 
   
   LET g_master.oofg002 = p_dialog.getFieldBuffer('oofg002')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="aoop390.msgcentre_notify" >}
PRIVATE FUNCTION aoop390_msgcentre_notify()
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE lc_state LIKE type_t.chr5
   #add-point:process段define
   
   #end add-point
 
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = "process"
 
   #add-point:msgcentre其他通知
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="aoop390.other_function" readonly="Y" >}
#add-point:自定義元件(Function)

################################################################################
# Descriptions...: 取得前段累積長度
# Memo...........:
# Usage..........: CALL aoop390_oofg009_sum()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2014/12/29 By stellar
# Modify.........:
################################################################################
PUBLIC FUNCTION aoop390_oofg009_sum()
DEFINE r_success        LIKE type_t.num5
DEFINE l_oofg009        LIKE oofg_t.oofg009
DEFINE l_oofg005        LIKE oofg_t.oofg005
DEFINE l_oofg006        LIKE oofg_t.oofg006
DEFINE l_sum            LIKE type_t.num5
DEFINE l_sum1           LIKE type_t.num5
DEFINE l_level          LIKE type_t.num10
DEFINE l_sql            STRING

   LET r_success = TRUE
   LET g_length = 0
   
   LET l_oofg006 = ''
   LET g_oofg003 = ''
   LET g_oofg009 = ''
   SELECT oofg006,oofg003,oofg009 INTO l_oofg006,g_oofg003,g_oofg009 FROM oofg_t
    WHERE oofgent = g_enterprise
      AND oofg001 = g_oofg[l_ac].oofg001
      AND oofg005 = g_oofg[l_ac].oofg005
      
   LET l_sum = 0
   LET l_oofg009 = 0
   LET l_sql = "  SELECT LEVEL,oofg005,oofg006,oofg009 FROM  (SELECT oofg001,oofg005,oofg006,oofg009 ",
               "                                FROM oofg_t ",
               "                                WHERE oofgent = '",g_enterprise,"' ",
               "                                  AND oofg001 = '",g_oofg[l_ac].oofg001,"' ",
               "                                  AND oofg005 <> '",g_oofg[l_ac].oofg001,"' ",
               "                                  AND oofg005 <> oofg006 ) ",
               "   START WITH oofg005 = '",l_oofg006,"' ",
               " CONNECT BY PRIOR oofg006 = oofg005 ",
               " ORDER BY LEVEL "
   PREPARE aoop390_sel_oofg009_pr FROM l_sql
   DECLARE aoop390_sel_oofg009_cs CURSOR FOR aoop390_sel_oofg009_pr
   FOREACH aoop390_sel_oofg009_cs INTO l_level,l_oofg005,l_oofg006,l_oofg009
      IF cl_null(l_oofg009) THEN
         LET l_oofg009 = 0
      END IF
      LET l_sum = l_sum +l_oofg009
   END FOREACH
   #第一層，sql抓不到
   IF cl_null(l_oofg005) OR l_oofg005 <> l_oofg006 THEN
      LET l_sum1 = 0
      SELECT oofg009 INTO l_sum1
        FROM oofg_t
       WHERE oofgent = g_enterprise
         AND oofg001 = g_oofg[l_ac].oofg001
         AND oofg005 = l_oofg006
      IF cl_null(l_sum1) THEN
         LET l_sum1 = 0
      END IF
   END IF
   
   IF l_sum = 0 AND l_sum1 = 0 THEN
      LET r_success = FALSE
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'aoo-00065'
      LET g_errparam.extend = g_oofg[l_ac].oofg001||","||g_oofg[l_ac].oofg005
      LET g_errparam.popup = TRUE
      
      CALL cl_err()
   END IF
   
   LET g_length = l_sum + l_sum1
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 根據不同的編碼碼性質，抓取不同table，組成不同sql
# Memo...........:
# Usage..........: CALL aoop390_get_sql(p_oofg002)
# Input parameter: p_oofg002      編碼性質
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2014/12/29 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION aoop390_get_sql(p_oofg002)
DEFINE p_oofg002         LIKE oofg_t.oofg002
DEFINE r_success         LIKE type_t.num5
#150302---earl---mod---(s)
DEFINE l_gzcb003         LIKE gzcb_t.gzcb003
DEFINE l_gzcb004         LIKE gzcb_t.gzcb004
DEFINE l_gzcb003_str     STRING
DEFINE l_gzcb004_str     STRING
DEFINE l_gzcb003_sub     STRING
DEFINE l_start           LIKE type_t.num5
DEFINE l_table           LIKE dzeb_t.dzeb001
DEFINE l_field           LIKE dzeb_t.dzeb002

   LET r_success = TRUE
   LET g_sql = ''
   LET g_sql1= ''
   LET g_sql2= ''   #151224-00018#1 by stellar add

   SELECT gzcb003,gzcb004
     INTO l_gzcb003,l_gzcb004
     FROM gzcb_t
    WHERE gzcb001 = '15'
      AND gzcb002 = p_oofg002

   LET l_gzcb003_str = l_gzcb003
   WHILE NOT cl_null(l_gzcb003_str)
      #最後一個table
      IF s_chr_get_index_of(l_gzcb003_str,',',1) = 0 THEN
         LET l_table = l_gzcb003_str
         LET l_gzcb003_sub = l_gzcb003_str.substring(1,l_gzcb003_str.getlength() - 2)
         LET l_gzcb003_str = ''
      ELSE
         #擷取一個table
         LET l_table = l_gzcb003_str.substring(1,s_chr_get_index_of(l_gzcb003_str,',',1) - 1)
         LET l_gzcb003_sub = l_gzcb003_str.substring(1,s_chr_get_index_of(l_gzcb003_str,',',1) - 3)
         #尚未擷取的table
         LET l_gzcb003_str = l_gzcb003_str.substring(s_chr_get_index_of(l_gzcb003_str,',',1) + 1,l_gzcb003_str.getlength())
      END IF
      
      LET l_gzcb004_str = l_gzcb004
      WHILE NOT cl_null(l_gzcb004_str)
         #找無符合的field
         IF s_chr_get_index_of(l_gzcb004_str,l_gzcb003_sub,1) = 0 THEN
            EXIT WHILE
         END IF
            
         #取得table對應值
         LET l_start = s_chr_get_index_of(l_gzcb004_str,l_gzcb003_sub,1)         
         
         #最後一個field
         IF s_chr_get_index_of(l_gzcb004_str,',',l_start) = 0 THEN
            LET l_field = l_gzcb004_str.substring(l_start,l_gzcb004_str.getlength())
            LET l_gzcb004_str = ''
         ELSE            
            #擷取一個field
            LET l_field = l_gzcb004_str.substring(l_start,s_chr_get_index_of(l_gzcb004_str,',',l_start) - 1)
            #尚未擷取的table
            LET l_gzcb004_str = l_gzcb004_str.substring(s_chr_get_index_of(l_gzcb004_str,',',l_start) + 1,l_gzcb004_str.getlength())
         END IF
         
         CALL aoop390_get_sql1(l_table,l_field)
         
      END WHILE
      
   END WHILE

#   CASE p_oofg002
#      WHEN '1'
#           CALL aoop390_get_sql1('imaa_t','imaa001')
#           CALL aoop390_get_sql1('imba_t','imba001')
#      WHEN '2'
#           CALL aoop390_get_sql1('pmaa_t','pmaa001')
#           CALL aoop390_get_sql1('pmba_t','pmba001')
#      WHEN '3'
#           CALL aoop390_get_sql1('faah_t','faah003')
#      WHEN '4'
#           CALL aoop390_get_sql1('inaa_t','inaa001')
#      WHEN '5'
#           CALL aoop390_get_sql1('inab_t','inab002')
#      WHEN '6'
#           CALL aoop390_get_sql1('inad_t','inad003')
#      WHEN '7'
#           CALL aoop390_get_sql1('inae_t','inae003')
#      WHEN '8'
#           CALL aoop390_get_sql1('inae_t','inae004')
#      WHEN '9'
#           CALL aoop390_get_sql1('mmaf_t','mmaf001')
#      WHEN '10'
#           CALL aoop390_get_sql1('mhad_t','mhad004')
#      WHEN '11'
#      WHEN '12'
#      WHEN '13'
#      WHEN '14'
#           CALL aoop390_get_sql1('apca_t','apca063')
#           CALL aoop390_get_sql1('xrca_t','xrca063')
#           CALL aoop390_get_sql1('xmda_t','xmda009')
#      WHEN '15'
#           CALL aoop390_get_sql1('pjba_t','pjba001')
#      WHEN '16'
#           CALL aoop390_get_sql1('prba_t','prba002')
#      WHEN '17'
#      WHEN '18'
#           CALL aoop390_get_sql1('prcb_t','prcb001')
#      WHEN '19'
#           CALL aoop390_get_sql1('prbl_t','prbl001')
#      WHEN '20'
#           CALL aoop390_get_sql1('prcf_t','prcf001')
#      WHEN '21'
#           CALL aoop390_get_sql1('prda_t','prda001')
#      WHEN '22'
#           CALL aoop390_get_sql1('stan_t','stan001')
#           CALL aoop390_get_sql1('staj_t','staj001')
#      WHEN '23'
#           CALL aoop390_get_sql1('prda_t','prda001')
#      WHEN '24'
#           CALL aoop390_get_sql1('prda_t','prda001')
#      WHEN '25'
#           CALL aoop390_get_sql1('prda_t','prda001')
#      WHEN '26'
#           CALL aoop390_get_sql1('stce_t','stce001')
#      WHEN '27'
#           CALL aoop390_get_sql1('stdb_t','stdb001')
#   END CASE

   #150302---earl---mod---(e)

   IF cl_null(g_sql1) THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   LET g_sql = "SELECT a,MAX(b) FROM (",g_sql1,")",
               " WHERE b IS NOT NULL ",
               "   AND LENGTH(TRIM(TRANSLATE(b, '0123456789',' '))) IS NULL ",   #都是數字的才抓
               " GROUP BY a ",
               " ORDER BY a "
   PREPARE aoop390_get_sql_pre FROM g_sql
   DECLARE aoop390_get_sql_cs CURSOR FOR aoop390_get_sql_pre
   
   #151224-00018#1 by stellar add ----- (S)
   IF cl_null(g_sql2) THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   LET g_sql = "SELECT oofi001,oofi002 ",
               "  FROM oofi_t ",
               " WHERE oofient = ",g_enterprise,
               "   AND oofi001 = '",g_oofg[l_ac].oofg001,"'",
               "   AND NOT EXISTS(",g_sql2,")"
   PREPARE aoop390_get_sql_pre2 FROM g_sql
   DECLARE aoop390_get_sql_cs2 CURSOR FOR aoop390_get_sql_pre2
   #151224-00018#1 by stellar add ----- (E)
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 針對傳入的table及欄位去組SQL
# Memo...........:
# Usage..........: CALL aoop390_get_sql1(p_table,p_field)
#                  
# Input parameter: p_table        table代號
#                : p_field        編碼的欄位代號
# Return code....: 
# Date & Author..: 2014/12/29 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION aoop390_get_sql1(p_table,p_field)
DEFINE p_table           LIKE dzeb_t.dzeb001
DEFINE p_field           LIKE dzeb_t.dzeb002
DEFINE l_table1          LIKE dzeb_t.dzeb001

   IF NOT cl_null(g_sql1) THEN
      LET g_sql1 = g_sql1 CLIPPED," UNION "
   END IF
   
   LET l_table1 = p_table[1,LENGTH(p_table)-2]
   
   LET g_sql1 = g_sql1 CLIPPED,
               #2015/03/19 by stellar modify ----- (S)
#               " SELECT SUBSTR(",p_field,",1,",g_length,") As a,SUBSTR(",p_field,",",g_length+1,",",g_length+g_oofg009,") As b",
               " SELECT SUBSTR(",p_field,",1,",g_length,") As a,SUBSTR(",p_field,",",g_length+1,",",g_oofg009,") As b",
               #2015/03/19 by stellar modify ----- (S)
               "   FROM ",p_table,
               "  WHERE LENGTH(",p_field,")  = ",g_oofg003,
               "    AND ",l_table1 CLIPPED,"ent = ",g_enterprise
               
   #151224-00018#1 by stellar add ----- (S)
   IF NOT cl_null(g_sql2) THEN
      LET g_sql2 = g_sql2 CLIPPED," UNION "
   END IF
   
   LET g_sql2 = g_sql2 CLIPPED,
               " SELECT SUBSTR(",p_field,",1,",g_length,") As a,SUBSTR(",p_field,",",g_length+1,",",g_oofg009,") As b",
               "   FROM ",p_table,
               "  WHERE LENGTH(",p_field,")  = ",g_oofg003,
               "    AND ",l_table1 CLIPPED,"ent = ",g_enterprise,
               "    AND SUBSTR(",p_field,",1,",g_length,") = oofi002 "
   #151224-00018#1 by stellar add ----- (E)            
END FUNCTION

################################################################################
# Descriptions...: 針對sql撈取的資料進行處理
# Memo...........:
# Usage..........: CALL aoop390_process1()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2014/12/29 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION aoop390_process1()
DEFINE r_success         LIKE type_t.num5
DEFINE l_str             LIKE oofi_t.oofi002
DEFINE l_num             LIKE oofi_t.oofi003
DEFINE l_success         LIKE type_t.num5
DEFINE l_conform         LIKE type_t.num5

   LET r_success = TRUE
   
   FOREACH aoop390_get_sql_cs INTO l_str,l_num
   
      #檢查該字串是否符合該編碼分類
      CALL aoop390_check(l_str)
           RETURNING l_success,l_conform
      IF NOT l_success THEN
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      IF NOT l_conform THEN
         CONTINUE FOREACH
      END IF
      
      #更新自動編碼最大流水號
      CALL aoop390_oofi_upd(l_str,l_num)
           RETURNING l_success
      IF NOT l_success THEN
         LET r_success = FALSE
         EXIT FOREACH
      END IF
   END FOREACH
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 檢查該字串是否符合該編碼分類
# Memo...........:
# Usage..........: CALL aoop390_check(p_str)
#                  RETURNING r_success,r_conform
# Input parameter: p_str          編碼字串
# Return code....: r_success      TRUE/FALSE
#                : r_conform      是否符合
# Date & Author..: 2014/12/29 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION aoop390_check(p_str)
DEFINE p_str             LIKE oofi_t.oofi002
DEFINE r_success         LIKE type_t.num5
DEFINE r_conform         LIKE type_t.num5
DEFINE l_oofg005         LIKE oofg_t.oofg005
DEFINE l_oofg006         LIKE oofg_t.oofg006
DEFINE l_oofg008         LIKE oofg_t.oofg008
DEFINE l_oofg009         LIKE oofg_t.oofg009
DEFINE l_level           LIKE type_t.num10
DEFINE l_sql             STRING
DEFINE l_length          LIKE type_t.num10
DEFINE l_str             LIKE oofi_t.oofi002

   LET r_success = TRUE
   LET r_conform = TRUE
   LET l_length = g_length
   
   LET l_oofg006 = ''
   SELECT oofg006 INTO l_oofg006 FROM oofg_t
    WHERE oofgent = g_enterprise
      AND oofg001 = g_oofg[l_ac].oofg001
      AND oofg005 = g_oofg[l_ac].oofg005
   
   LET l_sql = "  SELECT LEVEL,oofg005,oofg006,oofg008,oofg009 FROM  (SELECT oofg001,oofg005,oofg006,oofg008,oofg009 ",
               "                                FROM oofg_t ",
               "                                WHERE oofgent = '",g_enterprise,"' ",
               "                                  AND oofg001 = '",g_oofg[l_ac].oofg001,"' ",
               "                                  AND oofg005 <> '",g_oofg[l_ac].oofg001,"' ",
               "                                  AND oofg005 <> oofg006 ) ",
               "   START WITH oofg005 = '",l_oofg006,"' ",
               " CONNECT BY PRIOR oofg006 = oofg005 ",
               " ORDER BY LEVEL"
   PREPARE aoop390_check_pre FROM l_sql
   DECLARE aoop390_check_cs CURSOR FOR aoop390_check_pre
   
   FOREACH aoop390_check_cs INTO l_level,l_oofg005,l_oofg006,l_oofg008,l_oofg009
      
      IF l_oofg008 = '10' THEN   #純分類
         CONTINUE FOREACH
      END IF 
      
      #檢查該段是否符合該編號
      LET l_str = p_str[l_length-l_oofg009+1,l_length]
      CALL aoop390_check1(l_str,l_oofg008,l_oofg005) 
           RETURNING r_success,r_conform
      IF NOT r_success OR NOT r_conform THEN
         EXIT FOREACH
      END IF
      
      LET l_length = l_length - l_oofg009
   END FOREACH
   
   IF NOT r_success OR NOT r_conform OR l_length <= 0 THEN
      RETURN r_success,r_conform
   END IF
      
   #上面sql抓不到第一層，故處理第一層資料
   LET l_oofg005 = ''
   LET l_oofg008 = ''
   LET l_oofg009 = ''
   SELECT oofg005,oofg008,oofg009 INTO l_oofg005,l_oofg008,l_oofg009
     FROM oofg_t
    WHERE oofgent = g_enterprise
      AND oofg001 = g_oofg[l_ac].oofg001
      AND oofg005 = l_oofg006
   IF l_oofg008 <> '10' THEN   #非純分類
      #檢查該段是否符合該編號
      LET l_str = p_str[l_length-l_oofg009+1,l_length]
      CALL aoop390_check1(l_str,l_oofg008,l_oofg005) 
           RETURNING r_success,r_conform
      IF NOT r_success OR NOT r_conform THEN
         RETURN r_success,r_conform
      END IF
   END IF
   
   RETURN r_success,r_conform
END FUNCTION

################################################################################
# Descriptions...: 該字段是否符合該段編碼
# Memo...........:
# Usage..........: CALL aoop390_check1(p_str,p_oofg008,p_oofg005)
#                  RETURNING r_success,r_conform
# Input parameter: p_str          檢查字段
#                : p_oofg008      節點型態
#                : p_oofg005      節點編號
# Return code....: r_success      TRUE/FALSE
#                : r_conform      符合否
# Date & Author..: 2014/12/29 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION aoop390_check1(p_str,p_oofg008,p_oofg005)
DEFINE p_str             LIKE oofi_t.oofi002
DEFINE p_oofg008         LIKE oofg_t.oofg008
DEFINE p_oofg005         LIKE oofg_t.oofg005
DEFINE r_success         LIKE type_t.num5
DEFINE r_conform         LIKE type_t.num5
DEFINE l_oofg009         LIKE oofg_t.oofg009
DEFINE l_oofg010         LIKE oofg_t.oofg010
DEFINE l_oofg011         LIKE oofg_t.oofg011
DEFINE l_oofg012         LIKE oofg_t.oofg012
DEFINE l_oofg013         LIKE oofg_t.oofg013
DEFINE l_oofg014         LIKE oofg_t.oofg014
DEFINE l_oofg015         LIKE oofg_t.oofg015
DEFINE l_value           LIKE type_t.chr80
DEFINE l_cnt             LIKE type_t.num5
DEFINE l_num             LIKE type_t.num10

   LET r_success = TRUE
   LET r_conform = TRUE
   
   LET l_oofg010 = ''
   LET l_oofg011 = ''
   LET l_oofg012 = ''
   LET l_oofg013 = ''
   SELECT oofg009,oofg010,oofg011,oofg012,oofg013,oofg014,oofg015
     INTO l_oofg009,l_oofg010,l_oofg011,l_oofg012,l_oofg013,l_oofg014,l_oofg015
     FROM oofg_t
    WHERE oofgent = g_enterprise
      AND oofg001 = g_oofg[l_ac].oofg001
      AND oofg005 = p_oofg005
   IF cl_null(l_oofg014) THEN LET l_oofg014 = 1 END IF
   IF cl_null(l_oofg015) THEN LET l_oofg015 = l_oofg009 END IF
   
   CASE p_oofg008
      WHEN '0'   #固定值
           IF p_str <> l_oofg010 THEN
              LET r_conform = FALSE
              RETURN r_success,r_conform
           END IF
      WHEN '1'   #數值
           #先判斷是否為數值
           CALL aoop390_chk_num(p_str) RETURNING r_success,r_conform,l_num
           IF NOT r_success OR NOT r_conform THEN
              RETURN r_success,r_conform
           END IF
           IF l_num < l_oofg011 OR l_num > l_oofg012 THEN
              LET r_conform = FALSE
              RETURN r_success,r_conform
           END IF
      WHEN '2'   #欄位值
           PREPARE aoop390_oofg013_pre FROM l_oofg013
           DECLARE aoop390_oofg013_cs CURSOR FOR aoop390_oofg013_pre
           LET r_conform = FALSE
           FOREACH aoop390_oofg013_cs INTO l_value
              IF NOT cl_null(l_value) AND Length(l_value) >= l_oofg015 THEN
                 LET l_value = l_value[l_oofg014,l_oofg015]
                 
                 IF l_value = p_str THEN
                    LET r_conform = TRUE
                    EXIT FOREACH
                 END IF
              END IF
           END FOREACH
      WHEN '3'   #可選項
           LET l_cnt = 0
           SELECT COUNT(*) INTO l_cnt 
             FROM oofh_t
            WHERE oofhent = g_enterprise
              AND oofh001 = g_oofg[l_ac].oofg001
              AND oofh002 = p_oofg005
              AND oofh003 = p_str
           IF cl_null(l_cnt) OR l_cnt = 0 THEN
              LET r_conform = FALSE
           END IF
      WHEN '4'   #年
           #先判斷是否為數值
           CALL aoop390_chk_num(p_str) RETURNING r_success,r_conform,l_num
           IF NOT r_success OR NOT r_conform THEN
              RETURN r_success,r_conform
           END IF
      WHEN '5'   #月
           #先判斷是否為數值
           CALL aoop390_chk_num(p_str) RETURNING r_success,r_conform,l_num
           IF NOT r_success OR NOT r_conform THEN
              RETURN r_success,r_conform
           END IF
           IF l_num < 1 OR l_num > 12 THEN
              LET r_conform = FALSE
           END IF
      WHEN '6'   #期
           #先判斷是否為數值
           CALL aoop390_chk_num(p_str) RETURNING r_success,r_conform,l_num
           IF NOT r_success OR NOT r_conform THEN
              RETURN r_success,r_conform
           END IF
           IF l_num < 1 OR l_num > 13 THEN
              LET r_conform = FALSE
           END IF
      WHEN '7'   #週
           #先判斷是否為數值
           CALL aoop390_chk_num(p_str) RETURNING r_success,r_conform,l_num
           IF NOT r_success OR NOT r_conform THEN
              RETURN r_success,r_conform
           END IF
           IF l_num < 1 OR l_num > 53 THEN
              LET r_conform = FALSE
           END IF
      WHEN '8'   #日
           #先判斷是否為數值
           CALL aoop390_chk_num(p_str) RETURNING r_success,r_conform,l_num
           IF NOT r_success OR NOT r_conform THEN
              RETURN r_success,r_conform
           END IF
           IF l_num < 1 OR l_num > 31 THEN
              LET r_conform = FALSE
           END IF
      WHEN '9'   #流水號
           #先判斷是否為數值
           CALL aoop390_chk_num(p_str) RETURNING r_success,r_conform,l_num
           IF NOT r_success OR NOT r_conform THEN
              RETURN r_success,r_conform
           END IF
   END CASE
   
   RETURN r_success,r_conform
END FUNCTION

################################################################################
# Descriptions...: 判斷該字串是否為數字
# Memo...........:
# Usage..........: CALL aoop390_chk_num(p_str)
#                  RETURNING r_success,r_conform
# Input parameter: p_str          字串
# Return code....: r_success      TRUE/FALSE
#                : r_conform      數字否
#                : r_num          數字
# Date & Author..: 2014/12/29 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION aoop390_chk_num(p_str)
DEFINE p_str             LIKE oofi_t.oofi002
DEFINE r_success         LIKE type_t.num5
DEFINE r_conform         LIKE type_t.num5
DEFINE r_num             LIKE type_t.num10
DEFINE l_str             LIKE type_t.chr80

   LET r_success = TRUE
   LET r_conform = TRUE
   LET r_num = ''
   
   SELECT TRIM(TRANSLATE(p_str,'0123456789',' ')) INTO l_str
     FROM dual
   IF l_str IS NULL THEN
      LET r_conform = TRUE
      LET r_num = p_str
   ELSE
      LET r_conform = FALSE
   END IF
   
   RETURN r_success,r_conform,r_num
END FUNCTION

################################################################################
# Descriptions...: 更新自動編碼最大流水號
# Memo...........:
# Usage..........: CALL aoop390_oofi_upd(p_oofi002,p_oofi003)
#                  RETURNING r_success
# Input parameter: p_oofi002      流水號前編碼
#                : p_oofi003      最大流水號
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 2014/12/29 By stellar
# Modify.........:
################################################################################
PRIVATE FUNCTION aoop390_oofi_upd(p_oofi002,p_oofi003)
DEFINE p_oofi002         LIKE oofi_t.oofi002
DEFINE p_oofi003         LIKE oofi_t.oofi003
DEFINE r_success         LIKE type_t.num5
DEFINE l_cnt             LIKE type_t.num5

   LET r_success = TRUE
   
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt 
     FROM oofi_t
    WHERE oofient = g_enterprise
      AND oofi001 = g_oofg[l_ac].oofg001
      AND oofi002 = p_oofi002
   IF cl_null(l_cnt) OR l_cnt <= 0 THEN
      #新增一筆資料
      INSERT INTO oofi_t(oofient,oofi001,oofi002,oofi003)
         VALUES (g_enterprise,g_oofg[l_ac].oofg001,p_oofi002,p_oofi003)
   ELSE
      #更新
      UPDATE oofi_t SET oofi003 = p_oofi003
       WHERE oofient = g_enterprise
         AND oofi001 = g_oofg[l_ac].oofg001
         AND oofi002 = p_oofi002
   END IF 
   IF SQLCA.sqlcode THEN
      LET r_success = FALSE
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_oofg[l_ac].oofg001||","||p_oofi002
      LET g_errparam.popup = TRUE
      
      CALL cl_err()
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 將不存在對應table內的oofi_t刪除
# Memo...........:
# Usage..........: CALL aoop390_oofi_del()
#                  RETURNING r_success
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: r_success      TRUE/FALSE
# Date & Author..: 20151224 By stellar for 151224-00018#1
# Modify.........: 
################################################################################
PRIVATE FUNCTION aoop390_oofi_del()
DEFINE r_success         LIKE type_t.num5
DEFINE l_oofi001         LIKE oofi_t.oofi001
DEFINE l_oofi002         LIKE oofi_t.oofi002

   LET r_success = TRUE
   
   FOREACH aoop390_get_sql_cs2 INTO l_oofi001,l_oofi002
      DELETE FROM oofi_t
       WHERE oofient = g_enterprise
         AND oofi001 = l_oofi001
         AND oofi002 = l_oofi002
      
      IF SQLCA.sqlcode THEN
         LET r_success = FALSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = l_oofi001||","||l_oofi002
         LET g_errparam.popup = TRUE
         
         CALL cl_err()
         EXIT FOREACH
      END IF
   END FOREACH
   
   RETURN r_success
END FUNCTION

#end add-point
 
{</section>}
 
