#該程式未解開Section, 採用最新樣板產出!
{<section id="afat490.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0003(2016-09-13 10:32:46), PR版次:0003(2016-09-13 10:41:02)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000013
#+ Filename...: afat490
#+ Description: 資產撥出維護作業
#+ Creator....: 02114(2015-08-31 16:40:03)
#+ Modifier...: 07900 -SD/PR- 07900
 
{</section>}
 
{<section id="afat490.global" >}
#應用 t01 樣板自動產生(Version:76)
#add-point:填寫註解說明
#151130-00015#2     2015/12/21 BY taozf    判断 是否可以更改單據日期 設定開放單據日期修改
#151125-00006#2     2015/12/11 BY 06421    添加自动审核
#160201-00017#2...: 2016/02/02 BY fionchen 執行[作廢]作業時,增加詢問「是否執行作廢？」
#160318-00025#28    2016/04/06 BY 07959    修正azzi920重複定義之錯誤訊息
#160414-00015#1     2016/04/22 BY 07673    复制时清空特定栏位
#160705-00042#6     2016/07/12 BY sakura   查詢程式段q_ooba002_1開窗，呼叫開窗前的g_qryparam.arg若是要傳入程式代號，要改傳入g_prog
#160812-00017#7     2016/08/16 BY 06137    在satatchange( 令但沒有加上transaction_end( ) 造成transaction沒有結束就直接RETURN
#160426-00014#33    2016/08/17 BY 02114    修改权限的问题
#160426-00014#23    2016/09/12 By 07900    固定资产的t作业的单身都增加名称与规格二个栏位，取值来源为afai100的faah012,faah013,各单身表栏位直接按现有表依序增加
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_faba_m        RECORD
       fabasite LIKE faba_t.fabasite, 
   fabasite_desc LIKE type_t.chr80, 
   faba001 LIKE faba_t.faba001, 
   faba001_desc LIKE type_t.chr80, 
   fabacomp LIKE faba_t.fabacomp, 
   fabacomp_desc LIKE type_t.chr80, 
   faba003 LIKE faba_t.faba003, 
   fabadocno LIKE faba_t.fabadocno, 
   fabadocdt LIKE faba_t.fabadocdt, 
   faba009 LIKE faba_t.faba009, 
   faba010 LIKE faba_t.faba010, 
   faba011 LIKE faba_t.faba011, 
   faba012 LIKE faba_t.faba012, 
   faba013 LIKE faba_t.faba013, 
   faba014 LIKE faba_t.faba014, 
   fabastus LIKE faba_t.fabastus, 
   fabaownid LIKE faba_t.fabaownid, 
   fabaownid_desc LIKE type_t.chr80, 
   fabaowndp LIKE faba_t.fabaowndp, 
   fabaowndp_desc LIKE type_t.chr80, 
   fabacrtid LIKE faba_t.fabacrtid, 
   fabacrtid_desc LIKE type_t.chr80, 
   fabacrtdp LIKE faba_t.fabacrtdp, 
   fabacrtdp_desc LIKE type_t.chr80, 
   fabacrtdt LIKE faba_t.fabacrtdt, 
   fabamodid LIKE faba_t.fabamodid, 
   fabamodid_desc LIKE type_t.chr80, 
   fabamoddt LIKE faba_t.fabamoddt, 
   fabacnfid LIKE faba_t.fabacnfid, 
   fabacnfid_desc LIKE type_t.chr80, 
   fabacnfdt LIKE faba_t.fabacnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_fabv_d        RECORD
       fabvseq LIKE fabv_t.fabvseq, 
   fabv004 LIKE fabv_t.fabv004, 
   fabv005 LIKE fabv_t.fabv005, 
   fabv006 LIKE fabv_t.fabv006, 
   faah012 LIKE type_t.chr500, 
   faah013 LIKE type_t.chr500, 
   fabv010 LIKE fabv_t.fabv010, 
   fabv010_desc LIKE type_t.chr500, 
   fabv014 LIKE fabv_t.fabv014, 
   fabv014_desc LIKE type_t.chr500, 
   fabv012 LIKE fabv_t.fabv012, 
   fabv012_desc LIKE type_t.chr500, 
   fabv007 LIKE fabv_t.fabv007, 
   fabv007_desc LIKE type_t.chr500, 
   fabv008 LIKE fabv_t.fabv008, 
   fabv008_desc LIKE type_t.chr500, 
   fabv015 LIKE fabv_t.fabv015, 
   faah020 LIKE type_t.chr10, 
   faaj015 LIKE type_t.num26_10, 
   fabv016 LIKE fabv_t.fabv016, 
   fabv017 LIKE fabv_t.fabv017, 
   fabv019 LIKE fabv_t.fabv019
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_fabadocno LIKE faba_t.fabadocno
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_glaa                RECORD LIKE glaa_t.*   
DEFINE g_faah018             LIKE faah_t.faah018
DEFINE g_faaj033             LIKE faaj_t.faaj033
DEFINE g_faaj016             LIKE faaj_t.faaj016
DEFINE g_faaj020             LIKE faaj_t.faaj020
DEFINE g_faaj034             LIKE faaj_t.faaj034
DEFINE g_faaj028             LIKE faaj_t.faaj028
DEFINE g_faaj017             LIKE faaj_t.faaj017
DEFINE g_faaj035             LIKE faaj_t.faaj035
DEFINE g_faaj021             LIKE faaj_t.faaj021
DEFINE g_faaj027             LIKE faaj_t.faaj027
DEFINE g_site_str            STRING                  #160426-00014#33 add lujh
#end add-point
       
#模組變數(Module Variables)
DEFINE g_faba_m          type_g_faba_m
DEFINE g_faba_m_t        type_g_faba_m
DEFINE g_faba_m_o        type_g_faba_m
DEFINE g_faba_m_mask_o   type_g_faba_m #轉換遮罩前資料
DEFINE g_faba_m_mask_n   type_g_faba_m #轉換遮罩後資料
 
   DEFINE g_fabadocno_t LIKE faba_t.fabadocno
 
 
DEFINE g_fabv_d          DYNAMIC ARRAY OF type_g_fabv_d
DEFINE g_fabv_d_t        type_g_fabv_d
DEFINE g_fabv_d_o        type_g_fabv_d
DEFINE g_fabv_d_mask_o   DYNAMIC ARRAY OF type_g_fabv_d #轉換遮罩前資料
DEFINE g_fabv_d_mask_n   DYNAMIC ARRAY OF type_g_fabv_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="afat490.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("afa","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT fabasite,'',faba001,'',fabacomp,'',faba003,fabadocno,fabadocdt,faba009, 
       faba010,faba011,faba012,faba013,faba014,fabastus,fabaownid,'',fabaowndp,'',fabacrtid,'',fabacrtdp, 
       '',fabacrtdt,fabamodid,'',fabamoddt,fabacnfid,'',fabacnfdt", 
                      " FROM faba_t",
                      " WHERE fabaent= ? AND fabadocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE afat490_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.fabasite,t0.faba001,t0.fabacomp,t0.faba003,t0.fabadocno,t0.fabadocdt, 
       t0.faba009,t0.faba010,t0.faba011,t0.faba012,t0.faba013,t0.faba014,t0.fabastus,t0.fabaownid,t0.fabaowndp, 
       t0.fabacrtid,t0.fabacrtdp,t0.fabacrtdt,t0.fabamodid,t0.fabamoddt,t0.fabacnfid,t0.fabacnfdt,t1.ooefl003 , 
       t2.ooag011 ,t3.ooefl003 ,t4.ooag011 ,t5.ooefl003 ,t6.ooag011 ,t7.ooefl003 ,t8.ooag011 ,t9.ooag011", 
 
               " FROM faba_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.fabasite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=t0.faba001  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=t0.fabasite AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent="||g_enterprise||" AND t4.ooag001=t0.fabaownid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent="||g_enterprise||" AND t5.ooefl001=t0.fabaowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=t0.fabacrtid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent="||g_enterprise||" AND t7.ooefl001=t0.fabacrtdp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent="||g_enterprise||" AND t8.ooag001=t0.fabamodid  ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent="||g_enterprise||" AND t9.ooag001=t0.fabacnfid  ",
 
               " WHERE t0.fabaent = " ||g_enterprise|| " AND t0.fabadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE afat490_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_afat490 WITH FORM cl_ap_formpath("afa",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL afat490_init()   
 
      #進入選單 Menu (="N")
      CALL afat490_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_afat490
      
   END IF 
   
   CLOSE afat490_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="afat490.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION afat490_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('fabastus','13','N,Y,A,D,R,W,S,X')
 
      CALL cl_set_combo_scc('faba003','9910') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   CALL s_fin_create_account_center_tmp()
   #end add-point
   
   #初始化搜尋條件
   CALL afat490_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="afat490.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION afat490_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   DEFINE l_cn              LIKE type_t.num5 #151125-00006#2
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL afat490_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_faba_m.* TO NULL
         CALL g_fabv_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL afat490_init()
      END IF
   
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
    
         DISPLAY ARRAY g_fabv_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL afat490_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL afat490_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
      
         BEFORE DIALOG
            #先填充browser資料
            CALL afat490_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL afat490_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL afat490_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL afat490_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL afat490_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL afat490_set_act_visible()   
            CALL afat490_set_act_no_visible()
            IF NOT (g_faba_m.fabadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " fabaent = " ||g_enterprise|| " AND",
                                  " fabadocno = '", g_faba_m.fabadocno, "' "
 
               #填到對應位置
               CALL afat490_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "faba_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "fabv_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL afat490_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "faba_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "fabv_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL afat490_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL afat490_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL afat490_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afat490_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL afat490_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afat490_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL afat490_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afat490_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL afat490_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afat490_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL afat490_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afat490_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_fabv_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL afat490_modify()
               #add-point:ON ACTION modify name="menu.modify"
               #add 151125-00006#2 --s
               LET l_cn = 0 
               SELECT COUNT(*) INTO l_cn FROM faba_t 
               WHERE fabacomp  = g_faba_m.fabacomp  AND fabadocno = g_faba_m.fabadocno AND fabaent = g_enterprise
               IF l_cn > 0 AND NOT cl_null (g_current_idx) THEN
                  CALL afat490_ui_headershow()
               END IF
               #add 151125-00006#2 --e
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL afat490_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               #add 151125-00006#2 --s
               LET l_cn = 0 
               SELECT COUNT(*) INTO l_cn FROM faba_t 
               WHERE fabacomp  = g_faba_m.fabacomp  AND fabadocno = g_faba_m.fabadocno AND fabaent = g_enterprise
               IF l_cn > 0 AND NOT cl_null (g_current_idx) THEN
                  CALL afat490_ui_headershow()
               END IF
               #add 151125-00006#2 --e
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL afat490_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL afat490_insert()
               #add-point:ON ACTION insert name="menu.insert"
               #add 151125-00006#2 --s
               LET l_cn = 0 
               SELECT COUNT(*) INTO l_cn FROM faba_t 
               WHERE fabacomp  = g_faba_m.fabacomp  AND fabadocno = g_faba_m.fabadocno AND fabaent = g_enterprise
               IF l_cn > 0 AND NOT cl_null (g_current_idx) THEN
                  CALL afat490_ui_headershow()
               END IF
               #add 151125-00006#2 --e
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               &include "erp/afa/afat490_rep.4gl"
               #add-point:ON ACTION output.after
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL afat490_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               #add 151125-00006#2 --s
               LET l_cn = 0 
               SELECT COUNT(*) INTO l_cn FROM faba_t 
               WHERE fabacomp  = g_faba_m.fabacomp  AND fabadocno = g_faba_m.fabadocno AND fabaent = g_enterprise
               IF l_cn > 0 AND NOT cl_null (g_current_idx) THEN
                  CALL afat490_ui_headershow()
               END IF
               #add 151125-00006#2 --e
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL afat490_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL afat490_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL afat490_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL afat490_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_faba_m.fabadocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="afat490.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION afat490_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   DEFINE l_comp_str        STRING    #160426-00014#33 add lujh
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   LET l_wc=l_wc," AND faba003='32' "
   
   #160426-00014#33--add--str--lujh
   CALL s_axrt300_get_site(g_user,'','1') RETURNING l_comp_str
   LET l_comp_str = cl_replace_str(l_comp_str,"ooef001","fabasite")
   LET l_wc = l_wc," AND ",l_comp_str
   #160426-00014#33--add--end--lujh
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT fabadocno ",
                      " FROM faba_t ",
                      " ",
                      " LEFT JOIN fabv_t ON fabvent = fabaent AND fabadocno = fabvdocno ", "  ",
                      #add-point:browser_fill段sql(fabv_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
 
 
                      " ", 
                      " ", 
 
 
                      " WHERE fabaent = " ||g_enterprise|| " AND fabvent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("faba_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT fabadocno ",
                      " FROM faba_t ", 
                      "  ",
                      "  ",
                      " WHERE fabaent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("faba_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_faba_m.* TO NULL
      CALL g_fabv_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.fabadocno Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.fabastus,t0.fabadocno ",
                  " FROM faba_t t0",
                  "  ",
                  "  LEFT JOIN fabv_t ON fabvent = fabaent AND fabadocno = fabvdocno ", "  ", 
                  #add-point:browser_fill段sql(fabv_t1) name="browser_fill.join.fabv_t1"
                  
                  #end add-point
 
 
                  " ", 
 
 
                  
                  " WHERE t0.fabaent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("faba_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.fabastus,t0.fabadocno ",
                  " FROM faba_t t0",
                  "  ",
                  
                  " WHERE t0.fabaent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("faba_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY fabadocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"faba_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_fabadocno
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "S"
            LET g_browser[g_cnt].b_statepic = "stus/16/posted.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_fabadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="afat490.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION afat490_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_faba_m.fabadocno = g_browser[g_current_idx].b_fabadocno   
 
   EXECUTE afat490_master_referesh USING g_faba_m.fabadocno INTO g_faba_m.fabasite,g_faba_m.faba001, 
       g_faba_m.fabacomp,g_faba_m.faba003,g_faba_m.fabadocno,g_faba_m.fabadocdt,g_faba_m.faba009,g_faba_m.faba010, 
       g_faba_m.faba011,g_faba_m.faba012,g_faba_m.faba013,g_faba_m.faba014,g_faba_m.fabastus,g_faba_m.fabaownid, 
       g_faba_m.fabaowndp,g_faba_m.fabacrtid,g_faba_m.fabacrtdp,g_faba_m.fabacrtdt,g_faba_m.fabamodid, 
       g_faba_m.fabamoddt,g_faba_m.fabacnfid,g_faba_m.fabacnfdt,g_faba_m.fabasite_desc,g_faba_m.faba001_desc, 
       g_faba_m.fabacomp_desc,g_faba_m.fabaownid_desc,g_faba_m.fabaowndp_desc,g_faba_m.fabacrtid_desc, 
       g_faba_m.fabacrtdp_desc,g_faba_m.fabamodid_desc,g_faba_m.fabacnfid_desc
   
   CALL afat490_faba_t_mask()
   CALL afat490_show()
      
END FUNCTION
 
{</section>}
 
{<section id="afat490.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION afat490_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="afat490.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION afat490_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_fabadocno = g_faba_m.fabadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="afat490.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION afat490_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   DEFINE l_comp_str  STRING    #160426-00014#33 add lujh
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_faba_m.* TO NULL
   CALL g_fabv_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   LET g_site_str = NULL      #160426-00014#33 add lujh
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON fabasite,faba001,fabacomp,faba003,fabadocno,fabadocdt,faba009,faba010, 
          faba011,faba012,faba013,faba014,fabastus,fabaownid,fabaowndp,fabacrtid,fabacrtdp,fabacrtdt, 
          fabamodid,fabamoddt,fabacnfid,fabacnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
 
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<fabacrtdt>>----
         AFTER FIELD fabacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<fabamoddt>>----
         AFTER FIELD fabamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<fabacnfdt>>----
         AFTER FIELD fabacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<fabapstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.fabasite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabasite
            #add-point:ON ACTION controlp INFIELD fabasite name="construct.c.fabasite"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            #160426-00014#33--add--str--lujh
			   LET g_qryparam.where =" ooef207='Y'"    
            CALL q_ooef001()                        #呼叫開窗
            #160426-00014#33--add--end--lujh
            #CALL q_ooef001_6()                     #呼叫開窗     #160426-00014#33 mark lujh
            DISPLAY g_qryparam.return1 TO fabasite  #顯示到畫面上
            NEXT FIELD fabasite                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabasite
            #add-point:BEFORE FIELD fabasite name="construct.b.fabasite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabasite
            
            #add-point:AFTER FIELD fabasite name="construct.a.fabasite"
            CALL FGL_DIALOG_GETBUFFER() RETURNING g_site_str      #160426-00014#33 add lujh
            #END add-point
            
 
 
         #Ctrlp:construct.c.faba001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faba001
            #add-point:ON ACTION controlp INFIELD faba001 name="construct.c.faba001"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO faba001  #顯示到畫面上
            NEXT FIELD faba001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faba001
            #add-point:BEFORE FIELD faba001 name="construct.b.faba001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faba001
            
            #add-point:AFTER FIELD faba001 name="construct.a.faba001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabacomp
            #add-point:BEFORE FIELD fabacomp name="construct.b.fabacomp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabacomp
            
            #add-point:AFTER FIELD fabacomp name="construct.a.fabacomp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fabacomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabacomp
            #add-point:ON ACTION controlp INFIELD fabacomp name="construct.c.fabacomp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            CALL s_axrt300_get_site(g_user,g_site_str,'1') RETURNING l_comp_str      #160426-00014#33 add lujh
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " ooef003 = 'Y' AND ",l_comp_str      #160426-00014#33 add lujh
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fabacomp  #顯示到畫面上
            NEXT FIELD fabacomp                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faba003
            #add-point:BEFORE FIELD faba003 name="construct.b.faba003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faba003
            
            #add-point:AFTER FIELD faba003 name="construct.a.faba003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.faba003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faba003
            #add-point:ON ACTION controlp INFIELD faba003 name="construct.c.faba003"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fabadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabadocno
            #add-point:ON ACTION controlp INFIELD fabadocno name="construct.c.fabadocno"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_fabadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fabadocno  #顯示到畫面上
            NEXT FIELD fabadocno                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabadocno
            #add-point:BEFORE FIELD fabadocno name="construct.b.fabadocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabadocno
            
            #add-point:AFTER FIELD fabadocno name="construct.a.fabadocno"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabadocdt
            #add-point:BEFORE FIELD fabadocdt name="construct.b.fabadocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabadocdt
            
            #add-point:AFTER FIELD fabadocdt name="construct.a.fabadocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fabadocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabadocdt
            #add-point:ON ACTION controlp INFIELD fabadocdt name="construct.c.fabadocdt"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faba009
            #add-point:BEFORE FIELD faba009 name="construct.b.faba009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faba009
            
            #add-point:AFTER FIELD faba009 name="construct.a.faba009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.faba009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faba009
            #add-point:ON ACTION controlp INFIELD faba009 name="construct.c.faba009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faba010
            #add-point:BEFORE FIELD faba010 name="construct.b.faba010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faba010
            
            #add-point:AFTER FIELD faba010 name="construct.a.faba010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.faba010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faba010
            #add-point:ON ACTION controlp INFIELD faba010 name="construct.c.faba010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faba011
            #add-point:BEFORE FIELD faba011 name="construct.b.faba011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faba011
            
            #add-point:AFTER FIELD faba011 name="construct.a.faba011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.faba011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faba011
            #add-point:ON ACTION controlp INFIELD faba011 name="construct.c.faba011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faba012
            #add-point:BEFORE FIELD faba012 name="construct.b.faba012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faba012
            
            #add-point:AFTER FIELD faba012 name="construct.a.faba012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.faba012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faba012
            #add-point:ON ACTION controlp INFIELD faba012 name="construct.c.faba012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faba013
            #add-point:BEFORE FIELD faba013 name="construct.b.faba013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faba013
            
            #add-point:AFTER FIELD faba013 name="construct.a.faba013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.faba013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faba013
            #add-point:ON ACTION controlp INFIELD faba013 name="construct.c.faba013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faba014
            #add-point:BEFORE FIELD faba014 name="construct.b.faba014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faba014
            
            #add-point:AFTER FIELD faba014 name="construct.a.faba014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.faba014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faba014
            #add-point:ON ACTION controlp INFIELD faba014 name="construct.c.faba014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabastus
            #add-point:BEFORE FIELD fabastus name="construct.b.fabastus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabastus
            
            #add-point:AFTER FIELD fabastus name="construct.a.fabastus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fabastus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabastus
            #add-point:ON ACTION controlp INFIELD fabastus name="construct.c.fabastus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fabaownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabaownid
            #add-point:ON ACTION controlp INFIELD fabaownid name="construct.c.fabaownid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fabaownid  #顯示到畫面上
            NEXT FIELD fabaownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabaownid
            #add-point:BEFORE FIELD fabaownid name="construct.b.fabaownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabaownid
            
            #add-point:AFTER FIELD fabaownid name="construct.a.fabaownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fabaowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabaowndp
            #add-point:ON ACTION controlp INFIELD fabaowndp name="construct.c.fabaowndp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fabaowndp  #顯示到畫面上
            NEXT FIELD fabaowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabaowndp
            #add-point:BEFORE FIELD fabaowndp name="construct.b.fabaowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabaowndp
            
            #add-point:AFTER FIELD fabaowndp name="construct.a.fabaowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fabacrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabacrtid
            #add-point:ON ACTION controlp INFIELD fabacrtid name="construct.c.fabacrtid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fabacrtid  #顯示到畫面上
            NEXT FIELD fabacrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabacrtid
            #add-point:BEFORE FIELD fabacrtid name="construct.b.fabacrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabacrtid
            
            #add-point:AFTER FIELD fabacrtid name="construct.a.fabacrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fabacrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabacrtdp
            #add-point:ON ACTION controlp INFIELD fabacrtdp name="construct.c.fabacrtdp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fabacrtdp  #顯示到畫面上
            NEXT FIELD fabacrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabacrtdp
            #add-point:BEFORE FIELD fabacrtdp name="construct.b.fabacrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabacrtdp
            
            #add-point:AFTER FIELD fabacrtdp name="construct.a.fabacrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabacrtdt
            #add-point:BEFORE FIELD fabacrtdt name="construct.b.fabacrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fabamodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabamodid
            #add-point:ON ACTION controlp INFIELD fabamodid name="construct.c.fabamodid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fabamodid  #顯示到畫面上
            NEXT FIELD fabamodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabamodid
            #add-point:BEFORE FIELD fabamodid name="construct.b.fabamodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabamodid
            
            #add-point:AFTER FIELD fabamodid name="construct.a.fabamodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabamoddt
            #add-point:BEFORE FIELD fabamoddt name="construct.b.fabamoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fabacnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabacnfid
            #add-point:ON ACTION controlp INFIELD fabacnfid name="construct.c.fabacnfid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fabacnfid  #顯示到畫面上
            NEXT FIELD fabacnfid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabacnfid
            #add-point:BEFORE FIELD fabacnfid name="construct.b.fabacnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabacnfid
            
            #add-point:AFTER FIELD fabacnfid name="construct.a.fabacnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabacnfdt
            #add-point:BEFORE FIELD fabacnfdt name="construct.b.fabacnfdt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON fabvseq,fabv004,fabv005,fabv006,faah012,faah013,fabv010,fabv014,fabv012, 
          fabv007,fabv007_desc,fabv008,fabv008_desc,fabv015,faah020,faaj015,fabv016,fabv017,fabv019
           FROM s_detail1[1].fabvseq,s_detail1[1].fabv004,s_detail1[1].fabv005,s_detail1[1].fabv006, 
               s_detail1[1].faah012,s_detail1[1].faah013,s_detail1[1].fabv010,s_detail1[1].fabv014,s_detail1[1].fabv012, 
               s_detail1[1].fabv007,s_detail1[1].fabv007_desc,s_detail1[1].fabv008,s_detail1[1].fabv008_desc, 
               s_detail1[1].fabv015,s_detail1[1].faah020,s_detail1[1].faaj015,s_detail1[1].fabv016,s_detail1[1].fabv017, 
               s_detail1[1].fabv019
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabvseq
            #add-point:BEFORE FIELD fabvseq name="construct.b.page1.fabvseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabvseq
            
            #add-point:AFTER FIELD fabvseq name="construct.a.page1.fabvseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fabvseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabvseq
            #add-point:ON ACTION controlp INFIELD fabvseq name="construct.c.page1.fabvseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.fabv004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv004
            #add-point:ON ACTION controlp INFIELD fabv004 name="construct.c.page1.fabv004"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_faah003_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fabv004  #顯示到畫面上

            NEXT FIELD fabv004                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv004
            #add-point:BEFORE FIELD fabv004 name="construct.b.page1.fabv004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv004
            
            #add-point:AFTER FIELD fabv004 name="construct.a.page1.fabv004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fabv005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv005
            #add-point:ON ACTION controlp INFIELD fabv005 name="construct.c.page1.fabv005"
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_faah003_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fabb005  #顯示到畫面上
                

            NEXT FIELD fabb005                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv005
            #add-point:BEFORE FIELD fabv005 name="construct.b.page1.fabv005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv005
            
            #add-point:AFTER FIELD fabv005 name="construct.a.page1.fabv005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fabv006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv006
            #add-point:ON ACTION controlp INFIELD fabv006 name="construct.c.page1.fabv006"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_faah003_7()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fabv006  #顯示到畫面上
            NEXT FIELD fabv006                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv006
            #add-point:BEFORE FIELD fabv006 name="construct.b.page1.fabv006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv006
            
            #add-point:AFTER FIELD fabv006 name="construct.a.page1.fabv006"
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_faah003_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fabv006  #顯示到畫面上

            NEXT FIELD fabv006                     #返回原欄位
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faah012
            #add-point:BEFORE FIELD faah012 name="construct.b.page1.faah012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faah012
            
            #add-point:AFTER FIELD faah012 name="construct.a.page1.faah012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.faah012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faah012
            #add-point:ON ACTION controlp INFIELD faah012 name="construct.c.page1.faah012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faah013
            #add-point:BEFORE FIELD faah013 name="construct.b.page1.faah013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faah013
            
            #add-point:AFTER FIELD faah013 name="construct.a.page1.faah013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.faah013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faah013
            #add-point:ON ACTION controlp INFIELD faah013 name="construct.c.page1.faah013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv010
            #add-point:BEFORE FIELD fabv010 name="construct.b.page1.fabv010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv010
            
            #add-point:AFTER FIELD fabv010 name="construct.a.page1.fabv010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fabv010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv010
            #add-point:ON ACTION controlp INFIELD fabv010 name="construct.c.page1.fabv010"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fabv010  #顯示到畫面上
            NEXT FIELD fabv010                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv014
            #add-point:BEFORE FIELD fabv014 name="construct.b.page1.fabv014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv014
            
            #add-point:AFTER FIELD fabv014 name="construct.a.page1.fabv014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fabv014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv014
            #add-point:ON ACTION controlp INFIELD fabv014 name="construct.c.page1.fabv014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv012
            #add-point:BEFORE FIELD fabv012 name="construct.b.page1.fabv012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv012
            
            #add-point:AFTER FIELD fabv012 name="construct.a.page1.fabv012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fabv012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv012
            #add-point:ON ACTION controlp INFIELD fabv012 name="construct.c.page1.fabv012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv007
            #add-point:BEFORE FIELD fabv007 name="construct.b.page1.fabv007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv007
            
            #add-point:AFTER FIELD fabv007 name="construct.a.page1.fabv007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fabv007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv007
            #add-point:ON ACTION controlp INFIELD fabv007 name="construct.c.page1.fabv007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv007_desc
            #add-point:BEFORE FIELD fabv007_desc name="construct.b.page1.fabv007_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv007_desc
            
            #add-point:AFTER FIELD fabv007_desc name="construct.a.page1.fabv007_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fabv007_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv007_desc
            #add-point:ON ACTION controlp INFIELD fabv007_desc name="construct.c.page1.fabv007_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv008
            #add-point:BEFORE FIELD fabv008 name="construct.b.page1.fabv008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv008
            
            #add-point:AFTER FIELD fabv008 name="construct.a.page1.fabv008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fabv008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv008
            #add-point:ON ACTION controlp INFIELD fabv008 name="construct.c.page1.fabv008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv008_desc
            #add-point:BEFORE FIELD fabv008_desc name="construct.b.page1.fabv008_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv008_desc
            
            #add-point:AFTER FIELD fabv008_desc name="construct.a.page1.fabv008_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fabv008_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv008_desc
            #add-point:ON ACTION controlp INFIELD fabv008_desc name="construct.c.page1.fabv008_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv015
            #add-point:BEFORE FIELD fabv015 name="construct.b.page1.fabv015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv015
            
            #add-point:AFTER FIELD fabv015 name="construct.a.page1.fabv015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fabv015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv015
            #add-point:ON ACTION controlp INFIELD fabv015 name="construct.c.page1.fabv015"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.faah020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faah020
            #add-point:ON ACTION controlp INFIELD faah020 name="construct.c.page1.faah020"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_aooi001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO faah020  #顯示到畫面上
            NEXT FIELD faah020                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faah020
            #add-point:BEFORE FIELD faah020 name="construct.b.page1.faah020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faah020
            
            #add-point:AFTER FIELD faah020 name="construct.a.page1.faah020"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faaj015
            #add-point:BEFORE FIELD faaj015 name="construct.b.page1.faaj015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faaj015
            
            #add-point:AFTER FIELD faaj015 name="construct.a.page1.faaj015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.faaj015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faaj015
            #add-point:ON ACTION controlp INFIELD faaj015 name="construct.c.page1.faaj015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv016
            #add-point:BEFORE FIELD fabv016 name="construct.b.page1.fabv016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv016
            
            #add-point:AFTER FIELD fabv016 name="construct.a.page1.fabv016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fabv016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv016
            #add-point:ON ACTION controlp INFIELD fabv016 name="construct.c.page1.fabv016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv017
            #add-point:BEFORE FIELD fabv017 name="construct.b.page1.fabv017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv017
            
            #add-point:AFTER FIELD fabv017 name="construct.a.page1.fabv017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fabv017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv017
            #add-point:ON ACTION controlp INFIELD fabv017 name="construct.c.page1.fabv017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv019
            #add-point:BEFORE FIELD fabv019 name="construct.b.page1.fabv019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv019
            
            #add-point:AFTER FIELD fabv019 name="construct.a.page1.fabv019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fabv019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv019
            #add-point:ON ACTION controlp INFIELD fabv019 name="construct.c.page1.fabv019"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "faba_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "fabv_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="afat490.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION afat490_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_fabv_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL afat490_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL afat490_browser_fill("")
      CALL afat490_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL afat490_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL afat490_fetch("F") 
      #顯示單身筆數
      CALL afat490_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="afat490.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION afat490_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_faba_m.fabadocno = g_browser[g_current_idx].b_fabadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE afat490_master_referesh USING g_faba_m.fabadocno INTO g_faba_m.fabasite,g_faba_m.faba001, 
       g_faba_m.fabacomp,g_faba_m.faba003,g_faba_m.fabadocno,g_faba_m.fabadocdt,g_faba_m.faba009,g_faba_m.faba010, 
       g_faba_m.faba011,g_faba_m.faba012,g_faba_m.faba013,g_faba_m.faba014,g_faba_m.fabastus,g_faba_m.fabaownid, 
       g_faba_m.fabaowndp,g_faba_m.fabacrtid,g_faba_m.fabacrtdp,g_faba_m.fabacrtdt,g_faba_m.fabamodid, 
       g_faba_m.fabamoddt,g_faba_m.fabacnfid,g_faba_m.fabacnfdt,g_faba_m.fabasite_desc,g_faba_m.faba001_desc, 
       g_faba_m.fabacomp_desc,g_faba_m.fabaownid_desc,g_faba_m.fabaowndp_desc,g_faba_m.fabacrtid_desc, 
       g_faba_m.fabacrtdp_desc,g_faba_m.fabamodid_desc,g_faba_m.fabacnfid_desc
   
   #遮罩相關處理
   LET g_faba_m_mask_o.* =  g_faba_m.*
   CALL afat490_faba_t_mask()
   LET g_faba_m_mask_n.* =  g_faba_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afat490_set_act_visible()   
   CALL afat490_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_faba_m_t.* = g_faba_m.*
   LET g_faba_m_o.* = g_faba_m.*
   
   LET g_data_owner = g_faba_m.fabaownid      
   LET g_data_dept  = g_faba_m.fabaowndp
   
   #重新顯示   
   CALL afat490_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="afat490.insert" >}
#+ 資料新增
PRIVATE FUNCTION afat490_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_fabv_d.clear()   
 
 
   INITIALIZE g_faba_m.* TO NULL             #DEFAULT 設定
   
   LET g_fabadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_faba_m.fabaownid = g_user
      LET g_faba_m.fabaowndp = g_dept
      LET g_faba_m.fabacrtid = g_user
      LET g_faba_m.fabacrtdp = g_dept 
      LET g_faba_m.fabacrtdt = cl_get_current()
      LET g_faba_m.fabamodid = g_user
      LET g_faba_m.fabamoddt = cl_get_current()
      LET g_faba_m.fabastus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_faba_m.faba003 = "32"
      LET g_faba_m.faba012 = "N"
      LET g_faba_m.faba013 = "N"
      LET g_faba_m.faba014 = "N"
 
  
      #add-point:單頭預設值 name="insert.default"
      LET g_faba_m.faba001 = g_user
      CALL afat490_faba001_desc() 
      DISPLAY BY NAME g_faba_m.faba001,g_faba_m.faba001_desc
      
      LET g_faba_m.fabadocdt = g_today
 
      #取得預設的資金中心,因新增階段的時候,並不會知道site,所以以登入人員做為依據
      CALL s_fin_get_account_center('',g_user,'5',g_today) RETURNING g_sub_success,g_faba_m.fabasite,g_errno
      CALL afat490_fabasite_desc()
      
      #所屬法人
      SELECT ooef017 INTO g_faba_m.fabacomp
        FROM ooef_t
       WHERE ooefent = g_enterprise
         AND ooef001 = g_faba_m.fabasite
         AND ooefstus = 'Y'  
      CALL afat490_fabacomp_desc()  
      
      CALL afat490_get_glaa()
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_faba_m_t.* = g_faba_m.*
      LET g_faba_m_o.* = g_faba_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_faba_m.fabastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL afat490_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_faba_m.* TO NULL
         INITIALIZE g_fabv_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL afat490_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_fabv_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afat490_set_act_visible()   
   CALL afat490_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_fabadocno_t = g_faba_m.fabadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " fabaent = " ||g_enterprise|| " AND",
                      " fabadocno = '", g_faba_m.fabadocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL afat490_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE afat490_cl
   
   CALL afat490_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE afat490_master_referesh USING g_faba_m.fabadocno INTO g_faba_m.fabasite,g_faba_m.faba001, 
       g_faba_m.fabacomp,g_faba_m.faba003,g_faba_m.fabadocno,g_faba_m.fabadocdt,g_faba_m.faba009,g_faba_m.faba010, 
       g_faba_m.faba011,g_faba_m.faba012,g_faba_m.faba013,g_faba_m.faba014,g_faba_m.fabastus,g_faba_m.fabaownid, 
       g_faba_m.fabaowndp,g_faba_m.fabacrtid,g_faba_m.fabacrtdp,g_faba_m.fabacrtdt,g_faba_m.fabamodid, 
       g_faba_m.fabamoddt,g_faba_m.fabacnfid,g_faba_m.fabacnfdt,g_faba_m.fabasite_desc,g_faba_m.faba001_desc, 
       g_faba_m.fabacomp_desc,g_faba_m.fabaownid_desc,g_faba_m.fabaowndp_desc,g_faba_m.fabacrtid_desc, 
       g_faba_m.fabacrtdp_desc,g_faba_m.fabamodid_desc,g_faba_m.fabacnfid_desc
   
   
   #遮罩相關處理
   LET g_faba_m_mask_o.* =  g_faba_m.*
   CALL afat490_faba_t_mask()
   LET g_faba_m_mask_n.* =  g_faba_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_faba_m.fabasite,g_faba_m.fabasite_desc,g_faba_m.faba001,g_faba_m.faba001_desc,g_faba_m.fabacomp, 
       g_faba_m.fabacomp_desc,g_faba_m.faba003,g_faba_m.fabadocno,g_faba_m.fabadocdt,g_faba_m.faba009, 
       g_faba_m.faba010,g_faba_m.faba011,g_faba_m.faba012,g_faba_m.faba013,g_faba_m.faba014,g_faba_m.fabastus, 
       g_faba_m.fabaownid,g_faba_m.fabaownid_desc,g_faba_m.fabaowndp,g_faba_m.fabaowndp_desc,g_faba_m.fabacrtid, 
       g_faba_m.fabacrtid_desc,g_faba_m.fabacrtdp,g_faba_m.fabacrtdp_desc,g_faba_m.fabacrtdt,g_faba_m.fabamodid, 
       g_faba_m.fabamodid_desc,g_faba_m.fabamoddt,g_faba_m.fabacnfid,g_faba_m.fabacnfid_desc,g_faba_m.fabacnfdt 
 
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_faba_m.fabaownid      
   LET g_data_dept  = g_faba_m.fabaowndp
   
   #功能已完成,通報訊息中心
   CALL afat490_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="afat490.modify" >}
#+ 資料修改
PRIVATE FUNCTION afat490_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_faba_m_t.* = g_faba_m.*
   LET g_faba_m_o.* = g_faba_m.*
   
   IF g_faba_m.fabadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_fabadocno_t = g_faba_m.fabadocno
 
   CALL s_transaction_begin()
   
   OPEN afat490_cl USING g_enterprise,g_faba_m.fabadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN afat490_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE afat490_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE afat490_master_referesh USING g_faba_m.fabadocno INTO g_faba_m.fabasite,g_faba_m.faba001, 
       g_faba_m.fabacomp,g_faba_m.faba003,g_faba_m.fabadocno,g_faba_m.fabadocdt,g_faba_m.faba009,g_faba_m.faba010, 
       g_faba_m.faba011,g_faba_m.faba012,g_faba_m.faba013,g_faba_m.faba014,g_faba_m.fabastus,g_faba_m.fabaownid, 
       g_faba_m.fabaowndp,g_faba_m.fabacrtid,g_faba_m.fabacrtdp,g_faba_m.fabacrtdt,g_faba_m.fabamodid, 
       g_faba_m.fabamoddt,g_faba_m.fabacnfid,g_faba_m.fabacnfdt,g_faba_m.fabasite_desc,g_faba_m.faba001_desc, 
       g_faba_m.fabacomp_desc,g_faba_m.fabaownid_desc,g_faba_m.fabaowndp_desc,g_faba_m.fabacrtid_desc, 
       g_faba_m.fabacrtdp_desc,g_faba_m.fabamodid_desc,g_faba_m.fabacnfid_desc
   
   #檢查是否允許此動作
   IF NOT afat490_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_faba_m_mask_o.* =  g_faba_m.*
   CALL afat490_faba_t_mask()
   LET g_faba_m_mask_n.* =  g_faba_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL afat490_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_fabadocno_t = g_faba_m.fabadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_faba_m.fabamodid = g_user 
LET g_faba_m.fabamoddt = cl_get_current()
LET g_faba_m.fabamodid_desc = cl_get_username(g_faba_m.fabamodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL afat490_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE faba_t SET (fabamodid,fabamoddt) = (g_faba_m.fabamodid,g_faba_m.fabamoddt)
          WHERE fabaent = g_enterprise AND fabadocno = g_fabadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_faba_m.* = g_faba_m_t.*
            CALL afat490_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_faba_m.fabadocno != g_faba_m_t.fabadocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE fabv_t SET fabvdocno = g_faba_m.fabadocno
 
          WHERE fabvent = g_enterprise AND fabvdocno = g_faba_m_t.fabadocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "fabv_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "fabv_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afat490_set_act_visible()   
   CALL afat490_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " fabaent = " ||g_enterprise|| " AND",
                      " fabadocno = '", g_faba_m.fabadocno, "' "
 
   #填到對應位置
   CALL afat490_browser_fill("")
 
   CLOSE afat490_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL afat490_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="afat490.input" >}
#+ 資料輸入
PRIVATE FUNCTION afat490_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_year                STRING
   DEFINE  l_month               STRING
   DEFINE  l_str                 STRING
   DEFINE  l_faba011             LIKE faba_t.faba011
   DEFINE  l_origin_str          STRING   #組織範圍 
   DEFINE  l_ooab002             LIKE ooab_t.ooab002   
   #151125-00006#2-add-s
   DEFINE  l_ooba002             LIKE ooba_t.ooba002
   DEFINE  l_dfin0031            LIKE type_t.chr1
   DEFINE  l_dfin0032            LIKE type_t.chr1
   DEFINE  l_glaald              LIKE glaa_t.glaald
   #151125-00006#2-add-e
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_faba_m.fabasite,g_faba_m.fabasite_desc,g_faba_m.faba001,g_faba_m.faba001_desc,g_faba_m.fabacomp, 
       g_faba_m.fabacomp_desc,g_faba_m.faba003,g_faba_m.fabadocno,g_faba_m.fabadocdt,g_faba_m.faba009, 
       g_faba_m.faba010,g_faba_m.faba011,g_faba_m.faba012,g_faba_m.faba013,g_faba_m.faba014,g_faba_m.fabastus, 
       g_faba_m.fabaownid,g_faba_m.fabaownid_desc,g_faba_m.fabaowndp,g_faba_m.fabaowndp_desc,g_faba_m.fabacrtid, 
       g_faba_m.fabacrtid_desc,g_faba_m.fabacrtdp,g_faba_m.fabacrtdp_desc,g_faba_m.fabacrtdt,g_faba_m.fabamodid, 
       g_faba_m.fabamodid_desc,g_faba_m.fabamoddt,g_faba_m.fabacnfid,g_faba_m.fabacnfid_desc,g_faba_m.fabacnfdt 
 
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT fabvseq,fabv004,fabv005,fabv006,fabv010,fabv014,fabv012,fabv007,fabv008, 
       fabv015,fabv016,fabv017,fabv019 FROM fabv_t WHERE fabvent=? AND fabvdocno=? AND fabvseq=? FOR  
       UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE afat490_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL afat490_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL afat490_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_faba_m.fabasite,g_faba_m.faba001,g_faba_m.fabacomp,g_faba_m.faba003,g_faba_m.fabadocno, 
       g_faba_m.fabadocdt,g_faba_m.faba009,g_faba_m.faba010,g_faba_m.faba011,g_faba_m.faba012,g_faba_m.faba013, 
       g_faba_m.faba014,g_faba_m.fabastus
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="afat490.input.head" >}
      #單頭段
      INPUT BY NAME g_faba_m.fabasite,g_faba_m.faba001,g_faba_m.fabacomp,g_faba_m.faba003,g_faba_m.fabadocno, 
          g_faba_m.fabadocdt,g_faba_m.faba009,g_faba_m.faba010,g_faba_m.faba011,g_faba_m.faba012,g_faba_m.faba013, 
          g_faba_m.faba014,g_faba_m.fabastus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN afat490_cl USING g_enterprise,g_faba_m.fabadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN afat490_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE afat490_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL afat490_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL afat490_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabasite
            
            #add-point:AFTER FIELD fabasite name="input.a.fabasite"
            IF NOT cl_null(g_faba_m.fabasite) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_faba_m.fabasite != g_faba_m_t.fabasite OR g_faba_m_t.fabasite IS NULL )) THEN
                  
                  CALL s_afa_site_chk(g_faba_m.fabasite,g_faba_m_t.fabasite,g_faba_m.fabacomp,g_glaa.glaald,g_faba_m.fabadocdt)
                  RETURNING l_success,g_faba_m.fabacomp,g_glaa.glaald
                  
                  IF l_success = FALSE THEN 
                     LET g_faba_m.fabasite = g_faba_m_t.fabasite
                     LET g_faba_m.fabacomp = g_faba_m_t.fabacomp
                     CALL s_desc_get_department_desc(g_faba_m.fabasite) RETURNING g_faba_m.fabasite_desc
                     DISPLAY BY NAME g_faba_m.fabasite_desc
                     NEXT FIELD CURRENT
                  END IF
                  
                  #人员不为空
                  IF NOT cl_null(g_faba_m.faba001) THEN
                     CALL s_afa_person_chk(g_faba_m.fabasite,g_faba_m.faba001)
                     RETURNING l_success
                     IF l_success = FALSE THEN
                        LET g_faba_m.fabasite = g_faba_m_t.fabasite
                        CALL s_desc_get_department_desc(g_faba_m.fabasite) RETURNING g_faba_m.fabasite_desc
                        DISPLAY BY NAME g_faba_m.fabasite_desc
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            CALL s_fin_account_center_sons_query('5',g_faba_m.fabasite,g_today,'1')
            LET g_faba_m_t.fabasite = g_faba_m.fabasite
            LET g_faba_m_t.fabacomp = g_faba_m.fabacomp
            CALL s_desc_get_department_desc(g_faba_m.fabasite) RETURNING g_faba_m.fabasite_desc
            CALL s_desc_get_department_desc(g_faba_m.fabacomp) RETURNING g_faba_m.fabacomp_desc
            DISPLAY BY NAME g_faba_m.fabasite_desc,g_faba_m.fabacomp_desc
            CALL afat490_get_glaa()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabasite
            #add-point:BEFORE FIELD fabasite name="input.b.fabasite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabasite
            #add-point:ON CHANGE fabasite name="input.g.fabasite"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faba001
            
            #add-point:AFTER FIELD faba001 name="input.a.faba001"
            IF NOT cl_null(g_faba_m.faba001) THEN 
#應用 a19 樣板自動產生(Version:2)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_faba_m.faba001
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
                  IF NOT cl_null(g_faba_m.fabasite) THEN 
                     CALL s_afa_person_chk(g_faba_m.fabasite,g_faba_m.faba001) RETURNING l_success
                     
                     IF l_success = FALSE THEN
                        LET g_faba_m.faba001 = g_faba_m_t.faba001
                        CALL s_desc_get_person_desc(g_faba_m.faba001) RETURNING g_faba_m.faba001_desc
                        DISPLAY BY NAME g_faba_m.faba001_desc
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            END IF 
            CALL s_desc_get_person_desc(g_faba_m.faba001) RETURNING g_faba_m.faba001_desc
            DISPLAY BY NAME g_faba_m.faba001_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faba001
            #add-point:BEFORE FIELD faba001 name="input.b.faba001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE faba001
            #add-point:ON CHANGE faba001 name="input.g.faba001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabacomp
            
            #add-point:AFTER FIELD fabacomp name="input.a.fabacomp"
            IF NOT cl_null(g_faba_m.fabacomp) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_faba_m.fabacomp != g_faba_m_t.fabacomp OR g_faba_m_t.fabacomp IS NULL )) THEN
                  CALL s_afa_comp_chk(g_faba_m.fabasite,g_faba_m.fabacomp)
                  RETURNING l_success,g_glaa.glaald
                  
                  IF l_success = FALSE THEN 
                     LET g_faba_m.fabacomp = g_faba_m_t.fabacomp
                     CALL s_desc_get_department_desc(g_faba_m.fabacomp) RETURNING g_faba_m.fabacomp_desc
                     DISPLAY BY NAME g_faba_m.fabacomp_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_faba_m_t.fabacomp = g_faba_m.fabacomp
            CALL s_desc_get_department_desc(g_faba_m.fabacomp) RETURNING g_faba_m.fabacomp_desc
            DISPLAY BY NAME g_faba_m.fabacomp_desc
            CALL afat490_get_glaa()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabacomp
            #add-point:BEFORE FIELD fabacomp name="input.b.fabacomp"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabacomp
            #add-point:ON CHANGE fabacomp name="input.g.fabacomp"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faba003
            #add-point:BEFORE FIELD faba003 name="input.b.faba003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faba003
            
            #add-point:AFTER FIELD faba003 name="input.a.faba003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE faba003
            #add-point:ON CHANGE faba003 name="input.g.faba003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabadocno
            #add-point:BEFORE FIELD fabadocno name="input.b.fabadocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabadocno
            
            #add-point:AFTER FIELD fabadocno name="input.a.fabadocno"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_faba_m.fabadocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_faba_m.fabadocno != g_fabadocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM faba_t WHERE "||"fabaent = '" ||g_enterprise|| "' AND "||"fabadocno = '"||g_faba_m.fabadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_faba_m.fabadocno) THEN                 
                IF NOT s_aooi200_fin_chk_slip(g_glaa.glaald,g_glaa.glaa024,g_faba_m.fabadocno,'afat490') THEN
                  LET g_faba_m.fabadocno = g_faba_m_t.fabadocno
                  NEXT FIELD CURRENT
               END IF
            END IF

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabadocno
            #add-point:ON CHANGE fabadocno name="input.g.fabadocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabadocdt
            #add-point:BEFORE FIELD fabadocdt name="input.b.fabadocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabadocdt
            
            #add-point:AFTER FIELD fabadocdt name="input.a.fabadocdt"
            IF NOT cl_null(g_faba_m.fabadocdt) THEN 
               #單據日期不能小於關賬日期
               #S-FIN-9003
               CALL cl_get_para(g_enterprise,g_faba_m.fabacomp,'S-FIN-9003') RETURNING l_ooab002   
               IF g_faba_m.fabadocdt <= l_ooab002 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'afa-00060'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
               
                  LET g_faba_m.fabadocdt = g_faba_m_t.fabadocdt
                  NEXT FIELD fabadocdt
               END IF
               IF NOT cl_null(g_faba_m.fabacomp) THEN
                  IF NOT s_afat503_sys_chk('',g_faba_m.fabacomp,g_faba_m.fabadocdt) THEN
                     LET g_faba_m.fabadocdt = g_faba_m_t.fabadocdt
                     NEXT FIELD fabadocdt
                  END IF
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabadocdt
            #add-point:ON CHANGE fabadocdt name="input.g.fabadocdt"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faba009
            #add-point:BEFORE FIELD faba009 name="input.b.faba009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faba009
            
            #add-point:AFTER FIELD faba009 name="input.a.faba009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE faba009
            #add-point:ON CHANGE faba009 name="input.g.faba009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faba010
            #add-point:BEFORE FIELD faba010 name="input.b.faba010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faba010
            
            #add-point:AFTER FIELD faba010 name="input.a.faba010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE faba010
            #add-point:ON CHANGE faba010 name="input.g.faba010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faba011
            #add-point:BEFORE FIELD faba011 name="input.b.faba011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faba011
            
            #add-point:AFTER FIELD faba011 name="input.a.faba011"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE faba011
            #add-point:ON CHANGE faba011 name="input.g.faba011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faba012
            #add-point:BEFORE FIELD faba012 name="input.b.faba012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faba012
            
            #add-point:AFTER FIELD faba012 name="input.a.faba012"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE faba012
            #add-point:ON CHANGE faba012 name="input.g.faba012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faba013
            #add-point:BEFORE FIELD faba013 name="input.b.faba013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faba013
            
            #add-point:AFTER FIELD faba013 name="input.a.faba013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE faba013
            #add-point:ON CHANGE faba013 name="input.g.faba013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faba014
            #add-point:BEFORE FIELD faba014 name="input.b.faba014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faba014
            
            #add-point:AFTER FIELD faba014 name="input.a.faba014"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE faba014
            #add-point:ON CHANGE faba014 name="input.g.faba014"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabastus
            #add-point:BEFORE FIELD fabastus name="input.b.fabastus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabastus
            
            #add-point:AFTER FIELD fabastus name="input.a.fabastus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabastus
            #add-point:ON CHANGE fabastus name="input.g.fabastus"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.fabasite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabasite
            #add-point:ON ACTION controlp INFIELD fabasite name="input.c.fabasite"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_faba_m.fabasite             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            #160426-00014#33--add--str--lujh
			   LET g_qryparam.where =" ooef207='Y'"    
            CALL q_ooef001()                        #呼叫開窗
            #160426-00014#33--add--end--lujh
            #CALL q_ooef001_6()                     #呼叫開窗     #160426-00014#33 mark lujh

            LET g_faba_m.fabasite = g_qryparam.return1              

            DISPLAY g_faba_m.fabasite TO fabasite              #
            CALL afat490_fabasite_desc()
            NEXT FIELD fabasite                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.faba001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faba001
            #add-point:ON ACTION controlp INFIELD faba001 name="input.c.faba001"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_faba_m.faba001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #


            CALL q_ooag001()                                #呼叫開窗

            LET g_faba_m.faba001 = g_qryparam.return1              

            DISPLAY g_faba_m.faba001 TO faba001              #
            CALL afat490_faba001_desc()
            NEXT FIELD faba001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.fabacomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabacomp
            #add-point:ON ACTION controlp INFIELD fabacomp name="input.c.fabacomp"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_faba_m.fabacomp             #給予default值
            CALL s_fin_account_center_sons_query('5',g_faba_m.fabasite,g_today,'')
            CALL s_fin_account_center_comp_str()RETURNING l_origin_str
            CALL afat490_change_to_sql(l_origin_str)RETURNING l_origin_str
            LET g_qryparam.where    = "ooef003 = 'Y' AND ooef001 IN(",l_origin_str CLIPPED,")"
            #給予arg
            LET g_qryparam.arg1 = "" #


            CALL q_ooef001()                                #呼叫開窗

            LET g_faba_m.fabacomp = g_qryparam.return1              
            #LET g_faba_m.ooefl003 = g_qryparam.return2 
            DISPLAY g_faba_m.fabacomp TO fabacomp              #
            CALL afat490_fabacomp_desc()
            NEXT FIELD fabacomp                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.faba003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faba003
            #add-point:ON ACTION controlp INFIELD faba003 name="input.c.faba003"
            
            #END add-point
 
 
         #Ctrlp:input.c.fabadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabadocno
            #add-point:ON ACTION controlp INFIELD fabadocno name="input.c.fabadocno"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_faba_m.fabadocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_glaa.glaa024
            #LET g_qryparam.arg2 = 'afat490'     #160705-00042#6 160712 by sakura mark
            LET g_qryparam.arg2 = g_prog         #160705-00042#6 160712 by sakura add

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_faba_m.fabadocno = g_qryparam.return1              

            DISPLAY g_faba_m.fabadocno TO fabadocno              #

            NEXT FIELD fabadocno                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.fabadocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabadocdt
            #add-point:ON ACTION controlp INFIELD fabadocdt name="input.c.fabadocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.faba009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faba009
            #add-point:ON ACTION controlp INFIELD faba009 name="input.c.faba009"
            
            #END add-point
 
 
         #Ctrlp:input.c.faba010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faba010
            #add-point:ON ACTION controlp INFIELD faba010 name="input.c.faba010"
            
            #END add-point
 
 
         #Ctrlp:input.c.faba011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faba011
            #add-point:ON ACTION controlp INFIELD faba011 name="input.c.faba011"
            
            #END add-point
 
 
         #Ctrlp:input.c.faba012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faba012
            #add-point:ON ACTION controlp INFIELD faba012 name="input.c.faba012"
            
            #END add-point
 
 
         #Ctrlp:input.c.faba013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faba013
            #add-point:ON ACTION controlp INFIELD faba013 name="input.c.faba013"
            
            #END add-point
 
 
         #Ctrlp:input.c.faba014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faba014
            #add-point:ON ACTION controlp INFIELD faba014 name="input.c.faba014"
            
            #END add-point
 
 
         #Ctrlp:input.c.fabastus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabastus
            #add-point:ON ACTION controlp INFIELD fabastus name="input.c.fabastus"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_faba_m.fabadocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            IF NOT cl_null(g_faba_m.fabadocdt) THEN 
               #單據日期不能小於關賬日期
               #S-FIN-9003
               CALL cl_get_para(g_enterprise,g_faba_m.fabacomp,'S-FIN-9003') RETURNING l_ooab002  
               IF g_faba_m.fabadocdt <= l_ooab002 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'afa-00060'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_faba_m.fabadocdt = g_faba_m_t.fabadocdt
                  NEXT FIELD fabadocdt
               END IF
               IF NOT cl_null(g_faba_m.fabacomp) THEN
                  IF NOT s_afat503_sys_chk('',g_faba_m.fabacomp,g_faba_m.fabadocdt) THEN
                     LET g_faba_m.fabadocdt = g_faba_m_t.fabadocdt
                     NEXT FIELD fabadocdt
                  END IF
               END IF         
            END IF   
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               CALL s_aooi200_fin_gen_docno(g_glaa.glaald,g_glaa.glaa024,g_glaa.glaa003,g_faba_m.fabadocno,g_faba_m.fabadocdt,g_prog)
               RETURNING l_success,g_faba_m.fabadocno
               IF l_success  = 0  THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_faba_m.fabadocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                
                  NEXT FIELD fabadocno
               END IF
               DISPLAY BY NAME g_faba_m.fabadocno
               
               LET l_year = YEAR(g_faba_m.fabadocdt)
               LET l_month = MONTH(g_faba_m.fabadocdt)
               IF l_month < 10 THEN 
                  LET l_month = '0' CLIPPED,l_month
               END IF
               
               LET l_str = l_year CLIPPED,l_month
               
               LET g_sql = "SELECT MAX(faba011) ",
                           "  FROM faba_t ",
                           " WHERE fabaent = '",g_enterprise,"'",
                           "   AND faba011 LIKE '",l_str,"%'"
               PREPARE faba011_pre FROM g_sql
               EXECUTE faba011_pre INTO l_faba011
               IF cl_null(l_faba011) THEN 
                  LET g_faba_m.faba011 = l_str,'0001'
               ELSE
                  LET g_sql = "SELECT lpad((lpad((substr(MAX(l_faba011),7,10) + 1),4,'0')),10,'",l_str,"')",
                              "  FROM faba_t ",
                           " WHERE fabaent = '",g_enterprise,"'",
                           "   AND faba011 LIKE '",l_str,"%'"
                  PREPARE faba011_pre1 FROM g_sql
                  EXECUTE faba011_pre1 INTO g_faba_m.faba011
               END IF
               #end add-point
               
               INSERT INTO faba_t (fabaent,fabasite,faba001,fabacomp,faba003,fabadocno,fabadocdt,faba009, 
                   faba010,faba011,faba012,faba013,faba014,fabastus,fabaownid,fabaowndp,fabacrtid,fabacrtdp, 
                   fabacrtdt,fabamodid,fabamoddt,fabacnfid,fabacnfdt)
               VALUES (g_enterprise,g_faba_m.fabasite,g_faba_m.faba001,g_faba_m.fabacomp,g_faba_m.faba003, 
                   g_faba_m.fabadocno,g_faba_m.fabadocdt,g_faba_m.faba009,g_faba_m.faba010,g_faba_m.faba011, 
                   g_faba_m.faba012,g_faba_m.faba013,g_faba_m.faba014,g_faba_m.fabastus,g_faba_m.fabaownid, 
                   g_faba_m.fabaowndp,g_faba_m.fabacrtid,g_faba_m.fabacrtdp,g_faba_m.fabacrtdt,g_faba_m.fabamodid, 
                   g_faba_m.fabamoddt,g_faba_m.fabacnfid,g_faba_m.fabacnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_faba_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL afat490_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL afat490_b_fill()
                  CALL afat490_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL afat490_faba_t_mask_restore('restore_mask_o')
               
               UPDATE faba_t SET (fabasite,faba001,fabacomp,faba003,fabadocno,fabadocdt,faba009,faba010, 
                   faba011,faba012,faba013,faba014,fabastus,fabaownid,fabaowndp,fabacrtid,fabacrtdp, 
                   fabacrtdt,fabamodid,fabamoddt,fabacnfid,fabacnfdt) = (g_faba_m.fabasite,g_faba_m.faba001, 
                   g_faba_m.fabacomp,g_faba_m.faba003,g_faba_m.fabadocno,g_faba_m.fabadocdt,g_faba_m.faba009, 
                   g_faba_m.faba010,g_faba_m.faba011,g_faba_m.faba012,g_faba_m.faba013,g_faba_m.faba014, 
                   g_faba_m.fabastus,g_faba_m.fabaownid,g_faba_m.fabaowndp,g_faba_m.fabacrtid,g_faba_m.fabacrtdp, 
                   g_faba_m.fabacrtdt,g_faba_m.fabamodid,g_faba_m.fabamoddt,g_faba_m.fabacnfid,g_faba_m.fabacnfdt) 
 
                WHERE fabaent = g_enterprise AND fabadocno = g_fabadocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "faba_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL afat490_faba_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_faba_m_t)
               LET g_log2 = util.JSON.stringify(g_faba_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_fabadocno_t = g_faba_m.fabadocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="afat490.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_fabv_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            LET l_n = 0
            SELECT COUNT(*) INTO l_n FROM fabv_t
             WHERE fabvent = g_enterprise AND fabvdocno = g_faba_m.fabadocno 
            IF l_n = 0 THEN
               IF cl_ask_confirm('afa-00249') THEN
                  CALL afat410_01(g_faba_m.fabadocno,g_faba_m.faba001,g_faba_m.faba003)
               END IF
            END IF
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_fabv_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL afat490_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_fabv_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN afat490_cl USING g_enterprise,g_faba_m.fabadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN afat490_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE afat490_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_fabv_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_fabv_d[l_ac].fabvseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_fabv_d_t.* = g_fabv_d[l_ac].*  #BACKUP
               LET g_fabv_d_o.* = g_fabv_d[l_ac].*  #BACKUP
               CALL afat490_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL afat490_set_no_entry_b(l_cmd)
               IF NOT afat490_lock_b("fabv_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH afat490_bcl INTO g_fabv_d[l_ac].fabvseq,g_fabv_d[l_ac].fabv004,g_fabv_d[l_ac].fabv005, 
                      g_fabv_d[l_ac].fabv006,g_fabv_d[l_ac].fabv010,g_fabv_d[l_ac].fabv014,g_fabv_d[l_ac].fabv012, 
                      g_fabv_d[l_ac].fabv007,g_fabv_d[l_ac].fabv008,g_fabv_d[l_ac].fabv015,g_fabv_d[l_ac].fabv016, 
                      g_fabv_d[l_ac].fabv017,g_fabv_d[l_ac].fabv019
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_fabv_d_t.fabvseq,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_fabv_d_mask_o[l_ac].* =  g_fabv_d[l_ac].*
                  CALL afat490_fabv_t_mask()
                  LET g_fabv_d_mask_n[l_ac].* =  g_fabv_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL afat490_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_fabv_d[l_ac].* TO NULL 
            INITIALIZE g_fabv_d_t.* TO NULL 
            INITIALIZE g_fabv_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_fabv_d[l_ac].fabv016 = "0"
      LET g_fabv_d[l_ac].fabv017 = "0"
      LET g_fabv_d[l_ac].fabv019 = "0"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_fabv_d_t.* = g_fabv_d[l_ac].*     #新輸入資料
            LET g_fabv_d_o.* = g_fabv_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL afat490_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL afat490_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_fabv_d[li_reproduce_target].* = g_fabv_d[li_reproduce].*
 
               LET g_fabv_d[li_reproduce_target].fabvseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            SELECT MAX(fabvseq)+1 INTO g_fabv_d[l_ac].fabvseq 
              FROM fabv_t 
             WHERE fabvdocno = g_faba_m.fabadocno  
               AND fabvent = g_enterprise
            IF cl_null(g_fabv_d[l_ac].fabvseq) THEN 
               LET g_fabv_d[l_ac].fabvseq = 1 
            END IF 
            IF g_fabv_d[l_ac].fabv005 IS NULL THEN LET g_fabv_d[l_ac].fabv005 = ' ' END IF
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM fabv_t 
             WHERE fabvent = g_enterprise AND fabvdocno = g_faba_m.fabadocno
 
               AND fabvseq = g_fabv_d[l_ac].fabvseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_faba_m.fabadocno
               LET gs_keys[2] = g_fabv_d[g_detail_idx].fabvseq
               CALL afat490_insert_b('fabv_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               INITIALIZE g_fabv_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "fabv_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL afat490_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_faba_m.fabadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_fabv_d_t.fabvseq
 
            
               #刪除同層單身
               IF NOT afat490_delete_b('fabv_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE afat490_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT afat490_key_delete_b(gs_keys,'fabv_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE afat490_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE afat490_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_fabv_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_fabv_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabvseq
            #add-point:BEFORE FIELD fabvseq name="input.b.page1.fabvseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabvseq
            
            #add-point:AFTER FIELD fabvseq name="input.a.page1.fabvseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_faba_m.fabadocno IS NOT NULL AND g_fabv_d[g_detail_idx].fabvseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_faba_m.fabadocno != g_fabadocno_t OR g_fabv_d[g_detail_idx].fabvseq != g_fabv_d_t.fabvseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM fabv_t WHERE "||"fabvent = '" ||g_enterprise|| "' AND "||"fabvdocno = '"||g_faba_m.fabadocno ||"' AND "|| "fabvseq = '"||g_fabv_d[g_detail_idx].fabvseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabvseq
            #add-point:ON CHANGE fabvseq name="input.g.page1.fabvseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv004
            #add-point:BEFORE FIELD fabv004 name="input.b.page1.fabv004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv004
            
            #add-point:AFTER FIELD fabv004 name="input.a.page1.fabv004"
            IF NOT cl_null(g_fabv_d[l_ac].fabv004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL              
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_fabv_d[l_ac].fabv004                
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_faah003") THEN
                  #檢查成功時後續處理
                  IF NOT s_afat503_fixed_chk(g_fabv_d[l_ac].fabv004,g_fabv_d[l_ac].fabv005,g_fabv_d[l_ac].fabv006,"afat490",'',g_faba_m.fabacomp,g_faba_m.fabadocdt) THEN
                     LET g_fabv_d[l_ac].fabv004 = g_fabv_d_t.fabv004
                     NEXT FIELD CURRENT 
                  END IF
                  
                  IF NOT afat490_fabv004_fabv005_fabv006_chk(l_cmd) THEN
                     LET g_fabv_d[l_ac].fabv004 = g_fabv_d_t.fabv004
                     NEXT FIELD CURRENT
                  END IF
                  
                  IF NOT cl_null(g_fabv_d[l_ac].fabv004) AND g_fabv_d[l_ac].fabv005 IS NOT NULL AND NOT cl_null(g_fabv_d[l_ac].fabv006) THEN 
                     CALL s_afa_faan_chk(g_faba_m.fabadocdt,g_fabv_d[l_ac].fabv006,g_fabv_d[l_ac].fabv004,g_fabv_d[l_ac].fabv005,g_glaa.glaald) 
                     RETURNING l_success
                     
                     IF l_success = FALSE THEN 
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = ''
                        LET g_errparam.code   = 'afa-01026'
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err()
                        LET g_fabv_d[l_ac].fabv004 = g_fabv_d_t.fabv004
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                  
                  CALL afat490_get_faah() 
               ELSE
                  #檢查失敗時後續處理
                  LET g_fabv_d[l_ac].fabv004 = g_fabv_d_t.fabv004
                  NEXT FIELD CURRENT
               END IF
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabv004
            #add-point:ON CHANGE fabv004 name="input.g.page1.fabv004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv005
            #add-point:BEFORE FIELD fabv005 name="input.b.page1.fabv005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv005
            
            #add-point:AFTER FIELD fabv005 name="input.a.page1.fabv005"
            IF g_fabv_d[l_ac].fabv005 IS NULL THEN LET g_fabv_d[l_ac].fabv005 = ' ' END IF
            IF g_fabv_d[l_ac].fabv005 IS NOT NULL THEN 
               #此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL      
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_fabv_d[l_ac].fabv005
                 
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_faah004") THEN
                  #檢查成功時後續處理
                  IF NOT s_afat503_fixed_chk(g_fabv_d[l_ac].fabv004,g_fabv_d[l_ac].fabv005,g_fabv_d[l_ac].fabv006,"afat490",'',g_faba_m.fabacomp,g_faba_m.fabadocdt) THEN
                     LET g_fabv_d[l_ac].fabv005 = g_fabv_d_t.fabv005
                     NEXT FIELD CURRENT 
                  END IF
                  IF NOT afat490_fabv004_fabv005_fabv006_chk(l_cmd) THEN
                     LET g_fabv_d[l_ac].fabv005 = g_fabv_d_t.fabv005
                     NEXT FIELD CURRENT
                  END IF
                  
                  IF NOT cl_null(g_fabv_d[l_ac].fabv004) AND g_fabv_d[l_ac].fabv005 IS NOT NULL AND NOT cl_null(g_fabv_d[l_ac].fabv006) THEN 
                     CALL s_afa_faan_chk(g_faba_m.fabadocdt,g_fabv_d[l_ac].fabv006,g_fabv_d[l_ac].fabv004,g_fabv_d[l_ac].fabv005,g_glaa.glaald)
                     RETURNING l_success
                     
                     IF l_success = FALSE THEN 
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = ''
                        LET g_errparam.code   = 'afa-01026'
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err()
                        LET g_fabv_d[l_ac].fabv005 = g_fabv_d_t.fabv005
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                  
                  CALL afat490_get_faah() 
               ELSE
                  #檢查失敗時後續處理
                  LET g_fabv_d[l_ac].fabv005 = g_fabv_d_t.fabv005
                  NEXT FIELD CURRENT
               END IF         
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabv005
            #add-point:ON CHANGE fabv005 name="input.g.page1.fabv005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv006
            #add-point:BEFORE FIELD fabv006 name="input.b.page1.fabv006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv006
            
            #add-point:AFTER FIELD fabv006 name="input.a.page1.fabv006"
            IF NOT cl_null(g_fabv_d[l_ac].fabv006) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_fabv_d[l_ac].fabv006

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_faah001") THEN
               
                  #檢查成功時後續處理
                  IF NOT s_afat503_fixed_chk(g_fabv_d[l_ac].fabv004,g_fabv_d[l_ac].fabv005,g_fabv_d[l_ac].fabv006,"afat490",'',g_faba_m.fabacomp,g_faba_m.fabadocdt) THEN
                     LET g_fabv_d[l_ac].fabv006 = g_fabv_d_t.fabv006
                     NEXT FIELD CURRENT 
                  END IF
                  IF NOT afat490_fabv004_fabv005_fabv006_chk(l_cmd) THEN
                     LET g_fabv_d[l_ac].fabv006 = g_fabv_d_t.fabv006
                     NEXT FIELD CURRENT
                  END IF
                  
                  IF NOT cl_null(g_fabv_d[l_ac].fabv004) AND g_fabv_d[l_ac].fabv005 IS NOT NULL AND NOT cl_null(g_fabv_d[l_ac].fabv006) THEN 
                     CALL s_afa_faan_chk(g_faba_m.fabadocdt,g_fabv_d[l_ac].fabv006,g_fabv_d[l_ac].fabv004,g_fabv_d[l_ac].fabv005,g_glaa.glaald) 
                     RETURNING l_success
                     
                     IF l_success = FALSE THEN 
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = ''
                        LET g_errparam.code   = 'afa-01026'
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err()
                        LET g_fabv_d[l_ac].fabv006 = g_fabv_d_t.fabv006
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                  
                  CALL afat490_get_faah() 
               ELSE
                  #檢查失敗時後續處理
                  LET g_fabv_d[l_ac].fabv006 = g_fabv_d_t.fabv006
                  NEXT FIELD CURRENT
               END IF
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabv006
            #add-point:ON CHANGE fabv006 name="input.g.page1.fabv006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faah012
            #add-point:BEFORE FIELD faah012 name="input.b.page1.faah012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faah012
            
            #add-point:AFTER FIELD faah012 name="input.a.page1.faah012"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE faah012
            #add-point:ON CHANGE faah012 name="input.g.page1.faah012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faah013
            #add-point:BEFORE FIELD faah013 name="input.b.page1.faah013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faah013
            
            #add-point:AFTER FIELD faah013 name="input.a.page1.faah013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE faah013
            #add-point:ON CHANGE faah013 name="input.g.page1.faah013"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv010
            
            #add-point:AFTER FIELD fabv010 name="input.a.page1.fabv010"
            IF NOT cl_null(g_fabv_d[l_ac].fabv010) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_fabv_d[l_ac].fabv010

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
                  IF g_fabv_d[l_ac].fabv010 = g_faba_m.fabacomp THEN 
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = ''
                     LET g_errparam.code   = 'afa-01037'
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET g_fabv_d[l_ac].fabv010 = g_fabv_d_t.fabv010
                     NEXT FIELD CURRENT
                  END IF
               ELSE
                  #檢查失敗時後續處理
                  LET g_fabv_d[l_ac].fabv010 = g_fabv_d_t.fabv010
                  CALL afat490_ooef_desc(g_fabv_d[l_ac].fabv010) RETURNING g_fabv_d[l_ac].fabv010_desc
                  DISPLAY g_fabv_d[l_ac].fabv010_desc TO s_detail1[l_ac].fabv010_desc
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL afat490_ooef_desc(g_fabv_d[l_ac].fabv010) RETURNING g_fabv_d[l_ac].fabv010_desc
            DISPLAY g_fabv_d[l_ac].fabv010_desc TO s_detail1[l_ac].fabv010_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv010
            #add-point:BEFORE FIELD fabv010 name="input.b.page1.fabv010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabv010
            #add-point:ON CHANGE fabv010 name="input.g.page1.fabv010"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv014
            
            #add-point:AFTER FIELD fabv014 name="input.a.page1.fabv014"
            IF NOT cl_null(g_fabv_d[l_ac].fabv014) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_fabv_d[l_ac].fabv014

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_fabv_d[l_ac].fabv014 = g_fabv_d_t.fabv014
                  CALL afat490_ooef_desc(g_fabv_d[l_ac].fabv014) RETURNING g_fabv_d[l_ac].fabv014_desc
                  DISPLAY g_fabv_d[l_ac].fabv014 TO s_detail1[l_ac].fabv014
                  NEXT FIELD CURRENT
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv014
            #add-point:BEFORE FIELD fabv014 name="input.b.page1.fabv014"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabv014
            #add-point:ON CHANGE fabv014 name="input.g.page1.fabv014"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv012
            
            #add-point:AFTER FIELD fabv012 name="input.a.page1.fabv012"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fabv_d[l_ac].fabv012
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fabv_d[l_ac].fabv012_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fabv_d[l_ac].fabv012_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv012
            #add-point:BEFORE FIELD fabv012 name="input.b.page1.fabv012"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabv012
            #add-point:ON CHANGE fabv012 name="input.g.page1.fabv012"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv007
            
            #add-point:AFTER FIELD fabv007 name="input.a.page1.fabv007"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv007
            #add-point:BEFORE FIELD fabv007 name="input.b.page1.fabv007"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabv007
            #add-point:ON CHANGE fabv007 name="input.g.page1.fabv007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv007_desc
            #add-point:BEFORE FIELD fabv007_desc name="input.b.page1.fabv007_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv007_desc
            
            #add-point:AFTER FIELD fabv007_desc name="input.a.page1.fabv007_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabv007_desc
            #add-point:ON CHANGE fabv007_desc name="input.g.page1.fabv007_desc"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv008
            
            #add-point:AFTER FIELD fabv008 name="input.a.page1.fabv008"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv008
            #add-point:BEFORE FIELD fabv008 name="input.b.page1.fabv008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabv008
            #add-point:ON CHANGE fabv008 name="input.g.page1.fabv008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv008_desc
            #add-point:BEFORE FIELD fabv008_desc name="input.b.page1.fabv008_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv008_desc
            
            #add-point:AFTER FIELD fabv008_desc name="input.a.page1.fabv008_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabv008_desc
            #add-point:ON CHANGE fabv008_desc name="input.g.page1.fabv008_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv015
            #add-point:BEFORE FIELD fabv015 name="input.b.page1.fabv015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv015
            
            #add-point:AFTER FIELD fabv015 name="input.a.page1.fabv015"
            IF NOT cl_null(g_fabv_d[l_ac].fabv015) THEN 
               CALL afat490_get_faaj()
               IF g_fabv_d[l_ac].fabv015 > g_faah018 - g_faaj033 THEN 
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = g_fabv_d[l_ac].fabv015
                  LET g_errparam.code   = 'afa-01038'
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET g_fabv_d[l_ac].fabv015 = g_fabv_d_t.fabv015
                  
                  NEXT FIELD fabv015
               END IF
               CALL cl_get_para(g_enterprise,g_faba_m.fabacomp,'S-FIN-9016') RETURNING l_ooab002
               IF l_ooab002 = '1' THEN 
                  #成本价
                  #成本=固定资产的原价faaj016+调整成本faaj020-处置成本faaj034
                  #累计折旧=（计提的累计折旧faaj017-处置的累折faaj035）/(数量faah018-处置数量faaj033）
                  #减值准备=（计提的减值准备faaj021-处置的减值准备faaj027）/(数量faah018-处置数量faaj033）       
                  LET g_fabv_d[l_ac].fabv016 = (g_faaj016 - g_faaj020 - g_faaj034) * (g_fabv_d[l_ac].fabv015/(g_faah018 - g_faaj033))
                  LET g_fabv_d[l_ac].fabv017 = (g_faaj017 - g_faaj035) / g_fabv_d[l_ac].fabv015 * (g_fabv_d[l_ac].fabv015/(g_faah018 - g_faaj033))
                  LET g_fabv_d[l_ac].fabv019 = (g_faaj021 - g_faaj027) / g_fabv_d[l_ac].fabv015 * (g_fabv_d[l_ac].fabv015/(g_faah018 - g_faaj033))
               ELSE
                  LET g_fabv_d[l_ac].fabv016 = g_faaj028 * (g_fabv_d[l_ac].fabv015/(g_faah018 - g_faaj033))
                  LET g_fabv_d[l_ac].fabv017 = 0
                  LET g_fabv_d[l_ac].fabv019 = 0
               END IF
               DISPLAY g_fabv_d[l_ac].fabv016 TO s_detail1[l_ac].fabv016
               DISPLAY g_fabv_d[l_ac].fabv017 TO s_detail1[l_ac].fabv017
               DISPLAY g_fabv_d[l_ac].fabv019 TO s_detail1[l_ac].fabv019
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabv015
            #add-point:ON CHANGE fabv015 name="input.g.page1.fabv015"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faah020
            
            #add-point:AFTER FIELD faah020 name="input.a.page1.faah020"
            IF NOT cl_null(g_fabv_d[l_ac].faah020) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = TRUE #是否開窗 #160318-00025#28  add
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_fabv_d[l_ac].faah020
               LET g_chkparam.err_str[1] = "aoo-00011:sub-01302|aooi140|",cl_get_progname("aooi140",g_lang,"2"),"|:EXEPROGaooi140"#要執行的建議程式待補 #160318-00025#28  add
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooai001") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF


            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faah020
            #add-point:BEFORE FIELD faah020 name="input.b.page1.faah020"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE faah020
            #add-point:ON CHANGE faah020 name="input.g.page1.faah020"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD faaj015
            #add-point:BEFORE FIELD faaj015 name="input.b.page1.faaj015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD faaj015
            
            #add-point:AFTER FIELD faaj015 name="input.a.page1.faaj015"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE faaj015
            #add-point:ON CHANGE faaj015 name="input.g.page1.faaj015"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv016
            #add-point:BEFORE FIELD fabv016 name="input.b.page1.fabv016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv016
            
            #add-point:AFTER FIELD fabv016 name="input.a.page1.fabv016"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabv016
            #add-point:ON CHANGE fabv016 name="input.g.page1.fabv016"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv017
            #add-point:BEFORE FIELD fabv017 name="input.b.page1.fabv017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv017
            
            #add-point:AFTER FIELD fabv017 name="input.a.page1.fabv017"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabv017
            #add-point:ON CHANGE fabv017 name="input.g.page1.fabv017"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fabv019
            #add-point:BEFORE FIELD fabv019 name="input.b.page1.fabv019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fabv019
            
            #add-point:AFTER FIELD fabv019 name="input.a.page1.fabv019"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fabv019
            #add-point:ON CHANGE fabv019 name="input.g.page1.fabv019"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.fabvseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabvseq
            #add-point:ON ACTION controlp INFIELD fabvseq name="input.c.page1.fabvseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fabv004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv004
            #add-point:ON ACTION controlp INFIELD fabv004 name="input.c.page1.fabv004"
#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            IF cl_null(g_fabv_d[l_ac].fabv005) THEN LET g_fabv_d[l_ac].fabv005=' ' END IF
            LET g_qryparam.default1 = g_fabv_d[l_ac].fabv004       #給予default值
            LET g_qryparam.default2 = g_fabv_d[l_ac].fabv005       #g_fabv_d[l_ac].faah003 #财产编号
            LET g_qryparam.default3 = g_fabv_d[l_ac].fabv006
           
            CALL s_fin_create_account_center_tmp() 
            CALL s_fin_account_center_sons_query('5',g_faba_m.fabasite,g_faba_m.fabadocdt,'1')
            CALL s_fin_account_center_comp_str() RETURNING l_origin_str
            CALL afat490_change_to_sql(l_origin_str)RETURNING l_origin_str
            LET l_origin_str = "(",l_origin_str,")" 
            LET  g_qryparam.where = " faah032 = '",g_faba_m.fabacomp,"' AND faah015 NOT IN ('0','5','6','10')",   
                                    " AND faah028 IN ",l_origin_str
            #給予arg
            IF g_fabv_d[l_ac].fabv005 IS NOT NULL  AND NOT cl_null(g_fabv_d[l_ac].fabv006)  THEN             
               LET  g_qryparam.where =g_qryparam.where,"  AND faah004='",g_fabv_d[l_ac].fabv005,"' AND faah001='",g_fabv_d[l_ac].fabv006,"'"            
            END IF
            CALL q_faah003_5()                                #呼叫開窗

            LET g_fabv_d[l_ac].fabv004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_fabv_d[l_ac].fabv005 = g_qryparam.return2 #财产编号
            LET g_fabv_d[l_ac].fabv006 = g_qryparam.return3 

            DISPLAY g_fabv_d[l_ac].fabv006 TO fabv006   
            DISPLAY g_fabv_d[l_ac].fabv004 TO fabv004 #财产编号
            DISPLAY g_fabv_d[l_ac].fabv005 TO fabv005 #附号
          
            LET g_qryparam.where = ""
             
            NEXT FIELD fabv004                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page1.fabv005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv005
            #add-point:ON ACTION controlp INFIELD fabv005 name="input.c.page1.fabv005"
#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fabv_d[l_ac].fabv004             #給予default值
            LET g_qryparam.default2 = g_fabv_d[l_ac].fabv005 
            LET g_qryparam.default3 = g_fabv_d[l_ac].fabv006            
            CALL s_fin_create_account_center_tmp() 
            CALL s_fin_account_center_sons_query('5',g_faba_m.fabasite,g_faba_m.fabadocdt,'1')
            CALL s_fin_account_center_comp_str() RETURNING l_origin_str
            CALL afat490_change_to_sql(l_origin_str)RETURNING l_origin_str
            LET l_origin_str = "(",l_origin_str,")" 
            LET  g_qryparam.where = " faah032 = '",g_faba_m.fabacomp,"' AND faah015 NOT IN ('0','5','6','10')",    
                                    " AND faah028 IN ",l_origin_str
            #給予arg
            IF NOT cl_null(g_fabv_d[l_ac].fabv004)  AND NOT cl_null(g_fabv_d[l_ac].fabv006)  THEN 
               LET  g_qryparam.where =g_qryparam.where, " AND faah003='",g_fabv_d[l_ac].fabv004,"' AND faah001='",g_fabv_d[l_ac].fabv006,"'"
            END IF
            IF NOT cl_null(g_fabv_d[l_ac].fabv004)   THEN 
               LET  g_qryparam.where =g_qryparam.where," AND  faah003='",g_fabv_d[l_ac].fabv004,"'"
            END IF
            CALL q_faah003_6()                                #呼叫開窗

           
           
            LET g_fabv_d[l_ac].fabv004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_fabv_d[l_ac].fabv005 = g_qryparam.return2 #财产编号
            LET g_fabv_d[l_ac].fabv006 = g_qryparam.return3

            DISPLAY g_fabv_d[l_ac].fabv006 TO fabv006
            DISPLAY g_fabv_d[l_ac].fabv004 TO fabv004 #财产编号
            DISPLAY g_fabv_d[l_ac].fabv005 TO fabv005 #附号
  
            LET g_qryparam.where = ''
            NEXT FIELD fabv005                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page1.fabv006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv006
            #add-point:ON ACTION controlp INFIELD fabv006 name="input.c.page1.fabv006"
#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            IF cl_null(g_fabv_d[l_ac].fabv005) THEN LET g_fabv_d[l_ac].fabv005=' ' END IF
            LET g_qryparam.default1 = g_fabv_d[l_ac].fabv004             #給予default值
            LET g_qryparam.default2 = g_fabv_d[l_ac].fabv005  
            LET g_qryparam.default3 = g_fabv_d[l_ac].fabv006  
            CALL s_fin_create_account_center_tmp() 
            CALL s_fin_account_center_sons_query('5',g_faba_m.fabasite,g_faba_m.fabadocdt,'1')
            CALL s_fin_account_center_comp_str() RETURNING l_origin_str
            CALL afat490_change_to_sql(l_origin_str)RETURNING l_origin_str
            LET l_origin_str = "(",l_origin_str,")" 
            LET  g_qryparam.where = " faah032 = '",g_faba_m.fabacomp,"' AND faah015 NOT IN ('0','5','6','10')",    
                                    " AND faah028 IN ",l_origin_str
                                    
            #給予arg
            IF NOT cl_null(g_fabv_d[l_ac].fabv004) AND g_fabv_d[l_ac].fabv005 IS NOT NULL THEN
               LET g_qryparam.where  =g_qryparam.where ,"AND faah003 = '",g_fabv_d[l_ac].fabv004,"' AND faah004='",g_fabv_d[l_ac].fabv005,"'"
            END IF
            CALL q_faah003_7()                                #呼叫開窗

           
           
            LET g_fabv_d[l_ac].fabv004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_fabv_d[l_ac].fabv005 = g_qryparam.return2  
            LET g_fabv_d[l_ac].fabv006 = g_qryparam.return3 

            DISPLAY g_fabv_d[l_ac].fabv006 TO fabv006              #顯示到畫面上
            DISPLAY g_fabv_d[l_ac].fabv004 TO fabv004 #财产编号
            DISPLAY g_fabv_d[l_ac].fabv005 TO fabv005 #附号

            NEXT FIELD fabv006                          #返回原欄位            
            #END add-point
 
 
         #Ctrlp:input.c.page1.faah012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faah012
            #add-point:ON ACTION controlp INFIELD faah012 name="input.c.page1.faah012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.faah013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faah013
            #add-point:ON ACTION controlp INFIELD faah013 name="input.c.page1.faah013"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fabv010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv010
            #add-point:ON ACTION controlp INFIELD fabv010 name="input.c.page1.fabv010"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_fabv_d[l_ac].fabv010             #給予default值
            LET g_qryparam.where    = "ooef003 = 'Y' "
            #給予arg
            LET g_qryparam.arg1 = "" #


            CALL q_ooef001()                                #呼叫開窗

            LET g_fabv_d[l_ac].fabv010 = g_qryparam.return1              

            DISPLAY g_fabv_d[l_ac].fabv010 TO fabv010              #
            CALL afat490_ooef_desc(g_fabv_d[l_ac].fabv010) RETURNING g_fabv_d[l_ac].fabv010_desc
            NEXT FIELD fabv010                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page1.fabv014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv014
            #add-point:ON ACTION controlp INFIELD fabv014 name="input.c.page1.fabv014"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fabv012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv012
            #add-point:ON ACTION controlp INFIELD fabv012 name="input.c.page1.fabv012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fabv007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv007
            #add-point:ON ACTION controlp INFIELD fabv007 name="input.c.page1.fabv007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fabv007_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv007_desc
            #add-point:ON ACTION controlp INFIELD fabv007_desc name="input.c.page1.fabv007_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fabv008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv008
            #add-point:ON ACTION controlp INFIELD fabv008 name="input.c.page1.fabv008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fabv008_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv008_desc
            #add-point:ON ACTION controlp INFIELD fabv008_desc name="input.c.page1.fabv008_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fabv015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv015
            #add-point:ON ACTION controlp INFIELD fabv015 name="input.c.page1.fabv015"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.faah020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faah020
            #add-point:ON ACTION controlp INFIELD faah020 name="input.c.page1.faah020"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fabv_d[l_ac].faah020             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_aooi001_1()                                #呼叫開窗

            LET g_fabv_d[l_ac].faah020 = g_qryparam.return1              

            DISPLAY g_fabv_d[l_ac].faah020 TO faah020              #

            NEXT FIELD faah020                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.faaj015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD faaj015
            #add-point:ON ACTION controlp INFIELD faaj015 name="input.c.page1.faaj015"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fabv016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv016
            #add-point:ON ACTION controlp INFIELD fabv016 name="input.c.page1.fabv016"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fabv017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv017
            #add-point:ON ACTION controlp INFIELD fabv017 name="input.c.page1.fabv017"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fabv019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fabv019
            #add-point:ON ACTION controlp INFIELD fabv019 name="input.c.page1.fabv019"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_fabv_d[l_ac].* = g_fabv_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE afat490_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_fabv_d[l_ac].fabvseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_fabv_d[l_ac].* = g_fabv_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL afat490_fabv_t_mask_restore('restore_mask_o')
      
               UPDATE fabv_t SET (fabvdocno,fabvseq,fabv004,fabv005,fabv006,fabv010,fabv014,fabv012, 
                   fabv007,fabv008,fabv015,fabv016,fabv017,fabv019) = (g_faba_m.fabadocno,g_fabv_d[l_ac].fabvseq, 
                   g_fabv_d[l_ac].fabv004,g_fabv_d[l_ac].fabv005,g_fabv_d[l_ac].fabv006,g_fabv_d[l_ac].fabv010, 
                   g_fabv_d[l_ac].fabv014,g_fabv_d[l_ac].fabv012,g_fabv_d[l_ac].fabv007,g_fabv_d[l_ac].fabv008, 
                   g_fabv_d[l_ac].fabv015,g_fabv_d[l_ac].fabv016,g_fabv_d[l_ac].fabv017,g_fabv_d[l_ac].fabv019) 
 
                WHERE fabvent = g_enterprise AND fabvdocno = g_faba_m.fabadocno 
 
                  AND fabvseq = g_fabv_d_t.fabvseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_fabv_d[l_ac].* = g_fabv_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "fabv_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_fabv_d[l_ac].* = g_fabv_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "fabv_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_faba_m.fabadocno
               LET gs_keys_bak[1] = g_fabadocno_t
               LET gs_keys[2] = g_fabv_d[g_detail_idx].fabvseq
               LET gs_keys_bak[2] = g_fabv_d_t.fabvseq
               CALL afat490_update_b('fabv_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL afat490_fabv_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_fabv_d[g_detail_idx].fabvseq = g_fabv_d_t.fabvseq 
 
                  ) THEN
                  LET gs_keys[01] = g_faba_m.fabadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_fabv_d_t.fabvseq
 
                  CALL afat490_key_update_b(gs_keys,'fabv_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_faba_m),util.JSON.stringify(g_fabv_d_t)
               LET g_log2 = util.JSON.stringify(g_faba_m),util.JSON.stringify(g_fabv_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL afat490_unlock_b("fabv_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_fabv_d[li_reproduce_target].* = g_fabv_d[li_reproduce].*
 
               LET g_fabv_d[li_reproduce_target].fabvseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_fabv_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_fabv_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
 
{</section>}
 
{<section id="afat490.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            NEXT FIELD fabasite    #160426-00014#33 add lujh
            #end add-point  
            NEXT FIELD fabadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD fabvseq
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   #151125-00006#2--add--s
   IF NOT INT_FLAG THEN
      CALL s_aooi200_fin_get_slip(g_faba_m.fabadocno) RETURNING l_success,l_ooba002
      SELECT glaald INTO l_glaald FROM glaa_t
       WHERE glaaent = g_enterprise AND glaacomp = g_faba_m.fabacomp
         AND glaa014 = 'Y'
      CALL s_fin_get_doc_para(l_glaald,g_faba_m.fabacomp,l_ooba002,'D-FIN-0031') RETURNING l_dfin0031
      
      IF NOT cl_null(l_dfin0031) AND l_dfin0031 MATCHES '[Yy]' THEN 
         IF cl_ask_confirm('aap-00403') THEN
            CALL s_transaction_begin()
            CALL afat490_immediately_conf() RETURNING l_success
            IF l_success THEN 
               CALL s_transaction_end('Y','0')
            ELSE
               CALL s_transaction_end('N','0')
               CALL cl_err_collect_show()
            END IF 
         END IF 
      END IF
   END IF
   #151125-00006#2--add--e
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="afat490.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION afat490_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   CALL afat490_get_glaa()
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL afat490_b_fill() #單身填充
      CALL afat490_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL afat490_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   
   #end add-point
   
   #遮罩相關處理
   LET g_faba_m_mask_o.* =  g_faba_m.*
   CALL afat490_faba_t_mask()
   LET g_faba_m_mask_n.* =  g_faba_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_faba_m.fabasite,g_faba_m.fabasite_desc,g_faba_m.faba001,g_faba_m.faba001_desc,g_faba_m.fabacomp, 
       g_faba_m.fabacomp_desc,g_faba_m.faba003,g_faba_m.fabadocno,g_faba_m.fabadocdt,g_faba_m.faba009, 
       g_faba_m.faba010,g_faba_m.faba011,g_faba_m.faba012,g_faba_m.faba013,g_faba_m.faba014,g_faba_m.fabastus, 
       g_faba_m.fabaownid,g_faba_m.fabaownid_desc,g_faba_m.fabaowndp,g_faba_m.fabaowndp_desc,g_faba_m.fabacrtid, 
       g_faba_m.fabacrtid_desc,g_faba_m.fabacrtdp,g_faba_m.fabacrtdp_desc,g_faba_m.fabacrtdt,g_faba_m.fabamodid, 
       g_faba_m.fabamodid_desc,g_faba_m.fabamoddt,g_faba_m.fabacnfid,g_faba_m.fabacnfid_desc,g_faba_m.fabacnfdt 
 
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_faba_m.fabastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_fabv_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL afat490_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="afat490.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION afat490_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="afat490.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION afat490_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE faba_t.fabadocno 
   DEFINE l_oldno     LIKE faba_t.fabadocno 
 
   DEFINE l_master    RECORD LIKE faba_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE fabv_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   
   LET g_master_insert = FALSE
   
   IF g_faba_m.fabadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_fabadocno_t = g_faba_m.fabadocno
 
    
   LET g_faba_m.fabadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_faba_m.fabaownid = g_user
      LET g_faba_m.fabaowndp = g_dept
      LET g_faba_m.fabacrtid = g_user
      LET g_faba_m.fabacrtdp = g_dept 
      LET g_faba_m.fabacrtdt = cl_get_current()
      LET g_faba_m.fabamodid = g_user
      LET g_faba_m.fabamoddt = cl_get_current()
      LET g_faba_m.fabastus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   #160414-00015#1 -add -str
   LET g_faba_m.fabadocdt  = g_today
   #160414-00015#1 -add -end
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_faba_m.fabastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL afat490_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_faba_m.* TO NULL
      INITIALIZE g_fabv_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL afat490_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afat490_set_act_visible()   
   CALL afat490_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_fabadocno_t = g_faba_m.fabadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " fabaent = " ||g_enterprise|| " AND",
                      " fabadocno = '", g_faba_m.fabadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL afat490_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL afat490_idx_chk()
   
   LET g_data_owner = g_faba_m.fabaownid      
   LET g_data_dept  = g_faba_m.fabaowndp
   
   #功能已完成,通報訊息中心
   CALL afat490_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="afat490.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION afat490_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE fabv_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE afat490_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM fabv_t
    WHERE fabvent = g_enterprise AND fabvdocno = g_fabadocno_t
 
    INTO TEMP afat490_detail
 
   #將key修正為調整後   
   UPDATE afat490_detail 
      #更新key欄位
      SET fabvdocno = g_faba_m.fabadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO fabv_t SELECT * FROM afat490_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE afat490_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_fabadocno_t = g_faba_m.fabadocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="afat490.delete" >}
#+ 資料刪除
PRIVATE FUNCTION afat490_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_faba_m.fabadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN afat490_cl USING g_enterprise,g_faba_m.fabadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN afat490_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE afat490_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE afat490_master_referesh USING g_faba_m.fabadocno INTO g_faba_m.fabasite,g_faba_m.faba001, 
       g_faba_m.fabacomp,g_faba_m.faba003,g_faba_m.fabadocno,g_faba_m.fabadocdt,g_faba_m.faba009,g_faba_m.faba010, 
       g_faba_m.faba011,g_faba_m.faba012,g_faba_m.faba013,g_faba_m.faba014,g_faba_m.fabastus,g_faba_m.fabaownid, 
       g_faba_m.fabaowndp,g_faba_m.fabacrtid,g_faba_m.fabacrtdp,g_faba_m.fabacrtdt,g_faba_m.fabamodid, 
       g_faba_m.fabamoddt,g_faba_m.fabacnfid,g_faba_m.fabacnfdt,g_faba_m.fabasite_desc,g_faba_m.faba001_desc, 
       g_faba_m.fabacomp_desc,g_faba_m.fabaownid_desc,g_faba_m.fabaowndp_desc,g_faba_m.fabacrtid_desc, 
       g_faba_m.fabacrtdp_desc,g_faba_m.fabamodid_desc,g_faba_m.fabacnfid_desc
   
   
   #檢查是否允許此動作
   IF NOT afat490_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_faba_m_mask_o.* =  g_faba_m.*
   CALL afat490_faba_t_mask()
   LET g_faba_m_mask_n.* =  g_faba_m.*
   
   CALL afat490_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL afat490_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_fabadocno_t = g_faba_m.fabadocno
 
 
      DELETE FROM faba_t
       WHERE fabaent = g_enterprise AND fabadocno = g_faba_m.fabadocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_faba_m.fabadocno,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      IF NOT s_aooi200_fin_del_docno(g_glaa.glaald,g_faba_m.fabadocno,g_faba_m.fabadocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM fabv_t
       WHERE fabvent = g_enterprise AND fabvdocno = g_faba_m.fabadocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "fabv_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE afat490_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_fabv_d.clear() 
 
     
      CALL afat490_ui_browser_refresh()  
      #CALL afat490_ui_headershow()  
      #CALL afat490_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL afat490_browser_fill("")
         CALL afat490_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE afat490_cl
 
   #功能已完成,通報訊息中心
   CALL afat490_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="afat490.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION afat490_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_fabv_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF afat490_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT fabvseq,fabv004,fabv005,fabv006,fabv010,fabv014,fabv012,fabv007, 
             fabv008,fabv015,fabv016,fabv017,fabv019 ,t1.ooefl003 ,t2.ooefl003 ,t3.ooefl003 FROM fabv_t", 
                
                     " INNER JOIN faba_t ON fabaent = " ||g_enterprise|| " AND fabadocno = fabvdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=fabv010 AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=fabv014 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=fabv012 AND t3.ooefl002='"||g_dlang||"' ",
 
                     " WHERE fabvent=? AND fabvdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY fabv_t.fabvseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE afat490_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR afat490_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_faba_m.fabadocno
                                               
      FOREACH b_fill_cs INTO g_fabv_d[l_ac].fabvseq,g_fabv_d[l_ac].fabv004,g_fabv_d[l_ac].fabv005,g_fabv_d[l_ac].fabv006, 
          g_fabv_d[l_ac].fabv010,g_fabv_d[l_ac].fabv014,g_fabv_d[l_ac].fabv012,g_fabv_d[l_ac].fabv007, 
          g_fabv_d[l_ac].fabv008,g_fabv_d[l_ac].fabv015,g_fabv_d[l_ac].fabv016,g_fabv_d[l_ac].fabv017, 
          g_fabv_d[l_ac].fabv019,g_fabv_d[l_ac].fabv010_desc,g_fabv_d[l_ac].fabv014_desc,g_fabv_d[l_ac].fabv012_desc 
 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         CALL afat490_ooef_desc(g_fabv_d[l_ac].fabv010) RETURNING g_fabv_d[l_ac].fabv010_desc
         CALL afat490_ooef_desc(g_fabv_d[l_ac].fabv014) RETURNING g_fabv_d[l_ac].fabv014_desc
         CALL afat490_ooef_desc(g_fabv_d[l_ac].fabv012) RETURNING g_fabv_d[l_ac].fabv012_desc
         CALL afat490_ooef_desc(g_fabv_d[l_ac].fabv010) RETURNING g_fabv_d[l_ac].fabv010_desc
         CALL afat490_fabv007_desc()
         CALL afat490_fabv008_desc()
         CALL afat490_get_faah015()
         #160426-00014#23 --add--s--
         SELECT faah012,faah013  
           INTO g_fabv_d[l_ac].faah012,g_fabv_d[l_ac].faah013        
           FROM faah_t
          WHERE faahent = g_enterprise
            AND faah003 = g_fabv_d[l_ac].fabv004   
            AND faah004 = g_fabv_d[l_ac].fabv005
            AND faah001 = g_fabv_d[l_ac].fabv006
         #160426-00014#23 --add--e--   
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_fabv_d.deleteElement(g_fabv_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE afat490_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_fabv_d.getLength()
      LET g_fabv_d_mask_o[l_ac].* =  g_fabv_d[l_ac].*
      CALL afat490_fabv_t_mask()
      LET g_fabv_d_mask_n[l_ac].* =  g_fabv_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="afat490.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION afat490_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM fabv_t
       WHERE fabvent = g_enterprise AND
         fabvdocno = ps_keys_bak[1] AND fabvseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_fabv_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="afat490.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION afat490_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO fabv_t
                  (fabvent,
                   fabvdocno,
                   fabvseq
                   ,fabv004,fabv005,fabv006,fabv010,fabv014,fabv012,fabv007,fabv008,fabv015,fabv016,fabv017,fabv019) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_fabv_d[g_detail_idx].fabv004,g_fabv_d[g_detail_idx].fabv005,g_fabv_d[g_detail_idx].fabv006, 
                       g_fabv_d[g_detail_idx].fabv010,g_fabv_d[g_detail_idx].fabv014,g_fabv_d[g_detail_idx].fabv012, 
                       g_fabv_d[g_detail_idx].fabv007,g_fabv_d[g_detail_idx].fabv008,g_fabv_d[g_detail_idx].fabv015, 
                       g_fabv_d[g_detail_idx].fabv016,g_fabv_d[g_detail_idx].fabv017,g_fabv_d[g_detail_idx].fabv019) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "fabv_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_fabv_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="afat490.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION afat490_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "fabv_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL afat490_fabv_t_mask_restore('restore_mask_o')
               
      UPDATE fabv_t 
         SET (fabvdocno,
              fabvseq
              ,fabv004,fabv005,fabv006,fabv010,fabv014,fabv012,fabv007,fabv008,fabv015,fabv016,fabv017,fabv019) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_fabv_d[g_detail_idx].fabv004,g_fabv_d[g_detail_idx].fabv005,g_fabv_d[g_detail_idx].fabv006, 
                  g_fabv_d[g_detail_idx].fabv010,g_fabv_d[g_detail_idx].fabv014,g_fabv_d[g_detail_idx].fabv012, 
                  g_fabv_d[g_detail_idx].fabv007,g_fabv_d[g_detail_idx].fabv008,g_fabv_d[g_detail_idx].fabv015, 
                  g_fabv_d[g_detail_idx].fabv016,g_fabv_d[g_detail_idx].fabv017,g_fabv_d[g_detail_idx].fabv019)  
 
         WHERE fabvent = g_enterprise AND fabvdocno = ps_keys_bak[1] AND fabvseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "fabv_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "fabv_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL afat490_fabv_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="afat490.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION afat490_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="afat490.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION afat490_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="afat490.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION afat490_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL afat490_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "fabv_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN afat490_bcl USING g_enterprise,
                                       g_faba_m.fabadocno,g_fabv_d[g_detail_idx].fabvseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "afat490_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="afat490.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION afat490_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE afat490_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="afat490.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION afat490_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("fabadocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("fabadocno",TRUE)
      CALL cl_set_comp_entry("fabadocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("fabadocdt",TRUE)  #151130-00015#2 
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="afat490.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION afat490_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   DEFINE l_dfin0033  LIKE type_t.chr1  #151130-00015#2
   DEFINE l_success   LIKE type_t.chr1  #151130-00015#2
   DEFINE l_slip      LIKE type_t.chr80  #151130-00015#2 

   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("fabadocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("fabadocno",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("fabadocdt",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   #151130-00015#2  -add -str
   IF NOT cl_null(g_faba_m.fabadocno) THEN  
      #获取单别
      CALL s_aooi200_fin_get_slip(g_faba_m.fabadocno) RETURNING l_success,l_slip
      #判断是否可以修改单据日期
      CALL s_fin_get_doc_para(g_glaa.glaald,g_faba_m.fabacomp,l_slip,'D-FIN-0033') RETURNING l_dfin0033
      IF l_dfin0033 = "Y"  THEN 
         CALL cl_set_comp_entry("fabadocdt",TRUE)
    
      END IF          
   END IF 
   #151130-00015#2  -end -str
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="afat490.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION afat490_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
 
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="afat490.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION afat490_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="afat490.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION afat490_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afat490.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION afat490_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:1)
   IF g_faba_m.fabastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF


   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afat490.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION afat490_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afat490.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION afat490_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afat490.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION afat490_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " fabadocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "faba_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "fabv_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="afat490.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION afat490_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success          LIKE type_t.num5
   DEFINE l_ooab002          LIKE ooab_t.ooab002  
   DEFINE l_gzzd005          LIKE gzzd_t.gzzd005
   DEFINE l_colname          STRING
   DEFINE l_comment          STRING   
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   CALL cl_err_collect_init()
   CALL s_azzi902_get_gzzd('afap100',"lbl_faah001") RETURNING l_colname,l_comment  #卡片编号
   LET g_coll_title[1] = l_colname
   CALL s_azzi902_get_gzzd('afap100',"lbl_faah003") RETURNING l_colname,l_comment  #财产编号
   LET g_coll_title[2] = l_colname
   CALL s_azzi902_get_gzzd('afap100',"lbl_faah004") RETURNING l_colname,l_comment  #符号
   LET g_coll_title[3] = l_colname
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_faba_m.fabadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN afat490_cl USING g_enterprise,g_faba_m.fabadocno
   IF STATUS THEN
      CLOSE afat490_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN afat490_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE afat490_master_referesh USING g_faba_m.fabadocno INTO g_faba_m.fabasite,g_faba_m.faba001, 
       g_faba_m.fabacomp,g_faba_m.faba003,g_faba_m.fabadocno,g_faba_m.fabadocdt,g_faba_m.faba009,g_faba_m.faba010, 
       g_faba_m.faba011,g_faba_m.faba012,g_faba_m.faba013,g_faba_m.faba014,g_faba_m.fabastus,g_faba_m.fabaownid, 
       g_faba_m.fabaowndp,g_faba_m.fabacrtid,g_faba_m.fabacrtdp,g_faba_m.fabacrtdt,g_faba_m.fabamodid, 
       g_faba_m.fabamoddt,g_faba_m.fabacnfid,g_faba_m.fabacnfdt,g_faba_m.fabasite_desc,g_faba_m.faba001_desc, 
       g_faba_m.fabacomp_desc,g_faba_m.fabaownid_desc,g_faba_m.fabaowndp_desc,g_faba_m.fabacrtid_desc, 
       g_faba_m.fabacrtdp_desc,g_faba_m.fabamodid_desc,g_faba_m.fabacnfid_desc
   
 
   #檢查是否允許此動作
   IF NOT afat490_action_chk() THEN
      CLOSE afat490_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_faba_m.fabasite,g_faba_m.fabasite_desc,g_faba_m.faba001,g_faba_m.faba001_desc,g_faba_m.fabacomp, 
       g_faba_m.fabacomp_desc,g_faba_m.faba003,g_faba_m.fabadocno,g_faba_m.fabadocdt,g_faba_m.faba009, 
       g_faba_m.faba010,g_faba_m.faba011,g_faba_m.faba012,g_faba_m.faba013,g_faba_m.faba014,g_faba_m.fabastus, 
       g_faba_m.fabaownid,g_faba_m.fabaownid_desc,g_faba_m.fabaowndp,g_faba_m.fabaowndp_desc,g_faba_m.fabacrtid, 
       g_faba_m.fabacrtid_desc,g_faba_m.fabacrtdp,g_faba_m.fabacrtdp_desc,g_faba_m.fabacrtdt,g_faba_m.fabamodid, 
       g_faba_m.fabamodid_desc,g_faba_m.fabamoddt,g_faba_m.fabacnfid,g_faba_m.fabacnfid_desc,g_faba_m.fabacnfdt 
 
 
   CASE g_faba_m.fabastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "S"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_faba_m.fabastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "S"
               HIDE OPTION "posted"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT afat490_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE afat490_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT afat490_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE afat490_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            #单据日期在關賬日期之前不可取消確認
            #S-FIN-9003
             SELECT ooab002 INTO l_ooab002 FROM ooab_t
              WHERE ooabent = g_enterprise
                AND ooab001 = 'S-FIN-9003'
                AND ooabsite = g_faba_m.fabacomp 
            IF g_faba_m.fabadocdt <= l_ooab002 THEN 
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "afa-00060"
               LET g_errparam.extend = g_faba_m.fabadocno
               LET g_errparam.popup = TRUE
               CALL cl_err()
               CALL s_transaction_end('N','0')     #160812-00017#7 Add By Ken 160816
               RETURN
            END IF
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            #單據日期不能小於關賬日期
            #S-FIN-9003
            CALL cl_get_para(g_enterprise,g_faba_m.fabacomp,'S-FIN-9003') RETURNING l_ooab002  
            IF g_faba_m.fabadocdt <= l_ooab002 THEN 
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "afa-00060"
               LET g_errparam.extend = g_faba_m.fabadocno
               LET g_errparam.popup = TRUE
               CALL cl_err()
               CALL s_transaction_end('N','0')     #160812-00017#7 Add By Ken 160816
               RETURN 
            END IF
            
            CALL s_afat490_conf_chk(g_faba_m.fabadocno,g_faba_m.fabacomp) RETURNING l_success
            IF l_success = FALSE THEN 
               CALL cl_err_collect_show()
               CALL s_transaction_end('N','0')     #160812-00017#7 Add By Ken 160816
               RETURN
            END IF
            
            CALL afat490_01(g_faba_m.fabasite,g_faba_m.fabadocdt)
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION posted
         IF cl_auth_chk_act("posted") THEN
            LET lc_state = "S"
            #add-point:action控制 name="statechange.posted"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "S"
      AND lc_state <> "X"
      ) OR 
      g_faba_m.fabastus = lc_state OR cl_null(lc_state) THEN
      CLOSE afat490_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   #160201-00017#2 add start ------------------
   IF lc_state = 'X' THEN
      IF NOT cl_ask_confirm('aim-00109') THEN
         CALL s_transaction_end('N','0')     #160812-00017#7 Add By Ken 160816
         RETURN
      END IF
   END IF
   #160201-00017#2 add end   ------------------
   #end add-point
   
   LET g_faba_m.fabamodid = g_user
   LET g_faba_m.fabamoddt = cl_get_current()
   LET g_faba_m.fabastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE faba_t 
      SET (fabastus,fabamodid,fabamoddt) 
        = (g_faba_m.fabastus,g_faba_m.fabamodid,g_faba_m.fabamoddt)     
    WHERE fabaent = g_enterprise AND fabadocno = g_faba_m.fabadocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE afat490_master_referesh USING g_faba_m.fabadocno INTO g_faba_m.fabasite,g_faba_m.faba001, 
          g_faba_m.fabacomp,g_faba_m.faba003,g_faba_m.fabadocno,g_faba_m.fabadocdt,g_faba_m.faba009, 
          g_faba_m.faba010,g_faba_m.faba011,g_faba_m.faba012,g_faba_m.faba013,g_faba_m.faba014,g_faba_m.fabastus, 
          g_faba_m.fabaownid,g_faba_m.fabaowndp,g_faba_m.fabacrtid,g_faba_m.fabacrtdp,g_faba_m.fabacrtdt, 
          g_faba_m.fabamodid,g_faba_m.fabamoddt,g_faba_m.fabacnfid,g_faba_m.fabacnfdt,g_faba_m.fabasite_desc, 
          g_faba_m.faba001_desc,g_faba_m.fabacomp_desc,g_faba_m.fabaownid_desc,g_faba_m.fabaowndp_desc, 
          g_faba_m.fabacrtid_desc,g_faba_m.fabacrtdp_desc,g_faba_m.fabamodid_desc,g_faba_m.fabacnfid_desc 
 
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_faba_m.fabasite,g_faba_m.fabasite_desc,g_faba_m.faba001,g_faba_m.faba001_desc, 
          g_faba_m.fabacomp,g_faba_m.fabacomp_desc,g_faba_m.faba003,g_faba_m.fabadocno,g_faba_m.fabadocdt, 
          g_faba_m.faba009,g_faba_m.faba010,g_faba_m.faba011,g_faba_m.faba012,g_faba_m.faba013,g_faba_m.faba014, 
          g_faba_m.fabastus,g_faba_m.fabaownid,g_faba_m.fabaownid_desc,g_faba_m.fabaowndp,g_faba_m.fabaowndp_desc, 
          g_faba_m.fabacrtid,g_faba_m.fabacrtid_desc,g_faba_m.fabacrtdp,g_faba_m.fabacrtdp_desc,g_faba_m.fabacrtdt, 
          g_faba_m.fabamodid,g_faba_m.fabamodid_desc,g_faba_m.fabamoddt,g_faba_m.fabacnfid,g_faba_m.fabacnfid_desc, 
          g_faba_m.fabacnfdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE afat490_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL afat490_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="afat490.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION afat490_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_fabv_d.getLength() THEN
         LET g_detail_idx = g_fabv_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_fabv_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_fabv_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="afat490.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION afat490_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL afat490_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="afat490.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION afat490_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="afat490.status_show" >}
PRIVATE FUNCTION afat490_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="afat490.mask_functions" >}
&include "erp/afa/afat490_mask.4gl"
 
{</section>}
 
{<section id="afat490.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION afat490_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL afat490_show()
   CALL afat490_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_faba_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_fabv_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL afat490_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL afat490_ui_headershow()
   CALL afat490_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION afat490_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL afat490_ui_headershow()  
   CALL afat490_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="afat490.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION afat490_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_faba_m.fabadocno
   LET g_pk_array[1].column = 'fabadocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="afat490.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="afat490.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION afat490_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL afat490_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_faba_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="afat490.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION afat490_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="afat490.other_function" readonly="Y" >}
# 帳務人員名稱
PRIVATE FUNCTION afat490_faba001_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_faba_m.faba001
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_faba_m.faba001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_faba_m.faba001_desc
END FUNCTION
# 帳務中心名稱
PRIVATE FUNCTION afat490_fabasite_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_faba_m.fabasite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_faba_m.fabasite_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_faba_m.fabasite_desc
END FUNCTION
# 法人名稱
PRIVATE FUNCTION afat490_fabacomp_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_faba_m.fabacomp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_faba_m.fabacomp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_faba_m.fabacomp_desc
END FUNCTION
# 獲取agli010的資料
PRIVATE FUNCTION afat490_get_glaa()
   SELECT * INTO g_glaa.* 
     FROM glaa_t
    WHERE glaaent = g_enterprise
      AND glaacomp = g_faba_m.fabacomp
      AND glaa014 = 'Y'
END FUNCTION
################################################################################
# Descriptions...:  
# Usage..........: CALL afat430_change_to_sql(p_wc)
# Input parameter:  
# Modify.........:
################################################################################
PRIVATE FUNCTION afat490_change_to_sql(p_wc)
   DEFINE p_wc       STRING
   DEFINE r_wc       STRING
   DEFINE tok        base.StringTokenizer
   DEFINE l_str      STRING

   LET tok = base.StringTokenizer.create(p_wc,",")
   WHILE tok.hasMoreTokens()
      IF cl_null(l_str) THEN
         LET l_str = tok.nextToken()
      ELSE
         LET l_str = l_str,"','",tok.nextToken()
      END IF
   END WHILE
   LET r_wc = "'",l_str,"'"

   RETURN r_wc
END FUNCTION
# 根据財產編號+附號自動帶出、部門、主次類型及資產狀態
PRIVATE FUNCTION afat490_get_faah()
   DEFINE l_ooab002              LIKE ooab_t.ooab002   
   
   CALL cl_get_para(g_enterprise,g_faba_m.fabacomp,'S-FIN-9016') RETURNING l_ooab002
   
   SELECT faah030,faah031,faah006,faah027,faah012,faah013  #160426-00014#23 add faah012,faah013 
     INTO g_fabv_d[l_ac].fabv014,g_fabv_d[l_ac].fabv012,
          g_fabv_d[l_ac].fabv007,g_fabv_d[l_ac].fabv008,
          g_fabv_d[l_ac].faah012,g_fabv_d[l_ac].faah013   #160426-00014#23 add          
     FROM faah_t
    WHERE faahent = g_enterprise
      AND faah003 = g_fabv_d[l_ac].fabv004   
      AND faah004 = g_fabv_d[l_ac].fabv005
      AND faah001 = g_fabv_d[l_ac].fabv006
      
   CALL afat490_get_faaj()
    
   #调拨数量=数量faah018-处置数量faaj033    
   LET g_fabv_d[l_ac].fabv015 = g_faah018 - g_faaj033
   
   IF l_ooab002 = '1' THEN 
      #成本价
      #成本=固定资产的原价faaj016+调整成本faaj020-处置成本faaj034
      #累计折旧=（计提的累计折旧faaj017-处置的累折faaj035）/(数量faah018-处置数量faaj033）
      #减值准备=（计提的减值准备faaj021-处置的减值准备faaj027）/(数量faah018-处置数量faaj033）       
      LET g_fabv_d[l_ac].fabv016 = g_faaj016 - g_faaj020 - g_faaj034
      LET g_fabv_d[l_ac].fabv017 = (g_faaj017 - g_faaj035) / g_fabv_d[l_ac].fabv015
      LET g_fabv_d[l_ac].fabv019 = (g_faaj021 - g_faaj027) / g_fabv_d[l_ac].fabv015
   ELSE
      LET g_fabv_d[l_ac].fabv016 = g_faaj028
      LET g_fabv_d[l_ac].fabv017 = 0
      LET g_fabv_d[l_ac].fabv019 = 0
   END IF
   
   DISPLAY g_fabv_d[l_ac].fabv014 TO s_detail1[l_ac].fabv014
   DISPLAY g_fabv_d[l_ac].fabv012 TO s_detail1[l_ac].fabv012
   DISPLAY g_fabv_d[l_ac].fabv007 TO s_detail1[l_ac].fabv007
   DISPLAY g_fabv_d[l_ac].fabv008 TO s_detail1[l_ac].fabv008
   DISPLAY g_fabv_d[l_ac].fabv016 TO s_detail1[l_ac].fabv016 
   DISPLAY g_fabv_d[l_ac].fabv017 TO s_detail1[l_ac].fabv017
   DISPLAY g_fabv_d[l_ac].fabv019 TO s_detail1[l_ac].fabv019
   
   CALL afat490_ooef_desc(g_fabv_d[l_ac].fabv010) RETURNING g_fabv_d[l_ac].fabv010_desc
   CALL afat490_ooef_desc(g_fabv_d[l_ac].fabv014) RETURNING g_fabv_d[l_ac].fabv014_desc
   CALL afat490_ooef_desc(g_fabv_d[l_ac].fabv012) RETURNING g_fabv_d[l_ac].fabv012_desc
   CALL afat490_ooef_desc(g_fabv_d[l_ac].fabv010) RETURNING g_fabv_d[l_ac].fabv010_desc
   CALL afat490_fabv007_desc()
   CALL afat490_fabv008_desc()
   CALL afat490_get_faah015()
END FUNCTION
# 财产编号+符号+卡片编号检查
PRIVATE FUNCTION afat490_fabv004_fabv005_fabv006_chk(p_cmd)
   DEFINE  p_cmd      LIKE type_t.chr1
   DEFINE  l_n        LIKE type_t.num5  
   DEFINE  l_faah032  LIKE faah_t.faah032   


    IF cl_null(g_fabv_d[l_ac].fabv004) OR g_fabv_d[l_ac].fabv005 IS NULL THEN 
       RETURN TRUE
    END IF   
  
    IF cl_null(g_fabv_d[l_ac].fabv006) THEN
       RETURN TRUE
    END IF
   
    LET l_n = 0
    IF p_cmd = 'a' THEN
       SELECT COUNT(*) INTO l_n FROM fabb_t
        WHERE fabvent = g_enterprise
          AND fabvdocno = g_faba_m.fabadocno
          AND fabv004 = g_fabv_d[l_ac].fabv004 
          AND fabv005 = g_fabv_d[l_ac].fabv005
          AND fabv006 = g_fabv_d[l_ac].fabv006
    ELSE
       SELECT COUNT(*) INTO l_n FROM fabb_t
        WHERE fabvent = g_enterprise
          AND fabvdocno = g_faba_m.fabadocno
          AND fabv004 = g_fabv_d[l_ac].fabv004 
          AND fabv005 = g_fabv_d[l_ac].fabv005
          AND fabv006 = g_fabv_d[l_ac].fabv006
          AND fabvseq <> g_fabv_d_t.fabvseq
    END IF

    IF l_n > 0   THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = 'afa-00066'
       LET g_errparam.extend = ''
       LET g_errparam.popup = TRUE
       CALL cl_err()
       RETURN FALSE              
    END IF  
      
      
    #当前作业存在未审核的财产资料不允许录
    SELECT COUNT(*) INTO l_n FROM faba_t,fabv_t
     WHERE fabaent = fabvent AND fabadocno = fabvdocno AND fabvent = g_enterprise
       AND fabvdocno <> g_faba_m.fabadocno AND faba003 = '32'
       AND fabv004 = g_fabv_d[l_ac].fabv004 
       AND fabv005 = g_fabv_d[l_ac].fabv005
       AND fabv006 = g_fabv_d[l_ac].fabv006
       AND fabastus = 'N'
 
    IF l_n > 0 THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = 'afa-00363'
       LET g_errparam.extend = ''
       LET g_errparam.popup = TRUE
       CALL cl_err()
       RETURN FALSE   
    END IF
    
    #盘点中的资产不可进行调拨
    SELECT COUNT(*) INTO l_n
      FROM fabr_t
     WHERE fabrent = g_enterprise
       AND fabr005 = g_fabv_d[l_ac].fabv004
       AND fabr006 = g_fabv_d[l_ac].fabv005
       AND fabr007 = g_fabv_d[l_ac].fabv006
       
    IF l_n > 0 THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = 'afa-01041'
       LET g_errparam.extend = ''
       LET g_errparam.popup = TRUE
       CALL cl_err()
       RETURN FALSE   
    END IF 
    
    RETURN TRUE   
END FUNCTION
# 組織說明
PRIVATE FUNCTION afat490_ooef_desc(p_ooef001)
   DEFINE p_ooef001         LIKE ooef_t.ooef001
   DEFINE r_ooefl003        LIKE ooefl_t.ooefl003
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_ooef001
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET r_ooefl003 = '', g_rtn_fields[1] , ''

   RETURN r_ooefl003
END FUNCTION
# 主要類型說明
PRIVATE FUNCTION afat490_fabv007_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_fabv_d[l_ac].fabv007
   CALL ap_ref_array2(g_ref_fields,"SELECT faacl003 FROM faacl_t WHERE faaclent='"||g_enterprise||"' AND faacl001=? AND faacl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_fabv_d[l_ac].fabv007_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_fabv_d[l_ac].fabv007_desc
END FUNCTION
# 存入位置說明
PRIVATE FUNCTION afat490_fabv008_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_fabv_d[l_ac].fabv008
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='3900' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_fabv_d[l_ac].fabv008_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_fabv_d[l_ac].fabv008_desc
END FUNCTION
# 獲取幣別匯率
PRIVATE FUNCTION afat490_get_faah015()
   SELECT faah020 INTO g_fabv_d[l_ac].faah020
     FROM faah_t
    WHERE faahent = g_enterprise
      AND faah003 = g_fabv_d[l_ac].fabv004   
      AND faah004 = g_fabv_d[l_ac].fabv005
      AND faah001 = g_fabv_d[l_ac].fabv006
      
   IF NOT cl_null(g_glaa.glaald) AND 
      NOT cl_null(g_fabv_d[l_ac].faah020) AND 
      NOT cl_null(g_glaa.glaa001) AND 
      NOT cl_null(g_glaa.glaa025) THEN    
      CALL s_aooi160_get_exrate('2',g_glaa.glaald,g_today,g_fabv_d[l_ac].faah020,
                            #目的幣別;     交易金額;              匯類類型
                             g_glaa.glaa001,0,g_glaa.glaa025)
      RETURNING g_fabv_d[l_ac].faaj015
   END IF
   
   DISPLAY g_fabv_d[l_ac].faah020 TO s_detail1[l_ac].faah020
   DISPLAY g_fabv_d[l_ac].faaj015 TO s_detail1[l_ac].faaj015
END FUNCTION
# 获取faaj资料
PRIVATE FUNCTION afat490_get_faaj()

   LET g_faah018 = 0
   LET g_faaj033 = 0  LET g_faaj016 = 0  LET g_faaj020 = 0 
   LET g_faaj034 = 0  LET g_faaj028 = 0  LET g_faaj017 = 0 
   LET g_faaj035 = 0  LET g_faaj021 = 0  LET g_faaj027 = 0 
   
   SELECT faah018 INTO g_faah018
     FROM faah_t
    WHERE faahent = g_enterprise
      AND faah003 = g_fabv_d[l_ac].fabv004   
      AND faah004 = g_fabv_d[l_ac].fabv005
      AND faah001 = g_fabv_d[l_ac].fabv006
   IF cl_null(g_faah018) THEN LET g_faah018 = 0 END IF
   
   SELECT faaj033,faaj016,faaj020,faaj034,faaj028,faaj017,faaj035,faaj021,faaj027
      INTO g_faaj033,g_faaj016,g_faaj020,g_faaj034,g_faaj028,
           g_faaj017,g_faaj035,g_faaj021,g_faaj027 
      FROM faaj_t
     WHERE faajent = g_enterprise
       AND faajld = g_glaa.glaald
       AND faaj001 = g_fabv_d[l_ac].fabv004   
       AND faaj002 = g_fabv_d[l_ac].fabv005
       AND faaj037 = g_fabv_d[l_ac].fabv006
       
   IF cl_null(g_faaj033) THEN LET g_faaj033 = 0 END IF
   IF cl_null(g_faaj016) THEN LET g_faaj016 = 0 END IF
   IF cl_null(g_faaj020) THEN LET g_faaj020 = 0 END IF
   IF cl_null(g_faaj034) THEN LET g_faaj034 = 0 END IF
   IF cl_null(g_faaj028) THEN LET g_faaj028 = 0 END IF
   IF cl_null(g_faaj017) THEN LET g_faaj017 = 0 END IF
   IF cl_null(g_faaj035) THEN LET g_faaj035 = 0 END IF
   IF cl_null(g_faaj021) THEN LET g_faaj021 = 0 END IF
   IF cl_null(g_faaj027) THEN LET g_faaj027 = 0 END IF
   
END FUNCTION

################################################################################
# Descriptions...: 立即审核
# Memo...........:
# Usage..........: CALL afat490_immediately_conf()
#                  RETURNING r_success
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 06421
# Modify.........:
################################################################################
PRIVATE FUNCTION afat490_immediately_conf()
   DEFINE l_success           LIKE type_t.num5
   DEFINE l_today             DATETIME YEAR TO SECOND
   DEFINE  l_gzzd005          LIKE gzzd_t.gzzd005
   DEFINE  l_colname          STRING
   DEFINE  l_comment          STRING
   DEFINE  l_ooab002             LIKE ooab_t.ooab002 
   IF NOT s_afat503_sys_chk('',g_faba_m.fabacomp,g_faba_m.fabadocdt) THEN
      RETURN FALSE
   END IF
    
   
    
   CALL cl_err_collect_init()
   CALL s_azzi902_get_gzzd('afap100',"lbl_faah001") RETURNING l_colname,l_comment  #卡片编号
   LET g_coll_title[1] = l_colname
   CALL s_azzi902_get_gzzd('afap100',"lbl_faah003") RETURNING l_colname,l_comment  #财产编号
   LET g_coll_title[2] = l_colname
   CALL s_azzi902_get_gzzd('afap100',"lbl_faah004") RETURNING l_colname,l_comment  #符号
   LET g_coll_title[3] = l_colname
   
#   CALL s_afa_p_faan_chk(g_glaa.glaald,g_faba_m.fabadocno,g_faba_m.fabadocdt,'fabl_t','fabl003','fabl001','fabl002') RETURNING l_success
#   IF l_success = FALSE THEN 
#      CALL cl_err_collect_show()
#      RETURN FALSE
#   END IF
#   CALL cl_err_collect_show()
    
   #單據日期不能小於關賬日期
   #S-FIN-9003
   CALL cl_get_para(g_enterprise,g_faba_m.fabacomp,'S-FIN-9003') RETURNING l_ooab002  
   IF g_faba_m.fabadocdt <= l_ooab002 THEN 
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "afa-00060"
      LET g_errparam.extend = g_faba_m.fabadocno
      LET g_errparam.popup = TRUE
      CALL cl_err()
   END IF
   
   CALL s_afat490_conf_chk(g_faba_m.fabadocno,g_faba_m.fabacomp) RETURNING l_success
   IF l_success = FALSE THEN 
      #CALL cl_err_collect_show()
      RETURN FALSE
   END IF
   
   IF l_success = TRUE THEN 
      LET l_today  = cl_get_current()
      #检查完毕，更新狀態碼=已確認,確認人=登入user,確認日期=g_today
      UPDATE faba_t SET fabastus = 'Y',
                        fabacnfid = g_user,
                        fabacnfdt = l_today
                  WHERE fabaent = g_enterprise
                    AND fabadocno = g_faba_m.fabadocno
       IF SQLCA.SQLCODE THEN
          LET l_success = FALSE
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = sqlca.sqlcode
          LET g_errparam.extend = 'fabastus：'||g_faba_m.fabadocno
          LET g_errparam.popup = TRUE
          CALL cl_err()
          RETURN FALSE
       END IF   
       
   ELSE 
       RETURN FALSE            
   END IF    
   RETURN TRUE
   
   CALL afat490_01(g_faba_m.fabasite,g_faba_m.fabadocdt)
            
   
   
END FUNCTION

 
{</section>}
 
