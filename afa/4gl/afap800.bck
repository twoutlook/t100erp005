#該程式未解開Section, 採用最新樣板產出!
{<section id="afap800.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0002(2016-04-27 13:53:16), PR版次:0002(2016-10-28 11:45:35)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000024
#+ Filename...: afap800
#+ Description: 資產開工核准作業
#+ Creator....: 02114(2016-04-27 13:53:22)
#+ Modifier...: 02114 -SD/PR- 05016
 
{</section>}
 
{<section id="afap800.global" >}
#應用 p02 樣板自動產生(Version:19)
#add-point:填寫註解說明
#Memos
#161024-00008#6   2016/10/28 By Hans     AFA組織類型與職能開窗清單調整。
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc" 
#add-point:增加匯入變數檔
#
##end add-point
 
#模組變數(Module Variables)
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10              
DEFINE l_ac_d               LIKE type_t.num10             #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num10             #目前所在頁數
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num10
 
TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
        fabasite               LIKE faba_t.fabasite,
        fabasite_desc          LIKE type_t.chr80,
        fabacomp               LIKE faba_t.fabacomp,
        fabacomp_desc          LIKE type_t.chr80,
        date                   LIKE faba_t.faba020,
        num                    LIKE faba_t.faba021,
   #end add-point
        wc               STRING
                     END RECORD
 
TYPE type_g_detail_d RECORD
#add-point:自定義模組變數(Module Variable)  #注意要在add-point內寫入END RECORD
                     sel                 LIKE type_t.chr1,
                     fabqdocno           LIKE fabq_t.fabqdocno,
                     fabqseq             LIKE fabq_t.fabqseq,
                     fabq005             LIKE fabq_t.fabq005,
                     fabq006             LIKE fabq_t.fabq006,
                     fabq007             LIKE fabq_t.fabq007,
                     faah006             LIKE faah_t.faah006,
                     faah006_desc        LIKE type_t.chr80, 
                     fabq012             LIKE fabq_t.fabq012,
                     fabq014             LIKE fabq_t.fabq014,
                     fabq008             LIKE fabq_t.fabq008
                     END  RECORD
DEFINE g_master type_parameter
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
DEFINE g_detail_cnt         LIKE type_t.num10              #單身 總筆數(所有資料)
DEFINE g_detail_d  DYNAMIC ARRAY OF type_g_detail_d
 
#add-point:傳入參數說明
 
#end add-point
 
{</section>}
 
{<section id="afap800.main" >}
#+ 作業開始 
MAIN
   DEFINE ls_js  STRING
   #add-point:main段define
   
   #end add-point   
   #add-point:main段define
   
   #end add-point   
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("afa","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_afap800 WITH FORM cl_ap_formpath("afa",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL afap800_init()   
 
      #進入選單 Menu (="N")
      CALL afap800_ui_dialog() 
 
      #add-point:畫面關閉前
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_afap800
   END IF 
   
   #add-point:作業離開前
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="afap800.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION afap800_init()
   #add-point:init段define
   
   #end add-point   
   #add-point:init段define
   
   #end add-point   
   
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
 
   #add-point:畫面資料初始化
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="afap800.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION afap800_ui_dialog()
   DEFINE li_idx   LIKE type_t.num10
   #add-point:ui_dialog段define
   DEFINE l_msg        STRING
   DEFINE l_success    LIKE type_t.num5
   #end add-point 
   #add-point:ui_dialog段define
   
   #end add-point 
   
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   LET g_detail_cnt = g_detail_d.getLength()
   #add-point:ui_dialog段before dialog 
   LET g_errshow = 1
   CALL afap800_clear()
   #end add-point
   
   WHILE TRUE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_detail_d.clear()
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL afap800_init()
      END IF
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:ui_dialog段construct
         
         #end add-point
         #add-point:ui_dialog段input
         INPUT BY NAME g_master.fabasite,g_master.fabasite_desc,          
                       g_master.fabacomp,g_master.fabacomp_desc,         
                       g_master.date,g_master.num        
               ATTRIBUTE(WITHOUT DEFAULTS)
               
            BEFORE INPUT 
                       
                
            AFTER FIELD fabasite
               IF NOT cl_null(g_master.fabasite) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL      
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_master.fabasite
                   
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooef001_26") THEN
                     #檢查成功時後續處理
                   
                  ELSE
                     #檢查失敗時後續處理
                     LET g_master.fabasite = ''
                     LET g_master.fabasite_desc = ''
                     LET g_master.fabacomp = ''
                     LET g_master.fabacomp_desc = '' 
                     DISPLAY g_master.fabasite_desc,g_master.fabacomp_desc TO fabasite_desc,fabacomp_desc            
                     NEXT FIELD CURRENT
                  END IF
               END IF
               CALL afap800_fabasite_desc()    
            
            ON ACTION controlp INFIELD fabasite
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_master.fabasite             #給予default值
               #給予arg
               LET g_qryparam.arg1 = "" #
               #CALL q_ooef001_6()                                #呼叫開窗            #161024-00008#6 
               CALL q_ooef001_47()                                #呼叫開窗            #161024-00008#6 
               LET g_master.fabasite = g_qryparam.return1              
               DISPLAY g_master.fabasite TO fabasite              #
               CALL afap800_fabasite_desc()  
               NEXT FIELD fabasite                          #返回原欄位
            
         END INPUT
         
         CONSTRUCT BY NAME g_wc ON fabadocno

            BEFORE CONSTRUCT
               CALL cl_qbe_init()
            
            AFTER CONSTRUCT
            
            ON ACTION controlp INFIELD fabadocno
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c' 
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.where = " faba003 = '38' AND fabastus = 'Y' "
               CALL q_fabadocno()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO fabadocno  #顯示到畫面上
               NEXT FIELD fabadocno                     #返回原欄位
         END CONSTRUCT
         #end add-point
         #add-point:ui_dialog段自定義display array
         DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTE(COUNT = g_detail_cnt)
            
             BEFORE DISPLAY
             
             BEFORE ROW
                LET l_ac = DIALOG.getCurrentROW("s_detail1")
                DISPLAY l_ac TO FORMONLY.h_index
         END DISPLAY
         #end add-point
 
         BEFORE DIALOG
            IF g_detail_d.getLength() > 0 THEN
               CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
            ELSE
               CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
            END IF
            #add-point:ui_dialog段before_dialog2
            CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
            IF NOT cl_null(g_argv[3]) THEN 
               DISPLAY g_argv[3] TO fabadocno
               CALL afap800_b_fill()
            END IF
            #end add-point
 
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            #add-point:ui_dialog段on action selall
            
            #end add-point            
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "Y"
               #add-point:ui_dialog段on action selall
               
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selall
            
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "N"
               #add-point:ui_dialog段on action selnone
               
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selnone
            
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "Y"
               END IF
            END FOR
            #add-point:ui_dialog段on action sel
            
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "N"
               END IF
            END FOR
            #add-point:ui_dialog段on action unsel
            
            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL afap800_filter()
            #add-point:ON ACTION filter
            
            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION accept
            #add-point:ui_dialog段accept之前
            
            #end add-point
            CALL afap800_query()
             
         # 條件清除
         ON ACTION qbeclear
            #add-point:ui_dialog段
            CALL afap800_clear()
            #end add-point
 
         # 重新整理
         ON ACTION datarefresh
            LET g_error_show = 1
            #add-point:ui_dialog段datarefresh
            
            #end add-point
            CALL afap800_b_fill()
 
         #add-point:ui_dialog段action
         ON ACTION batch_execute
            IF cl_null(g_master.date) OR cl_null(g_master.num) THEN 
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "" 
               LET g_errparam.code   = 'afa-01059' 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               
               EXIT DIALOG
            END IF
            
            IF g_detail_d.getLength() = 0 THEN 
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "" 
               LET g_errparam.code   = 'axm-00090' 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               
               EXIT DIALOG
            END IF
            
            #开启事务
            CALL s_transaction_begin()
            CALL cl_err_collect_init()
            CALL afap800_p() RETURNING l_success
            IF l_success = TRUE THEN 
               CALL s_transaction_end('Y','1')
            ELSE
               CALL s_transaction_end('N','1')
            END IF
            CALL cl_err_collect_show()
            CALL afap800_b_fill()
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
 
{</section>}
 
{<section id="afap800.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION afap800_query()
   DEFINE ls_wc      STRING
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   
   #end add-point 
   #add-point:query段define
   
   #end add-point 
    
   #add-point:cs段after_construct
   
   #end add-point
        
   LET g_error_show = 1
   CALL afap800_b_fill()
   LET l_ac = g_master_idx
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   END IF
   
   #add-point:cs段after_query
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="afap800.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION afap800_b_fill()
 
   DEFINE ls_wc           STRING
   #add-point:b_fill段define
  
   #end add-point
   #add-point:b_fill段define
   
   #end add-point
 
   #add-point:b_fill段sql_before
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   IF cl_null(g_wc) THEN 
      LET g_wc = " 1=1 "
   END IF
   
   LET g_sql = "SELECT '',fabqdocno,fabqseq,fabq005,fabq006,fabq007,faah006,faacl003,fabq012,fabq014,fabq008",
               "  FROM faba_t,fabq_t ",
               "  LEFT OUTER JOIN faah_t ",
               "    ON faahent = fabqent ",
               "   AND faah003 = fabq005 ",
               "   AND faah004 = fabq006 ",
               "   AND faah001 = fabq007 ",
               "  LEFT OUTER JOIN faacl_t ",
               "    ON faaclent = ",g_enterprise,
               "   AND faaclent = faahent ",
               "   AND faacl001 = faah006 ",
               "   AND faacl002='",g_dlang,"'",
               " WHERE fabqent = ? ",
               "   AND fabaent = fabqent ",
               "   AND fabadocno = fabqdocno ",
               "   AND faba003 = '38' ",
               "   AND fabastus = 'Y' ",
               "   AND fabasite = '",g_master.fabasite,"'",
               "   AND faba020 IS NULL AND faba021 IS NULL",
               "   AND ",g_wc
               
   #end add-point
 
   PREPARE afap800_sel FROM g_sql
   DECLARE b_fill_curs CURSOR FOR afap800_sel
   
   CALL g_detail_d.clear()
   #add-point:b_fill段其他頁簽清空
   
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs USING g_enterprise INTO 
   #add-point:b_fill段foreach_into
   g_detail_d[l_ac].*
   #end add-point
   
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      #add-point:b_fill段資料填充
      
      #end add-point
      
      CALL afap800_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
   #add-point:b_fill段資料填充(其他單身)
   CALL g_detail_d.deleteElement(g_detail_d.getLength())  
   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE afap800_sel
   
   LET l_ac = 1
   CALL afap800_fetch()
   #add-point:b_fill段資料填充(其他單身)
   DISPLAY l_ac TO FORMONLY.h_index
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="afap800.fetch" >}
#+ 單身陣列填充2
PRIVATE FUNCTION afap800_fetch()
 
   DEFINE li_ac           LIKE type_t.num10
   #add-point:fetch段define
   
   #end add-point
   #add-point:fetch段define
   
   #end add-point
   
   LET li_ac = l_ac 
   
   #add-point:單身填充後
   
   #end add-point 
   
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="afap800.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION afap800_detail_show()
   #add-point:show段define
   
   #end add-point
   #add-point:show段define
   
   #end add-point
   
   #add-point:detail_show段
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="afap800.filter" >}
#+ filter過濾功能
PRIVATE FUNCTION afap800_filter()
   #add-point:filter段define
   
   #end add-point    
   #add-point:filter段define
   
   #end add-point    
   
   DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
      ON UPDATE
 
   END DISPLAY
 
   LET l_ac = 1
   LET g_detail_cnt = 1
   #add-point:filter段define
   
   #end add-point    
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
   
   CALL afap800_b_fill()
   
END FUNCTION
 
{</section>}
 
{<section id="afap800.filter_parser" >}
#+ filter欄位解析
PRIVATE FUNCTION afap800_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   
   #end add-point    
   #add-point:filter段define
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="afap800.filter_show" >}
#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION afap800_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = afap800_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="afap800.other_function" readonly="Y" >}
#add-point:自定義元件(Function)
# 资产组织说明
PRIVATE FUNCTION afap800_fabasite_desc()
   #所屬法人
   SELECT ooef017 INTO g_master.fabacomp
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_master.fabasite
      AND ooefstus = 'Y' 
   CALL s_desc_get_department_desc(g_master.fabasite) RETURNING g_master.fabasite_desc
   CALL s_desc_get_department_desc(g_master.fabacomp) RETURNING g_master.fabacomp_desc
   DISPLAY g_master.fabasite_desc,g_master.fabacomp_desc TO fabasite_desc,fabacomp_desc 
END FUNCTION
# 清空条件
PRIVATE FUNCTION afap800_clear()
   DEFINE l_msg    STRING
   
   INITIALIZE g_master.* TO NULL
   CALL g_detail_d.clear()
   
   IF NOT cl_null(g_argv[1]) AND NOT cl_null(g_argv[2]) THEN
      LET g_master.fabasite = g_argv[1]
      LET g_wc = " fabadocno = '",g_argv[2],"'"
      CALL afap800_fabasite_desc()  
      LET g_master.date = g_today          
   ELSE
      #取得預設的资产中心,因新增階段的時候,並不會知道site,所以以登入人員做為依據
      CALL s_fin_get_account_center('',g_user,'5',g_today) RETURNING g_sub_success,g_master.fabasite,g_errno
      CALL afap800_fabasite_desc()   
      LET g_master.date = g_today
   END IF       
END FUNCTION
# 批處理邏輯
PRIVATE FUNCTION afap800_p()
   DEFINE l_sql              STRING
   DEFINE l_fabadocno        LIKE faba_t.fabadocno
   DEFINE l_faba020          LIKE faba_t.faba020
   DEFINE l_faba021          LIKE faba_t.faba021
   DEFINE l_faba022          LIKE faba_t.faba022
   DEFINE l_faba023          LIKE faba_t.faba023
   DEFINE l_stus             LIKE type_t.chr1
   DEFINE r_success          LIKE type_t.num5
   
   LET r_success = TRUE
   
   LET l_sql = "SELECT DISTINCT fabadocno,faba020,faba021",
               "  FROM faba_t ",
               " WHERE fabaent = ",g_enterprise,
               "   AND faba003 = '38' ",
               "   AND fabastus = 'Y' ",
               "   AND fabasite = '",g_master.fabasite,"'",
               "   AND ",g_wc
   PREPARE afap800_p_pre FROM l_sql
   DECLARE afap800_p_cs CURSOR FOR afap800_p_pre
   
   FOREACH afap800_p_cs INTO l_fabadocno,l_faba020,l_faba021
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      UPDATE faba_t SET faba020 = g_master.date,
                        faba021 = g_master.num,
                        faba018 = '2'
       WHERE fabaent = g_enterprise
         AND fabadocno = l_fabadocno
      
      
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "upd faba_t" 
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      UPDATE faah_t SET faah056 = '2'
       WHERE faahent = g_enterprise
         AND faah003||faah004||faah001 IN (SELECT fabq005||fabq006||fabq007 
                                             FROM fabq_t 
                                            WHERE fabqent = g_enterprise
                                              AND fabqdocno = l_fabadocno)
                                              
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "upd faah_t" 
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE
         EXIT FOREACH
      END IF
   END FOREACH 
   
   RETURN r_success
END FUNCTION

#end add-point
 
{</section>}
 
