<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="afai021" std_prog="afai021" erpver="1.0" module="AFA" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.afai021_get_glaa" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 根據帳套帶出歸屬法人、科目參照表、帳套編號、平行記帳否
# Memo...........:
# Usage..........: CALL afai021_get_glaa(p_glabld)
#                   
# Input parameter: p_glabld       帳套編號 
#                :  
# Return code....: 
#                :  
# Date & Author..: 2014/1/27 By 01531
# Modify.........:
################################################################################
PRIVATE FUNCTION afai021_get_glaa(p_glabld)
DEFINE p_glabld  LIKE glab_t.glabld
DEFINE l_count   LIKE type_t.num5
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_glabld
   CALL ap_ref_array2(g_ref_fields,"SELECT glaacomp,glaa008,glaa014,glaa004 FROM glaa_t WHERE glaaent='"||g_enterprise||"' AND glaald=? ","") RETURNING g_rtn_fields
   LET g_faal_m.glaacomp = g_rtn_fields[1]
   LET g_faal_m.glaa008 = g_rtn_fields[2]
   LET g_faal_m.glaa014 = g_rtn_fields[3]
   LET g_faal_m.glaa004 = g_rtn_fields[4]

   #檢查帶出的歸屬法人是否符合法人否= 'Y'
   IF NOT cl_null(g_rtn_fields[1]) THEN 
      SELECT COUNT(*) INTO l_count FROM ooef_t,ooee_t WHERE ooefent = ooeeent AND ooef001 = ooee001 
       AND ooee002 = '1' AND ooee003 = '1' AND ooefent = g_enterprise AND ooef001 = g_rtn_fields[1] 
      IF l_count = 0 THEN 
         LET g_rtn_fields[1] = ''
         LET g_faal_m.glaacomp = g_rtn_fields[1] 
      END IF
   END IF   
       
   
   DISPLAY BY NAME g_faal_m.glaacomp,g_faal_m.glaa008,g_faal_m.glaa014,g_faal_m.glaa004

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_faal_m.glaacomp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_faal_m.glaacomp_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_faal_m.glaacomp_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_faal_m.glaa004
   CALL ap_ref_array2(g_ref_fields,"SELECT ooall004 FROM ooall_t WHERE ooallent='"||g_enterprise||"' AND ooall001='0' AND ooall002=? AND ooall003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_faal_m.glaa004_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_faal_m.glaa004_desc 
END FUNCTION]]>
  </point>
  <point name="function.afai021_glab005_desc" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 科目說明顯示
# Memo...........:
# Usage..........: CALL afai021_glab005_desc()
#                  
# Input parameter:  
#                :  
# Return code....: 
#                :  
# Date & Author..: 2014/1/27 By 01531
# Modify.........:
################################################################################
PRIVATE FUNCTION afai021_glab005_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_faal_m.glaa004
   LET g_ref_fields[2] = g_glab_d[l_ac].glab005
   CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001=? AND glacl002=? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_glab_d[l_ac].glab005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_glab_d[l_ac].glab005_desc   
END FUNCTION]]>
  </point>
  <point name="function.afai021_glabld_desc" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 帳套說明顯示
# Memo...........:
# Usage..........: CALL afai021_glabld_desc()
#                   
# Input parameter:  
#                :  
# Return code....:  
#                :  
# Date & Author..: 2014/1/27 By 01531
# Modify.........:
################################################################################
PRIVATE FUNCTION afai021_glabld_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_faal_m.faalld
   CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_faal_m.faalld_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_faal_m.faalld_desc
END FUNCTION]]>
  </point>
  <point name="function.afai021_glab002_desc" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 主要類型說明顯示
# Memo...........:
# Usage..........: CALL afai021_glab002_desc()
#                  
# Input parameter:  
#                :  
# Return code....:  
#                :  
# Date & Author..: 2014/1/27 By 01531
# Modify.........:
################################################################################
PRIVATE FUNCTION afai021_glab002_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_faal_m.faal001
   CALL ap_ref_array2(g_ref_fields,"SELECT faacl003 FROM faacl_t WHERE faaclent='"||g_enterprise||"' AND faacl001=? AND faacl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_faal_m.faal001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_faal_m.faal001_desc
END FUNCTION]]>
  </point>
  <point name="function.afai021_b_upd" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 插入單身設定項目說明
# Memo...........:
# Usage..........: CALL afai021_b_upd()
#                   
# Input parameter:  
#                :  
# Return code....:  
#                :  
# Date & Author..: 2014/1/27 By 01531
# Modify.........:
################################################################################
PRIVATE FUNCTION afai021_b_upd()
DEFINE l_glab    RECORD LIKE glab_t.*
DEFINE l_sql     STRING
DEFINE l_success LIKE type_t.chr1


   SELECT glaa004
     INTO l_glab.glab004
     FROM glaa_t
    WHERE glaaent = g_enterprise
      AND glaald = g_faal_m.faalld
      
   LET l_glab.glabent = g_enterprise
   LET l_glab.glabld  = g_faal_m.faalld
   LET l_glab.glab002 = g_faal_m.faal001
   LET l_glab.glab001 = '91'
   LET l_glab.glab005 = '' 
   LET l_glab.glab006 = ''
   LET l_glab.glab007 = ''
   LET l_glab.glab008 = ''
   LET l_glab.glab009 = ''
   LET l_glab.glab010 = ''
   LET l_glab.glab011 = '1'
   
   CALL s_transaction_begin()
   LET l_sql = " DELETE FROM glab_t WHERE glabent = '",g_enterprise,"'",
              "   AND glabld = '",g_faal_m.faalld,"' AND glab002 = '",g_faal_m.faal001,"' AND glab001 ='91'",
              "   AND glab003 NOT IN (SELECT gzcb002 FROM gzcb_t WHERE gzcb001 ='9901')" 
   PREPARE glab_del FROM l_sql
   EXECUTE glab_del
   
   LET l_success = 'Y'
   LET l_sql = "SELECT gzcb002 FROM gzcb_t WHERE gzcb001 ='9901' ",
               "   AND gzcb002 NOT IN (SELECT glab003 FROM glab_t WHERE glabent = '",g_enterprise,"'",
               "   AND glabld = '",g_faal_m.faalld,"' AND glab002 = '",g_faal_m.faal001,"' AND glab001 ='91')" 
   	PREPARE glab_ins_pre FROM l_sql
   	DECLARE glab_ins CURSOR FOR glab_ins_pre
   	FOREACH glab_ins INTO l_glab.glab003
   	
   	   INSERT INTO glab_t VALUES l_glab.*
  	   IF SQLCA.SQLcode THEN
          LET l_success = 'N'
          EXIT FOREACH
       END IF     
   	END FOREACH
    IF l_success = 'N' THEN
       CALL cl_err("glab_t",SQLCA.sqlcode,1)  
       CALL s_transaction_end('N','0')                    
    ELSE
       CALL s_transaction_end('Y','0')
    END IF    
END FUNCTION]]>
  </point>
  <point name="function.afai021_glaald_chk" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 複製時，若科目參照表不一致則不讓複製
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION afai021_glaald_chk()
DEFINE l_glaa004   LIKE glaa_t.glaa004
DEFINE l_glaa004_t LIKE glaa_t.glaa004
   SELECT glaa004 INTO l_glaa004_t FROM glaa_t WHERE glaaent=g_enterprise AND glaald = g_faalld_t
   SELECT glaa004 INTO l_glaa004 FROM glaa_t WHERE glaaent=g_enterprise AND glaald = g_faal_m.faalld
   IF l_glaa004_t != l_glaa004 THEN
      RETURN FALSE
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="b_fill.body.fill_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="b_fill.more" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="b_fill.sql_after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_sql = "SELECT glab001,glab003,'',glab005,'',glab011 FROM glab_t",   
               " WHERE glabent= ? AND glabld=? AND glab001='91' AND glab002=?"  
   LET g_sql = g_sql," AND glab003 IN (SELECT gzcb002 FROM gzcb_t WHERE gzcb001 = '9901') "                 
   IF NOT cl_null(p_wc2) THEN
      LET g_sql = g_sql CLIPPED," AND ",p_wc2 CLIPPED
   END IF
  
   #子單身的WC
   
   
   #判斷是否填充
   IF afai021_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY glab_t.glabld,glab_t.glab001,glab_t.glab002,glab_t.glab003"
      
      PREPARE afai021_pb1 FROM g_sql
      DECLARE b_fill_cs1 CURSOR FOR afai021_pb1
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs1 USING g_enterprise,g_faal_m.faalld
 
                                               ,g_faal_m.faal001
 
 
                                               
      FOREACH b_fill_cs1 INTO g_glab_d[l_ac].glab001,g_glab_d[l_ac].glab003,g_glab_d[l_ac].glab003_desc,g_glab_d[l_ac].glab005, 
          g_glab_d[l_ac].glab005_desc,g_glab_d[l_ac].glab011
 
                             
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_glab_d[l_ac].glab003
         CALL ap_ref_array2(g_ref_fields,"SELECT gzcbl004 FROM gzcbl_t WHERE  gzcbl001='9901' AND gzcbl002=? AND gzcbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_glab_d[l_ac].glab003_desc = '', g_rtn_fields[1] , ''
         
         CALL afai021_glab005_desc()
         #end add-point
      
         #帶出公用欄位reference值
         
         
 
        
         #add-point:單身資料抓取

         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      
      CALL g_glab_d.deleteElement(g_glab_d.getLength())
 
   END IF
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE afai021_pb1   
   RETURN ]]>
  </point>
  <point name="b_fill2.after_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="b_fill2.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="before_delete.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="bfill.foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="browser_fill.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_faal_m.faalstus = 'N' THEN
      CALL cl_set_act_visible("delete", FALSE)
   ELSE
      CALL cl_set_act_visible("delete", TRUE)
   END IF]]>
  </point>
  <point name="browser_fill.before_browser_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[        LET l_wc  = g_wc.trim() 
   
#   IF g_wc = " 1=1" THEN 
#      LET g_wc = " glab001 = '91'" 
#   END IF      
#   
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
  
   IF cl_null(g_wc) OR g_wc = " 1=1" THEN
      LET g_wc = " glab001 = '91' "
      IF NOT cl_null(g_argv[03]) THEN
         LET g_wc =  g_wc CLIPPED," AND glab002 = '", g_argv[03], "' "       
          
      END IF
   ELSE
      LET g_wc = g_wc CLIPPED," AND glab001 = '91' "  
   END IF

   
   
   
   LET l_wc  = g_wc.trim()]]>
  </point>
  <point name="browser_fill.before_count" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="browser_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="browser_fill.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="browser_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="construct.a.glab001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.glab002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.glabld" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.page1.glab003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.page1.glab005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.page1.glab011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.glab001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.glab002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.glabld" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.page1.glab003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.page1.glab005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.b.page1.glab011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.c.faal001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_faac001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO faal001  #顯示到畫面上

            NEXT FIELD faal001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.faalcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " ooee003 = '1' "
            CALL q_ooef001_10()                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO faalcrtdp  #顯示到畫面上
            LET g_qryparam.where = ""

            NEXT FIELD faalcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.faalcrtid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO faalcrtid  #顯示到畫面上

            NEXT FIELD faalcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.faalld" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            CALL q_authorised_ld()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO faalld  #顯示到畫面上

            NEXT FIELD faalld                     #返回原欄位

]]>
  </point>
  <point name="construct.c.faalmodid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO faalmodid  #顯示到畫面上

            NEXT FIELD faalmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.faalowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " ooee003 = '1' "
            CALL q_ooef001_10()                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO faalowndp  #顯示到畫面上
            LET g_qryparam.where = ""

            NEXT FIELD faalowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.faalownid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO faalownid  #顯示到畫面上

            NEXT FIELD faalownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.glaa004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooal002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glaa004  #顯示到畫面上

            NEXT FIELD glaa004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.glaacomp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.where = " ooee003 = '1' "
            CALL q_ooef001_10()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glaacomp  #顯示到畫面上
            LET g_qryparam.where = ""

            NEXT FIELD glaacomp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.glab001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.c.glab002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_faac001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glab002  #顯示到畫面上

            NEXT FIELD glab002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.glabld" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            CALL q_authorised_ld()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glabld  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO glaald #帳別編號 

            NEXT FIELD glabld                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.glab002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_faac001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glab002  #顯示到畫面上

            NEXT FIELD glab002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.glab003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.c.page1.glab005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.where = " glac003 <> '1' "
            CALL aglt310_04()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glab005  #顯示到畫面上

            NEXT FIELD glab005                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.glab011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="cs.after_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[       ]]>
  </point>
  <point name="cs.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="cs.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="cs.body.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="cs.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="cs.head.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="cs.head.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="cs.more_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="default_search.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="default_search.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="default_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="delete.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="delete.body.a_single_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="delete.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="delete.body.b_single_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="delete.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="delete.body.m_single_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="delete.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF NOT s_ld_chk_authorization(g_user,g_faal_m.faalld) THEN
      CALL cl_err(g_faal_m.faalld,'agl-00165',1)
      RETURN
   END IF]]>
  </point>
  <point name="delete.head.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="delete_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="detail_reproduce.body.table1.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="detail_reproduce.body.table1.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="detail_reproduce.body.table1.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="detail_reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_faal_m.faalstus = 'N' THEN
      CALL cl_set_act_visible("delete", FALSE)
   ELSE
      CALL cl_set_act_visible("delete", TRUE)
   END IF]]>
  </point>
  <point name="fetch.before_fetch" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="fetch.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="fill_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="fill_chk.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="filter.add_cs" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="filter.b_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc('faal005','9920')   
   CALL cl_set_combo_scc('glab003','9901')]]>
  </point>
  <point name="input.a.faal001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_faal_m.faalld) AND NOT cl_null(g_faal_m.faal001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_faal_m.faalld != g_faalld_t  OR g_faal_m.faal001 != g_faal001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM faal_t WHERE "||"faalent = '" ||g_enterprise|| "' AND "||"faalld = '"||g_faal_m.faalld ||"' AND "|| "faal001 = '"||g_faal_m.faal001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_faal_m.faal001) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_faal_m.faal001

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_faac001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME  
               ELSE
                  LET g_faal_m.faal001 = '' 
                  LET g_faal_m.faal001_desc = ''
                  DISPLAY BY NAME g_faal_m.faal001,g_faal_m.faal001_desc
                  NEXT FIELD CURRENT
               END IF   
                                 
            END IF            
            CALL afai021_glab002_desc()
]]>
  </point>
  <point name="input.a.faalld" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_faal_m.faalld) AND NOT cl_null(g_faal_m.faal001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_faal_m.faalld != g_faalld_t  OR g_faal_m.faal001 != g_faal001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM faal_t WHERE "||"faalent = '" ||g_enterprise|| "' AND "||"faalld = '"||g_faal_m.faalld ||"' AND "|| "faal001 = '"||g_faal_m.faal001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_faal_m.faalld) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_faal_m.faalld

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_glaald") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME  
               ELSE
                  LET g_faal_m.faalld = '' 
                  LET g_faal_m.faalld_desc = ''
                  DISPLAY BY NAME g_faal_m.faalld,g_faal_m.faalld_desc
                  NEXT FIELD CURRENT
               END IF   
                
              IF NOT s_ld_chk_authorization(g_user,g_faal_m.faalld) THEN
                  CALL cl_err(g_faal_m.faalld,'agl-00165',0)
                  LET g_faal_m.faalld = ''
                  LET g_faal_m.faalld_desc = ''
                  DISPLAY BY NAME g_faal_m.faalld,g_faal_m.faalld_desc
                  NEXT FIELD CURRENT
               END IF     
               IF p_cmd = 'a' AND l_cmd_t = 'r' THEN
                  IF NOT afai021_glaald_chk() THEN
                     CALL cl_err(g_faal_m.faalld,'agl-00138',1)
                     EXIT DIALOG
                  END IF
               END IF               
            END IF            
            CALL afai021_glabld_desc()
            CALL afai021_get_glaa(g_faal_m.faalld)  
]]>
  </point>
  <point name="input.a.glaa004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_faal_m.glaa004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_faal_m.glaa004

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist_and_ref_val("v_ooal002_7") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_faal_m.glaa004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooall004 FROM ooall_t WHERE ooallent='"||g_enterprise||"' AND ooall001='0' AND ooall002=? AND ooall003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_faal_m.glaa004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_faal_m.glaa004_desc
]]>
  </point>
  <point name="input.a.glaacomp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_faal_m.glaacomp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_faal_m.glaacomp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_faal_m.glaacomp_desc
]]>
  </point>
  <point name="input.a.glab001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a05產生
            IF  NOT cl_null(g_glab_m.glabld) AND NOT cl_null(g_glab_m.glab001) AND NOT cl_null(g_glab_m.glab002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_glab_m.glabld != g_glabld_t  OR g_glab_m.glab001 != g_glab001_t  OR g_glab_m.glab002 != g_glab002_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glab_t WHERE "||"glabent = '" ||g_enterprise|| "' AND "||"glabld = '"||g_glab_m.glabld ||"' AND "|| "glab001 = '"||g_glab_m.glab001 ||"' AND "|| "glab002 = '"||g_glab_m.glab002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.glab002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a05產生
            IF  NOT cl_null(g_glab_m.glabld) AND NOT cl_null(g_glab_m.glab001) AND NOT cl_null(g_glab_m.glab002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_glab_m.glabld != g_glabld_t  OR g_glab_m.glab001 != g_glab001_t  OR g_glab_m.glab002 != g_glab002_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glab_t WHERE "||"glabent = '" ||g_enterprise|| "' AND "||"glabld = '"||g_glab_m.glabld ||"' AND "|| "glab001 = '91' AND "|| "glab002 = '"||g_glab_m.glab002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            IF NOT cl_null(g_glab_m.glab002) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_glab_m.glab002

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_faac001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME  
               ELSE
                  LET g_glab_m.glab002 = '' 
                  LET g_glab_m.glab002_desc = ''
                  DISPLAY BY NAME g_glab_m.glab002,g_glab_m.glab002_desc
                  NEXT FIELD CURRENT
               END IF   
                                 
            END IF            
            CALL afai021_glab002_desc()
        


]]>
  </point>
  <point name="input.a.glabld" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a05產生
            IF  NOT cl_null(g_glab_m.glabld) AND NOT cl_null(g_glab_m.glab001) AND NOT cl_null(g_glab_m.glab002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_glab_m.glabld != g_glabld_t  OR g_glab_m.glab001 != g_glab001_t  OR g_glab_m.glab002 != g_glab002_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glab_t WHERE "||"glabent = '" ||g_enterprise|| "' AND "||"glabld = '"||g_glab_m.glabld ||"' AND "|| "glab001 = '91' AND "|| "glab002 = '"||g_glab_m.glab002 ||"'",'std-00004',0) THEN 
                     LET g_glab_m.glabld = g_glab_m_t.glabld    
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            IF NOT cl_null(g_glab_m.glabld) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_glab_m.glabld

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_glaald_2") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME  
               ELSE
                  LET g_glab_m.glabld = '' 
                  LET g_glab_m.glabld_desc = ''
                  DISPLAY BY NAME g_glab_m.glabld,g_glab_m.glabld_desc
                  NEXT FIELD CURRENT
               END IF   
                                 
            END IF            
            CALL afai021_glabld_desc()
            CALL afai021_get_glaa(g_glab_m.glabld)   

]]>
  </point>
  <point name="input.a.page1.glab001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_faal_m.faalld IS NOT NULL AND g_faal_m.faal001 IS NOT NULL AND g_glab_d[g_detail_idx].glab001 IS NOT NULL AND g_glab_d[g_detail_idx].glab003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_faal_m.faalld != g_faalld_t OR g_faal_m.faal001 != g_faal001_t OR g_glab_d[g_detail_idx].glab001 != g_glab_d_t.glab001  OR g_glab_d[g_detail_idx].glab003 != g_glab_d_t.glab003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glab_t WHERE "||"glabent = '" ||g_enterprise|| "' AND "||"glabld = '"||g_faal_m.faalld ||"' AND "|| "glab001 = '91' AND "|| "glab003 = '"||g_glab_d[g_detail_idx].glab003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.glab002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_glab_d[l_ac].glab002) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_glab_d[l_ac].glab002

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist_and_ref_val("v_faac001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

            #此段落由子樣板a05產生
            IF  g_faal_m.faalld IS NOT NULL AND g_faal_m.faal001 IS NOT NULL AND g_glab_d[g_detail_idx].glab001 IS NOT NULL AND g_glab_d[g_detail_idx].glab002 IS NOT NULL AND g_glab_d[g_detail_idx].glab003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_faal_m.faalld != g_faalld_t OR g_faal_m.faal001 != g_faal001_t OR g_glab_d[g_detail_idx].glab001 != g_glab_d_t.glab001 OR g_glab_d[g_detail_idx].glab002 != g_glab_d_t.glab002 OR g_glab_d[g_detail_idx].glab003 != g_glab_d_t.glab003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glab_t WHERE "||"glabent = '" ||g_enterprise|| "' AND "||"glabld = '"||g_faal_m.faalld ||"' AND "|| "glab001 = '"||g_faal_m.faal001 ||"' AND "|| "glab002 = '"||g_glab_d[g_detail_idx].glab001 ||"' AND "|| "glab003 = '"||g_glab_d[g_detail_idx].glab002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.glab003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        #此段落由子樣板a05產生
            IF  g_faal_m.faalld IS NOT NULL AND g_glab_d[g_detail_idx].glab001 IS NOT NULL AND g_faal_m.faal001 IS NOT NULL AND g_glab_d[g_detail_idx].glab003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_faal_m.faalld != g_faalld_t OR g_glab_d[g_detail_idx].glab001 != g_glab_d_t.glab001 OR g_faal_m.faal001 != g_faal001_t OR g_glab_d[g_detail_idx].glab003 != g_glab_d_t.glab003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glab_t WHERE "||"glabent = '" ||g_enterprise|| "' AND "||"glabld = '"||g_faal_m.faalld ||"' AND "|| "glab001 = '"||g_glab_d[g_detail_idx].glab001 ||"' AND "|| "glab002 = '"||g_faal_m.faal001 ||"' AND "|| "glab003 = '"||g_glab_d[g_detail_idx].glab003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.glab005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        IF NOT cl_null(g_glab_d[l_ac].glab005) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_faal_m.glaa004
               LET g_chkparam.arg2 = g_glab_d[l_ac].glab005

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_glac002_3") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
                  #LET  = g_chkparam.return2                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  IF l_cmd = 'a' THEN 
                     LET g_glab_d[l_ac].glab005 = ''
                     LET g_glab_d[l_ac].glab005_desc = ''
                  ELSE
                     LET g_glab_d[l_ac].glab005 = g_glab_d_t.glab005
                  END IF
                  DISPLAY BY NAME g_glab_d[l_ac].glab005 
                  DISPLAY BY NAME g_glab_d[l_ac].glab005_desc

 
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            CALL afai021_glab005_desc()]]>
  </point>
  <point name="input.a.page1.glab011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[       ]]>
  </point>
  <point name="input.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="input.after_set_entry" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="input.after_set_no_entry" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET l_allow_insert = FALSE
   LET l_allow_delete = FALSE]]>
  </point>
  <point name="input.b.glab001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.glab002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.glabld" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.glab003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.glab005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.glab011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="input.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.body.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.body.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.body.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.body.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.body.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        LET g_glab_m.glab001 = '91']]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_glab_d[l_ac].glab001 = '91']]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.body.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.c.faal001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_faal_m.faal001             #給予default值

            #給予arg

            CALL q_faac001()                                #呼叫開窗

            LET g_faal_m.faal001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_faal_m.faal001 TO faal001              #顯示到畫面上
            CALL afai021_glab002_desc()
            DISPLAY g_faal_m.faal001_desc TO faal001_desc 

            NEXT FIELD faal001                          #返回原欄位

]]>
  </point>
  <point name="input.c.faalld" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_faal_m.faalld             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept

            CALL q_authorised_ld()                                #呼叫開窗

            LET g_faal_m.faalld = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_faal_m.faalld TO faalld              #顯示到畫面上
            CALL afai021_glabld_desc()
            CALL afai021_get_glaa(g_faal_m.faalld) 

            NEXT FIELD faalld                          #返回原欄位

]]>
  </point>
  <point name="input.c.glaa004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_faal_m.glaa004             #給予default值

            #給予arg

            CALL q_ooal002()                                #呼叫開窗

            LET g_faal_m.glaa004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_faal_m.glaa004 TO glaa004              #顯示到畫面上

            NEXT FIELD glaa004                          #返回原欄位

]]>
  </point>
  <point name="input.c.glaacomp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_faal_m.glaacomp             #給予default值

            #給予arg

            LET g_qryparam.where = " ooee003 = '1' "
            CALL q_ooef001_10()                                #呼叫開窗

            LET g_faal_m.glaacomp = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_faal_m.glaacomp TO glaacomp              #顯示到畫面上
            LET g_qryparam.where = ""

            NEXT FIELD glaacomp                          #返回原欄位

]]>
  </point>
  <point name="input.c.glab001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.c.glab002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glab_m.glab002             #給予default值

            #給予arg

            CALL q_faac001()                                #呼叫開窗

            LET g_glab_m.glab002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glab_m.glab002 TO glab002              #顯示到畫面上

            CALL afai021_glab002_desc()
            DISPLAY g_glab_m.glab002_desc TO glab002_desc  
              
            NEXT FIELD glab002                          #返回原欄位

]]>
  </point>
  <point name="input.c.glabld" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glab_m.glabld             #給予default值
            LET g_qryparam.where = " glaa008 ='Y' "
            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept

            CALL q_authorised_ld()                             #呼叫開窗

            LET g_glab_m.glabld = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_glab_m.glabld TO glabld              #顯示到畫面上
            
            CALL afai021_glabld_desc() 
            DISPLAY g_glab_m.glabld_desc TO glabld_desc
            

            NEXT FIELD glabld                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.glab002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glab_d[l_ac].glab002             #給予default值

            #給予arg

            CALL q_faac001()                                #呼叫開窗

            LET g_glab_d[l_ac].glab002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glab_d[l_ac].glab002 TO glab002              #顯示到畫面上

            NEXT FIELD glab002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.glab003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.c.page1.glab005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glab_d[l_ac].glab005             #給予default值

            #給予arg
            LET g_qryparam.where = " glac003 <> '1' AND glac001 = '",g_faal_m.glaa004,"'"
            CALL aglt310_04()                                #呼叫開窗

            LET g_glab_d[l_ac].glab005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glab_d[l_ac].glab005 TO glab005              #顯示到畫面上

            CALL afai021_glab005_desc()
            DISPLAY g_glab_d[l_ac].glab005_desc TO glab005_desc              

            NEXT FIELD glab005                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.glab011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="input.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="input.g.glab001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.glab002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.glabld" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page1.glab003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page1.glab005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page1.glab011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF l_cmd_t = 'a' AND p_cmd = 'a' THEN
                  CALL afai021_b_upd()
               END IF   ]]>
  </point>
  <point name="input.head.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="input.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        LET g_glab_m.glab001 = '91']]>
  </point>
  <point name="input.head.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.head.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF p_cmd = 'a' AND l_cmd_t = 'a' THEN
               LET g_faal_m.faalstus = 'Y'
               LET g_faal_m.faal005 = '1'
               DISPLAY BY NAME g_faal_m.faalstus,g_faal_m.faal005
            END IF
            IF p_cmd = 'a' AND l_cmd_t = 'r' THEN
               LET g_faal_m.faalstus = 'Y'
               DISPLAY BY NAME g_faal_m.faalstus
            END IF]]>
  </point>
  <point name="input.more_inputarray" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="insert.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="insert.after_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="insert.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[          ]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="insert_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="lock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="main.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="main.before_close" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="main.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="main.servicecall" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="menu.delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.modify" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.modify_detail" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.output" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.query" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="modify.a_key_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="modify.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="modify.b_key_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="modify.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF NOT s_ld_chk_authorization(g_user,g_faal_m.faalld) THEN
      CALL cl_err(g_faal_m.faalld,'agl-00165',1)
      RETURN
   END IF  ]]>
  </point>
  <point name="modify.m_key_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="modify_detail_chk.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="modify_detail_chk.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="modify_detail_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="modify_detail_chk.page_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="query.befroe_query" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="query.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="ref_show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glab_d[l_ac].glab003
            CALL ap_ref_array2(g_ref_fields,"SELECT gzcbl004 FROM gzcbl_t WHERE  gzcbl001='9901' AND gzcbl002=? AND gzcbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glab_d[l_ac].glab003_desc = '', g_rtn_fields[1] , ''
           
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glab_m.glaa004
            LET g_ref_fields[2] = g_glab_d[l_ac].glab005
            CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001=? AND glacl002=? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glab_d[l_ac].glab005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glab_d[l_ac].glab005_desc
]]>
  </point>
  <point name="ref_show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="ref_show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL afai021_glab002_desc()

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glab_m.glabld
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glab_m.glabld_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glab_m.glabld_desc
            
            CALL afai021_get_glaa(g_glab_m.glabld)
            CALL afai021_glab002_desc()
]]>
  </point>
  <point name="reproduce.after_reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_faal_m.faalld = '' 
   LET g_faal_m.faalld_desc = ''
   DISPLAY BY NAME g_faal_m.faalld,g_faal_m.faalld_desc
   LET g_faal_m.faal001 = ''
   LET g_faal_m.faal001_desc = ''
   DISPLAY BY NAME g_faal_m.faal001,g_faal_m.faal001_desc
   LET g_faal_m.glaa014 = ''
   LET g_faal_m.glaa008 = ''
   LET g_faal_m.glaacomp = ''
   LET g_faal_m.glaacomp_desc = ''
   LET g_faal_m.glaa004 = ''
   LET g_faal_m.glaa004_desc = ''
   DISPLAY BY NAME g_faal_m.glaa014,g_faal_m.glaa008,g_faal_m.glaacomp,g_faal_m.glaacomp_desc,g_faal_m.glaa004,g_faal_m.glaa004_desc]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="set_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b段" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glab_d[l_ac].glab003
            CALL ap_ref_array2(g_ref_fields,"SELECT gzcbl004 FROM gzcbl_t WHERE  gzcbl001='9901' AND gzcbl002=? AND gzcbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glab_d[l_ac].glab003_desc = '', g_rtn_fields[1] , ''
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_faal_m.glaa004
            LET g_ref_fields[2] = g_glab_d[l_ac].glab005
            CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001=? AND glacl002=? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glab_d[l_ac].glab005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glab_d[l_ac].glab005_desc
]]>
  </point>
  <point name="show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL afai021_glab002_desc()
   
   CALL afai021_get_glaa(g_faal_m.faalld)
   CALL afai021_glab002_desc()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_faal_m.faalownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_faal_m.faalownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_faal_m.faalownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_faal_m.faalowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_faal_m.faalowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_faal_m.faalowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_faal_m.faalcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_faal_m.faalcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_faal_m.faalcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_faal_m.faalcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_faal_m.faalcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_faal_m.faalcrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_faal_m.faalmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_faal_m.faalmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_faal_m.faalmodid_desc
]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF NOT s_ld_chk_authorization(g_user,g_faal_m.faalld) THEN
      CALL cl_err(g_faal_m.faalld,'agl-00165',1)
      RETURN
   END IF]]>
  </point>
  <point name="ui_browser_refresh.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="ui_detailshow.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="ui_detailshow.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="ui_detailshow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="ui_detailshow.more" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="ui_dialog.before_dialog2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ui_dialog.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="ui_dialog.page1.action" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ui_headershow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="unlock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="update_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <section id="afai021.b_fill" ver="9" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION afai021_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_glab_d.clear()    #g_glab_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF afai021_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE glab001,glab003,glab005,glab011 ,t1.glacl004 FROM glab_t",   
                  " INNER JOIN faal_t ON faalld = glabld ",
                  " AND faal001 = glab002 ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN glacl_t t1 ON t1.glaclent='"||g_enterprise||"' AND t1.glacl001='' AND t1.glacl002=glab005 AND t1.glacl003='"||g_dlang||"' ",
 
                  " WHERE glabent=? AND glabld=? AND glab002=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY glab_t.glab001,glab_t.glab003"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE afai021_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR afai021_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_faal_m.faalld,g_faal_m.faal001
                                               
      FOREACH b_fill_cs INTO g_glab_d[l_ac].glab001,g_glab_d[l_ac].glab003,g_glab_d[l_ac].glab005,g_glab_d[l_ac].glab011, 
          g_glab_d[l_ac].glab005_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_glab_d.deleteElement(g_glab_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE afai021_pb
 
   
END FUNCTION
]]>
  </section>
  <section id="afai021.b_fill2" ver="4" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION afai021_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL afai021_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="afai021.before_delete" ver="1" status="" src="s">
    <![CDATA[#+ 單身db資料刪除
PRIVATE FUNCTION afai021_before_delete()
   #add-point:before_delete段define
   {<point name="before_delete.define"/>}
   #end add-point 
   
   #add-point:單筆刪除前
   {<point name="delete.body.b_single_delete" mark="Y"/>}
   #end add-point
   
   DELETE FROM glab_t
    WHERE glabent = g_enterprise AND glabld = g_glab_m.glabld AND
                              glab001 = g_glab_m.glab001 AND
 
                              glab002 = g_glab_m.glab002 AND
 
 
          glab003 = g_glab_d_t.glab003
 
      
   #add-point:單筆刪除中
   {<point name="delete.body.m_single_delete"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("glab_t",SQLCA.sqlcode,1)
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後
   {<point name="delete.body.a_single_delete"/>}
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
]]>
  </section>
  <section id="afai021.browser_fill" ver="7" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION afai021_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_faal_m.* TO NULL
   CALL g_glab_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "faalld,faal001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE faalld,faal001 ",
                      " FROM faal_t ",
                      " ",
                      " LEFT JOIN glab_t ON glabent = faalent AND faalld = glabld AND faal001 = glab002 ",
 
 
                      " ", 
                      " ", 
                      " WHERE faalent = '" ||g_enterprise|| "' AND glabent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("faal_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE faalld,faal001 ",
                      " FROM faal_t ", 
                      "  ",
                      "  ",
                      " WHERE faalent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("faal_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照faalld,faal001 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT faalstus,faalld,faal001 ",
               " FROM faal_t ",
               "  ",
               "  LEFT JOIN glab_t ON glabent = faalent AND faalld = glabld AND faal001 = glab002 ",
 
 
               "  ",
               "  ",
               
               " WHERE faalent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("faal_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_faalld,g_browser[g_cnt].b_faal001 

      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="afai021.browser_search" ver="4" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION afai021_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY faalld"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL afai021_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="afai021.construct" ver="12" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION afai021_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_faal_m.* TO NULL
   CALL g_glab_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON faalld,glaacomp_desc,faal001,glaa004_desc,faal002,faal003,faal004,faal005, 
          faalstus,faalownid,faalowndp,faalcrtid,faalcrtdp,faalcrtdt,faalmodid,faalmoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<faalcrtdt>>----
         AFTER FIELD faalcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<faalmoddt>>----
         AFTER FIELD faalmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<faalcnfdt>>----
         
         #----<<faalpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.faalld
         ON ACTION controlp INFIELD faalld
            #add-point:ON ACTION controlp INFIELD faalld
            {<point name="construct.c.faalld" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD faalld
            #add-point:BEFORE FIELD faalld
            {<point name="construct.b.faalld" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD faalld
            
            #add-point:AFTER FIELD faalld
            {<point name="construct.a.faalld" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glaacomp
         ON ACTION controlp INFIELD glaacomp
            #add-point:ON ACTION controlp INFIELD glaacomp
            {<point name="construct.c.glaacomp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaacomp
            #add-point:BEFORE FIELD glaacomp
            {<point name="construct.b.glaacomp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaacomp
            
            #add-point:AFTER FIELD glaacomp
            {<point name="construct.a.glaacomp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaacomp_desc
            #add-point:BEFORE FIELD glaacomp_desc
            {<point name="construct.b.glaacomp_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaacomp_desc
            
            #add-point:AFTER FIELD glaacomp_desc
            {<point name="construct.a.glaacomp_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glaacomp_desc
         ON ACTION controlp INFIELD glaacomp_desc
            #add-point:ON ACTION controlp INFIELD glaacomp_desc
            {<point name="construct.c.glaacomp_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.faal001
         ON ACTION controlp INFIELD faal001
            #add-point:ON ACTION controlp INFIELD faal001
            {<point name="construct.c.faal001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD faal001
            #add-point:BEFORE FIELD faal001
            {<point name="construct.b.faal001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD faal001
            
            #add-point:AFTER FIELD faal001
            {<point name="construct.a.faal001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glaa004
         ON ACTION controlp INFIELD glaa004
            #add-point:ON ACTION controlp INFIELD glaa004
            {<point name="construct.c.glaa004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaa004
            #add-point:BEFORE FIELD glaa004
            {<point name="construct.b.glaa004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaa004
            
            #add-point:AFTER FIELD glaa004
            {<point name="construct.a.glaa004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaa004_desc
            #add-point:BEFORE FIELD glaa004_desc
            {<point name="construct.b.glaa004_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaa004_desc
            
            #add-point:AFTER FIELD glaa004_desc
            {<point name="construct.a.glaa004_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glaa004_desc
         ON ACTION controlp INFIELD glaa004_desc
            #add-point:ON ACTION controlp INFIELD glaa004_desc
            {<point name="construct.c.glaa004_desc" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD faal002
            #add-point:BEFORE FIELD faal002
            {<point name="construct.b.faal002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD faal002
            
            #add-point:AFTER FIELD faal002
            {<point name="construct.a.faal002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.faal002
         ON ACTION controlp INFIELD faal002
            #add-point:ON ACTION controlp INFIELD faal002
            {<point name="construct.c.faal002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD faal003
            #add-point:BEFORE FIELD faal003
            {<point name="construct.b.faal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD faal003
            
            #add-point:AFTER FIELD faal003
            {<point name="construct.a.faal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.faal003
         ON ACTION controlp INFIELD faal003
            #add-point:ON ACTION controlp INFIELD faal003
            {<point name="construct.c.faal003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD faal004
            #add-point:BEFORE FIELD faal004
            {<point name="construct.b.faal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD faal004
            
            #add-point:AFTER FIELD faal004
            {<point name="construct.a.faal004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.faal004
         ON ACTION controlp INFIELD faal004
            #add-point:ON ACTION controlp INFIELD faal004
            {<point name="construct.c.faal004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD faal005
            #add-point:BEFORE FIELD faal005
            {<point name="construct.b.faal005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD faal005
            
            #add-point:AFTER FIELD faal005
            {<point name="construct.a.faal005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.faal005
         ON ACTION controlp INFIELD faal005
            #add-point:ON ACTION controlp INFIELD faal005
            {<point name="construct.c.faal005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD faalstus
            #add-point:BEFORE FIELD faalstus
            {<point name="construct.b.faalstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD faalstus
            
            #add-point:AFTER FIELD faalstus
            {<point name="construct.a.faalstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.faalstus
         ON ACTION controlp INFIELD faalstus
            #add-point:ON ACTION controlp INFIELD faalstus
            {<point name="construct.c.faalstus" />}
            #END add-point
 
         #Ctrlp:construct.c.faalownid
         ON ACTION controlp INFIELD faalownid
            #add-point:ON ACTION controlp INFIELD faalownid
            {<point name="construct.c.faalownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD faalownid
            #add-point:BEFORE FIELD faalownid
            {<point name="construct.b.faalownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD faalownid
            
            #add-point:AFTER FIELD faalownid
            {<point name="construct.a.faalownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.faalowndp
         ON ACTION controlp INFIELD faalowndp
            #add-point:ON ACTION controlp INFIELD faalowndp
            {<point name="construct.c.faalowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD faalowndp
            #add-point:BEFORE FIELD faalowndp
            {<point name="construct.b.faalowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD faalowndp
            
            #add-point:AFTER FIELD faalowndp
            {<point name="construct.a.faalowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.faalcrtid
         ON ACTION controlp INFIELD faalcrtid
            #add-point:ON ACTION controlp INFIELD faalcrtid
            {<point name="construct.c.faalcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD faalcrtid
            #add-point:BEFORE FIELD faalcrtid
            {<point name="construct.b.faalcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD faalcrtid
            
            #add-point:AFTER FIELD faalcrtid
            {<point name="construct.a.faalcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.faalcrtdp
         ON ACTION controlp INFIELD faalcrtdp
            #add-point:ON ACTION controlp INFIELD faalcrtdp
            {<point name="construct.c.faalcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD faalcrtdp
            #add-point:BEFORE FIELD faalcrtdp
            {<point name="construct.b.faalcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD faalcrtdp
            
            #add-point:AFTER FIELD faalcrtdp
            {<point name="construct.a.faalcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD faalcrtdt
            #add-point:BEFORE FIELD faalcrtdt
            {<point name="construct.b.faalcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.faalmodid
         ON ACTION controlp INFIELD faalmodid
            #add-point:ON ACTION controlp INFIELD faalmodid
            {<point name="construct.c.faalmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD faalmodid
            #add-point:BEFORE FIELD faalmodid
            {<point name="construct.b.faalmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD faalmodid
            
            #add-point:AFTER FIELD faalmodid
            {<point name="construct.a.faalmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD faalmoddt
            #add-point:BEFORE FIELD faalmoddt
            {<point name="construct.b.faalmoddt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON glab001,glab003,glab003_desc,glab005,glab011
           FROM s_detail1[1].glab001,s_detail1[1].glab003,s_detail1[1].glab003_desc,s_detail1[1].glab005, 
               s_detail1[1].glab011
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="afai021.default_search" ver="6" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION afai021_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " faalld = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " faal001 = '", g_argv[02], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="afai021.delete" ver="11" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION afai021_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_faal_m.faalld IS NULL
   OR g_faal_m.faal001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE afai021_master_referesh USING g_faal_m.faalld,g_faal_m.faal001 INTO g_faal_m.faalld,g_faal_m.faal001, 
       g_faal_m.faal002,g_faal_m.faal003,g_faal_m.faal004,g_faal_m.faal005,g_faal_m.faalstus,g_faal_m.faalownid, 
       g_faal_m.faalowndp,g_faal_m.faalcrtid,g_faal_m.faalcrtdp,g_faal_m.faalcrtdt,g_faal_m.faalmodid, 
       g_faal_m.faalmoddt,g_faal_m.faalld_desc,g_faal_m.faal001_desc,g_faal_m.faalownid_desc,g_faal_m.faalowndp_desc, 
       g_faal_m.faalcrtid_desc,g_faal_m.faalcrtdp_desc,g_faal_m.faalmodid_desc
   
   
 
   CALL afai021_show()
   
   CALL s_transaction_begin()
 
   OPEN afai021_cl USING g_enterprise,g_faal_m.faalld,g_faal_m.faal001
   IF STATUS THEN
      CALL cl_err("OPEN afai021_cl:", STATUS, 1)
      CLOSE afai021_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE afai021_master_referesh USING g_faal_m.faalld,g_faal_m.faal001 INTO g_faal_m.faalld,g_faal_m.faal001, 
       g_faal_m.faal002,g_faal_m.faal003,g_faal_m.faal004,g_faal_m.faal005,g_faal_m.faalstus,g_faal_m.faalownid, 
       g_faal_m.faalowndp,g_faal_m.faalcrtid,g_faal_m.faalcrtdp,g_faal_m.faalcrtdt,g_faal_m.faalmodid, 
       g_faal_m.faalmoddt,g_faal_m.faalld_desc,g_faal_m.faal001_desc,g_faal_m.faalownid_desc,g_faal_m.faalowndp_desc, 
       g_faal_m.faalcrtid_desc,g_faal_m.faalcrtdp_desc,g_faal_m.faalmodid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_faal_m.faalld,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL afai021_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_faalld_t = g_faal_m.faalld
      LET g_faal001_t = g_faal_m.faal001
 
 
      DELETE FROM faal_t
       WHERE faalent = g_enterprise AND faalld = g_faal_m.faalld
         AND faal001 = g_faal_m.faal001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_faal_m.faalld,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM glab_t
       WHERE glabent = g_enterprise AND glabld = g_faal_m.faalld
         AND glab002 = g_faal_m.faal001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("glab_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_glab_d.clear() 
 
     
      #CALL afai021_ui_browser_refresh()  
      CALL afai021_ui_headershow()  
      CALL afai021_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL afai021_browser_fill("")
         CALL afai021_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL afai021_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE afai021_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_faal_m.faalld,'D')
    
END FUNCTION
]]>
  </section>
  <section id="afai021.delete_b" ver="4" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION afai021_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM glab_t
       WHERE glabent = g_enterprise AND
         glabld = ps_keys_bak[1] AND glab002 = ps_keys_bak[2] AND glab001 = ps_keys_bak[3] AND glab003 = ps_keys_bak[4]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="afai021.description" ver="74" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000176
#+ 
#+ Filename...: afai021
#+ Description: 資產主要類型依帳套設置科目作業
#+ Creator....: 02291(2014/03/13)
#+ Modifier...: 01727(2014/06/28)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="afai021.detail_reproduce" ver="5" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION afai021_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE glab_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE afai021_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE afai021_detail AS ",
                "SELECT * FROM glab_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO afai021_detail SELECT * FROM glab_t 
                                         WHERE glabent = g_enterprise AND glabld = g_faalld_t
                                         AND glab002 = g_faal001_t
 
   
   #將key修正為調整後   
   UPDATE afai021_detail 
      #更新key欄位
      SET glabld = g_faal_m.faalld
          , glab002 = g_faal_m.faal001
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO glab_t SELECT * FROM afai021_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE afai021_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_faalld_t = g_faal_m.faalld
   LET g_faal001_t = g_faal_m.faal001
 
   
   DROP TABLE afai021_detail
   
END FUNCTION
]]>
  </section>
  <section id="afai021.detail_show" ver="3" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION afai021_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="afai021.fetch" ver="6" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION afai021_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   CALL afai021_browser_fill(p_flag)
   
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_faal_m.faalld = g_browser[g_current_idx].b_faalld
   LET g_faal_m.faal001 = g_browser[g_current_idx].b_faal001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE afai021_master_referesh USING g_faal_m.faalld,g_faal_m.faal001 INTO g_faal_m.faalld,g_faal_m.faal001, 
       g_faal_m.faal002,g_faal_m.faal003,g_faal_m.faal004,g_faal_m.faal005,g_faal_m.faalstus,g_faal_m.faalownid, 
       g_faal_m.faalowndp,g_faal_m.faalcrtid,g_faal_m.faalcrtdp,g_faal_m.faalcrtdt,g_faal_m.faalmodid, 
       g_faal_m.faalmoddt,g_faal_m.faalld_desc,g_faal_m.faal001_desc,g_faal_m.faalownid_desc,g_faal_m.faalowndp_desc, 
       g_faal_m.faalcrtid_desc,g_faal_m.faalcrtdp_desc,g_faal_m.faalmodid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("faal_t",SQLCA.sqlcode,1)
      INITIALIZE g_faal_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL afai021_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="afai021.fill_chk" ver="6" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION afai021_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="afai021.filter" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION afai021_filter()
 
 
 
 
 
 
 
 
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
 
 
   
 
 
END FUNCTION
]]>
  </section>
  <section id="afai021.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION afai021_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="afai021.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
 
 
 
 
]]>
  </section>
  <section id="afai021.global" ver="12" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_faal_m        RECORD
       faalld LIKE faal_t.faalld, 
   faalld_desc LIKE type_t.chr80, 
   glaacomp LIKE glaa_t.glaacomp, 
   glaacomp_desc LIKE type_t.chr80, 
   faal001 LIKE faal_t.faal001, 
   faal001_desc LIKE type_t.chr80, 
   glaa004 LIKE glaa_t.glaa004, 
   glaa004_desc LIKE type_t.chr80, 
   glaa014 LIKE glaa_t.glaa014, 
   glaa008 LIKE glaa_t.glaa008, 
   faal002 LIKE faal_t.faal002, 
   faal003 LIKE faal_t.faal003, 
   faal004 LIKE faal_t.faal004, 
   faal005 LIKE faal_t.faal005, 
   faalstus LIKE faal_t.faalstus, 
   faalownid LIKE faal_t.faalownid, 
   faalownid_desc LIKE type_t.chr80, 
   faalowndp LIKE faal_t.faalowndp, 
   faalowndp_desc LIKE type_t.chr80, 
   faalcrtid LIKE faal_t.faalcrtid, 
   faalcrtid_desc LIKE type_t.chr80, 
   faalcrtdp LIKE faal_t.faalcrtdp, 
   faalcrtdp_desc LIKE type_t.chr80, 
   faalcrtdt DATETIME YEAR TO SECOND, 
   faalmodid LIKE faal_t.faalmodid, 
   faalmodid_desc LIKE type_t.chr80, 
   faalmoddt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_glab_d        RECORD
       glab001 LIKE glab_t.glab001, 
   glab003 LIKE glab_t.glab003, 
   glab003_desc LIKE type_t.chr80, 
   glab005 LIKE glab_t.glab005, 
   glab005_desc LIKE type_t.chr500, 
   glab011 LIKE glab_t.glab011
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_faal_m          type_g_faal_m
DEFINE g_faal_m_t        type_g_faal_m
 
   DEFINE g_faalld_t LIKE faal_t.faalld
DEFINE g_faal001_t LIKE faal_t.faal001
 
 
DEFINE g_glab_d          DYNAMIC ARRAY OF type_g_glab_d
DEFINE g_glab_d_t        type_g_glab_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_faalld LIKE faal_t.faalld,
      b_faal001 LIKE faal_t.faal001
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_faalld LIKE faal_t.faalld,
      b_faal001 LIKE faal_t.faal001
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="afai021.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION afai021_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_glab_d.getLength() THEN
         LET g_detail_idx = g_glab_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_glab_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_glab_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="afai021.init" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION afai021_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('faalstus','17','N,Y')
 
      CALL cl_set_combo_scc('glab011','8315') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL afai021_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="afai021.input" ver="9" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION afai021_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT glab001,glab003,glab005,glab011 FROM glab_t WHERE glabent=? AND glabld=?  
       AND glab002=? AND glab001=? AND glab003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE afai021_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL afai021_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL afai021_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_faal_m.faalld,g_faal_m.faal001,g_faal_m.faal002,g_faal_m.faal003,g_faal_m.faal004, 
       g_faal_m.faal005,g_faal_m.faalstus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="afai021.input.body" ver="12" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_glab_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_glab_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL afai021_b_fill()
            LET g_rec_b = g_glab_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN afai021_cl USING g_enterprise,g_faal_m.faalld,g_faal_m.faal001
            IF STATUS THEN
               CALL cl_err("OPEN afai021_cl:", STATUS, 1)
               CLOSE afai021_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_glab_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_glab_d[l_ac].glab001 IS NOT NULL
               AND g_glab_d[l_ac].glab003 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_glab_d_t.* = g_glab_d[l_ac].*  #BACKUP
               CALL afai021_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL afai021_set_no_entry_b(l_cmd)
               IF NOT afai021_lock_b("glab_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH afai021_bcl INTO g_glab_d[l_ac].glab001,g_glab_d[l_ac].glab003,g_glab_d[l_ac].glab005, 
                      g_glab_d[l_ac].glab011
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_glab_d_t.glab001,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL afai021_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_glab_d[l_ac].* TO NULL 
                  LET g_glab_d[l_ac].glab001 = "90"
      LET g_glab_d[l_ac].glab011 = "1"
 
            LET g_glab_d_t.* = g_glab_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL afai021_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL afai021_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_glab_d[li_reproduce_target].* = g_glab_d[li_reproduce].*
 
               LET g_glab_d[li_reproduce_target].glab001 = NULL
               LET g_glab_d[li_reproduce_target].glab003 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM glab_t 
             WHERE glabent = g_enterprise AND glabld = g_faal_m.faalld
               AND glab002 = g_faal_m.faal001
 
               AND glab001 = g_glab_d[l_ac].glab001
               AND glab003 = g_glab_d[l_ac].glab003
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_faal_m.faalld
               LET gs_keys[2] = g_faal_m.faal001
               LET gs_keys[3] = g_glab_d[g_detail_idx].glab001
               LET gs_keys[4] = g_glab_d[g_detail_idx].glab003
               CALL afai021_insert_b('glab_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_glab_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("glab_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL afai021_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_glab_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_glab_d.deleteElement(l_ac)
               NEXT FIELD glab001
            END IF
         
            IF g_glab_d[l_ac].glab001 IS NOT NULL
               AND g_glab_d_t.glab003 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM glab_t
                WHERE glabent = g_enterprise AND glabld = g_faal_m.faalld AND
                                          glab002 = g_faal_m.faal001 AND
 
                      glab001 = g_glab_d_t.glab001
                  AND glab003 = g_glab_d_t.glab003
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("glab_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE afai021_bcl
               LET l_count = g_glab_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_faal_m.faalld
               LET gs_keys[2] = g_faal_m.faal001
               LET gs_keys[3] = g_glab_d[g_detail_idx].glab001
               LET gs_keys[4] = g_glab_d[g_detail_idx].glab003
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL afai021_delete_b('glab_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD glab001
            #add-point:BEFORE FIELD glab001
            {<point name="input.b.page1.glab001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glab001
            
            #add-point:AFTER FIELD glab001
            {<point name="input.a.page1.glab001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glab001
            #add-point:ON CHANGE glab001
            {<point name="input.g.page1.glab001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glab003
            #add-point:BEFORE FIELD glab003
            {<point name="input.b.page1.glab003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glab003
            
            #add-point:AFTER FIELD glab003
            {<point name="input.a.page1.glab003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glab003
            #add-point:ON CHANGE glab003
            {<point name="input.g.page1.glab003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glab003_desc
            #add-point:BEFORE FIELD glab003_desc
            {<point name="input.b.page1.glab003_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glab003_desc
            
            #add-point:AFTER FIELD glab003_desc
            {<point name="input.a.page1.glab003_desc" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glab003_desc
            #add-point:ON CHANGE glab003_desc
            {<point name="input.g.page1.glab003_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glab005
            
            #add-point:AFTER FIELD glab005
            {<point name="input.a.page1.glab005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glab005
            #add-point:BEFORE FIELD glab005
            {<point name="input.b.page1.glab005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glab005
            #add-point:ON CHANGE glab005
            {<point name="input.g.page1.glab005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glab011
            #add-point:BEFORE FIELD glab011
            {<point name="input.b.page1.glab011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glab011
            
            #add-point:AFTER FIELD glab011
            {<point name="input.a.page1.glab011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glab011
            #add-point:ON CHANGE glab011
            {<point name="input.g.page1.glab011" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.glab001
         ON ACTION controlp INFIELD glab001
            #add-point:ON ACTION controlp INFIELD glab001
            {<point name="input.c.page1.glab001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glab003
         ON ACTION controlp INFIELD glab003
            #add-point:ON ACTION controlp INFIELD glab003
            {<point name="input.c.page1.glab003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glab003_desc
         ON ACTION controlp INFIELD glab003_desc
            #add-point:ON ACTION controlp INFIELD glab003_desc
            {<point name="input.c.page1.glab003_desc" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glab005
         ON ACTION controlp INFIELD glab005
            #add-point:ON ACTION controlp INFIELD glab005
            {<point name="input.c.page1.glab005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glab011
         ON ACTION controlp INFIELD glab011
            #add-point:ON ACTION controlp INFIELD glab011
            {<point name="input.c.page1.glab011" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_glab_d[l_ac].* = g_glab_d_t.*
               CLOSE afai021_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_glab_d[l_ac].glab001,-263,1)
               LET g_glab_d[l_ac].* = g_glab_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE glab_t SET (glabld,glab002,glab001,glab003,glab005,glab011) = (g_faal_m.faalld, 
                   g_faal_m.faal001,g_glab_d[l_ac].glab001,g_glab_d[l_ac].glab003,g_glab_d[l_ac].glab005, 
                   g_glab_d[l_ac].glab011)
                WHERE glabent = g_enterprise AND glabld = g_faal_m.faalld 
                  AND glab002 = g_faal_m.faal001 
 
                  AND glab001 = g_glab_d_t.glab001 #項次   
                  AND glab003 = g_glab_d_t.glab003  
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("glab_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_glab_d[l_ac].* = g_glab_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("glab_t",SQLCA.sqlcode,1)
                     LET g_glab_d[l_ac].* = g_glab_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_faal_m.faalld
               LET gs_keys_bak[1] = g_faalld_t
               LET gs_keys[2] = g_faal_m.faal001
               LET gs_keys_bak[2] = g_faal001_t
               LET gs_keys[3] = g_glab_d[g_detail_idx].glab001
               LET gs_keys_bak[3] = g_glab_d_t.glab001
               LET gs_keys[4] = g_glab_d[g_detail_idx].glab003
               LET gs_keys_bak[4] = g_glab_d_t.glab003
               CALL afai021_update_b('glab_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_faal_m),util.JSON.stringify(g_glab_d_t)
               LET g_log2 = util.JSON.stringify(g_faal_m),util.JSON.stringify(g_glab_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL afai021_unlock_b("glab_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_glab_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_glab_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="afai021.input.head" ver="9" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_faal_m.faalld,g_faal_m.faal001,g_faal_m.faal002,g_faal_m.faal003,g_faal_m.faal004, 
          g_faal_m.faal005,g_faal_m.faalstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD faalld
            
            #add-point:AFTER FIELD faalld
            {<point name="input.a.faalld" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD faalld
            #add-point:BEFORE FIELD faalld
            {<point name="input.b.faalld" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE faalld
            #add-point:ON CHANGE faalld
            {<point name="input.g.faalld" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD faal001
            
            #add-point:AFTER FIELD faal001
            {<point name="input.a.faal001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD faal001
            #add-point:BEFORE FIELD faal001
            {<point name="input.b.faal001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE faal001
            #add-point:ON CHANGE faal001
            {<point name="input.g.faal001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD faal002
            #add-point:BEFORE FIELD faal002
            {<point name="input.b.faal002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD faal002
            
            #add-point:AFTER FIELD faal002
            {<point name="input.a.faal002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE faal002
            #add-point:ON CHANGE faal002
            {<point name="input.g.faal002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD faal003
            #add-point:BEFORE FIELD faal003
            {<point name="input.b.faal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD faal003
            
            #add-point:AFTER FIELD faal003
            {<point name="input.a.faal003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE faal003
            #add-point:ON CHANGE faal003
            {<point name="input.g.faal003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD faal004
            #add-point:BEFORE FIELD faal004
            {<point name="input.b.faal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD faal004
            
            #add-point:AFTER FIELD faal004
            {<point name="input.a.faal004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE faal004
            #add-point:ON CHANGE faal004
            {<point name="input.g.faal004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD faal005
            #add-point:BEFORE FIELD faal005
            {<point name="input.b.faal005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD faal005
            
            #add-point:AFTER FIELD faal005
            {<point name="input.a.faal005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE faal005
            #add-point:ON CHANGE faal005
            {<point name="input.g.faal005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD faalstus
            #add-point:BEFORE FIELD faalstus
            {<point name="input.b.faalstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD faalstus
            
            #add-point:AFTER FIELD faalstus
            {<point name="input.a.faalstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE faalstus
            #add-point:ON CHANGE faalstus
            {<point name="input.g.faalstus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.faalld
         ON ACTION controlp INFIELD faalld
            #add-point:ON ACTION controlp INFIELD faalld
            {<point name="input.c.faalld" />}
            #END add-point
 
         #Ctrlp:input.c.faal001
         ON ACTION controlp INFIELD faal001
            #add-point:ON ACTION controlp INFIELD faal001
            {<point name="input.c.faal001" />}
            #END add-point
 
         #Ctrlp:input.c.faal002
         ON ACTION controlp INFIELD faal002
            #add-point:ON ACTION controlp INFIELD faal002
            {<point name="input.c.faal002" />}
            #END add-point
 
         #Ctrlp:input.c.faal003
         ON ACTION controlp INFIELD faal003
            #add-point:ON ACTION controlp INFIELD faal003
            {<point name="input.c.faal003" />}
            #END add-point
 
         #Ctrlp:input.c.faal004
         ON ACTION controlp INFIELD faal004
            #add-point:ON ACTION controlp INFIELD faal004
            {<point name="input.c.faal004" />}
            #END add-point
 
         #Ctrlp:input.c.faal005
         ON ACTION controlp INFIELD faal005
            #add-point:ON ACTION controlp INFIELD faal005
            {<point name="input.c.faal005" />}
            #END add-point
 
         #Ctrlp:input.c.faalstus
         ON ACTION controlp INFIELD faalstus
            #add-point:ON ACTION controlp INFIELD faalstus
            {<point name="input.c.faalstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_faal_m.faalld,g_faal_m.faal001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO faal_t (faalent,faalld,faal001,faal002,faal003,faal004,faal005,faalstus,faalownid, 
                   faalowndp,faalcrtid,faalcrtdp,faalcrtdt)
               VALUES (g_enterprise,g_faal_m.faalld,g_faal_m.faal001,g_faal_m.faal002,g_faal_m.faal003, 
                   g_faal_m.faal004,g_faal_m.faal005,g_faal_m.faalstus,g_faal_m.faalownid,g_faal_m.faalowndp, 
                   g_faal_m.faalcrtid,g_faal_m.faalcrtdp,g_faal_m.faalcrtdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_faal_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL afai021_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE faal_t SET (faalld,faal001,faal002,faal003,faal004,faal005,faalstus,faalownid, 
                   faalowndp,faalcrtid,faalcrtdp,faalcrtdt) = (g_faal_m.faalld,g_faal_m.faal001,g_faal_m.faal002, 
                   g_faal_m.faal003,g_faal_m.faal004,g_faal_m.faal005,g_faal_m.faalstus,g_faal_m.faalownid, 
                   g_faal_m.faalowndp,g_faal_m.faalcrtid,g_faal_m.faalcrtdp,g_faal_m.faalcrtdt)
                WHERE faalent = g_enterprise AND faalld = g_faalld_t
                  AND faal001 = g_faal001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("faal_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_faal_m_t)
               LET g_log2 = util.JSON.stringify(g_faal_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_faalld_t = g_faal_m.faalld
            LET g_faal001_t = g_faal_m.faal001
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="afai021.input.other" ver="3" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD faalld
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD glab001
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="afai021.insert" ver="8" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION afai021_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_glab_d.clear()   
 
 
   INITIALIZE g_faal_m.* LIKE faal_t.*             #DEFAULT 設定
   
   LET g_faalld_t = NULL
   LET g_faal001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_faal_m.faalownid = g_user
      LET g_faal_m.faalowndp = g_dept
      LET g_faal_m.faalcrtid = g_user
      LET g_faal_m.faalcrtdp = g_dept 
      LET g_faal_m.faalcrtdt = cl_get_current()
      LET g_faal_m.faalmodid = ""
      LET g_faal_m.faalmoddt = ""
      LET g_faal_m.faalstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_faal_m.glaa014 = "N"
      LET g_faal_m.glaa008 = "N"
      LET g_faal_m.faal002 = "N"
      LET g_faal_m.faal003 = "N"
      LET g_faal_m.faal004 = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL afai021_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_faal_m.* = g_faal_m_t.*
         CALL afai021_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_glab_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_faalld_t = g_faal_m.faalld
   LET g_faal001_t = g_faal_m.faal001
 
   
   LET g_wc = g_wc,  
              " OR ( faalent = '" ||g_enterprise|| "' AND",
              " faalld = '", g_faal_m.faalld CLIPPED, "' "
              ," AND faal001 = '", g_faal_m.faal001 CLIPPED, "' "
 
              , ") "
   
   CLOSE afai021_cl
   
END FUNCTION
]]>
  </section>
  <section id="afai021.insert_b" ver="4" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION afai021_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO glab_t
                  (glabent,
                   glabld,glab002,
                   glab001,glab003
                   ,glab005,glab011) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_glab_d[g_detail_idx].glab005,g_glab_d[g_detail_idx].glab011)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("glab_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="afai021.lock_b" ver="5" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION afai021_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL afai021_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "glab_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN afai021_bcl USING g_enterprise,
                                       g_faal_m.faalld,g_faal_m.faal001,g_glab_d[g_detail_idx].glab001, 
                                           g_glab_d[g_detail_idx].glab003     
      IF SQLCA.sqlcode THEN
         CALL cl_err("afai021_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="afai021.main" ver="11" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("afa","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT faalld,'','','',faal001,'','','','','',faal002,faal003,faal004,faal005, 
       faalstus,faalownid,'',faalowndp,'',faalcrtid,'',faalcrtdp,'',faalcrtdt,faalmodid,'',faalmoddt", 
        
                      " FROM faal_t",
                      " WHERE faalent= ? AND faalld=? AND faal001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE afai021_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE faalld,faal001,faal002,faal003,faal004,faal005,faalstus,faalownid,faalowndp, 
       faalcrtid,faalcrtdp,faalcrtdt,faalmodid,faalmoddt,t1.glaal002 ,t2.faacl003 ,t3.oofa011 ,t4.ooefl003 , 
       t5.oofa011 ,t6.ooefl003 ,t7.oofa011",
               " FROM faal_t",
                              " LEFT JOIN glaal_t t1 ON t1.glaalent='"||g_enterprise||"' AND t1.glaalld=faalld AND t1.glaal001='"||g_dlang||"' ",
               " LEFT JOIN faacl_t t2 ON t2.faaclent='"||g_enterprise||"' AND t2.faacl001=faal001 AND t2.faacl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t3 ON t3.oofaent='"||g_enterprise||"' AND t3.oofa002='2' AND t3.oofa003=faalownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=faalowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t5 ON t5.oofaent='"||g_enterprise||"' AND t5.oofa002='2' AND t5.oofa003=faalcrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=faalcrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t7 ON t7.oofaent='"||g_enterprise||"' AND t7.oofa002='2' AND t7.oofa003=faalmodid  ",
 
               " WHERE faalent = '" ||g_enterprise|| "' AND faalld = ? AND faal001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE afai021_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_afai021 WITH FORM cl_ap_formpath("afa",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL afai021_init()   
 
      #進入選單 Menu (="N")
      CALL afai021_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_afai021
      
   END IF 
   
   CLOSE afai021_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="afai021.modify" ver="10" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION afai021_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_faal_m.faalld IS NULL
   OR g_faal_m.faal001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE afai021_master_referesh USING g_faal_m.faalld,g_faal_m.faal001 INTO g_faal_m.faalld,g_faal_m.faal001, 
       g_faal_m.faal002,g_faal_m.faal003,g_faal_m.faal004,g_faal_m.faal005,g_faal_m.faalstus,g_faal_m.faalownid, 
       g_faal_m.faalowndp,g_faal_m.faalcrtid,g_faal_m.faalcrtdp,g_faal_m.faalcrtdt,g_faal_m.faalmodid, 
       g_faal_m.faalmoddt,g_faal_m.faalld_desc,g_faal_m.faal001_desc,g_faal_m.faalownid_desc,g_faal_m.faalowndp_desc, 
       g_faal_m.faalcrtid_desc,g_faal_m.faalcrtdp_desc,g_faal_m.faalmodid_desc
 
   ERROR ""
  
   LET g_faalld_t = g_faal_m.faalld
   LET g_faal001_t = g_faal_m.faal001
 
   CALL s_transaction_begin()
   
   OPEN afai021_cl USING g_enterprise,g_faal_m.faalld,g_faal_m.faal001
   IF STATUS THEN
      CALL cl_err("OPEN afai021_cl:", STATUS, 1)
      CLOSE afai021_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE afai021_master_referesh USING g_faal_m.faalld,g_faal_m.faal001 INTO g_faal_m.faalld,g_faal_m.faal001, 
       g_faal_m.faal002,g_faal_m.faal003,g_faal_m.faal004,g_faal_m.faal005,g_faal_m.faalstus,g_faal_m.faalownid, 
       g_faal_m.faalowndp,g_faal_m.faalcrtid,g_faal_m.faalcrtdp,g_faal_m.faalcrtdt,g_faal_m.faalmodid, 
       g_faal_m.faalmoddt,g_faal_m.faalld_desc,g_faal_m.faal001_desc,g_faal_m.faalownid_desc,g_faal_m.faalowndp_desc, 
       g_faal_m.faalcrtid_desc,g_faal_m.faalcrtdp_desc,g_faal_m.faalmodid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_faal_m.faalld,SQLCA.sqlcode,0)
      CLOSE afai021_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL afai021_show()
   WHILE TRUE
      LET g_faalld_t = g_faal_m.faalld
      LET g_faal001_t = g_faal_m.faal001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_faal_m.faalmodid = g_user 
LET g_faal_m.faalmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL afai021_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_faal_m.* = g_faal_m_t.*
         CALL afai021_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE faal_t SET (faalmodid,faalmoddt) = (g_faal_m.faalmodid,g_faal_m.faalmoddt)
       WHERE faalent = g_enterprise AND faalld = g_faalld_t
         AND faal001 = g_faal001_t
 
                  
      #若單頭key欄位有變更
      IF g_faal_m.faalld != g_faalld_t 
      OR g_faal_m.faal001 != g_faal001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE glab_t SET glabld = g_faal_m.faalld
                                       ,glab002 = g_faal_m.faal001
 
          WHERE glabent = g_enterprise AND glabld = g_faalld_t
            AND glab002 = g_faal001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("glab_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("glab_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_faal_m.faalld,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE afai021_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_faal_m.faalld,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="afai021.modify_detail_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION afai021_modify_detail_chk(ps_record)
   {<Local define>}
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   {</Local define>}
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "glab003"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="afai021.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="afai021.other_function" ver="3" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="afai021.query" ver="5" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION afai021_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_glab_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL afai021_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL afai021_browser_fill("")
      CALL afai021_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL afai021_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL afai021_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="afai021.ref_show" ver="1" status="" src="s">
    <![CDATA[#+ 帶出reference資料
PRIVATE FUNCTION afai021_ref_show()
   {<Local define>}
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   {</Local define>}
   #add-point:ref_show段define
   {<point name="ref_show.define"/>}
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference
   {<point name="ref_show.head.reference"/>}
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_glab_d.getLength()
      #add-point:ref_show段d_reference
      {<point name="ref_show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
   LET l_ac = l_ac_t
 
END FUNCTION
]]>
  </section>
  <section id="afai021.reproduce" ver="7" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION afai021_reproduce()
   DEFINE l_newno     LIKE faal_t.faalld 
   DEFINE l_oldno     LIKE faal_t.faalld 
   DEFINE l_newno02     LIKE faal_t.faal001 
   DEFINE l_oldno02     LIKE faal_t.faal001 
 
   DEFINE l_master    RECORD LIKE faal_t.*
   DEFINE l_detail    RECORD LIKE glab_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   
   IF g_faal_m.faalld IS NULL
   OR g_faal_m.faal001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_faalld_t = g_faal_m.faalld
   LET g_faal001_t = g_faal_m.faal001
 
    
   LET g_faal_m.faalld = ""
   LET g_faal_m.faal001 = ""
 
    
   CALL afai021_set_entry('a')
   CALL afai021_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_faal_m.faalownid = g_user
      LET g_faal_m.faalowndp = g_dept
      LET g_faal_m.faalcrtid = g_user
      LET g_faal_m.faalcrtdp = g_dept 
      LET g_faal_m.faalcrtdt = cl_get_current()
      LET g_faal_m.faalmodid = ""
      LET g_faal_m.faalmoddt = ""
      LET g_faal_m.faalstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL afai021_input("r")
   
      LET g_faal_m.faalld_desc = ''
   DISPLAY BY NAME g_faal_m.faalld_desc
   LET g_faal_m.faal001_desc = ''
   DISPLAY BY NAME g_faal_m.faal001_desc
 
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " faalld = '", g_faal_m.faalld CLIPPED, "' "
              ," AND faal001 = '", g_faal_m.faal001 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="afai021.set_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION afai021_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("faalld,faal001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="afai021.set_entry_b" ver="3" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION afai021_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="afai021.set_no_entry" ver="4" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION afai021_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("faalld,faal001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="afai021.set_no_entry_b" ver="3" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION afai021_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="afai021.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION afai021_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_faal_m.faalld
   LET g_pk_array[1].column = 'faalld'
   LET g_pk_array[2].values = g_faal_m.faal001
   LET g_pk_array[2].column = 'faal001'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="afai021.show" ver="7" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION afai021_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_faal_m_t.* = g_faal_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL afai021_b_fill() #單身填充
      CALL afai021_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_faal_m.faalownid_desc = cl_get_username(g_faal_m.faalownid)
      #LET g_faal_m.faalowndp_desc = cl_get_deptname(g_faal_m.faalowndp)
      #LET g_faal_m.faalcrtid_desc = cl_get_username(g_faal_m.faalcrtid)
      #LET g_faal_m.faalcrtdp_desc = cl_get_deptname(g_faal_m.faalcrtdp)
      #LET g_faal_m.faalmodid_desc = cl_get_username(g_faal_m.faalmodid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL afai021_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_faal_m.faalld,g_faal_m.faalld_desc,g_faal_m.glaacomp,g_faal_m.glaacomp_desc,g_faal_m.faal001, 
       g_faal_m.faal001_desc,g_faal_m.glaa004,g_faal_m.glaa004_desc,g_faal_m.glaa014,g_faal_m.glaa008, 
       g_faal_m.faal002,g_faal_m.faal003,g_faal_m.faal004,g_faal_m.faal005,g_faal_m.faalstus,g_faal_m.faalownid, 
       g_faal_m.faalownid_desc,g_faal_m.faalowndp,g_faal_m.faalowndp_desc,g_faal_m.faalcrtid,g_faal_m.faalcrtid_desc, 
       g_faal_m.faalcrtdp,g_faal_m.faalcrtdp_desc,g_faal_m.faalcrtdt,g_faal_m.faalmodid,g_faal_m.faalmodid_desc, 
       g_faal_m.faalmoddt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_faal_m.faalstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_glab_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL afai021_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="afai021.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="afai021.state_change" ver="4" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION afai021_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_faal_m.faalld IS NULL
      OR g_faal_m.faal001 IS NULL
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_faal_m.faalstus
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION inactive
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.inactive"/>}
         #end add-point
         EXIT MENU
      ON ACTION active
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.active"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE faal_t SET faalstus = lc_state 
    WHERE faalent = g_enterprise AND faalld = g_faal_m.faalld
      AND faal001 = g_faal_m.faal001
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
      LET g_faal_m.faalstus = lc_state
      DISPLAY BY NAME g_faal_m.faalstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="afai021.ui_browser_refresh" ver="5" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION afai021_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_faalld = g_faal_m.faalld 
         AND g_browser[l_i].b_faal001 = g_faal_m.faal001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="afai021.ui_detailshow" ver="2" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION afai021_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="afai021.ui_dialog" ver="17" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION afai021_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL afai021_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL afai021_browser_fill("")
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_faalld = g_faalld_t
               AND g_browser[li_idx].b_faal001 = g_faal001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
 
 
               
      
         
        
         DISPLAY ARRAY g_glab_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL afai021_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL afai021_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL afai021_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL afai021_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL afai021_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL afai021_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL afai021_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL afai021_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL afai021_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            CALL afai021_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afai021_idx_chk()
            
         ON ACTION previous
            CALL afai021_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afai021_idx_chk()
            
         ON ACTION jump
            CALL afai021_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afai021_idx_chk()
            
         ON ACTION next
            CALL afai021_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afai021_idx_chk()
            
         ON ACTION last
            CALL afai021_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afai021_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL afai021_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL afai021_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL afai021_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL afai021_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL afai021_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL afai021_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL afai021_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL afai021_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL afai021_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="afai021.ui_headershow" ver="5" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION afai021_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_faal_m.faalld = g_browser[g_current_idx].b_faalld   
   LET g_faal_m.faal001 = g_browser[g_current_idx].b_faal001   
 
   EXECUTE afai021_master_referesh USING g_faal_m.faalld,g_faal_m.faal001 INTO g_faal_m.faalld,g_faal_m.faal001, 
       g_faal_m.faal002,g_faal_m.faal003,g_faal_m.faal004,g_faal_m.faal005,g_faal_m.faalstus,g_faal_m.faalownid, 
       g_faal_m.faalowndp,g_faal_m.faalcrtid,g_faal_m.faalcrtdp,g_faal_m.faalcrtdt,g_faal_m.faalmodid, 
       g_faal_m.faalmoddt,g_faal_m.faalld_desc,g_faal_m.faal001_desc,g_faal_m.faalownid_desc,g_faal_m.faalowndp_desc, 
       g_faal_m.faalcrtid_desc,g_faal_m.faalcrtdp_desc,g_faal_m.faalmodid_desc
   CALL afai021_show()
   
END FUNCTION
]]>
  </section>
  <section id="afai021.unlock_b" ver="3" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION afai021_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE afai021_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="afai021.update_b" ver="4" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION afai021_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "glab_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE glab_t 
         SET (glabld,glab002,
              glab001,glab003
              ,glab005,glab011) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_glab_d[g_detail_idx].glab005,g_glab_d[g_detail_idx].glab011) 
         WHERE glabent = g_enterprise AND glabld = ps_keys_bak[1] AND glab002 = ps_keys_bak[2] AND glab001 = ps_keys_bak[3] AND glab003 = ps_keys_bak[4]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("glab_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("glab_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
