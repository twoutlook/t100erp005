#該程式未解開Section, 採用最新樣板產出!
{<section id="axcp501.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0004(2015-01-30 17:40:14), PR版次:0004(1900-01-01 00:00:00)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000077
#+ Filename...: axcp501
#+ Description: 成本次要素計算作業
#+ Creator....: 00378(2015-01-30 17:40:14)
#+ Modifier...: 00378 -SD/PR- 00000
 
{</section>}
 
{<section id="axcp501.global" >}
#應用 p01 樣板自動產生(Version:18)
#add-point:填寫註解說明
#Memos
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
 
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE g_chk_jobid          LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
        glaald       LIKE type_t.chr5, 
        xcat001      LIKE type_t.chr10, 
        xcat001_desc LIKE type_t.chr80, 
        field_flag   LIKE type_t.chr1, 
        yy           LIKE type_t.chr80, 
        pp           LIKE type_t.chr80,         
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       imaa001 LIKE type_t.chr500, 
   imaa009 LIKE type_t.chr10, 
   imaa003 LIKE type_t.chr10, 
   glaald LIKE type_t.chr5, 
   xcat001 LIKE type_t.chr10, 
   xcat001_desc LIKE type_t.chr80, 
   field_flag LIKE type_t.chr1, 
   yy LIKE type_t.num5, 
   pp LIKE type_t.num5, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
DEFINE g_glaa003        LIKE glaa_t.glaa003
DEFINE g_ref_fields     DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields     DYNAMIC ARRAY OF VARCHAR(500) 
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
 
#add-point:傳入參數說明

#end add-point
 
{</section>}
 
{<section id="axcp501.main" >}
MAIN
   #add-point:main段define (客製用)
   
   #end add-point 
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define 
   
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   
   #end add-point
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
     #CALL util.JSON.parse(ls_js,g_master)   #p類主要使用l_param,此處不解析
      #add-point:Service Call
      
      #end add-point
      CALL axcp501_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axcp501 WITH FORM cl_ap_formpath("axc",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL axcp501_init()
 
      #進入選單 Menu (="N")
      CALL axcp501_ui_dialog()
 
      #add-point:畫面關閉前
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_axcp501
   END IF
 
   #add-point:作業離開前
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="axcp501.init" >}
#+ 初始化作業
PRIVATE FUNCTION axcp501_init()
 
   #add-point:init段define (客製用)
   
   #end add-point
   #add-point:ui_dialog段define 
   
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axcp501.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION axcp501_ui_dialog()
 
   #add-point:ui_dialog段define (客製用)
   
   #end add-point
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define 
   DEFINE l_success          LIKE type_t.num5
   DEFINE l_errno            LIKE gzze_t.gzze001
   DEFINE l_date             LIKE type_t.dat
   DEFINE l_master_t         type_master   
   #end add-point
   
   #add-point:ui_dialog段before dialog
   LET l_date = cl_get_today()
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:3)
         INPUT BY NAME g_master.glaald,g_master.xcat001,g_master.field_flag,g_master.yy,g_master.pp 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前 name="input.m.before_input"
               CALL s_axcp500_get_input_default(g_site,l_date,'','')
                    RETURNING g_master.glaald,g_master.xcat001,g_master.field_flag,g_master.yy,g_master.pp 
               DISPLAY BY NAME g_master.glaald,g_master.xcat001,g_master.field_flag,g_master.yy,g_master.pp 
               LET l_master_t.* = g_master.*
               
               #end add-point
         
                     #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glaald
            #add-point:BEFORE FIELD glaald name="input.b.glaald"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glaald
            
            #add-point:AFTER FIELD glaald name="input.a.glaald"
            IF NOT cl_null(g_master.glaald) AND 
              (cl_null(l_master_t.glaald) OR l_master_t.glaald <> g_master.glaald) THEN
               CALL s_fin_ld_chk(g_master.glaald,g_user,'N') 
                    RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code   = l_errno
                  LET g_errparam.extend = g_master.glaald
                  #160321-00016#41 s983961--add(s)
                  LET g_errparam.replace[1] ='agli010'
                  LET g_errparam.replace[2] = cl_get_progname('agli010',g_lang,"2")
                  LET g_errparam.exeprog ='agli010'
                  #160321-00016#41 s983961--add(e)
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
               END IF
               SELECT glaa003 INTO g_glaa003 FROM glaa_t
                WHERE glaaent = g_enterprise
                  AND glaald  = g_master.glaald
                  
               CALL s_axcp500_get_input_default(g_site,l_date,g_master.glaald,'')
                    RETURNING g_master.glaald,g_master.xcat001,g_master.field_flag,g_master.yy,g_master.pp 
               DISPLAY BY NAME g_master.glaald,g_master.xcat001,g_master.field_flag,g_master.yy,g_master.pp                   
            END IF
            LET l_master_t.glaald = g_master.glaald
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glaald
            #add-point:ON CHANGE glaald name="input.g.glaald"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcat001
            
            #add-point:AFTER FIELD xcat001 name="input.a.xcat001"
            IF NOT cl_null(g_master.xcat001) AND 
              (cl_null(l_master_t.xcat001) OR l_master_t.xcat001 <> g_master.xcat001) THEN
               CALL s_axcp500_chk_xcat001(g_master.glaald,g_master.xcat001)
                    RETURNING l_success,g_master.field_flag
               IF NOT l_success THEN
                  NEXT FIELD CURRENT
               END IF
               
               CALL s_axcp500_get_input_default(g_site,l_date,g_master.glaald,g_master.xcat001)
                    RETURNING g_master.glaald,g_master.xcat001,g_master.field_flag,g_master.yy,g_master.pp 
               DISPLAY BY NAME g_master.glaald,g_master.xcat001,g_master.field_flag,g_master.yy,g_master.pp                
               
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_master.xcat001
               CALL ap_ref_array2(g_ref_fields,"SELECT xcatl003 FROM xcatl_t WHERE xcatlent='"||g_enterprise||"' AND xcatl001=? AND xcatl002='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_master.xcat001_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_master.xcat001_desc  
               DISPLAY BY NAME g_master.field_flag
            END IF
            LET l_master_t.xcat001 = g_master.xcat001

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcat001
            #add-point:BEFORE FIELD xcat001 name="input.b.xcat001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcat001
            #add-point:ON CHANGE xcat001 name="input.g.xcat001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD field_flag
            #add-point:BEFORE FIELD field_flag name="input.b.field_flag"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD field_flag
            
            #add-point:AFTER FIELD field_flag name="input.a.field_flag"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE field_flag
            #add-point:ON CHANGE field_flag name="input.g.field_flag"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD yy
            #add-point:BEFORE FIELD yy name="input.b.yy"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD yy
            
            #add-point:AFTER FIELD yy name="input.a.yy"
            IF g_master.yy < 0 THEN
               NEXT FIELD CURRENT
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE yy
            #add-point:ON CHANGE yy name="input.g.yy"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pp
            #add-point:BEFORE FIELD pp name="input.b.pp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pp
            
            #add-point:AFTER FIELD pp name="input.a.pp"
            IF g_master.pp < 0 THEN
               NEXT FIELD CURRENT
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pp
            #add-point:ON CHANGE pp name="input.g.pp"
            
            #END add-point 
 
 
 
                     #Ctrlp:input.c.glaald
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glaald
            #add-point:ON ACTION controlp INFIELD glaald name="input.c.glaald"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_master.glaald            
            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            CALL q_authorised_ld()     
            LET g_master.glaald = g_qryparam.return1    
            DISPLAY g_master.glaald TO glaald   
            NEXT FIELD glaald      
            #END add-point
 
 
         #Ctrlp:input.c.xcat001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcat001
            #add-point:ON ACTION controlp INFIELD xcat001 name="input.c.xcat001"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_master.xcat001            
            LET g_qryparam.where = " xcat003 = '1'"    #期末
            CALL q_xcat001()     
            LET g_master.xcat001 = g_qryparam.return1    
            DISPLAY g_master.xcat001 TO xcat001   
            NEXT FIELD xcat001   
            #END add-point
 
 
         #Ctrlp:input.c.field_flag
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD field_flag
            #add-point:ON ACTION controlp INFIELD field_flag name="input.c.field_flag"
            
            #END add-point
 
 
         #Ctrlp:input.c.yy
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD yy
            #add-point:ON ACTION controlp INFIELD yy name="input.c.yy"
            IF g_master.yy < 0 THEN
               NEXT FIELD yy
            END IF
            #END add-point
 
 
         #Ctrlp:input.c.pp
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pp
            #add-point:ON ACTION controlp INFIELD pp name="input.c.pp"
            
            #END add-point
 
 
 
               
            AFTER INPUT
               #add-point:資料輸入後 name="input.m.after_input"
            IF cl_null(g_master.glaald) THEN
               NEXT FIELD glaald
            ELSE
               CALL s_fin_ld_chk(g_master.glaald,g_user,'N') 
                    RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code   = l_errno
                  LET g_errparam.extend = g_master.glaald
                  #160321-00016#41 s983961--add(s)
                  LET g_errparam.replace[1] ='agli010'
                  LET g_errparam.replace[2] = cl_get_progname('agli010',g_lang,"2")
                  LET g_errparam.exeprog ='agli010'
                  #160321-00016#41 s983961--add(e)
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
               END IF
               SELECT glaa003 INTO g_glaa003 FROM glaa_t
                WHERE glaaent = g_enterprise
                  AND glaald  = g_master.glaald
            END IF
            
            IF cl_null(g_master.xcat001) THEN
               NEXT FIELD xcat001
            ELSE
               CALL s_axcp500_chk_xcat001(g_master.glaald,g_master.xcat001)
                    RETURNING l_success,g_master.field_flag
               IF NOT l_success THEN
                  NEXT FIELD xcat001
               END IF
            END IF  

            IF cl_null(g_master.yy) THEN
               NEXT FIELD yy
            END IF
            
            IF cl_null(g_master.pp) THEN
               NEXT FIELD pp
            END IF
            
            IF NOT cl_null(g_master.yy) AND NOT cl_null(g_master.pp) THEN
               IF NOT s_fin_date_chk_period(g_glaa003,g_master.yy,g_master.pp) THEN
                  LET g_master.pp = ''
                  DISPLAY BY NAME g_master.pp
                  NEXT FIELD yy
               END IF
            END IF
            
            CALL s_axcp500_chk_cal(g_master.glaald,g_master.xcat001,g_master.yy,g_master.pp)
                 RETURNING l_success
            IF NOT l_success THEN
               CONTINUE DIALOG
            END IF
               #end add-point
               
            #add-point:其他管控(on row change, etc...) name="input.other"
            
            #end add-point
         END INPUT
 
 
 
         
         #應用 a58 樣板自動產生(Version:3)
         CONSTRUCT BY NAME g_master.wc ON imaa001,imaa009,imaa003
            BEFORE CONSTRUCT
               #add-point:cs段before_construct name="cs.head.before_construct"
               
               #end add-point 
         
            #公用欄位開窗相關處理
            
               
            #一般欄位開窗相關處理    
                     #Ctrlp:construct.c.imaa001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa001
            #add-point:ON ACTION controlp INFIELD imaa001 name="construct.c.imaa001"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                     
            DISPLAY g_qryparam.return1 TO imaa001  
            NEXT FIELD imaa001                     
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa001
            #add-point:BEFORE FIELD imaa001 name="construct.b.imaa001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa001
            
            #add-point:AFTER FIELD imaa001 name="construct.a.imaa001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.imaa009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa009
            #add-point:ON ACTION controlp INFIELD imaa009 name="construct.c.imaa009"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001() 
#           CALL q_imaa009()
            DISPLAY g_qryparam.return1 TO imaa009 
            NEXT FIELD imaa009                     
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa009
            #add-point:BEFORE FIELD imaa009 name="construct.b.imaa009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa009
            
            #add-point:AFTER FIELD imaa009 name="construct.a.imaa009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.imaa003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa003
            #add-point:ON ACTION controlp INFIELD imaa003 name="construct.c.imaa003"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imck001() 
            DISPLAY g_qryparam.return1 TO imaa003 
            NEXT FIELD imaa003                     
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa003
            #add-point:BEFORE FIELD imaa003 name="construct.b.imaa003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa003
            
            #add-point:AFTER FIELD imaa003 name="construct.a.imaa003"
            
            #END add-point
            
 
 
 
            
            #add-point:其他管控 name="cs.other"
            
            #end add-point
            
         END CONSTRUCT
 
 
 
      
         #add-point:ui_dialog段construct
         
         #end add-point
         #add-point:ui_dialog段input
         
         #end add-point
         #add-point:ui_dialog段自定義display array
         
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL axcp501_get_buffer(l_dialog)
            #add-point:ui_dialog段before dialog
            
            #end add-point
 
         ON ACTION batch_execute
            LET g_action_choice = "batch_execute"
            ACCEPT DIALOG
 
         #add-point:ui_dialog段before_qbeclear
         
         #end add-point
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear
            
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL axcp501_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
      
      LET lc_param.wc = g_master.wc    #把畫面上的wc傳遞到參數變數
      #請在下方的add-point內進行把畫面的輸入資料(g_master)轉換到傳遞參數變數(lc_param)的動作
      #add-point:ui_dialog段exit dialog
      
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL axcp501_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = axcp501_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
 
{</section>}
 
{<section id="axcp501.transfer_argv" >}
#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION axcp501_transfer_argv(ls_js)
 
   #add-point:transfer_agrv段define (客製用)
   
   #end add-point
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define 
   
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容
   
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
 
{</section>}
 
{<section id="axcp501.process" >}
#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION axcp501_process(ls_js)
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_p01_status LIKE type_t.num5
   #add-point:process段define 
   DEFINE l_success   LIKE type_t.num5
   #end add-point
 
  #INITIALIZE lc_param TO NULL           #p類不可以清空
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
   LET li_p01_status = 1
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理
   
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE axcp501_process_cs CURSOR FROM ls_sql
#  FOREACH axcp501_process_cs INTO
   #add-point:process段process
   
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      CALL s_axcp501_create_temp_table()
           RETURNING l_success
      IF NOT l_success THEN
         RETURN 
      END IF
      CALL s_axcp501_cal(g_master.glaald,g_master.xcat001,g_master.yy,g_master.pp,g_master.wc)
           RETURNING l_success
          
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      
      #end add-point
      CALL cl_schedule_exec_call(li_p01_status)
   END IF
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL axcp501_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="axcp501.get_buffer" >}
PRIVATE FUNCTION axcp501_get_buffer(p_dialog)
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE p_dialog   ui.DIALOG
   #add-point:process段define
   
   #end add-point
 
   
   LET g_master.glaald = p_dialog.getFieldBuffer('glaald')
   LET g_master.xcat001 = p_dialog.getFieldBuffer('xcat001')
   LET g_master.field_flag = p_dialog.getFieldBuffer('field_flag')
   LET g_master.yy = p_dialog.getFieldBuffer('yy')
   LET g_master.pp = p_dialog.getFieldBuffer('pp')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axcp501.msgcentre_notify" >}
PRIVATE FUNCTION axcp501_msgcentre_notify()
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE lc_state LIKE type_t.chr5
   #add-point:process段define
   
   #end add-point
 
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = "process"
 
   #add-point:msgcentre其他通知
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="axcp501.other_function" readonly="Y" >}
#add-point:自定義元件(Function)

#end add-point
 
{</section>}
 
