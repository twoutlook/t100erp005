#該程式未解開Section, 採用最新樣板產出!
{<section id="axcp130.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0005(2014-09-03 11:56:04), PR版次:0005(2016-11-18 09:58:32)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000085
#+ Filename...: axcp130
#+ Description: 聯產品入庫資料產生作業
#+ Creator....: 00768(2014-09-02 22:37:12)
#+ Modifier...: 00768 -SD/PR- 02295
 
{</section>}
 
{<section id="axcp130.global" >}
#應用 p01 樣板自動產生(Version:19)
#add-point:填寫註解說明 name="global.memo" name="global.memo"
#160318-00025#46  2016/04/28   By 07959   將重複內容的錯誤訊息置換為公用錯誤訊息(r.v)
#161019-00033#1   2016/10/20 By 02295      应检查计算的年度+期别在成本关账日期之后（S-FIN-6012）
#161117-00031#1   2016/11/18 By 02295    将判断条件小于等于改成等于
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE g_chk_jobid          LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable) name="global.parameter"
   
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       glaacomp LIKE type_t.chr500, 
   glaacomp_desc LIKE type_t.chr80, 
   year LIKE type_t.chr500, 
   month LIKE type_t.chr500, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable) name="global.variable"
DEFINE g_master_t type_master

DEFINE g_bdate      LIKE glav_t.glav004 #起始年度+期別對應的起始截止日期
DEFINE g_edate      LIKE glav_t.glav004
DEFINE g_success    LIKE type_t.chr1
DEFINE g_glaa003    LIKE glaa_t.glaa003 #会计周期参照表号
DEFINE g_glaa010    LIKE glaa_t.glaa010 #現行年度
DEFINE g_glaa011    LIKE glaa_t.glaa011 #現行期別
DEFINE g_glaa013    LIKE glaa_t.glaa013 #账套关账日期  #fengmy 150108
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明 name="global.argv"

#end add-point
 
{</section>}
 
{<section id="axcp130.main" >}
MAIN
   #add-point:main段define (客製用) name="main.define_customerization"
   
   #end add-point 
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define name="main.define"
   
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義 name="main.before_ap_init"
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js name="main.background"
   
   #end add-point
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
     #CALL util.JSON.parse(ls_js,g_master)   #p類主要使用l_param,此處不解析
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
      CALL axcp130_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axcp130 WITH FORM cl_ap_formpath("axc",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL axcp130_init()
 
      #進入選單 Menu (="N")
      CALL axcp130_ui_dialog()
 
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_axcp130
   END IF
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="axcp130.init" >}
#+ 初始化作業
PRIVATE FUNCTION axcp130_init()
 
   #add-point:init段define (客製用) name="init.define_customerization"
   
   #end add-point
   #add-point:ui_dialog段define name="init.define"
   
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化 name="init.init"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axcp130.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION axcp130_ui_dialog()
 
   #add-point:ui_dialog段define (客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define name="ui_dialog.define"
   DEFINE l_success   LIKE type_t.num5
   #end add-point
   
   #add-point:ui_dialog段before dialog name="ui_dialog.before_dialog"
   
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2 name="ui_dialog.before_dialog2"
      
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:3)
         INPUT BY NAME g_master.glaacomp,g_master.year,g_master.month 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前 name="input.m.before_input"
               
               #end add-point
         
                     #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glaacomp
            
            #add-point:AFTER FIELD glaacomp name="input.a.glaacomp"
            IF NOT cl_null(g_master.glaacomp) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_master.glaacomp
               #160318-00025#46  2016/04/28  by pengxin  add(S)
               LET g_errshow = TRUE #是否開窗 
               LET g_chkparam.err_str[1] = "aoo-00095:sub-01302|aooi125|",cl_get_progname("aooi125",g_lang,"2"),"|:EXEPROGaooi125"
               #160318-00025#46  2016/04/28  by pengxin  add(E)
               IF NOT cl_chk_exist('v_ooef001_15') THEN
                  NEXT FIELD glaacomp
               END IF
               
               CALL s_desc_get_department_desc(g_master.glaacomp) RETURNING g_master.glaacomp_desc
               DISPLAY BY NAME g_master.glaacomp_desc
               
               SELECT glaa003,glaa010,glaa011 INTO g_glaa003,g_glaa010,g_glaa011 FROM glaa_t
                WHERE glaaent = g_enterprise
                  AND glaa014 = 'Y'  #主帐套
                  AND glaacomp = g_master.glaacomp 
               CALL cl_get_para(g_enterprise,g_master.glaacomp,'S-FIN-6010') RETURNING g_glaa010 #fengmy 150108
               CALL cl_get_para(g_enterprise,g_master.glaacomp,'S-FIN-6011') RETURNING g_glaa011 #fengmy 150108
               IF cl_null(g_master.year) THEN #年度
                  LET g_master.year  = g_glaa010
                  DISPLAY BY NAME g_master.year
               END IF
               IF cl_null(g_master.month) THEN #期別
                  LET g_master.month = g_glaa011
                  DISPLAY BY NAME g_master.month
               END IF               
               
            END IF 

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glaacomp
            #add-point:BEFORE FIELD glaacomp name="input.b.glaacomp"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glaacomp
            #add-point:ON CHANGE glaacomp name="input.g.glaacomp"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD year
            #add-point:BEFORE FIELD year name="input.b.year"
            IF cl_null(g_master.glaacomp) THEN
               #组织为空，请先输入组织!
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axc-00120'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD glaacomp
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD year
            
            #add-point:AFTER FIELD year name="input.a.year"
            IF NOT cl_null(g_master.year) THEN
               IF NOT s_fin_date_chk_year(g_master.year) THEN
                  #年度数据输入错误!
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'aoo-00113'
                  LET g_errparam.extend = g_master.year
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
            END IF
            #161019-00033#1---add---s
            CALL axcp130_date_chk()
            IF NOT cl_null(g_errno) THEN
               LET g_errparam.extend = g_master.year
               LET g_errparam.code   = g_errno
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               NEXT FIELD CURRENT                       
            END IF      
            #161019-00033#1---add---e             
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE year
            #add-point:ON CHANGE year name="input.g.year"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD month
            #add-point:BEFORE FIELD month name="input.b.month"
            IF cl_null(g_master.year) THEN
               #请先录入年度!
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'agl-00183'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD year
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD month
            
            #add-point:AFTER FIELD month name="input.a.month"
            IF NOT cl_null(g_master.month) THEN                      
               IF NOT s_fin_date_chk_period(g_glaa003,g_master.year,g_master.month) THEN
                  #请确认"月份"数据填写是否正确!
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00106'
                  LET g_errparam.extend = g_master.month
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
            END IF
            #161019-00033#1---add---s
            CALL axcp130_date_chk()
            IF NOT cl_null(g_errno) THEN
               LET g_errparam.extend = g_master.month
               LET g_errparam.code   = g_errno
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               NEXT FIELD CURRENT                       
            END IF      
            #161019-00033#1---add---e             
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE month
            #add-point:ON CHANGE month name="input.g.month"
            
            #END add-point 
 
 
 
                     #Ctrlp:input.c.glaacomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glaacomp
            #add-point:ON ACTION controlp INFIELD glaacomp name="input.c.glaacomp"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_master.glaacomp             #給予default值
            LET g_qryparam.where = " ooef003 = 'Y'"
            CALL q_ooef001()                                #呼叫開窗
            LET g_master.glaacomp = g_qryparam.return1        
            DISPLAY g_master.glaacomp TO glaacomp              #

            CALL s_desc_get_department_desc(g_master.glaacomp) RETURNING g_master.glaacomp_desc
            DISPLAY BY NAME g_master.glaacomp_desc

            NEXT FIELD glaacomp                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.year
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD year
            #add-point:ON ACTION controlp INFIELD year name="input.c.year"
            
            #END add-point
 
 
         #Ctrlp:input.c.month
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD month
            #add-point:ON ACTION controlp INFIELD month name="input.c.month"
            
            #END add-point
 
 
 
               
            AFTER INPUT
               #add-point:資料輸入後 name="input.m.after_input"
               #fengmy 150108-----mark---begin
#               IF g_master.year*12+g_master.month < g_glaa010*12+g_glaa011 THEN
#                  #小於成本結算年月,請重新輸入!
#                  INITIALIZE g_errparam TO NULL
#                  LET g_errparam.code = 'axc-00122'
#                  LET g_errparam.extend = ''
#                  LET g_errparam.popup = TRUE
#                  CALL cl_err()
#                  NEXT FIELD year
#               END IF
               #fengmy 150108-----mark---end               
               #end add-point
               
            #add-point:其他管控(on row change, etc...) name="input.other"
            
            #end add-point
         END INPUT
 
 
 
         
         
      
         #add-point:ui_dialog段construct name="ui_dialog.more_construct"
         
         #end add-point
         #add-point:ui_dialog段input name="ui_dialog.more_input"
         
         #end add-point
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL axcp130_get_buffer(l_dialog)
            #add-point:ui_dialog段before dialog name="ui_dialog.before_dialog3"
            
            #end add-point
 
         ON ACTION batch_execute
            LET g_action_choice = "batch_execute"
            ACCEPT DIALOG
 
         #add-point:ui_dialog段before_qbeclear name="ui_dialog.before_qbeclear"
         
         #end add-point
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear name="ui_dialog.qbeclear"
            INITIALIZE g_master.* TO NULL
            #g_master.glaacomp,g_master.year,g_master.month
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action name="ui_dialog.more_action"
         
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL axcp130_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
      
      LET lc_param.wc = g_master.wc    #把畫面上的wc傳遞到參數變數
      #請在下方的add-point內進行把畫面的輸入資料(g_master)轉換到傳遞參數變數(lc_param)的動作
      #add-point:ui_dialog段exit dialog name="process.exit_dialog"
      
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL axcp130_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = axcp130_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule name="process.after_schedule"
         
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
 
{</section>}
 
{<section id="axcp130.transfer_argv" >}
#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION axcp130_transfer_argv(ls_js)
 
   #add-point:transfer_agrv段define (客製用) name="transfer_agrv.define_customerization"
   
   #end add-point
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define name="transfer_agrv.define"
   
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容 name="transfer.argv.define"
   
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
 
{</section>}
 
{<section id="axcp130.process" >}
#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION axcp130_process(ls_js)
 
   #add-point:process段define (客製用) name="process.define_customerization"
   
   #end add-point
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_p01_status LIKE type_t.num5
   #add-point:process段define name="process.define"
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_hascnt    LIKE type_t.num5
   #end add-point
 
  #INITIALIZE lc_param TO NULL           #p類不可以清空
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
   LET li_p01_status = 1
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理 name="process.pre_process"
   CALL s_fin_date_get_period_range(g_glaa003,g_master.year,g_master.month)
       RETURNING g_bdate,g_edate
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress name="process.count_progress"
      LET li_count = 3
      CALL cl_progress_bar_no_window(li_count)
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE axcp130_process_cs CURSOR FROM ls_sql
#  FOREACH axcp130_process_cs INTO
   #add-point:process段process name="process.process"
   
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理 name="process.foreground_finish"
      SELECT COUNT(*) INTO l_hascnt FROM xcbp_t
       WHERE xcbpent = g_enterprise
         AND xcbpsite IN ( SELECT ooef001 FROM ooef_t 
                            WHERE ooefent = g_enterprise AND ooef201 = 'Y'   #据点
                              AND ooef017 = g_master.glaacomp)  #法人归属
         AND xcbp001 = g_master.year  #年度
         AND xcbp002 = g_master.month #期別
      IF l_hascnt > 0 THEN
         #資料已存在是否重新處理?
         IF NOT cl_ask_confirm("axc-00123") THEN
            RETURN
         END IF
      ELSE
         #是否确定执行本作业?
         IF NOT cl_ask_confirm("lib-012") THEN
            RETURN
         END IF
      END IF
      
      CALL s_transaction_begin()  #事务开始
      CALL cl_err_collect_init()  #汇总错误讯息初始化
      LET g_success = 'Y'
      
      CALL axcp130_execute()
      
      CALL cl_err_collect_show()  #显示错误讯息汇总
      CALL s_transaction_end(g_success,0)  #事务结束
      IF g_success = 'Y' THEN
         #执行成功
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'adz-00217'
         LET g_errparam.extend = ''
         LET g_errparam.popup = FALSE
         CALL cl_err()
      ELSE
         #执行失败
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'adz-00218'
         LET g_errparam.extend = ''
         LET g_errparam.popup = FALSE
         CALL cl_err()
      END IF
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理 name="process.background_finish"

      CALL s_transaction_begin()  #事务开始
      CALL cl_err_collect_init()  #汇总错误讯息初始化
      LET g_success = 'Y'
      
      CALL axcp130_execute()
      
      CALL cl_err_collect_show()  #显示错误讯息汇总
      CALL s_transaction_end(g_success,0)  #事务结束
      
      #end add-point
      CALL cl_schedule_exec_call(li_p01_status)
   END IF
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL axcp130_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="axcp130.get_buffer" >}
PRIVATE FUNCTION axcp130_get_buffer(p_dialog)
 
   #add-point:process段define (客製用) name="get_buffer.define_customerization"
   
   #end add-point
   DEFINE p_dialog   ui.DIALOG
   #add-point:process段define name="get_buffer.define"
   
   #end add-point
 
   
   LET g_master.glaacomp = p_dialog.getFieldBuffer('glaacomp')
   LET g_master.year = p_dialog.getFieldBuffer('year')
   LET g_master.month = p_dialog.getFieldBuffer('month')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理 name="get_buffer.others"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axcp130.msgcentre_notify" >}
PRIVATE FUNCTION axcp130_msgcentre_notify()
 
   #add-point:process段define (客製用) name="msgcentre_notify.define_customerization"
   
   #end add-point
   DEFINE lc_state LIKE type_t.chr5
   #add-point:process段define name="msgcentre_notify.define"
   
   #end add-point
 
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = "process"
 
   #add-point:msgcentre其他通知 name="msg_centre.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="axcp130.other_function" readonly="Y" >}
#add-point:自定義元件(Function) name="other.function"

#執行異動
PRIVATE FUNCTION axcp130_execute()
   DEFINE l_xcbp    RECORD  #聯產品期分配比例設置檔
                    xcbpent     LIKE xcbp_t.xcbpent,      #企業編號
                    xcbpsite    LIKE xcbp_t.xcbpsite,     #營運據點
                    xcbp001     LIKE xcbp_t.xcbp001,      #年度
                    xcbp002     LIKE xcbp_t.xcbp002,      #期別
                    xcbp003     LIKE xcbp_t.xcbp003,      #主件料號
                    xcbp004     LIKE xcbp_t.xcbp004,      #聯產品料號
                    xcbp005     LIKE xcbp_t.xcbp005,      #聯產品單位
                    xcbp006     LIKE xcbp_t.xcbp006,      #分配率
                    xcbpownid   LIKE xcbp_t.xcbpownid,    #資料所有者
                    xcbpowndp   LIKE xcbp_t.xcbpowndp,    #資料所屬部門
                    xcbpcrtid   LIKE xcbp_t.xcbpcrtid,    #資料建立者
                    xcbpcrtdp   LIKE xcbp_t.xcbpcrtdp,    #資料建立部門
                    xcbpcrtdt   DATETIME YEAR TO SECOND,  #資料創建日
                    xcbpmodid   LIKE xcbp_t.xcbpmodid,    #資料修改者
                    xcbpmoddt   DATETIME YEAR TO SECOND,  #最近修改日
                    xcbpstus    LIKE xcbp_t.xcbpstus      #狀態碼  N无效 Y有效
                    END RECORD
   DEFINE l_sql     STRING
   DEFINE l_msg     STRING

   #刪除舊值
   LET l_msg = cl_getmsg("axc-00499",g_dlang)  #删除旧值
   CALL cl_progress_no_window_ing(l_msg)

   DELETE FROM xcbp_t
    WHERE xcbpent = g_enterprise
      AND xcbpsite IN ( SELECT ooef001 FROM ooef_t 
                         WHERE ooefent = g_enterprise AND ooef201 = 'Y'   #据点
                           AND ooef017 = g_master.glaacomp)  #法人归属
      AND xcbp001 = g_master.year  #年度
      AND xcbp002 = g_master.month #期別
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'delete xcbp_t'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET g_success = 'N'
      RETURN
   END IF
   
   #賦初值
   LET l_xcbp.xcbpownid = g_user  #資料所有者
   LET l_xcbp.xcbpowndp = g_dept  #資料所屬部門
   LET l_xcbp.xcbpcrtid = g_user  #資料建立者
   LET l_xcbp.xcbpcrtdp = g_dept  #資料建立部門
   LET l_xcbp.xcbpcrtdt = cl_get_current()  #資料創建日
   LET l_xcbp.xcbpmodid = ''  #資料修改者
   LET l_xcbp.xcbpmoddt = ''  #最近修改日
   LET l_xcbp.xcbpstus  = 'Y'   #狀態碼:有效
   LET l_xcbp.xcbpent   = g_enterprise      #企業編號
   LET l_xcbp.xcbp001   = g_master.year     #年度
   LET l_xcbp.xcbp002   = g_master.month    #期別
   
   #從工單入庫資料抓取
   LET l_msg = cl_getmsg("axc-00498",g_dlang)  #从工单入库数据抓取
   CALL cl_progress_no_window_ing(l_msg)
   
   #INITIALIZE l_xcbp.* TO NULL
   LET l_sql = " SELECT unique xcbosite,xcbo001,xcbo002,xcbo003,xcbo004 ",
               "   FROM xcbo_t,sfea_t,sfec_t,sfaa_t ",
               "  WHERE xcboent = sfeaent AND xcbosite = sfeasite ", #xcbo关联入库单头
               "    AND sfeaent = sfecent AND sfeadocno = sfecdocno ", #入库单头关联入库单身
               "    AND sfecent = sfaaent AND sfec001 = sfaadocno ", #入库单身关联工单
               "    AND sfaa010 = xcbo001 AND sfec005 = xcbo002 ", #主件料号，联产品料号
               "    AND xcboent = ",g_enterprise,
               "    AND xcbosite IN ( SELECT ooef001 FROM ooef_t ", #归属于指定法人组织的所有据点
               "                       WHERE ooefent = ",g_enterprise," AND ooef201 = 'Y' ",  #据点
               "                         AND ooef017 = '",g_master.glaacomp,"')",  #法人归属
               "    AND sfeastus = 'S' ",  #入库单已过帐
               "    AND sfea001 BETWEEN '",g_bdate,"' AND '",g_edate,"' ", #在成本计算年期范围内
               "  ORDER BY xcbosite,xcbo001,xcbo002,xcbo003,xcbo004 "
   PREPARE axcp130_execute_p1 FROM l_sql
   DECLARE axcp130_execute_c1 CURSOR FOR axcp130_execute_p1
   FOREACH axcp130_execute_c1 INTO l_xcbp.xcbpsite,l_xcbp.xcbp003,l_xcbp.xcbp004,l_xcbp.xcbp005,l_xcbp.xcbp006
                                   #營運據點          #主件料號      #聯產品料號      #聯產品單位     #分配率
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'axcp130_execute_c1:sel xcbo'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET g_success = 'N'
         EXIT FOREACH
      END IF
      
      INSERT INTO xcbp_t(xcbpent  ,xcbpsite ,xcbp001  ,xcbp002  ,
                         xcbp003  ,xcbp004  ,xcbp005  ,xcbp006  ,
                         xcbpownid,xcbpowndp,xcbpcrtid,xcbpcrtdp,
                         xcbpcrtdt,xcbpmodid,xcbpmoddt,xcbpstus )
        VALUES (l_xcbp.xcbpent  ,l_xcbp.xcbpsite ,l_xcbp.xcbp001  ,l_xcbp.xcbp002  ,
                l_xcbp.xcbp003  ,l_xcbp.xcbp004  ,l_xcbp.xcbp005  ,l_xcbp.xcbp006  ,
                l_xcbp.xcbpownid,l_xcbp.xcbpowndp,l_xcbp.xcbpcrtid,l_xcbp.xcbpcrtdp,
                l_xcbp.xcbpcrtdt,l_xcbp.xcbpmodid,l_xcbp.xcbpmoddt,l_xcbp.xcbpstus )
      #可能有重复的现象
      IF (SQLCA.sqlcode OR SQLCA.SQLERRD[3] = 0) AND (NOT cl_err_sql_dup_value(SQLCA.sqlcode)) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'insert xcbp_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET g_success = 'N'
         CONTINUE FOREACH
      END IF
   END FOREACH

   
   #從委外入庫資料抓取
   LET l_msg = cl_getmsg("axc-00497",g_dlang)  #从委外入库数据抓取
   CALL cl_progress_no_window_ing(l_msg)
   
   #INITIALIZE l_xcbp.* TO NULL
   LET l_sql = " SELECT unique xcbosite,xcbo001,xcbo002,xcbo003,xcbo004 ",
               "   FROM xcbo_t,pmds_t,pmdv_t,sfaa_t ",
               "  WHERE xcboent = pmdsent AND xcbosite = pmdssite ", #xcbo关联委外入库单头
               "    AND pmdsent = pmdvent AND pmdsdocno = pmdvdocno ", #委外入库单头关联委外入库单身
               "    AND pmdvent = sfaaent AND pmdv014 = sfaadocno ", #委外入库单身关联工单
               "    AND sfaa010 = xcbo001 AND pmdv001 = xcbo002 ", #主件料号，联产品料号
               "    AND xcboent = ",g_enterprise,
               "    AND xcbosite IN ( SELECT ooef001 FROM ooef_t ", #归属于指定法人组织的所有据点
               "                       WHERE ooefent = ",g_enterprise," AND ooef201 = 'Y' ",  #据点
               "                         AND ooef017 = '",g_master.glaacomp,"')",  #法人归属
               "    AND pmdsstus = 'S' ",  #委外入库单已过帐
               "    AND pmds001 BETWEEN '",g_bdate,"' AND '",g_edate,"' ",  #在成本计算年期范围内
               "  ORDER BY xcbosite,xcbo001,xcbo002,xcbo003,xcbo004 "
   PREPARE axcp130_execute_p2 FROM l_sql
   DECLARE axcp130_execute_c2 CURSOR FOR axcp130_execute_p2
   FOREACH axcp130_execute_c2 INTO l_xcbp.xcbpsite,l_xcbp.xcbp003,l_xcbp.xcbp004,l_xcbp.xcbp005,l_xcbp.xcbp006
                                   #營運據點          #主件料號      #聯產品料號      #聯產品單位     #分配率
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'axcp130_execute_c2:sel xcbo'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET g_success = 'N'
         EXIT FOREACH
      END IF
      
      INSERT INTO xcbp_t(xcbpent  ,xcbpsite ,xcbp001  ,xcbp002  ,
                         xcbp003  ,xcbp004  ,xcbp005  ,xcbp006  ,
                         xcbpownid,xcbpowndp,xcbpcrtid,xcbpcrtdp,
                         xcbpcrtdt,xcbpmodid,xcbpmoddt,xcbpstus )
        VALUES (l_xcbp.xcbpent  ,l_xcbp.xcbpsite ,l_xcbp.xcbp001  ,l_xcbp.xcbp002  ,
                l_xcbp.xcbp003  ,l_xcbp.xcbp004  ,l_xcbp.xcbp005  ,l_xcbp.xcbp006  ,
                l_xcbp.xcbpownid,l_xcbp.xcbpowndp,l_xcbp.xcbpcrtid,l_xcbp.xcbpcrtdp,
                l_xcbp.xcbpcrtdt,l_xcbp.xcbpmodid,l_xcbp.xcbpmoddt,l_xcbp.xcbpstus )
      #可能有重复的现象
      IF (SQLCA.sqlcode OR SQLCA.SQLERRD[3] = 0) AND (NOT cl_err_sql_dup_value(SQLCA.sqlcode)) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'insert xcbp_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET g_success = 'N'
         CONTINUE FOREACH
      END IF
   END FOREACH

END FUNCTION

################################################################################
# Descriptions...: 年度期别检查
# Date & Author..: 2016/10/20 By 02295
# Modify.........:
################################################################################
PRIVATE FUNCTION axcp130_date_chk()
   DEFINE l_flag         LIKE type_t.dat
   DEFINE l_yy           LIKE xref_t.xref001
   DEFINE l_pp           LIKE xref_t.xref002
   DEFINE l_ooef017      LIKE ooef_t.ooef017
   
   IF cl_null(g_master.glaacomp) THEN RETURN END IF

   IF cl_null(g_master.year) THEN RETURN END IF

   IF cl_null(g_master.month) THEN RETURN END IF
   
   SELECT ooef017 INTO l_ooef017 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_master.glaacomp
   LET l_flag = cl_get_para(g_enterprise,l_ooef017,'S-FIN-6012')   #关账日期

   LET l_yy = YEAR(l_flag)
   LET l_pp = MONTH(l_flag)

   LET g_errno = ' '
   IF l_yy > g_master.year THEN
      LET g_errno = 'axc-00303'
   END IF

   #IF l_yy <= g_master.year AND l_pp > g_master.month THEN   #161117-00031#1 mark
   IF l_yy = g_master.year AND l_pp > g_master.month THEN   #161117-00031#1 
      LET g_errno = 'axc-00304'
   END IF
END FUNCTION

#end add-point
 
{</section>}
 
