#該程式未解開Section, 採用最新樣板產出!
{<section id="axct328.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0010(2015-01-04 14:56:10), PR版次:0010(2016-10-31 16:51:51)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000057
#+ Filename...: axct328
#+ Description: 製程在製成本次要素開帳作業
#+ Creator....: 03297(2014-12-08 18:00:07)
#+ Modifier...: 03297 -SD/PR- 02295
 
{</section>}
 
{<section id="axct328.global" >}
#應用 i07 樣板自動產生(Version:46)
#add-point:填寫註解說明
#160318-00005#47  2016/03/28   by pengxin  修正azzi920重复定义之错误讯息
#160318-00025#12  2016/04/26   By 07675    將重複內容的錯誤訊息置換為公用錯誤訊息(r.v）
#160802-00020#5   2016/10/12   By 02040    增加帳套權限管控、法人權限管控
#161013-00051#1   2016/10/18   By shiun    整批調整據點組織開窗
#160929-00005#6   2016/10/31   By 02295    工单开窗调整
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xcdv_m        RECORD
       xcdvcomp LIKE xcdv_t.xcdvcomp, 
   xcdvcomp_desc LIKE type_t.chr80, 
   xcdv004 LIKE xcdv_t.xcdv004, 
   xcdv005 LIKE xcdv_t.xcdv005, 
   xcdvld LIKE xcdv_t.xcdvld, 
   xcdvld_desc LIKE type_t.chr80, 
   xcdv003 LIKE xcdv_t.xcdv003, 
   xcdv003_desc LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xcdv_d        RECORD
       xcdv001 LIKE xcdv_t.xcdv001, 
   xcdv006 LIKE xcdv_t.xcdv006, 
   xcdv007 LIKE xcdv_t.xcdv007, 
   xcdv007_desc LIKE type_t.chr500, 
   xcdv008 LIKE xcdv_t.xcdv008, 
   xcdv009 LIKE xcdv_t.xcdv009, 
   xcdv009_desc LIKE type_t.chr500, 
   xcdv009_desc_desc LIKE type_t.chr500, 
   xcdv010 LIKE xcdv_t.xcdv010, 
   xcdv011 LIKE xcdv_t.xcdv011, 
   xcdv002 LIKE xcdv_t.xcdv002, 
   xcdv002_desc LIKE type_t.chr500, 
   xcdv012 LIKE xcdv_t.xcdv012, 
   xcdv012_desc LIKE type_t.chr500, 
   xcdv101 LIKE xcdv_t.xcdv101, 
   xcdv102 LIKE xcdv_t.xcdv102
       END RECORD
 
 
#add-point:自定義模組變數(Module Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
 TYPE type_g_xcdv2_d        RECORD
       xcdv001 LIKE xcdv_t.xcdv001, 
   xcdv006 LIKE xcdv_t.xcdv006, 
   xcdv007 LIKE xcdv_t.xcdv007, 
   xcdv007_desc LIKE type_t.chr500, 
   xcdv008 LIKE xcdv_t.xcdv008, 
   xcdv009 LIKE xcdv_t.xcdv009, 
   xcdv009_desc LIKE type_t.chr500, 
   xcdv009_desc_desc LIKE type_t.chr500, 
   xcdv010 LIKE xcdv_t.xcdv010, 
   xcdv011 LIKE xcdv_t.xcdv011, 
   xcdv002 LIKE xcdv_t.xcdv002, 
   xcdv002_desc LIKE type_t.chr500,
   xcdv012 LIKE xcdv_t.xcdv012, 
   xcdv012_desc LIKE type_t.chr500,   
   xcdv101 LIKE xcdv_t.xcdv101, 
   xcdv102 LIKE xcdv_t.xcdv102 
   
       END RECORD
DEFINE g_xcdv2_d          DYNAMIC ARRAY OF type_g_xcdv2_d
DEFINE g_xcdv2_d_t        type_g_xcdv2_d
DEFINE g_xcdv2_d_o        type_g_xcdv2_d

 TYPE type_g_xcdv3_d        RECORD
       xcdv001 LIKE xcdv_t.xcdv001, 
   xcdv006 LIKE xcdv_t.xcdv006, 
   xcdv007 LIKE xcdv_t.xcdv007, 
   xcdv007_desc LIKE type_t.chr500, 
   xcdv008 LIKE xcdv_t.xcdv008, 
   xcdv009 LIKE xcdv_t.xcdv009, 
   xcdv009_desc LIKE type_t.chr500, 
   xcdv009_desc_desc LIKE type_t.chr500, 
   xcdv010 LIKE xcdv_t.xcdv010, 
   xcdv011 LIKE xcdv_t.xcdv011, 
   xcdv002 LIKE xcdv_t.xcdv002, 
   xcdv002_desc LIKE type_t.chr500, 
   xcdv012 LIKE xcdv_t.xcdv012, 
   xcdv012_desc LIKE type_t.chr500,
   xcdv101 LIKE xcdv_t.xcdv101, 
   xcdv102 LIKE xcdv_t.xcdv102
       END RECORD
DEFINE g_xcdv3_d          DYNAMIC ARRAY OF type_g_xcdv3_d
DEFINE g_xcdv3_d_t        type_g_xcdv3_d
DEFINE g_xcdv3_d_o        type_g_xcdv3_d

DEFINE g_para_data        LIKE type_t.chr80     #采用成本域否
DEFINE g_glaa015          LIKE glaa_t.glaa015
DEFINE g_glaa019          LIKE glaa_t.glaa019
DEFINE g_glaa001          LIKE glaa_t.glaa001
DEFINE g_glaa003          LIKE glaa_t.glaa003
DEFINE g_glaa016          LIKE glaa_t.glaa016
DEFINE g_glaa018          LIKE glaa_t.glaa018
DEFINE g_glaa020          LIKE glaa_t.glaa020
DEFINE g_glaa022          LIKE glaa_t.glaa022
DEFINE g_glaa025          LIKE glaa_t.glaa025

 TYPE type_g_xcdv5_d        RECORD
   xcdvent LIKE xcdv_t.xcdvent,
   xcdvld  LIKE xcdv_t.xcdvld,
   xcdvcomp LIKE xcdv_t.xcdvcomp, 
   xcdv001 LIKE xcdv_t.xcdv001, 
   xcdv002 LIKE xcdv_t.xcdv002, 
   xcdv003 LIKE xcdv_t.xcdv003,
   xcdv004 LIKE xcdv_t.xcdv004,
   xcdv005 LIKE xcdv_t.xcdv005,   
   xcdv006 LIKE xcdv_t.xcdv006, 
   xcdv007 LIKE xcdv_t.xcdv007,   
   xcdv008 LIKE xcdv_t.xcdv008, 
   xcdv009 LIKE xcdv_t.xcdv009,   
   xcdv010 LIKE xcdv_t.xcdv010, 
   xcdv011 LIKE xcdv_t.xcdv011,
   xcdv012 LIKE xcdv_t.xcdv012,   
   xcdv101 LIKE xcdv_t.xcdv101, 
   xcdv102 LIKE xcdv_t.xcdv102,   
   xcdv102_1 LIKE xcdv_t.xcdv102,   
   xcdv102_2 LIKE xcdv_t.xcdv102
       END RECORD
       
 TYPE type_g_xcdv_f        RECORD
        xcdvcomp LIKE xcdv_t.xcdvcomp, 
        xcdvcomp_desc LIKE type_t.chr80, 
        xcdvld LIKE xcdv_t.xcdvld, 
        xcdvld_desc LIKE type_t.chr80, 
        format LIKE type_t.chr80, 
        char LIKE type_t.chr80, 
        dir LIKE type_t.chr80
       END RECORD
DEFINE g_xcdv_f        type_g_xcdv_f
DEFINE g_xcdv_f_t      type_g_xcdv_f
DEFINE g_xcdv5_d          DYNAMIC ARRAY OF type_g_xcdv5_d
DEFINE w        ui.Window
DEFINE f        ui.Form
DEFINE page     om.DomNode
TYPE   type_g_xcdv_s        RECORD
       name LIKE type_t.chr80, 
       dir LIKE type_t.chr80
                            END RECORD
DEFINE g_xcdv_s        type_g_xcdv_s
DEFINE  g_hidden        DYNAMIC ARRAY OF LIKE type_t.chr1,
        g_ifchar        DYNAMIC ARRAY OF LIKE type_t.chr1,
        g_mask          DYNAMIC ARRAY OF LIKE type_t.chr1,
        g_quote         STRING
DEFINE xls_name        STRING 
DEFINE  l_channel       base.Channel,
        l_str           STRING,
        l_cmd           STRING,
        l_field_name    STRING,
        cnt_table       LIKE type_t.num10
DEFINE  g_sheet         STRING 
DEFINE  ms_codeset      STRING
DEFINE  ms_locale       STRING
DEFINE  tsconv_cmd      STRING
DEFINE  l_win_name      STRING,              
        cnt_header      LIKE type_t.num10
DEFINE  g_sort          RECORD
         column         LIKE type_t.num5,    #sortColumn
         type           STRING,                 #sortType:排序方式:asc/desc
         name           STRING                  #欄位代號
                        END RECORD
DEFINE g_bufstr         base.StringBuffer 
DEFINE g_sfbaseq        LIKE sfba_t.sfbaseq
DEFINE g_sfbaseq1       LIKE sfba_t.sfbaseq1
#160802-00020#5-s-add
DEFINE g_wc_cs_ld            STRING
DEFINE g_wc_cs_comp          STRING
#160802-00020#5-e-add
#end add-point
 
 
#模組變數(Module Variables)
DEFINE g_xcdv_m          type_g_xcdv_m
DEFINE g_xcdv_m_t        type_g_xcdv_m
DEFINE g_xcdv_m_o        type_g_xcdv_m
DEFINE g_xcdv_m_mask_o   type_g_xcdv_m #轉換遮罩前資料
DEFINE g_xcdv_m_mask_n   type_g_xcdv_m #轉換遮罩後資料
 
   DEFINE g_xcdv004_t LIKE xcdv_t.xcdv004
DEFINE g_xcdv005_t LIKE xcdv_t.xcdv005
DEFINE g_xcdvld_t LIKE xcdv_t.xcdvld
DEFINE g_xcdv003_t LIKE xcdv_t.xcdv003
 
 
DEFINE g_xcdv_d          DYNAMIC ARRAY OF type_g_xcdv_d
DEFINE g_xcdv_d_t        type_g_xcdv_d
DEFINE g_xcdv_d_o        type_g_xcdv_d
DEFINE g_xcdv_d_mask_o   DYNAMIC ARRAY OF type_g_xcdv_d #轉換遮罩前資料
DEFINE g_xcdv_d_mask_n   DYNAMIC ARRAY OF type_g_xcdv_d #轉換遮罩後資料
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_xcdvld LIKE xcdv_t.xcdvld,
      b_xcdv003 LIKE xcdv_t.xcdv003,
      b_xcdv004 LIKE xcdv_t.xcdv004,
      b_xcdv005 LIKE xcdv_t.xcdv005
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num10             #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10             #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10             #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10             #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10             #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10             #Browser目前所在筆數(暫存用)
DEFINE g_current_page        LIKE type_t.num10             #目前所在頁數
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num10             #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入(僅用於三階)
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
DEFINE g_sql_sum        STRING
#end add-point
 
{</section>}
 
{<section id="axct328.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:作業初始化 name="main.init"
   #160802-00020#5-s-add
   CALL s_fin_create_account_center_tmp()                      #展組織下階成員所需之暫存檔 
   CALL s_fin_azzi800_sons_query(g_today)
   CALL s_fin_account_center_ld_str() RETURNING g_wc_cs_ld
   CALL s_fin_get_wc_str(g_wc_cs_ld)  RETURNING g_wc_cs_ld
   CALL s_axc_get_authcomp() RETURNING g_wc_cs_comp            #抓取使用者有拜訪權限據點的對應法人  
   #160802-00020#5-e-add
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT xcdvcomp,'',xcdv004,xcdv005,xcdvld,'',xcdv003,''", 
                      " FROM xcdv_t",
                      " WHERE xcdvent= ? AND xcdvld=? AND xcdv003=? AND xcdv004=? AND xcdv005=? FOR  
                          UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axct328_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.xcdvcomp,t0.xcdv004,t0.xcdv005,t0.xcdvld,t0.xcdv003,t1.ooefl003 , 
       t2.glaal002 ,t3.xcatl003",
               " FROM xcdv_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.xcdvcomp AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN glaal_t t2 ON t2.glaalent="||g_enterprise||" AND t2.glaalld=t0.xcdvld AND t2.glaal001='"||g_dlang||"' ",
               " LEFT JOIN xcatl_t t3 ON t3.xcatlent="||g_enterprise||" AND t3.xcatl001=t0.xcdv003 AND t3.xcatl002='"||g_dlang||"' ",
 
               " WHERE t0.xcdvent = " ||g_enterprise|| " AND t0.xcdvld = ? AND t0.xcdv003 = ? AND t0.xcdv004 = ? AND t0.xcdv005 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE axct328_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axct328 WITH FORM cl_ap_formpath("axc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axct328_init()   
 
      #進入選單 Menu (="N")
      CALL axct328_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axct328
      
   END IF 
   
   CLOSE axct328_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="axct328.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axct328_init()
   #add-point:init段define name="init.define_customerization"
   
   #end add-point   
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
      CALL cl_set_combo_scc('xcdv001','8914') 
 
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化 name="init.init"
   CALL cl_get_para(g_enterprise,g_site,'S-FIN-6001') RETURNING g_para_data   #采用成本域否            
   IF g_para_data = 'Y' THEN
      CALL cl_set_comp_visible('xcdv002,xcdv002_desc,xcdv002_2,xcdv002_2_desc,xcdv002_3,xcdv002_3_desc',TRUE)                    
   ELSE
      CALL cl_set_comp_visible('xcdv002,xcdv002_desc,xcdv002_2,xcdv002_2_desc,xcdv002_3,xcdv002_3_desc',FALSE)                
   END IF
   #end add-point
   
   CALL axct328_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="axct328.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axct328_ui_dialog()
   #add-point:ui_dialog段define name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE la_param  RECORD
          prog                  STRING,
          actionid              STRING,
          background            LIKE type_t.chr1,
          param                 DYNAMIC ARRAY OF STRING
                                END RECORD
   DEFINE ls_js                 STRING
   DEFINE li_idx                LIKE type_t.num10
   DEFINE ls_wc                 STRING
   DEFINE lb_first              BOOLEAN
   DEFINE l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   DEFINE l_success       LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE
      
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xcdv_m.* TO NULL
         CALL g_xcdv_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axct328_init()
      END IF
 
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_xcdv_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               #顯示單身筆數
               CALL axct328_idx_chk()
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               CALL axct328_ui_detailshow()
               
               #add-point:page1自定義行為 name="ui_dialog.body.before_row"
               
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
    
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         DISPLAY ARRAY g_xcdv2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b) #page2 
         
            BEFORE ROW
               #顯示單身筆數
               CALL axct328_idx_chk()
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               CALL axct328_ui_detailshow()
               
               #add-point:page1自定義行為
               
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
    
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為

            #end add-point
               
         END DISPLAY
         DISPLAY ARRAY g_xcdv3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b) #page2 
         
            BEFORE ROW
               #顯示單身筆數
               CALL axct328_idx_chk()
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail3")
               LET l_ac = g_detail_idx
               CALL axct328_ui_detailshow()
               
               #add-point:page1自定義行為
               
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
    
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為

            #end add-point
               
         END DISPLAY
         #end add-point
         
         
         BEFORE DIALOG
            #先填充browser資料
            CALL axct328_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axct328_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axct328_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         
    
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axct328_fetch('F')
            LET g_current_row = g_current_idx         
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct328_idx_chk()
            LET g_action_choice = ""
          
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axct328_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct328_idx_chk()
            LET g_action_choice = ""
          
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axct328_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct328_idx_chk()
            LET g_action_choice = ""
        
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axct328_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct328_idx_chk()
            LET g_action_choice = ""
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axct328_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct328_idx_chk()
            LET g_action_choice = ""
            
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xcdv_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xcdv001
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axct328_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axct328_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLEAR FORM
               ELSE
                  CALL axct328_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axct328_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axct328_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_axct328_s02
            LET g_action_choice="open_axct328_s02"
            IF cl_auth_chk_act("open_axct328_s02") THEN
               
               #add-point:ON ACTION open_axct328_s02 name="menu.open_axct328_s02"
               CALL axct328_s02() RETURNING l_success
               IF l_success = TRUE THEN
                  CALL s_transaction_end('Y','1')
                  ERROR "INSERT O.K"
               ELSE
                  CALL s_transaction_end('N','1')
               END IF
               CALL axct328_show()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axct328_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_axct328_s01
            LET g_action_choice="open_axct328_s01"
            IF cl_auth_chk_act("open_axct328_s01") THEN
               
               #add-point:ON ACTION open_axct328_s01 name="menu.open_axct328_s01"
               CALL axct328_s01()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               &include "erp/axc/axct328_rep.4gl"
               #add-point:ON ACTION output.after
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axct303
            LET g_action_choice="axct303"
            IF cl_auth_chk_act("axct303") THEN
               
               #add-point:ON ACTION axct303 name="menu.axct303"
               INITIALIZE la_param.* TO NULL
               LET la_param.prog = "axct303"               
               LET la_param.param[1] = g_xcdv_m.xcdvld                     
               LET la_param.param[2] = g_xcdv_m.xcdv003
               LET la_param.param[3] = g_xcdv_m.xcdv004
               LET la_param.param[4] = g_xcdv_m.xcdv005                                          
               LET ls_js = util.JSON.stringify(la_param)
               DISPLAY ls_js
               CALL cl_cmdrun(ls_js)
                  
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axct328_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         
         
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL axct328_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axct328_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axct328_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
         CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.browser_search" >}
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axct328_browser_search(p_type)
   #add-point:browser_search段define name="browser_search.define_customerization"
   
   #end add-point   
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_search.define"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axct328.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axct328_browser_fill(ps_page_action)
   #add-point:browser_fill段define name="browser_fill.define_customerization"
   
   #end add-point   
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="browser_fill.before_browser_fill"
   
   #end add-point    
 
   LET l_searchcol = "xcdvld,xcdv003,xcdv004,xcdv005"
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT xcdvld ",
                      ", xcdv003 ",
                      ", xcdv004 ",
                      ", xcdv005 ",
 
                      " FROM xcdv_t ",
                      " ",
                      " ", 
 
 
 
                      " WHERE xcdvent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xcdv_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT xcdvld ",
                      ", xcdv003 ",
                      ", xcdv004 ",
                      ", xcdv005 ",
 
                      " FROM xcdv_t ",
                      " ",
                      " ", 
 
 
                      " WHERE xcdvent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("xcdv_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   #160802-00020#5-s-add
   #---增加帳套權限控管
   IF NOT cl_null(g_wc_cs_ld) THEN
      LET l_sub_sql = l_sub_sql , " AND xcdvld IN ",g_wc_cs_ld
   END IF
   #---增加法人過濾條件
   IF NOT cl_null(g_wc_cs_comp) THEN
      LET l_sub_sql = l_sub_sql," AND xcdvcomp IN ",g_wc_cs_comp
   END IF  
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   #160802-00020#5-e-add
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt 
         LET g_errparam.code   = 9035
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   LET g_error_show = 0
 
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xcdv_m.* TO NULL
      CALL g_xcdv_d.clear()        
 
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xcdvld,t0.xcdv003,t0.xcdv004,t0.xcdv005 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT t0.xcdvld,t0.xcdv003,t0.xcdv004,t0.xcdv005",
                " FROM xcdv_t t0",
                #" ",
                " ",
 
 
 
                
                " WHERE t0.xcdvent = " ||g_enterprise|| " AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("xcdv_t")
 
   #add-point:browser_fill,sql_rank前 name="browser_fill.before_sql_rank"
   #160802-00020#5-s-add
   #---增加帳套權限控管
   IF NOT cl_null(g_wc_cs_ld) THEN
      LET g_sql = g_sql , " AND t0.xcdvld IN ",g_wc_cs_ld
   END IF
   #---增加法人過濾條件
   IF NOT cl_null(g_wc_cs_comp) THEN
      LET g_sql = g_sql," AND t0.xcdvcomp IN ",g_wc_cs_comp
   END IF  
   #160802-00020#5-e-add
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前 name="browser_fill.before_pre"
   
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"xcdv_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_xcdvld,g_browser[g_cnt].b_xcdv003,g_browser[g_cnt].b_xcdv004, 
          g_browser[g_cnt].b_xcdv005 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
         
         
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point  
      
         
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
      END FOREACH
      FREE browse_pre
   END IF
 
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xcdvld) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_xcdv_m.* TO NULL
      CALL g_xcdv_d.clear()
 
      #add-point:browser_fill段after_clear name="browser_fill.after_clear"
      
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   LET g_browser_cnt = g_browser.getLength()
   CALL axct328_fetch('')
   
   #筆數顯示
   LET g_browser_idx = g_current_idx 
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axct328_ui_headershow()
   #add-point:ui_headershow段define name="ui_headershow.define_customerization"
   
   #end add-point    
   #add-point:ui_headershow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_xcdv_m.xcdvld = g_browser[g_current_idx].b_xcdvld   
   LET g_xcdv_m.xcdv003 = g_browser[g_current_idx].b_xcdv003   
   LET g_xcdv_m.xcdv004 = g_browser[g_current_idx].b_xcdv004   
   LET g_xcdv_m.xcdv005 = g_browser[g_current_idx].b_xcdv005   
 
   EXECUTE axct328_master_referesh USING g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005 INTO g_xcdv_m.xcdvcomp, 
       g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdvcomp_desc,g_xcdv_m.xcdvld_desc, 
       g_xcdv_m.xcdv003_desc
   CALL axct328_show()
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axct328_ui_detailshow()
   #add-point:ui_detailshow段define name="ui_detailshow.define_customerization"
   
   #end add-point
   #add-point:ui_detailshow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_detailshow.before"
 
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
      #add-point:ui_detailshow段more name="ui_detailshow.more"
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)   
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)   
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   CALL axct328_show()
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axct328_ui_browser_refresh()
   #add-point:ui_browser_refresh段define name="ui_browser_refresh.define_customerization"
   
   #end add-point   
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xcdvld = g_xcdv_m.xcdvld 
         AND g_browser[l_i].b_xcdv003 = g_xcdv_m.xcdv003 
         AND g_browser[l_i].b_xcdv004 = g_xcdv_m.xcdv004 
         AND g_browser[l_i].b_xcdv005 = g_xcdv_m.xcdv005 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axct328_construct()
   #add-point:cs段define name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
   
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_xcdv_m.* TO NULL
   CALL g_xcdv_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外 name="cs.head.before"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xcdvcomp,xcdv004,xcdv005,xcdvld,xcdv003
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.head.before_construct"
            
            #end add-point 
            
                 #Ctrlp:construct.c.xcdvcomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdvcomp
            #add-point:ON ACTION controlp INFIELD xcdvcomp name="construct.c.xcdvcomp"
            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
           #160802-00020#5-s-add 
            #增加法人過濾條件
            IF NOT cl_null(g_wc_cs_comp) THEN
               LET g_qryparam.where = " ooef001 IN ",g_wc_cs_comp
            END IF
           #160802-00020#5-e-add             
            #mod--161013-00051#1 By shiun--(S)
#            CALL q_ooef001_8()                           #呼叫開窗
            CALL q_ooef001_2()
            #mod--161013-00051#1 By shiun--(E)
            DISPLAY g_qryparam.return1 TO xcdvcomp  #顯示到畫面上
            NEXT FIELD xcdvcomp                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdvcomp
            #add-point:BEFORE FIELD xcdvcomp name="construct.b.xcdvcomp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdvcomp
            
            #add-point:AFTER FIELD xcdvcomp name="construct.a.xcdvcomp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv004
            #add-point:BEFORE FIELD xcdv004 name="construct.b.xcdv004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv004
            
            #add-point:AFTER FIELD xcdv004 name="construct.a.xcdv004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xcdv004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv004
            #add-point:ON ACTION controlp INFIELD xcdv004 name="construct.c.xcdv004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv005
            #add-point:BEFORE FIELD xcdv005 name="construct.b.xcdv005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv005
            
            #add-point:AFTER FIELD xcdv005 name="construct.a.xcdv005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xcdv005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv005
            #add-point:ON ACTION controlp INFIELD xcdv005 name="construct.c.xcdv005"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xcdvld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdvld
            #add-point:ON ACTION controlp INFIELD xcdvld name="construct.c.xcdvld"
            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            #160802-00020#5-s-add
            #增加帳套權限控制
            IF NOT cl_null(g_wc_cs_ld) THEN
               LET g_qryparam.where = " glaald IN ",g_wc_cs_ld
            END IF
            #160802-00020#5-e-add             
            CALL q_authorised_ld()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdvld  #顯示到畫面上
            NEXT FIELD xcdvld                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdvld
            #add-point:BEFORE FIELD xcdvld name="construct.b.xcdvld"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdvld
            
            #add-point:AFTER FIELD xcdvld name="construct.a.xcdvld"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xcdv003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv003
            #add-point:ON ACTION controlp INFIELD xcdv003 name="construct.c.xcdv003"
            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " xcat005 IN ('2','3') "
            CALL q_xcat001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdv003  #顯示到畫面上
            NEXT FIELD xcdv003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv003
            #add-point:BEFORE FIELD xcdv003 name="construct.b.xcdv003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv003
            
            #add-point:AFTER FIELD xcdv003 name="construct.a.xcdv003"
            
            #END add-point
            
 
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON xcdv001,xcdv006,xcdv007,xcdv008,xcdv009,xcdv010,xcdv011,xcdv002,xcdv012, 
          xcdv101,xcdv102
           FROM s_detail1[1].xcdv001,s_detail1[1].xcdv006,s_detail1[1].xcdv007,s_detail1[1].xcdv008, 
               s_detail1[1].xcdv009,s_detail1[1].xcdv010,s_detail1[1].xcdv011,s_detail1[1].xcdv002,s_detail1[1].xcdv012, 
               s_detail1[1].xcdv101,s_detail1[1].xcdv102
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.body.before_construct"
            
            #end add-point 
            
         #單身公用欄位開窗相關處理
         
           
         #單身一般欄位開窗相關處理
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv001
            #add-point:BEFORE FIELD xcdv001 name="construct.b.page1.xcdv001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv001
            
            #add-point:AFTER FIELD xcdv001 name="construct.a.page1.xcdv001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcdv001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv001
            #add-point:ON ACTION controlp INFIELD xcdv001 name="construct.c.page1.xcdv001"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xcdv006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv006
            #add-point:ON ACTION controlp INFIELD xcdv006 name="construct.c.page1.xcdv006"
            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_sfbadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdv006  #顯示到畫面上
            NEXT FIELD xcdv006                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv006
            #add-point:BEFORE FIELD xcdv006 name="construct.b.page1.xcdv006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv006
            
            #add-point:AFTER FIELD xcdv006 name="construct.a.page1.xcdv006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcdv007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv007
            #add-point:ON ACTION controlp INFIELD xcdv007 name="construct.c.page1.xcdv007"
            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_sfba003_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdv007  #顯示到畫面上
            NEXT FIELD xcdv007                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv007
            #add-point:BEFORE FIELD xcdv007 name="construct.b.page1.xcdv007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv007
            
            #add-point:AFTER FIELD xcdv007 name="construct.a.page1.xcdv007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcdv008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv008
            #add-point:ON ACTION controlp INFIELD xcdv008 name="construct.c.page1.xcdv008"
            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_sfba003_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdv008  #顯示到畫面上
            NEXT FIELD xcdv008                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv008
            #add-point:BEFORE FIELD xcdv008 name="construct.b.page1.xcdv008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv008
            
            #add-point:AFTER FIELD xcdv008 name="construct.a.page1.xcdv008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcdv009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv009
            #add-point:ON ACTION controlp INFIELD xcdv009 name="construct.c.page1.xcdv009"
            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imag001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdv009  #顯示到畫面上
            NEXT FIELD xcdv009                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv009
            #add-point:BEFORE FIELD xcdv009 name="construct.b.page1.xcdv009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv009
            
            #add-point:AFTER FIELD xcdv009 name="construct.a.page1.xcdv009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcdv010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv010
            #add-point:ON ACTION controlp INFIELD xcdv010 name="construct.c.page1.xcdv010"
            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmaa002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdv010  #顯示到畫面上
            NEXT FIELD xcdv010                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv010
            #add-point:BEFORE FIELD xcdv010 name="construct.b.page1.xcdv010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv010
            
            #add-point:AFTER FIELD xcdv010 name="construct.a.page1.xcdv010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcdv011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv011
            #add-point:ON ACTION controlp INFIELD xcdv011 name="construct.c.page1.xcdv011"
            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaj010()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdv011  #顯示到畫面上
            NEXT FIELD xcdv011                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv011
            #add-point:BEFORE FIELD xcdv011 name="construct.b.page1.xcdv011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv011
            
            #add-point:AFTER FIELD xcdv011 name="construct.a.page1.xcdv011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcdv002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv002
            #add-point:ON ACTION controlp INFIELD xcdv002 name="construct.c.page1.xcdv002"
            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xcbf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdv002  #顯示到畫面上
            NEXT FIELD xcdv002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv002
            #add-point:BEFORE FIELD xcdv002 name="construct.b.page1.xcdv002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv002
            
            #add-point:AFTER FIELD xcdv002 name="construct.a.page1.xcdv002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcdv012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv012
            #add-point:ON ACTION controlp INFIELD xcdv012 name="construct.c.page1.xcdv012"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_xcau001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdv012  #顯示到畫面上
            NEXT FIELD xcdv012                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv012
            #add-point:BEFORE FIELD xcdv012 name="construct.b.page1.xcdv012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv012
            
            #add-point:AFTER FIELD xcdv012 name="construct.a.page1.xcdv012"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv101
            #add-point:BEFORE FIELD xcdv101 name="construct.b.page1.xcdv101"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv101
            
            #add-point:AFTER FIELD xcdv101 name="construct.a.page1.xcdv101"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcdv101
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv101
            #add-point:ON ACTION controlp INFIELD xcdv101 name="construct.c.page1.xcdv101"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv102
            #add-point:BEFORE FIELD xcdv102 name="construct.b.page1.xcdv102"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv102
            
            #add-point:AFTER FIELD xcdv102 name="construct.a.page1.xcdv102"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcdv102
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv102
            #add-point:ON ACTION controlp INFIELD xcdv102 name="construct.c.page1.xcdv102"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct name="cs.more_construct"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog name="cs.before_dialog"
         
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct name="cs.after_construct"
   
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
 
{</section>}
 
{<section id="axct328.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axct328_query()
   #add-point:query段define name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="query.befroe_query"
   
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xcdv_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axct328_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL axct328_browser_fill(g_wc)
      CALL axct328_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL axct328_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL axct328_fetch("F") 
   END IF
   
   CALL axct328_idx_chk()
   
   LET g_wc_filter = ""
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axct328_fetch(p_flag)
   #add-point:fetch段define name="fetch.define_customerization"
   
   #end add-point   
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="fetch.before_fetch"
   CALL cl_set_act_visible("modify,modify_detail,delete", TRUE)
   #end add-point    
 
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L' 
         LET g_current_idx = g_header_cnt
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   #CALL axct328_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart + g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting(g_current_idx,g_detail_cnt)
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xcdv_m.xcdvld = g_browser[g_current_idx].b_xcdvld
   LET g_xcdv_m.xcdv003 = g_browser[g_current_idx].b_xcdv003
   LET g_xcdv_m.xcdv004 = g_browser[g_current_idx].b_xcdv004
   LET g_xcdv_m.xcdv005 = g_browser[g_current_idx].b_xcdv005
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axct328_master_referesh USING g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005 INTO g_xcdv_m.xcdvcomp, 
       g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdvcomp_desc,g_xcdv_m.xcdvld_desc, 
       g_xcdv_m.xcdv003_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xcdv_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      INITIALIZE g_xcdv_m.* TO NULL
      RETURN
   END IF
 
   #遮罩相關處理
   LET g_xcdv_m_mask_o.* =  g_xcdv_m.*
   CALL axct328_xcdv_t_mask()
   LET g_xcdv_m_mask_n.* =  g_xcdv_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axct328_set_act_visible()
   CALL axct328_set_act_no_visible()
 
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
 
   #保存單頭舊值
   LET g_xcdv_m_t.* = g_xcdv_m.*
   LET g_xcdv_m_o.* = g_xcdv_m.*
   
   #重新顯示   
   CALL axct328_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="axct328.insert" >}
#+ 資料新增
PRIVATE FUNCTION axct328_insert()
   #add-point:insert段define name="insert.define_customerization"
   
   #end add-point   
   #add-point:insert段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="insert.before"
   
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_xcdv_d.clear()
 
 
   INITIALIZE g_xcdv_m.* LIKE xcdv_t.*             #DEFAULT 設定
   LET g_xcdvld_t = NULL
   LET g_xcdv003_t = NULL
   LET g_xcdv004_t = NULL
   LET g_xcdv005_t = NULL
 
   LET g_master_insert = FALSE
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值 name="insert.default"
      
      #end add-point 
 
      CALL axct328_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xcdv_m.* TO NULL
         INITIALIZE g_xcdv_d TO NULL
 
         CALL axct328_show()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         LET g_xcdv_m.* = g_xcdv_m_t.*
         CALL axct328_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF
    
      #CALL g_xcdv_d.clear()
 
      
      #add-point:單頭輸入後2 name="insert.after_insert2"
      
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axct328_set_act_visible()
   CALL axct328_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_xcdvld_t = g_xcdv_m.xcdvld
   LET g_xcdv003_t = g_xcdv_m.xcdv003
   LET g_xcdv004_t = g_xcdv_m.xcdv004
   LET g_xcdv005_t = g_xcdv_m.xcdv005
 
   
   #組合新增資料的條件
   LET g_add_browse = " xcdvent = " ||g_enterprise|| " AND",
                      " xcdvld = '", g_xcdv_m.xcdvld, "' "
                      ," AND xcdv003 = '", g_xcdv_m.xcdv003, "' "
                      ," AND xcdv004 = '", g_xcdv_m.xcdv004, "' "
                      ," AND xcdv005 = '", g_xcdv_m.xcdv005, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axct328_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CALL axct328_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axct328_master_referesh USING g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005 INTO g_xcdv_m.xcdvcomp, 
       g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdvcomp_desc,g_xcdv_m.xcdvld_desc, 
       g_xcdv_m.xcdv003_desc
   
   #遮罩相關處理
   LET g_xcdv_m_mask_o.* =  g_xcdv_m.*
   CALL axct328_xcdv_t_mask()
   LET g_xcdv_m_mask_n.* =  g_xcdv_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xcdv_m.xcdvcomp,g_xcdv_m.xcdvcomp_desc,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,g_xcdv_m.xcdvld, 
       g_xcdv_m.xcdvld_desc,g_xcdv_m.xcdv003,g_xcdv_m.xcdv003_desc
   
   #功能已完成,通報訊息中心
   CALL axct328_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.modify" >}
#+ 資料修改
PRIVATE FUNCTION axct328_modify()
   #add-point:modify段define name="modify.define_customerization"
   
   #end add-point    
   #add-point:modify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   DEFINE l_success      LIKE type_t.chr1
   #end add-point  
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   IF g_xcdv_m.xcdvld IS NULL
   OR g_xcdv_m.xcdv003 IS NULL
   OR g_xcdv_m.xcdv004 IS NULL
   OR g_xcdv_m.xcdv005 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL  
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
   LET g_xcdvld_t = g_xcdv_m.xcdvld
   LET g_xcdv003_t = g_xcdv_m.xcdv003
   LET g_xcdv004_t = g_xcdv_m.xcdv004
   LET g_xcdv005_t = g_xcdv_m.xcdv005
 
   CALL s_transaction_begin()
   
   OPEN axct328_cl USING g_enterprise,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axct328_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE axct328_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axct328_master_referesh USING g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005 INTO g_xcdv_m.xcdvcomp, 
       g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdvcomp_desc,g_xcdv_m.xcdvld_desc, 
       g_xcdv_m.xcdv003_desc
   
   #遮罩相關處理
   LET g_xcdv_m_mask_o.* =  g_xcdv_m.*
   CALL axct328_xcdv_t_mask()
   LET g_xcdv_m_mask_n.* =  g_xcdv_m.*
   
   CALL s_transaction_end('Y','0')
 
   CALL axct328_show()
   WHILE TRUE
      LET g_xcdvld_t = g_xcdv_m.xcdvld
      LET g_xcdv003_t = g_xcdv_m.xcdv003
      LET g_xcdv004_t = g_xcdv_m.xcdv004
      LET g_xcdv005_t = g_xcdv_m.xcdv005
 
 
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      CALL axct328_input("u")     #欄位更改
      
      #add-point:modify段修改後 name="modify.after_input"
      IF NOT INT_FLAG THEN #160929-00005#6
         CALL axct328_sum_chk() RETURNING l_success
         IF l_success = 'N' THEN         
            CONTINUE WHILE     
         END IF
         CALL axct328_xcdv012_chk() RETURNING l_success
         IF l_success = 'N' THEN         
            CONTINUE WHILE     
         END IF 
      END IF   #160929-00005#6
      #end add-point
      
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         LET g_xcdv_m.* = g_xcdv_m_t.*
         CALL axct328_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更(更新單身table的key欄位值)
      IF g_xcdv_m.xcdvld != g_xcdvld_t 
      OR g_xcdv_m.xcdv003 != g_xcdv003_t 
      OR g_xcdv_m.xcdv004 != g_xcdv004_t 
      OR g_xcdv_m.xcdv005 != g_xcdv005_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前 name="modify.b_key_update"
         
         #end add-point
         
         #add-point:單頭(偽)修改中 name="modify.m_key_update"
         
         #end add-point
         
 
         
         #add-point:單頭(偽)修改後 name="modify.a_key_update"
         
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axct328_set_act_visible()
   CALL axct328_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xcdvent = " ||g_enterprise|| " AND",
                      " xcdvld = '", g_xcdv_m.xcdvld, "' "
                      ," AND xcdv003 = '", g_xcdv_m.xcdv003, "' "
                      ," AND xcdv004 = '", g_xcdv_m.xcdv004, "' "
                      ," AND xcdv005 = '", g_xcdv_m.xcdv005, "' "
 
   #填到對應位置
   CALL axct328_browser_fill("")
 
   CALL axct328_idx_chk()
 
   CLOSE axct328_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axct328_msgcentre_notify('modify')
   
END FUNCTION   
 
{</section>}
 
{<section id="axct328.input" >}
#+ 資料輸入
PRIVATE FUNCTION axct328_input(p_cmd)
   #add-point:input段define name="input.define_customerization"
   
   #end add-point   
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num10               #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num10               #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10               #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_site_t   LIKE xcdv_t.xcdvcomp   #160929-00005#6
   DEFINE  l_sfaa061  LIKE sfaa_t.sfaa061    #160929-00005#6
   #end add-point
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xcdv_m.xcdvcomp,g_xcdv_m.xcdvcomp_desc,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,g_xcdv_m.xcdvld, 
       g_xcdv_m.xcdvld_desc,g_xcdv_m.xcdv003,g_xcdv_m.xcdv003_desc
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT xcdv001,xcdv006,xcdv007,xcdv008,xcdv009,xcdv010,xcdv011,xcdv002,xcdv012, 
       xcdv101,xcdv102 FROM xcdv_t WHERE xcdvent=? AND xcdvld=? AND xcdv003=? AND xcdv004=? AND xcdv005=?  
       AND xcdv001=? AND xcdv002=? AND xcdv006=? AND xcdv007=? AND xcdv008=? AND xcdv009=? AND xcdv010=?  
       AND xcdv011=? AND xcdv012=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axct328_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axct328_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL axct328_set_no_entry(p_cmd)
   #add-point:set_no_entry後 name="input.after_set_no_entry"
   
   #end add-point
 
   DISPLAY BY NAME g_xcdv_m.xcdvcomp,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003 
 
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:進入修改段前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="axct328.input.head" >}
   
      #單頭段
      INPUT BY NAME g_xcdv_m.xcdvcomp,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003  
 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前 name="input.head.b_input"
            
            #end add-point
          
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdvcomp
            
            #add-point:AFTER FIELD xcdvcomp name="input.a.xcdvcomp"
            IF NOT cl_null(g_xcdv_m.xcdvcomp) THEN 
#應用 a19 樣板自動產生(Version:1)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcdv_m.xcdvcomp

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist_and_ref_val("v_ooef001_1") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

            IF NOT cl_null(g_xcdv_m.xcdvcomp) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xcdv_m_t.xcdvcomp IS NULL OR g_xcdv_m.xcdvcomp != g_xcdv_m_t.xcdvcomp)) THEN
                  IF NOT s_axc_chk_ld_comp(g_xcdv_m.xcdvcomp,g_xcdv_m.xcdvld) THEN
                     LET g_xcdv_m.xcdvcomp = g_xcdv_m_t.xcdvcomp
                     NEXT FIELD CURRENT
                  END IF
               END IF
               CALL cl_get_para(g_enterprise,g_xcdv_m.xcdvcomp,'S-FIN-6001') RETURNING g_para_data   #采用成本域否            
               IF g_para_data = 'Y' THEN
                  CALL cl_set_comp_visible('xcdv002,xcdv002_desc,xcdv002_2,xcdv002_2_desc,xcdv002_3,xcdv002_3_desc',TRUE)                    
               ELSE
                  CALL cl_set_comp_visible('xcdv002,xcdv002_desc,xcdv002_2,xcdv002_2_desc,xcdv002_3,xcdv002_3_desc',FALSE)                
               END IF
            END IF
            CALL axct328_ref()
            
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdvcomp
            #add-point:BEFORE FIELD xcdvcomp name="input.b.xcdvcomp"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdvcomp
            #add-point:ON CHANGE xcdvcomp name="input.g.xcdvcomp"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv004
            #add-point:BEFORE FIELD xcdv004 name="input.b.xcdv004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv004
            
            #add-point:AFTER FIELD xcdv004 name="input.a.xcdv004"
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF NOT cl_null(g_xcdv_m.xcdv004) THEN
               IF p_cmd ='a' OR (p_cmd ='u' AND (g_xcdv_m_t.xcdv004 IS NULL OR g_xcdv_m.xcdv004 != g_xcdv_m_t.xcdv004)) THEN
                  IF NOT axct328_chk_year_period() THEN
                     LET g_xcdv_m.xcdv004 = g_xcdv_m_t.xcdv004
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF  NOT cl_null(g_xcdv_m.xcdvld) AND NOT cl_null(g_xcdv_m.xcdv003) AND NOT cl_null(g_xcdv_m.xcdv004) AND NOT cl_null(g_xcdv_m.xcdv005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t  OR g_xcdv_m.xcdv003 != g_xcdv003_t  OR g_xcdv_m.xcdv004 != g_xcdv004_t  OR g_xcdv_m.xcdv005 != g_xcdv005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdv004
            #add-point:ON CHANGE xcdv004 name="input.g.xcdv004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv005
            #add-point:BEFORE FIELD xcdv005 name="input.b.xcdv005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv005
            
            #add-point:AFTER FIELD xcdv005 name="input.a.xcdv005"
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF NOT cl_null(g_xcdv_m.xcdv005) THEN
               IF p_cmd ='a' OR (p_cmd ='u' AND (g_xcdv_m_t.xcdv005 IS NULL OR g_xcdv_m.xcdv005 != g_xcdv_m_t.xcdv005)) THEN
                  IF NOT axct328_chk_year_period() THEN
                     LET g_xcdv_m.xcdv005 = g_xcdv_m_t.xcdv005
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            IF  NOT cl_null(g_xcdv_m.xcdvld) AND NOT cl_null(g_xcdv_m.xcdv003) AND NOT cl_null(g_xcdv_m.xcdv004) AND NOT cl_null(g_xcdv_m.xcdv005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t  OR g_xcdv_m.xcdv003 != g_xcdv003_t  OR g_xcdv_m.xcdv004 != g_xcdv004_t  OR g_xcdv_m.xcdv005 != g_xcdv005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdv005
            #add-point:ON CHANGE xcdv005 name="input.g.xcdv005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdvld
            
            #add-point:AFTER FIELD xcdvld name="input.a.xcdvld"
            IF NOT cl_null(g_xcdv_m.xcdvld) THEN 
#應用 a19 樣板自動產生(Version:1)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcdv_m.xcdvld
               #160318-00025#12--add--str
               LET g_errshow = TRUE 
               LET g_chkparam.err_str[1] = "agl-00051:sub-01302|agli010|",cl_get_progname("agli010",g_lang,"2"),"|:EXEPROGagli010"
               #160318-00025#12--add--end
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist_and_ref_val("v_glaald") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF NOT cl_null(g_xcdv_m.xcdvld) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xcdv_m_t.xcdvld IS NULL OR g_xcdv_m.xcdvld != g_xcdv_m_t.xcdvld)) THEN
                  IF NOT s_axc_chk_ld_comp(g_xcdv_m.xcdvcomp,g_xcdv_m.xcdvld) THEN
                     LET g_xcdv_m.xcdvld = g_xcdv_m_t.xcdvld
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF       
           
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcdv_m.xcdvld
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcdv_m.xcdvld_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcdv_m.xcdvld_desc
            
            IF  NOT cl_null(g_xcdv_m.xcdvld) AND NOT cl_null(g_xcdv_m.xcdv003) AND NOT cl_null(g_xcdv_m.xcdv004) AND NOT cl_null(g_xcdv_m.xcdv005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t  OR g_xcdv_m.xcdv003 != g_xcdv003_t  OR g_xcdv_m.xcdv004 != g_xcdv004_t  OR g_xcdv_m.xcdv005 != g_xcdv005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            CALL axct328_ref()
            IF g_glaa015 = 'Y' THEN
               CALL cl_set_comp_visible("page_3",TRUE)
            ELSE
               CALL cl_set_comp_visible("page_3",FALSE) 
            END IF
            IF g_glaa019 = 'Y' THEN
               CALL cl_set_comp_visible("page_4",TRUE)
            ELSE
               CALL cl_set_comp_visible("page_4",FALSE)
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdvld
            #add-point:BEFORE FIELD xcdvld name="input.b.xcdvld"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdvld
            #add-point:ON CHANGE xcdvld name="input.g.xcdvld"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv003
            
            #add-point:AFTER FIELD xcdv003 name="input.a.xcdv003"
            IF NOT cl_null(g_xcdv_m.xcdv003) THEN 
#應用 a19 樣板自動產生(Version:1)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcdv_m.xcdv003
               #160318-00025#12--add--str
               LET g_errshow = TRUE 
               LET g_chkparam.err_str[1] = "agl-00195:sub-01302|axci100|",cl_get_progname("axci100",g_lang,"2"),"|:EXEPROGaxci100"
               #160318-00025#12--add--end
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist_and_ref_val("v_xcat001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  NOT cl_null(g_xcdv_m.xcdvld) AND NOT cl_null(g_xcdv_m.xcdv003) AND NOT cl_null(g_xcdv_m.xcdv004) AND NOT cl_null(g_xcdv_m.xcdv005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t  OR g_xcdv_m.xcdv003 != g_xcdv003_t  OR g_xcdv_m.xcdv004 != g_xcdv004_t  OR g_xcdv_m.xcdv005 != g_xcdv005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            CALL axct328_ref()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv003
            #add-point:BEFORE FIELD xcdv003 name="input.b.xcdv003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdv003
            #add-point:ON CHANGE xcdv003 name="input.g.xcdv003"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.xcdvcomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdvcomp
            #add-point:ON ACTION controlp INFIELD xcdvcomp name="input.c.xcdvcomp"
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv_m.xcdvcomp             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            #帳套不為空時，法人組織開窗開帳套歸屬法人的法人組織
            IF NOT cl_null(g_xcdv_m.xcdvld) THEN
               LET g_qryparam.where = " ooef017 = (SELECT glaacomp FROM glaa_t",
                                      "  WHERE glaaent = '",g_enterprise,"' AND glaald = '",g_xcdv_m.xcdvld,"' ) AND ooef003 = 'Y' "
            END IF
            
            #mod--161013-00051#1 By shiun--(S)
#            CALL q_ooef001_8()                           #呼叫開窗
            CALL q_ooef001_2()
            #mod--161013-00051#1 By shiun--(E)

            LET g_xcdv_m.xcdvcomp = g_qryparam.return1              

            DISPLAY g_xcdv_m.xcdvcomp TO xcdvcomp              #

            NEXT FIELD xcdvcomp                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xcdv004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv004
            #add-point:ON ACTION controlp INFIELD xcdv004 name="input.c.xcdv004"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcdv005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv005
            #add-point:ON ACTION controlp INFIELD xcdv005 name="input.c.xcdv005"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcdvld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdvld
            #add-point:ON ACTION controlp INFIELD xcdvld name="input.c.xcdvld"
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv_m.xcdvld             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            #法人不為空時，帳套開窗開此法人的下屬帳套
            IF NOT cl_null(g_xcdv_m.xcdvcomp) THEN
               LET g_qryparam.where = " glaacomp = '",g_xcdv_m.xcdvcomp,"'"
            END IF            
            CALL q_authorised_ld()                                #呼叫開窗

            LET g_xcdv_m.xcdvld = g_qryparam.return1              

            DISPLAY g_xcdv_m.xcdvld TO xcdvld              #

            NEXT FIELD xcdvld                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xcdv003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv003
            #add-point:ON ACTION controlp INFIELD xcdv003 name="input.c.xcdv003"
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv_m.xcdv003             #給予default值

            #給予arg
            LET g_qryparam.where = " xcat005 IN ('2','3') "

            
            CALL q_xcat001()                                #呼叫開窗

            LET g_xcdv_m.xcdv003 = g_qryparam.return1              

            DISPLAY g_xcdv_m.xcdv003 TO xcdv003              #

            NEXT FIELD xcdv003                          #返回原欄位


            #END add-point
 
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
            
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xcdv_m.xcdvld             
                            ,g_xcdv_m.xcdv003   
                            ,g_xcdv_m.xcdv004   
                            ,g_xcdv_m.xcdv005   
 
 
            #add-point:單頭修改前 name="input.head.b_after_input"
            
            #end add-point
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
            
               #將遮罩欄位還原
               CALL axct328_xcdv_t_mask_restore('restore_mask_o')
            
               UPDATE xcdv_t SET (xcdvcomp,xcdv004,xcdv005,xcdvld,xcdv003) = (g_xcdv_m.xcdvcomp,g_xcdv_m.xcdv004, 
                   g_xcdv_m.xcdv005,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003)
                WHERE xcdvent = g_enterprise AND xcdvld = g_xcdvld_t
                  AND xcdv003 = g_xcdv003_t
                  AND xcdv004 = g_xcdv004_t
                  AND xcdv005 = g_xcdv005_t
 
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcdv_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcdv_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcdv_m.xcdvld
               LET gs_keys_bak[1] = g_xcdvld_t
               LET gs_keys[2] = g_xcdv_m.xcdv003
               LET gs_keys_bak[2] = g_xcdv003_t
               LET gs_keys[3] = g_xcdv_m.xcdv004
               LET gs_keys_bak[3] = g_xcdv004_t
               LET gs_keys[4] = g_xcdv_m.xcdv005
               LET gs_keys_bak[4] = g_xcdv005_t
               LET gs_keys[5] = g_xcdv_d[g_detail_idx].xcdv001
               LET gs_keys_bak[5] = g_xcdv_d_t.xcdv001
               LET gs_keys[6] = g_xcdv_d[g_detail_idx].xcdv002
               LET gs_keys_bak[6] = g_xcdv_d_t.xcdv002
               LET gs_keys[7] = g_xcdv_d[g_detail_idx].xcdv006
               LET gs_keys_bak[7] = g_xcdv_d_t.xcdv006
               LET gs_keys[8] = g_xcdv_d[g_detail_idx].xcdv007
               LET gs_keys_bak[8] = g_xcdv_d_t.xcdv007
               LET gs_keys[9] = g_xcdv_d[g_detail_idx].xcdv008
               LET gs_keys_bak[9] = g_xcdv_d_t.xcdv008
               LET gs_keys[10] = g_xcdv_d[g_detail_idx].xcdv009
               LET gs_keys_bak[10] = g_xcdv_d_t.xcdv009
               LET gs_keys[11] = g_xcdv_d[g_detail_idx].xcdv010
               LET gs_keys_bak[11] = g_xcdv_d_t.xcdv010
               LET gs_keys[12] = g_xcdv_d[g_detail_idx].xcdv011
               LET gs_keys_bak[12] = g_xcdv_d_t.xcdv011
               LET gs_keys[13] = g_xcdv_d[g_detail_idx].xcdv012
               LET gs_keys_bak[13] = g_xcdv_d_t.xcdv012
               CALL axct328_update_b('xcdv_t',gs_keys,gs_keys_bak,"'1'")
                     
 
                     #add-point:單頭修改後 name="input.head.a_update"
                     
                     #end add-point
    
                     #頭先不紀錄
                     #LET g_log1 = util.JSON.stringify(g_xcdv_m_t)
                     #LET g_log2 = util.JSON.stringify(g_xcdv_m)
                     #IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                     #   CALL s_transaction_end('N','0')
                     #ELSE
                        CALL s_transaction_end('Y','0')
                     #END IF
               END CASE
            
               #將遮罩欄位進行遮蔽
               CALL axct328_xcdv_t_mask_restore('restore_mask_n')
            
            ELSE    
               #add-point:單頭新增 name="input.head.a_insert"
               
               #end add-point
               
               #多語言處理
               
                         
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axct328_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            END IF
 
           LET g_xcdvld_t = g_xcdv_m.xcdvld
           LET g_xcdv003_t = g_xcdv_m.xcdv003
           LET g_xcdv004_t = g_xcdv_m.xcdv004
           LET g_xcdv005_t = g_xcdv_m.xcdv005
 
           
           IF g_xcdv_d.getLength() = 0 THEN
              NEXT FIELD xcdv001
           END IF
 
      END INPUT
 
{</section>}
 
{<section id="axct328.input.body" >}
      #Page1 預設值產生於此處
      INPUT ARRAY g_xcdv_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcdv_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axct328_b_fill(g_wc2) #test 
            #如果一直都在單頭則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm' 
            #add-point:資料輸入前 name="input.body.before_input"
            LET g_current_page = 1
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct328_idx_chk()
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axct328_cl USING g_enterprise,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005                          
               IF STATUS THEN
                  CLOSE axct328_cl
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct328_cl:" 
                  LET g_errparam.code   = STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            IF g_rec_b >= l_ac 
               AND g_xcdv_d[l_ac].xcdv001 IS NOT NULL
               AND g_xcdv_d[l_ac].xcdv002 IS NOT NULL
               AND g_xcdv_d[l_ac].xcdv006 IS NOT NULL
               AND g_xcdv_d[l_ac].xcdv007 IS NOT NULL
               AND g_xcdv_d[l_ac].xcdv008 IS NOT NULL
               AND g_xcdv_d[l_ac].xcdv009 IS NOT NULL
               AND g_xcdv_d[l_ac].xcdv010 IS NOT NULL
               AND g_xcdv_d[l_ac].xcdv011 IS NOT NULL
               AND g_xcdv_d[l_ac].xcdv012 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xcdv_d_t.* = g_xcdv_d[l_ac].*  #BACKUP
               LET g_xcdv_d_o.* = g_xcdv_d[l_ac].*  #BACKUP
               CALL axct328_set_entry_b(l_cmd)
               #add-point:set_entry_b後 name="input.body.before_row.set_entry_b"
               
               #end add-point
               CALL axct328_set_no_entry_b(l_cmd)
               OPEN axct328_bcl USING g_enterprise,g_xcdv_m.xcdvld,
                                                g_xcdv_m.xcdv003,
                                                g_xcdv_m.xcdv004,
                                                g_xcdv_m.xcdv005,
 
                                                g_xcdv_d_t.xcdv001
                                                ,g_xcdv_d_t.xcdv002
                                                ,g_xcdv_d_t.xcdv006
                                                ,g_xcdv_d_t.xcdv007
                                                ,g_xcdv_d_t.xcdv008
                                                ,g_xcdv_d_t.xcdv009
                                                ,g_xcdv_d_t.xcdv010
                                                ,g_xcdv_d_t.xcdv011
                                                ,g_xcdv_d_t.xcdv012
 
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct328_bcl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axct328_bcl INTO g_xcdv_d[l_ac].xcdv001,g_xcdv_d[l_ac].xcdv006,g_xcdv_d[l_ac].xcdv007, 
                      g_xcdv_d[l_ac].xcdv008,g_xcdv_d[l_ac].xcdv009,g_xcdv_d[l_ac].xcdv010,g_xcdv_d[l_ac].xcdv011, 
                      g_xcdv_d[l_ac].xcdv002,g_xcdv_d[l_ac].xcdv012,g_xcdv_d[l_ac].xcdv101,g_xcdv_d[l_ac].xcdv102 
 
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_xcdv_d_t.xcdv001,":",SQLERRMESSAGE 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
                      LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xcdv_d_mask_o[l_ac].* =  g_xcdv_d[l_ac].*
                  CALL axct328_xcdv_t_mask()
                  LET g_xcdv_d_mask_n[l_ac].* =  g_xcdv_d[l_ac].*
                  
                  CALL axct328_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            IF l_cmd='u' THEN
               IF g_glaa015 = 'Y' THEN
                  OPEN axct328_bcl USING g_enterprise,g_xcdv_m.xcdvld,
                                                g_xcdv_m.xcdv003,
                                                g_xcdv_m.xcdv004,
                                                g_xcdv_m.xcdv005,
 
                                                '2'
                                                ,g_xcdv_d_t.xcdv002
                                                ,g_xcdv_d_t.xcdv006
                                                ,g_xcdv_d_t.xcdv007
                                                ,g_xcdv_d_t.xcdv008
                                                ,g_xcdv_d_t.xcdv009
                                                ,g_xcdv_d_t.xcdv010
                                                ,g_xcdv_d_t.xcdv011
                                                ,g_xcdv_d_t.xcdv012
 
                  IF STATUS THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "OPEN axct328_bcl:xcdv001=2" 
                     LET g_errparam.code   =  STATUS 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw='Y'
                  END IF   
               END IF
               IF g_glaa019 = 'Y' THEN
                  OPEN axct328_bcl USING g_enterprise,g_xcdv_m.xcdvld,
                                                g_xcdv_m.xcdv003,
                                                g_xcdv_m.xcdv004,
                                                g_xcdv_m.xcdv005,
 
                                                '3'
                                                ,g_xcdv_d_t.xcdv002
                                                ,g_xcdv_d_t.xcdv006
                                                ,g_xcdv_d_t.xcdv007
                                                ,g_xcdv_d_t.xcdv008
                                                ,g_xcdv_d_t.xcdv009
                                                ,g_xcdv_d_t.xcdv010
                                                ,g_xcdv_d_t.xcdv011
                                                ,g_xcdv_d_t.xcdv012
 
                  IF STATUS THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "OPEN axct328_bcl:xcdv001=2" 
                     LET g_errparam.code   =  STATUS 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw='Y'
                  END IF   
               END IF
            END IF
            #end add-point  
            
 
        
         BEFORE INSERT
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            INITIALIZE g_xcdv_d_t.* TO NULL
            INITIALIZE g_xcdv_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xcdv_d[l_ac].* TO NULL
            #公用欄位預設值
              
            #一般欄位預設值
                  LET g_xcdv_d[l_ac].xcdv001 = "1"
      LET g_xcdv_d[l_ac].xcdv101 = "0"
      LET g_xcdv_d[l_ac].xcdv102 = "0"
 
            
            #add-point:modify段before備份 name="input.body.before_insert.before_bak"
            
            #end add-point
            LET g_xcdv_d_t.* = g_xcdv_d[l_ac].*     #新輸入資料
            LET g_xcdv_d_o.* = g_xcdv_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axct328_set_entry_b(l_cmd)
            #add-point:set_entry_b後 name="input.body.before_insert.set_entry_b"
            
            #end add-point
            CALL axct328_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xcdv_d[li_reproduce_target].* = g_xcdv_d[li_reproduce].*
 
               LET g_xcdv_d[g_xcdv_d.getLength()].xcdv001 = NULL
               LET g_xcdv_d[g_xcdv_d.getLength()].xcdv002 = NULL
               LET g_xcdv_d[g_xcdv_d.getLength()].xcdv006 = NULL
               LET g_xcdv_d[g_xcdv_d.getLength()].xcdv007 = NULL
               LET g_xcdv_d[g_xcdv_d.getLength()].xcdv008 = NULL
               LET g_xcdv_d[g_xcdv_d.getLength()].xcdv009 = NULL
               LET g_xcdv_d[g_xcdv_d.getLength()].xcdv010 = NULL
               LET g_xcdv_d[g_xcdv_d.getLength()].xcdv011 = NULL
               LET g_xcdv_d[g_xcdv_d.getLength()].xcdv012 = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xcdv_t 
             WHERE xcdvent = g_enterprise AND xcdvld = g_xcdv_m.xcdvld
               AND xcdv003 = g_xcdv_m.xcdv003
               AND xcdv004 = g_xcdv_m.xcdv004
               AND xcdv005 = g_xcdv_m.xcdv005
 
               AND xcdv001 = g_xcdv_d[l_ac].xcdv001
               AND xcdv002 = g_xcdv_d[l_ac].xcdv002
               AND xcdv006 = g_xcdv_d[l_ac].xcdv006
               AND xcdv007 = g_xcdv_d[l_ac].xcdv007
               AND xcdv008 = g_xcdv_d[l_ac].xcdv008
               AND xcdv009 = g_xcdv_d[l_ac].xcdv009
               AND xcdv010 = g_xcdv_d[l_ac].xcdv010
               AND xcdv011 = g_xcdv_d[l_ac].xcdv011
               AND xcdv012 = g_xcdv_d[l_ac].xcdv012
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前 name="input.body.b_insert"
               IF cl_null(g_xcdv_d[l_ac].xcdv002) THEN LET g_xcdv_d[l_ac].xcdv002 = ' ' END IF
               IF cl_null(g_xcdv_d[l_ac].xcdv008) THEN LET g_xcdv_d[l_ac].xcdv008 = ' ' END IF
               IF cl_null(g_xcdv_d[l_ac].xcdv010) THEN LET g_xcdv_d[l_ac].xcdv010 = ' ' END IF
               IF cl_null(g_xcdv_d[l_ac].xcdv011) THEN LET g_xcdv_d[l_ac].xcdv011 = ' ' END IF
               IF cl_null(g_xcdv_d[l_ac].xcdv101) THEN LET g_xcdv_d[l_ac].xcdv101 = 0 END IF
               #end add-point
               INSERT INTO xcdv_t
                           (xcdvent,
                            xcdvcomp,xcdv004,xcdv005,xcdvld,xcdv003,
                            xcdv001,xcdv002,xcdv006,xcdv007,xcdv008,xcdv009,xcdv010,xcdv011,xcdv012
                            ,xcdv101,xcdv102) 
                     VALUES(g_enterprise,
                            g_xcdv_m.xcdvcomp,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,
                            g_xcdv_d[l_ac].xcdv001,g_xcdv_d[l_ac].xcdv002,g_xcdv_d[l_ac].xcdv006,g_xcdv_d[l_ac].xcdv007, 
                                g_xcdv_d[l_ac].xcdv008,g_xcdv_d[l_ac].xcdv009,g_xcdv_d[l_ac].xcdv010, 
                                g_xcdv_d[l_ac].xcdv011,g_xcdv_d[l_ac].xcdv012
                            ,g_xcdv_d[l_ac].xcdv101,g_xcdv_d[l_ac].xcdv102)
               #add-point:單身新增中 name="input.body.m_insert"
               CALL axct328_insert_xcdv()
               #end add-point
               LET p_cmd = 'u'
               LET g_master_insert = TRUE
            ELSE    
               INITIALIZE g_xcdv_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcdv_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後 name="input.body.after_insert"
            
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               IF axct328_before_delete() THEN 
                  
 
 
                  #取得該筆資料key值
                  INITIALIZE gs_keys TO NULL
                  LET gs_keys[01] = g_xcdv_m.xcdvld
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdv_m.xcdv003
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdv_m.xcdv004
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdv_m.xcdv005
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdv_d_t.xcdv001
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdv_d_t.xcdv002
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdv_d_t.xcdv006
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdv_d_t.xcdv007
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdv_d_t.xcdv008
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdv_d_t.xcdv009
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdv_d_t.xcdv010
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdv_d_t.xcdv011
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdv_d_t.xcdv012
 
 
                  #刪除下層單身
                  IF NOT axct328_key_delete_b(gs_keys,'xcdv_t') THEN
                     CALL s_transaction_end('N','0')
                     CLOSE axct328_bcl
                     CANCEL DELETE
                  END IF
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axct328_bcl
               LET l_count = g_xcdv_d.getLength()
            END IF 
            
            #add-point:單身刪除後 name="input.body.a_delete"
            
            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE  name="input.body.after_delete"
               
               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_xcdv_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv001
            #add-point:BEFORE FIELD xcdv001 name="input.b.page1.xcdv001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv001
            
            #add-point:AFTER FIELD xcdv001 name="input.a.page1.xcdv001"
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv011 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv012 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv_d[g_detail_idx].xcdv001 != g_xcdv_d_t.xcdv001 OR g_xcdv_d[g_detail_idx].xcdv002 != g_xcdv_d_t.xcdv002 OR g_xcdv_d[g_detail_idx].xcdv006 != g_xcdv_d_t.xcdv006 OR g_xcdv_d[g_detail_idx].xcdv007 != g_xcdv_d_t.xcdv007 OR g_xcdv_d[g_detail_idx].xcdv008 != g_xcdv_d_t.xcdv008 OR g_xcdv_d[g_detail_idx].xcdv009 != g_xcdv_d_t.xcdv009 OR g_xcdv_d[g_detail_idx].xcdv010 != g_xcdv_d_t.xcdv010 OR g_xcdv_d[g_detail_idx].xcdv011 != g_xcdv_d_t.xcdv011 OR g_xcdv_d[g_detail_idx].xcdv012 != g_xcdv_d_t.xcdv012)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv_d[g_detail_idx].xcdv011 ||"' AND "|| "xcdv012 = '"||g_xcdv_d[g_detail_idx].xcdv012 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdv001
            #add-point:ON CHANGE xcdv001 name="input.g.page1.xcdv001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv006
            #add-point:BEFORE FIELD xcdv006 name="input.b.page1.xcdv006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv006
            
            #add-point:AFTER FIELD xcdv006 name="input.a.page1.xcdv006"
            #應用 a05 樣板自動產生(Version:1)
            #160929-00005#6---add---s
            IF NOT cl_null(g_xcdv_d[l_ac].xcdv006) THEN 
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcdv_m.xcdvcomp
               LET g_chkparam.arg2 = g_xcdv_d[l_ac].xcdv006
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_sfaadocno_3") THEN
                  SELECT sfaa061 INTO l_sfaa061
                    FROM sfaa_t
                   WHERE sfaaent = g_enterprise
                     AND sfaadocno = g_xcdv_d[l_ac].xcdv006
                  IF l_sfaa061 <> 'Y' THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_xcdv_d[l_ac].xcdv006
                     LET g_errparam.code   = 'axc-00793' 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     NEXT FIELD CURRENT                    
                  END IF                
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            END IF 
            #160929-00005#6---add---e
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv011 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv012 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv_d[g_detail_idx].xcdv001 != g_xcdv_d_t.xcdv001 OR g_xcdv_d[g_detail_idx].xcdv002 != g_xcdv_d_t.xcdv002 OR g_xcdv_d[g_detail_idx].xcdv006 != g_xcdv_d_t.xcdv006 OR g_xcdv_d[g_detail_idx].xcdv007 != g_xcdv_d_t.xcdv007 OR g_xcdv_d[g_detail_idx].xcdv008 != g_xcdv_d_t.xcdv008 OR g_xcdv_d[g_detail_idx].xcdv009 != g_xcdv_d_t.xcdv009 OR g_xcdv_d[g_detail_idx].xcdv010 != g_xcdv_d_t.xcdv010 OR g_xcdv_d[g_detail_idx].xcdv011 != g_xcdv_d_t.xcdv011 OR g_xcdv_d[g_detail_idx].xcdv012 != g_xcdv_d_t.xcdv012)) THEN 
                  
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv_d[g_detail_idx].xcdv011 ||"' AND "|| "xcdv012 = '"||g_xcdv_d[g_detail_idx].xcdv012 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF l_cmd = 'a' THEN
               CALL axct328_insert_default()
               CALL axct328_detail_ref(g_xcdv_d[l_ac].xcdv002,g_xcdv_d[l_ac].xcdv007,g_xcdv_d[l_ac].xcdv009,g_xcdv_d[l_ac].xcdv012)
               RETURNING g_xcdv_d[l_ac].xcdv002_desc,g_xcdv_d[l_ac].xcdv009_desc,g_xcdv_d[l_ac].xcdv009_desc_desc,
                         g_xcdv_d[l_ac].xcdv007_desc,g_xcdv_d[l_ac].xcdv012_desc
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdv006
            #add-point:ON CHANGE xcdv006 name="input.g.page1.xcdv006"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv007
            
            #add-point:AFTER FIELD xcdv007 name="input.a.page1.xcdv007"
            #應用 a05 樣板自動產生(Version:1)
            #160929-00005#6---add---s
            IF NOT cl_null(g_xcdv_d[l_ac].xcdv007) THEN 
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_xcdv_m.xcdvcomp
               LET g_chkparam.arg2 = g_xcdv_d[l_ac].xcdv006
               LET g_chkparam.arg3 = g_xcdv_d[l_ac].xcdv007
               IF cl_chk_exist("v_sfcb003_1") THEN
                  IF NOT cl_null(g_xcdv_d[l_ac].xcdv008) THEN 
                     INITIALIZE g_chkparam.* TO NULL
                     LET g_chkparam.arg1 = g_xcdv_m.xcdvcomp
                     LET g_chkparam.arg2 = g_xcdv_d[l_ac].xcdv006
                     LET g_chkparam.arg3 = g_xcdv_d[l_ac].xcdv007
                     LET g_chkparam.arg4 = g_xcdv_d[l_ac].xcdv008
                     IF cl_chk_exist("v_sfba003") THEN
                     ELSE
                        LET g_xcdv_d[l_ac].xcdv007 = g_xcdv_d_t.xcdv007
                        NEXT FIELD CURRENT
                     END IF
                  END IF                   
               ELSE
                  #檢查失敗時後續處理
                  LET g_xcdv_d[l_ac].xcdv007 = g_xcdv_d_t.xcdv007
                  NEXT FIELD CURRENT
               END IF

            END IF             
            #160929-00005#6---add---e
            
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv011 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv012 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv_d[g_detail_idx].xcdv001 != g_xcdv_d_t.xcdv001 OR g_xcdv_d[g_detail_idx].xcdv002 != g_xcdv_d_t.xcdv002 OR g_xcdv_d[g_detail_idx].xcdv006 != g_xcdv_d_t.xcdv006 OR g_xcdv_d[g_detail_idx].xcdv007 != g_xcdv_d_t.xcdv007 OR g_xcdv_d[g_detail_idx].xcdv008 != g_xcdv_d_t.xcdv008 OR g_xcdv_d[g_detail_idx].xcdv009 != g_xcdv_d_t.xcdv009 OR g_xcdv_d[g_detail_idx].xcdv010 != g_xcdv_d_t.xcdv010 OR g_xcdv_d[g_detail_idx].xcdv011 != g_xcdv_d_t.xcdv011 OR g_xcdv_d[g_detail_idx].xcdv012 != g_xcdv_d_t.xcdv012)) THEN 
                  
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv_d[g_detail_idx].xcdv011 ||"' AND "|| "xcdv012 = '"||g_xcdv_d[g_detail_idx].xcdv012 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF l_cmd = 'a' THEN
               CALL axct328_insert_default()
               CALL axct328_detail_ref(g_xcdv_d[l_ac].xcdv002,g_xcdv_d[l_ac].xcdv007,g_xcdv_d[l_ac].xcdv009,g_xcdv_d[l_ac].xcdv012)
               RETURNING g_xcdv_d[l_ac].xcdv002_desc,g_xcdv_d[l_ac].xcdv009_desc,g_xcdv_d[l_ac].xcdv009_desc_desc,
                         g_xcdv_d[l_ac].xcdv007_desc,g_xcdv_d[l_ac].xcdv012_desc
            END IF
           
            INITIALIZE g_ref_fields TO NULL                                                                                                                                                                                                                                                                                                
            LET g_ref_fields[1] = g_xcdv_d[l_ac].xcdv007
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcdv_d[l_ac].xcdv007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcdv_d[l_ac].xcdv007_desc
            
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv007
            #add-point:BEFORE FIELD xcdv007 name="input.b.page1.xcdv007"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdv007
            #add-point:ON CHANGE xcdv007 name="input.g.page1.xcdv007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv008
            #add-point:BEFORE FIELD xcdv008 name="input.b.page1.xcdv008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv008
            
            #add-point:AFTER FIELD xcdv008 name="input.a.page1.xcdv008"
            #應用 a05 樣板自動產生(Version:1)
            #160929-00005#6---add---s
            IF NOT cl_null(g_xcdv_d[l_ac].xcdv008) THEN 
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_xcdv_m.xcdvcomp
               LET g_chkparam.arg2 = g_xcdv_d[l_ac].xcdv006
               LET g_chkparam.arg3 = g_xcdv_d[l_ac].xcdv007
               LET g_chkparam.arg4 = g_xcdv_d[l_ac].xcdv008
               IF cl_chk_exist("v_sfba003") THEN
               ELSE
                  LET g_xcdv_d[l_ac].xcdv008 = g_xcdv_d_t.xcdv008
                  NEXT FIELD CURRENT
               END IF
            END IF                             
            #160929-00005#6---add---e            
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv011 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv012 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv_d[g_detail_idx].xcdv001 != g_xcdv_d_t.xcdv001 OR g_xcdv_d[g_detail_idx].xcdv002 != g_xcdv_d_t.xcdv002 OR g_xcdv_d[g_detail_idx].xcdv006 != g_xcdv_d_t.xcdv006 OR g_xcdv_d[g_detail_idx].xcdv007 != g_xcdv_d_t.xcdv007 OR g_xcdv_d[g_detail_idx].xcdv008 != g_xcdv_d_t.xcdv008 OR g_xcdv_d[g_detail_idx].xcdv009 != g_xcdv_d_t.xcdv009 OR g_xcdv_d[g_detail_idx].xcdv010 != g_xcdv_d_t.xcdv010 OR g_xcdv_d[g_detail_idx].xcdv011 != g_xcdv_d_t.xcdv011 OR g_xcdv_d[g_detail_idx].xcdv012 != g_xcdv_d_t.xcdv012)) THEN 
                  
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv_d[g_detail_idx].xcdv011 ||"' AND "|| "xcdv012 = '"||g_xcdv_d[g_detail_idx].xcdv012 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF l_cmd = 'a' THEN
               CALL axct328_insert_default()
               CALL axct328_detail_ref(g_xcdv_d[l_ac].xcdv002,g_xcdv_d[l_ac].xcdv007,g_xcdv_d[l_ac].xcdv009,g_xcdv_d[l_ac].xcdv012)
               RETURNING g_xcdv_d[l_ac].xcdv002_desc,g_xcdv_d[l_ac].xcdv009_desc,g_xcdv_d[l_ac].xcdv009_desc_desc,
                         g_xcdv_d[l_ac].xcdv007_desc,g_xcdv_d[l_ac].xcdv012_desc
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdv008
            #add-point:ON CHANGE xcdv008 name="input.g.page1.xcdv008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv009
            
            #add-point:AFTER FIELD xcdv009 name="input.a.page1.xcdv009"
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv011 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv012 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv_d[g_detail_idx].xcdv001 != g_xcdv_d_t.xcdv001 OR g_xcdv_d[g_detail_idx].xcdv002 != g_xcdv_d_t.xcdv002 OR g_xcdv_d[g_detail_idx].xcdv006 != g_xcdv_d_t.xcdv006 OR g_xcdv_d[g_detail_idx].xcdv007 != g_xcdv_d_t.xcdv007 OR g_xcdv_d[g_detail_idx].xcdv008 != g_xcdv_d_t.xcdv008 OR g_xcdv_d[g_detail_idx].xcdv009 != g_xcdv_d_t.xcdv009 OR g_xcdv_d[g_detail_idx].xcdv010 != g_xcdv_d_t.xcdv010 OR g_xcdv_d[g_detail_idx].xcdv011 != g_xcdv_d_t.xcdv011 OR g_xcdv_d[g_detail_idx].xcdv012 != g_xcdv_d_t.xcdv012)) THEN 
                  
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv_d[g_detail_idx].xcdv011 ||"' AND "|| "xcdv012 = '"||g_xcdv_d[g_detail_idx].xcdv012 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF l_cmd = 'a' THEN
               CALL axct328_insert_default()
               CALL axct328_detail_ref(g_xcdv_d[l_ac].xcdv002,g_xcdv_d[l_ac].xcdv007,g_xcdv_d[l_ac].xcdv009,g_xcdv_d[l_ac].xcdv012)
               RETURNING g_xcdv_d[l_ac].xcdv002_desc,g_xcdv_d[l_ac].xcdv009_desc,g_xcdv_d[l_ac].xcdv009_desc_desc,
                         g_xcdv_d[l_ac].xcdv007_desc,g_xcdv_d[l_ac].xcdv012_desc
            END IF
            CALL s_desc_get_item_desc(g_xcdv_d[l_ac].xcdv009) 
                RETURNING g_xcdv_d[l_ac].xcdv009_desc,g_xcdv_d[l_ac].xcdv009_desc_desc
            DISPLAY BY NAME g_xcdv_d[l_ac].xcdv009_desc,g_xcdv_d[l_ac].xcdv009_desc_desc
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv009
            #add-point:BEFORE FIELD xcdv009 name="input.b.page1.xcdv009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdv009
            #add-point:ON CHANGE xcdv009 name="input.g.page1.xcdv009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv010
            #add-point:BEFORE FIELD xcdv010 name="input.b.page1.xcdv010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv010
            
            #add-point:AFTER FIELD xcdv010 name="input.a.page1.xcdv010"
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv011 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv012 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv_d[g_detail_idx].xcdv001 != g_xcdv_d_t.xcdv001 OR g_xcdv_d[g_detail_idx].xcdv002 != g_xcdv_d_t.xcdv002 OR g_xcdv_d[g_detail_idx].xcdv006 != g_xcdv_d_t.xcdv006 OR g_xcdv_d[g_detail_idx].xcdv007 != g_xcdv_d_t.xcdv007 OR g_xcdv_d[g_detail_idx].xcdv008 != g_xcdv_d_t.xcdv008 OR g_xcdv_d[g_detail_idx].xcdv009 != g_xcdv_d_t.xcdv009 OR g_xcdv_d[g_detail_idx].xcdv010 != g_xcdv_d_t.xcdv010 OR g_xcdv_d[g_detail_idx].xcdv011 != g_xcdv_d_t.xcdv011 OR g_xcdv_d[g_detail_idx].xcdv012 != g_xcdv_d_t.xcdv012)) THEN 
                  
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv_d[g_detail_idx].xcdv011 ||"' AND "|| "xcdv012 = '"||g_xcdv_d[g_detail_idx].xcdv012 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF l_cmd = 'a' THEN
               CALL axct328_insert_default()
               CALL axct328_detail_ref(g_xcdv_d[l_ac].xcdv002,g_xcdv_d[l_ac].xcdv007,g_xcdv_d[l_ac].xcdv009,g_xcdv_d[l_ac].xcdv012)
               RETURNING g_xcdv_d[l_ac].xcdv002_desc,g_xcdv_d[l_ac].xcdv009_desc,g_xcdv_d[l_ac].xcdv009_desc_desc,
                         g_xcdv_d[l_ac].xcdv007_desc,g_xcdv_d[l_ac].xcdv012_desc
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdv010
            #add-point:ON CHANGE xcdv010 name="input.g.page1.xcdv010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv011
            #add-point:BEFORE FIELD xcdv011 name="input.b.page1.xcdv011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv011
            
            #add-point:AFTER FIELD xcdv011 name="input.a.page1.xcdv011"
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv011 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv012 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv_d[g_detail_idx].xcdv001 != g_xcdv_d_t.xcdv001 OR g_xcdv_d[g_detail_idx].xcdv002 != g_xcdv_d_t.xcdv002 OR g_xcdv_d[g_detail_idx].xcdv006 != g_xcdv_d_t.xcdv006 OR g_xcdv_d[g_detail_idx].xcdv007 != g_xcdv_d_t.xcdv007 OR g_xcdv_d[g_detail_idx].xcdv008 != g_xcdv_d_t.xcdv008 OR g_xcdv_d[g_detail_idx].xcdv009 != g_xcdv_d_t.xcdv009 OR g_xcdv_d[g_detail_idx].xcdv010 != g_xcdv_d_t.xcdv010 OR g_xcdv_d[g_detail_idx].xcdv011 != g_xcdv_d_t.xcdv011 OR g_xcdv_d[g_detail_idx].xcdv012 != g_xcdv_d_t.xcdv012)) THEN 
                  
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv_d[g_detail_idx].xcdv011 ||"' AND "|| "xcdv012 = '"||g_xcdv_d[g_detail_idx].xcdv012 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF l_cmd = 'a' THEN
               CALL axct328_insert_default()
               CALL axct328_detail_ref(g_xcdv_d[l_ac].xcdv002,g_xcdv_d[l_ac].xcdv007,g_xcdv_d[l_ac].xcdv009,g_xcdv_d[l_ac].xcdv012)
               RETURNING g_xcdv_d[l_ac].xcdv002_desc,g_xcdv_d[l_ac].xcdv009_desc,g_xcdv_d[l_ac].xcdv009_desc_desc,
                         g_xcdv_d[l_ac].xcdv007_desc,g_xcdv_d[l_ac].xcdv012_desc
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdv011
            #add-point:ON CHANGE xcdv011 name="input.g.page1.xcdv011"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv002
            
            #add-point:AFTER FIELD xcdv002 name="input.a.page1.xcdv002"
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv011 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv012 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv_d[g_detail_idx].xcdv001 != g_xcdv_d_t.xcdv001 OR g_xcdv_d[g_detail_idx].xcdv002 != g_xcdv_d_t.xcdv002 OR g_xcdv_d[g_detail_idx].xcdv006 != g_xcdv_d_t.xcdv006 OR g_xcdv_d[g_detail_idx].xcdv007 != g_xcdv_d_t.xcdv007 OR g_xcdv_d[g_detail_idx].xcdv008 != g_xcdv_d_t.xcdv008 OR g_xcdv_d[g_detail_idx].xcdv009 != g_xcdv_d_t.xcdv009 OR g_xcdv_d[g_detail_idx].xcdv010 != g_xcdv_d_t.xcdv010 OR g_xcdv_d[g_detail_idx].xcdv011 != g_xcdv_d_t.xcdv011 OR g_xcdv_d[g_detail_idx].xcdv012 != g_xcdv_d_t.xcdv012)) THEN 
                  
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv_d[g_detail_idx].xcdv011 ||"' AND "|| "xcdv012 = '"||g_xcdv_d[g_detail_idx].xcdv012 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF l_cmd = 'a' THEN
               CALL axct328_insert_default()
               CALL axct328_detail_ref(g_xcdv_d[l_ac].xcdv002,g_xcdv_d[l_ac].xcdv007,g_xcdv_d[l_ac].xcdv009,g_xcdv_d[l_ac].xcdv012)
               RETURNING g_xcdv_d[l_ac].xcdv002_desc,g_xcdv_d[l_ac].xcdv009_desc,g_xcdv_d[l_ac].xcdv009_desc_desc,
                         g_xcdv_d[l_ac].xcdv007_desc,g_xcdv_d[l_ac].xcdv012_desc
            END IF

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcdv_m.xcdvcomp
            LET g_ref_fields[2] = g_xcdv_d[l_ac].xcdv002
            CALL ap_ref_array2(g_ref_fields,"SELECT xcbfl003 FROM xcbfl_t WHERE xcbflent='"||g_enterprise||"' AND xcbflcomp=? AND xcbfl001=? AND xcbfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcdv_d[l_ac].xcdv002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcdv_d[l_ac].xcdv002_desc
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv002
            #add-point:BEFORE FIELD xcdv002 name="input.b.page1.xcdv002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdv002
            #add-point:ON CHANGE xcdv002 name="input.g.page1.xcdv002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv012
            
            #add-point:AFTER FIELD xcdv012 name="input.a.page1.xcdv012"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv011 IS NOT NULL AND g_xcdv_d[g_detail_idx].xcdv012 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv_d[g_detail_idx].xcdv001 != g_xcdv_d_t.xcdv001 OR g_xcdv_d[g_detail_idx].xcdv002 != g_xcdv_d_t.xcdv002 OR g_xcdv_d[g_detail_idx].xcdv006 != g_xcdv_d_t.xcdv006 OR g_xcdv_d[g_detail_idx].xcdv007 != g_xcdv_d_t.xcdv007 OR g_xcdv_d[g_detail_idx].xcdv008 != g_xcdv_d_t.xcdv008 OR g_xcdv_d[g_detail_idx].xcdv009 != g_xcdv_d_t.xcdv009 OR g_xcdv_d[g_detail_idx].xcdv010 != g_xcdv_d_t.xcdv010 OR g_xcdv_d[g_detail_idx].xcdv011 != g_xcdv_d_t.xcdv011 OR g_xcdv_d[g_detail_idx].xcdv012 != g_xcdv_d_t.xcdv012)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv_d[g_detail_idx].xcdv011 ||"' AND "|| "xcdv012 = '"||g_xcdv_d[g_detail_idx].xcdv012 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv012
            #add-point:BEFORE FIELD xcdv012 name="input.b.page1.xcdv012"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdv012
            #add-point:ON CHANGE xcdv012 name="input.g.page1.xcdv012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv101
            #add-point:BEFORE FIELD xcdv101 name="input.b.page1.xcdv101"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv101
            
            #add-point:AFTER FIELD xcdv101 name="input.a.page1.xcdv101"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdv101
            #add-point:ON CHANGE xcdv101 name="input.g.page1.xcdv101"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdv102
            #add-point:BEFORE FIELD xcdv102 name="input.b.page1.xcdv102"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdv102
            
            #add-point:AFTER FIELD xcdv102 name="input.a.page1.xcdv102"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdv102
            #add-point:ON CHANGE xcdv102 name="input.g.page1.xcdv102"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.xcdv001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv001
            #add-point:ON ACTION controlp INFIELD xcdv001 name="input.c.page1.xcdv001"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcdv006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv006
            #add-point:ON ACTION controlp INFIELD xcdv006 name="input.c.page1.xcdv006"
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv_d[l_ac].xcdv006             #給予default值
            LET g_qryparam.default2 = "" #g_xcdv_d[l_ac].sfbaseq1 #项序
            LET g_qryparam.default3 = "" #g_xcdv_d[l_ac].sfaadocno #单号
            #給予arg
            LET g_qryparam.arg1 = "" #s
            #160929-00005#6---add---s
            LET g_qryparam.where = " sfaa049 > 0 AND sfaa065 = '0' AND sfaasite = '",g_xcdv_m.xcdvcomp,"'",
                                   " AND sfaa061='Y'"              
            LET l_site_t = g_site
            LET g_site = g_xcdv_m.xcdvcomp           
            #160929-00005#6---add---e
            
            CALL q_sfbadocno()                                #呼叫開窗
            LET g_site = l_site_t  #160929-00005#6
            LET g_xcdv_d[l_ac].xcdv006 = g_qryparam.return1              
            LET g_sfbaseq = g_qryparam.return2 
            LET g_sfbaseq1 = g_qryparam.return3 
            
            DISPLAY g_xcdv_d[l_ac].xcdv006 TO xcdv006              #
            #DISPLAY g_xcdv_d[l_ac].sfbaseq1 TO sfbaseq1 #项序
            #DISPLAY g_xcdv_d[l_ac].sfaadocno TO sfaadocno #单号
            NEXT FIELD xcdv006                          #返回原欄位

            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcdv007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv007
            #add-point:ON ACTION controlp INFIELD xcdv007 name="input.c.page1.xcdv007"
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv_d[l_ac].xcdv007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            #160929-00005#6---mod---s
            IF NOT cl_null(g_xcdv_d[l_ac].xcdv006) THEN
               LET g_qryparam.where = " sfcbdocno = '",g_xcdv_d[l_ac].xcdv006,"'"  
            END IF            
            #CALL q_sfba003()                                #呼叫開窗

            #LET g_xcdv_d[l_ac].xcdv007 = g_qryparam.return1     
            CALL q_sfcb003_4()
            LET g_xcdv_d[l_ac].xcdv007 = g_qryparam.return1              
            LET g_xcdv_d[l_ac].xcdv008 = g_qryparam.return3                 
            #160929-00005#6---mod---e            
         

            DISPLAY g_xcdv_d[l_ac].xcdv007 TO xcdv007              #

            NEXT FIELD xcdv007                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xcdv008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv008
            #add-point:ON ACTION controlp INFIELD xcdv008 name="input.c.page1.xcdv008"
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv_d[l_ac].xcdv008             #給予default值
            
            #給予arg
            LET g_qryparam.arg1 = "" #s
            #160929-00005#6---mod---s
            IF NOT cl_null(g_xcdv_d[l_ac].xcdv006) THEN
               LET g_qryparam.where = " sfcbdocno = '",g_xcdv_d[l_ac].xcdv006,"'"  
            END IF            
            #CALL q_sfba004()                                #呼叫開窗
            #LET g_xcdv_d[l_ac].xcdv008 = g_qryparam.return1
            CALL q_sfcb003_4()
            LET g_xcdv_d[l_ac].xcdv007 = g_qryparam.return1              
            LET g_xcdv_d[l_ac].xcdv008 = g_qryparam.return3                 
            #160929-00005#6---mod---e

            DISPLAY g_xcdv_d[l_ac].xcdv008 TO xcdv008              #

            NEXT FIELD xcdv008                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xcdv009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv009
            #add-point:ON ACTION controlp INFIELD xcdv009 name="input.c.page1.xcdv009"
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv_d[l_ac].xcdv009             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_imag001_2()                                #呼叫開窗

            LET g_xcdv_d[l_ac].xcdv009 = g_qryparam.return1              

            DISPLAY g_xcdv_d[l_ac].xcdv009 TO xcdv009              #

            NEXT FIELD xcdv009                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xcdv010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv010
            #add-point:ON ACTION controlp INFIELD xcdv010 name="input.c.page1.xcdv010"
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv_d[l_ac].xcdv010             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_bmaa002_1()                                #呼叫開窗

            LET g_xcdv_d[l_ac].xcdv010 = g_qryparam.return1              

            DISPLAY g_xcdv_d[l_ac].xcdv010 TO xcdv010              #

            NEXT FIELD xcdv010                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xcdv011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv011
            #add-point:ON ACTION controlp INFIELD xcdv011 name="input.c.page1.xcdv011"
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv_d[l_ac].xcdv011             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_inaj010()                                #呼叫開窗

            LET g_xcdv_d[l_ac].xcdv011 = g_qryparam.return1              

            DISPLAY g_xcdv_d[l_ac].xcdv011 TO xcdv011              #

            NEXT FIELD xcdv011                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xcdv002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv002
            #add-point:ON ACTION controlp INFIELD xcdv002 name="input.c.page1.xcdv002"
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv_d[l_ac].xcdv002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_xcbf001()                                #呼叫開窗

            LET g_xcdv_d[l_ac].xcdv002 = g_qryparam.return1              

            DISPLAY g_xcdv_d[l_ac].xcdv002 TO xcdv002              #

            NEXT FIELD xcdv002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xcdv012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv012
            #add-point:ON ACTION controlp INFIELD xcdv012 name="input.c.page1.xcdv012"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv_d[l_ac].xcdv012             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_xcau001()                                #呼叫開窗

            LET g_xcdv_d[l_ac].xcdv012 = g_qryparam.return1              

            DISPLAY g_xcdv_d[l_ac].xcdv012 TO xcdv012              #

            NEXT FIELD xcdv012                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xcdv101
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv101
            #add-point:ON ACTION controlp INFIELD xcdv101 name="input.c.page1.xcdv101"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcdv102
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdv102
            #add-point:ON ACTION controlp INFIELD xcdv102 name="input.c.page1.xcdv102"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xcdv_d[l_ac].* = g_xcdv_d_t.*
               CLOSE axct328_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xcdv_d[l_ac].xcdv001 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xcdv_d[l_ac].* = g_xcdv_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               
            
               #add-point:單身修改前 name="input.body.b_update"
               IF cl_null(g_xcdv_d[l_ac].xcdv010) THEN LET g_xcdv_d[l_ac].xcdv010 = ' ' END IF
               IF cl_null(g_xcdv_d[l_ac].xcdv101) THEN LET g_xcdv_d[l_ac].xcdv101 = 0 END IF
               #end add-point
         
               #將遮罩欄位還原
               CALL axct328_xcdv_t_mask_restore('restore_mask_o')
         
               UPDATE xcdv_t SET (xcdvld,xcdv003,xcdv004,xcdv005,xcdv001,xcdv006,xcdv007,xcdv008,xcdv009, 
                   xcdv010,xcdv011,xcdv002,xcdv012,xcdv101,xcdv102) = (g_xcdv_m.xcdvld,g_xcdv_m.xcdv003, 
                   g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,g_xcdv_d[l_ac].xcdv001,g_xcdv_d[l_ac].xcdv006,g_xcdv_d[l_ac].xcdv007, 
                   g_xcdv_d[l_ac].xcdv008,g_xcdv_d[l_ac].xcdv009,g_xcdv_d[l_ac].xcdv010,g_xcdv_d[l_ac].xcdv011, 
                   g_xcdv_d[l_ac].xcdv002,g_xcdv_d[l_ac].xcdv012,g_xcdv_d[l_ac].xcdv101,g_xcdv_d[l_ac].xcdv102) 
 
                WHERE xcdvent = g_enterprise AND xcdvld = g_xcdv_m.xcdvld 
                 AND xcdv003 = g_xcdv_m.xcdv003 
                 AND xcdv004 = g_xcdv_m.xcdv004 
                 AND xcdv005 = g_xcdv_m.xcdv005 
 
                 AND xcdv001 = g_xcdv_d_t.xcdv001 #項次   
                 AND xcdv002 = g_xcdv_d_t.xcdv002  
                 AND xcdv006 = g_xcdv_d_t.xcdv006  
                 AND xcdv007 = g_xcdv_d_t.xcdv007  
                 AND xcdv008 = g_xcdv_d_t.xcdv008  
                 AND xcdv009 = g_xcdv_d_t.xcdv009  
                 AND xcdv010 = g_xcdv_d_t.xcdv010  
                 AND xcdv011 = g_xcdv_d_t.xcdv011  
                 AND xcdv012 = g_xcdv_d_t.xcdv012  
 
                 
               #add-point:單身修改中 name="input.body.m_update"
               CALL axct328_update_xcdv()
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcdv_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "xcdv_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcdv_m.xcdvld
               LET gs_keys_bak[1] = g_xcdvld_t
               LET gs_keys[2] = g_xcdv_m.xcdv003
               LET gs_keys_bak[2] = g_xcdv003_t
               LET gs_keys[3] = g_xcdv_m.xcdv004
               LET gs_keys_bak[3] = g_xcdv004_t
               LET gs_keys[4] = g_xcdv_m.xcdv005
               LET gs_keys_bak[4] = g_xcdv005_t
               LET gs_keys[5] = g_xcdv_d[g_detail_idx].xcdv001
               LET gs_keys_bak[5] = g_xcdv_d_t.xcdv001
               LET gs_keys[6] = g_xcdv_d[g_detail_idx].xcdv002
               LET gs_keys_bak[6] = g_xcdv_d_t.xcdv002
               LET gs_keys[7] = g_xcdv_d[g_detail_idx].xcdv006
               LET gs_keys_bak[7] = g_xcdv_d_t.xcdv006
               LET gs_keys[8] = g_xcdv_d[g_detail_idx].xcdv007
               LET gs_keys_bak[8] = g_xcdv_d_t.xcdv007
               LET gs_keys[9] = g_xcdv_d[g_detail_idx].xcdv008
               LET gs_keys_bak[9] = g_xcdv_d_t.xcdv008
               LET gs_keys[10] = g_xcdv_d[g_detail_idx].xcdv009
               LET gs_keys_bak[10] = g_xcdv_d_t.xcdv009
               LET gs_keys[11] = g_xcdv_d[g_detail_idx].xcdv010
               LET gs_keys_bak[11] = g_xcdv_d_t.xcdv010
               LET gs_keys[12] = g_xcdv_d[g_detail_idx].xcdv011
               LET gs_keys_bak[12] = g_xcdv_d_t.xcdv011
               LET gs_keys[13] = g_xcdv_d[g_detail_idx].xcdv012
               LET gs_keys_bak[13] = g_xcdv_d_t.xcdv012
               CALL axct328_update_b('xcdv_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     #修改歷程記錄(單身修改)
                     LET g_log1 = util.JSON.stringify(g_xcdv_m),util.JSON.stringify(g_xcdv_d_t)
                     LET g_log2 = util.JSON.stringify(g_xcdv_m),util.JSON.stringify(g_xcdv_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axct328_xcdv_t_mask_restore('restore_mask_n')
               
               #若Key欄位有變動
               LET ls_keys[01] = g_xcdv_m.xcdvld
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv_m.xcdv003
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv_m.xcdv004
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv_m.xcdv005
 
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv_d_t.xcdv001
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv_d_t.xcdv002
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv_d_t.xcdv006
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv_d_t.xcdv007
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv_d_t.xcdv008
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv_d_t.xcdv009
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv_d_t.xcdv010
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv_d_t.xcdv011
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv_d_t.xcdv012
 
               CALL axct328_key_update_b(ls_keys)
               
               #add-point:單身修改後 name="input.body.a_update"
               CALL s_transaction_end('Y','0') 
               #end add-point
            END IF
 
         AFTER ROW
            #add-point:input段after row name="input.body.after_row"
            
            #end add-point  
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               CLOSE axct328_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xcdv_d[l_ac].* = g_xcdv_d_t.*
               END IF
               EXIT DIALOG 
            END IF
 
            CLOSE axct328_bcl
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xcdv_d.getLength() = 0 THEN
               NEXT FIELD xcdv001
            END IF
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point    
            
         ON ACTION controlo   
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xcdv_d[li_reproduce_target].* = g_xcdv_d[li_reproduce].*
 
               LET g_xcdv_d[li_reproduce_target].xcdv001 = NULL
               LET g_xcdv_d[li_reproduce_target].xcdv002 = NULL
               LET g_xcdv_d[li_reproduce_target].xcdv006 = NULL
               LET g_xcdv_d[li_reproduce_target].xcdv007 = NULL
               LET g_xcdv_d[li_reproduce_target].xcdv008 = NULL
               LET g_xcdv_d[li_reproduce_target].xcdv009 = NULL
               LET g_xcdv_d[li_reproduce_target].xcdv010 = NULL
               LET g_xcdv_d[li_reproduce_target].xcdv011 = NULL
               LET g_xcdv_d[li_reproduce_target].xcdv012 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_xcdv_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xcdv_d.getLength()+1
            END IF
            
      END INPUT
 
 
      
 
      
 
      
 
    
      #add-point:input段more_input name="input.more_inputarray"
      INPUT ARRAY g_xcdv2_d FROM s_detail2.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = 0,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = 0)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcdv2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axct328_b_fill_2() #test 
            #如果一直都在單頭則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm' 
            #add-point:資料輸入前
            LET g_current_page = 2
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct328_idx_chk()
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axct328_cl USING g_enterprise,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005                          
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct328_cl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLOSE axct328_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_xcdv2_d[l_ac].xcdv001 IS NOT NULL
               AND g_xcdv2_d[l_ac].xcdv002 IS NOT NULL
               AND g_xcdv2_d[l_ac].xcdv006 IS NOT NULL
               AND g_xcdv2_d[l_ac].xcdv007 IS NOT NULL
               AND g_xcdv2_d[l_ac].xcdv008 IS NOT NULL
               AND g_xcdv2_d[l_ac].xcdv009 IS NOT NULL
               AND g_xcdv2_d[l_ac].xcdv010 IS NOT NULL
               AND g_xcdv2_d[l_ac].xcdv011 IS NOT NULL
               AND g_xcdv2_d[l_ac].xcdv012 IS NOT NULL
            THEN
               LET l_cmd='u'
               LET g_xcdv2_d_t.* = g_xcdv2_d[l_ac].*  #BACKUP
               LET g_xcdv2_d_o.* = g_xcdv2_d[l_ac].*  #BACKUP
               CALL axct328_set_entry_b(l_cmd)
               #add-point:set_entry_b後

               #end add-point
               CALL axct328_set_no_entry_b(l_cmd)
               OPEN axct328_bcl USING g_enterprise,g_xcdv_m.xcdvld,
                                                g_xcdv_m.xcdv003,
                                                g_xcdv_m.xcdv004,
                                                g_xcdv_m.xcdv005,
 
                                                g_xcdv2_d_t.xcdv001
                                                ,g_xcdv2_d_t.xcdv002
                                                ,g_xcdv2_d_t.xcdv006
                                                ,g_xcdv2_d_t.xcdv007
                                                ,g_xcdv2_d_t.xcdv008
                                                ,g_xcdv2_d_t.xcdv009
                                                ,g_xcdv2_d_t.xcdv010
                                                ,g_xcdv2_d_t.xcdv011
                                                ,g_xcdv2_d_t.xcdv012
               IF STATUS THEN 
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct328_bcl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axct328_bcl INTO g_xcdv2_d[l_ac].xcdv001,g_xcdv2_d[l_ac].xcdv006,g_xcdv2_d[l_ac].xcdv007, 
                      g_xcdv2_d[l_ac].xcdv008,g_xcdv2_d[l_ac].xcdv009,g_xcdv2_d[l_ac].xcdv010,g_xcdv2_d[l_ac].xcdv011, 
                      g_xcdv2_d[l_ac].xcdv002,g_xcdv2_d[l_ac].xcdv012,g_xcdv2_d[l_ac].xcdv101,g_xcdv2_d[l_ac].xcdv102
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_xcdv2_d_t.xcdv001 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axct328_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            IF l_cmd='u' THEN
               
                  OPEN axct328_bcl USING g_enterprise,g_xcdv_m.xcdvld,
                                                g_xcdv_m.xcdv003,
                                                g_xcdv_m.xcdv004,
                                                g_xcdv_m.xcdv005,
 
                                                '1'
                                                ,g_xcdv2_d_t.xcdv002
                                                ,g_xcdv2_d_t.xcdv006
                                                ,g_xcdv2_d_t.xcdv007
                                                ,g_xcdv2_d_t.xcdv008
                                                ,g_xcdv2_d_t.xcdv009
                                                ,g_xcdv2_d_t.xcdv010
                                                ,g_xcdv2_d_t.xcdv011
                                                ,g_xcdv2_d_t.xcdv012
                  IF STATUS THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "OPEN axct328_bcl:xcdv001=1" 
                     LET g_errparam.code   =  STATUS 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw='Y'
                  END IF   
               
               IF g_glaa019 = 'Y' THEN
                  OPEN axct328_bcl USING g_enterprise,g_xcdv_m.xcdvld,
                                                g_xcdv_m.xcdv003,
                                                g_xcdv_m.xcdv004,
                                                g_xcdv_m.xcdv005,
 
                                                '3'
                                                ,g_xcdv2_d_t.xcdv002
                                                ,g_xcdv2_d_t.xcdv006
                                                ,g_xcdv2_d_t.xcdv007
                                                ,g_xcdv2_d_t.xcdv008
                                                ,g_xcdv2_d_t.xcdv009
                                                ,g_xcdv2_d_t.xcdv010
                                                ,g_xcdv2_d_t.xcdv011
                                                ,g_xcdv2_d_t.xcdv012
                  IF STATUS THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "OPEN axct328_bcl:xcdv001=2" 
                     LET g_errparam.code   =  STATUS 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw='Y'
                  END IF   
               END IF
            END IF
            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_xcdv2_d_t.* TO NULL
            INITIALIZE g_xcdv2_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xcdv2_d[l_ac].* TO NULL
            #公用欄位預設值
              
            #一般欄位預設值
                  LET g_xcdv2_d[l_ac].xcdv001 = "1"
      LET g_xcdv2_d[l_ac].xcdv101 = "0"
      LET g_xcdv2_d[l_ac].xcdv102 = "0"
      
            
            #add-point:modify段before備份

            #end add-point
            LET g_xcdv2_d_t.* = g_xcdv2_d[l_ac].*     #新輸入資料
            LET g_xcdv2_d_o.* = g_xcdv2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axct328_set_entry_b(l_cmd)
            #add-point:set_entry_b後

            #end add-point
            CALL axct328_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xcdv2_d[li_reproduce_target].* = g_xcdv2_d[li_reproduce].*
 
               LET g_xcdv2_d[g_xcdv2_d.getLength()].xcdv001 = NULL
               LET g_xcdv2_d[g_xcdv2_d.getLength()].xcdv002 = NULL
               LET g_xcdv2_d[g_xcdv2_d.getLength()].xcdv006 = NULL
               LET g_xcdv2_d[g_xcdv2_d.getLength()].xcdv007 = NULL
               LET g_xcdv2_d[g_xcdv2_d.getLength()].xcdv008 = NULL
               LET g_xcdv2_d[g_xcdv2_d.getLength()].xcdv009 = NULL
               LET g_xcdv2_d[g_xcdv2_d.getLength()].xcdv010 = NULL
               LET g_xcdv2_d[g_xcdv2_d.getLength()].xcdv011 = NULL
               LET g_xcdv2_d[g_xcdv2_d.getLength()].xcdv012 = NULL
            END IF
            
            #add-point:modify段before insert

            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xcdv_t 
             WHERE xcdvent = g_enterprise AND xcdvld = g_xcdv_m.xcdvld
               AND xcdv003 = g_xcdv_m.xcdv003
               AND xcdv004 = g_xcdv_m.xcdv004
               AND xcdv005 = g_xcdv_m.xcdv005
 
               AND xcdv001 = g_xcdv2_d[l_ac].xcdv001
               AND xcdv002 = g_xcdv2_d[l_ac].xcdv002
               AND xcdv006 = g_xcdv2_d[l_ac].xcdv006
               AND xcdv007 = g_xcdv2_d[l_ac].xcdv007
               AND xcdv008 = g_xcdv2_d[l_ac].xcdv008
               AND xcdv009 = g_xcdv2_d[l_ac].xcdv009
               AND xcdv010 = g_xcdv2_d[l_ac].xcdv010
               AND xcdv011 = g_xcdv2_d[l_ac].xcdv011
               AND xcdv012 = g_xcdv2_d[l_ac].xcdv012
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
               IF cl_null(g_xcdv2_d[l_ac].xcdv002) THEN LET g_xcdv2_d[l_ac].xcdv002 = ' ' END IF
               IF cl_null(g_xcdv2_d[l_ac].xcdv101) THEN LET g_xcdv2_d[l_ac].xcdv101 = 0 END IF
               #end add-point
               INSERT INTO xcdv_t
                           (xcdvent,
                            xcdvcomp,xcdv004,xcdv005,xcdvld,xcdv003,
                            xcdv001,xcdv002,xcdv006,xcdv007,xcdv008,xcdv009,xcdv010,xcdv011,xcdv012
                            ,xcdv101,xcdv102) 
                     VALUES(g_enterprise,
                            g_xcdv_m.xcdvcomp,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,
                            g_xcdv2_d[l_ac].xcdv001,g_xcdv2_d[l_ac].xcdv002,g_xcdv2_d[l_ac].xcdv006,g_xcdv2_d[l_ac].xcdv007, 
                                g_xcdv2_d[l_ac].xcdv008,g_xcdv2_d[l_ac].xcdv009,g_xcdv2_d[l_ac].xcdv010, 
                                g_xcdv2_d[l_ac].xcdv011,g_xcdv2_d[l_ac].xcdv012
                            ,g_xcdv2_d[l_ac].xcdv101,g_xcdv2_d[l_ac].xcdv102) 

               #add-point:單身新增中
               
               #end add-point
               LET p_cmd = 'u'
               LET g_master_insert = TRUE
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_xcdv2_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcdv_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert

               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後

            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前

               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               IF axct328_before_delete_2() THEN 
                  
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axct328_bcl
               LET l_count = g_xcdv2_d.getLength()
            END IF 
            
            #add-point:單身刪除後

            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE 

               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_xcdv2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv001
            #add-point:BEFORE FIELD xcdv001

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv001
            
            #add-point:AFTER FIELD xcdv001
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv011 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv2_d[g_detail_idx].xcdv001 != g_xcdv2_d_t.xcdv001 OR g_xcdv2_d[g_detail_idx].xcdv002 != g_xcdv2_d_t.xcdv002 OR g_xcdv2_d[g_detail_idx].xcdv006 != g_xcdv2_d_t.xcdv006 OR g_xcdv2_d[g_detail_idx].xcdv007 != g_xcdv2_d_t.xcdv007 OR g_xcdv2_d[g_detail_idx].xcdv008 != g_xcdv2_d_t.xcdv008 OR g_xcdv2_d[g_detail_idx].xcdv009 != g_xcdv2_d_t.xcdv009 OR g_xcdv2_d[g_detail_idx].xcdv010 != g_xcdv2_d_t.xcdv010 OR g_xcdv2_d[g_detail_idx].xcdv011 != g_xcdv2_d_t.xcdv011)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv2_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv2_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv2_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv2_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv2_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv2_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv2_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv2_d[g_detail_idx].xcdv011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv001
            #add-point:ON CHANGE xcdv001

            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv006
            #add-point:BEFORE FIELD xcdv006

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv006
            
            #add-point:AFTER FIELD xcdv006
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv011 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv2_d[g_detail_idx].xcdv001 != g_xcdv2_d_t.xcdv001 OR g_xcdv2_d[g_detail_idx].xcdv002 != g_xcdv2_d_t.xcdv002 OR g_xcdv2_d[g_detail_idx].xcdv006 != g_xcdv2_d_t.xcdv006 OR g_xcdv2_d[g_detail_idx].xcdv007 != g_xcdv2_d_t.xcdv007 OR g_xcdv2_d[g_detail_idx].xcdv008 != g_xcdv2_d_t.xcdv008 OR g_xcdv2_d[g_detail_idx].xcdv009 != g_xcdv2_d_t.xcdv009 OR g_xcdv2_d[g_detail_idx].xcdv010 != g_xcdv2_d_t.xcdv010 OR g_xcdv2_d[g_detail_idx].xcdv011 != g_xcdv2_d_t.xcdv011)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv2_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv2_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv2_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv2_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv2_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv2_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv2_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv2_d[g_detail_idx].xcdv011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv006
            #add-point:ON CHANGE xcdv006

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv007
            
            #add-point:AFTER FIELD xcdv007
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv011 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv2_d[g_detail_idx].xcdv001 != g_xcdv2_d_t.xcdv001 OR g_xcdv2_d[g_detail_idx].xcdv002 != g_xcdv2_d_t.xcdv002 OR g_xcdv2_d[g_detail_idx].xcdv006 != g_xcdv2_d_t.xcdv006 OR g_xcdv2_d[g_detail_idx].xcdv007 != g_xcdv2_d_t.xcdv007 OR g_xcdv2_d[g_detail_idx].xcdv008 != g_xcdv2_d_t.xcdv008 OR g_xcdv2_d[g_detail_idx].xcdv009 != g_xcdv2_d_t.xcdv009 OR g_xcdv2_d[g_detail_idx].xcdv010 != g_xcdv2_d_t.xcdv010 OR g_xcdv2_d[g_detail_idx].xcdv011 != g_xcdv2_d_t.xcdv011)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv2_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv2_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv2_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv2_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv2_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv2_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv2_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv2_d[g_detail_idx].xcdv011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv007
            #add-point:BEFORE FIELD xcdv007

            #END add-point
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv007
            #add-point:ON CHANGE xcdv007

            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv008
            #add-point:BEFORE FIELD xcdv008

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv008
            
            #add-point:AFTER FIELD xcdv008
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv011 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv2_d[g_detail_idx].xcdv001 != g_xcdv2_d_t.xcdv001 OR g_xcdv2_d[g_detail_idx].xcdv002 != g_xcdv2_d_t.xcdv002 OR g_xcdv2_d[g_detail_idx].xcdv006 != g_xcdv2_d_t.xcdv006 OR g_xcdv2_d[g_detail_idx].xcdv007 != g_xcdv2_d_t.xcdv007 OR g_xcdv2_d[g_detail_idx].xcdv008 != g_xcdv2_d_t.xcdv008 OR g_xcdv2_d[g_detail_idx].xcdv009 != g_xcdv2_d_t.xcdv009 OR g_xcdv2_d[g_detail_idx].xcdv010 != g_xcdv2_d_t.xcdv010 OR g_xcdv2_d[g_detail_idx].xcdv011 != g_xcdv2_d_t.xcdv011)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv2_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv2_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv2_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv2_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv2_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv2_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv2_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv2_d[g_detail_idx].xcdv011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv008
            #add-point:ON CHANGE xcdv008

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv009
            
            #add-point:AFTER FIELD xcdv009
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv011 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv2_d[g_detail_idx].xcdv001 != g_xcdv2_d_t.xcdv001 OR g_xcdv2_d[g_detail_idx].xcdv002 != g_xcdv2_d_t.xcdv002 OR g_xcdv2_d[g_detail_idx].xcdv006 != g_xcdv2_d_t.xcdv006 OR g_xcdv2_d[g_detail_idx].xcdv007 != g_xcdv2_d_t.xcdv007 OR g_xcdv2_d[g_detail_idx].xcdv008 != g_xcdv2_d_t.xcdv008 OR g_xcdv2_d[g_detail_idx].xcdv009 != g_xcdv2_d_t.xcdv009 OR g_xcdv2_d[g_detail_idx].xcdv010 != g_xcdv2_d_t.xcdv010 OR g_xcdv2_d[g_detail_idx].xcdv011 != g_xcdv2_d_t.xcdv011)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv2_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv2_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv2_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv2_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv2_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv2_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv2_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv2_d[g_detail_idx].xcdv011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv009
            #add-point:BEFORE FIELD xcdv009

            #END add-point
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv009
            #add-point:ON CHANGE xcdv009

            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv010
            #add-point:BEFORE FIELD xcdv010

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv010
            
            #add-point:AFTER FIELD xcdv010
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv011 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv2_d[g_detail_idx].xcdv001 != g_xcdv2_d_t.xcdv001 OR g_xcdv2_d[g_detail_idx].xcdv002 != g_xcdv2_d_t.xcdv002 OR g_xcdv2_d[g_detail_idx].xcdv006 != g_xcdv2_d_t.xcdv006 OR g_xcdv2_d[g_detail_idx].xcdv007 != g_xcdv2_d_t.xcdv007 OR g_xcdv2_d[g_detail_idx].xcdv008 != g_xcdv2_d_t.xcdv008 OR g_xcdv2_d[g_detail_idx].xcdv009 != g_xcdv2_d_t.xcdv009 OR g_xcdv2_d[g_detail_idx].xcdv010 != g_xcdv2_d_t.xcdv010 OR g_xcdv2_d[g_detail_idx].xcdv011 != g_xcdv2_d_t.xcdv011)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv2_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv2_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv2_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv2_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv2_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv2_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv2_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv2_d[g_detail_idx].xcdv011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv010
            #add-point:ON CHANGE xcdv010

            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv011
            #add-point:BEFORE FIELD xcdv011

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv011
            
            #add-point:AFTER FIELD xcdv011
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv011 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv2_d[g_detail_idx].xcdv001 != g_xcdv2_d_t.xcdv001 OR g_xcdv2_d[g_detail_idx].xcdv002 != g_xcdv2_d_t.xcdv002 OR g_xcdv2_d[g_detail_idx].xcdv006 != g_xcdv2_d_t.xcdv006 OR g_xcdv2_d[g_detail_idx].xcdv007 != g_xcdv2_d_t.xcdv007 OR g_xcdv2_d[g_detail_idx].xcdv008 != g_xcdv2_d_t.xcdv008 OR g_xcdv2_d[g_detail_idx].xcdv009 != g_xcdv2_d_t.xcdv009 OR g_xcdv2_d[g_detail_idx].xcdv010 != g_xcdv2_d_t.xcdv010 OR g_xcdv2_d[g_detail_idx].xcdv011 != g_xcdv2_d_t.xcdv011)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv2_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv2_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv2_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv2_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv2_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv2_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv2_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv2_d[g_detail_idx].xcdv011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv011
            #add-point:ON CHANGE xcdv011

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv002
            
            #add-point:AFTER FIELD xcdv002
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv2_d[g_detail_idx].xcdv011 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv2_d[g_detail_idx].xcdv001 != g_xcdv2_d_t.xcdv001 OR g_xcdv2_d[g_detail_idx].xcdv002 != g_xcdv2_d_t.xcdv002 OR g_xcdv2_d[g_detail_idx].xcdv006 != g_xcdv2_d_t.xcdv006 OR g_xcdv2_d[g_detail_idx].xcdv007 != g_xcdv2_d_t.xcdv007 OR g_xcdv2_d[g_detail_idx].xcdv008 != g_xcdv2_d_t.xcdv008 OR g_xcdv2_d[g_detail_idx].xcdv009 != g_xcdv2_d_t.xcdv009 OR g_xcdv2_d[g_detail_idx].xcdv010 != g_xcdv2_d_t.xcdv010 OR g_xcdv2_d[g_detail_idx].xcdv011 != g_xcdv2_d_t.xcdv011)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv2_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv2_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv2_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv2_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv2_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv2_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv2_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv2_d[g_detail_idx].xcdv011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv002
            #add-point:BEFORE FIELD xcdv002

            #END add-point
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv002
            #add-point:ON CHANGE xcdv002

            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv101
            #add-point:BEFORE FIELD xcdv101

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv101
            
            #add-point:AFTER FIELD xcdv101

            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv101
            #add-point:ON CHANGE xcdv101

            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv102_2
            #add-point:BEFORE FIELD xcdv102

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv102_2
            
            #add-point:AFTER FIELD xcdv102

            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv102_2
            #add-point:ON CHANGE xcdv102

            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         
 
 
                  #Ctrlp:input.c.page1.xcdv001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv001
            #add-point:ON ACTION controlp INFIELD xcdv001

            #END add-point
 
         #Ctrlp:input.c.page1.xcdv006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv006
            #add-point:ON ACTION controlp INFIELD xcdv006
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv2_d[l_ac].xcdv006             #給予default值
            LET g_qryparam.default2 = "" #g_xcdv2_d[l_ac].sfbaseq1 #项序
            LET g_qryparam.default3 = "" #g_xcdv2_d[l_ac].sfaadocno #单号
            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_sfbadocno()                                #呼叫開窗

            LET g_xcdv2_d[l_ac].xcdv006 = g_qryparam.return1              
            #LET g_xcdv2_d[l_ac].sfbaseq1 = g_qryparam.return2 
            #LET g_xcdv2_d[l_ac].sfaadocno = g_qryparam.return3 
            DISPLAY g_xcdv2_d[l_ac].xcdv006 TO xcdv006              #
            #DISPLAY g_xcdv2_d[l_ac].sfbaseq1 TO sfbaseq1 #项序
            #DISPLAY g_xcdv2_d[l_ac].sfaadocno TO sfaadocno #单号
            NEXT FIELD xcdv006                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcdv007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv007
            #add-point:ON ACTION controlp INFIELD xcdv007
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv2_d[l_ac].xcdv007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_sfba003()                                #呼叫開窗

            LET g_xcdv2_d[l_ac].xcdv007 = g_qryparam.return1              

            DISPLAY g_xcdv2_d[l_ac].xcdv007 TO xcdv007              #

            NEXT FIELD xcdv007                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcdv008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv008
            #add-point:ON ACTION controlp INFIELD xcdv008
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv2_d[l_ac].xcdv008             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_sfba004()                                #呼叫開窗

            LET g_xcdv2_d[l_ac].xcdv008 = g_qryparam.return1              

            DISPLAY g_xcdv2_d[l_ac].xcdv008 TO xcdv008              #

            NEXT FIELD xcdv008                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcdv009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv009
            #add-point:ON ACTION controlp INFIELD xcdv009
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv2_d[l_ac].xcdv009             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_imag001_2()                                #呼叫開窗

            LET g_xcdv2_d[l_ac].xcdv009 = g_qryparam.return1              

            DISPLAY g_xcdv2_d[l_ac].xcdv009 TO xcdv009              #

            NEXT FIELD xcdv009                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcdv010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv010
            #add-point:ON ACTION controlp INFIELD xcdv010
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv2_d[l_ac].xcdv010             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_bmaa002_1()                                #呼叫開窗

            LET g_xcdv2_d[l_ac].xcdv010 = g_qryparam.return1              

            DISPLAY g_xcdv2_d[l_ac].xcdv010 TO xcdv010              #

            NEXT FIELD xcdv010                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcdv011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv011
            #add-point:ON ACTION controlp INFIELD xcdv011
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv2_d[l_ac].xcdv011             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_inaj010()                                #呼叫開窗

            LET g_xcdv2_d[l_ac].xcdv011 = g_qryparam.return1              

            DISPLAY g_xcdv2_d[l_ac].xcdv011 TO xcdv011              #

            NEXT FIELD xcdv011                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcdv002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv002
            #add-point:ON ACTION controlp INFIELD xcdv002
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv2_d[l_ac].xcdv002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_xcbf001()                                #呼叫開窗

            LET g_xcdv2_d[l_ac].xcdv002 = g_qryparam.return1              

            DISPLAY g_xcdv2_d[l_ac].xcdv002 TO xcdv002              #

            NEXT FIELD xcdv002                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcdv101
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv101
            #add-point:ON ACTION controlp INFIELD xcdv101

            #END add-point
 
         #Ctrlp:input.c.page1.xcdv102
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv102
            #add-point:ON ACTION controlp INFIELD xcdv102

            #END add-point
 
         
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_xcdv2_d[l_ac].* = g_xcdv2_d_t.*
               CLOSE axct328_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xcdv2_d[l_ac].xcdv001 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xcdv2_d[l_ac].* = g_xcdv2_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               
            
               #add-point:單身修改前
               
               #end add-point
         
               UPDATE xcdv_t SET (xcdvld,xcdv003,xcdv004,xcdv005,xcdv001,xcdv006,xcdv007,xcdv008,xcdv009, 
                   xcdv010,xcdv011,xcdv002,xcdv012,xcdv101,xcdv102) = (g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdv004, 
                   g_xcdv_m.xcdv005,g_xcdv2_d[l_ac].xcdv001,g_xcdv2_d[l_ac].xcdv006,g_xcdv2_d[l_ac].xcdv007, 
                   g_xcdv2_d[l_ac].xcdv008,g_xcdv2_d[l_ac].xcdv009,g_xcdv2_d[l_ac].xcdv010,g_xcdv2_d[l_ac].xcdv011, 
                   g_xcdv2_d[l_ac].xcdv002,g_xcdv2_d[l_ac].xcdv012,g_xcdv2_d[l_ac].xcdv101,g_xcdv2_d[l_ac].xcdv102)
                WHERE xcdvent = g_enterprise AND xcdvld = g_xcdv_m.xcdvld 
                 AND xcdv003 = g_xcdv_m.xcdv003 
                 AND xcdv004 = g_xcdv_m.xcdv004 
                 AND xcdv005 = g_xcdv_m.xcdv005 
 
                 AND xcdv001 = g_xcdv2_d_t.xcdv001 #項次   
                 AND xcdv002 = g_xcdv2_d_t.xcdv002  
                 AND xcdv006 = g_xcdv2_d_t.xcdv006  
                 AND xcdv007 = g_xcdv2_d_t.xcdv007  
                 AND xcdv008 = g_xcdv2_d_t.xcdv008  
                 AND xcdv009 = g_xcdv2_d_t.xcdv009  
                 AND xcdv010 = g_xcdv2_d_t.xcdv010  
                 AND xcdv011 = g_xcdv2_d_t.xcdv011  
                 AND xcdv012 = g_xcdv2_d_t.xcdv012
                 
               #add-point:單身修改中
               
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcdv_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "xcdv_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcdv_m.xcdvld
               LET gs_keys_bak[1] = g_xcdvld_t
               LET gs_keys[2] = g_xcdv_m.xcdv003
               LET gs_keys_bak[2] = g_xcdv003_t
               LET gs_keys[3] = g_xcdv_m.xcdv004
               LET gs_keys_bak[3] = g_xcdv004_t
               LET gs_keys[4] = g_xcdv_m.xcdv005
               LET gs_keys_bak[4] = g_xcdv005_t
               LET gs_keys[5] = g_xcdv2_d[g_detail_idx].xcdv001
               LET gs_keys_bak[5] = g_xcdv2_d_t.xcdv001
               LET gs_keys[6] = g_xcdv2_d[g_detail_idx].xcdv002
               LET gs_keys_bak[6] = g_xcdv2_d_t.xcdv002
               LET gs_keys[7] = g_xcdv2_d[g_detail_idx].xcdv006
               LET gs_keys_bak[7] = g_xcdv2_d_t.xcdv006
               LET gs_keys[8] = g_xcdv2_d[g_detail_idx].xcdv007
               LET gs_keys_bak[8] = g_xcdv2_d_t.xcdv007
               LET gs_keys[9] = g_xcdv2_d[g_detail_idx].xcdv008
               LET gs_keys_bak[9] = g_xcdv2_d_t.xcdv008
               LET gs_keys[10] = g_xcdv2_d[g_detail_idx].xcdv009
               LET gs_keys_bak[10] = g_xcdv2_d_t.xcdv009
               LET gs_keys[11] = g_xcdv2_d[g_detail_idx].xcdv010
               LET gs_keys_bak[11] = g_xcdv2_d_t.xcdv010
               LET gs_keys[12] = g_xcdv2_d[g_detail_idx].xcdv011
               LET gs_keys_bak[12] = g_xcdv2_d_t.xcdv011
               LET gs_keys[12] = g_xcdv2_d[g_detail_idx].xcdv012
               LET gs_keys_bak[12] = g_xcdv2_d_t.xcdv012
               CALL axct328_update_b('xcdv_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_xcdv_m),util.JSON.stringify(g_xcdv2_d_t)
                     LET g_log2 = util.JSON.stringify(g_xcdv_m),util.JSON.stringify(g_xcdv2_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #若Key欄位有變動
               LET ls_keys[01] = g_xcdv_m.xcdvld
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv_m.xcdv003
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv_m.xcdv004
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv_m.xcdv005
 
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv2_d_t.xcdv001
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv2_d_t.xcdv002
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv2_d_t.xcdv006
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv2_d_t.xcdv007
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv2_d_t.xcdv008
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv2_d_t.xcdv009
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv2_d_t.xcdv010
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv2_d_t.xcdv011
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv2_d_t.xcdv012
 
               CALL axct328_key_update_b(ls_keys)
               
               #add-point:單身修改後
               CALL s_transaction_end('Y','0') 
               #end add-point
            END IF
 
         AFTER ROW
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xcdv2_d[l_ac].* = g_xcdv2_d_t.*
               END IF
               CLOSE axct328_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
 
            CLOSE axct328_bcl
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xcdv2_d.getLength() = 0 THEN
               NEXT FIELD xcdv001
            END IF
            #add-point:input段after input 

            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xcdv2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xcdv2_d.getLength()+1
            
      END INPUT
      
      INPUT ARRAY g_xcdv3_d FROM s_detail3.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = 0,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = 0)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcdv3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axct328_b_fill_3() #test 
            #如果一直都在單頭則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm' 
            #add-point:資料輸入前
            LET g_current_page = 3
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail3")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct328_idx_chk()
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axct328_cl USING g_enterprise,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005                          
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct328_cl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLOSE axct328_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_xcdv3_d[l_ac].xcdv001 IS NOT NULL
               AND g_xcdv3_d[l_ac].xcdv002 IS NOT NULL
               AND g_xcdv3_d[l_ac].xcdv006 IS NOT NULL
               AND g_xcdv3_d[l_ac].xcdv007 IS NOT NULL
               AND g_xcdv3_d[l_ac].xcdv008 IS NOT NULL
               AND g_xcdv3_d[l_ac].xcdv009 IS NOT NULL
               AND g_xcdv3_d[l_ac].xcdv010 IS NOT NULL
               AND g_xcdv3_d[l_ac].xcdv011 IS NOT NULL
               AND g_xcdv3_d[l_ac].xcdv012 IS NOT NULL
            THEN
               LET l_cmd='u'
               LET g_xcdv3_d_t.* = g_xcdv3_d[l_ac].*  #BACKUP
               LET g_xcdv3_d_o.* = g_xcdv3_d[l_ac].*  #BACKUP
               CALL axct328_set_entry_b(l_cmd)
               #add-point:set_entry_b後

               #end add-point
               CALL axct328_set_no_entry_b(l_cmd)
               OPEN axct328_bcl USING g_enterprise,g_xcdv_m.xcdvld,
                                                g_xcdv_m.xcdv003,
                                                g_xcdv_m.xcdv004,
                                                g_xcdv_m.xcdv005,
 
                                                g_xcdv3_d_t.xcdv001
                                                ,g_xcdv3_d_t.xcdv002
                                                ,g_xcdv3_d_t.xcdv006
                                                ,g_xcdv3_d_t.xcdv007
                                                ,g_xcdv3_d_t.xcdv008
                                                ,g_xcdv3_d_t.xcdv009
                                                ,g_xcdv3_d_t.xcdv010
                                                ,g_xcdv3_d_t.xcdv011
                                                ,g_xcdv3_d_t.xcdv012
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct328_bcl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axct328_bcl INTO g_xcdv3_d[l_ac].xcdv001,g_xcdv3_d[l_ac].xcdv006,g_xcdv3_d[l_ac].xcdv007, 
                      g_xcdv3_d[l_ac].xcdv008,g_xcdv3_d[l_ac].xcdv009,g_xcdv3_d[l_ac].xcdv010,g_xcdv3_d[l_ac].xcdv011, 
                      g_xcdv3_d[l_ac].xcdv002,g_xcdv3_d[l_ac].xcdv012,g_xcdv3_d[l_ac].xcdv101,g_xcdv3_d[l_ac].xcdv102
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_xcdv3_d_t.xcdv001 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axct328_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            IF l_cmd='u' THEN
               IF g_glaa015 = 'Y' THEN
                  OPEN axct328_bcl USING g_enterprise,g_xcdv_m.xcdvld,
                                                g_xcdv_m.xcdv003,
                                                g_xcdv_m.xcdv004,
                                                g_xcdv_m.xcdv005,
 
                                                '2'
                                                ,g_xcdv3_d_t.xcdv002
                                                ,g_xcdv3_d_t.xcdv006
                                                ,g_xcdv3_d_t.xcdv007
                                                ,g_xcdv3_d_t.xcdv008
                                                ,g_xcdv3_d_t.xcdv009
                                                ,g_xcdv3_d_t.xcdv010
                                                ,g_xcdv3_d_t.xcdv011
                                                ,g_xcdv3_d_t.xcdv012
                  IF STATUS THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "OPEN axct328_bcl:xcdv001=2" 
                     LET g_errparam.code   =  STATUS 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw='Y'
                  END IF   
               END IF
               
                  OPEN axct328_bcl USING g_enterprise,g_xcdv_m.xcdvld,
                                                g_xcdv_m.xcdv003,
                                                g_xcdv_m.xcdv004,
                                                g_xcdv_m.xcdv005,
 
                                                '1'
                                                ,g_xcdv3_d_t.xcdv002
                                                ,g_xcdv3_d_t.xcdv006
                                                ,g_xcdv3_d_t.xcdv007
                                                ,g_xcdv3_d_t.xcdv008
                                                ,g_xcdv3_d_t.xcdv009
                                                ,g_xcdv3_d_t.xcdv010
                                                ,g_xcdv3_d_t.xcdv011
                                                ,g_xcdv3_d_t.xcdv012
                  IF STATUS THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "OPEN axct328_bcl:xcdv001=1" 
                     LET g_errparam.code   =  STATUS 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw='Y'
                  END IF   
               
            END  IF
            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_xcdv3_d_t.* TO NULL
            INITIALIZE g_xcdv3_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xcdv3_d[l_ac].* TO NULL
            #公用欄位預設值
              
            #一般欄位預設值
                  LET g_xcdv3_d[l_ac].xcdv001 = "1"
      LET g_xcdv3_d[l_ac].xcdv101 = "0"
      LET g_xcdv3_d[l_ac].xcdv102 = "0"
      
            
            #add-point:modify段before備份

            #end add-point
            LET g_xcdv3_d_t.* = g_xcdv3_d[l_ac].*     #新輸入資料
            LET g_xcdv3_d_o.* = g_xcdv3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axct328_set_entry_b(l_cmd)
            #add-point:set_entry_b後

            #end add-point
            CALL axct328_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xcdv3_d[li_reproduce_target].* = g_xcdv3_d[li_reproduce].*
 
               LET g_xcdv3_d[g_xcdv3_d.getLength()].xcdv001 = NULL
               LET g_xcdv3_d[g_xcdv3_d.getLength()].xcdv002 = NULL
               LET g_xcdv3_d[g_xcdv3_d.getLength()].xcdv006 = NULL
               LET g_xcdv3_d[g_xcdv3_d.getLength()].xcdv007 = NULL
               LET g_xcdv3_d[g_xcdv3_d.getLength()].xcdv008 = NULL
               LET g_xcdv3_d[g_xcdv3_d.getLength()].xcdv009 = NULL
               LET g_xcdv3_d[g_xcdv3_d.getLength()].xcdv010 = NULL
               LET g_xcdv3_d[g_xcdv3_d.getLength()].xcdv011 = NULL
               LET g_xcdv3_d[g_xcdv3_d.getLength()].xcdv012 = NULL
            END IF
            
            #add-point:modify段before insert

            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xcdv_t 
             WHERE xcdvent = g_enterprise AND xcdvld = g_xcdv_m.xcdvld
               AND xcdv003 = g_xcdv_m.xcdv003
               AND xcdv004 = g_xcdv_m.xcdv004
               AND xcdv005 = g_xcdv_m.xcdv005
 
               AND xcdv001 = g_xcdv3_d[l_ac].xcdv001
               AND xcdv002 = g_xcdv3_d[l_ac].xcdv002
               AND xcdv006 = g_xcdv3_d[l_ac].xcdv006
               AND xcdv007 = g_xcdv3_d[l_ac].xcdv007
               AND xcdv008 = g_xcdv3_d[l_ac].xcdv008
               AND xcdv009 = g_xcdv3_d[l_ac].xcdv009
               AND xcdv010 = g_xcdv3_d[l_ac].xcdv010
               AND xcdv011 = g_xcdv3_d[l_ac].xcdv011
               AND xcdv012 = g_xcdv3_d[l_ac].xcdv012
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
               
               #end add-point
               INSERT INTO xcdv_t
                           (xcdvent,
                            xcdvcomp,xcdv004,xcdv005,xcdvld,xcdv003,
                            xcdv001,xcdv002,xcdv006,xcdv007,xcdv008,xcdv009,xcdv010,xcdv011,xcdv012,
                            xcdv101,xcdv102) 
                     VALUES(g_enterprise,
                            g_xcdv_m.xcdvcomp,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,
                            g_xcdv3_d[l_ac].xcdv001,g_xcdv3_d[l_ac].xcdv002,g_xcdv3_d[l_ac].xcdv006,g_xcdv3_d[l_ac].xcdv007, 
                                g_xcdv3_d[l_ac].xcdv008,g_xcdv3_d[l_ac].xcdv009,g_xcdv3_d[l_ac].xcdv010, 
                                g_xcdv3_d[l_ac].xcdv011,g_xcdv3_d[l_ac].xcdv012
                            ,g_xcdv3_d[l_ac].xcdv101,g_xcdv3_d[l_ac].xcdv102) 

               #add-point:單身新增中
               
               #end add-point
               LET p_cmd = 'u'
               LET g_master_insert = TRUE
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_xcdv3_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcdv_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert

               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後

            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前

               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               IF axct328_before_delete_3() THEN 
                  
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axct328_bcl
               LET l_count = g_xcdv3_d.getLength()
            END IF 
            
            #add-point:單身刪除後

            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE 

               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_xcdv3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv001
            #add-point:BEFORE FIELD xcdv001

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv001
            
            #add-point:AFTER FIELD xcdv001
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv011 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv3_d[g_detail_idx].xcdv001 != g_xcdv3_d_t.xcdv001 OR g_xcdv3_d[g_detail_idx].xcdv002 != g_xcdv3_d_t.xcdv002 OR g_xcdv3_d[g_detail_idx].xcdv006 != g_xcdv3_d_t.xcdv006 OR g_xcdv3_d[g_detail_idx].xcdv007 != g_xcdv3_d_t.xcdv007 OR g_xcdv3_d[g_detail_idx].xcdv008 != g_xcdv3_d_t.xcdv008 OR g_xcdv3_d[g_detail_idx].xcdv009 != g_xcdv3_d_t.xcdv009 OR g_xcdv3_d[g_detail_idx].xcdv010 != g_xcdv3_d_t.xcdv010 OR g_xcdv3_d[g_detail_idx].xcdv011 != g_xcdv3_d_t.xcdv011)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv3_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv3_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv3_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv3_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv3_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv3_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv3_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv3_d[g_detail_idx].xcdv011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv001
            #add-point:ON CHANGE xcdv001

            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv006
            #add-point:BEFORE FIELD xcdv006

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv006
            
            #add-point:AFTER FIELD xcdv006
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv011 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv3_d[g_detail_idx].xcdv001 != g_xcdv3_d_t.xcdv001 OR g_xcdv3_d[g_detail_idx].xcdv002 != g_xcdv3_d_t.xcdv002 OR g_xcdv3_d[g_detail_idx].xcdv006 != g_xcdv3_d_t.xcdv006 OR g_xcdv3_d[g_detail_idx].xcdv007 != g_xcdv3_d_t.xcdv007 OR g_xcdv3_d[g_detail_idx].xcdv008 != g_xcdv3_d_t.xcdv008 OR g_xcdv3_d[g_detail_idx].xcdv009 != g_xcdv3_d_t.xcdv009 OR g_xcdv3_d[g_detail_idx].xcdv010 != g_xcdv3_d_t.xcdv010 OR g_xcdv3_d[g_detail_idx].xcdv011 != g_xcdv3_d_t.xcdv011)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv3_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv3_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv3_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv3_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv3_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv3_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv3_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv3_d[g_detail_idx].xcdv011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv006
            #add-point:ON CHANGE xcdv006

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv007
            
            #add-point:AFTER FIELD xcdv007
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv011 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv3_d[g_detail_idx].xcdv001 != g_xcdv3_d_t.xcdv001 OR g_xcdv3_d[g_detail_idx].xcdv002 != g_xcdv3_d_t.xcdv002 OR g_xcdv3_d[g_detail_idx].xcdv006 != g_xcdv3_d_t.xcdv006 OR g_xcdv3_d[g_detail_idx].xcdv007 != g_xcdv3_d_t.xcdv007 OR g_xcdv3_d[g_detail_idx].xcdv008 != g_xcdv3_d_t.xcdv008 OR g_xcdv3_d[g_detail_idx].xcdv009 != g_xcdv3_d_t.xcdv009 OR g_xcdv3_d[g_detail_idx].xcdv010 != g_xcdv3_d_t.xcdv010 OR g_xcdv3_d[g_detail_idx].xcdv011 != g_xcdv3_d_t.xcdv011)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv3_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv3_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv3_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv3_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv3_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv3_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv3_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv3_d[g_detail_idx].xcdv011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv007
            #add-point:BEFORE FIELD xcdv007

            #END add-point
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv007
            #add-point:ON CHANGE xcdv007

            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv008
            #add-point:BEFORE FIELD xcdv008

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv008
            
            #add-point:AFTER FIELD xcdv008
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv011 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv3_d[g_detail_idx].xcdv001 != g_xcdv3_d_t.xcdv001 OR g_xcdv3_d[g_detail_idx].xcdv002 != g_xcdv3_d_t.xcdv002 OR g_xcdv3_d[g_detail_idx].xcdv006 != g_xcdv3_d_t.xcdv006 OR g_xcdv3_d[g_detail_idx].xcdv007 != g_xcdv3_d_t.xcdv007 OR g_xcdv3_d[g_detail_idx].xcdv008 != g_xcdv3_d_t.xcdv008 OR g_xcdv3_d[g_detail_idx].xcdv009 != g_xcdv3_d_t.xcdv009 OR g_xcdv3_d[g_detail_idx].xcdv010 != g_xcdv3_d_t.xcdv010 OR g_xcdv3_d[g_detail_idx].xcdv011 != g_xcdv3_d_t.xcdv011)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv3_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv3_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv3_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv3_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv3_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv3_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv3_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv3_d[g_detail_idx].xcdv011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv008
            #add-point:ON CHANGE xcdv008

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv009
            
            #add-point:AFTER FIELD xcdv009
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv011 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv3_d[g_detail_idx].xcdv001 != g_xcdv3_d_t.xcdv001 OR g_xcdv3_d[g_detail_idx].xcdv002 != g_xcdv3_d_t.xcdv002 OR g_xcdv3_d[g_detail_idx].xcdv006 != g_xcdv3_d_t.xcdv006 OR g_xcdv3_d[g_detail_idx].xcdv007 != g_xcdv3_d_t.xcdv007 OR g_xcdv3_d[g_detail_idx].xcdv008 != g_xcdv3_d_t.xcdv008 OR g_xcdv3_d[g_detail_idx].xcdv009 != g_xcdv3_d_t.xcdv009 OR g_xcdv3_d[g_detail_idx].xcdv010 != g_xcdv3_d_t.xcdv010 OR g_xcdv3_d[g_detail_idx].xcdv011 != g_xcdv3_d_t.xcdv011)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv3_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv3_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv3_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv3_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv3_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv3_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv3_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv3_d[g_detail_idx].xcdv011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv009
            #add-point:BEFORE FIELD xcdv009

            #END add-point
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv009
            #add-point:ON CHANGE xcdv009

            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv010
            #add-point:BEFORE FIELD xcdv010

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv010
            
            #add-point:AFTER FIELD xcdv010
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv011 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv3_d[g_detail_idx].xcdv001 != g_xcdv3_d_t.xcdv001 OR g_xcdv3_d[g_detail_idx].xcdv002 != g_xcdv3_d_t.xcdv002 OR g_xcdv3_d[g_detail_idx].xcdv006 != g_xcdv3_d_t.xcdv006 OR g_xcdv3_d[g_detail_idx].xcdv007 != g_xcdv3_d_t.xcdv007 OR g_xcdv3_d[g_detail_idx].xcdv008 != g_xcdv3_d_t.xcdv008 OR g_xcdv3_d[g_detail_idx].xcdv009 != g_xcdv3_d_t.xcdv009 OR g_xcdv3_d[g_detail_idx].xcdv010 != g_xcdv3_d_t.xcdv010 OR g_xcdv3_d[g_detail_idx].xcdv011 != g_xcdv3_d_t.xcdv011)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv3_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv3_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv3_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv3_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv3_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv3_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv3_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv3_d[g_detail_idx].xcdv011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv010
            #add-point:ON CHANGE xcdv010

            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv011
            #add-point:BEFORE FIELD xcdv011

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv011
            
            #add-point:AFTER FIELD xcdv011
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv011 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv3_d[g_detail_idx].xcdv001 != g_xcdv3_d_t.xcdv001 OR g_xcdv3_d[g_detail_idx].xcdv002 != g_xcdv3_d_t.xcdv002 OR g_xcdv3_d[g_detail_idx].xcdv006 != g_xcdv3_d_t.xcdv006 OR g_xcdv3_d[g_detail_idx].xcdv007 != g_xcdv3_d_t.xcdv007 OR g_xcdv3_d[g_detail_idx].xcdv008 != g_xcdv3_d_t.xcdv008 OR g_xcdv3_d[g_detail_idx].xcdv009 != g_xcdv3_d_t.xcdv009 OR g_xcdv3_d[g_detail_idx].xcdv010 != g_xcdv3_d_t.xcdv010 OR g_xcdv3_d[g_detail_idx].xcdv011 != g_xcdv3_d_t.xcdv011)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv3_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv3_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv3_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv3_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv3_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv3_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv3_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv3_d[g_detail_idx].xcdv011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv011
            #add-point:ON CHANGE xcdv011

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv002
            
            #add-point:AFTER FIELD xcdv002
            #應用 a05 樣板自動產生(Version:1)
            #確認資料無重複
            IF  g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdv003 IS NOT NULL AND g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv001 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv002 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv006 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv007 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv008 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv009 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv010 IS NOT NULL AND g_xcdv3_d[g_detail_idx].xcdv011 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdv_m.xcdvld != g_xcdvld_t OR g_xcdv_m.xcdv003 != g_xcdv003_t OR g_xcdv_m.xcdv004 != g_xcdv004_t OR g_xcdv_m.xcdv005 != g_xcdv005_t OR g_xcdv3_d[g_detail_idx].xcdv001 != g_xcdv3_d_t.xcdv001 OR g_xcdv3_d[g_detail_idx].xcdv002 != g_xcdv3_d_t.xcdv002 OR g_xcdv3_d[g_detail_idx].xcdv006 != g_xcdv3_d_t.xcdv006 OR g_xcdv3_d[g_detail_idx].xcdv007 != g_xcdv3_d_t.xcdv007 OR g_xcdv3_d[g_detail_idx].xcdv008 != g_xcdv3_d_t.xcdv008 OR g_xcdv3_d[g_detail_idx].xcdv009 != g_xcdv3_d_t.xcdv009 OR g_xcdv3_d[g_detail_idx].xcdv010 != g_xcdv3_d_t.xcdv010 OR g_xcdv3_d[g_detail_idx].xcdv011 != g_xcdv3_d_t.xcdv011)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdv_t WHERE "||"xcdvent = '" ||g_enterprise|| "' AND "||"xcdvld = '"||g_xcdv_m.xcdvld ||"' AND "|| "xcdv003 = '"||g_xcdv_m.xcdv003 ||"' AND "|| "xcdv004 = '"||g_xcdv_m.xcdv004 ||"' AND "|| "xcdv005 = '"||g_xcdv_m.xcdv005 ||"' AND "|| "xcdv001 = '"||g_xcdv3_d[g_detail_idx].xcdv001 ||"' AND "|| "xcdv002 = '"||g_xcdv3_d[g_detail_idx].xcdv002 ||"' AND "|| "xcdv006 = '"||g_xcdv3_d[g_detail_idx].xcdv006 ||"' AND "|| "xcdv007 = '"||g_xcdv3_d[g_detail_idx].xcdv007 ||"' AND "|| "xcdv008 = '"||g_xcdv3_d[g_detail_idx].xcdv008 ||"' AND "|| "xcdv009 = '"||g_xcdv3_d[g_detail_idx].xcdv009 ||"' AND "|| "xcdv010 = '"||g_xcdv3_d[g_detail_idx].xcdv010 ||"' AND "|| "xcdv011 = '"||g_xcdv3_d[g_detail_idx].xcdv011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv002
            #add-point:BEFORE FIELD xcdv002

            #END add-point
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv002
            #add-point:ON CHANGE xcdv002

            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv101
            #add-point:BEFORE FIELD xcdv101

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv101
            
            #add-point:AFTER FIELD xcdv101

            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv101
            #add-point:ON CHANGE xcdv101

            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcdv102_3
            #add-point:BEFORE FIELD xcdv102

            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcdv102_3
            
            #add-point:AFTER FIELD xcdv102

            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:1)
         ON CHANGE xcdv102_3
            #add-point:ON CHANGE xcdv102

            #END add-point
 
         
 
 
                  #Ctrlp:input.c.page1.xcdv001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv001
            #add-point:ON ACTION controlp INFIELD xcdv001

            #END add-point
 
         #Ctrlp:input.c.page1.xcdv006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv006
            #add-point:ON ACTION controlp INFIELD xcdv006
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv3_d[l_ac].xcdv006             #給予default值
            LET g_qryparam.default2 = "" #g_xcdv3_d[l_ac].sfbaseq1 #项序
            LET g_qryparam.default3 = "" #g_xcdv3_d[l_ac].sfaadocno #单号
            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_sfbadocno()                                #呼叫開窗

            LET g_xcdv3_d[l_ac].xcdv006 = g_qryparam.return1              
            #LET g_xcdv3_d[l_ac].sfbaseq1 = g_qryparam.return2 
            #LET g_xcdv3_d[l_ac].sfaadocno = g_qryparam.return3 
            DISPLAY g_xcdv3_d[l_ac].xcdv006 TO xcdv006              #
            #DISPLAY g_xcdv3_d[l_ac].sfbaseq1 TO sfbaseq1 #项序
            #DISPLAY g_xcdv3_d[l_ac].sfaadocno TO sfaadocno #单号
            NEXT FIELD xcdv006                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcdv007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv007
            #add-point:ON ACTION controlp INFIELD xcdv007
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv3_d[l_ac].xcdv007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_sfba003()                                #呼叫開窗

            LET g_xcdv3_d[l_ac].xcdv007 = g_qryparam.return1              

            DISPLAY g_xcdv3_d[l_ac].xcdv007 TO xcdv007              #

            NEXT FIELD xcdv007                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcdv008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv008
            #add-point:ON ACTION controlp INFIELD xcdv008
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv3_d[l_ac].xcdv008             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_sfba004()                                #呼叫開窗

            LET g_xcdv3_d[l_ac].xcdv008 = g_qryparam.return1              

            DISPLAY g_xcdv3_d[l_ac].xcdv008 TO xcdv008              #

            NEXT FIELD xcdv008                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcdv009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv009
            #add-point:ON ACTION controlp INFIELD xcdv009
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv3_d[l_ac].xcdv009             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_imag001_2()                                #呼叫開窗

            LET g_xcdv3_d[l_ac].xcdv009 = g_qryparam.return1              

            DISPLAY g_xcdv3_d[l_ac].xcdv009 TO xcdv009              #

            NEXT FIELD xcdv009                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcdv010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv010
            #add-point:ON ACTION controlp INFIELD xcdv010
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv3_d[l_ac].xcdv010             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_bmaa002_1()                                #呼叫開窗

            LET g_xcdv3_d[l_ac].xcdv010 = g_qryparam.return1              

            DISPLAY g_xcdv3_d[l_ac].xcdv010 TO xcdv010              #

            NEXT FIELD xcdv010                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcdv011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv011
            #add-point:ON ACTION controlp INFIELD xcdv011
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv3_d[l_ac].xcdv011             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_inaj010()                                #呼叫開窗

            LET g_xcdv3_d[l_ac].xcdv011 = g_qryparam.return1              

            DISPLAY g_xcdv3_d[l_ac].xcdv011 TO xcdv011              #

            NEXT FIELD xcdv011                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcdv002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv002
            #add-point:ON ACTION controlp INFIELD xcdv002
            #應用 a07 樣板自動產生(Version:1)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv3_d[l_ac].xcdv002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            
            CALL q_xcbf001()                                #呼叫開窗

            LET g_xcdv3_d[l_ac].xcdv002 = g_qryparam.return1              

            DISPLAY g_xcdv3_d[l_ac].xcdv002 TO xcdv002              #

            NEXT FIELD xcdv002                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcdv101
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv101
            #add-point:ON ACTION controlp INFIELD xcdv101

            #END add-point
 
         #Ctrlp:input.c.page1.xcdv102
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcdv102
            #add-point:ON ACTION controlp INFIELD xcdv102

            #END add-point
 
         
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_xcdv3_d[l_ac].* = g_xcdv3_d_t.*
               CLOSE axct328_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xcdv3_d[l_ac].xcdv001 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xcdv3_d[l_ac].* = g_xcdv3_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               
            
               #add-point:單身修改前
               
               #end add-point
         
               UPDATE xcdv_t SET (xcdvld,xcdv003,xcdv004,xcdv005,xcdv001,xcdv006,xcdv007,xcdv008,xcdv009, 
                   xcdv010,xcdv011,xcdv002,xcdv012,xcdv101,xcdv102) = (g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdv004, 
                   g_xcdv_m.xcdv005,g_xcdv3_d[l_ac].xcdv001,g_xcdv3_d[l_ac].xcdv006,g_xcdv3_d[l_ac].xcdv007, 
                   g_xcdv3_d[l_ac].xcdv008,g_xcdv3_d[l_ac].xcdv009,g_xcdv3_d[l_ac].xcdv010,g_xcdv3_d[l_ac].xcdv011, 
                   g_xcdv3_d[l_ac].xcdv002,g_xcdv3_d[l_ac].xcdv012,g_xcdv3_d[l_ac].xcdv101,g_xcdv3_d[l_ac].xcdv102)
                WHERE xcdvent = g_enterprise AND xcdvld = g_xcdv_m.xcdvld 
                 AND xcdv003 = g_xcdv_m.xcdv003 
                 AND xcdv004 = g_xcdv_m.xcdv004 
                 AND xcdv005 = g_xcdv_m.xcdv005 
 
                 AND xcdv001 = g_xcdv3_d_t.xcdv001 #項次   
                 AND xcdv002 = g_xcdv3_d_t.xcdv002  
                 AND xcdv006 = g_xcdv3_d_t.xcdv006  
                 AND xcdv007 = g_xcdv3_d_t.xcdv007  
                 AND xcdv008 = g_xcdv3_d_t.xcdv008  
                 AND xcdv009 = g_xcdv3_d_t.xcdv009  
                 AND xcdv010 = g_xcdv3_d_t.xcdv010  
                 AND xcdv011 = g_xcdv3_d_t.xcdv011 
                 AND xcdv012 = g_xcdv3_d_t.xcdv012                  
 
                 
               #add-point:單身修改中
               
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcdv_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "xcdv_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcdv_m.xcdvld
               LET gs_keys_bak[1] = g_xcdvld_t
               LET gs_keys[2] = g_xcdv_m.xcdv003
               LET gs_keys_bak[2] = g_xcdv003_t
               LET gs_keys[3] = g_xcdv_m.xcdv004
               LET gs_keys_bak[3] = g_xcdv004_t
               LET gs_keys[4] = g_xcdv_m.xcdv005
               LET gs_keys_bak[4] = g_xcdv005_t
               LET gs_keys[5] = g_xcdv3_d[g_detail_idx].xcdv001
               LET gs_keys_bak[5] = g_xcdv3_d_t.xcdv001
               LET gs_keys[6] = g_xcdv3_d[g_detail_idx].xcdv002
               LET gs_keys_bak[6] = g_xcdv3_d_t.xcdv002
               LET gs_keys[7] = g_xcdv3_d[g_detail_idx].xcdv006
               LET gs_keys_bak[7] = g_xcdv3_d_t.xcdv006
               LET gs_keys[8] = g_xcdv3_d[g_detail_idx].xcdv007
               LET gs_keys_bak[8] = g_xcdv3_d_t.xcdv007
               LET gs_keys[9] = g_xcdv3_d[g_detail_idx].xcdv008
               LET gs_keys_bak[9] = g_xcdv3_d_t.xcdv008
               LET gs_keys[10] = g_xcdv3_d[g_detail_idx].xcdv009
               LET gs_keys_bak[10] = g_xcdv3_d_t.xcdv009
               LET gs_keys[11] = g_xcdv3_d[g_detail_idx].xcdv010
               LET gs_keys_bak[11] = g_xcdv3_d_t.xcdv010
               LET gs_keys[12] = g_xcdv3_d[g_detail_idx].xcdv011
               LET gs_keys_bak[12] = g_xcdv3_d_t.xcdv011
               LET gs_keys[12] = g_xcdv3_d[g_detail_idx].xcdv012
               LET gs_keys_bak[12] = g_xcdv3_d_t.xcdv012
               CALL axct328_update_b('xcdv_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_xcdv_m),util.JSON.stringify(g_xcdv3_d_t)
                     LET g_log2 = util.JSON.stringify(g_xcdv_m),util.JSON.stringify(g_xcdv3_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #若Key欄位有變動
               LET ls_keys[01] = g_xcdv_m.xcdvld
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv_m.xcdv003
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv_m.xcdv004
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv_m.xcdv005
 
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv3_d_t.xcdv001
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv3_d_t.xcdv002
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv3_d_t.xcdv006
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv3_d_t.xcdv007
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv3_d_t.xcdv008
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv3_d_t.xcdv009
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv3_d_t.xcdv010
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv3_d_t.xcdv011
               LET ls_keys[ls_keys.getLength()+1] = g_xcdv3_d_t.xcdv012
 
               CALL axct328_key_update_b(ls_keys)
               
               #add-point:單身修改後
               CALL s_transaction_end('Y','0') 
               #end add-point
            END IF
 
         AFTER ROW
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xcdv3_d[l_ac].* = g_xcdv3_d_t.*
               END IF
               CLOSE axct328_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
 
            CLOSE axct328_bcl
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xcdv3_d.getLength() = 0 THEN
               NEXT FIELD xcdv001
            END IF
            #add-point:input段after input 

            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xcdv3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xcdv3_d.getLength()+1
            
      END INPUT
      #end add-point    
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()    
         #add-point:input段before_dialog name="input.before_dialog"
          CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
          CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
          CALL DIALOG.setCurrentRow("s_detail3",g_detail_idx)
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xcdvld
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xcdv001
                WHEN "s_detail2"
                  NEXT FIELD xcdv001_2
                 WHEN "s_detail3"
                  NEXT FIELD xcdv001_3
 
            END CASE
         END IF
         #end add-point 
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xcdvld
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xcdv001
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #將畫面指標同步到當下指定的位置上
   CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
 
 
   
   #add-point:input段after_input name="input.after_input"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axct328_show()
   #add-point:show段define name="show.define_customerization"
   
   #end add-point
   #add-point:show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE l_date  DATE
   #end add-point
   
   #add-point:Function前置處理  name="show.before"
   CALL axct328_ref()
   #檢查年度期別>=關賬日期，則不可修改刪除
   IF cl_null(g_xcdv_m.xcdvcomp) THEN
      CALL cl_get_para(g_enterprise,g_site,'S-FIN-6012') RETURNING l_date
   ELSE
      CALL cl_get_para(g_enterprise,g_xcdv_m.xcdvcomp,'S-FIN-6012') RETURNING l_date
   END IF
   IF g_xcdv_m.xcdv004 < YEAR(l_date) THEN
      CALL cl_set_act_visible("modify,modify_detail,delete", FALSE)
   ELSE
      IF g_xcdv_m.xcdv004 = YEAR(l_date) THEN
         IF g_xcdv_m.xcdv005 < MONTH(l_date) THEN
            CALL cl_set_act_visible("modify,modify_detail,delete", FALSE)
          ELSE
            CALL cl_set_act_visible("modify,modify_detail,delete", TRUE)
         END IF
      ELSE
         CALL cl_set_act_visible("modify,modify_detail,delete", TRUE)
      END IF
   END IF
   IF cl_null(g_xcdv_m.xcdvcomp) THEN
       CALL cl_get_para(g_enterprise,g_site,'S-FIN-6001') RETURNING g_para_data   #采用成本域否  
    ELSE
       CALL cl_get_para(g_enterprise,g_xcdv_m.xcdvcomp,'S-FIN-6001') RETURNING g_para_data   #采用成本域否      
    END IF
      
    IF g_para_data = 'Y' THEN
       CALL cl_set_comp_visible('xcdv002,xcdv002_desc,xcdv002_3,xcdv002_3_desc,xcdv002_2,xcdv002_2_desc',TRUE) 
    ELSE
       CALL cl_set_comp_visible('xcdv002,xcdv002_desc,xcdv002_3,xcdv002_3_desc,xcdv002_2,xcdv002_2_desc',FALSE)
    END IF
   IF g_glaa015 = 'Y' THEN
      CALL cl_set_comp_visible("page_3",TRUE)
   ELSE
      CALL cl_set_comp_visible("page_3",FALSE) 
   END IF
   IF g_glaa019 = 'Y' THEN
      CALL cl_set_comp_visible("page_4",TRUE)
   ELSE
      CALL cl_set_comp_visible("page_4",FALSE)
   END IF
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL axct328_b_fill(g_wc2) #第一階單身填充
      CALL axct328_b_fill2('0')  #第二階單身填充
   END IF
   
   
 
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL axct328_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   DISPLAY BY NAME g_xcdv_m.xcdvcomp,g_xcdv_m.xcdvcomp_desc,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,g_xcdv_m.xcdvld, 
       g_xcdv_m.xcdvld_desc,g_xcdv_m.xcdv003,g_xcdv_m.xcdv003_desc
 
   CALL axct328_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後 name="show.after"
   
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.ref_show" >}
#+ 帶出reference資料
PRIVATE FUNCTION axct328_ref_show()
   #add-point:ref_show段define name="ref_show.define_customerization"
   
   #end add-point 
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ref_show.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ref_show.pre_function"
   
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference name="ref_show.head.reference"
   CALL axct328_ref()
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xcdv_d.getLength()
      #add-point:ref_show段d_reference name="ref_show.body.reference"
       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = g_xcdv_m.xcdvcomp
       LET g_ref_fields[2] = g_xcdv_d[l_ac].xcdv002
       CALL ap_ref_array2(g_ref_fields,"SELECT xcbfl003 FROM xcbfl_t WHERE xcbflent='"||g_enterprise||"' AND xcbflcomp=? AND xcbfl001=? AND xcbfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET g_xcdv_d[l_ac].xcdv002_desc = '', g_rtn_fields[1] , ''
       DISPLAY BY NAME g_xcdv_d[l_ac].xcdv002_desc
      #end add-point
   END FOR
   
 
   
   #add-point:ref_show段自訂 name="ref_show.other_reference"
   
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION
 
{</section>}
 
{<section id="axct328.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axct328_reproduce()
   #add-point:reproduce段define name="reproduce.define_customerization"
   
   #end add-point
   DEFINE l_newno     LIKE xcdv_t.xcdvld 
   DEFINE l_oldno     LIKE xcdv_t.xcdvld 
   DEFINE l_newno02     LIKE xcdv_t.xcdv003 
   DEFINE l_oldno02     LIKE xcdv_t.xcdv003 
   DEFINE l_newno03     LIKE xcdv_t.xcdv004 
   DEFINE l_oldno03     LIKE xcdv_t.xcdv004 
   DEFINE l_newno04     LIKE xcdv_t.xcdv005 
   DEFINE l_oldno04     LIKE xcdv_t.xcdv005 
 
   DEFINE l_master    RECORD LIKE xcdv_t.*
   DEFINE l_detail    RECORD LIKE xcdv_t.*
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_xcdv_m.xcdvld IS NULL
      OR g_xcdv_m.xcdv003 IS NULL
      OR g_xcdv_m.xcdv004 IS NULL
      OR g_xcdv_m.xcdv005 IS NULL
 
      THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_xcdvld_t = g_xcdv_m.xcdvld
   LET g_xcdv003_t = g_xcdv_m.xcdv003
   LET g_xcdv004_t = g_xcdv_m.xcdv004
   LET g_xcdv005_t = g_xcdv_m.xcdv005
 
   
   LET g_xcdv_m.xcdvld = ""
   LET g_xcdv_m.xcdv003 = ""
   LET g_xcdv_m.xcdv004 = ""
   LET g_xcdv_m.xcdv005 = ""
 
   LET g_master_insert = FALSE
   CALL axct328_set_entry('a')
   CALL axct328_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #清空key欄位的desc
      LET g_xcdv_m.xcdvld_desc = ''
   DISPLAY BY NAME g_xcdv_m.xcdvld_desc
   LET g_xcdv_m.xcdv003_desc = ''
   DISPLAY BY NAME g_xcdv_m.xcdv003_desc
 
   
   CALL axct328_input("r")
    
   IF INT_FLAG AND NOT g_master_insert THEN
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      INITIALIZE g_xcdv_m.* TO NULL
      INITIALIZE g_xcdv_d TO NULL
 
      CALL axct328_show()
      LET INT_FLAG = 0
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN 
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axct328_set_act_visible()
   CALL axct328_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_xcdvld_t = g_xcdv_m.xcdvld
   LET g_xcdv003_t = g_xcdv_m.xcdv003
   LET g_xcdv004_t = g_xcdv_m.xcdv004
   LET g_xcdv005_t = g_xcdv_m.xcdv005
 
   
   #組合新增資料的條件
   LET g_add_browse = " xcdvent = " ||g_enterprise|| " AND",
                      " xcdvld = '", g_xcdv_m.xcdvld, "' "
                      ," AND xcdv003 = '", g_xcdv_m.xcdv003, "' "
                      ," AND xcdv004 = '", g_xcdv_m.xcdv004, "' "
                      ," AND xcdv005 = '", g_xcdv_m.xcdv005, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axct328_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   LET g_curr_diag = ui.DIALOG.getCurrent()
   CALL axct328_idx_chk()
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   #功能已完成,通報訊息中心
   CALL axct328_msgcentre_notify('reproduce')
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axct328_detail_reproduce()
   #add-point:delete段define name="detail_reproduce.define_customerization"
   
   #end add-point 
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xcdv_t.*
 
 
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axct328_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xcdv_t
    WHERE xcdvent = g_enterprise AND xcdvld = g_xcdvld_t
    AND xcdv003 = g_xcdv003_t
    AND xcdv004 = g_xcdv004_t
    AND xcdv005 = g_xcdv005_t
 
       INTO TEMP axct328_detail
   
   #將key修正為調整後   
   UPDATE axct328_detail 
      #更新key欄位
      SET xcdvld = g_xcdv_m.xcdvld
          , xcdv003 = g_xcdv_m.xcdv003
          , xcdv004 = g_xcdv_m.xcdv004
          , xcdv005 = g_xcdv_m.xcdv005
 
      #更新共用欄位
      
                                       
   #將資料塞回原table   
   INSERT INTO xcdv_t SELECT * FROM axct328_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axct328_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xcdvld_t = g_xcdv_m.xcdvld
   LET g_xcdv003_t = g_xcdv_m.xcdv003
   LET g_xcdv004_t = g_xcdv_m.xcdv004
   LET g_xcdv005_t = g_xcdv_m.xcdv005
 
   
   DROP TABLE axct328_detail
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axct328_delete()
   #add-point:delete段define name="delete.define_customerization"
   
   #end add-point
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_xcdv_m.xcdvld IS NULL
   OR g_xcdv_m.xcdv003 IS NULL
   OR g_xcdv_m.xcdv004 IS NULL
   OR g_xcdv_m.xcdv005 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   
 
   OPEN axct328_cl USING g_enterprise,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axct328_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE axct328_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axct328_master_referesh USING g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005 INTO g_xcdv_m.xcdvcomp, 
       g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdvcomp_desc,g_xcdv_m.xcdvld_desc, 
       g_xcdv_m.xcdv003_desc
   
   #遮罩相關處理
   LET g_xcdv_m_mask_o.* =  g_xcdv_m.*
   CALL axct328_xcdv_t_mask()
   LET g_xcdv_m_mask_n.* =  g_xcdv_m.*
   
   CALL axct328_show()
 
   #單頭多語言資料備份
   
   
   IF cl_ask_del_master() THEN              #確認一下
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL axct328_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
 
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM xcdv_t WHERE xcdvent = g_enterprise AND xcdvld = g_xcdv_m.xcdvld
                                                               AND xcdv003 = g_xcdv_m.xcdv003
                                                               AND xcdv004 = g_xcdv_m.xcdv004
                                                               AND xcdv005 = g_xcdv_m.xcdv005
 
                                                               
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xcdv_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
 
      
  
      #add-point:單身刪除後  name="delete.body.a_delete"
      
      #end add-point
      
 
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      #頭先不紀錄
      #IF NOT cl_log_modified_record('','') THEN 
      #   CLOSE axct328_cl
      #   CALL s_transaction_end('N','0')
      #   RETURN 
      #END IF
      
      CLEAR FORM
      CALL g_xcdv_d.clear() 
 
     
      CALL axct328_ui_browser_refresh()  
      #CALL axct328_ui_headershow()  
      #CALL axct328_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axct328_fetch('P')
      ELSE
         #LET g_wc = " 1=1"
         #LET g_wc2 = " 1=1"
         #CALL axct328_browser_fill("F")
         CLEAR FORM
      END IF
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')   
   END IF
 
   CLOSE axct328_cl
 
   #功能已完成,通報訊息中心
   CALL axct328_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="axct328.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axct328_b_fill(p_wc2)
   #add-point:b_fill段define name="b_fill.define_customerization"
   
   #end add-point
   DEFINE p_wc2      STRING
   #add-point:b_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #先清空單身變數內容
   CALL g_xcdv_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   LET g_sql = "SELECT  DISTINCT xcdv001,xcdv006,xcdv007,xcdv008,xcdv009,xcdv010,xcdv011,xcdv002,xcdv012, 
       xcdv101,xcdv102,t1.oocql004 ,t2.imaal003 ,t3.imaal004 ,t4.xcbfl003 ,t5.xcaul003 FROM xcdv_t", 
          
               "",
               
                              " LEFT JOIN oocql_t t1 ON t1.oocqlent="||g_enterprise||" AND t1.oocql001='221' AND t1.oocql002=xcdv007 AND t1.oocql003='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent="||g_enterprise||" AND t2.imaal001=xcdv009 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t3 ON t3.imaalent="||g_enterprise||" AND t3.imaal001=xcdv009 AND t3.imaal002='"||g_dlang||"' ",
               " LEFT JOIN xcbfl_t t4 ON t4.xcbflent="||g_enterprise||" AND t4.xcbflcomp=xcdvcomp AND t4.xcbfl001=xcdv002 AND t4.xcbfl002='"||g_dlang||"' ",
               " LEFT JOIN xcaul_t t5 ON t5.xcaulent="||g_enterprise||" AND t5.xcaul001=xcdv012 AND t5.xcaul002='"||g_dlang||"' ",
 
               " WHERE xcdvent= ? AND xcdvld=? AND xcdv003=? AND xcdv004=? AND xcdv005=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("xcdv_t")
   END IF
   
   #add-point:b_fill段sql_after name="b_fill.sql_after"
   LET g_sql = g_sql CLIPPED, " AND xcdv001 = '1' " 
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axct328_fill_chk(1) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = g_sql, " ORDER BY xcdv_t.xcdv001,xcdv_t.xcdv002,xcdv_t.xcdv006,xcdv_t.xcdv007,xcdv_t.xcdv008,xcdv_t.xcdv009,xcdv_t.xcdv010,xcdv_t.xcdv011,xcdv_t.xcdv012"
         #add-point:b_fill段fill_before name="b_fill.fill_before"
         
         #end add-point
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axct328_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axct328_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005
                                               
      FOREACH b_fill_cs INTO g_xcdv_d[l_ac].xcdv001,g_xcdv_d[l_ac].xcdv006,g_xcdv_d[l_ac].xcdv007,g_xcdv_d[l_ac].xcdv008, 
          g_xcdv_d[l_ac].xcdv009,g_xcdv_d[l_ac].xcdv010,g_xcdv_d[l_ac].xcdv011,g_xcdv_d[l_ac].xcdv002, 
          g_xcdv_d[l_ac].xcdv012,g_xcdv_d[l_ac].xcdv101,g_xcdv_d[l_ac].xcdv102,g_xcdv_d[l_ac].xcdv007_desc, 
          g_xcdv_d[l_ac].xcdv009_desc,g_xcdv_d[l_ac].xcdv009_desc_desc,g_xcdv_d[l_ac].xcdv002_desc,g_xcdv_d[l_ac].xcdv012_desc 
 
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充 name="b_fill.fill"
        
         #end add-point
      
         #帶出公用欄位reference值
         
         
 
        
         #add-point:單身資料抓取 name="bfill.foreach"
         
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF 
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         
      END FOREACH
 
            CALL g_xcdv_d.deleteElement(g_xcdv_d.getLength())
 
      
   END IF
   
   #add-point:b_fill段more name="b_fill.more"
   LET g_rec_b=l_ac-1
   FREE axct328_pb 
   RETURN
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   #遮罩相關處理
   FOR l_ac = 1 TO g_xcdv_d.getLength()
      LET g_xcdv_d_mask_o[l_ac].* =  g_xcdv_d[l_ac].*
      CALL axct328_xcdv_t_mask()
      LET g_xcdv_d_mask_n[l_ac].* =  g_xcdv_d[l_ac].*
   END FOR
   
 
 
   FREE axct328_pb   
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axct328_idx_chk()
   #add-point:idx_chk段define name="idx_chk.define_customerization"
   
   #end add-point
   #add-point:idx_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   #判定目前選擇的頁面
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      #確保當下指標的位置未超過上限
      IF g_detail_idx > g_xcdv_d.getLength() THEN
         LET g_detail_idx = g_xcdv_d.getLength()
      END IF
      #確保資料位置不小於1
      IF g_detail_idx = 0 AND g_xcdv_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      #將筆數資料顯示到畫面上
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xcdv_d.getLength() TO FORMONLY.cnt
      #將位置顯示到正確筆數上
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   END IF
    
   #同第一個page的做法進行其他頁面的處理
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      #確保當下指標的位置未超過上限
      IF g_detail_idx > g_xcdv2_d.getLength() THEN
         LET g_detail_idx = g_xcdv2_d.getLength()
      END IF
      #確保資料位置不小於2
      IF g_detail_idx = 0 AND g_xcdv2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      #將筆數資料顯示到畫面上
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xcdv2_d.getLength() TO FORMONLY.cnt
      #將位置顯示到正確筆數上
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      #確保當下指標的位置未超過上限
      IF g_detail_idx > g_xcdv3_d.getLength() THEN
         LET g_detail_idx = g_xcdv3_d.getLength()
      END IF
      #確保資料位置不小於3
      IF g_detail_idx = 0 AND g_xcdv3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      #將筆數資料顯示到畫面上
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xcdv3_d.getLength() TO FORMONLY.cnt
      #將位置顯示到正確筆數上
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
   END IF
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axct328_b_fill2(pi_idx)
   #add-point:b_fill2段define name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_xcdv_d.getLength() <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   IF g_glaa015 = 'Y' THEN
      CALL axct328_b_fill_2()
   END IF
   IF g_glaa019 = 'Y' THEN
      CALL axct328_b_fill_3()
   END IF
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.before_delete" >}
#+ 單身db資料刪除
PRIVATE FUNCTION axct328_before_delete()
   #add-point:before_delete段define name="before_delete.define_customerization"
   
   #end add-point 
   #add-point:before_delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="before_delete.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="delete.body.b_single_delete"
   
   #end add-point
   
   DELETE FROM xcdv_t
    WHERE xcdvent = g_enterprise AND xcdvld = g_xcdv_m.xcdvld AND
                              xcdv003 = g_xcdv_m.xcdv003 AND
                              xcdv004 = g_xcdv_m.xcdv004 AND
                              xcdv005 = g_xcdv_m.xcdv005 AND
 
          xcdv001 = g_xcdv_d_t.xcdv001
      AND xcdv002 = g_xcdv_d_t.xcdv002
      AND xcdv006 = g_xcdv_d_t.xcdv006
      AND xcdv007 = g_xcdv_d_t.xcdv007
      AND xcdv008 = g_xcdv_d_t.xcdv008
      AND xcdv009 = g_xcdv_d_t.xcdv009
      AND xcdv010 = g_xcdv_d_t.xcdv010
      AND xcdv011 = g_xcdv_d_t.xcdv011
      AND xcdv012 = g_xcdv_d_t.xcdv012
 
      
   #add-point:單筆刪除中 name="delete.body.m_single_delete"
   IF g_glaa015 = 'Y' OR g_glaa019 = 'Y' THEN  
      DELETE FROM xcdv_t
       WHERE xcdvent = g_enterprise AND xcdvld = g_xcdv_m.xcdvld AND
                                 xcdv003 = g_xcdv_m.xcdv003 AND
                                 xcdv004 = g_xcdv_m.xcdv004 AND
                                 xcdv005 = g_xcdv_m.xcdv005 
         AND xcdv002 = g_xcdv_d_t.xcdv002
         AND xcdv006 = g_xcdv_d_t.xcdv006
         AND xcdv007 = g_xcdv_d_t.xcdv007
         AND xcdv008 = g_xcdv_d_t.xcdv008
         AND xcdv009 = g_xcdv_d_t.xcdv009
         AND xcdv010 = g_xcdv_d_t.xcdv010
         AND xcdv011 = g_xcdv_d_t.xcdv011
         AND xcdv012 = g_xcdv_d_t.xcdv012
   END IF
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xcdv_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後 name="delete.body.a_single_delete"
   
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
 
{</section>}
 
{<section id="axct328.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axct328_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define name="delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axct328_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define name="insert_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axct328_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define name="update_b.define_customerization"
   
   #end add-point 
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正其他單身key欄位
PRIVATE FUNCTION axct328_key_update_b(ps_keys_bak)
   #add-point:update_b段define name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變, 若無改變則返回
   IF g_xcdv_d[l_ac].xcdv001 = g_xcdv_d_t.xcdv001 
      AND g_xcdv_d[l_ac].xcdv002 = g_xcdv_d_t.xcdv002 
      AND g_xcdv_d[l_ac].xcdv006 = g_xcdv_d_t.xcdv006 
      AND g_xcdv_d[l_ac].xcdv007 = g_xcdv_d_t.xcdv007 
      AND g_xcdv_d[l_ac].xcdv008 = g_xcdv_d_t.xcdv008 
      AND g_xcdv_d[l_ac].xcdv009 = g_xcdv_d_t.xcdv009 
      AND g_xcdv_d[l_ac].xcdv010 = g_xcdv_d_t.xcdv010 
      AND g_xcdv_d[l_ac].xcdv011 = g_xcdv_d_t.xcdv011 
      AND g_xcdv_d[l_ac].xcdv012 = g_xcdv_d_t.xcdv012 
 
      THEN
      RETURN
   END IF
    
 
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION axct328_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axct328_lock_b(ps_table,ps_page)
   #add-point:lock_b段define name="lock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
   
   #先刷新資料
   #CALL axct328_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axct328.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axct328_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define name="unlock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
   
 
 
END FUNCTION
 
{</section>}
 
{<section id="axct328.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axct328_set_entry(p_cmd)
   #add-point:set_entry段define name="set_entry.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xcdvld,xcdv003,xcdv004,xcdv005",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("xccjcomp",TRUE)
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axct328.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axct328_set_no_entry(p_cmd)
   #add-point:set_no_entry段define name="set_no_entry.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xcdvld,xcdv003,xcdv004,xcdv005",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      CALL cl_set_comp_entry("xcdvcomp",FALSE)
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axct328.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axct328_set_entry_b(p_cmd)
   #add-point:set_entry_b段define name="set_entry_b.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   CALL cl_set_comp_required('xcdv011',FALSE)
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axct328_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define name="set_no_entry_b.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b段"
   
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION axct328_set_act_visible()
   #add-point:set_act_visible段define name="set_act_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point
   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axct328.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION axct328_set_act_no_visible()
   #add-point:set_act_no_visible段define name="set_act_no_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point
   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axct328.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION axct328_set_act_visible_b()
   #add-point:set_act_visible_b段define name="set_act_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axct328.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION axct328_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define name="set_act_no_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axct328.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axct328_default_search()
   #add-point:default_search段define name="default_search.define_customerization"
   
   #end add-point    
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="default_search.pre_function"
   
   #end add-point
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   #add-point:default_search段開始前 name="default_search.before"
   
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xcdvld = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xcdv003 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xcdv004 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " xcdv005 = '", g_argv[04], "' AND "
   END IF
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axct328.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axct328_fill_chk(ps_idx)
   #add-point:fill_chk段define name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="fill_chk.pre_function"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
   
   #add-point:fill_chk段other name="fill_chk.other"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axct328.modify_detail_chk" >}
#+ 單身輸入判定
PRIVATE FUNCTION axct328_modify_detail_chk(ps_record)
   #add-point:modify_detail_chk段define name="modify_detail_chk.define_customerization"
   
   #end add-point
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify_detail_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="modify_detail_chk.before"
   
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "xcdv001"
 
      #add-point:modify_detail_chk段自訂page控制 name="modify_detail_chk.page_control"
      
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前 name="modify_detail_chk.after"
   
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
 
{</section>}
 
{<section id="axct328.mask_functions" >}
&include "erp/axc/axct328_mask.4gl"
 
{</section>}
 
{<section id="axct328.state_change" >}
    
 
{</section>}
 
{<section id="axct328.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION axct328_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xcdv_m.xcdvld
   LET g_pk_array[1].column = 'xcdvld'
   LET g_pk_array[2].values = g_xcdv_m.xcdv003
   LET g_pk_array[2].column = 'xcdv003'
   LET g_pk_array[3].values = g_xcdv_m.xcdv004
   LET g_pk_array[3].column = 'xcdv004'
   LET g_pk_array[4].values = g_xcdv_m.xcdv005
   LET g_pk_array[4].column = 'xcdv005'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axct328.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION axct328_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL axct328_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xcdv_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axct328.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_insert_xcdv()
   DEFINE l_rate     LIKE ooan_t.ooan005
DEFINE l_amount   LIKE xcdv_t.xcdv102
   LET l_amount = 0 
   LET l_rate = 1
   IF g_glaa015 = 'Y' THEN
      CALL s_aooi160_get_exrate('2',g_xcdv_m.xcdvld,g_today,g_glaa001,g_glaa016,0,g_glaa018)
           RETURNING l_rate
      LET g_xcdv2_d[l_ac].xcdv102 = g_xcdv_d[l_ac].xcdv102 * l_rate
      LET g_xcdv2_d[l_ac].xcdv102 = s_curr_round(g_xcdv_m.xcdvcomp,g_glaa016,g_xcdv2_d[l_ac].xcdv102,2)
      
      INSERT INTO xcdv_t
            (xcdvent,
             xcdvcomp,xcdv004,xcdv005,xcdvld,xcdv003,
             xcdv001,xcdv002,xcdv006,xcdv007,xcdv008,xcdv009,xcdv010,xcdv011,xcdv012,
             xcdv101,xcdv102) 
      VALUES(g_enterprise,
             g_xcdv_m.xcdvcomp,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,
             '2',g_xcdv_d[l_ac].xcdv002,g_xcdv_d[l_ac].xcdv006,g_xcdv_d[l_ac].xcdv007, 
                 g_xcdv_d[l_ac].xcdv008,g_xcdv_d[l_ac].xcdv009,g_xcdv_d[l_ac].xcdv010, 
                 g_xcdv_d[l_ac].xcdv011,g_xcdv_d[l_ac].xcdv012,
                 g_xcdv_d[l_ac].xcdv101,g_xcdv2_d[l_ac].xcdv102)      
      
   END IF
   LET l_amount = 0 
   LET l_rate = 1
   IF g_glaa019 = 'Y' THEN
      CALL s_aooi160_get_exrate('2',g_xcdv_m.xcdvld,g_today,g_glaa001,g_glaa020,0,g_glaa022)
           RETURNING l_rate
      LET g_xcdv3_d[l_ac].xcdv102 = g_xcdv_d[l_ac].xcdv102 * l_rate      
      LET g_xcdv3_d[l_ac].xcdv102 = s_curr_round(g_xcdv_m.xcdvcomp,g_glaa020,g_xcdv3_d[l_ac].xcdv102,2)
      
      INSERT INTO xcdv_t
            (xcdvent,
             xcdvcomp,xcdv004,xcdv005,xcdvld,xcdv003,
             xcdv001,xcdv002,xcdv006,xcdv007,xcdv008,xcdv009,xcdv010,xcdv011,xcdv012,
             xcdv101,xcdv102) 
      VALUES(g_enterprise,
             g_xcdv_m.xcdvcomp,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,
             '3',g_xcdv_d[l_ac].xcdv002,g_xcdv_d[l_ac].xcdv006,g_xcdv_d[l_ac].xcdv007, 
                 g_xcdv_d[l_ac].xcdv008,g_xcdv_d[l_ac].xcdv009,g_xcdv_d[l_ac].xcdv010, 
                 g_xcdv_d[l_ac].xcdv011,g_xcdv_d[l_ac].xcdv012,
                 g_xcdv_d[l_ac].xcdv101,g_xcdv3_d[l_ac].xcdv102)
   END IF
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_update_xcdv()
   DEFINE l_rate     LIKE ooan_t.ooan005
DEFINE l_amount   LIKE xcdv_t.xcdv102
   LET l_amount = 0 
   LET l_rate = 1
   IF g_glaa015 = 'Y' THEN
      CALL s_aooi160_get_exrate('2',g_xcdv_m.xcdvld,g_today,g_glaa001,g_glaa016,0,g_glaa018)
           RETURNING l_rate
      LET g_xcdv2_d[l_ac].xcdv102 = g_xcdv_d[l_ac].xcdv102 * l_rate      
      LET g_xcdv2_d[l_ac].xcdv102 = s_curr_round(g_xcdv_m.xcdvcomp,g_glaa016,g_xcdv2_d[l_ac].xcdv102,2)
      
       UPDATE xcdv_t SET (xcdvld,xcdv003,xcdv004,xcdv005,xcdv001,xcdv006,xcdv007,xcdv008,xcdv009,
                   xcdv010,xcdv011,xcdv002,xcdv012,xcdv101,xcdv102) = (g_xcdv_m.xcdvld, 
                   g_xcdv_m.xcdv003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,'2',g_xcdv_d[l_ac].xcdv006, 
                   g_xcdv_d[l_ac].xcdv007,g_xcdv_d[l_ac].xcdv008,g_xcdv_d[l_ac].xcdv009, 
                   g_xcdv_d[l_ac].xcdv010,g_xcdv_d[l_ac].xcdv011,g_xcdv_d[l_ac].xcdv002, 
                   g_xcdv_d[l_ac].xcdv012,g_xcdv_d[l_ac].xcdv101,g_xcdv2_d[l_ac].xcdv102)
                WHERE xcdvent = g_enterprise AND xcdvld = g_xcdv_m.xcdvld 
                 AND xcdv003 = g_xcdv_m.xcdv003 
                 AND xcdv004 = g_xcdv_m.xcdv004 
                 AND xcdv005 = g_xcdv_m.xcdv005 
 
                 AND xcdv001 = '2' #項次   
                 AND xcdv002 = g_xcdv_d_t.xcdv002  
                 AND xcdv006 = g_xcdv_d_t.xcdv006  
                 AND xcdv007 = g_xcdv_d_t.xcdv007  
                 AND xcdv008 = g_xcdv_d_t.xcdv008  
                 AND xcdv009 = g_xcdv_d_t.xcdv009  
                 AND xcdv010 = g_xcdv_d_t.xcdv010  
                 AND xcdv011 = g_xcdv_d_t.xcdv011  
                 AND xcdv012 = g_xcdv_d_t.xcdv012 
      
   END IF
   LET l_amount = 0 
   LET l_rate = 1
   IF g_glaa019 = 'Y' THEN
      CALL s_aooi160_get_exrate('2',g_xcdv_m.xcdvld,g_today,g_glaa001,g_glaa020,0,g_glaa022)
           RETURNING l_rate
      LET g_xcdv3_d[l_ac].xcdv102 = g_xcdv_d[l_ac].xcdv102 * l_rate      
      LET g_xcdv3_d[l_ac].xcdv102 = s_curr_round(g_xcdv_m.xcdvcomp,g_glaa020,g_xcdv3_d[l_ac].xcdv102,2)
      
      UPDATE xcdv_t SET (xcdvld,xcdv003,xcdv004,xcdv005,xcdv001,xcdv006,xcdv007,xcdv008,
          xcdv009,xcdv010,xcdv011,xcdv002,xcdv012,xcdv101,xcdv102) = (g_xcdv_m.xcdvld, 
          g_xcdv_m.xcdv003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,'3',g_xcdv_d[l_ac].xcdv006, 
          g_xcdv_d[l_ac].xcdv007,g_xcdv_d[l_ac].xcdv008,g_xcdv_d[l_ac].xcdv009, 
          g_xcdv_d[l_ac].xcdv010,g_xcdv_d[l_ac].xcdv011,g_xcdv_d[l_ac].xcdv002, 
          g_xcdv_d[l_ac].xcdv012,g_xcdv_d[l_ac].xcdv101,g_xcdv3_d[l_ac].xcdv102)
       WHERE xcdvent = g_enterprise AND xcdvld = g_xcdv_m.xcdvld 
        AND xcdv003 = g_xcdv_m.xcdv003 
        AND xcdv004 = g_xcdv_m.xcdv004 
        AND xcdv005 = g_xcdv_m.xcdv005 
 
        AND xcdv001 = '3' #項次   
        AND xcdv002 = g_xcdv_d_t.xcdv002  
        AND xcdv006 = g_xcdv_d_t.xcdv006  
        AND xcdv007 = g_xcdv_d_t.xcdv007  
        AND xcdv008 = g_xcdv_d_t.xcdv008  
        AND xcdv009 = g_xcdv_d_t.xcdv009  
        AND xcdv010 = g_xcdv_d_t.xcdv010  
        AND xcdv011 = g_xcdv_d_t.xcdv011 
        AND xcdv012 = g_xcdv_d_t.xcdv012
   END IF

END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_b_fill_2()
   #先清空單身變數內容
   CALL g_xcdv2_d.clear()
 
 
   #add-point:b_fill段sql_before

   #end add-point
   
   LET g_sql = "SELECT  UNIQUE xcdv001,xcdv006,xcdv007,xcdv008,xcdv009,xcdv010,xcdv011,xcdv002,xcdv012, 
       xcdv101,xcdv102,t1.oocql004 ,t2.imaal003 ,t3.imaal004 ,t4.xcbfl003 ,t5.xcaul003 FROM xcdv_t", 
          
               "",
               
                              " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='221' AND t1.oocql002=xcdv007 AND t1.oocql003='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=xcdv009 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t3 ON t3.imaalent='"||g_enterprise||"' AND t3.imaal001=xcdv009 AND t3.imaal002='"||g_dlang||"' ",
               " LEFT JOIN xcbfl_t t4 ON t4.xcbflent='"||g_enterprise||"' AND t4.xcbflcomp=xcdvcomp AND t4.xcbfl001=xcdv002 AND t4.xcbfl002='"||g_dlang||"' ",
               " LEFT JOIN xcaul_t t5 ON t5.xcaulent='"||g_enterprise||"' AND t5.xcaul001=xcdv012 AND t5.xcaul002='"||g_dlang||"' ",
 
               " WHERE xcdvent= ? AND xcdvld=? AND xcdv003=? AND xcdv004=? AND xcdv005=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("xcdv_t")
   END IF
   
   #add-point:b_fill段sql_after
   LET g_sql = g_sql CLIPPED, " AND xcdv001 = '2' " 
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axct328_fill_chk(1) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = g_sql, " ORDER BY xcdv_t.xcdv001,xcdv_t.xcdv002,xcdv_t.xcdv006,xcdv_t.xcdv007,xcdv_t.xcdv008,xcdv_t.xcdv009,xcdv_t.xcdv010,xcdv_t.xcdv011,xcdv_t.xcdv012"
         #add-point:b_fill段fill_before

         #end add-point
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axct328_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR axct328_pb2
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005
                                               
      FOREACH b_fill_cs2 INTO g_xcdv2_d[l_ac].xcdv001,g_xcdv2_d[l_ac].xcdv006,g_xcdv2_d[l_ac].xcdv007,g_xcdv2_d[l_ac].xcdv008, 
          g_xcdv2_d[l_ac].xcdv009,g_xcdv2_d[l_ac].xcdv010,g_xcdv2_d[l_ac].xcdv011,g_xcdv2_d[l_ac].xcdv002,g_xcdv2_d[l_ac].xcdv012,  
          g_xcdv2_d[l_ac].xcdv101,g_xcdv2_d[l_ac].xcdv102,g_xcdv2_d[l_ac].xcdv007_desc,g_xcdv2_d[l_ac].xcdv009_desc, 
          g_xcdv2_d[l_ac].xcdv009_desc_desc,g_xcdv2_d[l_ac].xcdv002_desc,g_xcdv2_d[l_ac].xcdv012_desc
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充
        
         #end add-point
      
         #帶出公用欄位reference值
         
         
 
        
         #add-point:單身資料抓取

         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF 
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         
      END FOREACH
 
            CALL g_xcdv2_d.deleteElement(g_xcdv2_d.getLength())
 
      
   END IF
   
  
   FREE axct328_pb2   

END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_b_fill_3()
   #先清空單身變數內容
   CALL g_xcdv3_d.clear()
 
 
   #add-point:b_fill段sql_before

   #end add-point
   
   LET g_sql = "SELECT  UNIQUE xcdv001,xcdv006,xcdv007,xcdv008,xcdv009,xcdv010,xcdv011,xcdv002,xcdv012, 
       xcdv101,xcdv102,t1.oocql004 ,t2.imaal003 ,t3.imaal004 ,t4.xcbfl003 ,t5.xcaul003 FROM xcdv_t", 
          
               "",
               
                              " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='221' AND t1.oocql002=xcdv007 AND t1.oocql003='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=xcdv009 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t3 ON t3.imaalent='"||g_enterprise||"' AND t3.imaal001=xcdv009 AND t3.imaal002='"||g_dlang||"' ",
               " LEFT JOIN xcbfl_t t4 ON t4.xcbflent='"||g_enterprise||"' AND t4.xcbflcomp=xcdvcomp AND t4.xcbfl001=xcdv002 AND t4.xcbfl002='"||g_dlang||"' ",
               " LEFT JOIN xcaul_t t5 ON t5.xcaulent='"||g_enterprise||"' AND t5.xcaul001=xcdv012 AND t5.xcaul002='"||g_dlang||"' ",
 
               " WHERE xcdvent= ? AND xcdvld=? AND xcdv003=? AND xcdv004=? AND xcdv005=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("xcdv_t")
   END IF
   
   #add-point:b_fill段sql_after
   LET g_sql = g_sql CLIPPED, " AND xcdv001 = '3' " 
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axct328_fill_chk(1) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = g_sql, " ORDER BY xcdv_t.xcdv001,xcdv_t.xcdv002,xcdv_t.xcdv006,xcdv_t.xcdv007,xcdv_t.xcdv008,xcdv_t.xcdv009,xcdv_t.xcdv010,xcdv_t.xcdv011,xcdv_t.xcdv012"
         #add-point:b_fill段fill_before

         #end add-point
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axct328_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR axct328_pb3
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005
                                               
      FOREACH b_fill_cs3 INTO g_xcdv3_d[l_ac].xcdv001,g_xcdv3_d[l_ac].xcdv006,g_xcdv3_d[l_ac].xcdv007,g_xcdv3_d[l_ac].xcdv008, 
          g_xcdv3_d[l_ac].xcdv009,g_xcdv3_d[l_ac].xcdv010,g_xcdv3_d[l_ac].xcdv011,g_xcdv3_d[l_ac].xcdv002,g_xcdv3_d[l_ac].xcdv012, 
          g_xcdv3_d[l_ac].xcdv101,g_xcdv3_d[l_ac].xcdv102,g_xcdv3_d[l_ac].xcdv007_desc,g_xcdv3_d[l_ac].xcdv009_desc, 
          g_xcdv3_d[l_ac].xcdv009_desc_desc,g_xcdv3_d[l_ac].xcdv002_desc,g_xcdv3_d[l_ac].xcdv012_desc
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_xcdv_m.xcdvcomp
         LET g_ref_fields[2] = g_xcdv3_d[l_ac].xcdv002
         CALL ap_ref_array2(g_ref_fields,"SELECT xcbfl003 FROM xcbfl_t WHERE xcbflent='"||g_enterprise||"' AND xcbflcomp=? AND xcbfl001=? AND xcbfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_xcdv3_d[l_ac].xcdv002_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_xcdv3_d[l_ac].xcdv002_desc
         #end add-point
      
         #帶出公用欄位reference值
         
         
 
        
         #add-point:單身資料抓取

         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF 
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         
      END FOREACH
 
            CALL g_xcdv3_d.deleteElement(g_xcdv3_d.getLength())
 
      
   END IF
   
  
   FREE axct328_pb3   

END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_chk_ld_comp()
   DEFINE r_success        LIKE type_t.num5
   DEFINE l_success        LIKE type_t.num5
   
   LET r_success = TRUE

#只检查法人
   IF g_xcdv_m.xcdvld IS NULL AND g_xcdv_m.xcdvcomp IS NOT NULL THEN   
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
      
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_xcdv_m.xcdvcomp
         
      #呼叫檢查存在並帶值的library
      IF cl_chk_exist("v_ooef001_1") THEN
         #檢查成功時後續處理
         #LET  = g_chkparam.return1
         #DISPLAY BY NAME 
      ELSE
         #檢查失敗時後續處理
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF

#只检查账套
   IF g_xcdv_m.xcdvld IS NOT NULL AND g_xcdv_m.xcdvcomp IS NULL THEN
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
      
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_xcdv_m.xcdvld
      #160318-00025#12--add--str
      LET g_errshow = TRUE 
      LET g_chkparam.err_str[1] = "agl-00051:sub-01302|agli010|",cl_get_progname("agli010",g_lang,"2"),"|:EXEPROGagli010"
      #160318-00025#12--add--end   
      #呼叫檢查存在並帶值的library
      IF cl_chk_exist("v_glaald") THEN
         #檢查成功時後續處理
         #LET  = g_chkparam.return1
         #DISPLAY BY NAME 
         CALL s_ld_chk_authorization(g_user,g_xcdv_m.xcdvld) RETURNING l_success
         IF l_success = FALSE THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'axr-00022'
            LET g_errparam.extend = g_xcdv_m.xcdvld
            LET g_errparam.popup = TRUE
            CALL cl_err()
            LET r_success = FALSE
            RETURN r_success
         END IF 
      ELSE
         #檢查失敗時後續處理
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF

#法人账套都存在，检查他们的关系
   IF NOT s_ld_chk_comp(g_xcdv_m.xcdvld,g_xcdv_m.xcdvcomp) THEN  #v_glaald_5 
      LET g_xcdv_m.xcdvcomp = g_xcdv_m_t.xcdvcomp
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_ref()
    IF g_xcdv_m.xcdvcomp IS NULL THEN     
      
      SELECT glaacomp
        INTO g_xcdv_m.xcdvcomp
        FROM glaa_t  
       WHERE glaaent = g_enterprise 
         AND glaald = g_xcdv_m.xcdvld
      DISPLAY BY NAME g_xcdv_m.xcdvcomp      
      SELECT glaa010,glaa011 INTO g_xcdv_m.xcdv004,g_xcdv_m.xcdv005
       FROM glaa_t
       WHERE glaaent  = g_enterprise
         AND glaacomp = g_xcdv_m.xcdvcomp
         AND glaa014 = 'Y'
      DISPLAY BY NAME g_xcdv_m.xcdv004,g_xcdv_m.xcdv005
   ELSE
      IF g_xcdv_m.xcdvld IS NULL THEN  
         SELECT glaald,glaa010,glaa011 INTO g_xcdv_m.xcdvld,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005
          FROM glaa_t
          WHERE glaaent  = g_enterprise
            AND glaacomp = g_xcdv_m.xcdvcomp
            AND glaa014 = 'Y'
         DISPLAY BY NAME g_xcdv_m.xcdvld,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005
      END IF
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcdv_m.xcdvcomp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcdv_m.xcdvcomp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcdv_m.xcdvcomp_desc   
       
 
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcdv_m.xcdvld
   CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcdv_m.xcdvld_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcdv_m.xcdvld_desc   
   
   
   
   INITIALIZE g_ref_fields TO NULL                                                                                                                                                      
   LET g_ref_fields[1] = g_xcdv_m.xcdv003                                                                                                                                   
   CALL ap_ref_array2(g_ref_fields,"SELECT xcatl003 FROM xcatl_t WHERE xcatlent='"||g_enterprise||"' AND xcatl001=? AND xcatl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcdv_m.xcdv003_desc = '', g_rtn_fields[1] , ''                                                                                                                     
   DISPLAY BY NAME g_xcdv_m.xcdv003_desc 
   
    SELECT glaa001,glaa003,glaa015,glaa016,glaa018,glaa019,glaa020,glaa022,glaa025 
     INTO g_glaa001,g_glaa003,g_glaa015,g_glaa016,g_glaa018,g_glaa019,g_glaa020,g_glaa022,g_glaa025 
     FROM glaa_t
    WHERE glaaent = g_enterprise 
      AND glaald = g_xcdv_m.xcdvld
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_before_delete_2()
   
      
   #add-point:單筆刪除中
   
      DELETE FROM xcdv_t
       WHERE xcdvent = g_enterprise AND xcdvld = g_xcdv_m.xcdvld AND
                                 xcdv003 = g_xcdv_m.xcdv003 AND
                                 xcdv004 = g_xcdv_m.xcdv004 AND
                                 xcdv005 = g_xcdv_m.xcdv005 
         AND xcdv002 = g_xcdv2_d_t.xcdv002
         AND xcdv006 = g_xcdv2_d_t.xcdv006
         AND xcdv007 = g_xcdv2_d_t.xcdv007
         AND xcdv008 = g_xcdv2_d_t.xcdv008
         AND xcdv009 = g_xcdv2_d_t.xcdv009
         AND xcdv010 = g_xcdv2_d_t.xcdv010
         AND xcdv011 = g_xcdv2_d_t.xcdv011
         AND xcdv012 = g_xcdv2_d_t.xcdv012
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xcdv_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN FALSE 
   END IF
   RETURN TRUE
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_before_delete_3()
   DELETE FROM xcdv_t
       WHERE xcdvent = g_enterprise AND xcdvld = g_xcdv_m.xcdvld AND
                                 xcdv003 = g_xcdv_m.xcdv003 AND
                                 xcdv004 = g_xcdv_m.xcdv004 AND
                                 xcdv005 = g_xcdv_m.xcdv005 
         AND xcdv002 = g_xcdv3_d_t.xcdv002
         AND xcdv006 = g_xcdv3_d_t.xcdv006
         AND xcdv007 = g_xcdv3_d_t.xcdv007
         AND xcdv008 = g_xcdv3_d_t.xcdv008
         AND xcdv009 = g_xcdv3_d_t.xcdv009
         AND xcdv010 = g_xcdv3_d_t.xcdv010
         AND xcdv011 = g_xcdv3_d_t.xcdv011
         AND xcdv012 = g_xcdv3_d_t.xcdv012
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xcdv_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN FALSE 
   END IF
   RETURN TRUE
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_s01()
DEFINE p_xrad001      LIKE xrad_t.xrad001
DEFINE l_xradl003     LIKE type_t.chr80
DEFINE ls_str          STRING
DEFINE l_chr           LIKE type_t.chr1   
DEFINE l_chr1          LIKE type_t.chr1  
DEFINE l_num           LIKE type_t.num5
   
   OPEN WINDOW w_axct328_s01 WITH FORM cl_ap_formpath("axc","axct328_s01")
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #輸入開始
      INPUT BY NAME g_xcdv_s.name,g_xcdv_s.dir
         BEFORE INPUT
           


         AFTER INPUT
            

      END INPUT

      DISPLAY ARRAY g_xcdv5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  

            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail5")
               LET l_ac = g_detail_idx
               
               #add-point:page1自定義行為

               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               
               LET g_current_page = 5
               
         
         END DISPLAY  
         
      ON ACTION close
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION exit
         LET INT_FLAG = TRUE
         EXIT DIALOG
      
      
      ON ACTION browser1
         CALL cl_client_browse_dir() RETURNING g_xcdv_s.dir
         LET ls_str = g_xcdv_s.dir
         #抓取目录斜杆
         LET l_num =ls_str.getIndexOf(':',1)                                    #抓取：后的字符位置
         LET l_chr = ls_str.substring(l_num+1,l_num+1)                          #截取冒号后的字符 
         LET l_chr1 = ls_str.substring(ls_str.getLength(),ls_str.getLength())   #判断是否为根目录
         IF l_chr <> l_chr1  THEN         
            LET g_xcdv_s.dir = g_xcdv_s.dir||l_chr 
         ELSE
            LET g_xcdv_s.dir = g_xcdv_s.dir 
         END IF 
         DISPLAY BY NAME g_xcdv_s.dir
         
      ON ACTION produce
         LET w = ui.Window.getCurrent()
         LET f = w.getForm()
         LET page = f.FindNode("Page","bpage_1")
         CALL axct328_excelexample(page,base.TypeInfo.create(g_xcdv5_d),'Y')
         ACCEPT DIALOG 

      ON ACTION off
         LET INT_FLAG = TRUE
         EXIT DIALOG


   END DIALOG

   



      #畫面關閉
      CLOSE WINDOW w_axct328_s01
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_excelexample(n,t,p_show_hidden)
   DEFINE  t,t1,t2,n1_text,n3_text         om.DomNode,
         n,n2,n_child                    om.DomNode,
         p_show_hidden                   LIKE type_t.chr1,    #隱藏欄位是否顯示
         n1,n_table,n3                   om.NodeList,
         i,res,p,q,k                     LIKE type_t.num10,
         h                               LIKE type_t.num10,
         cnt_combo_data,cnt_combo_tot    LIKE type_t.num10,
         cells,values,j,l,sheet,cc       STRING,
         table_name,l_length             STRING,
         l_table_name                    LIKE type_t.chr20,
         l_datatype                      LIKE type_t.chr20,
         l_bufstr                        base.StringBuffer,
         lwin_curr                       ui.Window,
         l_show                          LIKE type_t.chr1,
         l_time                          LIKE type_t.chr8

 DEFINE  combo_arr        DYNAMIC ARRAY OF RECORD
           sheet          LIKE type_t.num10,
           seq            LIKE type_t.num10,
           name           LIKE type_t.chr2,
           text           LIKE type_t.chr50
                          END RECORD
 DEFINE  customize_table  LIKE type_t.chr1
 DEFINE  l_str            STRING
 DEFINE  l_i              LIKE type_t.num5
 DEFINE  buf              base.StringBuffer
 DEFINE  l_dec_point      STRING,
         l_qry_name       LIKE type_t.chr20,
         l_cust           LIKE type_t.chr1
 DEFINE  l_tabIndex       LIKE type_t.num10
 DEFINE  l_seq            DYNAMIC ARRAY OF LIKE type_t.num10
 DEFINE  l_seq2           DYNAMIC ARRAY OF LIKE type_t.num10
 DEFINE  l_j              LIKE type_t.num5
 DEFINE  bFound           LIKE type_t.num5
 DEFINE  l_dbname         STRING
 DEFINE  l_zal09          LIKE type_t.chr1
 DEFINE  l_desc           STRING


   
   WHENEVER ERROR CALL cl_err_msg_log

   LET cnt_table = 1

   LET l_bufstr = base.StringBuffer.create()
#   WHENEVER ERROR CALL cl_err_msg_log
   LET lwin_curr = ui.window.getCurrent()

   LET l_channel = base.Channel.create()
   LET l_time = TIME(CURRENT)
  #LET xls_name = g_prog CLIPPED,l_time CLIPPED,".xls"
   LET xls_name = g_xcdv_s.name CLIPPED,".xls"

   LET buf = base.StringBuffer.create()
   CALL buf.append(xls_name)
   CALL buf.replace( ":","-", 0)
   LET xls_name = buf.toString()

   # 個資會記錄使用者的行為模式，在此說明excel的檔名及匯出excel的方式
   LET l_desc = xls_name CLIPPED," Using HTML to export the Table to excel."

   IF os.Path.delete(xls_name CLIPPED) THEN END IF
   CALL l_channel.openFile( xls_name CLIPPED, "a" )
   CALL l_channel.setDelimiter("")

   IF ms_codeset.getIndexOf("BIG5", 1) OR
      ( ms_codeset.getIndexOf("GB2312", 1) OR ms_codeset.getIndexOf("GBK", 1) OR ms_codeset.getIndexOf("GB18030", 1) ) THEN
      IF ms_locale = "ZH_TW" AND g_lang = '2' THEN
         LET tsconv_cmd = "big5_to_gb2312"
         LET ms_codeset = "GB2312"
      END IF
      IF ms_locale = "ZH_CN" AND g_lang = '0' THEN
         LET tsconv_cmd = "gb2312_to_big5"
         LET ms_codeset = "BIG5"
      END IF
   END IF

   LET l_str = "<html xmlns:o=",g_quote,"urn:schemas-microsoft-com:office:office",g_quote
   CALL l_channel.write(l_str CLIPPED)
   LET l_str = "<meta http-equiv=Content-Type content=",g_quote,"text/html; charset=",ms_codeset,g_quote,">"
   CALL l_channel.write(l_str CLIPPED)
   LET l_str = "xmlns:x=",g_quote,"urn:schemas-microsoft-com:office:excel",g_quote
   CALL l_channel.write(l_str CLIPPED)
   LET l_str = "xmlns=",g_quote,"http://www.w3.org/TR/REC-html40",g_quote,">"
   CALL l_channel.write(l_str CLIPPED)
   CALL l_channel.write("<head><style><!--")

   IF not ms_codeset.getIndexOf("UTF-8", 1) THEN
      IF g_lang = "0" THEN  #繁體中文
         CALL l_channel.write("td  {font-family:細明體, serif;}")
      ELSE
         IF g_lang = "2" THEN  #簡體中文
            CALL l_channel.write("td  {font-family:新宋体, serif;}")
         ELSE
            CALL l_channel.write("td  {font-family:細明體, serif;}")
         END IF
      END IF
   ELSE
      CALL l_channel.write("td  {font-family:Courier New, serif;}")
   END IF

   LET l_str = ".xl24  {mso-number-format:",g_quote,"\@",g_quote,";}",
               ".xl30 {mso-style-parent:style0; mso-number-format:\"0_ \";} ",
               ".xl31 {mso-style-parent:style0; mso-number-format:\"0\.0_ \";} ",
               ".xl32 {mso-style-parent:style0; mso-number-format:\"0\.00_ \";} ",
               ".xl33 {mso-style-parent:style0; mso-number-format:\"0\.000_ \";} ",
               ".xl34 {mso-style-parent:style0; mso-number-format:\"0\.0000_ \";} ",
               ".xl35 {mso-style-parent:style0; mso-number-format:\"0\.00000_ \";} ",
               ".xl36 {mso-style-parent:style0; mso-number-format:\"0\.000000_ \";} ",
               ".xl37 {mso-style-parent:style0; mso-number-format:\"0\.0000000_ \";} ",
               ".xl38 {mso-style-parent:style0; mso-number-format:\"0\.00000000_ \";} ",
               ".xl39 {mso-style-parent:style0; mso-number-format:\"0\.000000000_ \";} ",
               ".xl40 {mso-style-parent:style0; mso-number-format:\"0\.0000000000_ \";} "
   CALL l_channel.write(l_str CLIPPED)
   CALL l_channel.write("--></style>")
   CALL l_channel.write("<!--[if gte mso 9]><xml>")
   CALL l_channel.write("<x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet>")
   CALL l_channel.write("<x:DefaultRowHeight>330</x:DefaultRowHeight>")
   CALL l_channel.write("</xml><![endif]--></head>")
   CALL l_channel.write("<body><table border=1 cellpadding=0 cellspacing=0 width=432 style='border-collapse: collapse;table-layout:fixed;width:324pt'>")
   CALL l_channel.write("<tr height=22>")

   LET l_win_name = NULL
   LET l_win_name = n.getAttribute("name")

   LET n_table = n.selectByTagName("Table")
   CALL combo_arr.clear()
   FOR h=1 to cnt_table
      CALL g_hidden.clear()
      CALL g_ifchar.clear()
      CALL g_mask.clear()
      LET n2 = n_table.item(h)

      IF l_win_name = "p_dbqry_table" THEN
         LET n1 = n2.selectByPath("//TableColumn[@hidden=\"0\"]")
      ELSE
         LET n1 = n2.selectByTagName("TableColumn")
      END IF

      #抓取 table 是否有進行欄位排序
      INITIALIZE g_sort.* TO NULL
      LET g_sort.column = n2.getAttribute("sortColumn")
      IF g_sort.column >=0 AND g_sort.column IS NOT NULL  THEN
         LET g_sort.column = g_sort.column + 1    #屬性 sortColumn 為 0 開始
         LET g_sort.type = n2.getAttribute("sortType")
      END IF

      LET cnt_header = n1.getLength()
      LET l = h
      LET sheet=g_sheet  CLIPPED,l
      LET k = 0

      CALL l_seq.clear()
      CALL l_seq2.clear()

     #循環Table中的每一個列
     FOR i=1 TO cnt_header
       #得到對應的DomNode節點
       LET n1_text = n1.item(i)
       #得到該列的TabIndex屬性
       LET l_tabIndex = n1_text.getAttribute("tabIndex")

       #如果TabIndex屬性不為空
       IF NOT cl_null(l_tabIndex) THEN
          #初始化一個標志變量（表明是否在數組中找到比當前TabIndex更大的節點）
          LET bFound = FALSE
          #開始在已有的數組中定位比當前tabIndex大的成員
          FOR l_j=1 TO l_seq2.getLength()
              #如果有找到
              IF l_seq2[l_j] > l_tabIndex THEN
                 #設置標志變量
                 LET bFound = TRUE
                 #退出搜尋過程（此時下標j保存的該成員變量的位置）
                 EXIT FOR
              END IF
          END FOR
          #如果始終沒有找到（比如數組根本就是空的）那麼j里面保存的就是當前數組最大下標+1
          #判斷有沒有找到
          IF bFound THEN
             #如果找到則向該數組中插入一個元素（在這個tabIndex比它大的元素前面插入)
             CALL l_seq2.InsertElement(l_j)
             CALL l_seq.InsertElement(l_j)
          END IF
          #把當前的下標（列的位置）和tabIndex填充到這個位置上
          #如果沒有找到，則填充的位置會是整個數組的末尾
          LET l_seq[l_j] = i
          LET l_seq2[l_j] = l_tabIndex
       END IF
     END FOR

      FOR i=1 to cnt_header
         LET n1_text = n1.item(l_seq[i])
         LET k = k + 1
         LET j = k
         LET cells = "R1C" CLIPPED,j
         LET l_field_name = NULL
         LET l_show = n1_text.getAttribute("hidden")
         IF ((p_show_hidden = 'N' OR p_show_hidden IS NULL) AND (l_show = "0" OR l_show IS NULL)) OR p_show_hidden = 'Y' THEN
            LET l_field_name = n1_text.getAttribute("name")
            IF l_field_name= 'xcdv_t.xcdvent' OR l_field_name= 'xcdv_t.xcdvld' OR
               l_field_name= 'xcdv_t.xcdvcomp' OR l_field_name= 'xcdv_t.xcdv001' OR  
               l_field_name= 'xcdv_t.xcdv004' OR l_field_name= 'xcdv_t.xcdv005' OR
               l_field_name= 'xcdv_t.xcdv003' OR l_field_name= 'xcdv_t.xcdv006' OR
               l_field_name= 'xcdv_t.xcdv007' OR l_field_name= 'xcdv_t.xcdv008' OR
               l_field_name= 'xcdv_t.xcdv009' OR l_field_name= 'xcdv_t.xcdv002' OR
               l_field_name= 'xcdv_t.xcdv010' OR l_field_name= 'xcdv_t.xcdv011' OR
               l_field_name= 'xcdv_t.xcdv012' OR               
               l_field_name= 'xcdv_t.xcdv101' OR l_field_name= 'xcdv_t.xcdv102' OR               
               l_field_name = 'formonly.xcdv102_1' OR l_field_name = 'formonly.xcdv102_2' 
                 
               THEN
               LET values = n1_text.getAttribute("text")
               LET l_str = "<td>",axct328_add_span(values),"</td>"
               CALL l_channel.write(l_str CLIPPED)
            END IF
         ELSE
            LET g_hidden[i] = "1"
            LET k = k -1
         END IF
      END FOR
      IF h=1 THEN CALL axct328_get_boday(h,cnt_header,t,combo_arr,l_seq) END IF

   END FOR

   # 使用者的行為模式改到前面判斷，在此僅將前面判斷的結果說明傳至syslog中做紀錄
   IF cl_log_sys_operation("A","G",l_desc) THEN
   END IF
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_s02()
DEFINE l_excel         STRING 
DEFINE ls_str          STRING
DEFINE l_chr           LIKE type_t.chr1   
DEFINE l_chr1          LIKE type_t.chr1   
DEFINE l_num           LIKE type_t.num5
DEFINE l_n             LIKE type_t.num5
DEFINE l_success       LIKE type_t.num5
   #畫面開啟 (identifier)

   OPEN WINDOW w_axct328_s02 WITH FORM cl_ap_formpath("axc","axct328_s02")

   INITIALIZE g_xcdv_f.* LIKE xcdv_t.*
   
   LET g_xcdv_f_t.xcdvcomp = NULL
   LET g_xcdv_f_t.xcdvld = NULL
   LET g_xcdv_f_t.format = NULL
   LET g_xcdv_f_t.char = NULL
   LET g_xcdv_f_t.dir = NULL
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #輸入開始
      INPUT BY NAME g_xcdv_f.xcdvcomp,g_xcdv_f.xcdvld,g_xcdv_f.format,g_xcdv_f.char,g_xcdv_f.dir ATTRIBUTE(WITHOUT  DEFAULTS)

         BEFORE INPUT
            CALL cl_set_combo_scc('format','8915')
 
         AFTER FIELD xcdvcomp
            IF NOT cl_null(g_xcdv_f.xcdvcomp) THEN               
                  IF NOT axct328_s02_chk_ld_comp() THEN
                     LET g_xcdv_f.xcdvcomp = g_xcdv_f_t.xcdvcomp
                     NEXT FIELD CURRENT
                  END IF
               END IF
            
             CALL axct328_s02_ref()
            
 

         AFTER FIELD xcdvld
            IF NOT cl_null(g_xcdv_f.xcdvld) THEN
               
                  IF NOT axct328_s02_chk_ld_comp() THEN
                     LET g_xcdv_f.xcdvld = g_xcdv_f_t.xcdvld
                     NEXT FIELD CURRENT
                  END IF
               
            END IF
                      
            
            
          CALL axct328_s02_ref()
 
         ON ACTION controlp INFIELD xcdvcomp
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv_f.xcdvcomp             #給予default值
           
            #帳套不為空時，法人組織開窗開帳套歸屬法人的法人組織
            IF NOT cl_null(g_xcdv_f.xcdvld) THEN
               LET g_qryparam.where = " ooef017 = (SELECT glaacomp FROM glaa_t",
                                      "  WHERE glaaent = '",g_enterprise,"' AND glaald = '",g_xcdv_f.xcdvld,"' ) AND ooef003 = 'Y' "
            END IF
            
            #mod--161013-00051#1 By shiun--(S)
#            CALL q_ooef001_8()                                #呼叫開窗
            CALL q_ooef001_2()
            #mod--161013-00051#1 By shiun--(E)

            LET g_xcdv_f.xcdvcomp = g_qryparam.return1              
 
            CALL axct328_s02_ref()
 
            DISPLAY g_xcdv_f.xcdvcomp TO xcdvcomp 
            DISPLAY g_xcdv_f.xcdvcomp_desc TO xcdvcomp_desc              #
 
            LET g_qryparam.where = "" 
   
            NEXT FIELD xcdvcomp                          #返回原欄位

 
         ON ACTION controlp INFIELD xcdvld
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdv_f.xcdvld             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            
            #法人不為空時，帳套開窗開此法人的下屬帳套
            IF NOT cl_null(g_xcdv_f.xcdvcomp) THEN
               LET g_qryparam.where = " glaacomp = '",g_xcdv_f.xcdvcomp,"'"
            END IF
            
            CALL q_authorised_ld()                                #呼叫開窗

            LET g_xcdv_f.xcdvld = g_qryparam.return1              

            CALL axct328_s02_ref()
            
            DISPLAY g_xcdv_f.xcdvld TO xcdvld
            DISPLAY g_xcdv_f.xcdvld_desc TO xcdvld_desc              #

            NEXT FIELD xcdvld                          #返回原欄位
 
 
 
         AFTER INPUT
         
            
      END INPUT
    
    
      ON ACTION browser
         CALL cl_client_browse_file() RETURNING g_xcdv_f.dir
         LET ls_str = g_xcdv_f.dir
         #抓取目录斜杆
         LET l_num =ls_str.getIndexOf(':',1)                                    #抓取：后的字符位置
         LET l_chr = ls_str.substring(l_num+1,l_num+1)                          #截取冒号后的字符 
         LET l_chr1 = ls_str.substring(ls_str.getLength(),ls_str.getLength())   #判断是否为根目录

         LET g_xcdv_f.dir = g_xcdv_f.dir

         DISPLAY BY NAME g_xcdv_f.dir

 
      ON ACTION close
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit
         LET INT_FLAG = TRUE 
         EXIT DIALOG
         
      ON ACTION produce
         ACCEPT DIALOG 

      ON ACTION off
         LET INT_FLAG = TRUE
         EXIT DIALOG   
         
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
 
   
   #畫面關閉
   CLOSE WINDOW w_axct328_s02 
   #160929-00005#6---mod---s
   #CALL axct328_s02_ins_excel(g_xcdv_f.dir) RETURNING l_success
   IF NOT INT_FLAG THEN    
      CALL axct328_s02_ins_excel(g_xcdv_f.dir) RETURNING l_success
   ELSE
      LET l_success = FALSE   
   END IF
   #160929-00005#6---mod---e
   RETURN l_success
 
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_s02_ins_excel(p_excelname)
   DEFINE p_excelname LIKE type_t.chr1000  #excel档名
DEFINE r_success   LIKE type_t.num5
DEFINE l_excelname STRING               #excel档名
DEFINE l_count     LIKE type_t.num10
DEFINE li_i        LIKE type_t.num10
DEFINE li_j        LIKE type_t.num10
DEFINE xlapp,iRes,iRow    LIKE type_t.num5
DEFINE l_xcdv      RECORD LIKE xcdv_t.*
DEFINE l_today     LIKE type_t.dat       #zll g_today 没有了
DEFINE l_n         LIKE type_t.num5

DEFINE l_xcdvcrtdt    DATETIME YEAR TO SECOND
DEFINE l_xcdv1      RECORD LIKE xcdv_t.*
DEFINE l_xcdv2      RECORD LIKE xcdv_t.*

   WHENEVER ERROR CONTINUE
   LET r_success = TRUE

   LET l_today= cl_get_current()
   LET l_count = LENGTH(p_excelname CLIPPED)
   #转换路径分隔符
   FOR li_i = 1 TO l_count
       IF p_excelname[li_i,li_i] ="/" THEN
          LET l_excelname = l_excelname CLIPPED,'\\'
       ELSE
          LET l_excelname = l_excelname CLIPPED,p_excelname[li_i,li_i]
       END IF
   END FOR

   CALL ui.interface.frontCall('WinCOM','CreateInstance',
                               ['Excel.Application'],[xlApp])
   IF xlApp <> -1 THEN
      CALL ui.interface.frontCall('WinCOM','CallMethod',
                                  [xlApp,'WorkBooks.Open',l_excelname],[iRes])
      IF iRes <> -1 THEN
         CALL ui.interface.frontCall('WinCOM','GetProperty',
              [xlApp,'ActiveSheet.UsedRange.Rows.Count'],[iRow])
         IF iRow > 1 THEN
            FOR li_i = 2 TO iRow
                INITIALIZE l_xcdv.* TO NULL
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',1).Value'],[l_xcdv.xcdvent])   
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',2).Value'],[l_xcdv.xcdvld])    
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',3).Value'],[l_xcdv.xcdvcomp]) 
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',4).Value'],[l_xcdv.xcdv001])  
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',5).Value'],[l_xcdv.xcdv002])
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',6).Value'],[l_xcdv.xcdv003]) 
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',7).Value'],[l_xcdv.xcdv004])   
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',8).Value'],[l_xcdv.xcdv005])        
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',9).Value'],[l_xcdv.xcdv006])   
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',10).Value'],[l_xcdv.xcdv007])   
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',11).Value'],[l_xcdv.xcdv008])                   
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',12).Value'],[l_xcdv.xcdv009])                 
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',13).Value'],[l_xcdv.xcdv010])                  
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',14).Value'],[l_xcdv.xcdv011])
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',15).Value'],[l_xcdv.xcdv012])
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',16).Value'],[l_xcdv.xcdv101])   
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',17).Value'],[l_xcdv.xcdv102])
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',18).Value'],[l_xcdv1.xcdv102])
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',19).Value'],[l_xcdv2.xcdv102])
                
                               
                
                #如果excel中存在不在畫面上的法人或者帳套CONTINUE
                IF l_xcdv.xcdvld != g_xcdv_f.xcdvld OR l_xcdv.xcdvcomp != g_xcdv_f.xcdvcomp THEN
                  #CONTINUE FOR
                  #匯出畫面中帳套不一致的，提示檢核訊息，不予新增
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = 'axc-00514'
                   LET g_errparam.extend = ''
                   LET g_errparam.popup = TRUE
                   CALL cl_err()

                   LET r_success = FALSE
                   EXIT FOR
                END IF
                

                #赋默认值
                LET l_xcdv.xcdv001 = '1'  #本位幣               
                
                

                IF l_xcdv.xcdv008 IS NULL THEN  #key值批号可录入为空
                   LET l_xcdv.xcdv008 = ' '
                END IF
                IF l_xcdv.xcdv007 IS NULL THEN  #key值特性可录入为空
                   LET l_xcdv.xcdv007 = ' '
                END IF 
                IF l_xcdv.xcdv002 IS NULL THEN 
                   LET l_xcdv.xcdv002 = ' '
                END IF
                IF l_xcdv.xcdv010 IS NULL THEN  
                   LET l_xcdv.xcdv010 = ' '
                END IF
                IF l_xcdv.xcdv011 IS NULL THEN  
                   LET l_xcdv.xcdv011 = ' '
                END IF                
                #本位幣一   
                INSERT INTO xcdv_t VALUES l_xcdv.*
                IF SQLCA.sqlcode THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = SQLCA.sqlcode
                   LET g_errparam.extend = 'ins xcdv'
                   LET g_errparam.popup = FALSE
                   CALL cl_err()

                   LET r_success = FALSE
                   EXIT FOR
                END IF

                SELECT glaa015,glaa019
                  INTO g_glaa015,g_glaa019
                  FROM glaa_t
                 WHERE glaaent = g_enterprise
                   AND glaald = l_xcdv.xcdvld
                #本位幣二
                IF g_glaa015 = 'Y' THEN                   
                   IF cl_null(l_xcdv1.xcdv102)  THEN LET l_xcdv1.xcdv102  = 0 END IF 
                   
                  
                   INSERT INTO xcdv_t(xcdvent,xcdvld,xcdvcomp,xcdv001,xcdv004,xcdv005,xcdv003,xcdv006,xcdv007,
                                      xcdv008,xcdv009,xcdv010,xcdv011,xcdv002,xcdv012,xcdv101,xcdv102) 
                               VALUES(l_xcdv.xcdvent,l_xcdv.xcdvld,l_xcdv.xcdvcomp,'2',l_xcdv.xcdv004,l_xcdv.xcdv005,l_xcdv.xcdv003,l_xcdv.xcdv006,l_xcdv.xcdv007,
                                      l_xcdv.xcdv008,l_xcdv.xcdv009,l_xcdv.xcdv010,l_xcdv.xcdv011,l_xcdv.xcdv002,l_xcdv.xcdv012,l_xcdv.xcdv101,l_xcdv1.xcdv102) 
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = 'ins xcdv 2'
                     LET g_errparam.popup = FALSE
                     CALL cl_err()

                     LET r_success = FALSE
                     EXIT FOR
                  END IF                                      
                END IF
                #本位幣三
                IF g_glaa019 = 'Y' THEN 
                                  
                   IF cl_null(l_xcdv2.xcdv102)  THEN LET l_xcdv2.xcdv102  = 0 END IF 
                   
                  
                   INSERT INTO xcdv_t(xcdvent,xcdvld,xcdvcomp,xcdv001,xcdv004,xcdv005,xcdv003,xcdv006,xcdv007,
                                      xcdv008,xcdv009,xcdv010,xcdv011,xcdv002,xcdv012,xcdv101,xcdv102) 
                               VALUES(l_xcdv.xcdvent,l_xcdv.xcdvld,l_xcdv.xcdvcomp,'3',l_xcdv.xcdv004,l_xcdv.xcdv005,l_xcdv.xcdv003,l_xcdv.xcdv006,l_xcdv.xcdv007,
                                      l_xcdv.xcdv008,l_xcdv.xcdv009,l_xcdv.xcdv010,l_xcdv.xcdv011,l_xcdv.xcdv002,l_xcdv.xcdv012,l_xcdv.xcdv101,l_xcdv2.xcdv102) 
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = 'ins xcdv 3'
                     LET g_errparam.popup = FALSE
                     CALL cl_err()

                     LET r_success = FALSE
                     EXIT FOR
                  END IF                  
                END IF
            END FOR
         END IF
      ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axc-00387'
         LET g_errparam.extend = ''   #NO FILE
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
      END IF
   ELSE
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axc-00387'
      LET g_errparam.extend = ''  #NO EXCEL
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
   END IF

   CALL ui.interface.frontCall('WinCOM','CallMethod',[xlApp,'Quit'],[iRes])
   CALL ui.interface.frontCall('WinCOM','ReleaseInstance',[xlApp],[iRes])

   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_add_span(p_str)
   DEFINE p_str    STRING
DEFINE l_str    STRING


   LET p_str = p_str.trimRight()

   #若字串有空白就必須加上 <span> 屬性，並將空白轉換為 &nbsp;
   IF p_str.getIndexOf(" ",1) > 0 THEN
      LET g_bufstr = base.StringBuffer.create()              
      CALL g_bufstr.clear()
      CALL g_bufstr.append(p_str)
      CALL g_bufstr.replace(" ","&nbsp;",0)
      CALL g_bufstr.replace("<","&lt;",0)    
      LET l_str = g_bufstr.tostring()
      LET l_str = "<span style='mso-spacerun:yes'>", l_str, "</span>"
   ELSE
      LET g_bufstr = base.StringBuffer.create()
      CALL g_bufstr.clear()
      CALL g_bufstr.append(p_str)
      CALL g_bufstr.replace("<","&lt;",0)
      LET l_str = g_bufstr.tostring()
      #LET l_str = p_str    

   END IF

   RETURN l_str
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_get_boday(p_h,p_cnt_header,s,s_combo_arr,p_seq)
   DEFINE  s,n1_text                          om.DomNode,
         n1                                 om.NodeList,
         i,m,k,cnt_body,res,p               LIKE type_t.num10,
         l_hidden_cnt,n,l_last_hidden       LIKE type_t.num10,
         p_h,p_cnt_header,arr_len           LIKE type_t.num10,
         p_null                             LIKE type_t.num10,
         cells,values,j,l,sheet             STRING,
         l_bufstr                           base.StringBuffer

 DEFINE  s_combo_arr    DYNAMIC ARRAY OF RECORD
          sheet         LIKE type_t.num10,       #sheet
          seq           LIKE type_t.num10,       #項次
          name          LIKE type_t.chr2,        #代號
          text          LIKE type_t.chr50        #說明
                        END RECORD
 DEFINE  p_seq          DYNAMIC ARRAY OF LIKE type_t.num10
 DEFINE  l_item         LIKE type_t.num10

 DEFINE  unix_path      STRING,
         window_path    STRING
 DEFINE  l_dom_doc      om.DomDocument,
         r,n_node       om.DomNode
 DEFINE  l_status       LIKE type_t.num5

   LET l_hidden_cnt = 0
   LET l = p_h
   LET sheet=g_sheet CLIPPED,l
   LET l_bufstr = base.StringBuffer.create()
   LET l = 0
   LET i = 0
   LET m = 0

   CALL l_channel.write("</tr></table></body></html>")
   CALL l_channel.close()
  #CALL cl_prt_convert(xls_name)

   LET unix_path = os.Path.join(FGL_GETENV("TEMPDIR"),xls_name CLIPPED)

  #LET window_path = "c:\\TT\\",xls_name CLIPPED
   LET window_path = g_xcdv_s.dir,"\\",xls_name CLIPPED
   LET status = cl_client_download_file(unix_path, window_path)
   IF status then
      DISPLAY "Download OK!!"
   ELSE
      DISPLAY "Download fail!!"
   END IF

   LET status = cl_client_open_prog("excel",window_path)
   IF status then
      DISPLAY "Open OK!!"
   ELSE
      DISPLAY "Open fail!!"
   END IF
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_s02_ref()
   IF g_xcdv_f.xcdvcomp IS NULL THEN     
      SELECT glaacomp
        INTO g_xcdv_f.xcdvcomp
        FROM glaa_t  
       WHERE glaaent = g_enterprise 
         AND glaald = g_xcdv_f.xcdvld
      DISPLAY BY NAME g_xcdv_f.xcdvcomp   
   ELSE
      IF g_xcdv_f.xcdvld IS NULL THEN
          SELECT glaald INTO g_xcdv_f.xcdvld
          FROM glaa_t
          WHERE glaaent  = g_enterprise
            AND glaacomp = g_xcdv_f.xcdvcomp
            AND glaa014 = 'Y'
         DISPLAY BY NAME g_xcdv_f.xcdvld
      END IF
   END IF
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcdv_f.xcdvcomp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcdv_f.xcdvcomp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcdv_f.xcdvcomp_desc   
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcdv_f.xcdvld
   CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcdv_f.xcdvld_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcdv_f.xcdvld_desc   
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_s02_chk_ld_comp()
   DEFINE r_success        LIKE type_t.num5
   DEFINE l_success        LIKE type_t.num5
   
   LET r_success = TRUE

#只检查法人
   IF g_xcdv_f.xcdvld IS NULL AND g_xcdv_f.xcdvcomp IS NOT NULL THEN   
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
      
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_xcdv_f.xcdvcomp
         
      #呼叫檢查存在並帶值的library
      IF cl_chk_exist("v_ooef001_1") THEN
         #檢查成功時後續處理
         #LET  = g_chkparam.return1
         #DISPLAY BY NAME 
      ELSE
         #檢查失敗時後續處理
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF

#只检查账套
   IF g_xcdv_f.xcdvld IS NOT NULL AND g_xcdv_f.xcdvcomp IS NULL THEN
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
      
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_xcdv_f.xcdvld
      #160318-00025#12--add--str
      LET g_errshow = TRUE 
      LET g_chkparam.err_str[1] = "agl-00051:sub-01302|agli010|",cl_get_progname("agli010",g_lang,"2"),"|:EXEPROGagli010"
      #160318-00025#12--add--end   
      #呼叫檢查存在並帶值的library
      IF cl_chk_exist("v_glaald") THEN
         #檢查成功時後續處理
         #LET  = g_chkparam.return1
         #DISPLAY BY NAME 
         CALL s_ld_chk_authorization(g_user,g_xcdv_f.xcdvld) RETURNING l_success
         IF l_success = FALSE THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'axr-00022'
            LET g_errparam.extend = g_xcdv_f.xcdvld
            LET g_errparam.popup = TRUE
            CALL cl_err()
            LET r_success = FALSE
            RETURN r_success
         END IF 
      ELSE
         #檢查失敗時後續處理
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF

#法人账套都存在，检查他们的关系
   IF NOT s_ld_chk_comp(g_xcdv_f.xcdvld,g_xcdv_f.xcdvcomp) THEN  #v_glaald_5 
      LET g_xcdv_f.xcdvcomp = g_xcdv_f_t.xcdvcomp
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_chk_year_period()
   DEFINE r_success        LIKE type_t.num5
   DEFINE l_bdate          LIKE type_t.dat    #起始年度+期別對應的起始截止日期
   DEFINE l_edate          LIKE type_t.dat
   DEFINE l_glaa003        LIKE glaa_t.glaa003
   DEFINE l_date  DATE
   DEFINE l_cnt            LIKE type_t.num5
   LET r_success = TRUE 
   #抓出会计周期参考表号  glaa003
   SELECT glaa003 INTO l_glaa003
        FROM glaa_t
       WHERE glaaent  = g_enterprise
         AND glaacomp = g_xcdv_m.xcdvcomp
         AND glaa014  = 'Y'   
   IF g_xcdv_m.xcdv004 IS NOT NULL  THEN
      IF NOT s_fin_date_chk_year(g_xcdv_m.xcdv004) THEN  
         LET r_success = FALSE
         RETURN r_success      
      END IF
      SELECT COUNT(*) INTO l_cnt FROM glav_t
      WHERE glavent = g_enterprise
        AND glav001 = l_glaa003
        AND glav002 = g_xcdv_m.xcdv004
        AND glavstus = 'Y' 
      IF l_cnt = 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axc-00581'
         LET g_errparam.extend = g_xcdv_m.xcdv004
         LET g_errparam.popup = TRUE
         CALL cl_err() 
         LET r_success = FALSE
         RETURN r_success 
      END IF
   END IF
   

   IF g_xcdv_m.xcdv004 IS NOT NULL AND g_xcdv_m.xcdv005 IS NOT NULL THEN
      IF NOT s_fin_date_chk_period(l_glaa003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005) THEN
         LET r_success = FALSE
         RETURN r_success      
      END IF
      CALL s_fin_date_get_period_range(l_glaa003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005) RETURNING l_bdate,l_edate
      
      IF NOT s_date_chk_close(l_edate,'2') THEN
         LET r_success = FALSE
         RETURN r_success      
      END IF
   END IF
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_insert_default()
DEFINE l_sql STRING
IF NOT cl_null(g_xcdv_d[l_ac].xcdv006) THEN
   IF cl_null(g_xcdv_d[l_ac].xcdv002) THEN LET g_xcdv_d[l_ac].xcdv002 = ' ' END IF
   LET l_sql = " SELECT xccv002,xccv006,xccv007,xccv008,xccv009,xccv010,xccv011,xccv101 ",
   
               "   FROM xccv_t ",
               "  WHERE xccvent = '",g_enterprise,"' AND xccvld = '",g_xcdv_m.xcdvld,"'",
               "    AND xccv003 = '",g_xcdv_m.xcdv003,"' AND xccv004 = '",g_xcdv_m.xcdv004,"'",
               "    AND xccv005 = '",g_xcdv_m.xcdv005,"' AND xccv001 = '1'"
   LET l_sql = l_sql,"    AND xccv006 = '",g_xcdv_d[l_ac].xcdv006,"'"
   IF NOT cl_null(g_xcdv_d[l_ac].xcdv002) THEN
      LET l_sql = l_sql,"    AND xccv002 = '",g_xcdv_d[l_ac].xcdv002,"'"
   END IF
   IF NOT cl_null(g_xcdv_d[l_ac].xcdv007) THEN
      LET l_sql = l_sql,"    AND xccv007 = '",g_xcdv_d[l_ac].xcdv007,"'"
   END IF
   IF NOT cl_null(g_xcdv_d[l_ac].xcdv008) THEN
      LET l_sql = l_sql,"    AND xccv008 = '",g_xcdv_d[l_ac].xcdv008,"'"
   END IF
   IF NOT cl_null(g_xcdv_d[l_ac].xcdv009) THEN
      LET l_sql = l_sql,"    AND xccv009 = '",g_xcdv_d[l_ac].xcdv009,"'"
   END IF
   IF NOT cl_null(g_xcdv_d[l_ac].xcdv010) THEN
      LET l_sql = l_sql,"    AND xccv010 = '",g_xcdv_d[l_ac].xcdv010,"'"
   END IF
   IF NOT cl_null(g_xcdv_d[l_ac].xcdv011) THEN
      LET l_sql = l_sql,"    AND xccv011 = '",g_xcdv_d[l_ac].xcdv011,"'"
   END IF

   DECLARE axct328_xccv_cs CURSOR FROM l_sql
   EXECUTE axct328_xccv_cs INTO g_xcdv_d[l_ac].xcdv002,g_xcdv_d[l_ac].xcdv006,g_xcdv_d[l_ac].xcdv007,g_xcdv_d[l_ac].xcdv008,
                                g_xcdv_d[l_ac].xcdv009,g_xcdv_d[l_ac].xcdv010,g_xcdv_d[l_ac].xcdv011,g_xcdv_d[l_ac].xcdv101 
   IF cl_null(g_xcdv_d[l_ac].xcdv002) THEN LET g_xcdv_d[l_ac].xcdv002 = ' ' END IF
   DISPLAY BY NAME  g_xcdv_d[l_ac].xcdv006,g_xcdv_d[l_ac].xcdv007,g_xcdv_d[l_ac].xcdv008,g_xcdv_d[l_ac].xcdv009,
          g_xcdv_d[l_ac].xcdv010,g_xcdv_d[l_ac].xcdv011,g_xcdv_d[l_ac].xcdv101  
END IF
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_detail_ref(p_xcdv002,p_xcdv007,p_xcdv009,p_xcdv012)
DEFINE p_xcdv002 LIKE xcdv_t.xcdv002
DEFINE p_xcdv007 LIKE xcdv_t.xcdv007 
DEFINE p_xcdv009 LIKE xcdv_t.xcdv009 
DEFINE p_xcdv012 LIKE xcdv_t.xcdv012

DEFINE l_xcdv002_desc LIKE type_t.chr1000
DEFINE l_xcdv007_desc LIKE type_t.chr1000
DEFINE l_xcdv009_desc LIKE type_t.chr1000
DEFINE l_xcdv009_desc_desc LIKE type_t.chr1000
DEFINE l_xcdv012_desc LIKE type_t.chr1000
#成本域
   INITIALIZE g_ref_fields TO NULL                                                                                                                                                                                                                                                                                                
   LET g_ref_fields[1] = g_xcdv_m.xcdvcomp                                                                                                                                                 
   LET g_ref_fields[2] = p_xcdv002                                                                                                                                            
   CALL ap_ref_array2(g_ref_fields,"SELECT xcbfl003 FROM xcbfl_t WHERE xcbflent='"||g_enterprise||"' AND xcbflcomp=? AND xcbfl001=? AND xcbfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET l_xcdv002_desc = '', g_rtn_fields[1] , ''
#品名規格
   INITIALIZE g_ref_fields TO NULL                                                                                                                                                                                                                                                                                     
   LET g_ref_fields[1] = p_xcdv009                                                                                                                           
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET l_xcdv009_desc = '', g_rtn_fields[1] , '' 
   LET l_xcdv009_desc_desc = '', g_rtn_fields[2] , '' 
#作業編號
   INITIALIZE g_ref_fields TO NULL                                                                                                                                                                                                                                                                                     
   LET g_ref_fields[1] = p_xcdv007                                                                                                                          
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET l_xcdv007_desc = '', g_rtn_fields[1] , '' 
   
#成本次要素
   INITIALIZE g_ref_fields TO NULL                                                                                                                                                                                                                                                                                     
   LET g_ref_fields[1] = p_xcdv012                                                                                                                         
   CALL ap_ref_array2(g_ref_fields,"SELECT xcaul003 FROM xcaul_t WHERE xcaulent='"||g_enterprise||"' AND xcaul001=? AND xcaul002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET l_xcdv012_desc = '', g_rtn_fields[1] , '' 
   
   RETURN l_xcdv002_desc,l_xcdv009_desc,l_xcdv009_desc_desc,l_xcdv007_desc,l_xcdv012_desc 
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_sum_chk()
DEFINE l_xcdv001 LIKE xcdv_t.xcdv001
DEFINE l_xcdv002 LIKE xcdv_t.xcdv002
DEFINE l_xcdv006 LIKE xcdv_t.xcdv006
DEFINE l_xcdv007 LIKE xcdv_t.xcdv007
DEFINE l_xcdv008 LIKE xcdv_t.xcdv008
DEFINE l_xcdv009 LIKE xcdv_t.xcdv009
DEFINE l_xcdv010 LIKE xcdv_t.xcdv010
DEFINE l_xcdv011 LIKE xcdv_t.xcdv011
DEFINE l_xcdv001_t LIKE xcdv_t.xcdv001
DEFINE l_xcdv002_t LIKE xcdv_t.xcdv002
DEFINE l_xcdv006_t LIKE xcdv_t.xcdv006
DEFINE l_xcdv007_t LIKE xcdv_t.xcdv007
DEFINE l_xcdv008_t LIKE xcdv_t.xcdv008
DEFINE l_xcdv009_t LIKE xcdv_t.xcdv009
DEFINE l_xcdv010_t LIKE xcdv_t.xcdv010
DEFINE l_xcdv011_t LIKE xcdv_t.xcdv011
DEFINE l_str     STRING
DEFINE l_success LIKE type_t.chr1
DEFINE l_sumxcdv LIKE xcdv_t.xcdv102
DEFINE l_sumxccv LIKE xcdv_t.xcdv102
   LET l_success = 'Y'    

  CALL cl_err_collect_init()

  LET g_sql_sum = " SELECT xcdv001,xcdv002,xcdv006,xcdv007,xcdv008,xcdv009,xcdv010,xcdv011", 
                      " FROM xcdv_t",
                      " WHERE xcdvent= ? AND xcdvld=? AND xcdv003=? AND xcdv004=? AND xcdv005=? "   
     
   LET g_sql_sum = g_sql_sum CLIPPED,
                      "  ORDER BY xcdv001,xcdv006,xcdv007,xcdv008,xcdv009"
   
   DECLARE axct328_sum_cs CURSOR FROM g_sql_sum  

  LET g_coll_title[1] = cl_getmsg("axc-00547",g_lang)# "賬套本位幣順序"
  LET g_coll_title[2] = cl_getmsg("axc-00548",g_lang)# "成本域"       
#  LET g_coll_title[3] = cl_getmsg("axc-00601",g_lang)# "工單編號/在制代號"     #160318-00005#47  mark      
  LET g_coll_title[3] = cl_getmsg("aap-00153",g_lang)# "工單編號/在制代號"      #160318-00005#47  add
  LET g_coll_title[4] = cl_getmsg("axc-00602",g_lang)# "作業編號"         
  LET g_coll_title[5] = cl_getmsg("axc-00603",g_lang)# "製程式" 
  LET g_coll_title[6] = cl_getmsg("axc-00552",g_lang)# "料號" 
  LET g_coll_title[7] = cl_getmsg("axc-00553",g_lang)# "特性" 
  LET g_coll_title[8] = cl_getmsg("axc-00554",g_lang)# "批號" 
  

   FOREACH axct328_sum_cs USING g_enterprise,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005
          INTO l_xcdv001,l_xcdv002,l_xcdv006,l_xcdv007,l_xcdv008,l_xcdv009,l_xcdv010,l_xcdv011  
      IF  (l_xcdv001_t = l_xcdv001) AND (l_xcdv002_t = l_xcdv002) AND (l_xcdv006_t = l_xcdv006) AND (l_xcdv007_t = l_xcdv007) 
          AND (l_xcdv008_t = l_xcdv008) AND (l_xcdv009_t = l_xcdv009) AND (l_xcdv010_t = l_xcdv010) AND (l_xcdv011_t = l_xcdv011) THEN
          CONTINUE FOREACH
      END IF             

      IF cl_null(l_xcdv002) THEN
         LET l_xcdv002 = ' '
      END IF
      
      LET l_sumxcdv= 0
      LET l_sumxccv= 0
      SELECT SUM(xcdv102) INTO l_sumxcdv FROM xcdv_t 
       WHERE xcdvent = g_enterprise AND xcdvld = g_xcdv_m.xcdvld
         AND xcdv003 = g_xcdv_m.xcdv003
         AND xcdv004 = g_xcdv_m.xcdv004
         AND xcdv005 = g_xcdv_m.xcdv005
         
         AND xcdv001 = l_xcdv001
         AND xcdv002 = l_xcdv002
         AND xcdv006 = l_xcdv006         
         AND xcdv007 = l_xcdv007
         AND xcdv008 = l_xcdv008
         AND xcdv009 = l_xcdv009
         AND xcdv010 = l_xcdv010
         AND xcdv011 = l_xcdv011
          
         
      SELECT xccv102 INTO l_sumxccv FROM xccv_t 
      WHERE xccvent = g_enterprise AND xccvld = g_xcdv_m.xcdvld
        AND xccv003 = g_xcdv_m.xcdv003
        AND xccv004 = g_xcdv_m.xcdv004
        AND xccv005 = g_xcdv_m.xcdv005
          
        AND xccv001 = l_xcdv001
        AND xccv002 = l_xcdv002 
        AND xccv006 = l_xcdv006         
        AND xccv007 = l_xcdv007
        AND xccv008 = l_xcdv008
        AND xccv009 = l_xcdv009
        AND xccv010 = l_xcdv010
        AND xccv011 = l_xcdv011
      
      IF cl_null(l_sumxcdv) THEN
         LET l_sumxcdv = 0
      END IF
      IF cl_null(l_sumxccv) THEN
         LET l_sumxccv = 0
      END IF
      IF l_sumxcdv <> l_sumxccv THEN             

        INITIALIZE g_errparam TO NULL        
        LET g_errparam.code   = 'axc-00600'       
        LET g_errparam.extend = ''
        LET g_errparam.popup = TRUE
        LET g_errparam.coll_vals[1] = l_xcdv001
        LET g_errparam.coll_vals[2] = l_xcdv002
        LET g_errparam.coll_vals[3] = l_xcdv006
        LET g_errparam.coll_vals[4] = l_xcdv007
        LET g_errparam.coll_vals[5] = l_xcdv008
        LET g_errparam.coll_vals[6] = l_xcdv009
        LET g_errparam.coll_vals[7] = l_xcdv010
        LET g_errparam.coll_vals[8] = l_xcdv011
            
        LET g_errparam.sqlerr = 0
        CALL cl_err()

         LET l_success = 'N'
      END IF  
      LET l_xcdv001_t = l_xcdv001
      LET l_xcdv002_t = l_xcdv002
      LET l_xcdv006_t = l_xcdv006
      LET l_xcdv007_t = l_xcdv007
      LET l_xcdv008_t = l_xcdv008
      LET l_xcdv009_t = l_xcdv009 
      LET l_xcdv010_t = l_xcdv010 
      LET l_xcdv011_t = l_xcdv011 
   END FOREACH
   CALL cl_err_collect_show()
   
   RETURN l_success
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct328_xcdv012_chk()
DEFINE l_success LIKE type_t.chr1
DEFINE l_xcdv012 LIKE xcdv_t.xcdv012

   LET l_success = 'Y' 
LET g_sql = " SELECT xcdv012", 
                      " FROM xcdv_t",
                      " WHERE xcdvent= ? AND xcdvld=? AND xcdv003=? AND xcdv004=? AND xcdv005=? AND xcdv001 = ? "   
    
   LET g_sql = g_sql CLIPPED,
                      "  ORDER BY xcdv001,xcdv006,xcdv007,xcdv008,xcdv009"
   
   DECLARE axct328_xcdv012_cs CURSOR FROM g_sql    
FOREACH axct328_xcdv012_cs USING g_enterprise,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,'1'
          INTO l_xcdv012
    IF cl_null(l_xcdv012) THEN
       LET l_success = 'N'
       INITIALIZE g_errparam TO NULL 
       LET g_errparam.extend = "" 
       LET g_errparam.code   = "axc-00556" 
       LET g_errparam.popup  = TRUE 
       CALL cl_err()
       EXIT FOREACH
    END IF
END FOREACH
IF g_glaa015  = 'Y' THEN
   FOREACH axct328_xcdv012_cs USING g_enterprise,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,'2'
             INTO l_xcdv012
       IF cl_null(l_xcdv012) THEN
          LET l_success = 'N'
          INITIALIZE g_errparam TO NULL 
          LET g_errparam.extend = "" 
          LET g_errparam.code   = "axc-00556" 
          LET g_errparam.popup  = TRUE 
          CALL cl_err()
          EXIT FOREACH
       END IF
   END FOREACH
END IF
IF g_glaa019  = 'Y' THEN
   FOREACH axct328_xcdv012_cs USING g_enterprise,g_xcdv_m.xcdvld,g_xcdv_m.xcdv003,g_xcdv_m.xcdv004,g_xcdv_m.xcdv005,'3'
             INTO l_xcdv012
       IF cl_null(l_xcdv012) THEN
          LET l_success = 'N'
          INITIALIZE g_errparam TO NULL 
          LET g_errparam.extend = "" 
          LET g_errparam.code   = "axc-00556" 
          LET g_errparam.popup  = TRUE 
          CALL cl_err()
          EXIT FOREACH
       END IF
   END FOREACH
END IF
RETURN l_success
END FUNCTION

 
{</section>}
 
