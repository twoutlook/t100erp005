#該程式未解開Section, 採用最新樣板產出!
{<section id="axcp162.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0013(2015-11-18 09:59:31), PR版次:0013(2017-01-17 11:01:54)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000067
#+ Filename...: axcp162
#+ Description: 按期計算在製成套發料套數作業
#+ Creator....: 00537(2015-02-03 20:22:36)
#+ Modifier...: 07025 -SD/PR- 04441
 
{</section>}
 
{<section id="axcp162.global" >}
#應用 p02 樣板自動產生(Version:22)
#add-point:填寫註解說明 name="global.memo"
#Modify.........: No.151116-00006#1  15/11/30 By catmoon 新增「2.按成套計算主件投入數量」選項，依據「本期成套發料單-成套退料單的應發套數」計算
#Modify.........: No.160330-00001#1  16/03/31 By catmoon 調整工單倒扣料計算規則,若工單沒有發料套數時,不需計算在制數量,若有發料套數時,在製數量設定為發料套數
#Modify.........: No.160318-00025#46 16/04/28 By 07959   將重複內容的錯誤訊息置換為公用錯誤訊息(r.v)
#Modify.........: No.160517-00040#1  16/05/18 By xianghui 效能优化
#160727-00019#22  2016/08/10 By 08742     系统中定义的临时表名称超过15码在执行时会出错,所以需要将系统中定义的临时表长度超过15码的全部改掉	 	
#                                           Mod  s_voucher_xc_group--> vouc_grp_tmp01
#160810-00035#1   2016/08/12 By 02040 調整成本計算工單投入套數方式選項預設值改為預設2
#161007-00005#1   2016/10/07 By 02040 日期區間抓取應包含"等於"
#161004-00022#4   2016/10/07 By 02040 發料套數在計算時，要加上扣帳日期為當月的才抓取  
#160929-00032#1   2016/10/11 By 02295 在  #先找出成本关账日期所在年期  时应用主账套，即在取得 l_ld 的SQL中加条件：glaa014=Y
#161004-00022#3   2016/10/12 By 02040 如整張工單都為倒扣料，即使是選用「按工單成套發料計算數量」，也要強制用「實際成套計算組件投入數量」去計算
#161019-00033#1   2016/10/20 By 02295 应检查计算的年度+期别在成本关账日期之后（S-FIN-6012）
#161027-00046#1   2016/10/31 By 02040 效能優化；因客戶家工單數量有達到18萬筆，故將num5調整為num10
#161004-00022#8   2016/10/31 By 02040 針對161004-00022#3再做調整，如為整張倒扣料，不論那種計算方式，直接以入庫數當做本期末的套数投入數
#170104-00021#1   2017/01/12 By Whitney add 排程
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"
IMPORT FGL lib_cl_schedule  #170104-00021#1
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc" 
#add-point:增加匯入變數檔 name="global.inc"
#170104-00021#1-s
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE g_chk_jobid          LIKE type_t.num5
END GLOBALS
#170104-00021#1-e
#end add-point
 
#模組變數(Module Variables)
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10              
DEFINE l_ac_d               LIKE type_t.num10             #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num10             #目前所在頁數
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num10
 
TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable) name="global.parameter"
        sfaasite         LIKE sfaa_t.sfaasite,
       #sfaasite_desc    LIKE ooefl_t.ooefl003,  #170104-00021#1
        yy               LIKE type_t.num5,
        mm               LIKE type_t.num5,
        countradio       LIKE type_t.num5,       #151116-00006#1 add
   #end add-point
        wc               STRING
                     END RECORD
 
TYPE type_g_detail_d RECORD
#add-point:自定義模組變數(Module Variable)  #注意要在add-point內寫入END RECORD name="global.variable"
           sel                LIKE type_t.chr1,
           xcbgcomp           LIKE xcbg_t.xcbgcomp,
           xcbg001            LIKE xcbg_t.xcbg001,
           xcbg002            LIKE xcbg_t.xcbg002,
           xcbg003            LIKE xcbg_t.xcbg003,
           xcbg004            LIKE xcbg_t.xcbg004,
           xcbg005            LIKE xcbg_t.xcbg005,
           xcbg006            LIKE xcbg_t.xcbg006
           END RECORD
#170104-00021#1-s
#DEFINE g_input        type_parameter
DEFINE g_input RECORD
        sfaasite         LIKE sfaa_t.sfaasite,
        sfaasite_desc    LIKE ooefl_t.ooefl003,
        yy               LIKE type_t.num5,
        mm               LIKE type_t.num5,
        countradio       LIKE type_t.num5,
        wc               STRING
                     END RECORD
DEFINE g_jobid           STRING
#170104-00021#1-e
DEFINE g_rec_b        LIKE type_t.num5 
DEFINE g_glaa121      LIKE glaa_t.glaa121
DEFINE g_success      LIKE type_t.num5
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
DEFINE g_detail_cnt         LIKE type_t.num10              #單身 總筆數(所有資料)
DEFINE g_detail_d  DYNAMIC ARRAY OF type_g_detail_d
 
#add-point:傳入參數說明 name="global.argv"
 
#end add-point
 
{</section>}
 
{<section id="axcp162.main" >}
#+ 作業開始 
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   DEFINE ls_js  STRING
   #add-point:main段define name="main.define"
   DEFINE l_success    LIKE type_t.num5
   DEFINE lc_param     type_parameter    #170104-00021#1
   #end add-point   
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義 name="main.before_ap_init"
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js name="main.background"
   IF NOT cl_null(g_argv[1])  THEN
      LET g_bgjob = "Y"
   END IF
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      #170104-00021#1-s
      #LET g_input.sfaasite   = g_argv[1]
      #LET g_input.yy         = g_argv[2]
      #LET g_input.mm         = g_argv[3]
      #LET g_input.countradio = g_argv[4]     #151116-00006#1 add
      ##LET g_input.wc         = g_argv[4]     #151116-00006#1 mark
      #LET g_input.wc         = g_argv[5]     #151116-00006#1 add
      #IF cl_null(g_input.wc) THEN LET g_input.wc = ' 1=1' END IF
      LET ls_js = g_argv[01]
      CALL util.JSON.parse(ls_js,lc_param)
      LET g_input.sfaasite   = lc_param.sfaasite
      LET g_input.yy         = lc_param.yy
      LET g_input.mm         = lc_param.mm
      LET g_input.countradio = lc_param.countradio
      LET g_input.wc         = lc_param.wc
      IF cl_null(g_input.wc) THEN LET g_input.wc = ' 1=1' END IF
      #170104-00021#1-e
      CALL axcp162_query()
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axcp162 WITH FORM cl_ap_formpath("axc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axcp162_init()   
 
      #進入選單 Menu (="N")
      CALL axcp162_ui_dialog() 
 
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_axcp162
   END IF 
   
   #add-point:作業離開前 name="main.exit"
   DROP TABLE vouc_grp_tmp01;          #160727-00019#22 Mod  s_voucher_xc_group--> vouc_grp_tmp01
   DROP TABLE axcp162_tmp;
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="axcp162.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION axcp162_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point   
   #add-point:init段define name="init.define"
   DEFINE l_success        LIKE type_t.num5
   #end add-point   
   
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
 
   #add-point:畫面資料初始化 name="init.init"
   #LET g_input.countradio = 1    #151116-00006#1 add #160810-00035#1 mark
   LET g_input.countradio = 2     #160810-00035#1 add
   #170104-00021#1-s
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #170104-00021#1-e
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axcp162.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION axcp162_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point 
   DEFINE li_idx   LIKE type_t.num10
   #add-point:ui_dialog段define name="init.init"
   #170104-00021#1-s
   DEFINE l_dialog ui.DIALOG
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter
   #170104-00021#1-e
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_date        LIKE type_t.dat
   DEFINE l_ld          LIKE glaa_t.glaald
   DEFINE l_yy          LIKE glav_t.glav002
   DEFINE l_ss          LIKE glav_t.glav005
   DEFINE l_mm          LIKE glav_t.glav006
   DEFINE l_ww          LIKE glav_t.glav007   
   DEFINE l_countradio  LIKE type_t.num5    #151116-00006#1 add
   #end add-point 
   
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   LET g_detail_cnt = g_detail_d.getLength()
   #add-point:ui_dialog段before dialog name="ui_dialog.before_dialog"
   CALL axcp162_default()
   #end add-point
   
   WHILE TRUE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_detail_d.clear()
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axcp162_init()
      END IF
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:ui_dialog段construct name="ui_dialog.more_construct"
         
         #end add-point
         #add-point:ui_dialog段input name="ui_dialog.more_input"
         #INPUT BY NAME g_input.sfaasite,g_input.yy,g_input.mm                    #151116-00006#1 mark
         INPUT BY NAME g_input.sfaasite,g_input.yy,g_input.mm,g_input.countradio  #151116-00006#1 add
               ATTRIBUTE(WITHOUT DEFAULTS)
               
            BEFORE INPUT
               LET l_countradio = g_input.countradio  #151116-00006#1 add
               
               
            AFTER FIELD sfaasite
               IF NOT cl_null(g_input.sfaasite) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_input.sfaasite
                  #160318-00025#46  2016/04/28  by pengxin  add(S)
                  LET g_errshow = TRUE #是否開窗 
                  LET g_chkparam.err_str[1] = "aoo-00095:sub-01302|aooi125|",cl_get_progname("aooi125",g_lang,"2"),"|:EXEPROGaooi125"
                  #160318-00025#46  2016/04/28  by pengxin  add(E)
                  IF NOT cl_chk_exist("v_ooef001") THEN
                     LET g_input.sfaasite = ''
                     LET g_input.sfaasite_desc = ''                
                     NEXT FIELD sfaasite
                  END IF
               END IF
               CALL axcp162_ref_show() 
               
               
            AFTER FIELD yy
               IF NOT cl_null(g_input.yy) AND NOT cl_null(g_input.mm) THEN 
#先找出成本关账日期所在年期
                  LET l_date = cl_get_para(g_enterprise,g_input.sfaasite,'S-FIN-6012')
                  SELECT glaald INTO l_ld FROM glaa_t
                   WHERE glaaent  = g_enterprise
                     AND glaacomp = g_input.sfaasite
                     AND glaa014 = 'Y'   #160929-00032#1 add
                  CALL s_fin_date_get_yspw('',l_ld,l_date) RETURNING l_success,l_yy,l_ss,l_mm,l_ww
#再比较和输入年期的大小
                  #IF NOT l_success THEN   #161019-00033#1
                  IF l_success THEN   #161019-00033#1
                  #   IF g_input.yy*12+g_input.mm <= l_yy*12+l_mm THEN
                     IF g_input.yy*12+g_input.mm < l_yy*12+l_mm THEN
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "" 
                        LET g_errparam.code   = "asf-00449"       #年度期别不可小于等于关账日期！
                        LET g_errparam.popup  = TRUE 
                        LET g_input.yy = ''
                        CALL cl_err()   
                        NEXT FIELD yy                        
                     END IF
                  END IF
               END IF
 
            AFTER FIELD mm
               IF NOT cl_null(g_input.yy) AND NOT cl_null(g_input.mm) THEN 
#先找出成本关账日期所在年期
                  LET l_date = cl_get_para(g_enterprise,g_input.sfaasite,'S-FIN-6012')
                  SELECT glaald INTO l_ld FROM glaa_t
                   WHERE glaaent  = g_enterprise
                     AND glaacomp = g_input.sfaasite
                     AND glaa014 = 'Y'   #160929-00032#1 add
                     
                  CALL s_fin_date_get_yspw('',l_ld,l_date) RETURNING l_success,l_yy,l_ss,l_mm,l_ww
#再比较和输入年期的大小
                  #IF NOT l_success THEN    #161019-00033#1
                  IF l_success THEN    #161019-00033#1
                    # IF g_input.yy*12+g_input.mm <= l_yy*12+l_mm THEN
                     IF g_input.yy*12+g_input.mm < l_yy*12+l_mm THEN
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "" 
                        LET g_errparam.code   = "asf-00449"       #年度期别不可小于等于关账日期！
                        LET g_errparam.popup  = TRUE 
                        LET g_input.mm = ''
                        CALL cl_err() 
                        NEXT FIELD mm                       
                     END IF
                  END IF
               END IF 
            ON ACTION controlp INFIELD sfaasite
			      INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
			      LET g_qryparam.reqry = FALSE               
               LET g_qryparam.default1 = g_input.sfaasite             #給予default值                
               CALL q_ooef017()               
               LET g_input.sfaasite = g_qryparam.return1              #將開窗取得的值回傳到變數               
               DISPLAY g_input.sfaasite TO sfaasite                   #顯示到畫面上
               CALL axcp162_ref_show() 
               NEXT FIELD sfaasite                                    #返回原欄位
               
         END INPUT
         
         #查詢QBE
         CONSTRUCT BY NAME g_input.wc ON sfaadocno,sfaadocdt,sfaa010

            BEFORE CONSTRUCT
               CALL cl_qbe_init()
            
            AFTER CONSTRUCT
               #呼叫P次作業
               
            ON ACTION controlp INFIELD sfaadocno
			      INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
			      LET g_qryparam.reqry = FALSE
			      LET g_qryparam.where = " sfaasite IN  (SELECT DISTINCT ooef001 FROM ooef_t WHERE ooefent = ",g_enterprise," AND ooef017 = '",g_input.sfaasite,"' AND ooef201 = 'Y')"
               CALL q_sfaadocno_4()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO sfaadocno        #顯示到畫面上

               NEXT FIELD sfaadocno                           #返回原欄位 
               
            ON ACTION controlp INFIELD sfaa010
			      INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
			      LET g_qryparam.reqry = FALSE
               CALL q_imaa001_9()                             #呼叫開窗
               DISPLAY g_qryparam.return1 TO sfaa010          #顯示到畫面上

               NEXT FIELD sfaa010                             #返回原欄位                
         END CONSTRUCT
     
         INPUT ARRAY g_detail_d FROM s_detail1.* 
              ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                        INSERT ROW = FALSE,
                        DELETE ROW = FALSE,
                        APPEND ROW = FALSE)
            BEFORE INPUT
               IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
                 CALL FGL_SET_ARR_CURR(g_detail_d.getLength()+1) 
                 LET g_insert = 'N' 
               END IF 
             
            BEFORE ROW
               LET l_ac = ARR_CURR()
               LET g_master_idx = l_ac
               DISPLAY l_ac TO FORMONLY.h_index
               CALL axcp162_fetch()              
               
            ON CHANGE sel
 
         
         END INPUT
         #end add-point
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         #170104-00021#1-s
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
         #170104-00021#1-e
         #end add-point
 
         BEFORE DIALOG
            IF g_detail_d.getLength() > 0 THEN
               CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
            ELSE
               CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
            END IF
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
            CALL DIALOG.setActionActive("accept", FALSE)
            CALL DIALOG.setActionActive("selall", FALSE)
            CALL DIALOG.setActionActive("selone", FALSE)
            CALL DIALOG.setActionActive("sel", FALSE)
            CALL DIALOG.setActionActive("unsel", FALSE)
            CALL DIALOG.setActionActive("unselall", FALSE)
            #170104-00021#1-s
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL axcp162_get_buffer(l_dialog)
            #170104-00021#1-e
            #end add-point
 
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            #add-point:ui_dialog段on action selall name="ui_dialog.selall.befroe"
            
            #end add-point            
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "Y"
               #add-point:ui_dialog段on action selall name="ui_dialog.for.onaction_selall"
 
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selall name="ui_dialog.onaction_selall"
            
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "N"
               #add-point:ui_dialog段on action selnone name="ui_dialog.for.onaction_selnone"
 
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selnone name="ui_dialog.onaction_selnone"
            
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "Y"
               END IF
            END FOR
            #add-point:ui_dialog段on action sel name="ui_dialog.onaction_sel"
 
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "N"
               END IF
            END FOR
            #add-point:ui_dialog段on action unsel name="ui_dialog.onaction_unsel"
 
            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL axcp162_filter()
            #add-point:ON ACTION filter name="menu.filter"
            
            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION accept
            #add-point:ui_dialog段accept之前 name="menu.filter"
 
            #end add-point
            CALL axcp162_query()
             
         # 條件清除
         ON ACTION qbeclear
            #add-point:ui_dialog段 name="ui_dialog.qbeclear"
            CLEAR FORM
            INITIALIZE g_input.* TO NULL
            #end add-point
 
         # 重新整理
         ON ACTION datarefresh
            LET g_error_show = 1
            #add-point:ui_dialog段datarefresh name="ui_dialog.datarefresh"
            
            #end add-point
            CALL axcp162_b_fill()
 
         #add-point:ui_dialog段action name="ui_dialog.more_action"
         ON ACTION batch_execute
            #170104-00021#1-s
            #IF cl_null(g_input.sfaasite) THEN
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "" 
            #   LET g_errparam.code   = 'agl-00291' 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   EXIT DIALOG
            #END IF
            #IF cl_null(g_input.yy) OR cl_null(g_input.mm) THEN
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "" 
            #   LET g_errparam.code   = 'ain-00345' 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   EXIT DIALOG
            #END IF        
            #CALL axcp162_query()   #没有绿勾勾来执行填充单身的动作，所以执行时填一次，用户看不见的
            ACCEPT DIALOG  
            #170104-00021#1-e
            
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:22) ---start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #170104-00021#1-s
      
      IF INT_FLAG OR g_action_choice="exit" THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      END IF
      
      IF cl_null(g_input.sfaasite) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code  = 'agl-00291'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         CONTINUE WHILE
      END IF
      IF cl_null(g_input.yy) OR cl_null(g_input.mm) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code  = 'ain-00345'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         CONTINUE WHILE
      END IF
      
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
      
      #請在下方的add-point內進行把畫面的輸入資料(g_master)轉換到傳遞參數變數(lc_param)的動作
      LET lc_param.sfaasite = g_input.sfaasite
      LET lc_param.yy = g_input.yy
      LET lc_param.mm = g_input.mm
      LET lc_param.countradio = g_input.countradio
      LET lc_param.wc = g_input.wc    #把畫面上的wc傳遞到參數變數
      
      LET ls_js = util.JSON.stringify(lc_param)  #r類使用g_master/p類使用lc_param

      IF g_chk_jobid THEN
         LET g_jobid = g_schedule.gzpa001
      ELSE
         LET g_jobid = cl_schedule_get_jobid(g_prog)
      END IF
       
      #依照指定模式執行報表列印
      CASE
         WHEN g_schedule.gzpa003 = "0"
              CALL axcp162_query()
       
         WHEN g_schedule.gzpa003 = "1"
              LET ls_js = axcp162_transfer_argv(ls_js)
              CALL cl_cmdrun(ls_js)
       
         WHEN g_schedule.gzpa003 = "2"
              CALL cl_schedule_update_data(g_jobid,ls_js)
       
         WHEN g_schedule.gzpa003 = "3"
              CALL cl_schedule_update_data(g_jobid,ls_js)
      END CASE
       
      IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN
         CALL cl_ask_confirm3("std-00014","") #設定完成
      END IF
      LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
       
      #欄位初始資訊 
      CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
      LET gi_hiden_asign = FALSE 
      LET gi_hiden_exec = FALSE 
      LET gi_hiden_spec = FALSE 
      LET gi_hiden_exec_end = FALSE 
      CALL cl_schedule_hidden()
      
      #170104-00021#1-e
      
      #end add-point
      #(ver:22) --- end ---
 
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #(ver:22) ---start---
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         #(ver:22) --- end ---
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
 
{</section>}
 
{<section id="axcp162.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION axcp162_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point 
   DEFINE ls_wc      STRING
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define name="query.define"
   
   #end add-point 
    
   #add-point:cs段after_construct name="query.after_construct"
 
   #end add-point
        
   LET g_error_show = 1
   CALL axcp162_b_fill()
   LET l_ac = g_master_idx
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   END IF
   
   #add-point:cs段after_query name="query.cs_after_query"
 
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axcp162.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axcp162_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point
   DEFINE ls_wc           STRING
   #add-point:b_fill段define name="b_fill.define"
   DEFINE l_glaa003       LIKE glaa_t.glaa003
   DEFINE l_date          LIKE type_t.dat
   DEFINE l_bdate         LIKE type_t.dat
   DEFINE l_edate         LIKE type_t.dat
   DEFINE l_sfaa010       LIKE sfaa_t.sfaa010
   DEFINE l_sfaa012       LIKE sfaa_t.sfaa012
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_cost_unit     LIKE xcbg_t.xcbg005
   DEFINE l_cnt           LIKE type_t.num10    #161027-00046#1 num5 mod num10
   DEFINE l_set1          LIKE xcbg_t.xcbg004
   DEFINE l_set2          LIKE xcbg_t.xcbg004
   DEFINE l_n             LIKE type_t.num10    #161027-00046#1 num5 mod num10
   DEFINE l_msg           STRING
   DEFINE l_sql           STRING
   DEFINE l_success1      LIKE type_t.num5    #已存在数据，是否重新计算？ #151116-00006#1
   DEFINE l_wc            STRING              #160517-00040#1
   DEFINE l_site          LIKE sfaa_t.sfaasite  #160517-00040#1
   DEFINE l_site_t        LIKE sfaa_t.sfaasite  #160517-00040#1
   DEFINE l_sfba009       LIKE sfba_t.sfba009   #161004-00022#3
   #end add-point
 
   LET g_wc = g_wc, cl_sql_auth_filter()   #(ver:21) add cl_sql_auth_filter()
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
#计算xcbg前，先删除原有的xcbg
   LET g_success = FALSE
   LET l_success = TRUE
   
   CALL s_transaction_begin()
      
   LET l_glaa003 = ''
   LET l_bdate   = ''
   LET l_edate   = ''
   LET l_sfaa010 = ''
   LET l_sfaa012 = ''
   LET l_cost_unit = ''
   LET l_cnt = ''
   LET l_set1 = ''
   LET l_set2 = ''
   LET g_input.wc = g_input.wc.trim() #當查詢按下Q時 按下放棄 g_input.wc = "  " 所以要清掉空白
   IF cl_null(g_input.wc) THEN  #p_wc 查詢條件
      LET g_input.wc = " 1=1 "
   END IF
   LET ls_wc = s_chr_replace(g_input.wc,'sfaadocno','xcbg003',0)
#160517-00040#1----mark----begin
#   LET l_sql = "  WHERE xcbgent  = ",g_enterprise,
#              #"    AND xcbgcomp = '",g_input.sfaasite,"'", #151116-00006#1 mark
#               "    AND xcbgcomp = ?",                      #151116-00006#1 add
#               "    AND xcbg001  = '",g_input.yy,"'",
#               "    AND xcbg002  = '",g_input.mm,"'",
#              #"    AND xcbg003 IN (SELECT DISTINCT sfaadocno FROM sfaa_t WHERE sfaaent = ",g_enterprise, #151116-00006#1 mark
#              #"    AND ",g_input.wc,")"                                                                  #151116-00006#1 mark
#               "    AND xcbg003  = ?"                       #151116-00006#1 add           
#   LET g_sql = " SELECT COUNT(*) FROM xcbg_t ",l_sql 
#   PREPARE axcp162_cnt1 FROM g_sql 
#   LET g_sql = " DELETE FROM xcbg_t ",l_sql                 #151116-00006#1 add
#   PREPARE axcp162_del FROM g_sql                           #151116-00006#1 add
#160517-00040#1----mark----end    
   #151116-00006#1--mark--start--因為法人組織(xcbgcomp)搬移到FOREACH裡----
   #LET l_cnt = 0
   #EXECUTE axcp162_cnt1 INTO l_cnt 
   #IF l_cnt > 0 THEN
   #   IF NOT cl_ask_confirm('art-00454') THEN   #已存在数据，是否重新计算？
   #      LET g_success = TRUE
   #      RETURN g_success
   #   END IF
   #END IF
   #
   #LET g_sql = " DELETE FROM xcbg_t ",l_sql
   #
   #PREPARE axcp162_del FROM g_sql   
   #EXECUTE axcp162_del   
   #
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL 
   #   LET g_errparam.extend = "axcp162:DEL xcbg" 
   #   LET g_errparam.code   = SQLCA.sqlcode 
   #   LET g_errparam.popup  = TRUE 
   #   CALL cl_err()
   #   LET g_success = FALSE
   #   RETURN
   #END IF
   #151116-00006#1--mark--end-------------------------------------------
   SELECT glaa003 INTO l_glaa003 FROM glaa_t
    WHERE glaaent  = g_enterprise
      AND glaacomp = g_input.sfaasite
      AND glaa014  = 'Y'
      
   CALL s_fin_date_get_period_range(l_glaa003,g_input.yy,g_input.mm) RETURNING l_bdate,l_edate  
 
   #160517-00040#1----add----begin
   LET l_wc = " 1=1"    
   #资料处理前先判断当期是否有xcbg的资料存在，如果有部分资料存在则先询问是否需要删除这些已经存在的资料
   #如果是，则删除当期已经存在的资料，再根据QBE产生xcbg的资料
   #如果否，则只需要产生不存在xcbg的资料，在遍历工单时需要排除掉这部分已经存在xcbg的资料
   LET l_sql = "  WHERE xcbgent  = ",g_enterprise,
               "    AND xcbgcomp = '",g_input.sfaasite,"'", 
               "    AND xcbg001  = '",g_input.yy,"'",
               "    AND xcbg002  = '",g_input.mm,"'",
               "    AND xcbg003 IN (SELECT DISTINCT sfaadocno 
                                      FROM sfaa_t WHERE sfaaent = ",g_enterprise, 
               "                       AND sfaa003 <> '4' ",                               #研发工单
               "                       AND (sfaa048 IS NULL OR sfaa048 >= '",l_bdate,"')", #成会结案日期 #161007-00005#1 add "="
               "                       AND sfaadocdt <= '",l_edate,"'",                    #开单日期    #161007-00005#1 add "="
               "                       AND sfaastus IN ('Y','F','C','E','M') ",            #单据状态                                      
               "                       AND ",g_input.wc,")"                                                                      
   LET g_sql = " SELECT COUNT(*) FROM xcbg_t ",l_sql 
   PREPARE axcp162_cnt1 FROM g_sql 
   LET g_sql = " DELETE FROM xcbg_t ",l_sql                 
   PREPARE axcp162_del FROM g_sql                              
   LET l_cnt = 0
   EXECUTE axcp162_cnt1 INTO l_cnt 
   IF l_cnt > 0 THEN
      IF g_bgjob <> "Y" THEN  #170104-00021#1
         IF NOT cl_ask_confirm('art-00454') THEN   #已存在数据，是否重新计算？
            LET l_wc = " sfaadocno NOT IN(SELECT xcbg003 FROM xcbg_t WHERE xcbgent = ",g_enterprise,
                       "                     AND xcbgcomp = '",g_input.sfaasite,"'", 
                       "                     AND xcbg001  = '",g_input.yy,"'",
                       "                     AND xcbg002  = '",g_input.mm,"')"         
         ELSE
            EXECUTE axcp162_del   
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "axcp162:DEL xcbg" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_success = FALSE
               RETURN
            END IF
            LET l_wc = " 1=1"        
         END IF
      ELSE
         EXECUTE axcp162_del
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = "axcp162:DEL xcbg"
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            LET g_success = FALSE
            RETURN
         END IF
         LET l_wc = " 1=1"
      END IF
   END IF
   #160517-00040#1----add----end 
   #160517-00040#1----mod----begin
#   #LET g_sql=  " SELECT DISTINCT 'Y',sfaasite,'','',sfaadocno,'',sfaa013,'',sfaa010,sfaa012,imag014 FROM sfaa_t ",              #151116-00006#1 mark
#   #LET g_sql=  " SELECT DISTINCT 'Y',sfaasite,'','',sfaadocno,'',sfaa013,'',sfaa010,sfaa012 FROM sfaa_t ",                       #151116-00006#1 add 151208-00013#1 mark
#   LET g_sql=  " SELECT DISTINCT 'Y','",g_input.sfaasite,"','','',sfaadocno,'',sfaa013,'',sfaa010,sfaa012,sfaasite, ",    #160517-00040#1 add sfaasite                     #151208-00013#1 add
#   #            "    LEFT OUTER JOIN imag_t ON imagent = sfaaent AND imagsite = '",g_input.sfaasite,"' AND imag001 = sfaa010 ",  #151116-00006#1 mark
#               " (SELECT SUM(sfdb007) FROM sfdb_t,sfda_t WHERE sfdaent = sfdbent AND sfdadocno = sfdbdocno AND sfdaent = sfaaent AND sfdb001 = sfaadocno  AND sfda002 = 11 AND sfdastus = 'S') l_set1,",  #160517-00040#1 add
#               " (SELECT SUM(sfdb007) FROM sfdb_t,sfda_t WHERE sfdaent = sfdbent AND sfdadocno = sfdbdocno AND sfdaent = sfaaent AND sfdb001 = sfaadocno  AND sfda002 = 11 AND sfdastus = 'S') l_set1"   #160517-00040#1 add
#               " FROM sfaa_t ",

   IF g_input.countradio = 1 THEN 
      LET g_sql=  " SELECT DISTINCT 'Y','",g_input.sfaasite,"','','',sfaadocno,'',sfaa013,'',sfaa010,sfaa012,sfaasite, ",
                  " (SELECT imaa006 FROM imaa_t WHERE imaaent = sfaaent AND imaa001 = sfaa010) imaa006, ",      
                  " 0,0 ",    
                  " FROM sfaa_t "    
   ELSE
      LET g_sql=  " SELECT DISTINCT 'Y','",g_input.sfaasite,"','','',sfaadocno,'',sfaa013,'',sfaa010,sfaa012,sfaasite, ",                   
                  " (SELECT imaa006 FROM imaa_t WHERE imaaent = sfaaent AND imaa001 = sfaa010) imaa006, ", 
                 #161004-00022#4-s-mark
                 #" (SELECT SUM(sfdb007) FROM sfdb_t,sfda_t WHERE sfdaent = sfdbent AND sfdadocno = sfdbdocno AND sfdaent = sfaaent AND sfdb001 = sfaadocno  AND sfda002 = 11 AND sfdastus = 'S') l_set1, ",  
                 #" (SELECT SUM(sfdb007) FROM sfdb_t,sfda_t WHERE sfdaent = sfdbent AND sfdadocno = sfdbdocno AND sfdaent = sfaaent AND sfdb001 = sfaadocno  AND sfda002 = 21 AND sfdastus = 'S') l_set2  ",  
                 #161004-00022#4-e-mark 
                 #161004-00022#4-s-add
                  " (SELECT SUM(sfdb007) FROM sfdb_t,sfda_t WHERE sfdaent = sfdbent AND sfdadocno = sfdbdocno AND sfdaent = sfaaent AND sfdb001 = sfaadocno  AND sfda002 = 11 AND sfdastus = 'S' AND sfda001 BETWEEN '",l_bdate,"' AND '",l_edate,"' ) l_set1, ",  
                  " (SELECT SUM(sfdb007) FROM sfdb_t,sfda_t WHERE sfdaent = sfdbent AND sfdadocno = sfdbdocno AND sfdaent = sfaaent AND sfdb001 = sfaadocno  AND sfda002 = 21 AND sfdastus = 'S' AND sfda001 BETWEEN '",l_bdate,"' AND '",l_edate,"' ) l_set2  ",                             
                 #161004-00022#4-e-add  
                  " FROM sfaa_t "     
   END IF            
   #160517-00040#1----mod----end            
   LET g_sql= g_sql," WHERE sfaaent = ? ",
                    "   AND sfaasite IN (SELECT DISTINCT ooef001 FROM ooef_t WHERE ooefent = ",g_enterprise," AND ooef017 = '",g_input.sfaasite,"'  AND ooef201 ='Y') ",
                    "   AND sfaa003 <> '4' ",                                #研发工单
                    "   AND (sfaa048 IS NULL OR sfaa048 >= '",l_bdate,"')",  #成会结案日期#161007-00005#1 add "="
                    "   AND sfaadocdt <= '",l_edate,"'",                     #开单日期 #161007-00005#1 add "="
                    "   AND sfaastus IN ('Y','F','C','E','M') ",             #单据状态
                    "   AND ",g_input.wc,
                    "   AND ",l_wc       #160517-00040#1
             
   #end add-point
 
   PREPARE axcp162_sel FROM g_sql
   DECLARE b_fill_curs CURSOR FOR axcp162_sel
   
   CALL g_detail_d.clear()
   #add-point:b_fill段其他頁簽清空 name="b_fill.clear"
   CALL cl_err_collect_init() #汇总错误讯息初始化
   IF g_bgjob <> "Y" THEN  #170104-00021#1
   #计算一共需要插入的笔数
      LET g_sql= " SELECT COUNT(sfaadocno) FROM sfaa_t ",
                  " WHERE sfaaent = ? ",
                  "   AND sfaasite IN  (SELECT DISTINCT ooef001 FROM ooef_t WHERE ooefent = ",g_enterprise," AND ooef017 = '",g_input.sfaasite,"' AND ooef201 ='Y') ",
                  "   AND sfaa003 <> '4' ",                               #研发工单
                  "   AND (sfaa048 IS NULL OR sfaa048 >= '",l_bdate,"')", #成会结案日期 #161007-00005#1 add "="
                  "   AND sfaadocdt <= '",l_edate,"'",                    #开单日期#161007-00005#1 add "="
                  "   AND sfaastus IN ('Y','F','C','E','M') ",            #单据状态
                  "   AND ",g_input.wc
      
      PREPARE axcp162_cnt FROM g_sql   
      EXECUTE axcp162_cnt USING g_enterprise INTO l_n
      CALL cl_progress_bar_no_window(l_n)
   END IF  #170104-00021#1
   INITIALIZE l_success1 TO NULL   #151116-00006#1 add  
   
  #161004-00022#3-s-add
   LET g_sql = " SELECT COUNT(sfbaseq) ",
               "   FROM sfba_t ",
               "  WHERE sfbaent = ",g_enterprise,
               "    AND sfbadocno = ? "
   PREPARE axcp162_sfba FROM g_sql  
   
   LET g_sql = " SELECT COUNT(sfbaseq) ",
               "   FROM sfba_t ",
               "  WHERE sfbaent = ",g_enterprise,
               "    AND sfbadocno = ? AND sfba009 = 'Y' "
   PREPARE axcp162_sfba009 FROM g_sql    
  #161004-00022#3-e-add
  
  #161027-00046#1-s-add
   LET g_sql = " INSERT INTO xcbg_t (xcbgent,xcbgcomp,xcbg001,xcbg002,xcbg003, ",
               "                     xcbg004,xcbg005,xcbg006) ",
               "         VALUES(?,?,?,?,?, ?,?,?) "
   PREPARE axcp162_ins_xcbg_p FROM g_sql
  #161027-00046#1-e-add
  #161004-00022#8-s-add  
   LET g_sql = "SELECT SUM(inaj011 * inaj004 )",
               "  FROM inaj_t ",
               " WHERE inajent = ",g_enterprise,
               "   AND inaj020 = ? ",
               "   AND inaj036 IN ('103','109','110','111','112','113','114') ",               
               "   AND inaj022 BETWEEN '",l_bdate,"' AND '",l_edate,"'"
   PREPARE axcp162_inaj011_p FROM g_sql            
  #161004-00022#8-e-add
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs USING g_enterprise INTO 
   #add-point:b_fill段foreach_into name="b_fill.foreach_into"
   g_detail_d[l_ac].*,l_sfaa010,l_sfaa012,l_site,l_cost_unit,l_set1,l_set2
   #end add-point
   
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      #add-point:b_fill段資料填充 name="b_fill.foreach_iside"
#160517-00040#1----mark----begin      
#      #151116-00006#1--add--start-----------------------------------------
#      LET l_cnt = 0
#      EXECUTE axcp162_cnt1 USING g_detail_d[l_ac].xcbgcomp,g_detail_d[l_ac].xcbg003 INTO l_cnt 
#      IF l_cnt > 0 THEN
#         IF cl_null( l_success1 ) THEN 
#            IF NOT cl_ask_confirm('art-00454') THEN   #已存在数据，是否重新计算？
#               LET l_success1 = FALSE  
#            ELSE
#               LET l_success1 = TRUE       
#            END IF 
#         END IF 
#         IF l_success1 = FALSE THEN
#            LET g_success = TRUE
#            CONTINUE FOREACH 
#         ELSE
#            EXECUTE axcp162_del USING g_detail_d[l_ac].xcbgcomp,g_detail_d[l_ac].xcbg003   
#            IF SQLCA.sqlcode THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = "axcp162:DEL xcbg" 
#               LET g_errparam.code   = SQLCA.sqlcode 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
#               LET g_success = FALSE
#               CONTINUE FOREACH
#            END IF
#         END IF 
#      END IF
#      #151116-00006#1--add--end-------------------------------------------
#160517-00040#1----mark----end
      IF l_ac = 1 THEN LET g_success = TRUE END IF      #之前设g_success= FALSE是为了检测FOREACH进了没，只要进了，就先预设为TRUE
   IF g_bgjob <> "Y" THEN  #170104-00021#1
#     LET l_msg = l_ac/l_n*100,'%'
      LET l_msg = l_sfaa010
      CALL cl_progress_no_window_ing(l_msg)
   END IF  #170104-00021#1
      LET l_success = TRUE
      LET g_detail_d[l_ac].xcbg001 = g_input.yy
      LET g_detail_d[l_ac].xcbg002 = g_input.mm
#      CALL s_axcp500_get_cost_unit(g_input.sfaasite,l_sfaa010)
#           RETURNING l_cost_unit
#160517-00040#1----mark----begin
#      IF cl_null(l_cost_unit) THEN
#         SELECT imaa006 INTO l_cost_unit FROM imaa_t 
#          WHERE imaaent = g_enterprise
#            AND imaa001 = l_sfaa010         
#      END IF
#160517-00040#1----mark----end      
     #161027-00046#1-s-add
      IF g_detail_d[l_ac].xcbg005 = l_cost_unit THEN
         LET g_detail_d[l_ac].xcbg006 = 1
      ELSE
     #161027-00046#1-e-add 
         CALL s_aimi190_get_convert(l_sfaa010,g_detail_d[l_ac].xcbg005,l_cost_unit) RETURNING l_success,g_detail_d[l_ac].xcbg006
         IF NOT l_success THEN
            LET g_success = FALSE
            CONTINUE FOREACH
         END IF
      END IF           #161027-00046#1 add
     #161004-00022#3-s-add
     #IF g_input.countradio = 2 THEN  #161004-00022#8 mark
     LET l_sfba009 = 'N'    
     LET l_n = 0
     EXECUTE axcp162_sfba USING g_detail_d[l_ac].xcbg003 INTO l_n
     LET l_cnt = 0
     EXECUTE axcp162_sfba009 USING g_detail_d[l_ac].xcbg003 INTO l_cnt
     #整張工單都是倒扣料
     IF l_n > 0 AND l_n = l_cnt THEN   
        LET l_sfba009 = 'Y' 
     END IF
     #END IF                          #161004-00022#8 mark
     #161004-00022#3-e-add
     #161004-00022#8-s-add
     IF l_sfba009 = 'Y' THEN
        #整張倒扣料，直接以入庫數當做套數投入數
        EXECUTE  axcp162_inaj011_p USING g_detail_d[l_ac].xcbg003 INTO g_detail_d[l_ac].xcbg004
        IF cl_null(g_detail_d[l_ac].xcbg004) THEN LET g_detail_d[l_ac].xcbg004 = 0 END IF
     ELSE     
     #161004-00022#8-s-add
        #计算成套数量
        #1.按实际成套数计算主件投入数量:为截止本期末的套数-期初的套数
        #IF g_input.countradio = 1 THEN   #151116-00006#1 add #161004-00022#3 mark
        #IF g_input.countradio = 1 OR (g_input.countradio = 2 AND l_sfba009 = 'Y' )THEN  #161004-00022#3 mark #161004-00022#8 mark
         IF g_input.countradio = 1  THEN                                                  #161004-00022#8 add
            #主件本期期末投入数量 为本期投入的套数
            LET l_site_t = g_site   #160517-00040#1
            LET g_site = l_site     #160517-00040#1
            CALL s_asft340_full_sets(g_detail_d[l_ac].xcbg003,' ',' ',l_edate)
              RETURNING l_success,l_set1
            LET g_site = l_site_t   #160517-00040#1
            IF NOT l_success THEN
               LET g_success = FALSE
               CONTINUE FOREACH
            END IF 
        
            #期初的套数
            LET l_date = l_bdate -1
            LET l_site_t = g_site   #160517-00040#1
            LET g_site = l_site     #160517-00040#1     
            CALL s_asft340_full_sets(g_detail_d[l_ac].xcbg003,' ',' ',l_date)
                  RETURNING l_success,l_set2
            LET g_site = l_site_t   #160517-00040#1             
            IF NOT l_success THEN
               LET g_success = FALSE
               CONTINUE FOREACH
            END IF
         END IF   #160517-00040#1         
#160517-00040#1----mark----end                
#    #151116-00006#1--add--start--------------------------------------------
#    #2.按成套单计算主件投入数量:本期成套发料单(asft311)的应发套数(sfdb007)－本期成套退料单(asft321)的应发套数(sfdb007)
#     ELSE      
#        #本期成套发料单(asft311)的应发套数(sfdb007)
#        SELECT SUM(sfdb007) INTO l_set1 
#          FROM sfdb_t,sfda_t
#         WHERE sfdadocno = sfdbdocno
#           AND sfdb001 = g_detail_d[l_ac].xcbg003
#           AND sfda002 = 11
#           AND sfdastus = 'S'
#        #本期成套退料单(asft321)的应发套数(sfdb007)
#        SELECT SUM(sfdb007) INTO l_set2
#          FROM sfdb_t,sfda_t
#         WHERE sfdadocno = sfdbdocno
#           AND sfdb001 = g_detail_d[l_ac].xcbg003
#           AND sfda002 = 21
#           AND sfdastus = 'S'
#     END IF                           
#    #151116-00006#1--add--end----------------------------------------------
#160517-00040#1----mark----end 
         #套数为截止本期末的套数-期初的套数
         IF cl_null(l_set1) THEN LET l_set1 = 0 END IF
         IF cl_null(l_set2) THEN LET l_set2 = 0 END IF
         LET g_detail_d[l_ac].xcbg004 = l_set1 - l_set2 
     END IF                        #161004-00022#8 add
     #160330-00001#1--mark--start--------------------------------------------
     #倒扣料工單未發料前, 無在製投入數量 
      #IF g_detail_d[l_ac].xcbg004 = 0 THEN  #若备料均是倒扣料,则套数算不到
      #   SELECT COUNT(*) INTO l_cnt FROM sfba_t
      #    WHERE sfbaent = g_enterprise
      #      AND sfbadocno = g_detail_d[l_ac].xcbg003
      #      AND sfba009 <> 'Y'
      #      AND (sfba013 - sfba015 ) > 0
      #   IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
      #   IF l_cnt = 0 THEN
      #      LET g_detail_d[l_ac].xcbg004 = l_sfaa012
      #   END IF
      #END IF      
     #160330-00001#1--mark--end----------------------------------------------
     
     #工单的生产单位和成本单位不一致时
      IF l_cost_unit <> g_detail_d[l_ac].xcbg005 THEN
         CALL s_aooi250_convert_qty(l_sfaa010,g_detail_d[l_ac].xcbg005,l_cost_unit,g_detail_d[l_ac].xcbg004)
              RETURNING l_success,g_detail_d[l_ac].xcbg004 
         IF NOT l_success THEN
            LET g_success = FALSE
            CONTINUE FOREACH
         END IF 
      END IF     

     #161004-00022#3-s-mark 
     #INSERT INTO xcbg_t (xcbgent,xcbgcomp,xcbg001,xcbg002,xcbg003,xcbg004,xcbg005,xcbg006) 
     #             VALUES(g_enterprise,g_detail_d[l_ac].xcbgcomp,
     #                    g_detail_d[l_ac].xcbg001,g_detail_d[l_ac].xcbg002,g_detail_d[l_ac].xcbg003,
     #                    g_detail_d[l_ac].xcbg004,g_detail_d[l_ac].xcbg005,g_detail_d[l_ac].xcbg006)
     #161004-00022#3-s-mark
     #161027-00046#1-s-add      
      EXECUTE axcp162_ins_xcbg_p USING g_enterprise,g_detail_d[l_ac].xcbgcomp,
                                       g_detail_d[l_ac].xcbg001,g_detail_d[l_ac].xcbg002,g_detail_d[l_ac].xcbg003,
                                       g_detail_d[l_ac].xcbg004,g_detail_d[l_ac].xcbg005,g_detail_d[l_ac].xcbg006      
     #161027-00046#1-e-add      
      IF SQLCA.SQLCODE OR SQLCA.sqlerrd[3] = 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.SQLCODE
         LET g_errparam.extend = "insert xcbg"
         LET g_errparam.popup = FALSE
         CALL cl_err()
         LET g_success = FALSE
         CONTINUE FOREACH
      END IF

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err() 
         END IF
         EXIT FOREACH
      END IF
      CONTINUE FOREACH  #不想走axcp162_detail_show()，完全没意义的
      #end add-point
      
      CALL axcp162_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
   #add-point:b_fill段資料填充(其他單身) name="b_fill.other_table"
   CALL g_detail_d.deleteElement(g_detail_d.getLength())
   IF g_success THEN
         CALL s_transaction_end('Y','0')
         IF g_bgjob <> "Y" THEN  #170104-00021#1
            CALL cl_ask_confirm3("adz-00217","")
         END IF  #170104-00021#1
      ELSE
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()  #fengmy150807  先报错资料，后提示“执行失败”
         IF g_bgjob <> "Y" THEN  #170104-00021#1
            CALL cl_ask_confirm3("adz-00218","")
           #CALL cl_err_collect_show()  #fengmy150807  mark
         END IF  #170104-00021#1
      END IF

   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE axcp162_sel
   
   LET l_ac = 1
   CALL axcp162_fetch()
   #add-point:b_fill段資料填充(其他單身) name="b_fill.after_b_fill"
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="axcp162.fetch" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axcp162_fetch()
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point
   DEFINE li_ac           LIKE type_t.num10
   #add-point:fetch段define name="fetch.define"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   #add-point:單身填充後 name="fetch.after_fill"
   
   #end add-point 
   
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="axcp162.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION axcp162_detail_show()
   #add-point:show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point
   #add-point:show段define name="detail_show.define"
   
   #end add-point
   
   #add-point:detail_show段 name="detail_show.detail_show"
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="axcp162.filter" >}
#+ filter過濾功能
PRIVATE FUNCTION axcp162_filter()
   #add-point:filter段define(客製用) name="filter.define_customerization"
   
   #end add-point    
   #add-point:filter段define name="filter.define"
   
   #end add-point
   
   DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
      ON UPDATE
 
   END DISPLAY
 
   LET l_ac = 1
   LET g_detail_cnt = 1
   #add-point:filter段define name="filter.detail_cnt"
   
   #end add-point    
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
   
   CALL axcp162_b_fill()
   
END FUNCTION
 
{</section>}
 
{<section id="axcp162.filter_parser" >}
#+ filter欄位解析
PRIVATE FUNCTION axcp162_filter_parser(ps_field)
   #add-point:filter段define(客製用) name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="axcp162.filter_show" >}
#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION axcp162_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axcp162_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="axcp162.other_function" readonly="Y" >}
#add-point:自定義元件(Function) name="other.function"
# 参考栏位带值
PRIVATE FUNCTION axcp162_ref_show()
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_input.sfaasite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_input.sfaasite_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_input.sfaasite_desc
   
END FUNCTION
# 赋默认值
PRIVATE FUNCTION axcp162_default()
   DEFINE l_site      LIKE xrca_t.xrcasite
   
   IF NOT cl_null(g_argv[1]) AND NOT cl_null(g_argv[2]) AND NOT cl_null(g_argv[3]) THEN
      LET g_input.sfaasite = g_argv[1]
      LET g_input.yy       = g_argv[2]
      LET g_input.mm       = g_argv[3]
   ELSE
      #取得預設的帳務中心,因新增階段的時候,並不會知道site,所以以登入人員做為依據
      CALL s_fin_get_account_center('',g_user,'3',g_today) RETURNING g_sub_success,l_site,g_errno
      
      SELECT ooef017 INTO g_input.sfaasite
        FROM ooef_t
       WHERE ooefent = g_enterprise
         AND ooef001 = l_site
         
      CALL cl_get_para(g_enterprise,g_input.sfaasite,'S-FIN-6010') RETURNING g_input.yy
      CALL cl_get_para(g_enterprise,g_input.sfaasite,'S-FIN-6011') RETURNING g_input.mm
      
      CALL axcp162_ref_show()
   END IF
END FUNCTION

################################################################################
# Descriptions...: 
# Memo...........:
# Usage..........: CALL axcp162_get_buffer(p_dialog)
# Input parameter: 
# Return code....: 
# Date & Author..: #170104-00021#1
# Modify.........:
################################################################################
PRIVATE FUNCTION axcp162_get_buffer(p_dialog)
   DEFINE p_dialog   ui.DIALOG

   CALL cl_schedule_get_buffer(p_dialog)
END FUNCTION

################################################################################
# Descriptions...: 轉換本地參數至cmdrun參數內,準備進入背景執行
# Memo...........:
# Usage..........: CALL axcp162_get_buffer(p_dialog)
# Input parameter: 
# Return code....: 
# Date & Author..: #170104-00021#1
# Modify.........:
################################################################################
PRIVATE FUNCTION axcp162_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter

   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js

   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION

#end add-point
 
{</section>}
 
