#該程式未解開Section, 採用最新樣板產出!
{<section id="axcq202_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:4(2016-04-26 10:38:29), PR版次:0004(2016-04-27 16:15:01)
#+ Customerized Version.: SD版次:(), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000051
#+ Filename...: axcq202_x01
#+ Description: 在制費用分攤打印
#+ Creator....: 05426(2015-03-16 13:46:58)
#+ Modifier...: 07024 -SD/PR- 07024
 
{</section>}
 
{<section id="axcq202_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:7)
#add-point:填寫註解說明
#151217-00012#1   2015/12/17 By shiun   增加小計功能
#160408-00004#1   2016/4/26  By dorislai  SQL改用temp
#end add-point
#add-point:填寫註解說明

#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #QBE 
       tmp STRING,                  #暫存檔 
       show STRING                   #單位成本顯隱
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"

#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
#end add-point
 
{</section>}
 
{<section id="axcq202_x01.main" readonly="Y" >}
PUBLIC FUNCTION axcq202_x01(p_arg1,p_arg2,p_arg3)
DEFINE  p_arg1 STRING                  #tm.wc  QBE 
DEFINE  p_arg2 STRING                  #tm.tmp  暫存檔 
DEFINE  p_arg3 STRING                  #tm.show  單位成本顯隱
#add-point:init段define(客製用) name="component.define_customerization"

#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"

#end add-point
 
   LET tm.wc = p_arg1
   LET tm.tmp = p_arg2
   LET tm.show = p_arg3
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "axcq202_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL axcq202_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL axcq202_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL axcq202_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL axcq202_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL axcq202_x01_rep_data()
 
END FUNCTION
 
{</section>}
 
{<section id="axcq202_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION axcq202_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "xcbkcomp_desc.type_t.chr30,xcbkld_desc.type_t.chr30,xcbk002.xcbk_t.xcbk002,xcbk003.xcbk_t.xcbk003,l_xcbk002_1.xcbk_t.xcbk002,l_xcbk003_1.xcbk_t.xcbk003,xcbk001_desc.type_t.chr100,xcbk005_desc.type_t.chr100,currency_desc.type_t.chr100,xcbk004.xcbk_t.xcbk004,xcbk004_desc.type_t.chr100,xcbk006.xcbk_t.xcbk006,sfaasite.sfaa_t.sfaasite,sfaasite_desc.type_t.chr100,xcbk007.xcbk_t.xcbk007,xcbk007_desc.type_t.chr100,xcbk202.xcbk_t.xcbk202,xcbk100.xcbk_t.xcbk100,xcbk101.xcbk_t.xcbk101,xcbkent.xcbk_t.xcbkent,mainkey.type_t.chr1000,l_cnt.type_t.num5" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   
   #end add-point:create_tmp.after
END FUNCTION
 
{</section>}
 
{<section id="axcq202_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION axcq202_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"

#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"

#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION
 
{</section>}
 
{<section id="axcq202_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION axcq202_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"

#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"

#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   LET g_select = "SELECT * "  #160408-00004#1-add
#   #end add-point
#   LET g_select = " SELECT xcbkcomp,NULL,xcbkld,NULL,xcbk002,xcbk003,NULL,NULL,xcbk001,NULL,xcbk005, 
#       NULL,NULL,NULL,xcbk004,NULL,xcbk006,NULL,NULL,xcbk007,NULL,xcbk202,xcbk100,xcbk101,xcbkent,NULL, 
#       0"
# 
#   #add-point:sel_prep g_from name="sel_prep.g_from"
   #160408-00004#1-mark-(S)
#   LET g_select= "SELECT     xcbkcomp,ooefl003,xcbkld,glaal002, ",
#              "              xcbk002,xcbk003,xcbk001,'',xcbk005,'',currency,'',xcbk004,'', ",
##              "              xcbk006,xcbk007,'','','',xcbkamt,xcbk100,xcbkcost,", #160128-00013#1-mod-(S)
#              "              xcbk006,'','',xcbk007,'',xcbkamt,xcbk100,xcbkcost,",  #160128-00013#1-mod-(E)
#              "              '',(xcbkcomp||'-'||xcbkld||'-'||xcbk002||'-'||xcbk003||'-'||xcbk005||'-'||xcbk001||'-'||currency) mainkey,0"#160128-00013#1-add
   #160408-00004#1-mark-(E)
   LET g_from = "  FROM ", tm.tmp  #160408-00004#1-add
   #end add-point
    LET g_from = " FROM xcbk_t"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   #160408-00004#1-mark-(S)
   LET g_from = "  FROM ", tm.tmp ," LEFT JOIN ooefl_t ON ooeflent='"||g_enterprise||"' AND ooefl001=xcbkcomp AND ooefl002='"||g_dlang||"' ",
                "                    LEFT JOIN glaal_t ON glaalent='"||g_enterprise||"' AND glaalld=xcbkld AND glaal001='"||g_dlang||"' " 
   #160408-00004#1-mark-(E)             
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   
                         
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("xcbk_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   #LET g_sql=g_sql," ORDER BY xcbk004,xcbk006,sfaasite,xcbk007,xcbkamt,xcbk100,xcbkcost"
   LET g_sql = g_sql CLIPPED," ORDER BY mainkey" #160128-00013#1-add
   #end add-point
   PREPARE axcq202_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE axcq202_x01_curs CURSOR FOR axcq202_x01_prepare
 
END FUNCTION
 
{</section>}
 
{<section id="axcq202_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION axcq202_x01_ins_data()
DEFINE sr RECORD 
   xcbkcomp LIKE xcbk_t.xcbkcomp, 
   xcbkcomp_desc LIKE type_t.chr30, 
   xcbkld LIKE xcbk_t.xcbkld, 
   xcbkld_desc LIKE type_t.chr30, 
   xcbk002 LIKE xcbk_t.xcbk002, 
   xcbk003 LIKE xcbk_t.xcbk003, 
   l_xcbk002_1 LIKE xcbk_t.xcbk002, 
   l_xcbk003_1 LIKE xcbk_t.xcbk003, 
   xcbk001 LIKE xcbk_t.xcbk001, 
   xcbk001_desc LIKE type_t.chr100, 
   xcbk005 LIKE xcbk_t.xcbk005, 
   xcbk005_desc LIKE type_t.chr100, 
   currency LIKE type_t.chr1, 
   currency_desc LIKE type_t.chr100, 
   xcbk004 LIKE xcbk_t.xcbk004, 
   xcbk004_desc LIKE type_t.chr100, 
   xcbk006 LIKE xcbk_t.xcbk006, 
   sfaasite LIKE sfaa_t.sfaasite, 
   sfaasite_desc LIKE type_t.chr100, 
   xcbk007 LIKE xcbk_t.xcbk007, 
   xcbk007_desc LIKE type_t.chr100, 
   xcbk202 LIKE xcbk_t.xcbk202, 
   xcbk100 LIKE xcbk_t.xcbk100, 
   xcbk101 LIKE xcbk_t.xcbk101, 
   xcbkent LIKE xcbk_t.xcbkent, 
   mainkey LIKE type_t.chr1000, 
   l_cnt LIKE type_t.num5
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"

#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
DEFINE   l_xcbk002      LIKE type_t.chr4
DEFINE   l_xcbk003      LIKE type_t.chr2
DEFINE l_glaa001        LIKE glaa_t.glaa001  #使用币别
DEFINE l_glaa016        LIKE glaa_t.glaa016  #本位幣二
DEFINE l_glaa020        LIKE glaa_t.glaa020  #本位幣三
DEFINE l_currency_desc  LIKE type_t.chr100
#add--151217-00012#1 By shiun--(S)
DEFINE l_xcbk004        LIKE xcbk_t.xcbk004
DEFINE l_mainkey        LIKE type_t.chr1000
DEFINE l_xcbk202_sum    LIKE xcbk_t.xcbk202
DEFINE l_xcbk202_total  LIKE xcbk_t.xcbk202
DEFINE l_xcbk100_sum    LIKE xcbk_t.xcbk100
DEFINE l_xcbk100_total  LIKE xcbk_t.xcbk100
DEFINE l_xcbk006        LIKE xcbk_t.xcbk006
DEFINE l_success        LIKE type_t.chr1
#add--151217-00012#1 By shiun--(E)
DEFINE l_cnt            LIKE type_t.num5 #160128-00013#1-add
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    #add--151217-00012#1 By shiun--(S)
    INITIALIZE l_xcbk004,l_mainkey,l_xcbk006 TO NULL
    LET l_success = 'N'
    LET l_xcbk202_sum = 0
    LET l_xcbk202_total = 0
    LET l_xcbk100_sum = 0
    LET l_xcbk100_total = 0
    #add--151217-00012#1 By shiun--(E)
    LET l_cnt = 0 #160128-00013#1-add
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH axcq202_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       #160408-00004#1-mark-(S)
#       #160128-00013#1-add-(S)
#       LET l_cnt = l_cnt + 1 
#       LET sr.l_cnt = l_cnt
#       #160128-00013#1-add-(E)
#       LET sr.xcbkent=g_enterprise
#       #抓取来源组织 
#       SELECT sfaasite INTO sr.sfaasite FROM sfaa_t WHERE  sfaaent=g_enterprise AND sfaadocno = sr.xcbk006 
#       #抓取来源组织说明  
#       SELECT ooefl003 INTO sr.sfaasite_desc FROM ooefl_t WHERE ooeflent=g_enterprise AND ooefl001=sr.sfaasite AND ooefl002=g_dlang
#       
#       LET sr.sfaasite_desc=sr.sfaasite,":",sr.sfaasite_desc CLIPPED
#       #抓取成本中心说明
#       SELECT ooefl003 INTO sr.xcbk004_desc FROM ooefl_t WHERE ooeflent=g_enterprise AND ooefl001=sr.xcbk004 AND ooefl002=g_dlang
#       
#       #抓取分摊方式说明
#       SELECT gzcbl004 INTO sr.xcbk007_desc FROM gzcbl_t WHERE  gzcbl001='8909' AND gzcbl002=sr.xcbk007 AND gzcbl003=g_dlang  
#       LET sr.xcbk007_desc=sr.xcbk007,":",sr.xcbk007_desc CLIPPED
#       
#       #成本计算类型说明
#       INITIALIZE g_ref_fields TO NULL
#       LET g_ref_fields[1] = sr.xcbk001
#       CALL ap_ref_array2(g_ref_fields,"SELECT xcatl003 FROM xcatl_t WHERE xcatlent='"||g_enterprise||"' AND xcatl001=? AND xcatl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#       LET sr.xcbk001_desc = '', g_rtn_fields[1] , ''
#       IF NOT cl_null(sr.xcbk001_desc) THEN
#          LET sr.xcbk001_desc=sr.xcbk001,'(',sr.xcbk001_desc,')' CLIPPED
#       ELSE 
#          LET sr.xcbk001_desc=sr.xcbk001
#       END IF
#       #成本主要素说明
#       SELECT gzcbl004 INTO sr.xcbk005_desc FROM gzcbl_t WHERE  gzcbl001='8908' AND gzcbl002=sr.xcbk005 AND gzcbl003=g_dlang  
#       LET sr.xcbk005_desc=sr.xcbk005,".",sr.xcbk005_desc CLIPPED
#
#       
#       #本位顺序说明
#       SELECT gzcbl004 INTO sr.currency_desc FROM gzcbl_t WHERE  gzcbl001='8914' AND gzcbl002=sr.currency AND gzcbl003=g_dlang  
#       LET sr.currency_desc=sr.currency,".",sr.currency_desc CLIPPED
#       
#       SELECT glaa001,glaa016,glaa020 INTO l_glaa001,l_glaa016,l_glaa020
#         FROM glaa_t
#         WHERE glaaent = g_enterprise
#         AND glaald  = sr.xcbkld
#       CASE sr.currency
#          WHEN '1'
#             CALL s_desc_get_currency_desc(l_glaa001) RETURNING l_currency_desc
#          WHEN '2'
#             CALL s_desc_get_currency_desc(l_glaa016) RETURNING l_currency_desc
#          WHEN '3'
#             CALL s_desc_get_currency_desc(l_glaa020) RETURNING l_currency_desc
#       END CASE
#       IF NOT cl_null(l_currency_desc) THEN
#          LET sr.currency_desc=sr.currency_desc,'(',l_currency_desc,')'
#       END IF
#       #160128-00013#1-mark-(S)
##       #将单头所有栏位值组合为唯一KEY值
##       LET l_xcbk002=sr.xcbk002
##       LET l_xcbk003=sr.xcbk003
##       LET sr.mainkey=sr.xcbkcomp,'-',sr.xcbkld,'-',l_xcbk002,'-',l_xcbk003,'-',sr.xcbk005,'-',sr.xcbk001,'-',sr.currency CLIPPED
#       #160128-00013#1-mark-(E)
#       
#       IF NOT cl_null(sr.xcbkcomp_desc) THEN     
#          LET sr.xcbkcomp_desc=sr.xcbkcomp,'(',sr.xcbkcomp_desc,')'
#       ELSE
#          LET sr.xcbkcomp_desc=sr.xcbkcomp
#       END IF
#       IF NOT cl_null(sr.xcbkld_desc) THEN
#          LET sr.xcbkld_desc=sr.xcbkld,'(',sr.xcbkld_desc,')'
#       ELSE
#          LET sr.xcbkld_desc=sr.xcbkld
#       END IF
#       LET sr.xcbk004_desc=sr.xcbk004,":",sr.xcbk004_desc
#
#       #add--151217-00012#1 By shiun--(S)
#       LET l_success = 'Y'
#       IF cl_null(l_mainkey) THEN
#          LET l_mainkey = sr.mainkey
#          LET l_xcbk004 = sr.xcbk004
#          LET l_xcbk202_sum = l_xcbk202_sum + sr.xcbk202
#          LET l_xcbk100_sum = l_xcbk100_sum + sr.xcbk100
#          LET l_xcbk202_total = l_xcbk202_total + sr.xcbk202
#          LET l_xcbk100_total = l_xcbk100_total + sr.xcbk100
#       ELSE
#          IF l_mainkey = sr.mainkey THEN
#             IF l_xcbk004 = sr.xcbk004 THEN
#                LET l_xcbk202_sum = l_xcbk202_sum + sr.xcbk202
#                LET l_xcbk100_sum = l_xcbk100_sum + sr.xcbk100
#                LET l_xcbk202_total = l_xcbk202_total + sr.xcbk202
#                LET l_xcbk100_total = l_xcbk100_total + sr.xcbk100
#             ELSE
#                LET l_xcbk006 = l_xcbk004,cl_getmsg("axc-00205",g_lang)
#                EXECUTE insert_prep USING '','','','','','','','','','','','','','',l_xcbk006,'','','','',l_xcbk202_sum,l_xcbk100_sum,'','',l_mainkey
#                LET l_xcbk202_sum = sr.xcbk202
#                LET l_xcbk100_sum = sr.xcbk100
#                LET l_xcbk004 = sr.xcbk004
#             END IF
#          ELSE
#             LET l_xcbk006 = l_xcbk004,cl_getmsg("axc-00205",g_lang)
#             EXECUTE insert_prep USING '','','','','','','','','','','','','','',l_xcbk006,'','','','',l_xcbk202_sum,l_xcbk100_sum,'','',l_mainkey
#             LET l_xcbk202_sum = sr.xcbk202
#             LET l_xcbk100_sum = sr.xcbk100
#             LET l_xcbk004 = sr.xcbk004
#             LET l_cnt = l_cnt + 1 #160128-00013#1-add
#             LET l_xcbk006 = cl_getmsg("axc-00204",g_lang)
#             EXECUTE insert_prep USING '','','','','','','','','','','','','','',l_xcbk006,'','','','',l_xcbk202_total,l_xcbk100_total,'','',l_mainkey
#             LET l_xcbk202_total = sr.xcbk202
#             LET l_xcbk100_total = sr.xcbk100
#             LET l_mainkey = sr.mainkey
#          END IF
#       END IF
#       #add--151217-00012#1 By shiun--(E)       
       #160408-00004#1-mark-(E)
       
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.xcbkcomp_desc,sr.xcbkld_desc,sr.xcbk002,sr.xcbk003,sr.l_xcbk002_1,sr.l_xcbk003_1,sr.xcbk001_desc,sr.xcbk005_desc,sr.currency_desc,sr.xcbk004,sr.xcbk004_desc,sr.xcbk006,sr.sfaasite,sr.sfaasite_desc,sr.xcbk007,sr.xcbk007_desc,sr.xcbk202,sr.xcbk100,sr.xcbk101,sr.xcbkent,sr.mainkey,sr.l_cnt
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "axcq202_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
     
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    #160408-00004#1-mark-(S)
#    #add--151217-00012#1 By shiun--(S)
#    IF l_success = 'Y' THEN
#       LET l_cnt = l_cnt + 1 #160128-00013#1-add
#       LET l_xcbk006 = l_xcbk004,cl_getmsg("axc-00205",g_lang)
#       EXECUTE insert_prep USING '','','','','','','','','','','','','','',l_xcbk006,'','','','',l_xcbk202_sum,l_xcbk100_sum,'','',l_mainkey
#       LET l_cnt = l_cnt + 1 #160128-00013#1-add
#       LET l_xcbk006 = cl_getmsg("axc-00204",g_lang)
#       EXECUTE insert_prep USING '','','','','','','','','','','','','','',l_xcbk006,'','','','',l_xcbk202_total,l_xcbk100_total,'','',l_mainkey
#    END IF
#    #add--151217-00012#1 By shiun--(E)
    #160408-00004#1-mark-(E)
    #160408-00004#1-add-(S)
    #不顯示單位成本欄位
    IF tm.show = 'N' THEN
       LET g_xgrid.visible_column = "xcbk101"
    END IF
    #160408-00004#1-add-(E)  
    #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="axcq202_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION axcq202_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"

#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"

#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    
    #end add-point:rep_data.after
END FUNCTION
 
{</section>}
 
{<section id="axcq202_x01.other_function" readonly="Y" >}

 
{</section>}
 
