#該程式未解開Section, 採用最新樣板產出!
{<section id="axcr202_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:1(2016-04-07 13:53:56), PR版次:0001(2016-04-07 15:23:40)
#+ Customerized Version.: SD版次:(), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000023
#+ Filename...: axcr202_x01
#+ Description: 工時費用統計
#+ Creator....: 07024(2016-04-06 15:49:43)
#+ Modifier...: 07024 -SD/PR- 07024
 
{</section>}
 
{<section id="axcr202_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:7)
#add-point:填寫註解說明

#end add-point
#add-point:填寫註解說明

#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING                   #where condition
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"

#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"

#end add-point
 
{</section>}
 
{<section id="axcr202_x01.main" readonly="Y" >}
PUBLIC FUNCTION axcr202_x01(p_arg1)
DEFINE  p_arg1 STRING                  #tm.wc  where condition
#add-point:init段define(客製用) name="component.define_customerization"

#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"

#end add-point
 
   LET tm.wc = p_arg1
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "axcr202_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL axcr202_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL axcr202_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL axcr202_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL axcr202_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL axcr202_x01_rep_data()
 
END FUNCTION
 
{</section>}
 
{<section id="axcr202_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION axcr202_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "l_xcbjcomp_ooefl003.type_t.chr500,l_xcbjld_glaal002.type_t.chr500,xcbj002.xcbj_t.xcbj002,xcbj003.xcbj_t.xcbj003,l_xcbj001_xcatl003.type_t.chr500,xcbj004.xcbj_t.xcbj004,l_xcbj005_gzcbl004.type_t.chr500,l_xcbj006_gzcbl004.type_t.chr500,l_xcbj010_gzcbl004.type_t.chr500,l_xcbj011_glacl004.type_t.chr500,xcbj021.xcbj_t.xcbj021,xcbj020.xcbj_t.xcbj020,xcbj101.xcbj_t.xcbj101,xcbj102.xcbj_t.xcbj102,xcbj103.xcbj_t.xcbj103,xcbj104.xcbj_t.xcbj104,xcbj105.xcbj_t.xcbj105,l_key.type_t.chr500" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   
   #end add-point:create_tmp.after
END FUNCTION
 
{</section>}
 
{<section id="axcr202_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION axcr202_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"

#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"

#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION
 
{</section>}
 
{<section id="axcr202_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION axcr202_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"

#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"

#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   LET g_select = " SELECT 
                    CASE WHEN ooefl003 IS NULL THEN xcbjcomp ELSE xcbjcomp||'.'||ooefl003 END,
                    CASE WHEN glaal002 IS NULL THEN xcbjld ELSE xcbjld||'.'||glaal002 END,
                    xcbj002,xcbj003,
                    CASE WHEN xcatl003 IS NULL THEN xcbj001 ELSE xcbj001||'.'||xcatl003 END,
                    xcbj004,
                    CASE WHEN S1.gzcbl004 IS NULL THEN xcbj005 ELSE xcbj005||':'||S1.gzcbl004 END,
                    CASE WHEN S2.gzcbl004 IS NULL THEN xcbj006 ELSE xcbj006||':'||S2.gzcbl004 END,
                    CASE WHEN S3.gzcbl004 IS NULL THEN xcbj010 ELSE xcbj010||':'||S3.gzcbl004 END,
                    CASE WHEN x.glacl004  IS NULL THEN xcbj011 ELSE xcbj011||'.'||x.glacl004  END,
                    xcbj021,xcbj020,xcbj101,xcbj102,xcbj103,xcbj104,xcbj105,
                    trim(xcbjcomp)||'-'||trim(xcbjld)||'-'||trim(xcbj002)||'-'||trim(xcbj003)||'-'||trim(xcbj001) "


#   #end add-point
#   LET g_select = " SELECT trim(xcbjcomp)||'.'||trim((SELECT ooefl003 FROM ooefl_t WHERE ooefl_t.ooeflent = xcbj_t.xcbjent AND ooefl_t.ooefl001 = xcbj_t.xcbjcomp AND ooefl_t.ooefl002 = '" , 
#       g_dlang,"'" ,")),trim(xcbjld)||'.'||trim((SELECT glaal002 FROM glaal_t WHERE glaal_t.glaalent = xcbj_t.xcbjent AND glaal_t.glaalld = xcbj_t.xcbjld AND glaal_t.glaal001 = '" , 
#       g_dlang,"'" ,")),xcbj002,xcbj003,trim(xcbj001)||'.'||trim(xcatl003),xcbj004,NULL,NULL,NULL,NULL, 
#       xcbj021,xcbj020,xcbj101,xcbj102,xcbj103,xcbj104,xcbj105,NULL"
# 
#   #add-point:sel_prep g_from name="sel_prep.g_from"
   LET g_from = " FROM xcbj_t LEFT OUTER JOIN glaal_t ON glaal_t.glaalent = xcbj_t.xcbjent AND glaal_t.glaalld = xcbj_t.xcbjld AND glaal_t.glaal001 = '" ,g_dlang,"'" , 
                "             LEFT OUTER JOIN ooefl_t ON ooefl_t.ooeflent = xcbj_t.xcbjent AND ooefl_t.ooefl001 = xcbj_t.xcbjcomp AND ooefl_t.ooefl002 = '" ,g_dlang,"'" , 
                "             LEFT OUTER JOIN xcatl_t ON xcatl_t.xcatlent = xcbj_t.xcbjent AND xcatl_t.xcatl001 = xcbj_t.xcbj001 AND xcatl_t.xcatl002 = '" ,g_dlang,"'" ,
                "             LEFT OUTER JOIN gzcbl_t S1 ON S1.gzcbl001 = '8908'  AND S1.gzcbl002 = xcbj_t.xcbj005 AND S1.gzcbl003 = '" ,g_dlang,"'" , 
                "             LEFT OUTER JOIN gzcbl_t S2 ON S2.gzcbl001 = '8909'  AND S2.gzcbl002 = xcbj_t.xcbj006 AND S2.gzcbl003 = '" ,g_dlang,"'" ,
                "             LEFT OUTER JOIN gzcbl_t S3 ON S3.gzcbl001 = '8014'  AND S3.gzcbl002 = xcbj_t.xcbj010 AND S3.gzcbl003 = '" ,g_dlang,"'",
                "             LEFT OUTER JOIN (SELECT glaa_t.*,glacl002,glacl004 FROM  glaa_t  
                                               LEFT OUTER JOIN glacl_t ON glaa_t.glaaent = glacl_t.glaclent AND glaa_t.glaa004 = glacl_t.glacl001 AND glacl_t.glacl003 = '",g_dlang,"' ) x ",
                "                          ON xcbjent = x.glaaent AND xcbjld = x.glaald AND xcbj_t.xcbj011 = x.glacl002 "
                
#   #end add-point
#    LET g_from = " FROM xcbj_t"
# 
#   #add-point:sel_prep g_where name="sel_prep.g_where"
 
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("xcbj_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   LET g_sql = g_sql CLIPPED," ORDER BY xcbj004,xcbj005,xcbj006"
   #end add-point
   PREPARE axcr202_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE axcr202_x01_curs CURSOR FOR axcr202_x01_prepare
 
END FUNCTION
 
{</section>}
 
{<section id="axcr202_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION axcr202_x01_ins_data()
DEFINE sr RECORD 
   l_xcbjcomp_ooefl003 LIKE type_t.chr500, 
   l_xcbjld_glaal002 LIKE type_t.chr500, 
   xcbj002 LIKE xcbj_t.xcbj002, 
   xcbj003 LIKE xcbj_t.xcbj003, 
   l_xcbj001_xcatl003 LIKE type_t.chr500, 
   xcbj004 LIKE xcbj_t.xcbj004, 
   l_xcbj005_gzcbl004 LIKE type_t.chr500, 
   l_xcbj006_gzcbl004 LIKE type_t.chr500, 
   l_xcbj010_gzcbl004 LIKE type_t.chr500, 
   l_xcbj011_glacl004 LIKE type_t.chr500, 
   xcbj021 LIKE xcbj_t.xcbj021, 
   xcbj020 LIKE xcbj_t.xcbj020, 
   xcbj101 LIKE xcbj_t.xcbj101, 
   xcbj102 LIKE xcbj_t.xcbj102, 
   xcbj103 LIKE xcbj_t.xcbj103, 
   xcbj104 LIKE xcbj_t.xcbj104, 
   xcbj105 LIKE xcbj_t.xcbj105, 
   l_key LIKE type_t.chr500
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"

#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"

#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH axcr202_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.l_xcbjcomp_ooefl003,sr.l_xcbjld_glaal002,sr.xcbj002,sr.xcbj003,sr.l_xcbj001_xcatl003,sr.xcbj004,sr.l_xcbj005_gzcbl004,sr.l_xcbj006_gzcbl004,sr.l_xcbj010_gzcbl004,sr.l_xcbj011_glacl004,sr.xcbj021,sr.xcbj020,sr.xcbj101,sr.xcbj102,sr.xcbj103,sr.xcbj104,sr.xcbj105,sr.l_key
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "axcr202_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    
    #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="axcr202_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION axcr202_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"

#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"

#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    
    #end add-point:rep_data.after
END FUNCTION
 
{</section>}
 
{<section id="axcr202_x01.other_function" readonly="Y" >}

 
{</section>}
 
