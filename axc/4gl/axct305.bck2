#該程式已解開Section, 不再透過樣板產出!
{<section id="axct305.description" >}
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000020
#+ 
#+ Filename...: axct305
#+ Description: 庫存入項成本次要素開帳作業
#+ Creator....: 00537(2014/08/19)
#+ Modifier...: 00537(2014/09/12) -SD/PR- 02040
#+ Buildtype..: 應用 i07 樣板自動產生
#+ 以上段落由子樣板a00產生
 
{</section>}
 
{<section id="axct305.global" >}
#160318-00025#53 2016/04/27 By 07673   將重複內容的錯誤訊息置換為公用錯誤訊息
#160826-00024#1  2016/08/31 By 02295   单身的【成本次要素】栏位需要开窗
#160802-00020#5  2016/10/12 By 02040   增加帳套權限管控、法人權限管控
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xcdb_m        RECORD
       xcdbcomp LIKE xcdb_t.xcdbcomp, 
   xcdbcomp_desc LIKE type_t.chr80, 
   xcdb004 LIKE xcdb_t.xcdb004, 
   xcdb005 LIKE xcdb_t.xcdb005, 
   xcdbld LIKE xcdb_t.xcdbld, 
   xcdbld_desc LIKE type_t.chr80, 
   xcdb003 LIKE xcdb_t.xcdb003, 
   xcdb003_desc LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xcdb_d        RECORD
       xcdb001 LIKE xcdb_t.xcdb001, 
   xcdb006 LIKE xcdb_t.xcdb006, 
   xcdb007 LIKE xcdb_t.xcdb007, 
   xcdb008 LIKE xcdb_t.xcdb008, 
   xcdb009 LIKE xcdb_t.xcdb009, 
   xcdb011 LIKE xcdb_t.xcdb011, 
   xcdb010 LIKE xcdb_t.xcdb010, 
   xcdb002 LIKE xcdb_t.xcdb002, 
   xcdb101 LIKE xcdb_t.xcdb101, 
   xcdb102 LIKE xcdb_t.xcdb102
       END RECORD
PRIVATE TYPE type_g_xcdb2_d RECORD
       xcdb001 LIKE xcdb_t.xcdb001, 
   xcdb006 LIKE xcdb_t.xcdb006, 
   xcdb007 LIKE xcdb_t.xcdb007, 
   xcdb008 LIKE xcdb_t.xcdb008, 
   xcdb009 LIKE xcdb_t.xcdb009, 
   xcdb011 LIKE xcdb_t.xcdb011, 
   xcdb010 LIKE xcdb_t.xcdb010, 
   xcdb002 LIKE xcdb_t.xcdb002, 
   xcdb101 LIKE xcdb_t.xcdb101, 
   xcdb102 LIKE xcdb_t.xcdb102
       END RECORD
PRIVATE TYPE type_g_xcdb3_d RECORD
       xcdb001 LIKE xcdb_t.xcdb001, 
   xcdb006 LIKE xcdb_t.xcdb006, 
   xcdb007 LIKE xcdb_t.xcdb007, 
   xcdb008 LIKE xcdb_t.xcdb008, 
   xcdb009 LIKE xcdb_t.xcdb009, 
   xcdb011 LIKE xcdb_t.xcdb011, 
   xcdb010 LIKE xcdb_t.xcdb010, 
   xcdb002 LIKE xcdb_t.xcdb002, 
   xcdb101 LIKE xcdb_t.xcdb101, 
   xcdb102 LIKE xcdb_t.xcdb102
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_xcdb_m          type_g_xcdb_m
DEFINE g_xcdb_m_t        type_g_xcdb_m
DEFINE g_xcdb_m_o        type_g_xcdb_m
 
   DEFINE g_xcdb004_t LIKE xcdb_t.xcdb004
DEFINE g_xcdb005_t LIKE xcdb_t.xcdb005
DEFINE g_xcdbld_t LIKE xcdb_t.xcdbld
DEFINE g_xcdb003_t LIKE xcdb_t.xcdb003
 
 
DEFINE g_xcdb_d          DYNAMIC ARRAY OF type_g_xcdb_d
DEFINE g_xcdb_d_t        type_g_xcdb_d
DEFINE g_xcdb_d_o        type_g_xcdb_d
DEFINE g_xcdb2_d   DYNAMIC ARRAY OF type_g_xcdb2_d
DEFINE g_xcdb2_d_t type_g_xcdb2_d
DEFINE g_xcdb2_d_o type_g_xcdb2_d
DEFINE g_xcdb3_d   DYNAMIC ARRAY OF type_g_xcdb3_d
DEFINE g_xcdb3_d_t type_g_xcdb3_d
DEFINE g_xcdb3_d_o type_g_xcdb3_d
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_xcdbld LIKE xcdb_t.xcdbld,
      b_xcdb003 LIKE xcdb_t.xcdb003,
      b_xcdb004 LIKE xcdb_t.xcdb004,
      b_xcdb005 LIKE xcdb_t.xcdb005
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_add_browse          STRING                        #新增填充用WC
 
#add-point:自定義模組變數(Module Variable)
#160802-00020#5-s-add
DEFINE g_wc_cs_ld            STRING
DEFINE g_wc_cs_comp          STRING
#160802-00020#5-e-add
#end add-point
 
#add-point:傳入參數說明(global.argv)

#end add-point
 
{</section>}
 
{<section id="axct305.main" >}
#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:作業初始化
   #160802-00020#5-s-add
   CALL s_fin_create_account_center_tmp()                      #展組織下階成員所需之暫存檔 
   CALL s_fin_azzi800_sons_query(g_today)
   CALL s_fin_account_center_ld_str() RETURNING g_wc_cs_ld
   CALL s_fin_get_wc_str(g_wc_cs_ld)  RETURNING g_wc_cs_ld
   CALL s_axc_get_authcomp() RETURNING g_wc_cs_comp            #抓取使用者有拜訪權限據點的對應法人  
   #160802-00020#5-e-add 
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   
   #end add-point
   LET g_forupd_sql = " SELECT xcdbcomp,'',xcdb004,xcdb005,xcdbld,'',xcdb003,''", 
                      " FROM xcdb_t",
                      " WHERE xcdbent= ? AND xcdbld=? AND xcdb003=? AND xcdb004=? AND xcdb005=? FOR  
                          UPDATE"
   #add-point:SQL_define
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axct305_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.xcdbcomp,t0.xcdb004,t0.xcdb005,t0.xcdbld,t0.xcdb003,t1.ooefl003 ,t2.glaal002 , 
       t3.xcatl003",
               " FROM xcdb_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.xcdbcomp AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN glaal_t t2 ON t2.glaalent='"||g_enterprise||"' AND t2.glaalld=t0.xcdbld AND t2.glaal001='"||g_dlang||"' ",
               " LEFT JOIN xcatl_t t3 ON t3.xcatlent='"||g_enterprise||"' AND t3.xcatl001=t0.xcdb003 AND t3.xcatl002='"||g_dlang||"' ",
 
               " WHERE t0.xcdbent = '" ||g_enterprise|| "' AND t0.xcdbld = ? AND t0.xcdb003 = ? AND t0.xcdb004 = ? AND t0.xcdb005 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   
   #end add-point
   PREPARE axct305_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axct305 WITH FORM cl_ap_formpath("axc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axct305_init()   
 
      #進入選單 Menu (="N")
      CALL axct305_ui_dialog() 
      
      #add-point:畫面關閉前
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axct305
      
   END IF 
   
   CLOSE axct305_cl
   
   
 
   #add-point:作業離開前
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
 
{</section>}
 
{<section id="axct305.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axct305_init()
   #add-point:init段define
   
   #end add-point    
  
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化
   
   #end add-point
   
   CALL axct305_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="axct305.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axct305_ui_dialog()
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   #add-point:ui_dialog段define
   
   #end add-point  
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   
   #add-point:ui_dialog段before dialog 
   
   #end add-point
   
   WHILE TRUE
   
      CALL axct305_browser_fill("")
 
      
      ##判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      #IF g_state = "Y" THEN
      #   FOR li_idx = 1 TO g_browser.getLength()
      #      IF g_browser[li_idx].b_xcdbld = g_xcdbld_t
      #         AND g_browser[li_idx].b_xcdb003 = g_xcdb003_t
      #         AND g_browser[li_idx].b_xcdb004 = g_xcdb004_t
      #         AND g_browser[li_idx].b_xcdb005 = g_xcdb005_t
 
      #         THEN
      #         LET g_current_row = li_idx
      #         EXIT FOR
      #      END IF
      #   END FOR
      #   LET g_state = ""
      #END IF
      
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_xcdb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL axct305_ui_detailshow()
               
               #add-point:page1自定義行為
               
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為
            
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_xcdb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL axct305_ui_detailshow()
               
               #add-point:page1自定義行為
               
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)      
            
            
         
            #add-point:page2自定義行為
            
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_xcdb3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL axct305_ui_detailshow()
               
               #add-point:page1自定義行為
               
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)      
            
            
         
            #add-point:page3自定義行為
            
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
         
         #end add-point
         
         
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axct305_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axct305_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2
            
            #end add-point
 
         
         
         ON ACTION first
            CALL axct305_fetch('F')
            LET g_current_row = g_current_idx         
          
         ON ACTION previous
            CALL axct305_fetch('P')
            LET g_current_row = g_current_idx
          
         ON ACTION jump
            CALL axct305_fetch('/')
            LET g_current_row = g_current_idx
        
         ON ACTION next
            CALL axct305_fetch('N')
            LET g_current_row = g_current_idx
         
         ON ACTION last
            CALL axct305_fetch('L')
            LET g_current_row = g_current_idx
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xcdb001
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axct305_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axct305_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CLEAR FORM
               ELSE
                  CALL axct305_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axct305_modify()
               #add-point:ON ACTION modify
               
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axct305_modify()
               #add-point:ON ACTION modify_detail
               
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axct305_delete()
               #add-point:ON ACTION delete
               
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION import_format
            LET g_action_choice="import_format"
            IF cl_auth_chk_act("import_format") THEN
               
               #add-point:ON ACTION import_format
               CALL axct305_01()
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axct305_insert()
               #add-point:ON ACTION insert
               
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axct305_reproduce()
               #add-point:ON ACTION reproduce
               
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axct305_query()
               #add-point:ON ACTION query
               
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION import
            LET g_action_choice="import"
            IF cl_auth_chk_act("import") THEN
               
               #add-point:ON ACTION import
               CALL axct305_02()
               #END add-point
               
            END IF
 
 
         
         
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL axct305_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axct305_set_pk_array()
            #add-point:ON ACTION agendum
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axct305_set_pk_array()
            #add-point:ON ACTION followup
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
         CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
 
{</section>}
 
{<section id="axct305.browser_search" >}
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axct305_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "searchcol" 
      LET g_errparam.code   = "std-00005" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1"
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY xcdbld"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL axct305_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axct305.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axct305_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   
   #end add-point    
   
   #add-point:browser_fill段動作開始前
   
   #end add-point    
 
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "xcdbld"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF l_wc2 <> " 1=1" OR NOT cl_null(l_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xcdbld ",
                      ", xcdb003 ",
                      ", xcdb004 ",
                      ", xcdb005 ",
 
                      " FROM xcdb_t ",
                      " ",
                      " ",
 
                      " WHERE xcdbent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xcdb_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xcdbld ",
                      ", xcdb003 ",
                      ", xcdb004 ",
                      ", xcdb005 ",
 
                      " FROM xcdb_t ",
                      " ",
                      " ",
                      " WHERE xcdbent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xcdb_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前
  #160802-00020#5-s-add  
   #---增加帳套權限控管
   IF NOT cl_null(g_wc_cs_ld) THEN
      LET l_sub_sql = l_sub_sql , " AND xcdbld IN ",g_wc_cs_ld
   END IF
   #---增加法人過濾條件
   IF NOT cl_null(g_wc_cs_comp) THEN
      LET l_sub_sql = l_sub_sql," AND xcdbcomp IN ",g_wc_cs_comp
   END IF  
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
  #160802-00020#5-e-add
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse AND g_error_show = 1 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_browser_cnt 
      LET g_errparam.code   = 9035
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      LET g_browser_cnt = g_max_browse
   END IF
   LET g_error_show = 0
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xcdb_m.* TO NULL
      CALL g_xcdb_d.clear()        
      CALL g_xcdb2_d.clear() 
      CALL g_xcdb3_d.clear() 
 
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_browser.getLength() + 1
      LET g_add_browse = ""
   END IF
 
   #依照t0.xcdbld,t0.xcdb003,t0.xcdb004,t0.xcdb005 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT t0.xcdbld,t0.xcdb003,t0.xcdb004,t0.xcdb005",
                " FROM xcdb_t t0",
 
                
                " WHERE t0.xcdbent = '" ||g_enterprise|| "' AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("xcdb_t")
 
   #add-point:browser_fill,sql_rank前
   #160802-00020#5-s-add
   #---增加帳套權限控管
   IF NOT cl_null(g_wc_cs_ld) THEN
      LET g_sql = g_sql , " AND t0.xcdbld IN ",g_wc_cs_ld
   END IF
   #---增加法人過濾條件
   IF NOT cl_null(g_wc_cs_comp) THEN
      LET g_sql = g_sql," AND t0.xcdbcomp IN ",g_wc_cs_comp
   END IF  
   #160802-00020#5-e-add
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前
   
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"xcdb_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   #CALL g_browser.clear()
   #LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_xcdbld,g_browser[g_cnt].b_xcdb003,g_browser[g_cnt].b_xcdb004, 
       g_browser[g_cnt].b_xcdb005 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      
      #end add-point    
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_xcdb_m.* TO NULL
      CALL g_xcdb_d.clear()
      CALL g_xcdb2_d.clear()
      CALL g_xcdb3_d.clear()
 
      #add-point:browser_fill段after_clear
      
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
 
{</section>}
 
{<section id="axct305.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axct305_ui_headershow()
   #add-point:ui_headershow段define
   
   #end add-point    
   
   LET g_xcdb_m.xcdbld = g_browser[g_current_idx].b_xcdbld   
   LET g_xcdb_m.xcdb003 = g_browser[g_current_idx].b_xcdb003   
   LET g_xcdb_m.xcdb004 = g_browser[g_current_idx].b_xcdb004   
   LET g_xcdb_m.xcdb005 = g_browser[g_current_idx].b_xcdb005   
 
   EXECUTE axct305_master_referesh USING g_xcdb_m.xcdbld,g_xcdb_m.xcdb003,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005 INTO g_xcdb_m.xcdbcomp, 
       g_xcdb_m.xcdb004,g_xcdb_m.xcdb005,g_xcdb_m.xcdbld,g_xcdb_m.xcdb003,g_xcdb_m.xcdbcomp_desc,g_xcdb_m.xcdbld_desc, 
       g_xcdb_m.xcdb003_desc
   CALL axct305_show()
   
END FUNCTION
 
{</section>}
 
{<section id="axct305.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axct305_ui_detailshow()
   #add-point:ui_detailshow段define
   
   #end add-point    
   
   #add-point:ui_detailshow段before
   
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
 
      #add-point:ui_detailshow段more
      
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after
   
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="axct305.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axct305_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xcdbld = g_xcdb_m.xcdbld 
         AND g_browser[l_i].b_xcdb003 = g_xcdb_m.xcdb003 
         AND g_browser[l_i].b_xcdb004 = g_xcdb_m.xcdb004 
         AND g_browser[l_i].b_xcdb005 = g_xcdb_m.xcdb005 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser.getLength()
   #IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
   #   LET g_current_row = g_browser_cnt
   #END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
 
{</section>}
 
{<section id="axct305.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axct305_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define

   #end add-point    
 
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_xcdb_m.* TO NULL
   CALL g_xcdb_d.clear()
   CALL g_xcdb2_d.clear()
   CALL g_xcdb3_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外

   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xcdbcomp,xcdb004,xcdb005,xcdbld,xcdb003
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct

            #end add-point 
            
                 #此段落由子樣板a01產生
         BEFORE FIELD xcdbcomp
            #add-point:BEFORE FIELD xcdbcomp

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdbcomp
            
            #add-point:AFTER FIELD xcdbcomp

            #END add-point
            
 
         #Ctrlp:construct.c.xcdbcomp
         ON ACTION controlp INFIELD xcdbcomp
            #add-point:ON ACTION controlp INFIELD xcdbcomp
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
           #160802-00020#5-s-add 
            #增加法人過濾條件
            IF NOT cl_null(g_wc_cs_comp) THEN
               LET g_qryparam.where = " ooef001 IN ",g_wc_cs_comp
            END IF
           #160802-00020#5-e-add  			   
            CALL q_ooef001_2()                      #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdbcomp  #顯示到畫面上

            NEXT FIELD xcdbcomp                     #返回原欄位
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdb004
            #add-point:BEFORE FIELD xcdb004

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb004
            
            #add-point:AFTER FIELD xcdb004

            #END add-point
            
 
         #Ctrlp:construct.c.xcdb004
         ON ACTION controlp INFIELD xcdb004
            #add-point:ON ACTION controlp INFIELD xcdb004

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdb005
            #add-point:BEFORE FIELD xcdb005

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb005
            
            #add-point:AFTER FIELD xcdb005

            #END add-point
            
 
         #Ctrlp:construct.c.xcdb005
         ON ACTION controlp INFIELD xcdb005
            #add-point:ON ACTION controlp INFIELD xcdb005

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdbld
            #add-point:BEFORE FIELD xcdbld

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdbld
            
            #add-point:AFTER FIELD xcdbld

            #END add-point
            
 
         #Ctrlp:construct.c.xcdbld
         ON ACTION controlp INFIELD xcdbld
            #add-point:ON ACTION controlp INFIELD xcdbld
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            #160802-00020#5-s-add
            #增加帳套權限控制
            IF NOT cl_null(g_wc_cs_ld) THEN
               LET g_qryparam.where = " glaald IN ",g_wc_cs_ld
            END IF
            #160802-00020#5-e-add            
            CALL q_glaa()                         #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdbld  #顯示到畫面上
            NEXT FIELD xcdbld                     #返回原欄位
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdb003
            #add-point:BEFORE FIELD xcdb003

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb003
            
            #add-point:AFTER FIELD xcdb003

            #END add-point
            
 
         #Ctrlp:construct.c.xcdb003
         ON ACTION controlp INFIELD xcdb003
            #add-point:ON ACTION controlp INFIELD xcdb003

            #END add-point
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON xcdb001,xcdb006,xcdb007,xcdb008,xcdb009,xcdb011,xcdb010,xcdb002,xcdb101,xcdb102
           FROM s_detail1[1].xcdb001,s_detail1[1].xcdb006,s_detail1[1].xcdb007,s_detail1[1].xcdb008, 
                s_detail1[1].xcdb009,s_detail1[1].xcdb011,s_detail1[1].xcdb010, 
                s_detail1[1].xcdb002,s_detail1[1].xcdb101,s_detail1[1].xcdb102
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct

            #end add-point 
            
         #單身公用欄位開窗相關處理
         
           
         #單身一般欄位開窗相關處理
                  #此段落由子樣板a01產生
         BEFORE FIELD xcdb001
            #add-point:BEFORE FIELD xcdb001

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb001
            
            #add-point:AFTER FIELD xcdb001

            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcdb001
         ON ACTION controlp INFIELD xcdb001
            #add-point:ON ACTION controlp INFIELD xcdb001

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdb006
            #add-point:BEFORE FIELD xcdb006

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb006
            
            #add-point:AFTER FIELD xcdb006

            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcdb006
         ON ACTION controlp INFIELD xcdb006
            #add-point:ON ACTION controlp INFIELD xcdb006

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdb007
            #add-point:BEFORE FIELD xcdb007

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb007
            
            #add-point:AFTER FIELD xcdb007

            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcdb007
         ON ACTION controlp INFIELD xcdb007
            #add-point:ON ACTION controlp INFIELD xcdb007

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdb008
            #add-point:BEFORE FIELD xcdb008

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb008
            
            #add-point:AFTER FIELD xcdb008

            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcdb008
         ON ACTION controlp INFIELD xcdb008
            #add-point:ON ACTION controlp INFIELD xcdb008

            #END add-point
 
 

 

 

 
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdb009
            #add-point:BEFORE FIELD xcdb009

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb009
            
            #add-point:AFTER FIELD xcdb009

            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcdb009
         ON ACTION controlp INFIELD xcdb009
            #add-point:ON ACTION controlp INFIELD xcdb009

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdb010
            #add-point:BEFORE FIELD xcdb010

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb010
            
            #add-point:AFTER FIELD xcdb010

            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcdb010
         ON ACTION controlp INFIELD xcdb010
            #add-point:ON ACTION controlp INFIELD xcdb010
            #160826-00024#1---add---s
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            CALL q_xcau001()                                #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdb010              #顯示到畫面上 
            NEXT FIELD xcdb010 
            #160826-00024#1---add---e
            #END add-point
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

          #此段落由子樣板a01產生
         BEFORE FIELD xcdb002
            #add-point:BEFORE FIELD xcdb002

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb002
            
            #add-point:AFTER FIELD xcdb002

            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcdb002
         ON ACTION controlp INFIELD xcdb002
            #add-point:ON ACTION controlp INFIELD xcdb002

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdb101
            #add-point:BEFORE FIELD xcdb101

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb101
            
            #add-point:AFTER FIELD xcdb101

            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcdb101
         ON ACTION controlp INFIELD xcdb101
            #add-point:ON ACTION controlp INFIELD xcdb101

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdb102
            #add-point:BEFORE FIELD xcdb102

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb102
            
            #add-point:AFTER FIELD xcdb102

            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcdb102
         ON ACTION controlp INFIELD xcdb102
            #add-point:ON ACTION controlp INFIELD xcdb102

 

     
            #add-point:AFTER FIELD lbl_xcdb102_3

 
            #add-point:ON ACTION controlp INFIELD lbl_xcdb102_3

            #END add-point
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct

      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog

         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct

   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
 
{</section>}
 
{<section id="axct305.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axct305_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   
   #end add-point   
 
   #add-point:query開始前
   
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xcdb_d.clear()
   CALL g_xcdb2_d.clear()
   CALL g_xcdb3_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axct305_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL axct305_browser_fill(g_wc)
      CALL axct305_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL axct305_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   ELSE
      CALL axct305_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION
 
{</section>}
 
{<section id="axct305.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axct305_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   
   #end add-point    
   
   #add-point:fetch段動作開始前
   
   #end add-point    
 
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L' 
         LET g_current_idx = g_header_cnt
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   CALL axct305_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xcdb_m.xcdbld = g_browser[g_current_idx].b_xcdbld
   LET g_xcdb_m.xcdb003 = g_browser[g_current_idx].b_xcdb003
   LET g_xcdb_m.xcdb004 = g_browser[g_current_idx].b_xcdb004
   LET g_xcdb_m.xcdb005 = g_browser[g_current_idx].b_xcdb005
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axct305_master_referesh USING g_xcdb_m.xcdbld,g_xcdb_m.xcdb003,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005 INTO g_xcdb_m.xcdbcomp, 
       g_xcdb_m.xcdb004,g_xcdb_m.xcdb005,g_xcdb_m.xcdbld,g_xcdb_m.xcdb003,g_xcdb_m.xcdbcomp_desc,g_xcdb_m.xcdbld_desc, 
       g_xcdb_m.xcdb003_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xcdb_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      INITIALIZE g_xcdb_m.* TO NULL
      RETURN
   END IF
   
   #LET g_data_owner =       
   #LET g_data_dept =   
   
   #保存單頭舊值
   LET g_xcdb_m_t.* = g_xcdb_m.*
   LET g_xcdb_m_o.* = g_xcdb_m.*
   
   #重新顯示   
   CALL axct305_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="axct305.insert" >}
#+ 資料新增
PRIVATE FUNCTION axct305_insert()
   #add-point:insert段define
   
   #end add-point    
   
   #add-point:insert段before
   
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_xcdb_d.clear()
   CALL g_xcdb2_d.clear()
   CALL g_xcdb3_d.clear()
 
 
   INITIALIZE g_xcdb_m.* LIKE xcdb_t.*             #DEFAULT 設定
   LET g_xcdbld_t = NULL
   LET g_xcdb003_t = NULL
   LET g_xcdb004_t = NULL
   LET g_xcdb005_t = NULL
 
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值
      
      #end add-point 
 
      CALL axct305_input("a")
      
      #add-point:單頭輸入後
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xcdb_m.* = g_xcdb_m_t.*
         CALL axct305_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xcdb_m.* TO NULL
         INITIALIZE g_xcdb_d TO NULL
         INITIALIZE g_xcdb2_d TO NULL
         INITIALIZE g_xcdb3_d TO NULL
 
         CALL axct305_show()
         RETURN
      END IF
    
      #CALL g_xcdb_d.clear()
      #CALL g_xcdb2_d.clear()
      #CALL g_xcdb3_d.clear()
 
      
      #add-point:單頭輸入後2
      
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_xcdbld_t = g_xcdb_m.xcdbld
   LET g_xcdb003_t = g_xcdb_m.xcdb003
   LET g_xcdb004_t = g_xcdb_m.xcdb004
   LET g_xcdb005_t = g_xcdb_m.xcdb005
 
   
   #組合新增資料的條件
   LET g_add_browse = " xcdbent = '" ||g_enterprise|| "' AND",
                      " xcdbld = '", g_xcdb_m.xcdbld CLIPPED, "' "
                      ," AND xcdb003 = '", g_xcdb_m.xcdb003 CLIPPED, "' "
                      ," AND xcdb004 = '", g_xcdb_m.xcdb004 CLIPPED, "' "
                      ," AND xcdb005 = '", g_xcdb_m.xcdb005 CLIPPED, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axct305_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
END FUNCTION
 
{</section>}
 
{<section id="axct305.modify" >}
#+ 資料修改
PRIVATE FUNCTION axct305_modify()
   #add-point:modify段define
   
   #end add-point    
   
   IF g_xcdb_m.xcdbld IS NULL
   OR g_xcdb_m.xcdb003 IS NULL
   OR g_xcdb_m.xcdb004 IS NULL
   OR g_xcdb_m.xcdb005 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
   
   EXECUTE axct305_master_referesh USING g_xcdb_m.xcdbld,g_xcdb_m.xcdb003,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005 INTO g_xcdb_m.xcdbcomp, 
       g_xcdb_m.xcdb004,g_xcdb_m.xcdb005,g_xcdb_m.xcdbld,g_xcdb_m.xcdb003,g_xcdb_m.xcdbcomp_desc,g_xcdb_m.xcdbld_desc, 
       g_xcdb_m.xcdb003_desc
 
   ERROR ""
  
   LET g_xcdbld_t = g_xcdb_m.xcdbld
   LET g_xcdb003_t = g_xcdb_m.xcdb003
   LET g_xcdb004_t = g_xcdb_m.xcdb004
   LET g_xcdb005_t = g_xcdb_m.xcdb005
 
   CALL s_transaction_begin()
   
   OPEN axct305_cl USING g_enterprise,g_xcdb_m.xcdbld
                                                       ,g_xcdb_m.xcdb003
                                                       ,g_xcdb_m.xcdb004
                                                       ,g_xcdb_m.xcdb005
 
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axct305_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      CLOSE axct305_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH axct305_cl INTO g_xcdb_m.xcdbcomp,g_xcdb_m.xcdbcomp_desc,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005, 
       g_xcdb_m.xcdbld,g_xcdb_m.xcdbld_desc,g_xcdb_m.xcdb003,g_xcdb_m.xcdb003_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_xcdb_m.xcdbld 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      CLOSE axct305_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   CALL s_transaction_end('Y','0')
 
   CALL axct305_show()
   WHILE TRUE
      LET g_xcdbld_t = g_xcdb_m.xcdbld
      LET g_xcdb003_t = g_xcdb_m.xcdb003
      LET g_xcdb004_t = g_xcdb_m.xcdb004
      LET g_xcdb005_t = g_xcdb_m.xcdb005
 
 
      #add-point:modify段修改前
      
      #end add-point
      
      CALL axct305_input("u")     #欄位更改
      
      #add-point:modify段修改後
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xcdb_m.* = g_xcdb_m_t.*
         CALL axct305_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_xcdb_m.xcdbld != g_xcdbld_t 
      OR g_xcdb_m.xcdb003 != g_xcdb003_t 
      OR g_xcdb_m.xcdb004 != g_xcdb004_t 
      OR g_xcdb_m.xcdb005 != g_xcdb005_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前
         
         #end add-point
         
         #更新單頭key值
         UPDATE xcdb_t SET xcdbld = g_xcdb_m.xcdbld
                                       , xcdb003 = g_xcdb_m.xcdb003
                                       , xcdb004 = g_xcdb_m.xcdb004
                                       , xcdb005 = g_xcdb_m.xcdb005
 
          WHERE xcdbent = g_enterprise AND xcdbld = g_xcdbld_t
            AND xcdb003 = g_xcdb003_t
            AND xcdb004 = g_xcdb004_t
            AND xcdb005 = g_xcdb005_t
 
         #add-point:單頭(偽)修改中
         
         #end add-point
         
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcdb_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcdb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
 
 
         
         #add-point:單頭(偽)修改後
         
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_xcdb_m.xcdbld,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE axct305_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_xcdb_m.xcdbld,'U')
 
   CALL axct305_b_fill("1=1")
   
END FUNCTION   
 
{</section>}
 
{<section id="axct305.input" >}
#+ 資料輸入
PRIVATE FUNCTION axct305_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define

   #end add-point    
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xcdb_m.xcdbcomp,g_xcdb_m.xcdbcomp_desc,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005,g_xcdb_m.xcdbld, 
       g_xcdb_m.xcdbld_desc,g_xcdb_m.xcdb003,g_xcdb_m.xcdb003_desc
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql

   #end add-point 
   LET g_forupd_sql = "SELECT xcdb001,xcdb006,xcdb007,xcdb008, 
       xcdb009,xcdb011,xcdb010,xcdb002,xcdb101,xcdb102  
       FROM xcdb_t WHERE xcdbent=? AND xcdbld=? AND xcdb003=? AND xcdb004=? AND xcdb005=? AND xcdb001=?  
       AND xcdb002=? AND xcdb006=? AND xcdb007=? AND xcdb008=? AND xcdb009=? AND xcdb010=? FOR UPDATE" 
 
   #add-point:input段define_sql

   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axct305_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axct305_set_entry(p_cmd)
   #add-point:set_entry後

   #end add-point
   CALL axct305_set_no_entry(p_cmd)
   #add-point:set_no_entry後

   #end add-point
 
   DISPLAY BY NAME g_xcdb_m.xcdbcomp,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005,g_xcdb_m.xcdbld,g_xcdb_m.xcdb003 
 
   
   LET lb_reproduce = FALSE
   
   #add-point:進入修改段前

   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="axct305.input.head" >}
   
      #單頭段
      INPUT BY NAME g_xcdb_m.xcdbcomp,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005,g_xcdb_m.xcdbld,g_xcdb_m.xcdb003  
 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前
            CALL axct305_default()
            #end add-point
          
                  #此段落由子樣板a02產生
         AFTER FIELD xcdbcomp
            
            #add-point:AFTER FIELD xcdbcomp
            IF NOT cl_null(g_xcdb_m.xcdbcomp) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xcdb_m_t.xcdbcomp IS NULL OR g_xcdb_m.xcdbcomp != g_xcdb_m_t.xcdbcomp)) THEN
                  IF NOT s_axc_chk_ld_comp(g_xcdb_m.xcdbcomp,g_xcdb_m.xcdbld) THEN
                     LET g_xcdb_m.xcdbcomp = g_xcdb_m_t.xcdbcomp
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcdb_m.xcdbcomp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcdb_m.xcdbcomp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcdb_m.xcdbcomp_desc  
 
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdbcomp
            #add-point:BEFORE FIELD xcdbcomp

            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcdbcomp
            #add-point:ON CHANGE xcdbcomp

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdb004
            #add-point:BEFORE FIELD xcdb004

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb004
            
            #add-point:AFTER FIELD xcdb004
            IF NOT cl_null(g_xcdb_m.xcdb004) THEN
               IF p_cmd ='a' OR (p_cmd ='u' AND (g_xcdb_m_t.xcdb004 IS NULL OR g_xcdb_m.xcdb004 != g_xcdb_m_t.xcdb004)) THEN
                  IF NOT s_axc_chk_year_period(g_xcdb_m.xcdbld,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005) THEN
                     LET g_xcdb_m.xcdb004 = g_xcdb_m_t.xcdb004
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  NOT cl_null(g_xcdb_m.xcdbld) AND NOT cl_null(g_xcdb_m.xcdb003) AND NOT cl_null(g_xcdb_m.xcdb004) AND NOT cl_null(g_xcdb_m.xcdb005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t  OR g_xcdb_m.xcdb003 != g_xcdb003_t  OR g_xcdb_m.xcdb004 != g_xcdb004_t  OR g_xcdb_m.xcdb005 != g_xcdb005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcdb004
            #add-point:ON CHANGE xcdb004

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdb005
            #add-point:BEFORE FIELD xcdb005

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb005
            
            #add-point:AFTER FIELD xcdb005
            IF NOT cl_null(g_xcdb_m.xcdb005) THEN
               IF p_cmd ='a' OR (p_cmd ='u' AND (g_xcdb_m_t.xcdb005 IS NULL OR g_xcdb_m.xcdb005 != g_xcdb_m_t.xcdb005)) THEN
                  IF NOT s_axc_chk_year_period(g_xcdb_m.xcdbld,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005) THEN
                     LET g_xcdb_m.xcdb005 = g_xcdb_m_t.xcdb005
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  NOT cl_null(g_xcdb_m.xcdbld) AND NOT cl_null(g_xcdb_m.xcdb003) AND NOT cl_null(g_xcdb_m.xcdb004) AND NOT cl_null(g_xcdb_m.xcdb005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t  OR g_xcdb_m.xcdb003 != g_xcdb003_t  OR g_xcdb_m.xcdb004 != g_xcdb004_t  OR g_xcdb_m.xcdb005 != g_xcdb005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcdb005
            #add-point:ON CHANGE xcdb005

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdbld
            
            #add-point:AFTER FIELD xcdbld
            IF NOT cl_null(g_xcdb_m.xcdbld) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xcdb_m_t.xcdbld IS NULL OR g_xcdb_m.xcdbld != g_xcdb_m_t.xcdbld)) THEN
                  IF NOT s_axc_chk_ld_comp(g_xcdb_m.xcdbcomp,g_xcdb_m.xcdbld) THEN
                     LET g_xcdb_m.xcdbld = g_xcdb_m_t.xcdbld
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcdb_m.xcdbld
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcdb_m.xcdbld_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcdb_m.xcdbld_desc

            #此段落由子樣板a05產生
            #確認資料無重複
            IF  NOT cl_null(g_xcdb_m.xcdbld) AND NOT cl_null(g_xcdb_m.xcdb003) AND NOT cl_null(g_xcdb_m.xcdb004) AND NOT cl_null(g_xcdb_m.xcdb005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t  OR g_xcdb_m.xcdb003 != g_xcdb003_t  OR g_xcdb_m.xcdb004 != g_xcdb004_t  OR g_xcdb_m.xcdb005 != g_xcdb005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdbld
            #add-point:BEFORE FIELD xcdbld

            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcdbld
            #add-point:ON CHANGE xcdbld

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb003
            
            #add-point:AFTER FIELD xcdb003
            IF NOT cl_null(g_xcdb_m.xcdb003) THEN 
#此段落由子樣板a19產生
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcdb_m.xcdb003
               LET g_qryparam.where = "xcat005 = '2' OR xcat005 = '3' "   #先进先出和批次成本 
               LET g_errshow = TRUE   #160318-00025#53
               LET g_chkparam.err_str[1] = "agl-00195:sub-01302|axci100|",cl_get_progname("axci100",g_lang,"2"),"|:EXEPROGaxci100"    #160318-00025#53               
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_xcat001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcdb_m.xcdb003
            CALL ap_ref_array2(g_ref_fields,"SELECT xcatl003 FROM xcatl_t WHERE xcatlent='"||g_enterprise||"' AND xcatl001=? AND xcatl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcdb_m.xcdb003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcdb_m.xcdb003_desc

            #此段落由子樣板a05產生
            #確認資料無重複
            IF  NOT cl_null(g_xcdb_m.xcdbld) AND NOT cl_null(g_xcdb_m.xcdb003) AND NOT cl_null(g_xcdb_m.xcdb004) AND NOT cl_null(g_xcdb_m.xcdb005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t  OR g_xcdb_m.xcdb003 != g_xcdb003_t  OR g_xcdb_m.xcdb004 != g_xcdb004_t  OR g_xcdb_m.xcdb005 != g_xcdb005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdb003
            #add-point:BEFORE FIELD xcdb003

            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcdb003
            #add-point:ON CHANGE xcdb003

            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.xcdbcomp
         ON ACTION controlp INFIELD xcdbcomp
            #add-point:ON ACTION controlp INFIELD xcdbcomp
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdb_m.xcdbcomp             #給予default值

            #給予arg
            
            CALL q_ooef001_2()                                #呼叫開窗

            LET g_xcdb_m.xcdbcomp = g_qryparam.return1              

            DISPLAY g_xcdb_m.xcdbcomp TO xcdbcomp              #

            NEXT FIELD xcdbcomp                          #返回原欄位
            #END add-point
 
         #Ctrlp:input.c.xcdb004
         ON ACTION controlp INFIELD xcdb004
            #add-point:ON ACTION controlp INFIELD xcdb004

            #END add-point
 
         #Ctrlp:input.c.xcdb005
         ON ACTION controlp INFIELD xcdb005
            #add-point:ON ACTION controlp INFIELD xcdb005

            #END add-point
 
         #Ctrlp:input.c.xcdbld
         ON ACTION controlp INFIELD xcdbld
            #add-point:ON ACTION controlp INFIELD xcdbld
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdb_m.xcdbld             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept 
            IF g_xcdb_m.xcdbcomp IS NOT NULL THEN
               LET g_qryparam.where = " glaacomp = '",g_xcdb_m.xcdbcomp,"'"
            END IF
            
            CALL q_authorised_ld()                                #呼叫開窗

            LET g_xcdb_m.xcdbld = g_qryparam.return1              

            DISPLAY g_xcdb_m.xcdbld TO xcdbld              #

            NEXT FIELD xcdbld                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.xcdb003
         ON ACTION controlp INFIELD xcdb003
            #add-point:ON ACTION controlp INFIELD xcdb003
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdb_m.xcdb003             #給予default值

            #給予arg
            LET g_qryparam.where = "xcat005 = '2' OR xcat005 = '3' "   #先进先出和批次成本
            CALL q_xcat001()                                #呼叫開窗

            LET g_xcdb_m.xcdb003 = g_qryparam.return1              

            DISPLAY g_xcdb_m.xcdb003 TO xcdb003              #

            NEXT FIELD xcdb003                          #返回原欄位
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
 
            #多語言處理
            
            
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xcdb_m.xcdbld             
                            ,g_xcdb_m.xcdb003   
                            ,g_xcdb_m.xcdb004   
                            ,g_xcdb_m.xcdb005   
 
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前

               #end add-point
            
               UPDATE xcdb_t SET (xcdbcomp,xcdb004,xcdb005,xcdbld,xcdb003) = (g_xcdb_m.xcdbcomp,g_xcdb_m.xcdb004, 
                   g_xcdb_m.xcdb005,g_xcdb_m.xcdbld,g_xcdb_m.xcdb003)
                WHERE xcdbent = g_enterprise AND xcdbld = g_xcdbld_t
                  AND xcdb003 = g_xcdb003_t
                  AND xcdb004 = g_xcdb004_t
                  AND xcdb005 = g_xcdb005_t
 
               #add-point:單頭修改中

               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcdb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcdb_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcdb_m.xcdbld
               LET gs_keys_bak[1] = g_xcdbld_t
               LET gs_keys[2] = g_xcdb_m.xcdb003
               LET gs_keys_bak[2] = g_xcdb003_t
               LET gs_keys[3] = g_xcdb_m.xcdb004
               LET gs_keys_bak[3] = g_xcdb004_t
               LET gs_keys[4] = g_xcdb_m.xcdb005
               LET gs_keys_bak[4] = g_xcdb005_t
               LET gs_keys[5] = g_xcdb_d[g_detail_idx].xcdb001
               LET gs_keys_bak[5] = g_xcdb_d_t.xcdb001
               LET gs_keys[6] = g_xcdb_d[g_detail_idx].xcdb002
               LET gs_keys_bak[6] = g_xcdb_d_t.xcdb002
               LET gs_keys[7] = g_xcdb_d[g_detail_idx].xcdb006
               LET gs_keys_bak[7] = g_xcdb_d_t.xcdb006
               LET gs_keys[8] = g_xcdb_d[g_detail_idx].xcdb007
               LET gs_keys_bak[8] = g_xcdb_d_t.xcdb007
               LET gs_keys[9] = g_xcdb_d[g_detail_idx].xcdb008
               LET gs_keys_bak[9] = g_xcdb_d_t.xcdb008
               LET gs_keys[10] = g_xcdb_d[g_detail_idx].xcdb009
               LET gs_keys_bak[10] = g_xcdb_d_t.xcdb009
               LET gs_keys[11] = g_xcdb_d[g_detail_idx].xcdb010
               LET gs_keys_bak[11] = g_xcdb_d_t.xcdb010
               CALL axct305_update_b('xcdb_t',gs_keys,gs_keys_bak,"'1'")
                     
                     LET g_xcdbld_t = g_xcdb_m.xcdbld
                     LET g_xcdb003_t = g_xcdb_m.xcdb003
                     LET g_xcdb004_t = g_xcdb_m.xcdb004
                     LET g_xcdb005_t = g_xcdb_m.xcdb005
 
                     #add-point:單頭修改後

                     #end add-point
                     
                     LET g_log1 = util.JSON.stringify(g_xcdb_m_t)
                     LET g_log2 = util.JSON.stringify(g_xcdb_m)
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
               END CASE
            
            ELSE    
               #add-point:單頭新增

               #end add-point
                                 
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axct305_detail_reproduce()
               END IF
            END IF
           #controlp
                     
           LET g_xcdbld_t = g_xcdb_m.xcdbld
           LET g_xcdb003_t = g_xcdb_m.xcdb003
           LET g_xcdb004_t = g_xcdb_m.xcdb004
           LET g_xcdb005_t = g_xcdb_m.xcdb005
 
           
           #若單身還沒有輸入資料, 強制切換至單身
           #IF cl_null(g_xcdb_d[1].xcdb001) THEN
           #   CALL g_xcdb_d.deleteElement(1)
           #   NEXT FIELD xcdb001
           #END IF
           
           IF g_xcdb_d.getLength() = 0 THEN
              NEXT FIELD xcdb001
           END IF
 
      END INPUT
 
{</section>}
 
{<section id="axct305.input.body" >}
      #Page1 預設值產生於此處
      INPUT ARRAY g_xcdb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcdb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axct305_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前

            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axct305_cl USING g_enterprise,
                                               g_xcdb_m.xcdbld
                                               ,g_xcdb_m.xcdb003
                                               ,g_xcdb_m.xcdb004
                                               ,g_xcdb_m.xcdb005
 
                                               
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct305_cl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CLOSE axct305_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_xcdb_d[l_ac].xcdb001 IS NOT NULL
               AND g_xcdb_d[l_ac].xcdb002 IS NOT NULL
               AND g_xcdb_d[l_ac].xcdb006 IS NOT NULL
               AND g_xcdb_d[l_ac].xcdb007 IS NOT NULL
               AND g_xcdb_d[l_ac].xcdb008 IS NOT NULL
               AND g_xcdb_d[l_ac].xcdb009 IS NOT NULL
               AND g_xcdb_d[l_ac].xcdb010 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xcdb_d_t.* = g_xcdb_d[l_ac].*  #BACKUP
               LET g_xcdb_d_o.* = g_xcdb_d[l_ac].*  #BACKUP
               CALL axct305_set_entry_b(l_cmd)
               #add-point:set_entry_b後

               #end add-point
               CALL axct305_set_no_entry_b(l_cmd)
               OPEN axct305_bcl USING g_enterprise,g_xcdb_m.xcdbld,
                                                g_xcdb_m.xcdb003,
                                                g_xcdb_m.xcdb004,
                                                g_xcdb_m.xcdb005,
 
                                                g_xcdb_d_t.xcdb001
                                                ,g_xcdb_d_t.xcdb002
                                                ,g_xcdb_d_t.xcdb006
                                                ,g_xcdb_d_t.xcdb007
                                                ,g_xcdb_d_t.xcdb008
                                                ,g_xcdb_d_t.xcdb009
                                                ,g_xcdb_d_t.xcdb010
 
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct305_bcl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axct305_bcl INTO g_xcdb_d[l_ac].xcdb001,g_xcdb_d[l_ac].xcdb006,g_xcdb_d[l_ac].xcdb007,g_xcdb_d[l_ac].xcdb008,g_xcdb_d[l_ac].xcdb009,g_xcdb_d[l_ac].xcdb011,g_xcdb_d[l_ac].xcdb010, 
                                         g_xcdb_d[l_ac].xcdb002,g_xcdb_d[l_ac].xcdb101,g_xcdb_d[l_ac].xcdb102
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_xcdb_d_t.xcdb001 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
 
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axct305_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row

            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_xcdb_d_t.* TO NULL
            INITIALIZE g_xcdb_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xcdb_d[l_ac].* TO NULL
            #公用欄位預設值
              
            #一般欄位預設值
            
            
            #add-point:modify段before備份
            LET g_xcdb_d[l_ac].xcdb001 = '1'
            #end add-point
            LET g_xcdb_d_t.* = g_xcdb_d[l_ac].*     #新輸入資料
            LET g_xcdb_d_o.* = g_xcdb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axct305_set_entry_b(l_cmd)
            #add-point:set_entry_b後

            #end add-point
            CALL axct305_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xcdb_d[li_reproduce_target].* = g_xcdb_d[li_reproduce].*
               LET g_xcdb2_d[li_reproduce_target].* = g_xcdb2_d[li_reproduce].*
               LET g_xcdb3_d[li_reproduce_target].* = g_xcdb3_d[li_reproduce].*
 
               LET g_xcdb_d[g_xcdb_d.getLength()].xcdb001 = NULL
               LET g_xcdb_d[g_xcdb_d.getLength()].xcdb002 = NULL
               LET g_xcdb_d[g_xcdb_d.getLength()].xcdb006 = NULL
               LET g_xcdb_d[g_xcdb_d.getLength()].xcdb007 = NULL
               LET g_xcdb_d[g_xcdb_d.getLength()].xcdb008 = NULL
               LET g_xcdb_d[g_xcdb_d.getLength()].xcdb009 = NULL
               LET g_xcdb_d[g_xcdb_d.getLength()].xcdb010 = NULL
 
            END IF
            
            #add-point:modify段before insert

            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xcdb_t 
             WHERE xcdbent = g_enterprise AND xcdbld = g_xcdb_m.xcdbld
               AND xcdb003 = g_xcdb_m.xcdb003
               AND xcdb004 = g_xcdb_m.xcdb004
               AND xcdb005 = g_xcdb_m.xcdb005
 
               AND xcdb001 = g_xcdb_d[l_ac].xcdb001
               AND xcdb002 = g_xcdb_d[l_ac].xcdb002
               AND xcdb006 = g_xcdb_d[l_ac].xcdb006
               AND xcdb007 = g_xcdb_d[l_ac].xcdb007
               AND xcdb008 = g_xcdb_d[l_ac].xcdb008
               AND xcdb009 = g_xcdb_d[l_ac].xcdb009
               AND xcdb010 = g_xcdb_d[l_ac].xcdb010
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
               IF cl_null(g_xcdb_d[l_ac].xcdb008) THEN LET g_xcdb_d[l_ac].xcdb008 = ' ' END IF  #fengmy150804
               #end add-point
               INSERT INTO xcdb_t
                           (xcdbent,
                            xcdbcomp,xcdb004,xcdb005,xcdbld,xcdb003,
                            xcdb001,xcdb002,xcdb006,xcdb007,xcdb008,xcdb009,xcdb010,xcdb011,xcdb101,xcdb102) 
                     VALUES(g_enterprise,
                            g_xcdb_m.xcdbcomp,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005,g_xcdb_m.xcdbld,g_xcdb_m.xcdb003,
                            g_xcdb_d[l_ac].xcdb001,g_xcdb_d[l_ac].xcdb002,g_xcdb_d[l_ac].xcdb006,g_xcdb_d[l_ac].xcdb007,g_xcdb_d[l_ac].xcdb008,
                            g_xcdb_d[l_ac].xcdb009,g_xcdb_d[l_ac].xcdb010,g_xcdb_d[l_ac].xcdb011,g_xcdb_d[l_ac].xcdb101,g_xcdb_d[l_ac].xcdb102)
               #add-point:單身新增中

               #end add-point
               LET p_cmd = 'u'
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               INITIALIZE g_xcdb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcdb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert

               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後

            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前

               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CANCEL DELETE
               END IF
               IF axct305_before_delete('1') THEN 
                  
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axct305_bcl
               LET l_count = g_xcdb_d.getLength()
            END IF 
            
            #add-point:單身刪除後

            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE 

               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_xcdb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #此段落由子樣板a01產生
         BEFORE FIELD xcdb001
            #add-point:BEFORE FIELD xcdb001

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb001
            
            #add-point:AFTER FIELD xcdb001
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb_d[g_detail_idx].xcdb001 != g_xcdb_d_t.xcdb001 OR g_xcdb_d[g_detail_idx].xcdb002 != g_xcdb_d_t.xcdb002 OR g_xcdb_d[g_detail_idx].xcdb006 != g_xcdb_d_t.xcdb006 OR g_xcdb_d[g_detail_idx].xcdb007 != g_xcdb_d_t.xcdb007 OR g_xcdb_d[g_detail_idx].xcdb008 != g_xcdb_d_t.xcdb008 OR g_xcdb_d[g_detail_idx].xcdb009 != g_xcdb_d_t.xcdb009 OR g_xcdb_d[g_detail_idx].xcdb010 != g_xcdb_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcdb001
            #add-point:ON CHANGE xcdb001

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdb006
            #add-point:BEFORE FIELD xcdb006

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb006
            
            #add-point:AFTER FIELD xcdb006
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb_d[g_detail_idx].xcdb001 != g_xcdb_d_t.xcdb001 OR g_xcdb_d[g_detail_idx].xcdb002 != g_xcdb_d_t.xcdb002 OR g_xcdb_d[g_detail_idx].xcdb006 != g_xcdb_d_t.xcdb006 OR g_xcdb_d[g_detail_idx].xcdb007 != g_xcdb_d_t.xcdb007 OR g_xcdb_d[g_detail_idx].xcdb008 != g_xcdb_d_t.xcdb008 OR g_xcdb_d[g_detail_idx].xcdb009 != g_xcdb_d_t.xcdb009 OR g_xcdb_d[g_detail_idx].xcdb010 != g_xcdb_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcdb006
            #add-point:ON CHANGE xcdb006

            #END add-point
 
 

 

 
            
 
         #此段落由子樣板a04產生
        
            

           
 
         #此段落由子樣板a01產生
        
           

           
 
         #此段落由子樣板a02產生
    
            
           

        
            
 
       
      

       

   
 
     
   
            
        

         
            
 
      
      
    

 
 
      
   
  

       
 
       
     

 
            
 
 

         #此段落由子樣板a01產生
         BEFORE FIELD xcdb010
            #add-point:BEFORE FIELD xcdb010

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb010
            
            #add-point:AFTER FIELD xcdb010
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb_d[g_detail_idx].xcdb001 != g_xcdb_d_t.xcdb001 OR g_xcdb_d[g_detail_idx].xcdb002 != g_xcdb_d_t.xcdb002 OR g_xcdb_d[g_detail_idx].xcdb006 != g_xcdb_d_t.xcdb006 OR g_xcdb_d[g_detail_idx].xcdb007 != g_xcdb_d_t.xcdb007 OR g_xcdb_d[g_detail_idx].xcdb008 != g_xcdb_d_t.xcdb008 OR g_xcdb_d[g_detail_idx].xcdb009 != g_xcdb_d_t.xcdb009 OR g_xcdb_d[g_detail_idx].xcdb010 != g_xcdb_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #160826-00024#1---add---s
            IF NOT cl_null(g_xcdb_d[l_ac].xcdb010) THEN 
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_xcdb_d[l_ac].xcdb010
               IF cl_chk_exist("v_xcau001") THEN
                  
               ELSE
                  LET g_xcdb_d[l_ac].xcdb010 = g_xcdb_d_t.xcdb010
                  NEXT FIELD CURRENT
               END IF               
            END IF
            #160826-00024#1---add---e
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcdb010
            #add-point:ON CHANGE xcdb010

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdb007
            #add-point:BEFORE FIELD xcdb007

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb007
            
            #add-point:AFTER FIELD xcdb007
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb_d[g_detail_idx].xcdb001 != g_xcdb_d_t.xcdb001 OR g_xcdb_d[g_detail_idx].xcdb002 != g_xcdb_d_t.xcdb002 OR g_xcdb_d[g_detail_idx].xcdb006 != g_xcdb_d_t.xcdb006 OR g_xcdb_d[g_detail_idx].xcdb007 != g_xcdb_d_t.xcdb007 OR g_xcdb_d[g_detail_idx].xcdb008 != g_xcdb_d_t.xcdb008 OR g_xcdb_d[g_detail_idx].xcdb009 != g_xcdb_d_t.xcdb009 OR g_xcdb_d[g_detail_idx].xcdb010 != g_xcdb_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcdb007
            #add-point:ON CHANGE xcdb007

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdb008
            #add-point:BEFORE FIELD xcdb008

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb008
            
            #add-point:AFTER FIELD xcdb008
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb_d[g_detail_idx].xcdb001 != g_xcdb_d_t.xcdb001 OR g_xcdb_d[g_detail_idx].xcdb002 != g_xcdb_d_t.xcdb002 OR g_xcdb_d[g_detail_idx].xcdb006 != g_xcdb_d_t.xcdb006 OR g_xcdb_d[g_detail_idx].xcdb007 != g_xcdb_d_t.xcdb007 OR g_xcdb_d[g_detail_idx].xcdb008 != g_xcdb_d_t.xcdb008 OR g_xcdb_d[g_detail_idx].xcdb009 != g_xcdb_d_t.xcdb009 OR g_xcdb_d[g_detail_idx].xcdb010 != g_xcdb_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF cl_null(g_xcdb_d[l_ac].xcdb008) THEN LET g_xcdb_d[l_ac].xcdb008 = ' ' END IF  #fengmy150804
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcdb008
            #add-point:ON CHANGE xcdb008

            #END add-point
 

            #END add-point
 

 
            
 

   
 

 
 
 

 
 
 

 
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdb009
            #add-point:BEFORE FIELD xcdb009

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb009
            
            #add-point:AFTER FIELD xcdb009
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb_d[g_detail_idx].xcdb001 != g_xcdb_d_t.xcdb001 OR g_xcdb_d[g_detail_idx].xcdb002 != g_xcdb_d_t.xcdb002 OR g_xcdb_d[g_detail_idx].xcdb006 != g_xcdb_d_t.xcdb006 OR g_xcdb_d[g_detail_idx].xcdb007 != g_xcdb_d_t.xcdb007 OR g_xcdb_d[g_detail_idx].xcdb008 != g_xcdb_d_t.xcdb008 OR g_xcdb_d[g_detail_idx].xcdb009 != g_xcdb_d_t.xcdb009 OR g_xcdb_d[g_detail_idx].xcdb010 != g_xcdb_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcdb009
            #add-point:ON CHANGE xcdb009

            #END add-point
 
 

 

 

         #此段落由子樣板a01產生
         BEFORE FIELD xcdb002
            #add-point:BEFORE FIELD xcdb002

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb002
            
            #add-point:AFTER FIELD xcdb002
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb_d[g_detail_idx].xcdb001 != g_xcdb_d_t.xcdb001 OR g_xcdb_d[g_detail_idx].xcdb002 != g_xcdb_d_t.xcdb002 OR g_xcdb_d[g_detail_idx].xcdb006 != g_xcdb_d_t.xcdb006 OR g_xcdb_d[g_detail_idx].xcdb007 != g_xcdb_d_t.xcdb007 OR g_xcdb_d[g_detail_idx].xcdb008 != g_xcdb_d_t.xcdb008 OR g_xcdb_d[g_detail_idx].xcdb009 != g_xcdb_d_t.xcdb009 OR g_xcdb_d[g_detail_idx].xcdb010 != g_xcdb_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcdb002
            #add-point:ON CHANGE xcdb002

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdb101
            #add-point:BEFORE FIELD xcdb101

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb101
            
            #add-point:AFTER FIELD xcdb101

            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcdb101
            #add-point:ON CHANGE xcdb101

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcdb102
            #add-point:BEFORE FIELD xcdb102

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb102
            
            #add-point:AFTER FIELD xcdb102

            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcdb102
            #add-point:ON CHANGE xcdb102

            #END add-point
 
 
                  #Ctrlp:input.c.page1.xcdb001
         ON ACTION controlp INFIELD xcdb001
            #add-point:ON ACTION controlp INFIELD xcdb001

            #END add-point
 
         #Ctrlp:input.c.page1.xcdb006
         ON ACTION controlp INFIELD xcdb006
            #add-point:ON ACTION controlp INFIELD xcdb006

            #END add-point
 

 

 

 

 
 
         #Ctrlp:input.c.page1.xcdb010
         ON ACTION controlp INFIELD xcdb010
            #add-point:ON ACTION controlp INFIELD xcdb010
            #160826-00024#1---add---s
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcdb_d[l_ac].xcdb010             #給予default值

            CALL q_xcau001()                                #呼叫開窗

            LET g_xcdb_d[l_ac].xcdb010 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xcdb_d[l_ac].xcdb010 TO xcdb010              #顯示到畫面上 
            NEXT FIELD xcdb010 
            #160826-00024#1---add---e
            #END add-point
 
         #Ctrlp:input.c.page1.xcdb007
         ON ACTION controlp INFIELD xcdb007
            #add-point:ON ACTION controlp INFIELD xcdb007

            #END add-point
 
         #Ctrlp:input.c.page1.xcdb008
         ON ACTION controlp INFIELD xcdb008
            #add-point:ON ACTION controlp INFIELD xcdb008

            #END add-point

 

 
         #Ctrlp:input.c.page1.xcdb009
         ON ACTION controlp INFIELD xcdb009
            #add-point:ON ACTION controlp INFIELD xcdb009

            #END add-point
 
 

 
 
         #Ctrlp:input.c.page1.xcdb002
         ON ACTION controlp INFIELD xcdb002
            #add-point:ON ACTION controlp INFIELD xcdb002

            #END add-point
 
         #Ctrlp:input.c.page1.xcdb101
         ON ACTION controlp INFIELD xcdb101
            #add-point:ON ACTION controlp INFIELD xcdb101

            #END add-point
 
         #Ctrlp:input.c.page1.xcdb102
         ON ACTION controlp INFIELD xcdb102
            #add-point:ON ACTION controlp INFIELD xcdb102

            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               LET g_xcdb_d[l_ac].* = g_xcdb_d_t.*
               CLOSE axct305_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xcdb_d[l_ac].xcdb001 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               LET g_xcdb_d[l_ac].* = g_xcdb_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               
            
               #add-point:單身修改前
               IF cl_null(g_xcdb_d[l_ac].xcdb008) THEN LET g_xcdb_d[l_ac].xcdb008 = ' ' END IF  #fengmy150804
               #end add-point
         
               UPDATE xcdb_t SET (xcdbld,xcdb003,xcdb004,xcdb005,xcdb001,xcdb006,xcdb007,xcdb008,xcdb009,xcdb011,xcdb010,xcdb002,xcdb101,xcdb102) 
                               = (g_xcdb_m.xcdbld,g_xcdb_m.xcdb003,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005,
                                 g_xcdb_d[l_ac].xcdb001,g_xcdb_d[l_ac].xcdb006,g_xcdb_d[l_ac].xcdb007,g_xcdb_d[l_ac].xcdb008,g_xcdb_d[l_ac].xcdb009,
                                  g_xcdb_d[l_ac].xcdb011,g_xcdb_d[l_ac].xcdb010,g_xcdb_d[l_ac].xcdb002,g_xcdb_d[l_ac].xcdb101,g_xcdb_d[l_ac].xcdb102)
                WHERE xcdbent = g_enterprise 
                 AND xcdbld   = g_xcdb_m.xcdbld 
                 AND xcdb003  = g_xcdb_m.xcdb003 
                 AND xcdb004  = g_xcdb_m.xcdb004 
                 AND xcdb005  = g_xcdb_m.xcdb005 
                 AND xcdb001  = g_xcdb_d_t.xcdb001   
                 AND xcdb002  = g_xcdb_d_t.xcdb002  
                 AND xcdb006  = g_xcdb_d_t.xcdb006  
                 AND xcdb007  = g_xcdb_d_t.xcdb007  
                 AND xcdb008  = g_xcdb_d_t.xcdb008  
                 AND xcdb009  = g_xcdb_d_t.xcdb009  
                 AND xcdb010  = g_xcdb_d_t.xcdb010  
 
                 
               #add-point:單身修改中

               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcdb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "xcdb_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
 
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcdb_m.xcdbld
               LET gs_keys_bak[1] = g_xcdbld_t
               LET gs_keys[2] = g_xcdb_m.xcdb003
               LET gs_keys_bak[2] = g_xcdb003_t
               LET gs_keys[3] = g_xcdb_m.xcdb004
               LET gs_keys_bak[3] = g_xcdb004_t
               LET gs_keys[4] = g_xcdb_m.xcdb005
               LET gs_keys_bak[4] = g_xcdb005_t
               LET gs_keys[5] = g_xcdb_d[g_detail_idx].xcdb001
               LET gs_keys_bak[5] = g_xcdb_d_t.xcdb001
               LET gs_keys[6] = g_xcdb_d[g_detail_idx].xcdb002
               LET gs_keys_bak[6] = g_xcdb_d_t.xcdb002
               LET gs_keys[7] = g_xcdb_d[g_detail_idx].xcdb006
               LET gs_keys_bak[7] = g_xcdb_d_t.xcdb006
               LET gs_keys[8] = g_xcdb_d[g_detail_idx].xcdb007
               LET gs_keys_bak[8] = g_xcdb_d_t.xcdb007
               LET gs_keys[9] = g_xcdb_d[g_detail_idx].xcdb008
               LET gs_keys_bak[9] = g_xcdb_d_t.xcdb008
               LET gs_keys[10] = g_xcdb_d[g_detail_idx].xcdb009
               LET gs_keys_bak[10] = g_xcdb_d_t.xcdb009
               LET gs_keys[11] = g_xcdb_d[g_detail_idx].xcdb010
               LET gs_keys_bak[11] = g_xcdb_d_t.xcdb010
               CALL axct305_update_b('xcdb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_xcdb_m),util.JSON.stringify(g_xcdb_d_t)
                     LET g_log2 = util.JSON.stringify(g_xcdb_m),util.JSON.stringify(g_xcdb_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後

               #end add-point
            END IF
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xcdb_d.getLength() = 0 THEN
               NEXT FIELD xcdb001
            END IF
            #add-point:input段after input 

            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xcdb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xcdb_d.getLength()+1
            
      END INPUT
 
      INPUT ARRAY g_xcdb2_d FROM s_detail2.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcdb2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axct305_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前
 
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axct305_cl USING g_enterprise,
                                               g_xcdb_m.xcdbld
                                               ,g_xcdb_m.xcdb003
                                               ,g_xcdb_m.xcdb004
                                               ,g_xcdb_m.xcdb005
 
                                               
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct305_cl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CLOSE axct305_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_xcdb2_d[l_ac].xcdb001 IS NOT NULL
               AND g_xcdb2_d[l_ac].xcdb002 IS NOT NULL
               AND g_xcdb2_d[l_ac].xcdb006 IS NOT NULL
               AND g_xcdb2_d[l_ac].xcdb007 IS NOT NULL
               AND g_xcdb2_d[l_ac].xcdb008 IS NOT NULL
               AND g_xcdb2_d[l_ac].xcdb009 IS NOT NULL
               AND g_xcdb2_d[l_ac].xcdb010 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xcdb2_d_t.* = g_xcdb2_d[l_ac].*  #BACKUP
               LET g_xcdb2_d_o.* = g_xcdb2_d[l_ac].*  #BACKUP
               CALL axct305_set_entry_b(l_cmd)
               #add-point:set_entry_b後
 
               #end add-point
               CALL axct305_set_no_entry_b(l_cmd)
               OPEN axct305_bcl USING g_enterprise,g_xcdb_m.xcdbld,
                                                g_xcdb_m.xcdb003,
                                                g_xcdb_m.xcdb004,
                                                g_xcdb_m.xcdb005,
 
                                                g_xcdb2_d_t.xcdb001
                                                ,g_xcdb2_d_t.xcdb002
                                                ,g_xcdb2_d_t.xcdb006
                                                ,g_xcdb2_d_t.xcdb007
                                                ,g_xcdb2_d_t.xcdb008
                                                ,g_xcdb2_d_t.xcdb009
                                                ,g_xcdb2_d_t.xcdb010
 
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct305_bcl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axct305_bcl INTO g_xcdb2_d[l_ac].xcdb001,g_xcdb2_d[l_ac].xcdb006,g_xcdb2_d[l_ac].xcdb007,g_xcdb2_d[l_ac].xcdb008,g_xcdb2_d[l_ac].xcdb009,g_xcdb2_d[l_ac].xcdb011,g_xcdb2_d[l_ac].xcdb010, 
                                         g_xcdb2_d[l_ac].xcdb002,g_xcdb2_d[l_ac].xcdb101,g_xcdb2_d[l_ac].xcdb102
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_xcdb2_d_t.xcdb001 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
 
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axct305_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
 
            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_xcdb2_d_t.* TO NULL
            INITIALIZE g_xcdb2_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xcdb2_d[l_ac].* TO NULL
            #公用欄位預設值
              
            #一般欄位預設值
            
            
            #add-point:modify段before備份
            LET g_xcdb2_d[l_ac].xcdb001 = '2'
            #end add-point
            LET g_xcdb2_d_t.* = g_xcdb2_d[l_ac].*     #新輸入資料
            LET g_xcdb2_d_o.* = g_xcdb2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axct305_set_entry_b(l_cmd)
            #add-point:set_entry_b後
 
            #end add-point
            CALL axct305_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xcdb2_d[li_reproduce_target].* = g_xcdb2_d[li_reproduce].*
               LET g_xcdb2_d[li_reproduce_target].* = g_xcdb2_d[li_reproduce].*
               LET g_xcdb3_d[li_reproduce_target].* = g_xcdb3_d[li_reproduce].*
 
               LET g_xcdb2_d[g_xcdb2_d.getLength()].xcdb001 = NULL
               LET g_xcdb2_d[g_xcdb2_d.getLength()].xcdb002 = NULL
               LET g_xcdb2_d[g_xcdb2_d.getLength()].xcdb006 = NULL
               LET g_xcdb2_d[g_xcdb2_d.getLength()].xcdb007 = NULL
               LET g_xcdb2_d[g_xcdb2_d.getLength()].xcdb008 = NULL
               LET g_xcdb2_d[g_xcdb2_d.getLength()].xcdb009 = NULL
               LET g_xcdb2_d[g_xcdb2_d.getLength()].xcdb010 = NULL
 
            END IF
            
            #add-point:modify段before insert
 
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xcdb_t 
             WHERE xcdbent = g_enterprise AND xcdbld = g_xcdb_m.xcdbld
               AND xcdb003 = g_xcdb_m.xcdb003
               AND xcdb004 = g_xcdb_m.xcdb004
               AND xcdb005 = g_xcdb_m.xcdb005
 
               AND xcdb001 = g_xcdb2_d[l_ac].xcdb001
               AND xcdb002 = g_xcdb2_d[l_ac].xcdb002
               AND xcdb006 = g_xcdb2_d[l_ac].xcdb006
               AND xcdb007 = g_xcdb2_d[l_ac].xcdb007
               AND xcdb008 = g_xcdb2_d[l_ac].xcdb008
               AND xcdb009 = g_xcdb2_d[l_ac].xcdb009
               AND xcdb010 = g_xcdb2_d[l_ac].xcdb010
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
 
               #end add-point
               INSERT INTO xcdb_t
                           (xcdbent,
                            xcdbcomp,xcdb004,xcdb005,xcdbld,xcdb003,
                            xcdb001,xcdb002,xcdb006,xcdb007,xcdb008,xcdb009,xcdb010,xcdb011,xcdb101,xcdb102) 
                     VALUES(g_enterprise,
                            g_xcdb_m.xcdbcomp,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005,g_xcdb_m.xcdbld,g_xcdb_m.xcdb003,
                            g_xcdb2_d[l_ac].xcdb001,g_xcdb2_d[l_ac].xcdb002,g_xcdb2_d[l_ac].xcdb006,g_xcdb2_d[l_ac].xcdb007,g_xcdb2_d[l_ac].xcdb008,
                            g_xcdb2_d[l_ac].xcdb009,g_xcdb2_d[l_ac].xcdb010,g_xcdb2_d[l_ac].xcdb011,g_xcdb2_d[l_ac].xcdb101,g_xcdb2_d[l_ac].xcdb102)
               #add-point:單身新增中
 
               #end add-point
               LET p_cmd = 'u'
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               INITIALIZE g_xcdb2_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcdb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
 
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後
 
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前
 
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CANCEL DELETE
               END IF
               IF axct305_before_delete('2') THEN 
                  
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axct305_bcl
               LET l_count = g_xcdb2_d.getLength()
            END IF 
            
            #add-point:單身刪除後
 
            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE 
 
               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_xcdb2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
 
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb001_2
            
            #add-point:AFTER FIELD xcdb001
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb2_d[g_detail_idx].xcdb001 != g_xcdb2_d_t.xcdb001 OR g_xcdb2_d[g_detail_idx].xcdb002 != g_xcdb2_d_t.xcdb002 OR g_xcdb2_d[g_detail_idx].xcdb006 != g_xcdb2_d_t.xcdb006 OR g_xcdb2_d[g_detail_idx].xcdb007 != g_xcdb2_d_t.xcdb007 OR g_xcdb2_d[g_detail_idx].xcdb008 != g_xcdb2_d_t.xcdb008 OR g_xcdb2_d[g_detail_idx].xcdb009 != g_xcdb2_d_t.xcdb009 OR g_xcdb2_d[g_detail_idx].xcdb010 != g_xcdb2_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb2_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb2_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb2_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb2_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb2_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb2_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb2_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
 
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb006_2
            
            #add-point:AFTER FIELD xcdb006
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb2_d[g_detail_idx].xcdb001 != g_xcdb2_d_t.xcdb001 OR g_xcdb2_d[g_detail_idx].xcdb002 != g_xcdb2_d_t.xcdb002 OR g_xcdb2_d[g_detail_idx].xcdb006 != g_xcdb2_d_t.xcdb006 OR g_xcdb2_d[g_detail_idx].xcdb007 != g_xcdb2_d_t.xcdb007 OR g_xcdb2_d[g_detail_idx].xcdb008 != g_xcdb2_d_t.xcdb008 OR g_xcdb2_d[g_detail_idx].xcdb009 != g_xcdb2_d_t.xcdb009 OR g_xcdb2_d[g_detail_idx].xcdb010 != g_xcdb2_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb2_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb2_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb2_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb2_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb2_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb2_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb2_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
 
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb007_2
            
            #add-point:AFTER FIELD xcdb007
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb2_d[g_detail_idx].xcdb001 != g_xcdb2_d_t.xcdb001 OR g_xcdb2_d[g_detail_idx].xcdb002 != g_xcdb2_d_t.xcdb002 OR g_xcdb2_d[g_detail_idx].xcdb006 != g_xcdb2_d_t.xcdb006 OR g_xcdb2_d[g_detail_idx].xcdb007 != g_xcdb2_d_t.xcdb007 OR g_xcdb2_d[g_detail_idx].xcdb008 != g_xcdb2_d_t.xcdb008 OR g_xcdb2_d[g_detail_idx].xcdb009 != g_xcdb2_d_t.xcdb009 OR g_xcdb2_d[g_detail_idx].xcdb010 != g_xcdb2_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb2_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb2_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb2_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb2_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb2_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb2_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb2_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
 
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb008_2
            
            #add-point:AFTER FIELD xcdb008
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb2_d[g_detail_idx].xcdb001 != g_xcdb2_d_t.xcdb001 OR g_xcdb2_d[g_detail_idx].xcdb002 != g_xcdb2_d_t.xcdb002 OR g_xcdb2_d[g_detail_idx].xcdb006 != g_xcdb2_d_t.xcdb006 OR g_xcdb2_d[g_detail_idx].xcdb007 != g_xcdb2_d_t.xcdb007 OR g_xcdb2_d[g_detail_idx].xcdb008 != g_xcdb2_d_t.xcdb008 OR g_xcdb2_d[g_detail_idx].xcdb009 != g_xcdb2_d_t.xcdb009 OR g_xcdb2_d[g_detail_idx].xcdb010 != g_xcdb2_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb2_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb2_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb2_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb2_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb2_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb2_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb2_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
 
 
            #END add-point
             
         #此段落由子樣板a02產生
         AFTER FIELD xcdb009_2
            
            #add-point:AFTER FIELD xcdb009
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb2_d[g_detail_idx].xcdb001 != g_xcdb2_d_t.xcdb001 OR g_xcdb2_d[g_detail_idx].xcdb002 != g_xcdb2_d_t.xcdb002 OR g_xcdb2_d[g_detail_idx].xcdb006 != g_xcdb2_d_t.xcdb006 OR g_xcdb2_d[g_detail_idx].xcdb007 != g_xcdb2_d_t.xcdb007 OR g_xcdb2_d[g_detail_idx].xcdb008 != g_xcdb2_d_t.xcdb008 OR g_xcdb2_d[g_detail_idx].xcdb009 != g_xcdb2_d_t.xcdb009 OR g_xcdb2_d[g_detail_idx].xcdb010 != g_xcdb2_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb2_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb2_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb2_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb2_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb2_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb2_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb2_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
 
 
            #END add-point
            
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb010_2
            
            #add-point:AFTER FIELD xcdb010
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb2_d[g_detail_idx].xcdb001 != g_xcdb2_d_t.xcdb001 OR g_xcdb2_d[g_detail_idx].xcdb002 != g_xcdb2_d_t.xcdb002 OR g_xcdb2_d[g_detail_idx].xcdb006 != g_xcdb2_d_t.xcdb006 OR g_xcdb2_d[g_detail_idx].xcdb007 != g_xcdb2_d_t.xcdb007 OR g_xcdb2_d[g_detail_idx].xcdb008 != g_xcdb2_d_t.xcdb008 OR g_xcdb2_d[g_detail_idx].xcdb009 != g_xcdb2_d_t.xcdb009 OR g_xcdb2_d[g_detail_idx].xcdb010 != g_xcdb2_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb2_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb2_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb2_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb2_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb2_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb2_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb2_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
 
 
            #END add-point
            
 
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb002_2
            
            #add-point:AFTER FIELD xcdb002
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb2_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb2_d[g_detail_idx].xcdb001 != g_xcdb2_d_t.xcdb001 OR g_xcdb2_d[g_detail_idx].xcdb002 != g_xcdb2_d_t.xcdb002 OR g_xcdb2_d[g_detail_idx].xcdb006 != g_xcdb2_d_t.xcdb006 OR g_xcdb2_d[g_detail_idx].xcdb007 != g_xcdb2_d_t.xcdb007 OR g_xcdb2_d[g_detail_idx].xcdb008 != g_xcdb2_d_t.xcdb008 OR g_xcdb2_d[g_detail_idx].xcdb009 != g_xcdb2_d_t.xcdb009 OR g_xcdb2_d[g_detail_idx].xcdb010 != g_xcdb2_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb2_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb2_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb2_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb2_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb2_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb2_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb2_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
 
 
            #END add-point
            
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               LET g_xcdb2_d[l_ac].* = g_xcdb2_d_t.*
               CLOSE axct305_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xcdb2_d[l_ac].xcdb001 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               LET g_xcdb2_d[l_ac].* = g_xcdb2_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               
            
               #add-point:單身修改前
 
               #end add-point
         
               UPDATE xcdb_t SET (xcdbld,xcdb003,xcdb004,xcdb005,xcdb001,xcdb006,xcdb007,xcdb008,xcdb009,xcdb011,xcdb010,xcdb002,xcdb101,xcdb102) 
                               = (g_xcdb_m.xcdbld,g_xcdb_m.xcdb003,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005
                                 ,g_xcdb2_d[l_ac].xcdb001,g_xcdb2_d[l_ac].xcdb006,g_xcdb2_d[l_ac].xcdb007,g_xcdb2_d[l_ac].xcdb008,g_xcdb2_d[l_ac].xcdb009,
                                  g_xcdb2_d[l_ac].xcdb011,g_xcdb2_d[l_ac].xcdb010,g_xcdb2_d[l_ac].xcdb002,g_xcdb2_d[l_ac].xcdb101,g_xcdb2_d[l_ac].xcdb102)
                WHERE xcdbent = g_enterprise 
                 AND xcdbld   = g_xcdb_m.xcdbld 
                 AND xcdb003  = g_xcdb_m.xcdb003 
                 AND xcdb004  = g_xcdb_m.xcdb004 
                 AND xcdb005  = g_xcdb_m.xcdb005 
                 AND xcdb001  = g_xcdb2_d_t.xcdb001   
                 AND xcdb002  = g_xcdb2_d_t.xcdb002  
                 AND xcdb006  = g_xcdb2_d_t.xcdb006  
                 AND xcdb007  = g_xcdb2_d_t.xcdb007  
                 AND xcdb008  = g_xcdb2_d_t.xcdb008  
                 AND xcdb009  = g_xcdb2_d_t.xcdb009  
                 AND xcdb010  = g_xcdb2_d_t.xcdb010 
 
                 
               #add-point:單身修改中
 
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcdb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "xcdb_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
 
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcdb_m.xcdbld
               LET gs_keys_bak[1] = g_xcdbld_t
               LET gs_keys[2] = g_xcdb_m.xcdb003
               LET gs_keys_bak[2] = g_xcdb003_t
               LET gs_keys[3] = g_xcdb_m.xcdb004
               LET gs_keys_bak[3] = g_xcdb004_t
               LET gs_keys[4] = g_xcdb_m.xcdb005
               LET gs_keys_bak[4] = g_xcdb005_t
               LET gs_keys[5] = g_xcdb2_d[g_detail_idx].xcdb001
               LET gs_keys_bak[5] = g_xcdb2_d_t.xcdb001
               LET gs_keys[6] = g_xcdb2_d[g_detail_idx].xcdb002
               LET gs_keys_bak[6] = g_xcdb2_d_t.xcdb002
               LET gs_keys[7] = g_xcdb2_d[g_detail_idx].xcdb006
               LET gs_keys_bak[7] = g_xcdb2_d_t.xcdb006
               LET gs_keys[8] = g_xcdb2_d[g_detail_idx].xcdb007
               LET gs_keys_bak[8] = g_xcdb2_d_t.xcdb007
               LET gs_keys[9] = g_xcdb2_d[g_detail_idx].xcdb008
               LET gs_keys_bak[9] = g_xcdb2_d_t.xcdb008
               LET gs_keys[10] = g_xcdb2_d[g_detail_idx].xcdb009
               LET gs_keys_bak[10] = g_xcdb2_d_t.xcdb009
               LET gs_keys[11] = g_xcdb2_d[g_detail_idx].xcdb010
               LET gs_keys_bak[11] = g_xcdb2_d_t.xcdb010
               CALL axct305_update_b('xcdb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_xcdb_m),util.JSON.stringify(g_xcdb2_d_t)
                     LET g_log2 = util.JSON.stringify(g_xcdb_m),util.JSON.stringify(g_xcdb2_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後
 
               #end add-point
            END IF
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xcdb2_d.getLength() = 0 THEN
               NEXT FIELD xcdb001
            END IF
            #add-point:input段after input 
 
            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xcdb2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xcdb2_d.getLength()+1
            
      END INPUT
      
      INPUT ARRAY g_xcdb3_d FROM s_detail3.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcdb3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axct305_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前
 
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail3")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axct305_cl USING g_enterprise,
                                               g_xcdb_m.xcdbld
                                               ,g_xcdb_m.xcdb003
                                               ,g_xcdb_m.xcdb004
                                               ,g_xcdb_m.xcdb005
 
                                               
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct305_cl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CLOSE axct305_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_xcdb3_d[l_ac].xcdb001 IS NOT NULL
               AND g_xcdb3_d[l_ac].xcdb002 IS NOT NULL
               AND g_xcdb3_d[l_ac].xcdb006 IS NOT NULL
               AND g_xcdb3_d[l_ac].xcdb007 IS NOT NULL
               AND g_xcdb3_d[l_ac].xcdb008 IS NOT NULL
               AND g_xcdb3_d[l_ac].xcdb009 IS NOT NULL
               AND g_xcdb3_d[l_ac].xcdb010 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xcdb3_d_t.* = g_xcdb3_d[l_ac].*  #BACKUP
               LET g_xcdb3_d_o.* = g_xcdb3_d[l_ac].*  #BACKUP
               CALL axct305_set_entry_b(l_cmd)
               #add-point:set_entry_b後
 
               #end add-point
               CALL axct305_set_no_entry_b(l_cmd)
               OPEN axct305_bcl USING g_enterprise,g_xcdb_m.xcdbld,
                                                g_xcdb_m.xcdb003,
                                                g_xcdb_m.xcdb004,
                                                g_xcdb_m.xcdb005,
 
                                                g_xcdb3_d_t.xcdb001
                                                ,g_xcdb3_d_t.xcdb002
                                                ,g_xcdb3_d_t.xcdb006
                                                ,g_xcdb3_d_t.xcdb007
                                                ,g_xcdb3_d_t.xcdb008
                                                ,g_xcdb3_d_t.xcdb009
                                                ,g_xcdb3_d_t.xcdb010
 
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct305_bcl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axct305_bcl INTO g_xcdb3_d[l_ac].xcdb001,g_xcdb3_d[l_ac].xcdb006,g_xcdb3_d[l_ac].xcdb007,g_xcdb3_d[l_ac].xcdb008,g_xcdb3_d[l_ac].xcdb009,g_xcdb3_d[l_ac].xcdb011,g_xcdb3_d[l_ac].xcdb010, 
                                         g_xcdb3_d[l_ac].xcdb002,g_xcdb3_d[l_ac].xcdb101,g_xcdb3_d[l_ac].xcdb102
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_xcdb3_d_t.xcdb001 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
 
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axct305_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
 
            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_xcdb3_d_t.* TO NULL
            INITIALIZE g_xcdb3_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xcdb3_d[l_ac].* TO NULL
            #公用欄位預設值
              
            #一般欄位預設值
            
            
            #add-point:modify段before備份
            LET g_xcdb3_d[l_ac].xcdb001 = '3'
            #end add-point
            LET g_xcdb3_d_t.* = g_xcdb3_d[l_ac].*     #新輸入資料
            LET g_xcdb3_d_o.* = g_xcdb3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axct305_set_entry_b(l_cmd)
            #add-point:set_entry_b後
 
            #end add-point
            CALL axct305_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xcdb3_d[li_reproduce_target].* = g_xcdb3_d[li_reproduce].*
               LET g_xcdb3_d[li_reproduce_target].* = g_xcdb3_d[li_reproduce].*
               LET g_xcdb3_d[li_reproduce_target].* = g_xcdb3_d[li_reproduce].*
 
               LET g_xcdb3_d[g_xcdb3_d.getLength()].xcdb001 = NULL
               LET g_xcdb3_d[g_xcdb3_d.getLength()].xcdb002 = NULL
               LET g_xcdb3_d[g_xcdb3_d.getLength()].xcdb006 = NULL
               LET g_xcdb3_d[g_xcdb3_d.getLength()].xcdb007 = NULL
               LET g_xcdb3_d[g_xcdb3_d.getLength()].xcdb008 = NULL
               LET g_xcdb3_d[g_xcdb3_d.getLength()].xcdb009 = NULL
               LET g_xcdb3_d[g_xcdb3_d.getLength()].xcdb010 = NULL
 
            END IF
            
            #add-point:modify段before insert
 
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xcdb_t 
             WHERE xcdbent = g_enterprise AND xcdbld = g_xcdb_m.xcdbld
               AND xcdb003 = g_xcdb_m.xcdb003
               AND xcdb004 = g_xcdb_m.xcdb004
               AND xcdb005 = g_xcdb_m.xcdb005
 
               AND xcdb001 = g_xcdb3_d[l_ac].xcdb001
               AND xcdb002 = g_xcdb3_d[l_ac].xcdb002
               AND xcdb006 = g_xcdb3_d[l_ac].xcdb006
               AND xcdb007 = g_xcdb3_d[l_ac].xcdb007
               AND xcdb008 = g_xcdb3_d[l_ac].xcdb008
               AND xcdb009 = g_xcdb3_d[l_ac].xcdb009
               AND xcdb010 = g_xcdb3_d[l_ac].xcdb010
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
 
               #end add-point
               INSERT INTO xcdb_t
                           (xcdbent,
                            xcdbcomp,xcdb004,xcdb005,xcdbld,xcdb003,
                            xcdb001,xcdb002,xcdb006,xcdb007,xcdb008,xcdb009,xcdb010,xcdb011,xcdb101,xcdb102) 
                     VALUES(g_enterprise,
                            g_xcdb_m.xcdbcomp,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005,g_xcdb_m.xcdbld,g_xcdb_m.xcdb003,
                            g_xcdb3_d[l_ac].xcdb001,g_xcdb3_d[l_ac].xcdb002,g_xcdb3_d[l_ac].xcdb006,g_xcdb3_d[l_ac].xcdb007,g_xcdb3_d[l_ac].xcdb008,
                            g_xcdb3_d[l_ac].xcdb009,g_xcdb3_d[l_ac].xcdb010,g_xcdb3_d[l_ac].xcdb011,g_xcdb3_d[l_ac].xcdb101,g_xcdb3_d[l_ac].xcdb102)
               #add-point:單身新增中
 
               #end add-point
               LET p_cmd = 'u'
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               INITIALIZE g_xcdb3_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcdb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
 
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後
 
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前
 
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CANCEL DELETE
               END IF
               IF axct305_before_delete('3') THEN 
                  
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axct305_bcl
               LET l_count = g_xcdb3_d.getLength()
            END IF 
            
            #add-point:單身刪除後
 
            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE 
 
               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_xcdb3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
 
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb001_3
            
            #add-point:AFTER FIELD xcdb001
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb3_d[g_detail_idx].xcdb001 != g_xcdb3_d_t.xcdb001 OR g_xcdb3_d[g_detail_idx].xcdb002 != g_xcdb3_d_t.xcdb002 OR g_xcdb3_d[g_detail_idx].xcdb006 != g_xcdb3_d_t.xcdb006 OR g_xcdb3_d[g_detail_idx].xcdb007 != g_xcdb3_d_t.xcdb007 OR g_xcdb3_d[g_detail_idx].xcdb008 != g_xcdb3_d_t.xcdb008 OR g_xcdb3_d[g_detail_idx].xcdb009 != g_xcdb3_d_t.xcdb009 OR g_xcdb3_d[g_detail_idx].xcdb010 != g_xcdb3_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb3_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb3_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb3_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb3_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb3_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb3_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb3_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
 
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb006_3
            
            #add-point:AFTER FIELD xcdb006
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb3_d[g_detail_idx].xcdb001 != g_xcdb3_d_t.xcdb001 OR g_xcdb3_d[g_detail_idx].xcdb002 != g_xcdb3_d_t.xcdb002 OR g_xcdb3_d[g_detail_idx].xcdb006 != g_xcdb3_d_t.xcdb006 OR g_xcdb3_d[g_detail_idx].xcdb007 != g_xcdb3_d_t.xcdb007 OR g_xcdb3_d[g_detail_idx].xcdb008 != g_xcdb3_d_t.xcdb008 OR g_xcdb3_d[g_detail_idx].xcdb009 != g_xcdb3_d_t.xcdb009 OR g_xcdb3_d[g_detail_idx].xcdb010 != g_xcdb3_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb3_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb3_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb3_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb3_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb3_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb3_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb3_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
 
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb007_3
            
            #add-point:AFTER FIELD xcdb007
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb3_d[g_detail_idx].xcdb001 != g_xcdb3_d_t.xcdb001 OR g_xcdb3_d[g_detail_idx].xcdb002 != g_xcdb3_d_t.xcdb002 OR g_xcdb3_d[g_detail_idx].xcdb006 != g_xcdb3_d_t.xcdb006 OR g_xcdb3_d[g_detail_idx].xcdb007 != g_xcdb3_d_t.xcdb007 OR g_xcdb3_d[g_detail_idx].xcdb008 != g_xcdb3_d_t.xcdb008 OR g_xcdb3_d[g_detail_idx].xcdb009 != g_xcdb3_d_t.xcdb009 OR g_xcdb3_d[g_detail_idx].xcdb010 != g_xcdb3_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb3_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb3_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb3_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb3_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb3_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb3_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb3_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
 
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb008_3
            
            #add-point:AFTER FIELD xcdb008
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb3_d[g_detail_idx].xcdb001 != g_xcdb3_d_t.xcdb001 OR g_xcdb3_d[g_detail_idx].xcdb002 != g_xcdb3_d_t.xcdb002 OR g_xcdb3_d[g_detail_idx].xcdb006 != g_xcdb3_d_t.xcdb006 OR g_xcdb3_d[g_detail_idx].xcdb007 != g_xcdb3_d_t.xcdb007 OR g_xcdb3_d[g_detail_idx].xcdb008 != g_xcdb3_d_t.xcdb008 OR g_xcdb3_d[g_detail_idx].xcdb009 != g_xcdb3_d_t.xcdb009 OR g_xcdb3_d[g_detail_idx].xcdb010 != g_xcdb3_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb3_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb3_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb3_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb3_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb3_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb3_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb3_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
 
 
            #END add-point
             
         #此段落由子樣板a02產生
         AFTER FIELD xcdb009_3
            
            #add-point:AFTER FIELD xcdb009
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb3_d[g_detail_idx].xcdb001 != g_xcdb3_d_t.xcdb001 OR g_xcdb3_d[g_detail_idx].xcdb002 != g_xcdb3_d_t.xcdb002 OR g_xcdb3_d[g_detail_idx].xcdb006 != g_xcdb3_d_t.xcdb006 OR g_xcdb3_d[g_detail_idx].xcdb007 != g_xcdb3_d_t.xcdb007 OR g_xcdb3_d[g_detail_idx].xcdb008 != g_xcdb3_d_t.xcdb008 OR g_xcdb3_d[g_detail_idx].xcdb009 != g_xcdb3_d_t.xcdb009 OR g_xcdb3_d[g_detail_idx].xcdb010 != g_xcdb3_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb3_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb3_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb3_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb3_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb3_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb3_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb3_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
 
 
            #END add-point
            
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb010_3
            
            #add-point:AFTER FIELD xcdb010
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb3_d[g_detail_idx].xcdb001 != g_xcdb3_d_t.xcdb001 OR g_xcdb3_d[g_detail_idx].xcdb002 != g_xcdb3_d_t.xcdb002 OR g_xcdb3_d[g_detail_idx].xcdb006 != g_xcdb3_d_t.xcdb006 OR g_xcdb3_d[g_detail_idx].xcdb007 != g_xcdb3_d_t.xcdb007 OR g_xcdb3_d[g_detail_idx].xcdb008 != g_xcdb3_d_t.xcdb008 OR g_xcdb3_d[g_detail_idx].xcdb009 != g_xcdb3_d_t.xcdb009 OR g_xcdb3_d[g_detail_idx].xcdb010 != g_xcdb3_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb3_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb3_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb3_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb3_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb3_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb3_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb3_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
 
 
            #END add-point
            
 
 
         #此段落由子樣板a02產生
         AFTER FIELD xcdb002_3
            
            #add-point:AFTER FIELD xcdb002
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcdb_m.xcdbld IS NOT NULL AND g_xcdb_m.xcdb003 IS NOT NULL AND g_xcdb_m.xcdb004 IS NOT NULL AND g_xcdb_m.xcdb005 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb001 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb002 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb006 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb007 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb008 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb009 IS NOT NULL AND g_xcdb3_d[g_detail_idx].xcdb010 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdb_m.xcdbld != g_xcdbld_t OR g_xcdb_m.xcdb003 != g_xcdb003_t OR g_xcdb_m.xcdb004 != g_xcdb004_t OR g_xcdb_m.xcdb005 != g_xcdb005_t OR g_xcdb3_d[g_detail_idx].xcdb001 != g_xcdb3_d_t.xcdb001 OR g_xcdb3_d[g_detail_idx].xcdb002 != g_xcdb3_d_t.xcdb002 OR g_xcdb3_d[g_detail_idx].xcdb006 != g_xcdb3_d_t.xcdb006 OR g_xcdb3_d[g_detail_idx].xcdb007 != g_xcdb3_d_t.xcdb007 OR g_xcdb3_d[g_detail_idx].xcdb008 != g_xcdb3_d_t.xcdb008 OR g_xcdb3_d[g_detail_idx].xcdb009 != g_xcdb3_d_t.xcdb009 OR g_xcdb3_d[g_detail_idx].xcdb010 != g_xcdb3_d_t.xcdb010)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdb_t WHERE "||"xcdbent = '" ||g_enterprise|| "' AND "||"xcdbld = '"||g_xcdb_m.xcdbld ||"' AND "|| "xcdb003 = '"||g_xcdb_m.xcdb003 ||"' AND "|| "xcdb004 = '"||g_xcdb_m.xcdb004 ||"' AND "|| "xcdb005 = '"||g_xcdb_m.xcdb005 ||"' AND "|| "xcdb001 = '"||g_xcdb3_d[g_detail_idx].xcdb001 ||"' AND "|| "xcdb002 = '"||g_xcdb3_d[g_detail_idx].xcdb002 ||"' AND "|| "xcdb006 = '"||g_xcdb3_d[g_detail_idx].xcdb006 ||"' AND "|| "xcdb007 = '"||g_xcdb3_d[g_detail_idx].xcdb007 ||"' AND "|| "xcdb008 = '"||g_xcdb3_d[g_detail_idx].xcdb008 ||"' AND "|| "xcdb009 = '"||g_xcdb3_d[g_detail_idx].xcdb009 ||"' AND "|| "xcdb010 = '"||g_xcdb3_d[g_detail_idx].xcdb010 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
 
 
            #END add-point
            
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               LET g_xcdb3_d[l_ac].* = g_xcdb3_d_t.*
               CLOSE axct305_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xcdb3_d[l_ac].xcdb001 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               LET g_xcdb3_d[l_ac].* = g_xcdb3_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               
            
               #add-point:單身修改前
 
               #end add-point
         
               UPDATE xcdb_t SET (xcdbld,xcdb003,xcdb004,xcdb005,xcdb001,xcdb006,xcdb007,xcdb008,xcdb009,xcdb011,xcdb010,xcdb002,xcdb101,xcdb102) 
                               = (g_xcdb_m.xcdbld,g_xcdb_m.xcdb003,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005
                                 ,g_xcdb3_d[l_ac].xcdb001,g_xcdb3_d[l_ac].xcdb006,g_xcdb3_d[l_ac].xcdb007,g_xcdb3_d[l_ac].xcdb008,g_xcdb3_d[l_ac].xcdb009,
                                  g_xcdb3_d[l_ac].xcdb011,g_xcdb3_d[l_ac].xcdb010,g_xcdb3_d[l_ac].xcdb002,g_xcdb3_d[l_ac].xcdb101,g_xcdb3_d[l_ac].xcdb102)
                WHERE xcdbent = g_enterprise 
                 AND xcdbld   = g_xcdb_m.xcdbld 
                 AND xcdb003  = g_xcdb_m.xcdb003 
                 AND xcdb004  = g_xcdb_m.xcdb004 
                 AND xcdb005  = g_xcdb_m.xcdb005 
                 AND xcdb001  = g_xcdb3_d_t.xcdb001   
                 AND xcdb002  = g_xcdb3_d_t.xcdb002  
                 AND xcdb006  = g_xcdb3_d_t.xcdb006  
                 AND xcdb007  = g_xcdb3_d_t.xcdb007  
                 AND xcdb008  = g_xcdb3_d_t.xcdb008  
                 AND xcdb009  = g_xcdb3_d_t.xcdb009  
                 AND xcdb010  = g_xcdb3_d_t.xcdb010   
 
                 
               #add-point:單身修改中
 
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcdb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "xcdb_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
 
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcdb_m.xcdbld
               LET gs_keys_bak[1] = g_xcdbld_t
               LET gs_keys[2] = g_xcdb_m.xcdb003
               LET gs_keys_bak[2] = g_xcdb003_t
               LET gs_keys[3] = g_xcdb_m.xcdb004
               LET gs_keys_bak[3] = g_xcdb004_t
               LET gs_keys[4] = g_xcdb_m.xcdb005
               LET gs_keys_bak[4] = g_xcdb005_t
               LET gs_keys[5] = g_xcdb3_d[g_detail_idx].xcdb001
               LET gs_keys_bak[5] = g_xcdb3_d_t.xcdb001
               LET gs_keys[6] = g_xcdb3_d[g_detail_idx].xcdb002
               LET gs_keys_bak[6] = g_xcdb3_d_t.xcdb002
               LET gs_keys[7] = g_xcdb3_d[g_detail_idx].xcdb006
               LET gs_keys_bak[7] = g_xcdb3_d_t.xcdb006
               LET gs_keys[8] = g_xcdb3_d[g_detail_idx].xcdb007
               LET gs_keys_bak[8] = g_xcdb3_d_t.xcdb007
               LET gs_keys[9] = g_xcdb3_d[g_detail_idx].xcdb008
               LET gs_keys_bak[9] = g_xcdb3_d_t.xcdb008
               LET gs_keys[10] = g_xcdb3_d[g_detail_idx].xcdb009
               LET gs_keys_bak[10] = g_xcdb3_d_t.xcdb009
               LET gs_keys[11] = g_xcdb3_d[g_detail_idx].xcdb010
               LET gs_keys_bak[11] = g_xcdb3_d_t.xcdb010
               CALL axct305_update_b('xcdb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_xcdb_m),util.JSON.stringify(g_xcdb3_d_t)
                     LET g_log2 = util.JSON.stringify(g_xcdb_m),util.JSON.stringify(g_xcdb3_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後
 
               #end add-point
            END IF
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xcdb3_d.getLength() = 0 THEN
               NEXT FIELD xcdb001
            END IF
            #add-point:input段after input 
 
            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xcdb3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xcdb3_d.getLength()+1
            
      END INPUT
      
#      INPUT ARRAY g_xcdb3_d FROM s_detail3.*
#         ATTRIBUTE(COUNT = g_rec_b, WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
#                   INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 
#
#                   DELETE ROW = l_allow_delete,
#                   APPEND ROW = l_allow_insert)
# 
#         #自訂單身ACTION
#         
#                 
#         BEFORE INPUT
#            
#            CALL axct305_b_fill(g_wc2) 
#            IF g_rec_b != 0 THEN             
#               CALL fgl_set_arr_curr(l_ac)
#            END IF
#            #add-point:資料輸入前

#            #end add-point
# 
#         BEFORE ROW 
#            LET l_cmd = ''
#            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
#            LET l_ac = ARR_CURR()                #returns the current row
#            IF l_ac > g_rec_b THEN               #不可超過最後一筆
#               CALL fgl_set_arr_curr(g_rec_b)   #moves to a specific row         
#            END IF
#           
#            LET l_lock_sw = 'N'                  #DEFAULT
#            LET l_n = ARR_COUNT()                #the number of rows containing  
#            
#            
#            CALL s_transaction_begin()
#            IF g_rec_b >= l_ac THEN
#               LET l_cmd='u'
#               CALL axct305_set_entry_b(l_cmd)
#               #add-point:set_entry_b後

#               #end add-point
#               CALL axct305_set_no_entry_b(l_cmd)
#               LET g_xcdb3_d_t.* = g_xcdb3_d[l_ac].*   #BACKUP  #page1
#               LET g_xcdb3_d_o.* = g_xcdb3_d[l_ac].*   #BACKUP  #page1
#            END IF 
#            
#             
#         BEFORE INSERT
#            LET g_insert = 'Y' 
#            NEXT FIELD xcdb001
# 
#            INITIALIZE g_xcdb3_d_t.* TO NULL
#            INITIALIZE g_xcdb3_d_o.* TO NULL
#            LET l_insert = TRUE
#            LET l_n = ARR_COUNT()
#            LET l_cmd = 'a'
#            INITIALIZE g_xcdb3_d[l_ac].* TO NULL
#            #公用欄位預設值
#              
#            #一般欄位預設值
#            
#            
#            #add-point:modify段before備份

#            #end add-point
#            LET g_xcdb3_d_t.* = g_xcdb3_d[l_ac].*     #新輸入資料
#            LET g_xcdb3_d_o.* = g_xcdb3_d[l_ac].*     #新輸入資料
#            CALL cl_show_fld_cont()
#            CALL axct305_set_entry_b(l_cmd)
#            #add-point:set_entry_b後

#            #end add-point
#            CALL axct305_set_no_entry_b(l_cmd)
#            IF lb_reproduce THEN
#               LET lb_reproduce = FALSE
#               LET g_xcdb_d[li_reproduce_target].* = g_xcdb_d[li_reproduce].*
#               LET g_xcdb2_d[li_reproduce_target].* = g_xcdb2_d[li_reproduce].*
#               LET g_xcdb3_d[li_reproduce_target].* = g_xcdb3_d[li_reproduce].*
# 
#               LET g_xcdb3_d[li_reproduce_target].xcdb001 = NULL
#               LET g_xcdb3_d[li_reproduce_target].xcdb002 = NULL
#               LET g_xcdb3_d[li_reproduce_target].xcdb006 = NULL
#               LET g_xcdb3_d[li_reproduce_target].xcdb007 = NULL
#               LET g_xcdb3_d[li_reproduce_target].xcdb008 = NULL
#               LET g_xcdb3_d[li_reproduce_target].xcdb009 = NULL
#               LET g_xcdb3_d[li_reproduce_target].xcdb010 = NULL
#            END IF
#            
#            #add-point:modify段before insert

#            #end add-point
#            
#         BEFORE DELETE                            #是否取消單身
#            IF l_cmd = 'a' THEN
#               LET l_cmd='d'
#            ELSE
#               IF NOT cl_ask_del_detail() THEN
#                  CANCEL DELETE
#               END IF
#               IF l_lock_sw = "Y" THEN
#                  INITIALIZE g_errparam TO NULL 
#                  LET g_errparam.extend = "" 
#                  LET g_errparam.code   =  -263 
#                  LET g_errparam.popup  = TRUE 
#                  CALL cl_err()
#                  CANCEL DELETE
#               END IF
#               IF axct305_before_delete() THEN 
#                  
#                  CALL s_transaction_end('Y','0')
#               ELSE 
#                  CALL s_transaction_end('N','0')
#                  CANCEL DELETE   
#               END IF 
#               CLOSE axct305_bcl
#               CALL s_transaction_end('Y','0') 
#               LET l_count = g_xcdb3_d.getLength()
#            END IF
#            
#         AFTER DELETE 
#            IF l_cmd <> 'd' THEN
#               #add-point:單身AFTER DELETE 

#               #end add-point
#                              CALL axct305_delete_b('xcdb_t',gs_keys,"'3'")
#            END IF
#            #如果是最後一筆
#            IF l_ac = (g_xcdb3_d.getLength() + 1) THEN
#               CALL FGL_SET_ARR_CURR(l_ac-1)
#            END IF
# 
#         ON ROW CHANGE 
#            IF INT_FLAG THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = '' 
#               LET g_errparam.code   = 9001 
#               LET g_errparam.popup  = FALSE 
#               CALL cl_err()
#               LET INT_FLAG = 0
#               LET g_xcdb3_d[l_ac].* = g_xcdb3_d_t.*
#               CLOSE axct305_bcl
#               CALL s_transaction_end('N','0')
#               EXIT DIALOG 
#            END IF
#            
#            IF l_lock_sw = 'Y' THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = g_xcdb_d[l_ac].xcdb001 
#               LET g_errparam.code   = -263 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
#               LET g_xcdb3_d[l_ac].* = g_xcdb3_d_t.*
#            ELSE
#               #寫入修改者/修改日期資訊
#               
#                
#               #add-point:單身修改前

#               #end add-point
#      
#               UPDATE xcdb_t SET (xcdbld,xcdb003,xcdb004,xcdb005,xcdb001,xcdb006,xcdb007,xcdb008,xcdj014, 
#                   xcdb009,xcdb010,xcdb007,xcdb008,xcdj016,xcdj017,xcdb009,xcdj020,xcdb002,xcdb101,xcdb102) = (g_xcdb_m.xcdbld, 
#                   g_xcdb_m.xcdb003,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005,g_xcdb_d[l_ac].xcdb001,g_xcdb_d[l_ac].xcdb006, 
#                   g_xcdb_d[l_ac].xcdb007,g_xcdb_d[l_ac].xcdb008,g_xcdb_d[l_ac].xcdj014,g_xcdb_d[l_ac].xcdb009, 
#                   g_xcdb_d[l_ac].xcdb010,g_xcdb_d[l_ac].xcdb007,g_xcdb_d[l_ac].xcdb008,g_xcdb_d[l_ac].xcdj016, 
#                   g_xcdb_d[l_ac].xcdj017,g_xcdb_d[l_ac].xcdb009,g_xcdb_d[l_ac].xcdj020,g_xcdb_d[l_ac].xcdb002, 
#                   g_xcdb_d[l_ac].xcdb101,g_xcdb_d[l_ac].xcdb102) #自訂欄位頁簽
#                WHERE xcdbent = g_enterprise AND xcdbld = g_xcdb_m.xcdbld
#                 AND xcdb003 = g_xcdb_m.xcdb003
#                 AND xcdb004 = g_xcdb_m.xcdb004
#                 AND xcdb005 = g_xcdb_m.xcdb005
#                 AND xcdb001 = g_xcdb3_d_t.xcdb001 #項次 
#                 AND xcdb002 = g_xcdb3_d_t.xcdb002
#                 AND xcdb006 = g_xcdb3_d_t.xcdb006
#                 AND xcdb007 = g_xcdb3_d_t.xcdb007
#                 AND xcdb008 = g_xcdb3_d_t.xcdb008
#                 AND xcdb009 = g_xcdb3_d_t.xcdb009
#                 AND xcdb010 = g_xcdb3_d_t.xcdb010
#               #add-point:單身修改中

#               #end add-point
#               CASE
#                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
#                     INITIALIZE g_errparam TO NULL 
#                     LET g_errparam.extend = "xcdb_t" 
#                     LET g_errparam.code   = "std-00009" 
#                     LET g_errparam.popup  = TRUE 
#                     CALL cl_err()
#                     CALL s_transaction_end('N','0')
#                  WHEN SQLCA.sqlcode #其他錯誤
#                     INITIALIZE g_errparam TO NULL 
#                     LET g_errparam.extend = "xcdb_t" 
#                     LET g_errparam.code   = SQLCA.sqlcode 
#                     LET g_errparam.popup  = TRUE 
#                     CALL cl_err()
#                     CALL s_transaction_end('N','0')
#                  OTHERWISE
#                                    INITIALIZE gs_keys TO NULL 
#               LET gs_keys[1] = g_xcdb_m.xcdbld
#               LET gs_keys_bak[1] = g_xcdbld_t
#               LET gs_keys[2] = g_xcdb_m.xcdb003
#               LET gs_keys_bak[2] = g_xcdb003_t
#               LET gs_keys[3] = g_xcdb_m.xcdb004
#               LET gs_keys_bak[3] = g_xcdb004_t
#               LET gs_keys[4] = g_xcdb_m.xcdb005
#               LET gs_keys_bak[4] = g_xcdb005_t
#               LET gs_keys[5] = g_xcdb3_d[g_detail_idx].xcdb001
#               LET gs_keys_bak[5] = g_xcdb3_d_t.xcdb001
#               LET gs_keys[6] = g_xcdb3_d[g_detail_idx].xcdb002
#               LET gs_keys_bak[6] = g_xcdb3_d_t.xcdb002
#               LET gs_keys[7] = g_xcdb3_d[g_detail_idx].xcdb006
#               LET gs_keys_bak[7] = g_xcdb3_d_t.xcdb006
#               LET gs_keys[8] = g_xcdb3_d[g_detail_idx].xcdb007
#               LET gs_keys_bak[8] = g_xcdb3_d_t.xcdb007
#               LET gs_keys[9] = g_xcdb3_d[g_detail_idx].xcdb008
#               LET gs_keys_bak[9] = g_xcdb3_d_t.xcdb008
#               LET gs_keys[10] = g_xcdb3_d[g_detail_idx].xcdb009
#               LET gs_keys_bak[10] = g_xcdb3_d_t.xcdb009
#               LET gs_keys[11] = g_xcdb3_d[g_detail_idx].xcdb010
#               LET gs_keys_bak[11] = g_xcdb3_d_t.xcdb010
#               CALL axct305_update_b('xcdb_t',gs_keys,gs_keys_bak,"'3'")
#                     #多語言處理
#                     
#                     LET g_log1 = util.JSON.stringify(g_xcdb_m),util.JSON.stringify(g_xcdb3_d_t)
#                     LET g_log2 = util.JSON.stringify(g_xcdb_m),util.JSON.stringify(g_xcdb3_d[l_ac])
#                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
#                        CALL s_transaction_end('N','0')
#                     END IF
#               END CASE
#               
#               #add-point:單身修改後

#               #end add-point
#            END IF
#         
#                  #此段落由子樣板a01產生
#         BEFORE FIELD lbl_xcdb102_3
#            #add-point:BEFORE FIELD lbl_xcdb102_3

#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD lbl_xcdb102_3
#            
#            #add-point:AFTER FIELD lbl_xcdb102_3

#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE lbl_xcdb102_3
#            #add-point:ON CHANGE lbl_xcdb102_3

#            #END add-point
# 
# 
#                  #Ctrlp:input.c.page3.lbl_xcdb102_3
#         ON ACTION controlp INFIELD lbl_xcdb102_3
#            #add-point:ON ACTION controlp INFIELD lbl_xcdb102_3

#            #END add-point
# 
# 
# 
#         AFTER ROW
#            LET l_ac = ARR_CURR()
#            LET l_ac_t = l_ac
#            IF INT_FLAG THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = '' 
#               LET g_errparam.code   = 9001 
#               LET g_errparam.popup  = FALSE 
#               CALL cl_err()
#               LET INT_FLAG = 0
#               IF l_cmd = 'u' THEN
#                  LET g_xcdb3_d[l_ac].* = g_xcdb3_d_t.*
#               END IF
#               CLOSE axct305_bcl
#               CALL s_transaction_end('N','0')
#               EXIT DIALOG 
#            END IF
# 
#            CLOSE axct305_bcl
#            CALL s_transaction_end('Y','0')
# 
#         AFTER INPUT
#            #add-point:input段after input 

#            #end add-point    
# 
#         ON ACTION controlo
#            CALL FGL_SET_ARR_CURR(g_xcdb3_d.getLength()+1)
#            LET lb_reproduce = TRUE
#            LET li_reproduce = l_ac
#            LET li_reproduce_target = g_xcdb3_d.getLength()+1
# 
#      END INPUT
# 
#      
#      DISPLAY ARRAY g_xcdb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
#      
#         BEFORE ROW
#            CALL axct305_b_fill(g_wc2) 
#            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
#            LET l_ac = g_detail_idx
#            DISPLAY g_detail_idx TO FORMONLY.idx
#            CALL axct305_ui_detailshow()
#        
#         BEFORE DISPLAY 
#            CALL FGL_SET_ARR_CURR(g_detail_idx)      
#         
#         #add-point:page2自定義行為

#         #end add-point
#         
#      END DISPLAY
 
      
 
      
      #add-point:input段more_input

      #end add-point    
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()    
         #add-point:input段before_dialog

         #end add-point 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xcdbld
        ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xcdb001
               WHEN "s_detail2"
                  NEXT FIELD xcdb001_2
               WHEN "s_detail3"
                  NEXT FIELD xcdb001_3
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #add-point:input段after_input

   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axct305.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axct305_show()
   #add-point:show段define
   
   #end add-point
   
   #add-point:show段之前
   
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL axct305_b_fill(g_wc2) #單身填充
      CALL axct305_b_fill2('0') #單身填充
   END IF
   
   
 
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL axct305_set_pk_array()
   #add-point:ON ACTION agendum
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   DISPLAY BY NAME g_xcdb_m.xcdbcomp,g_xcdb_m.xcdbcomp_desc,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005,g_xcdb_m.xcdbld, 
       g_xcdb_m.xcdbld_desc,g_xcdb_m.xcdb003,g_xcdb_m.xcdb003_desc
   CALL axct305_b_fill(g_wc2_table1)                 #單身
   CALL axct305_b_fill2('0') #單身填充
 
   CALL axct305_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後
   
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="axct305.ref_show" >}
#+ 帶出reference資料
PRIVATE FUNCTION axct305_ref_show()
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define
   
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference
   
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xcdb_d.getLength()
      #add-point:ref_show段d_reference
      
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xcdb2_d.getLength()
      #add-point:ref_show段d2_reference
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xcdb3_d.getLength()
      #add-point:ref_show段d3_reference
      
      #end add-point
   END FOR
 
   
   #add-point:ref_show段自訂
   
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION
 
{</section>}
 
{<section id="axct305.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axct305_reproduce()
   DEFINE l_newno     LIKE xcdb_t.xcdbld 
   DEFINE l_oldno     LIKE xcdb_t.xcdbld 
   DEFINE l_newno02     LIKE xcdb_t.xcdb003 
   DEFINE l_oldno02     LIKE xcdb_t.xcdb003 
   DEFINE l_newno03     LIKE xcdb_t.xcdb004 
   DEFINE l_oldno03     LIKE xcdb_t.xcdb004 
   DEFINE l_newno04     LIKE xcdb_t.xcdb005 
   DEFINE l_oldno04     LIKE xcdb_t.xcdb005 
 
   DEFINE l_master    RECORD LIKE xcdb_t.*
   DEFINE l_detail    RECORD LIKE xcdb_t.*
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   
   #end add-point
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_xcdb_m.xcdbld IS NULL
      OR g_xcdb_m.xcdb003 IS NULL
      OR g_xcdb_m.xcdb004 IS NULL
      OR g_xcdb_m.xcdb005 IS NULL
 
      THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
   
   LET g_xcdbld_t = g_xcdb_m.xcdbld
   LET g_xcdb003_t = g_xcdb_m.xcdb003
   LET g_xcdb004_t = g_xcdb_m.xcdb004
   LET g_xcdb005_t = g_xcdb_m.xcdb005
 
   
   LET g_xcdb_m.xcdbld = ""
   LET g_xcdb_m.xcdb003 = ""
   LET g_xcdb_m.xcdb004 = ""
   LET g_xcdb_m.xcdb005 = ""
 
    
   CALL axct305_set_entry('a')
   CALL axct305_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   
   #end add-point
   
   CALL axct305_input("r")
   
      LET g_xcdb_m.xcdbld_desc = ''
   DISPLAY BY NAME g_xcdb_m.xcdbld_desc
   LET g_xcdb_m.xcdb003_desc = ''
   DISPLAY BY NAME g_xcdb_m.xcdb003_desc
 
    
   IF INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      INITIALIZE g_xcdb_m.* TO NULL
      INITIALIZE g_xcdb_d TO NULL
      INITIALIZE g_xcdb2_d TO NULL
      INITIALIZE g_xcdb3_d TO NULL
 
      CALL axct305_show()
      LET INT_FLAG = 0
      RETURN
   END IF
   
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_xcdbld_t = g_xcdb_m.xcdbld
   LET g_xcdb003_t = g_xcdb_m.xcdb003
   LET g_xcdb004_t = g_xcdb_m.xcdb004
   LET g_xcdb005_t = g_xcdb_m.xcdb005
 
   
   #組合新增資料的條件
   LET g_add_browse = " xcdbent = '" ||g_enterprise|| "' AND",
                      " xcdbld = '", g_xcdb_m.xcdbld CLIPPED, "' "
                      ," AND xcdb003 = '", g_xcdb_m.xcdb003 CLIPPED, "' "
                      ," AND xcdb004 = '", g_xcdb_m.xcdb004 CLIPPED, "' "
                      ," AND xcdb005 = '", g_xcdb_m.xcdb005 CLIPPED, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axct305_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axct305.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axct305_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xcdb_t.*
 
 
   #add-point:delete段define
   
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axct305_detail
   
   #add-point:單身複製前1
   
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axct305_detail AS ",
                "SELECT * FROM xcdb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axct305_detail SELECT * FROM xcdb_t 
                                         WHERE xcdbent = g_enterprise AND xcdbld = g_xcdbld_t
                                         AND xcdb003 = g_xcdb003_t
                                         AND xcdb004 = g_xcdb004_t
                                         AND xcdb005 = g_xcdb005_t
 
   
   #將key修正為調整後   
   UPDATE axct305_detail 
      #更新key欄位
      SET xcdbld = g_xcdb_m.xcdbld
          , xcdb003 = g_xcdb_m.xcdb003
          , xcdb004 = g_xcdb_m.xcdb004
          , xcdb005 = g_xcdb_m.xcdb005
 
      #更新共用欄位
      
                                       
   #將資料塞回原table   
   INSERT INTO xcdb_t SELECT * FROM axct305_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      RETURN
   END IF
   
   #add-point:單身複製中1
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axct305_detail
   
   #add-point:單身複製後1
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xcdbld_t = g_xcdb_m.xcdbld
   LET g_xcdb003_t = g_xcdb_m.xcdb003
   LET g_xcdb004_t = g_xcdb_m.xcdb004
   LET g_xcdb005_t = g_xcdb_m.xcdb005
 
   
   DROP TABLE axct305_detail
   
END FUNCTION
 
{</section>}
 
{<section id="axct305.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axct305_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   
   #end add-point     
   
   IF g_xcdb_m.xcdbld IS NULL
   OR g_xcdb_m.xcdb003 IS NULL
   OR g_xcdb_m.xcdb004 IS NULL
   OR g_xcdb_m.xcdb005 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
 
   EXECUTE axct305_master_referesh USING g_xcdb_m.xcdbld,g_xcdb_m.xcdb003,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005 INTO g_xcdb_m.xcdbcomp, 
       g_xcdb_m.xcdb004,g_xcdb_m.xcdb005,g_xcdb_m.xcdbld,g_xcdb_m.xcdb003,g_xcdb_m.xcdbcomp_desc,g_xcdb_m.xcdbld_desc, 
       g_xcdb_m.xcdb003_desc
   
   CALL axct305_show()
   
   CALL s_transaction_begin()
   
   
 
   OPEN axct305_cl USING g_enterprise,g_xcdb_m.xcdbld
                                                       ,g_xcdb_m.xcdb003
                                                       ,g_xcdb_m.xcdb004
                                                       ,g_xcdb_m.xcdb005
 
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axct305_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      CLOSE axct305_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH axct305_cl INTO g_xcdb_m.xcdbcomp,g_xcdb_m.xcdbcomp_desc,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005, 
       g_xcdb_m.xcdbld,g_xcdb_m.xcdbld_desc,g_xcdb_m.xcdb003,g_xcdb_m.xcdb003_desc
   
   #若資料已被他人LOCK
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_xcdb_m.xcdbld 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL axct305_set_pk_array()
      #add-point:相關文件刪除前
      
      #end add-point   
      CALL cl_doc_remove()  
 
  
 
      #add-point:單身刪除前
      
      #end add-point
      
      DELETE FROM xcdb_t WHERE xcdbent = g_enterprise AND xcdbld = g_xcdb_m.xcdbld
                                                               AND xcdb003 = g_xcdb_m.xcdb003
                                                               AND xcdb004 = g_xcdb_m.xcdb004
                                                               AND xcdb005 = g_xcdb_m.xcdb005
 
                                                               
      #add-point:單身刪除中
      
      #end add-point
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xcdb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
      END IF
 
      
  
      #add-point:單身刪除後 
      
      #end add-point
      
 
      
      CLEAR FORM
      CALL g_xcdb_d.clear() 
      CALL g_xcdb2_d.clear()       
      CALL g_xcdb3_d.clear()       
 
     
      CALL axct305_ui_browser_refresh()  
      CALL axct305_ui_headershow()  
      CALL axct305_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axct305_fetch('P')
      ELSE
         #LET g_wc = " 1=1"
         #LET g_wc2 = " 1=1"
         #CALL axct305_browser_fill("F")
         CLEAR FORM
      END IF
       
   END IF
 
   CLOSE axct305_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_xcdb_m.xcdbld,'D')
    
END FUNCTION
 
{</section>}
 
{<section id="axct305.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axct305_b_fill(p_wc2)
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   DEFINE l_ac2       LIKE type_t.num5
   DEFINE l_ac3       LIKE type_t.num5
   #end add-point     
 
   #先清空單身變數內容
   CALL g_xcdb_d.clear()
   CALL g_xcdb2_d.clear()
   CALL g_xcdb3_d.clear()
 
 
   #add-point:b_fill段sql_before

   #end add-point
   
   LET g_sql = "SELECT  UNIQUE xcdb001,xcdb006,xcdb007,xcdb008,xcdb009,xcdb011,xcdb010,xcdb002,xcdb101,xcdb102 FROM xcdb_t", 
               " WHERE xcdbent= ? AND xcdbld=? AND xcdb003=? AND xcdb004=? AND xcdb005=? AND xcdb001 = ? "
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("xcdb_t")
   END IF
   
   #add-point:b_fill段sql_after

   #end add-point
   
   #子單身的WC
   
   
   LET g_sql = g_sql, " ORDER BY xcdb001,xcdb002,xcdb006,xcdb007,xcdb008,xcdb009,xcdb010"
   
   #add-point:b_fill段fill_before

   #end add-point
   
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE axct305_pb FROM g_sql
   DECLARE b_fill_cs CURSOR FOR axct305_pb
   
   LET g_cnt = l_ac
   LET l_ac = 1
   
   OPEN b_fill_cs USING g_enterprise,g_xcdb_m.xcdbld,g_xcdb_m.xcdb003,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005,'1'
                                            
   FOREACH b_fill_cs INTO g_xcdb_d[l_ac].xcdb001,g_xcdb_d[l_ac].xcdb006,g_xcdb_d[l_ac].xcdb007,g_xcdb_d[l_ac].xcdb008,g_xcdb_d[l_ac].xcdb009,
                          g_xcdb_d[l_ac].xcdb011,g_xcdb_d[l_ac].xcdb010,g_xcdb_d[l_ac].xcdb002,g_xcdb_d[l_ac].xcdb101,g_xcdb_d[l_ac].xcdb102 
                          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
                        
      #add-point:b_fill段資料填充

      #end add-point
   
      #帶出公用欄位reference值
      
      
      
      
 
     
      #add-point:單身資料抓取

      #end add-point
   
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
         END IF 
         EXIT FOREACH
      END IF
   
      LET l_ac = l_ac + 1
      
   END FOREACH
 
   CALL g_xcdb_d.deleteElement(g_xcdb_d.getLength())
 
      
   
   #add-point:b_fill段more

   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
 
   LET g_cnt = l_ac2
   LET l_ac2 = 1
   
   OPEN b_fill_cs USING g_enterprise,g_xcdb_m.xcdbld,g_xcdb_m.xcdb003,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005,'2'
                                            
   FOREACH b_fill_cs INTO g_xcdb2_d[l_ac2].xcdb001,g_xcdb2_d[l_ac2].xcdb006,g_xcdb2_d[l_ac2].xcdb007,g_xcdb2_d[l_ac2].xcdb008,g_xcdb2_d[l_ac2].xcdb009,
                          g_xcdb2_d[l_ac2].xcdb011,g_xcdb2_d[l_ac2].xcdb010,g_xcdb2_d[l_ac2].xcdb002,g_xcdb2_d[l_ac2].xcdb101,g_xcdb2_d[l_ac2].xcdb102 
                          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
                        
      #add-point:b_fill段資料填充
 
      #end add-point
   
      #帶出公用欄位reference值
      
      
      
      
 
     
      #add-point:單身資料抓取
 
      #end add-point
   
      IF l_ac2 > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac2
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
         END IF 
         EXIT FOREACH
      END IF
   
      LET l_ac2 = l_ac2 + 1
      
   END FOREACH
 
   CALL g_xcdb2_d.deleteElement(g_xcdb2_d.getLength())
 
      
   
   #add-point:b_fill段more
 
   #end add-point
   
   LET g_rec_b=l_ac2-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac2 = g_cnt
   LET g_cnt = 0
 
   LET g_cnt = l_ac3
   LET l_ac3 = 1
   
   OPEN b_fill_cs USING g_enterprise,g_xcdb_m.xcdbld,g_xcdb_m.xcdb003,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005,'3'
                                            
   FOREACH b_fill_cs INTO g_xcdb3_d[l_ac3].xcdb001,g_xcdb3_d[l_ac3].xcdb006,g_xcdb3_d[l_ac3].xcdb007,g_xcdb3_d[l_ac3].xcdb008,g_xcdb3_d[l_ac3].xcdb009,
                          g_xcdb3_d[l_ac3].xcdb011,g_xcdb3_d[l_ac3].xcdb010,g_xcdb3_d[l_ac3].xcdb002,g_xcdb3_d[l_ac3].xcdb101,g_xcdb3_d[l_ac3].xcdb102 
                          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
                        
      #add-point:b_fill段資料填充
 
      #end add-point
   
      #帶出公用欄位reference值
      
      
      
      
 
     
      #add-point:單身資料抓取
 
      #end add-point
   
      IF l_ac3 > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac3
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
         END IF 
         EXIT FOREACH
      END IF
   
      LET l_ac3 = l_ac3 + 1
      
   END FOREACH
 
   CALL g_xcdb3_d.deleteElement(g_xcdb3_d.getLength())
 
      
   
   #add-point:b_fill段more
 
   #end add-point
   
   LET g_rec_b=l_ac3-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac3 = g_cnt
   LET g_cnt = 0
 
   FREE axct305_pb   
   
END FUNCTION
 
{</section>}
 
{<section id="axct305.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axct305_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   #add-point:b_fill2段define
   
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="axct305.before_delete" >}
#+ 單身db資料刪除
PRIVATE FUNCTION axct305_before_delete(p_n)
   #add-point:before_delete段define
   DEFINE p_n      LIKE type_t.num5
   #end add-point 
   
   #add-point:單筆刪除前

   #end add-point
   IF p_n = '1' THEN   
      DELETE FROM xcdb_t
       WHERE xcdbent = g_enterprise AND xcdbld = g_xcdb_m.xcdbld AND
                                 xcdb003 = g_xcdb_m.xcdb003 AND
                                 xcdb004 = g_xcdb_m.xcdb004 AND
                                 xcdb005 = g_xcdb_m.xcdb005 AND
      
             xcdb001 = g_xcdb_d_t.xcdb001
         AND xcdb002 = g_xcdb_d_t.xcdb002
         AND xcdb006 = g_xcdb_d_t.xcdb006
         AND xcdb007 = g_xcdb_d_t.xcdb007
         AND xcdb008 = g_xcdb_d_t.xcdb008
         AND xcdb009 = g_xcdb_d_t.xcdb009
         AND xcdb010 = g_xcdb_d_t.xcdb010
      
         
      #add-point:單筆刪除中

      #end add-point
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xcdb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      
         RETURN FALSE 
      END IF
   END IF
   #add-point:單筆刪除後

   #end add-point
 
   IF p_n = '2' THEN   
      DELETE FROM xcdb_t
       WHERE xcdbent = g_enterprise AND xcdbld = g_xcdb_m.xcdbld AND
                                 xcdb003 = g_xcdb_m.xcdb003 AND
                                 xcdb004 = g_xcdb_m.xcdb004 AND
                                 xcdb005 = g_xcdb_m.xcdb005 AND
      
             xcdb001 = g_xcdb2_d_t.xcdb001
         AND xcdb002 = g_xcdb2_d_t.xcdb002
         AND xcdb006 = g_xcdb2_d_t.xcdb006
         AND xcdb007 = g_xcdb2_d_t.xcdb007
         AND xcdb008 = g_xcdb2_d_t.xcdb008
         AND xcdb009 = g_xcdb2_d_t.xcdb009
         AND xcdb010 = g_xcdb2_d_t.xcdb010
      
         
      #add-point:單筆刪除中
 
      #end add-point
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xcdb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      
         RETURN FALSE 
      END IF
   END IF
 
   IF p_n = '3' THEN   
      DELETE FROM xcdb_t
       WHERE xcdbent = g_enterprise AND xcdbld = g_xcdb_m.xcdbld AND
                                 xcdb003 = g_xcdb_m.xcdb003 AND
                                 xcdb004 = g_xcdb_m.xcdb004 AND
                                 xcdb005 = g_xcdb_m.xcdb005 AND
      
             xcdb001 = g_xcdb3_d_t.xcdb001
         AND xcdb002 = g_xcdb3_d_t.xcdb002
         AND xcdb006 = g_xcdb3_d_t.xcdb006
         AND xcdb007 = g_xcdb3_d_t.xcdb007
         AND xcdb008 = g_xcdb3_d_t.xcdb008
         AND xcdb009 = g_xcdb3_d_t.xcdb009
         AND xcdb010 = g_xcdb3_d_t.xcdb010
      
         
      #add-point:單筆刪除中
 
      #end add-point
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xcdb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      
         RETURN FALSE 
      END IF
   END IF
   
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
   
   RETURN TRUE
    
END FUNCTION
 
{</section>}
 
{<section id="axct305.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axct305_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   
   #end add-point     
 
 
   
END FUNCTION
 
{</section>}
 
{<section id="axct305.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axct305_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   
   #end add-point     
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axct305.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axct305_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axct305.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axct305_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   
   #end add-point   
   
   #先刷新資料
   #CALL axct305_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axct305.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axct305_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   
   #end add-point  
   
 
 
END FUNCTION
 
{</section>}
 
{<section id="axct305.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axct305_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xcdbld,xcdb003,xcdb004,xcdb005",TRUE)
      #add-point:set_entry段欄位控制
      
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axct305.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axct305_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xcdbld,xcdb003,xcdb004,xcdb005",FALSE)
      #add-point:set_no_entry段欄位控制
      
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axct305.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axct305_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   
   #end add-point     
   
   #add-point:set_entry_b段
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axct305.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axct305_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   
   #end add-point    
   
   #add-point:set_no_entry_b段
   
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="axct305.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axct305_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   
   #end add-point  
   
   #add-point:default_search段開始前
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xcdbld = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xcdb003 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xcdb004 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " xcdb005 = '", g_argv[04], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="axct305.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axct305_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define
   
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   
   #add-point:fill_chk段other
   
   #end add-point
   
   RETURN FALSE
 
END FUNCTION
 
{</section>}
 
{<section id="axct305.modify_detail_chk" >}
#+ 單身輸入判定
PRIVATE FUNCTION axct305_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "xcdb001"
      WHEN "s_detail2"
         LET ls_return = "xcdb001_2"
      WHEN "s_detail3"
         LET ls_return = "xcdb001_3"
 
      #add-point:modify_detail_chk段自訂page控制
      
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
 
{</section>}
 
{<section id="axct305.state_change" >}
    
 
{</section>}
 
{<section id="axct305.set_pk_array" >}
   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION axct305_set_pk_array()
   #add-point:set_pk_array段define
   
   #end add-point
   
   #add-point:set_pk_array段之前
   
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xcdb_m.xcdbld
   LET g_pk_array[1].column = 'xcdbld'
   LET g_pk_array[2].values = g_xcdb_m.xcdb003
   LET g_pk_array[2].column = 'xcdb003'
   LET g_pk_array[3].values = g_xcdb_m.xcdb004
   LET g_pk_array[3].column = 'xcdb004'
   LET g_pk_array[4].values = g_xcdb_m.xcdb005
   LET g_pk_array[4].column = 'xcdb005'
   
   #add-point:set_pk_array段之後
   
   #end add-point  
   
END FUNCTION
 
 
 
{</section>}
 
{<section id="axct305.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct305_default()
#预设当前site的法人，主账套，年度期别，成本计算类型
    CALL s_axc_set_site_default() RETURNING g_xcdb_m.xcdbcomp,g_xcdb_m.xcdbld,g_xcdb_m.xcdb004,g_xcdb_m.xcdb005,g_xcdb_m.xcdb003

    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_xcdb_m.xcdbcomp
    CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
    LET g_xcdb_m.xcdbcomp_desc = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_xcdb_m.xcdbcomp_desc 
    
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_xcdb_m.xcdbld
    CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
    LET g_xcdb_m.xcdbld_desc = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_xcdb_m.xcdbld_desc 

    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_xcdb_m.xcdb003
    CALL ap_ref_array2(g_ref_fields,"SELECT xcatl003 FROM xcatl_t WHERE xcatlent='"||g_enterprise||"' AND xcatl001=? AND xcatl002='"||g_dlang||"'","") RETURNING g_rtn_fields
    LET g_xcdb_m.xcdb003_desc = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_xcdb_m.xcdb003_desc
                  
END FUNCTION

 
{</section>}
 
