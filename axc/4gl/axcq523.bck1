#該程式未解開Section, 採用最新樣板產出!
{<section id="axcq523.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0004(2015-04-02 17:09:54), PR版次:0004(2016-11-11 16:22:26)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000040
#+ Filename...: axcq523
#+ Description: 在製元件製程成本次要素查詢作業
#+ Creator....: 05426(2015-04-01 09:17:28)
#+ Modifier...: 05426 -SD/PR- 02295
 
{</section>}
 
{<section id="axcq523.global" >}
#應用 i07 樣板自動產生(Version:49)
#add-point:填寫註解說明 name="global.memo"
#Memos
#160802-00020#7   2016/10/07 By shiun       增加帳套權限管控、法人權限管控
#161019-00017#8   2016/10/19 By zhujing     据点组织开窗资料整批调整
#161027-00007#1   16/11/09 By 02295 工单开窗与资料查询排除非工艺的工单
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xcdf_m        RECORD
       xcdfcomp LIKE xcdf_t.xcdfcomp, 
   xcdfcomp_desc LIKE type_t.chr80, 
   xcdf004 LIKE xcdf_t.xcdf004, 
   xcdf005 LIKE xcdf_t.xcdf005, 
   xcdf009 LIKE xcdf_t.xcdf009, 
   xcdf009_desc LIKE type_t.chr80, 
   xcdf009_desc_1 LIKE type_t.chr80, 
   xcdf010 LIKE xcdf_t.xcdf010, 
   xcdfld LIKE xcdf_t.xcdfld, 
   xcdfld_desc LIKE type_t.chr80, 
   xcdf001 LIKE xcdf_t.xcdf001, 
   xcdf001_desc LIKE type_t.chr80, 
   xcdf006 LIKE xcdf_t.xcdf006, 
   xcdf007 LIKE xcdf_t.xcdf007, 
   xcdf007_desc LIKE type_t.chr80, 
   xcdf008 LIKE xcdf_t.xcdf008, 
   xcdf002 LIKE xcdf_t.xcdf002, 
   xcdf002_desc LIKE type_t.chr80, 
   xcdf003 LIKE xcdf_t.xcdf003, 
   xcdf003_desc LIKE type_t.chr80, 
   xcdf011 LIKE xcdf_t.xcdf011
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xcdf_d        RECORD
       xcau003 LIKE type_t.num10, 
   xcdf012 LIKE xcdf_t.xcdf012, 
   lbl_xcdf012_desc LIKE type_t.chr500, 
   xcdf101 LIKE xcdf_t.xcdf101, 
   xcdf201 LIKE xcdf_t.xcdf201, 
   xcdf203 LIKE xcdf_t.xcdf203, 
   xcdf205 LIKE xcdf_t.xcdf205, 
   xcdf207 LIKE xcdf_t.xcdf207, 
   xcdf209 LIKE xcdf_t.xcdf209, 
   xcdf301 LIKE xcdf_t.xcdf301, 
   xcdf303 LIKE xcdf_t.xcdf303, 
   xcdf309 LIKE xcdf_t.xcdf309, 
   xcdf331 LIKE xcdf_t.xcdf331, 
   xcdf901 LIKE xcdf_t.xcdf901, 
   xcdf102 LIKE xcdf_t.xcdf102, 
   xcdf202 LIKE xcdf_t.xcdf202, 
   xcdf204 LIKE xcdf_t.xcdf204, 
   xcdf206 LIKE xcdf_t.xcdf206, 
   xcdf208 LIKE xcdf_t.xcdf208, 
   xcdf210 LIKE xcdf_t.xcdf210, 
   xcdf302 LIKE xcdf_t.xcdf302, 
   xcdf304 LIKE xcdf_t.xcdf304, 
   xcdf310 LIKE xcdf_t.xcdf310, 
   xcdf332 LIKE xcdf_t.xcdf332, 
   xcdf902 LIKE xcdf_t.xcdf902
       END RECORD
 
 
#add-point:自定義模組變數(Module Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
#add--160802-00020#7 By shiun--(S)
DEFINE g_wc_cs_ld            STRING
DEFINE g_wc_cs_comp          STRING
#add--160802-00020#7 By shiun--(E)
#end add-point
 
 
#模組變數(Module Variables)
DEFINE g_xcdf_m          type_g_xcdf_m
DEFINE g_xcdf_m_t        type_g_xcdf_m
DEFINE g_xcdf_m_o        type_g_xcdf_m
DEFINE g_xcdf_m_mask_o   type_g_xcdf_m #轉換遮罩前資料
DEFINE g_xcdf_m_mask_n   type_g_xcdf_m #轉換遮罩後資料
 
   DEFINE g_xcdf004_t LIKE xcdf_t.xcdf004
DEFINE g_xcdf005_t LIKE xcdf_t.xcdf005
DEFINE g_xcdf009_t LIKE xcdf_t.xcdf009
DEFINE g_xcdf010_t LIKE xcdf_t.xcdf010
DEFINE g_xcdfld_t LIKE xcdf_t.xcdfld
DEFINE g_xcdf001_t LIKE xcdf_t.xcdf001
DEFINE g_xcdf006_t LIKE xcdf_t.xcdf006
DEFINE g_xcdf007_t LIKE xcdf_t.xcdf007
DEFINE g_xcdf008_t LIKE xcdf_t.xcdf008
DEFINE g_xcdf002_t LIKE xcdf_t.xcdf002
DEFINE g_xcdf003_t LIKE xcdf_t.xcdf003
DEFINE g_xcdf011_t LIKE xcdf_t.xcdf011
 
 
DEFINE g_xcdf_d          DYNAMIC ARRAY OF type_g_xcdf_d
DEFINE g_xcdf_d_t        type_g_xcdf_d
DEFINE g_xcdf_d_o        type_g_xcdf_d
DEFINE g_xcdf_d_mask_o   DYNAMIC ARRAY OF type_g_xcdf_d #轉換遮罩前資料
DEFINE g_xcdf_d_mask_n   DYNAMIC ARRAY OF type_g_xcdf_d #轉換遮罩後資料
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_xcdfld LIKE xcdf_t.xcdfld,
      b_xcdf001 LIKE xcdf_t.xcdf001,
      b_xcdf002 LIKE xcdf_t.xcdf002,
      b_xcdf003 LIKE xcdf_t.xcdf003,
      b_xcdf004 LIKE xcdf_t.xcdf004,
      b_xcdf005 LIKE xcdf_t.xcdf005,
      b_xcdf006 LIKE xcdf_t.xcdf006,
      b_xcdf007 LIKE xcdf_t.xcdf007,
      b_xcdf008 LIKE xcdf_t.xcdf008,
      b_xcdf009 LIKE xcdf_t.xcdf009,
      b_xcdf010 LIKE xcdf_t.xcdf010,
      b_xcdf011 LIKE xcdf_t.xcdf011
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num10             #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10             #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10             #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10             #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10             #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10             #Browser目前所在筆數(暫存用)
DEFINE g_current_page        LIKE type_t.num10             #目前所在頁數
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num10             #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入(僅用於三階)
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="axcq523.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:作業初始化 name="main.init"
   #add--160802-00020#7 By shiun--(S)
   CALL s_fin_create_account_center_tmp()                      #展組織下階成員所需之暫存檔 
   CALL s_fin_azzi800_sons_query(g_today)
   CALL s_fin_account_center_ld_str() RETURNING g_wc_cs_ld
   CALL s_fin_get_wc_str(g_wc_cs_ld)  RETURNING g_wc_cs_ld
   CALL s_axc_get_authcomp() RETURNING g_wc_cs_comp            #抓取使用者有拜訪權限據點的對應法人  
   #add--160802-00020#7 By shiun--(E)
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT xcdfcomp,'',xcdf004,xcdf005,xcdf009,'','',xcdf010,xcdfld,'',xcdf001,'', 
       xcdf006,xcdf007,'',xcdf008,xcdf002,'',xcdf003,'',xcdf011", 
                      " FROM xcdf_t",
                      " WHERE xcdfent= ? AND xcdfld=? AND xcdf001=? AND xcdf002=? AND xcdf003=? AND  
                          xcdf004=? AND xcdf005=? AND xcdf006=? AND xcdf007=? AND xcdf008=? AND xcdf009=?  
                          AND xcdf010=? AND xcdf011=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axcq523_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.xcdfcomp,t0.xcdf004,t0.xcdf005,t0.xcdf009,t0.xcdf010,t0.xcdfld,t0.xcdf001, 
       t0.xcdf006,t0.xcdf007,t0.xcdf008,t0.xcdf002,t0.xcdf003,t0.xcdf011,t1.ooefl003 ,t2.imaal003 ,t3.glaal002 , 
       t4.ooail003 ,t5.oocql004 ,t6.xcbfl003 ,t7.xcatl003",
               " FROM xcdf_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.xcdfcomp AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent="||g_enterprise||" AND t2.imaal001=t0.xcdf009 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN glaal_t t3 ON t3.glaalent="||g_enterprise||" AND t3.glaalld=t0.xcdfld AND t3.glaal001='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t4 ON t4.ooailent="||g_enterprise||" AND t4.ooail001=t0.xcdf001 AND t4.ooail002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent="||g_enterprise||" AND t5.oocql001='221' AND t5.oocql002=t0.xcdf007 AND t5.oocql003='"||g_dlang||"' ",
               " LEFT JOIN xcbfl_t t6 ON t6.xcbflent="||g_enterprise||" AND t6.xcbflcomp=t0.xcdfcomp AND t6.xcbfl001=t0.xcdf002 AND t6.xcbfl002='"||g_dlang||"' ",
               " LEFT JOIN xcatl_t t7 ON t7.xcatlent="||g_enterprise||" AND t7.xcatl001=t0.xcdf003 AND t7.xcatl002='"||g_dlang||"' ",
 
               " WHERE t0.xcdfent = " ||g_enterprise|| " AND t0.xcdfld = ? AND t0.xcdf001 = ? AND t0.xcdf002 = ? AND t0.xcdf003 = ? AND t0.xcdf004 = ? AND t0.xcdf005 = ? AND t0.xcdf006 = ? AND t0.xcdf007 = ? AND t0.xcdf008 = ? AND t0.xcdf009 = ? AND t0.xcdf010 = ? AND t0.xcdf011 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE axcq523_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axcq523 WITH FORM cl_ap_formpath("axc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axcq523_init()   
 
      #進入選單 Menu (="N")
      CALL axcq523_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axcq523
      
   END IF 
   
   CLOSE axcq523_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="axcq523.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axcq523_init()
   #add-point:init段define name="init.define_customerization"
   
   #end add-point   
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化 name="init.init"
   CALL cl_set_combo_scc('xcdf001','8914') 
   CALL cl_set_combo_scc('xcau003','8908') 
   #end add-point
   
   CALL axcq523_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="axcq523.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axcq523_ui_dialog()
   #add-point:ui_dialog段define name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE la_param  RECORD
          prog                  STRING,
          actionid              STRING,
          background            LIKE type_t.chr1,
          param                 DYNAMIC ARRAY OF STRING
                                END RECORD
   DEFINE ls_js                 STRING
   DEFINE li_idx                LIKE type_t.num10
   DEFINE ls_wc                 STRING
   DEFINE lb_first              BOOLEAN
   DEFINE l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE
      
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xcdf_m.* TO NULL
         CALL g_xcdf_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axcq523_init()
      END IF
 
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_xcdf_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               #顯示單身筆數
               CALL axcq523_idx_chk()
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               CALL axcq523_ui_detailshow()
               
               #add-point:page1自定義行為 name="ui_dialog.body.before_row"
               
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
    
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         
         BEFORE DIALOG
            #先填充browser資料
            CALL axcq523_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axcq523_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axcq523_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         
    
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axcq523_fetch('F')
            LET g_current_row = g_current_idx         
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq523_idx_chk()
            LET g_action_choice = ""
          
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axcq523_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq523_idx_chk()
            LET g_action_choice = ""
          
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axcq523_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq523_idx_chk()
            LET g_action_choice = ""
        
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axcq523_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq523_idx_chk()
            LET g_action_choice = ""
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axcq523_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq523_idx_chk()
            LET g_action_choice = ""
            
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xcdf_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xcdf012
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axcq523_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axcq523_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLEAR FORM
               ELSE
                  CALL axcq523_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axcq523_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo name="menu.datainfo"
               
               #END add-point
               
            END IF
 
 
 
 
         
         
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL axcq523_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axcq523_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axcq523_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
         CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.browser_search" >}
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axcq523_browser_search(p_type)
   #add-point:browser_search段define name="browser_search.define_customerization"
   
   #end add-point   
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_search.define"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axcq523.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axcq523_browser_fill(ps_page_action)
   #add-point:browser_fill段define name="browser_fill.define_customerization"
   
   #end add-point   
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="browser_fill.before_browser_fill"
   
   #end add-point    
 
   LET l_searchcol = "xcdfld,xcdf001,xcdf002,xcdf003,xcdf004,xcdf005,xcdf006,xcdf007,xcdf008,xcdf009,xcdf010,xcdf011"
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT xcdfld ",
                      ", xcdf001 ",
                      ", xcdf002 ",
                      ", xcdf003 ",
                      ", xcdf004 ",
                      ", xcdf005 ",
                      ", xcdf006 ",
                      ", xcdf007 ",
                      ", xcdf008 ",
                      ", xcdf009 ",
                      ", xcdf010 ",
                      ", xcdf011 ",
 
                      " FROM xcdf_t ",
                      " ",
                      " ", 
 
 
 
                      " WHERE xcdfent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xcdf_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT xcdfld ",
                      ", xcdf001 ",
                      ", xcdf002 ",
                      ", xcdf003 ",
                      ", xcdf004 ",
                      ", xcdf005 ",
                      ", xcdf006 ",
                      ", xcdf007 ",
                      ", xcdf008 ",
                      ", xcdf009 ",
                      ", xcdf010 ",
                      ", xcdf011 ",
 
                      " FROM xcdf_t ",
                      " ",
                      " ", 
 
 
                      " WHERE xcdfent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("xcdf_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   IF l_wc2 <> " 1=1" OR NOT cl_null(l_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xcdfld ",
                      ", xcdf001 ",
                      ", xcdf002 ",
                      ", xcdf003 ",
                      ", xcdf004 ",
                      ", xcdf005 ",
                      ", xcdf006 ",
                      ", xcdf007 ",
                      ", xcdf008 ",
                      ", xcdf009 ",
                      ", xcdf010 ",
                      ", xcdf011 ",
 
                      " FROM xcdf_t ",
                      " LEFT JOIN xcau_t ON xcauent=",g_enterprise," AND xcau001=xcdf012",
                      " ",
 
                      " WHERE xcdfent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xcdf_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xcdfld ",
                      ", xcdf001 ",
                      ", xcdf002 ",
                      ", xcdf003 ",
                      ", xcdf004 ",
                      ", xcdf005 ",
                      ", xcdf006 ",
                      ", xcdf007 ",
                      ", xcdf008 ",
                      ", xcdf009 ",
                      ", xcdf010 ",
                      ", xcdf011 ",
 
                      " FROM xcdf_t ",
                      " LEFT JOIN xcau_t ON xcauent=",g_enterprise," AND xcau001=xcdf012",
                      " ",
                      " WHERE xcdfent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xcdf_t")
   END IF 
   #add--160802-00020#7 By shiun--(S)
   #---增加帳套權限控管
   IF NOT cl_null(g_wc_cs_ld) THEN
      LET l_sub_sql = l_sub_sql ," AND xcdfld IN ",g_wc_cs_ld
    END IF
   #---增加法人過濾條件
   IF NOT cl_null(g_wc_cs_comp) THEN
      LET l_sub_sql = l_sub_sql ," AND xcdfcomp IN ",g_wc_cs_comp
   END IF
   #add--160802-00020#7 By shiun--(E)
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt 
         LET g_errparam.code   = 9035
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   LET g_error_show = 0
 
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xcdf_m.* TO NULL
      CALL g_xcdf_d.clear()        
 
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xcdfld,t0.xcdf001,t0.xcdf002,t0.xcdf003,t0.xcdf004,t0.xcdf005,t0.xcdf006,t0.xcdf007,t0.xcdf008,t0.xcdf009,t0.xcdf010,t0.xcdf011 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT t0.xcdfld,t0.xcdf001,t0.xcdf002,t0.xcdf003,t0.xcdf004,t0.xcdf005,t0.xcdf006, 
       t0.xcdf007,t0.xcdf008,t0.xcdf009,t0.xcdf010,t0.xcdf011",
                " FROM xcdf_t t0",
                #" ",
                " ",
 
 
 
                
                " WHERE t0.xcdfent = " ||g_enterprise|| " AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("xcdf_t")
 
   #add-point:browser_fill,sql_rank前 name="browser_fill.before_sql_rank"
   LET g_sql  = "SELECT DISTINCT t0.xcdfld,t0.xcdf001,t0.xcdf002,t0.xcdf003,t0.xcdf004,t0.xcdf005,t0.xcdf006, 
       t0.xcdf007,t0.xcdf008,t0.xcdf009,t0.xcdf010,t0.xcdf011",
                " FROM xcdf_t t0",
                " LEFT JOIN xcau_t ON xcauent=t0.xcdfent AND xcau001=t0.xcdf012",
                
                " WHERE t0.xcdfent = '" ||g_enterprise|| "' AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("xcdf_t")
   #add--160802-00020#7 By shiun--(S)
   #---增加帳套權限控管
   IF NOT cl_null(g_wc_cs_ld) THEN
      LET g_sql = g_sql ," AND xcdfld IN ",g_wc_cs_ld
    END IF
   #---增加法人過濾條件
   IF NOT cl_null(g_wc_cs_comp) THEN
      LET g_sql = g_sql ," AND xcdfcomp IN ",g_wc_cs_comp
   END IF
   #add--160802-00020#7 By shiun--(E)
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前 name="browser_fill.before_pre"
   
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"xcdf_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_xcdfld,g_browser[g_cnt].b_xcdf001,g_browser[g_cnt].b_xcdf002, 
          g_browser[g_cnt].b_xcdf003,g_browser[g_cnt].b_xcdf004,g_browser[g_cnt].b_xcdf005,g_browser[g_cnt].b_xcdf006, 
          g_browser[g_cnt].b_xcdf007,g_browser[g_cnt].b_xcdf008,g_browser[g_cnt].b_xcdf009,g_browser[g_cnt].b_xcdf010, 
          g_browser[g_cnt].b_xcdf011 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
         
         
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point  
      
         
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
      END FOREACH
      FREE browse_pre
   END IF
 
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xcdfld) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_xcdf_m.* TO NULL
      CALL g_xcdf_d.clear()
 
      #add-point:browser_fill段after_clear name="browser_fill.after_clear"
      
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   LET g_browser_cnt = g_browser.getLength()
   CALL axcq523_fetch('')
   
   #筆數顯示
   LET g_browser_idx = g_current_idx 
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axcq523_ui_headershow()
   #add-point:ui_headershow段define name="ui_headershow.define_customerization"
   
   #end add-point    
   #add-point:ui_headershow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_xcdf_m.xcdfld = g_browser[g_current_idx].b_xcdfld   
   LET g_xcdf_m.xcdf001 = g_browser[g_current_idx].b_xcdf001   
   LET g_xcdf_m.xcdf002 = g_browser[g_current_idx].b_xcdf002   
   LET g_xcdf_m.xcdf003 = g_browser[g_current_idx].b_xcdf003   
   LET g_xcdf_m.xcdf004 = g_browser[g_current_idx].b_xcdf004   
   LET g_xcdf_m.xcdf005 = g_browser[g_current_idx].b_xcdf005   
   LET g_xcdf_m.xcdf006 = g_browser[g_current_idx].b_xcdf006   
   LET g_xcdf_m.xcdf007 = g_browser[g_current_idx].b_xcdf007   
   LET g_xcdf_m.xcdf008 = g_browser[g_current_idx].b_xcdf008   
   LET g_xcdf_m.xcdf009 = g_browser[g_current_idx].b_xcdf009   
   LET g_xcdf_m.xcdf010 = g_browser[g_current_idx].b_xcdf010   
   LET g_xcdf_m.xcdf011 = g_browser[g_current_idx].b_xcdf011   
 
   EXECUTE axcq523_master_referesh USING g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf002,g_xcdf_m.xcdf003, 
       g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf008,g_xcdf_m.xcdf009, 
       g_xcdf_m.xcdf010,g_xcdf_m.xcdf011 INTO g_xcdf_m.xcdfcomp,g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf009, 
       g_xcdf_m.xcdf010,g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf008, 
       g_xcdf_m.xcdf002,g_xcdf_m.xcdf003,g_xcdf_m.xcdf011,g_xcdf_m.xcdfcomp_desc,g_xcdf_m.xcdf009_desc, 
       g_xcdf_m.xcdfld_desc,g_xcdf_m.xcdf001_desc,g_xcdf_m.xcdf007_desc,g_xcdf_m.xcdf002_desc,g_xcdf_m.xcdf003_desc 
 
   CALL axcq523_show()
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axcq523_ui_detailshow()
   #add-point:ui_detailshow段define name="ui_detailshow.define_customerization"
   
   #end add-point
   #add-point:ui_detailshow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_detailshow.before"
   
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
      #add-point:ui_detailshow段more name="ui_detailshow.more"
      
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axcq523_ui_browser_refresh()
   #add-point:ui_browser_refresh段define name="ui_browser_refresh.define_customerization"
   
   #end add-point   
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xcdfld = g_xcdf_m.xcdfld 
         AND g_browser[l_i].b_xcdf001 = g_xcdf_m.xcdf001 
         AND g_browser[l_i].b_xcdf002 = g_xcdf_m.xcdf002 
         AND g_browser[l_i].b_xcdf003 = g_xcdf_m.xcdf003 
         AND g_browser[l_i].b_xcdf004 = g_xcdf_m.xcdf004 
         AND g_browser[l_i].b_xcdf005 = g_xcdf_m.xcdf005 
         AND g_browser[l_i].b_xcdf006 = g_xcdf_m.xcdf006 
         AND g_browser[l_i].b_xcdf007 = g_xcdf_m.xcdf007 
         AND g_browser[l_i].b_xcdf008 = g_xcdf_m.xcdf008 
         AND g_browser[l_i].b_xcdf009 = g_xcdf_m.xcdf009 
         AND g_browser[l_i].b_xcdf010 = g_xcdf_m.xcdf010 
         AND g_browser[l_i].b_xcdf011 = g_xcdf_m.xcdf011 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axcq523_construct()
   #add-point:cs段define name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
 
   #end add-point 
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
   
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_xcdf_m.* TO NULL
   CALL g_xcdf_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外 name="cs.head.before"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xcdfcomp,xcdf004,xcdf005,xcdf009,xcdf010,xcdfld,xcdf001,xcdf006,xcdf007, 
          xcdf008,xcdf002,xcdf003,xcdf011
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.head.before_construct"
            
            #end add-point 
            
                 #Ctrlp:construct.c.xcdfcomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdfcomp
            #add-point:ON ACTION controlp INFIELD xcdfcomp name="construct.c.xcdfcomp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i' 
            LET g_qryparam.reqry = FALSE
            #add--160802-00020#7 By shiun--(S)
      	   #增加法人過濾條件
            IF NOT cl_null(g_wc_cs_comp) THEN
               LET g_qryparam.where = " ooef001 IN ",g_wc_cs_comp
            END IF
            #add--160802-00020#7 By shiun--(E)
#            CALL q_ooef001_8()                          #呼叫開窗 #161019-00017#8 marked
            CALL q_ooef001_2()                           #呼叫開窗 #161019-00017#8 add
            DISPLAY g_qryparam.return1 TO xcdfcomp  #顯示到畫面上
            NEXT FIELD xcdfcomp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdfcomp
            #add-point:BEFORE FIELD xcdfcomp name="construct.b.xcdfcomp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdfcomp
            
            #add-point:AFTER FIELD xcdfcomp name="construct.a.xcdfcomp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf004
            #add-point:BEFORE FIELD xcdf004 name="construct.b.xcdf004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf004
            
            #add-point:AFTER FIELD xcdf004 name="construct.a.xcdf004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xcdf004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf004
            #add-point:ON ACTION controlp INFIELD xcdf004 name="construct.c.xcdf004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf005
            #add-point:BEFORE FIELD xcdf005 name="construct.b.xcdf005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf005
            
            #add-point:AFTER FIELD xcdf005 name="construct.a.xcdf005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xcdf005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf005
            #add-point:ON ACTION controlp INFIELD xcdf005 name="construct.c.xcdf005"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xcdf009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf009
            #add-point:ON ACTION controlp INFIELD xcdf009 name="construct.c.xcdf009"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdf009  #顯示到畫面上
            NEXT FIELD xcdf009                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf009
            #add-point:BEFORE FIELD xcdf009 name="construct.b.xcdf009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf009
            
            #add-point:AFTER FIELD xcdf009 name="construct.a.xcdf009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xcdf010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf010
            #add-point:ON ACTION controlp INFIELD xcdf010 name="construct.c.xcdf010"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_bmaa002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdf010  #顯示到畫面上
            NEXT FIELD xcdf010                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf010
            #add-point:BEFORE FIELD xcdf010 name="construct.b.xcdf010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf010
            
            #add-point:AFTER FIELD xcdf010 name="construct.a.xcdf010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xcdfld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdfld
            #add-point:ON ACTION controlp INFIELD xcdfld name="construct.c.xcdfld"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_user          #人員權限
            LET g_qryparam.arg2 = g_dept          #部門權限
            #mod--160802-00020#7 By shiun--(S)
#            IF NOT cl_null(g_xcdf_m.xcdfcomp) THEN 
#               LET g_qryparam.where=" glaacomp='",g_xcdf_m.xcdfcomp,"'"
#            END IF
            #增加帳套權限控制
            IF NOT cl_null(g_wc_cs_ld) THEN
               LET g_qryparam.where = " glaald IN ",g_wc_cs_ld
            END IF
            #mod--160802-00020#7 By shiun--(E)
            CALL q_authorised_ld()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdfld  #顯示到畫面上
            NEXT FIELD xcdfld                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdfld
            #add-point:BEFORE FIELD xcdfld name="construct.b.xcdfld"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdfld
            
            #add-point:AFTER FIELD xcdfld name="construct.a.xcdfld"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf001
            #add-point:BEFORE FIELD xcdf001 name="construct.b.xcdf001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf001
            
            #add-point:AFTER FIELD xcdf001 name="construct.a.xcdf001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xcdf001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf001
            #add-point:ON ACTION controlp INFIELD xcdf001 name="construct.c.xcdf001"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xcdf006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf006
            #add-point:ON ACTION controlp INFIELD xcdf006 name="construct.c.xcdf006"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfaa061 = 'Y'"  #161027-00007#1 add
            CALL q_sfaadocno_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdf006  #顯示到畫面上
            NEXT FIELD xcdf006                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf006
            #add-point:BEFORE FIELD xcdf006 name="construct.b.xcdf006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf006
            
            #add-point:AFTER FIELD xcdf006 name="construct.a.xcdf006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xcdf007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf007
            #add-point:ON ACTION controlp INFIELD xcdf007 name="construct.c.xcdf007"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_sfcb003_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdf007  #顯示到畫面上
            NEXT FIELD xcdf007                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf007
            #add-point:BEFORE FIELD xcdf007 name="construct.b.xcdf007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf007
            
            #add-point:AFTER FIELD xcdf007 name="construct.a.xcdf007"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf008
            #add-point:BEFORE FIELD xcdf008 name="construct.b.xcdf008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf008
            
            #add-point:AFTER FIELD xcdf008 name="construct.a.xcdf008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xcdf008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf008
            #add-point:ON ACTION controlp INFIELD xcdf008 name="construct.c.xcdf008"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xcdf002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf002
            #add-point:ON ACTION controlp INFIELD xcdf002 name="construct.c.xcdf002"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_xcbf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdf002  #顯示到畫面上
            NEXT FIELD xcdf002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf002
            #add-point:BEFORE FIELD xcdf002 name="construct.b.xcdf002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf002
            
            #add-point:AFTER FIELD xcdf002 name="construct.a.xcdf002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xcdf003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf003
            #add-point:ON ACTION controlp INFIELD xcdf003 name="construct.c.xcdf003"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_xcat001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdf003  #顯示到畫面上
            NEXT FIELD xcdf003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf003
            #add-point:BEFORE FIELD xcdf003 name="construct.b.xcdf003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf003
            
            #add-point:AFTER FIELD xcdf003 name="construct.a.xcdf003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf011
            #add-point:BEFORE FIELD xcdf011 name="construct.b.xcdf011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf011
            
            #add-point:AFTER FIELD xcdf011 name="construct.a.xcdf011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xcdf011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf011
            #add-point:ON ACTION controlp INFIELD xcdf011 name="construct.c.xcdf011"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON xcau003,xcdf012
           FROM s_detail1[1].xcau003,s_detail1[1].xcdf012
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.body.before_construct"
            
            #end add-point 
            
         #單身公用欄位開窗相關處理
         
           
         #單身一般欄位開窗相關處理
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcau003
            #add-point:BEFORE FIELD xcau003 name="construct.b.page1.xcau003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcau003
            
            #add-point:AFTER FIELD xcau003 name="construct.a.page1.xcau003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcau003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcau003
            #add-point:ON ACTION controlp INFIELD xcau003 name="construct.c.page1.xcau003"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xcdf012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf012
            #add-point:ON ACTION controlp INFIELD xcdf012 name="construct.c.page1.xcdf012"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_xcau001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdf012  #顯示到畫面上
            NEXT FIELD xcdf012                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf012
            #add-point:BEFORE FIELD xcdf012 name="construct.b.page1.xcdf012"
 
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf012
            
            #add-point:AFTER FIELD xcdf012 name="construct.a.page1.xcdf012"
            
            #END add-point
            
 
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct name="cs.more_construct"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog name="cs.before_dialog"
         CALL axcq523_set_default()
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct name="cs.after_construct"
   
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
 
{</section>}
 
{<section id="axcq523.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axcq523_query()
   #add-point:query段define name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="query.befroe_query"
   
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xcdf_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axcq523_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL axcq523_browser_fill(g_wc)
      CALL axcq523_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL axcq523_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL axcq523_fetch("F") 
   END IF
   
   CALL axcq523_idx_chk()
   
   LET g_wc_filter = ""
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axcq523_fetch(p_flag)
   #add-point:fetch段define name="fetch.define_customerization"
   
   #end add-point   
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="fetch.before_fetch"
   
   #end add-point    
 
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L' 
         LET g_current_idx = g_header_cnt
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   #CALL axcq523_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart + g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting(g_current_idx,g_detail_cnt)
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xcdf_m.xcdfld = g_browser[g_current_idx].b_xcdfld
   LET g_xcdf_m.xcdf001 = g_browser[g_current_idx].b_xcdf001
   LET g_xcdf_m.xcdf002 = g_browser[g_current_idx].b_xcdf002
   LET g_xcdf_m.xcdf003 = g_browser[g_current_idx].b_xcdf003
   LET g_xcdf_m.xcdf004 = g_browser[g_current_idx].b_xcdf004
   LET g_xcdf_m.xcdf005 = g_browser[g_current_idx].b_xcdf005
   LET g_xcdf_m.xcdf006 = g_browser[g_current_idx].b_xcdf006
   LET g_xcdf_m.xcdf007 = g_browser[g_current_idx].b_xcdf007
   LET g_xcdf_m.xcdf008 = g_browser[g_current_idx].b_xcdf008
   LET g_xcdf_m.xcdf009 = g_browser[g_current_idx].b_xcdf009
   LET g_xcdf_m.xcdf010 = g_browser[g_current_idx].b_xcdf010
   LET g_xcdf_m.xcdf011 = g_browser[g_current_idx].b_xcdf011
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axcq523_master_referesh USING g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf002,g_xcdf_m.xcdf003, 
       g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf008,g_xcdf_m.xcdf009, 
       g_xcdf_m.xcdf010,g_xcdf_m.xcdf011 INTO g_xcdf_m.xcdfcomp,g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf009, 
       g_xcdf_m.xcdf010,g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf008, 
       g_xcdf_m.xcdf002,g_xcdf_m.xcdf003,g_xcdf_m.xcdf011,g_xcdf_m.xcdfcomp_desc,g_xcdf_m.xcdf009_desc, 
       g_xcdf_m.xcdfld_desc,g_xcdf_m.xcdf001_desc,g_xcdf_m.xcdf007_desc,g_xcdf_m.xcdf002_desc,g_xcdf_m.xcdf003_desc 
 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xcdf_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      INITIALIZE g_xcdf_m.* TO NULL
      RETURN
   END IF
 
   #遮罩相關處理
   LET g_xcdf_m_mask_o.* =  g_xcdf_m.*
   CALL axcq523_xcdf_t_mask()
   LET g_xcdf_m_mask_n.* =  g_xcdf_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq523_set_act_visible()
   CALL axcq523_set_act_no_visible()
 
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
 
   #保存單頭舊值
   LET g_xcdf_m_t.* = g_xcdf_m.*
   LET g_xcdf_m_o.* = g_xcdf_m.*
   
   #重新顯示   
   CALL axcq523_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="axcq523.insert" >}
#+ 資料新增
PRIVATE FUNCTION axcq523_insert()
   #add-point:insert段define name="insert.define_customerization"
   
   #end add-point   
   #add-point:insert段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="insert.before"
   
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_xcdf_d.clear()
 
 
   INITIALIZE g_xcdf_m.* TO NULL             #DEFAULT 設定
   LET g_xcdfld_t = NULL
   LET g_xcdf001_t = NULL
   LET g_xcdf002_t = NULL
   LET g_xcdf003_t = NULL
   LET g_xcdf004_t = NULL
   LET g_xcdf005_t = NULL
   LET g_xcdf006_t = NULL
   LET g_xcdf007_t = NULL
   LET g_xcdf008_t = NULL
   LET g_xcdf009_t = NULL
   LET g_xcdf010_t = NULL
   LET g_xcdf011_t = NULL
 
   LET g_master_insert = FALSE
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值 name="insert.default"
      
      #end add-point 
 
      CALL axcq523_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xcdf_m.* TO NULL
         INITIALIZE g_xcdf_d TO NULL
 
         CALL axcq523_show()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         LET g_xcdf_m.* = g_xcdf_m_t.*
         CALL axcq523_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF
    
      #CALL g_xcdf_d.clear()
 
      
      #add-point:單頭輸入後2 name="insert.after_insert2"
      
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq523_set_act_visible()
   CALL axcq523_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_xcdfld_t = g_xcdf_m.xcdfld
   LET g_xcdf001_t = g_xcdf_m.xcdf001
   LET g_xcdf002_t = g_xcdf_m.xcdf002
   LET g_xcdf003_t = g_xcdf_m.xcdf003
   LET g_xcdf004_t = g_xcdf_m.xcdf004
   LET g_xcdf005_t = g_xcdf_m.xcdf005
   LET g_xcdf006_t = g_xcdf_m.xcdf006
   LET g_xcdf007_t = g_xcdf_m.xcdf007
   LET g_xcdf008_t = g_xcdf_m.xcdf008
   LET g_xcdf009_t = g_xcdf_m.xcdf009
   LET g_xcdf010_t = g_xcdf_m.xcdf010
   LET g_xcdf011_t = g_xcdf_m.xcdf011
 
   
   #組合新增資料的條件
   LET g_add_browse = " xcdfent = " ||g_enterprise|| " AND",
                      " xcdfld = '", g_xcdf_m.xcdfld, "' "
                      ," AND xcdf001 = '", g_xcdf_m.xcdf001, "' "
                      ," AND xcdf002 = '", g_xcdf_m.xcdf002, "' "
                      ," AND xcdf003 = '", g_xcdf_m.xcdf003, "' "
                      ," AND xcdf004 = '", g_xcdf_m.xcdf004, "' "
                      ," AND xcdf005 = '", g_xcdf_m.xcdf005, "' "
                      ," AND xcdf006 = '", g_xcdf_m.xcdf006, "' "
                      ," AND xcdf007 = '", g_xcdf_m.xcdf007, "' "
                      ," AND xcdf008 = '", g_xcdf_m.xcdf008, "' "
                      ," AND xcdf009 = '", g_xcdf_m.xcdf009, "' "
                      ," AND xcdf010 = '", g_xcdf_m.xcdf010, "' "
                      ," AND xcdf011 = '", g_xcdf_m.xcdf011, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axcq523_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CALL axcq523_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axcq523_master_referesh USING g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf002,g_xcdf_m.xcdf003, 
       g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf008,g_xcdf_m.xcdf009, 
       g_xcdf_m.xcdf010,g_xcdf_m.xcdf011 INTO g_xcdf_m.xcdfcomp,g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf009, 
       g_xcdf_m.xcdf010,g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf008, 
       g_xcdf_m.xcdf002,g_xcdf_m.xcdf003,g_xcdf_m.xcdf011,g_xcdf_m.xcdfcomp_desc,g_xcdf_m.xcdf009_desc, 
       g_xcdf_m.xcdfld_desc,g_xcdf_m.xcdf001_desc,g_xcdf_m.xcdf007_desc,g_xcdf_m.xcdf002_desc,g_xcdf_m.xcdf003_desc 
 
   
   #遮罩相關處理
   LET g_xcdf_m_mask_o.* =  g_xcdf_m.*
   CALL axcq523_xcdf_t_mask()
   LET g_xcdf_m_mask_n.* =  g_xcdf_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xcdf_m.xcdfcomp,g_xcdf_m.xcdfcomp_desc,g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf009, 
       g_xcdf_m.xcdf009_desc,g_xcdf_m.xcdf009_desc_1,g_xcdf_m.xcdf010,g_xcdf_m.xcdfld,g_xcdf_m.xcdfld_desc, 
       g_xcdf_m.xcdf001,g_xcdf_m.xcdf001_desc,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf007_desc, 
       g_xcdf_m.xcdf008,g_xcdf_m.xcdf002,g_xcdf_m.xcdf002_desc,g_xcdf_m.xcdf003,g_xcdf_m.xcdf003_desc, 
       g_xcdf_m.xcdf011
   
   #功能已完成,通報訊息中心
   CALL axcq523_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.modify" >}
#+ 資料修改
PRIVATE FUNCTION axcq523_modify()
   #add-point:modify段define name="modify.define_customerization"
   
   #end add-point    
   #add-point:modify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   IF g_xcdf_m.xcdfld IS NULL
   OR g_xcdf_m.xcdf001 IS NULL
   OR g_xcdf_m.xcdf002 IS NULL
   OR g_xcdf_m.xcdf003 IS NULL
   OR g_xcdf_m.xcdf004 IS NULL
   OR g_xcdf_m.xcdf005 IS NULL
   OR g_xcdf_m.xcdf006 IS NULL
   OR g_xcdf_m.xcdf007 IS NULL
   OR g_xcdf_m.xcdf008 IS NULL
   OR g_xcdf_m.xcdf009 IS NULL
   OR g_xcdf_m.xcdf010 IS NULL
   OR g_xcdf_m.xcdf011 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL  
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
   LET g_xcdfld_t = g_xcdf_m.xcdfld
   LET g_xcdf001_t = g_xcdf_m.xcdf001
   LET g_xcdf002_t = g_xcdf_m.xcdf002
   LET g_xcdf003_t = g_xcdf_m.xcdf003
   LET g_xcdf004_t = g_xcdf_m.xcdf004
   LET g_xcdf005_t = g_xcdf_m.xcdf005
   LET g_xcdf006_t = g_xcdf_m.xcdf006
   LET g_xcdf007_t = g_xcdf_m.xcdf007
   LET g_xcdf008_t = g_xcdf_m.xcdf008
   LET g_xcdf009_t = g_xcdf_m.xcdf009
   LET g_xcdf010_t = g_xcdf_m.xcdf010
   LET g_xcdf011_t = g_xcdf_m.xcdf011
 
   CALL s_transaction_begin()
   
   OPEN axcq523_cl USING g_enterprise,g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf002,g_xcdf_m.xcdf003,g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf008,g_xcdf_m.xcdf009,g_xcdf_m.xcdf010,g_xcdf_m.xcdf011
   IF SQLCA.SQLCODE THEN   #(ver:49)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axcq523_cl:" 
      LET g_errparam.code   = SQLCA.SQLCODE   #(ver:49)
      LET g_errparam.popup  = TRUE 
      CLOSE axcq523_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axcq523_master_referesh USING g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf002,g_xcdf_m.xcdf003, 
       g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf008,g_xcdf_m.xcdf009, 
       g_xcdf_m.xcdf010,g_xcdf_m.xcdf011 INTO g_xcdf_m.xcdfcomp,g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf009, 
       g_xcdf_m.xcdf010,g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf008, 
       g_xcdf_m.xcdf002,g_xcdf_m.xcdf003,g_xcdf_m.xcdf011,g_xcdf_m.xcdfcomp_desc,g_xcdf_m.xcdf009_desc, 
       g_xcdf_m.xcdfld_desc,g_xcdf_m.xcdf001_desc,g_xcdf_m.xcdf007_desc,g_xcdf_m.xcdf002_desc,g_xcdf_m.xcdf003_desc 
 
   
   #遮罩相關處理
   LET g_xcdf_m_mask_o.* =  g_xcdf_m.*
   CALL axcq523_xcdf_t_mask()
   LET g_xcdf_m_mask_n.* =  g_xcdf_m.*
   
   CALL s_transaction_end('Y','0')
 
   CALL axcq523_show()
   WHILE TRUE
      LET g_xcdfld_t = g_xcdf_m.xcdfld
      LET g_xcdf001_t = g_xcdf_m.xcdf001
      LET g_xcdf002_t = g_xcdf_m.xcdf002
      LET g_xcdf003_t = g_xcdf_m.xcdf003
      LET g_xcdf004_t = g_xcdf_m.xcdf004
      LET g_xcdf005_t = g_xcdf_m.xcdf005
      LET g_xcdf006_t = g_xcdf_m.xcdf006
      LET g_xcdf007_t = g_xcdf_m.xcdf007
      LET g_xcdf008_t = g_xcdf_m.xcdf008
      LET g_xcdf009_t = g_xcdf_m.xcdf009
      LET g_xcdf010_t = g_xcdf_m.xcdf010
      LET g_xcdf011_t = g_xcdf_m.xcdf011
 
 
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      CALL axcq523_input("u")     #欄位更改
      
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         LET g_xcdf_m.* = g_xcdf_m_t.*
         CALL axcq523_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更(更新單身table的key欄位值)
      IF g_xcdf_m.xcdfld != g_xcdfld_t 
      OR g_xcdf_m.xcdf001 != g_xcdf001_t 
      OR g_xcdf_m.xcdf002 != g_xcdf002_t 
      OR g_xcdf_m.xcdf003 != g_xcdf003_t 
      OR g_xcdf_m.xcdf004 != g_xcdf004_t 
      OR g_xcdf_m.xcdf005 != g_xcdf005_t 
      OR g_xcdf_m.xcdf006 != g_xcdf006_t 
      OR g_xcdf_m.xcdf007 != g_xcdf007_t 
      OR g_xcdf_m.xcdf008 != g_xcdf008_t 
      OR g_xcdf_m.xcdf009 != g_xcdf009_t 
      OR g_xcdf_m.xcdf010 != g_xcdf010_t 
      OR g_xcdf_m.xcdf011 != g_xcdf011_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前 name="modify.b_key_update"
         
         #end add-point
         
         #add-point:單頭(偽)修改中 name="modify.m_key_update"
         
         #end add-point
         
 
         
         #add-point:單頭(偽)修改後 name="modify.a_key_update"
         
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq523_set_act_visible()
   CALL axcq523_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xcdfent = " ||g_enterprise|| " AND",
                      " xcdfld = '", g_xcdf_m.xcdfld, "' "
                      ," AND xcdf001 = '", g_xcdf_m.xcdf001, "' "
                      ," AND xcdf002 = '", g_xcdf_m.xcdf002, "' "
                      ," AND xcdf003 = '", g_xcdf_m.xcdf003, "' "
                      ," AND xcdf004 = '", g_xcdf_m.xcdf004, "' "
                      ," AND xcdf005 = '", g_xcdf_m.xcdf005, "' "
                      ," AND xcdf006 = '", g_xcdf_m.xcdf006, "' "
                      ," AND xcdf007 = '", g_xcdf_m.xcdf007, "' "
                      ," AND xcdf008 = '", g_xcdf_m.xcdf008, "' "
                      ," AND xcdf009 = '", g_xcdf_m.xcdf009, "' "
                      ," AND xcdf010 = '", g_xcdf_m.xcdf010, "' "
                      ," AND xcdf011 = '", g_xcdf_m.xcdf011, "' "
 
   #填到對應位置
   CALL axcq523_browser_fill("")
 
   CALL axcq523_idx_chk()
 
   CLOSE axcq523_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axcq523_msgcentre_notify('modify')
   
END FUNCTION   
 
{</section>}
 
{<section id="axcq523.input" >}
#+ 資料輸入
PRIVATE FUNCTION axcq523_input(p_cmd)
   #add-point:input段define name="input.define_customerization"
   
   #end add-point   
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num10               #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num10               #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10               #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xcdf_m.xcdfcomp,g_xcdf_m.xcdfcomp_desc,g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf009, 
       g_xcdf_m.xcdf009_desc,g_xcdf_m.xcdf009_desc_1,g_xcdf_m.xcdf010,g_xcdf_m.xcdfld,g_xcdf_m.xcdfld_desc, 
       g_xcdf_m.xcdf001,g_xcdf_m.xcdf001_desc,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf007_desc, 
       g_xcdf_m.xcdf008,g_xcdf_m.xcdf002,g_xcdf_m.xcdf002_desc,g_xcdf_m.xcdf003,g_xcdf_m.xcdf003_desc, 
       g_xcdf_m.xcdf011
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT xcdf012,xcdf101,xcdf201,xcdf203,xcdf205,xcdf207,xcdf209,xcdf301,xcdf303, 
       xcdf309,xcdf331,xcdf901,xcdf102,xcdf202,xcdf204,xcdf206,xcdf208,xcdf210,xcdf302,xcdf304,xcdf310, 
       xcdf332,xcdf902 FROM xcdf_t WHERE xcdfent=? AND xcdfld=? AND xcdf001=? AND xcdf002=? AND xcdf003=?  
       AND xcdf004=? AND xcdf005=? AND xcdf006=? AND xcdf007=? AND xcdf008=? AND xcdf009=? AND xcdf010=?  
       AND xcdf011=? AND xcdf012=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axcq523_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axcq523_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL axcq523_set_no_entry(p_cmd)
   #add-point:set_no_entry後 name="input.after_set_no_entry"
   
   #end add-point
 
   DISPLAY BY NAME g_xcdf_m.xcdfcomp,g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf009,g_xcdf_m.xcdf010, 
       g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf008,g_xcdf_m.xcdf002, 
       g_xcdf_m.xcdf003,g_xcdf_m.xcdf011
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:進入修改段前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="axcq523.input.head" >}
   
      #單頭段
      INPUT BY NAME g_xcdf_m.xcdfcomp,g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf009,g_xcdf_m.xcdf010, 
          g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf008,g_xcdf_m.xcdf002, 
          g_xcdf_m.xcdf003,g_xcdf_m.xcdf011 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前 name="input.head.b_input"
            
            #end add-point
          
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdfcomp
            
            #add-point:AFTER FIELD xcdfcomp name="input.a.xcdfcomp"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcdf_m.xcdfcomp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcdf_m.xcdfcomp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcdf_m.xcdfcomp_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdfcomp
            #add-point:BEFORE FIELD xcdfcomp name="input.b.xcdfcomp"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdfcomp
            #add-point:ON CHANGE xcdfcomp name="input.g.xcdfcomp"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf004
            #add-point:BEFORE FIELD xcdf004 name="input.b.xcdf004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf004
            
            #add-point:AFTER FIELD xcdf004 name="input.a.xcdf004"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_xcdf_m.xcdfld) AND NOT cl_null(g_xcdf_m.xcdf001) AND NOT cl_null(g_xcdf_m.xcdf002) AND NOT cl_null(g_xcdf_m.xcdf003) AND NOT cl_null(g_xcdf_m.xcdf004) AND NOT cl_null(g_xcdf_m.xcdf005) AND NOT cl_null(g_xcdf_m.xcdf006) AND NOT cl_null(g_xcdf_m.xcdf007) AND NOT cl_null(g_xcdf_m.xcdf008) AND NOT cl_null(g_xcdf_m.xcdf009) AND NOT cl_null(g_xcdf_m.xcdf010) AND NOT cl_null(g_xcdf_m.xcdf011) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdf_m.xcdfld != g_xcdfld_t  OR g_xcdf_m.xcdf001 != g_xcdf001_t  OR g_xcdf_m.xcdf002 != g_xcdf002_t  OR g_xcdf_m.xcdf003 != g_xcdf003_t  OR g_xcdf_m.xcdf004 != g_xcdf004_t  OR g_xcdf_m.xcdf005 != g_xcdf005_t  OR g_xcdf_m.xcdf006 != g_xcdf006_t  OR g_xcdf_m.xcdf007 != g_xcdf007_t  OR g_xcdf_m.xcdf008 != g_xcdf008_t  OR g_xcdf_m.xcdf009 != g_xcdf009_t  OR g_xcdf_m.xcdf010 != g_xcdf010_t  OR g_xcdf_m.xcdf011 != g_xcdf011_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdf_t WHERE "||"xcdfent = '" ||g_enterprise|| "' AND "||"xcdfld = '"||g_xcdf_m.xcdfld ||"' AND "|| "xcdf001 = '"||g_xcdf_m.xcdf001 ||"' AND "|| "xcdf002 = '"||g_xcdf_m.xcdf002 ||"' AND "|| "xcdf003 = '"||g_xcdf_m.xcdf003 ||"' AND "|| "xcdf004 = '"||g_xcdf_m.xcdf004 ||"' AND "|| "xcdf005 = '"||g_xcdf_m.xcdf005 ||"' AND "|| "xcdf006 = '"||g_xcdf_m.xcdf006 ||"' AND "|| "xcdf007 = '"||g_xcdf_m.xcdf007 ||"' AND "|| "xcdf008 = '"||g_xcdf_m.xcdf008 ||"' AND "|| "xcdf009 = '"||g_xcdf_m.xcdf009 ||"' AND "|| "xcdf010 = '"||g_xcdf_m.xcdf010 ||"' AND "|| "xcdf011 = '"||g_xcdf_m.xcdf011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdf004
            #add-point:ON CHANGE xcdf004 name="input.g.xcdf004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf005
            #add-point:BEFORE FIELD xcdf005 name="input.b.xcdf005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf005
            
            #add-point:AFTER FIELD xcdf005 name="input.a.xcdf005"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_xcdf_m.xcdfld) AND NOT cl_null(g_xcdf_m.xcdf001) AND NOT cl_null(g_xcdf_m.xcdf002) AND NOT cl_null(g_xcdf_m.xcdf003) AND NOT cl_null(g_xcdf_m.xcdf004) AND NOT cl_null(g_xcdf_m.xcdf005) AND NOT cl_null(g_xcdf_m.xcdf006) AND NOT cl_null(g_xcdf_m.xcdf007) AND NOT cl_null(g_xcdf_m.xcdf008) AND NOT cl_null(g_xcdf_m.xcdf009) AND NOT cl_null(g_xcdf_m.xcdf010) AND NOT cl_null(g_xcdf_m.xcdf011) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdf_m.xcdfld != g_xcdfld_t  OR g_xcdf_m.xcdf001 != g_xcdf001_t  OR g_xcdf_m.xcdf002 != g_xcdf002_t  OR g_xcdf_m.xcdf003 != g_xcdf003_t  OR g_xcdf_m.xcdf004 != g_xcdf004_t  OR g_xcdf_m.xcdf005 != g_xcdf005_t  OR g_xcdf_m.xcdf006 != g_xcdf006_t  OR g_xcdf_m.xcdf007 != g_xcdf007_t  OR g_xcdf_m.xcdf008 != g_xcdf008_t  OR g_xcdf_m.xcdf009 != g_xcdf009_t  OR g_xcdf_m.xcdf010 != g_xcdf010_t  OR g_xcdf_m.xcdf011 != g_xcdf011_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdf_t WHERE "||"xcdfent = '" ||g_enterprise|| "' AND "||"xcdfld = '"||g_xcdf_m.xcdfld ||"' AND "|| "xcdf001 = '"||g_xcdf_m.xcdf001 ||"' AND "|| "xcdf002 = '"||g_xcdf_m.xcdf002 ||"' AND "|| "xcdf003 = '"||g_xcdf_m.xcdf003 ||"' AND "|| "xcdf004 = '"||g_xcdf_m.xcdf004 ||"' AND "|| "xcdf005 = '"||g_xcdf_m.xcdf005 ||"' AND "|| "xcdf006 = '"||g_xcdf_m.xcdf006 ||"' AND "|| "xcdf007 = '"||g_xcdf_m.xcdf007 ||"' AND "|| "xcdf008 = '"||g_xcdf_m.xcdf008 ||"' AND "|| "xcdf009 = '"||g_xcdf_m.xcdf009 ||"' AND "|| "xcdf010 = '"||g_xcdf_m.xcdf010 ||"' AND "|| "xcdf011 = '"||g_xcdf_m.xcdf011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdf005
            #add-point:ON CHANGE xcdf005 name="input.g.xcdf005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf009
            
            #add-point:AFTER FIELD xcdf009 name="input.a.xcdf009"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcdf_m.xcdf009
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcdf_m.xcdf009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcdf_m.xcdf009_desc

            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_xcdf_m.xcdfld) AND NOT cl_null(g_xcdf_m.xcdf001) AND NOT cl_null(g_xcdf_m.xcdf002) AND NOT cl_null(g_xcdf_m.xcdf003) AND NOT cl_null(g_xcdf_m.xcdf004) AND NOT cl_null(g_xcdf_m.xcdf005) AND NOT cl_null(g_xcdf_m.xcdf006) AND NOT cl_null(g_xcdf_m.xcdf007) AND NOT cl_null(g_xcdf_m.xcdf008) AND NOT cl_null(g_xcdf_m.xcdf009) AND NOT cl_null(g_xcdf_m.xcdf010) AND NOT cl_null(g_xcdf_m.xcdf011) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdf_m.xcdfld != g_xcdfld_t  OR g_xcdf_m.xcdf001 != g_xcdf001_t  OR g_xcdf_m.xcdf002 != g_xcdf002_t  OR g_xcdf_m.xcdf003 != g_xcdf003_t  OR g_xcdf_m.xcdf004 != g_xcdf004_t  OR g_xcdf_m.xcdf005 != g_xcdf005_t  OR g_xcdf_m.xcdf006 != g_xcdf006_t  OR g_xcdf_m.xcdf007 != g_xcdf007_t  OR g_xcdf_m.xcdf008 != g_xcdf008_t  OR g_xcdf_m.xcdf009 != g_xcdf009_t  OR g_xcdf_m.xcdf010 != g_xcdf010_t  OR g_xcdf_m.xcdf011 != g_xcdf011_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdf_t WHERE "||"xcdfent = '" ||g_enterprise|| "' AND "||"xcdfld = '"||g_xcdf_m.xcdfld ||"' AND "|| "xcdf001 = '"||g_xcdf_m.xcdf001 ||"' AND "|| "xcdf002 = '"||g_xcdf_m.xcdf002 ||"' AND "|| "xcdf003 = '"||g_xcdf_m.xcdf003 ||"' AND "|| "xcdf004 = '"||g_xcdf_m.xcdf004 ||"' AND "|| "xcdf005 = '"||g_xcdf_m.xcdf005 ||"' AND "|| "xcdf006 = '"||g_xcdf_m.xcdf006 ||"' AND "|| "xcdf007 = '"||g_xcdf_m.xcdf007 ||"' AND "|| "xcdf008 = '"||g_xcdf_m.xcdf008 ||"' AND "|| "xcdf009 = '"||g_xcdf_m.xcdf009 ||"' AND "|| "xcdf010 = '"||g_xcdf_m.xcdf010 ||"' AND "|| "xcdf011 = '"||g_xcdf_m.xcdf011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf009
            #add-point:BEFORE FIELD xcdf009 name="input.b.xcdf009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdf009
            #add-point:ON CHANGE xcdf009 name="input.g.xcdf009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf010
            #add-point:BEFORE FIELD xcdf010 name="input.b.xcdf010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf010
            
            #add-point:AFTER FIELD xcdf010 name="input.a.xcdf010"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_xcdf_m.xcdfld) AND NOT cl_null(g_xcdf_m.xcdf001) AND NOT cl_null(g_xcdf_m.xcdf002) AND NOT cl_null(g_xcdf_m.xcdf003) AND NOT cl_null(g_xcdf_m.xcdf004) AND NOT cl_null(g_xcdf_m.xcdf005) AND NOT cl_null(g_xcdf_m.xcdf006) AND NOT cl_null(g_xcdf_m.xcdf007) AND NOT cl_null(g_xcdf_m.xcdf008) AND NOT cl_null(g_xcdf_m.xcdf009) AND NOT cl_null(g_xcdf_m.xcdf010) AND NOT cl_null(g_xcdf_m.xcdf011) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdf_m.xcdfld != g_xcdfld_t  OR g_xcdf_m.xcdf001 != g_xcdf001_t  OR g_xcdf_m.xcdf002 != g_xcdf002_t  OR g_xcdf_m.xcdf003 != g_xcdf003_t  OR g_xcdf_m.xcdf004 != g_xcdf004_t  OR g_xcdf_m.xcdf005 != g_xcdf005_t  OR g_xcdf_m.xcdf006 != g_xcdf006_t  OR g_xcdf_m.xcdf007 != g_xcdf007_t  OR g_xcdf_m.xcdf008 != g_xcdf008_t  OR g_xcdf_m.xcdf009 != g_xcdf009_t  OR g_xcdf_m.xcdf010 != g_xcdf010_t  OR g_xcdf_m.xcdf011 != g_xcdf011_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdf_t WHERE "||"xcdfent = '" ||g_enterprise|| "' AND "||"xcdfld = '"||g_xcdf_m.xcdfld ||"' AND "|| "xcdf001 = '"||g_xcdf_m.xcdf001 ||"' AND "|| "xcdf002 = '"||g_xcdf_m.xcdf002 ||"' AND "|| "xcdf003 = '"||g_xcdf_m.xcdf003 ||"' AND "|| "xcdf004 = '"||g_xcdf_m.xcdf004 ||"' AND "|| "xcdf005 = '"||g_xcdf_m.xcdf005 ||"' AND "|| "xcdf006 = '"||g_xcdf_m.xcdf006 ||"' AND "|| "xcdf007 = '"||g_xcdf_m.xcdf007 ||"' AND "|| "xcdf008 = '"||g_xcdf_m.xcdf008 ||"' AND "|| "xcdf009 = '"||g_xcdf_m.xcdf009 ||"' AND "|| "xcdf010 = '"||g_xcdf_m.xcdf010 ||"' AND "|| "xcdf011 = '"||g_xcdf_m.xcdf011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdf010
            #add-point:ON CHANGE xcdf010 name="input.g.xcdf010"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdfld
            
            #add-point:AFTER FIELD xcdfld name="input.a.xcdfld"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcdf_m.xcdfld
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcdf_m.xcdfld_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcdf_m.xcdfld_desc

            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_xcdf_m.xcdfld) AND NOT cl_null(g_xcdf_m.xcdf001) AND NOT cl_null(g_xcdf_m.xcdf002) AND NOT cl_null(g_xcdf_m.xcdf003) AND NOT cl_null(g_xcdf_m.xcdf004) AND NOT cl_null(g_xcdf_m.xcdf005) AND NOT cl_null(g_xcdf_m.xcdf006) AND NOT cl_null(g_xcdf_m.xcdf007) AND NOT cl_null(g_xcdf_m.xcdf008) AND NOT cl_null(g_xcdf_m.xcdf009) AND NOT cl_null(g_xcdf_m.xcdf010) AND NOT cl_null(g_xcdf_m.xcdf011) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdf_m.xcdfld != g_xcdfld_t  OR g_xcdf_m.xcdf001 != g_xcdf001_t  OR g_xcdf_m.xcdf002 != g_xcdf002_t  OR g_xcdf_m.xcdf003 != g_xcdf003_t  OR g_xcdf_m.xcdf004 != g_xcdf004_t  OR g_xcdf_m.xcdf005 != g_xcdf005_t  OR g_xcdf_m.xcdf006 != g_xcdf006_t  OR g_xcdf_m.xcdf007 != g_xcdf007_t  OR g_xcdf_m.xcdf008 != g_xcdf008_t  OR g_xcdf_m.xcdf009 != g_xcdf009_t  OR g_xcdf_m.xcdf010 != g_xcdf010_t  OR g_xcdf_m.xcdf011 != g_xcdf011_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdf_t WHERE "||"xcdfent = '" ||g_enterprise|| "' AND "||"xcdfld = '"||g_xcdf_m.xcdfld ||"' AND "|| "xcdf001 = '"||g_xcdf_m.xcdf001 ||"' AND "|| "xcdf002 = '"||g_xcdf_m.xcdf002 ||"' AND "|| "xcdf003 = '"||g_xcdf_m.xcdf003 ||"' AND "|| "xcdf004 = '"||g_xcdf_m.xcdf004 ||"' AND "|| "xcdf005 = '"||g_xcdf_m.xcdf005 ||"' AND "|| "xcdf006 = '"||g_xcdf_m.xcdf006 ||"' AND "|| "xcdf007 = '"||g_xcdf_m.xcdf007 ||"' AND "|| "xcdf008 = '"||g_xcdf_m.xcdf008 ||"' AND "|| "xcdf009 = '"||g_xcdf_m.xcdf009 ||"' AND "|| "xcdf010 = '"||g_xcdf_m.xcdf010 ||"' AND "|| "xcdf011 = '"||g_xcdf_m.xcdf011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdfld
            #add-point:BEFORE FIELD xcdfld name="input.b.xcdfld"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdfld
            #add-point:ON CHANGE xcdfld name="input.g.xcdfld"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf001
            
            #add-point:AFTER FIELD xcdf001 name="input.a.xcdf001"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcdf_m.xcdf001
            CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcdf_m.xcdf001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcdf_m.xcdf001_desc

            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_xcdf_m.xcdfld) AND NOT cl_null(g_xcdf_m.xcdf001) AND NOT cl_null(g_xcdf_m.xcdf002) AND NOT cl_null(g_xcdf_m.xcdf003) AND NOT cl_null(g_xcdf_m.xcdf004) AND NOT cl_null(g_xcdf_m.xcdf005) AND NOT cl_null(g_xcdf_m.xcdf006) AND NOT cl_null(g_xcdf_m.xcdf007) AND NOT cl_null(g_xcdf_m.xcdf008) AND NOT cl_null(g_xcdf_m.xcdf009) AND NOT cl_null(g_xcdf_m.xcdf010) AND NOT cl_null(g_xcdf_m.xcdf011) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdf_m.xcdfld != g_xcdfld_t  OR g_xcdf_m.xcdf001 != g_xcdf001_t  OR g_xcdf_m.xcdf002 != g_xcdf002_t  OR g_xcdf_m.xcdf003 != g_xcdf003_t  OR g_xcdf_m.xcdf004 != g_xcdf004_t  OR g_xcdf_m.xcdf005 != g_xcdf005_t  OR g_xcdf_m.xcdf006 != g_xcdf006_t  OR g_xcdf_m.xcdf007 != g_xcdf007_t  OR g_xcdf_m.xcdf008 != g_xcdf008_t  OR g_xcdf_m.xcdf009 != g_xcdf009_t  OR g_xcdf_m.xcdf010 != g_xcdf010_t  OR g_xcdf_m.xcdf011 != g_xcdf011_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdf_t WHERE "||"xcdfent = '" ||g_enterprise|| "' AND "||"xcdfld = '"||g_xcdf_m.xcdfld ||"' AND "|| "xcdf001 = '"||g_xcdf_m.xcdf001 ||"' AND "|| "xcdf002 = '"||g_xcdf_m.xcdf002 ||"' AND "|| "xcdf003 = '"||g_xcdf_m.xcdf003 ||"' AND "|| "xcdf004 = '"||g_xcdf_m.xcdf004 ||"' AND "|| "xcdf005 = '"||g_xcdf_m.xcdf005 ||"' AND "|| "xcdf006 = '"||g_xcdf_m.xcdf006 ||"' AND "|| "xcdf007 = '"||g_xcdf_m.xcdf007 ||"' AND "|| "xcdf008 = '"||g_xcdf_m.xcdf008 ||"' AND "|| "xcdf009 = '"||g_xcdf_m.xcdf009 ||"' AND "|| "xcdf010 = '"||g_xcdf_m.xcdf010 ||"' AND "|| "xcdf011 = '"||g_xcdf_m.xcdf011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf001
            #add-point:BEFORE FIELD xcdf001 name="input.b.xcdf001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdf001
            #add-point:ON CHANGE xcdf001 name="input.g.xcdf001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf006
            #add-point:BEFORE FIELD xcdf006 name="input.b.xcdf006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf006
            
            #add-point:AFTER FIELD xcdf006 name="input.a.xcdf006"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_xcdf_m.xcdfld) AND NOT cl_null(g_xcdf_m.xcdf001) AND NOT cl_null(g_xcdf_m.xcdf002) AND NOT cl_null(g_xcdf_m.xcdf003) AND NOT cl_null(g_xcdf_m.xcdf004) AND NOT cl_null(g_xcdf_m.xcdf005) AND NOT cl_null(g_xcdf_m.xcdf006) AND NOT cl_null(g_xcdf_m.xcdf007) AND NOT cl_null(g_xcdf_m.xcdf008) AND NOT cl_null(g_xcdf_m.xcdf009) AND NOT cl_null(g_xcdf_m.xcdf010) AND NOT cl_null(g_xcdf_m.xcdf011) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdf_m.xcdfld != g_xcdfld_t  OR g_xcdf_m.xcdf001 != g_xcdf001_t  OR g_xcdf_m.xcdf002 != g_xcdf002_t  OR g_xcdf_m.xcdf003 != g_xcdf003_t  OR g_xcdf_m.xcdf004 != g_xcdf004_t  OR g_xcdf_m.xcdf005 != g_xcdf005_t  OR g_xcdf_m.xcdf006 != g_xcdf006_t  OR g_xcdf_m.xcdf007 != g_xcdf007_t  OR g_xcdf_m.xcdf008 != g_xcdf008_t  OR g_xcdf_m.xcdf009 != g_xcdf009_t  OR g_xcdf_m.xcdf010 != g_xcdf010_t  OR g_xcdf_m.xcdf011 != g_xcdf011_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdf_t WHERE "||"xcdfent = '" ||g_enterprise|| "' AND "||"xcdfld = '"||g_xcdf_m.xcdfld ||"' AND "|| "xcdf001 = '"||g_xcdf_m.xcdf001 ||"' AND "|| "xcdf002 = '"||g_xcdf_m.xcdf002 ||"' AND "|| "xcdf003 = '"||g_xcdf_m.xcdf003 ||"' AND "|| "xcdf004 = '"||g_xcdf_m.xcdf004 ||"' AND "|| "xcdf005 = '"||g_xcdf_m.xcdf005 ||"' AND "|| "xcdf006 = '"||g_xcdf_m.xcdf006 ||"' AND "|| "xcdf007 = '"||g_xcdf_m.xcdf007 ||"' AND "|| "xcdf008 = '"||g_xcdf_m.xcdf008 ||"' AND "|| "xcdf009 = '"||g_xcdf_m.xcdf009 ||"' AND "|| "xcdf010 = '"||g_xcdf_m.xcdf010 ||"' AND "|| "xcdf011 = '"||g_xcdf_m.xcdf011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdf006
            #add-point:ON CHANGE xcdf006 name="input.g.xcdf006"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf007
            
            #add-point:AFTER FIELD xcdf007 name="input.a.xcdf007"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_xcdf_m.xcdfld) AND NOT cl_null(g_xcdf_m.xcdf001) AND NOT cl_null(g_xcdf_m.xcdf002) AND NOT cl_null(g_xcdf_m.xcdf003) AND NOT cl_null(g_xcdf_m.xcdf004) AND NOT cl_null(g_xcdf_m.xcdf005) AND NOT cl_null(g_xcdf_m.xcdf006) AND NOT cl_null(g_xcdf_m.xcdf007) AND NOT cl_null(g_xcdf_m.xcdf008) AND NOT cl_null(g_xcdf_m.xcdf009) AND NOT cl_null(g_xcdf_m.xcdf010) AND NOT cl_null(g_xcdf_m.xcdf011) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdf_m.xcdfld != g_xcdfld_t  OR g_xcdf_m.xcdf001 != g_xcdf001_t  OR g_xcdf_m.xcdf002 != g_xcdf002_t  OR g_xcdf_m.xcdf003 != g_xcdf003_t  OR g_xcdf_m.xcdf004 != g_xcdf004_t  OR g_xcdf_m.xcdf005 != g_xcdf005_t  OR g_xcdf_m.xcdf006 != g_xcdf006_t  OR g_xcdf_m.xcdf007 != g_xcdf007_t  OR g_xcdf_m.xcdf008 != g_xcdf008_t  OR g_xcdf_m.xcdf009 != g_xcdf009_t  OR g_xcdf_m.xcdf010 != g_xcdf010_t  OR g_xcdf_m.xcdf011 != g_xcdf011_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdf_t WHERE "||"xcdfent = '" ||g_enterprise|| "' AND "||"xcdfld = '"||g_xcdf_m.xcdfld ||"' AND "|| "xcdf001 = '"||g_xcdf_m.xcdf001 ||"' AND "|| "xcdf002 = '"||g_xcdf_m.xcdf002 ||"' AND "|| "xcdf003 = '"||g_xcdf_m.xcdf003 ||"' AND "|| "xcdf004 = '"||g_xcdf_m.xcdf004 ||"' AND "|| "xcdf005 = '"||g_xcdf_m.xcdf005 ||"' AND "|| "xcdf006 = '"||g_xcdf_m.xcdf006 ||"' AND "|| "xcdf007 = '"||g_xcdf_m.xcdf007 ||"' AND "|| "xcdf008 = '"||g_xcdf_m.xcdf008 ||"' AND "|| "xcdf009 = '"||g_xcdf_m.xcdf009 ||"' AND "|| "xcdf010 = '"||g_xcdf_m.xcdf010 ||"' AND "|| "xcdf011 = '"||g_xcdf_m.xcdf011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf007
            #add-point:BEFORE FIELD xcdf007 name="input.b.xcdf007"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdf007
            #add-point:ON CHANGE xcdf007 name="input.g.xcdf007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf008
            #add-point:BEFORE FIELD xcdf008 name="input.b.xcdf008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf008
            
            #add-point:AFTER FIELD xcdf008 name="input.a.xcdf008"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_xcdf_m.xcdfld) AND NOT cl_null(g_xcdf_m.xcdf001) AND NOT cl_null(g_xcdf_m.xcdf002) AND NOT cl_null(g_xcdf_m.xcdf003) AND NOT cl_null(g_xcdf_m.xcdf004) AND NOT cl_null(g_xcdf_m.xcdf005) AND NOT cl_null(g_xcdf_m.xcdf006) AND NOT cl_null(g_xcdf_m.xcdf007) AND NOT cl_null(g_xcdf_m.xcdf008) AND NOT cl_null(g_xcdf_m.xcdf009) AND NOT cl_null(g_xcdf_m.xcdf010) AND NOT cl_null(g_xcdf_m.xcdf011) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdf_m.xcdfld != g_xcdfld_t  OR g_xcdf_m.xcdf001 != g_xcdf001_t  OR g_xcdf_m.xcdf002 != g_xcdf002_t  OR g_xcdf_m.xcdf003 != g_xcdf003_t  OR g_xcdf_m.xcdf004 != g_xcdf004_t  OR g_xcdf_m.xcdf005 != g_xcdf005_t  OR g_xcdf_m.xcdf006 != g_xcdf006_t  OR g_xcdf_m.xcdf007 != g_xcdf007_t  OR g_xcdf_m.xcdf008 != g_xcdf008_t  OR g_xcdf_m.xcdf009 != g_xcdf009_t  OR g_xcdf_m.xcdf010 != g_xcdf010_t  OR g_xcdf_m.xcdf011 != g_xcdf011_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdf_t WHERE "||"xcdfent = '" ||g_enterprise|| "' AND "||"xcdfld = '"||g_xcdf_m.xcdfld ||"' AND "|| "xcdf001 = '"||g_xcdf_m.xcdf001 ||"' AND "|| "xcdf002 = '"||g_xcdf_m.xcdf002 ||"' AND "|| "xcdf003 = '"||g_xcdf_m.xcdf003 ||"' AND "|| "xcdf004 = '"||g_xcdf_m.xcdf004 ||"' AND "|| "xcdf005 = '"||g_xcdf_m.xcdf005 ||"' AND "|| "xcdf006 = '"||g_xcdf_m.xcdf006 ||"' AND "|| "xcdf007 = '"||g_xcdf_m.xcdf007 ||"' AND "|| "xcdf008 = '"||g_xcdf_m.xcdf008 ||"' AND "|| "xcdf009 = '"||g_xcdf_m.xcdf009 ||"' AND "|| "xcdf010 = '"||g_xcdf_m.xcdf010 ||"' AND "|| "xcdf011 = '"||g_xcdf_m.xcdf011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdf008
            #add-point:ON CHANGE xcdf008 name="input.g.xcdf008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf002
            
            #add-point:AFTER FIELD xcdf002 name="input.a.xcdf002"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_xcdf_m.xcdfld) AND NOT cl_null(g_xcdf_m.xcdf001) AND NOT cl_null(g_xcdf_m.xcdf002) AND NOT cl_null(g_xcdf_m.xcdf003) AND NOT cl_null(g_xcdf_m.xcdf004) AND NOT cl_null(g_xcdf_m.xcdf005) AND NOT cl_null(g_xcdf_m.xcdf006) AND NOT cl_null(g_xcdf_m.xcdf007) AND NOT cl_null(g_xcdf_m.xcdf008) AND NOT cl_null(g_xcdf_m.xcdf009) AND NOT cl_null(g_xcdf_m.xcdf010) AND NOT cl_null(g_xcdf_m.xcdf011) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdf_m.xcdfld != g_xcdfld_t  OR g_xcdf_m.xcdf001 != g_xcdf001_t  OR g_xcdf_m.xcdf002 != g_xcdf002_t  OR g_xcdf_m.xcdf003 != g_xcdf003_t  OR g_xcdf_m.xcdf004 != g_xcdf004_t  OR g_xcdf_m.xcdf005 != g_xcdf005_t  OR g_xcdf_m.xcdf006 != g_xcdf006_t  OR g_xcdf_m.xcdf007 != g_xcdf007_t  OR g_xcdf_m.xcdf008 != g_xcdf008_t  OR g_xcdf_m.xcdf009 != g_xcdf009_t  OR g_xcdf_m.xcdf010 != g_xcdf010_t  OR g_xcdf_m.xcdf011 != g_xcdf011_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdf_t WHERE "||"xcdfent = '" ||g_enterprise|| "' AND "||"xcdfld = '"||g_xcdf_m.xcdfld ||"' AND "|| "xcdf001 = '"||g_xcdf_m.xcdf001 ||"' AND "|| "xcdf002 = '"||g_xcdf_m.xcdf002 ||"' AND "|| "xcdf003 = '"||g_xcdf_m.xcdf003 ||"' AND "|| "xcdf004 = '"||g_xcdf_m.xcdf004 ||"' AND "|| "xcdf005 = '"||g_xcdf_m.xcdf005 ||"' AND "|| "xcdf006 = '"||g_xcdf_m.xcdf006 ||"' AND "|| "xcdf007 = '"||g_xcdf_m.xcdf007 ||"' AND "|| "xcdf008 = '"||g_xcdf_m.xcdf008 ||"' AND "|| "xcdf009 = '"||g_xcdf_m.xcdf009 ||"' AND "|| "xcdf010 = '"||g_xcdf_m.xcdf010 ||"' AND "|| "xcdf011 = '"||g_xcdf_m.xcdf011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf002
            #add-point:BEFORE FIELD xcdf002 name="input.b.xcdf002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdf002
            #add-point:ON CHANGE xcdf002 name="input.g.xcdf002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf003
            
            #add-point:AFTER FIELD xcdf003 name="input.a.xcdf003"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcdf_m.xcdf003
            CALL ap_ref_array2(g_ref_fields,"SELECT xcatl003 FROM xcatl_t WHERE xcatlent='"||g_enterprise||"' AND xcatl001=? AND xcatl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcdf_m.xcdf003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcdf_m.xcdf003_desc

            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_xcdf_m.xcdfld) AND NOT cl_null(g_xcdf_m.xcdf001) AND NOT cl_null(g_xcdf_m.xcdf002) AND NOT cl_null(g_xcdf_m.xcdf003) AND NOT cl_null(g_xcdf_m.xcdf004) AND NOT cl_null(g_xcdf_m.xcdf005) AND NOT cl_null(g_xcdf_m.xcdf006) AND NOT cl_null(g_xcdf_m.xcdf007) AND NOT cl_null(g_xcdf_m.xcdf008) AND NOT cl_null(g_xcdf_m.xcdf009) AND NOT cl_null(g_xcdf_m.xcdf010) AND NOT cl_null(g_xcdf_m.xcdf011) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdf_m.xcdfld != g_xcdfld_t  OR g_xcdf_m.xcdf001 != g_xcdf001_t  OR g_xcdf_m.xcdf002 != g_xcdf002_t  OR g_xcdf_m.xcdf003 != g_xcdf003_t  OR g_xcdf_m.xcdf004 != g_xcdf004_t  OR g_xcdf_m.xcdf005 != g_xcdf005_t  OR g_xcdf_m.xcdf006 != g_xcdf006_t  OR g_xcdf_m.xcdf007 != g_xcdf007_t  OR g_xcdf_m.xcdf008 != g_xcdf008_t  OR g_xcdf_m.xcdf009 != g_xcdf009_t  OR g_xcdf_m.xcdf010 != g_xcdf010_t  OR g_xcdf_m.xcdf011 != g_xcdf011_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdf_t WHERE "||"xcdfent = '" ||g_enterprise|| "' AND "||"xcdfld = '"||g_xcdf_m.xcdfld ||"' AND "|| "xcdf001 = '"||g_xcdf_m.xcdf001 ||"' AND "|| "xcdf002 = '"||g_xcdf_m.xcdf002 ||"' AND "|| "xcdf003 = '"||g_xcdf_m.xcdf003 ||"' AND "|| "xcdf004 = '"||g_xcdf_m.xcdf004 ||"' AND "|| "xcdf005 = '"||g_xcdf_m.xcdf005 ||"' AND "|| "xcdf006 = '"||g_xcdf_m.xcdf006 ||"' AND "|| "xcdf007 = '"||g_xcdf_m.xcdf007 ||"' AND "|| "xcdf008 = '"||g_xcdf_m.xcdf008 ||"' AND "|| "xcdf009 = '"||g_xcdf_m.xcdf009 ||"' AND "|| "xcdf010 = '"||g_xcdf_m.xcdf010 ||"' AND "|| "xcdf011 = '"||g_xcdf_m.xcdf011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf003
            #add-point:BEFORE FIELD xcdf003 name="input.b.xcdf003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdf003
            #add-point:ON CHANGE xcdf003 name="input.g.xcdf003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf011
            #add-point:BEFORE FIELD xcdf011 name="input.b.xcdf011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf011
            
            #add-point:AFTER FIELD xcdf011 name="input.a.xcdf011"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_xcdf_m.xcdfld) AND NOT cl_null(g_xcdf_m.xcdf001) AND NOT cl_null(g_xcdf_m.xcdf002) AND NOT cl_null(g_xcdf_m.xcdf003) AND NOT cl_null(g_xcdf_m.xcdf004) AND NOT cl_null(g_xcdf_m.xcdf005) AND NOT cl_null(g_xcdf_m.xcdf006) AND NOT cl_null(g_xcdf_m.xcdf007) AND NOT cl_null(g_xcdf_m.xcdf008) AND NOT cl_null(g_xcdf_m.xcdf009) AND NOT cl_null(g_xcdf_m.xcdf010) AND NOT cl_null(g_xcdf_m.xcdf011) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcdf_m.xcdfld != g_xcdfld_t  OR g_xcdf_m.xcdf001 != g_xcdf001_t  OR g_xcdf_m.xcdf002 != g_xcdf002_t  OR g_xcdf_m.xcdf003 != g_xcdf003_t  OR g_xcdf_m.xcdf004 != g_xcdf004_t  OR g_xcdf_m.xcdf005 != g_xcdf005_t  OR g_xcdf_m.xcdf006 != g_xcdf006_t  OR g_xcdf_m.xcdf007 != g_xcdf007_t  OR g_xcdf_m.xcdf008 != g_xcdf008_t  OR g_xcdf_m.xcdf009 != g_xcdf009_t  OR g_xcdf_m.xcdf010 != g_xcdf010_t  OR g_xcdf_m.xcdf011 != g_xcdf011_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdf_t WHERE "||"xcdfent = '" ||g_enterprise|| "' AND "||"xcdfld = '"||g_xcdf_m.xcdfld ||"' AND "|| "xcdf001 = '"||g_xcdf_m.xcdf001 ||"' AND "|| "xcdf002 = '"||g_xcdf_m.xcdf002 ||"' AND "|| "xcdf003 = '"||g_xcdf_m.xcdf003 ||"' AND "|| "xcdf004 = '"||g_xcdf_m.xcdf004 ||"' AND "|| "xcdf005 = '"||g_xcdf_m.xcdf005 ||"' AND "|| "xcdf006 = '"||g_xcdf_m.xcdf006 ||"' AND "|| "xcdf007 = '"||g_xcdf_m.xcdf007 ||"' AND "|| "xcdf008 = '"||g_xcdf_m.xcdf008 ||"' AND "|| "xcdf009 = '"||g_xcdf_m.xcdf009 ||"' AND "|| "xcdf010 = '"||g_xcdf_m.xcdf010 ||"' AND "|| "xcdf011 = '"||g_xcdf_m.xcdf011 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdf011
            #add-point:ON CHANGE xcdf011 name="input.g.xcdf011"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.xcdfcomp
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdfcomp
            #add-point:ON ACTION controlp INFIELD xcdfcomp name="input.c.xcdfcomp"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcdf004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf004
            #add-point:ON ACTION controlp INFIELD xcdf004 name="input.c.xcdf004"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcdf005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf005
            #add-point:ON ACTION controlp INFIELD xcdf005 name="input.c.xcdf005"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcdf009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf009
            #add-point:ON ACTION controlp INFIELD xcdf009 name="input.c.xcdf009"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcdf010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf010
            #add-point:ON ACTION controlp INFIELD xcdf010 name="input.c.xcdf010"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcdfld
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdfld
            #add-point:ON ACTION controlp INFIELD xcdfld name="input.c.xcdfld"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcdf001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf001
            #add-point:ON ACTION controlp INFIELD xcdf001 name="input.c.xcdf001"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcdf006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf006
            #add-point:ON ACTION controlp INFIELD xcdf006 name="input.c.xcdf006"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcdf007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf007
            #add-point:ON ACTION controlp INFIELD xcdf007 name="input.c.xcdf007"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcdf008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf008
            #add-point:ON ACTION controlp INFIELD xcdf008 name="input.c.xcdf008"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcdf002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf002
            #add-point:ON ACTION controlp INFIELD xcdf002 name="input.c.xcdf002"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcdf003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf003
            #add-point:ON ACTION controlp INFIELD xcdf003 name="input.c.xcdf003"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcdf011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf011
            #add-point:ON ACTION controlp INFIELD xcdf011 name="input.c.xcdf011"
            
            #END add-point
 
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
            
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xcdf_m.xcdfld             
                            ,g_xcdf_m.xcdf001   
                            ,g_xcdf_m.xcdf002   
                            ,g_xcdf_m.xcdf003   
                            ,g_xcdf_m.xcdf004   
                            ,g_xcdf_m.xcdf005   
                            ,g_xcdf_m.xcdf006   
                            ,g_xcdf_m.xcdf007   
                            ,g_xcdf_m.xcdf008   
                            ,g_xcdf_m.xcdf009   
                            ,g_xcdf_m.xcdf010   
                            ,g_xcdf_m.xcdf011   
 
 
            #add-point:單頭修改前 name="input.head.b_after_input"
            
            #end add-point
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
            
               #將遮罩欄位還原
               CALL axcq523_xcdf_t_mask_restore('restore_mask_o')
            
               UPDATE xcdf_t SET (xcdfcomp,xcdf004,xcdf005,xcdf009,xcdf010,xcdfld,xcdf001,xcdf006,xcdf007, 
                   xcdf008,xcdf002,xcdf003,xcdf011) = (g_xcdf_m.xcdfcomp,g_xcdf_m.xcdf004,g_xcdf_m.xcdf005, 
                   g_xcdf_m.xcdf009,g_xcdf_m.xcdf010,g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf006, 
                   g_xcdf_m.xcdf007,g_xcdf_m.xcdf008,g_xcdf_m.xcdf002,g_xcdf_m.xcdf003,g_xcdf_m.xcdf011) 
 
                WHERE xcdfent = g_enterprise AND xcdfld = g_xcdfld_t
                  AND xcdf001 = g_xcdf001_t
                  AND xcdf002 = g_xcdf002_t
                  AND xcdf003 = g_xcdf003_t
                  AND xcdf004 = g_xcdf004_t
                  AND xcdf005 = g_xcdf005_t
                  AND xcdf006 = g_xcdf006_t
                  AND xcdf007 = g_xcdf007_t
                  AND xcdf008 = g_xcdf008_t
                  AND xcdf009 = g_xcdf009_t
                  AND xcdf010 = g_xcdf010_t
                  AND xcdf011 = g_xcdf011_t
 
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcdf_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcdf_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcdf_m.xcdfld
               LET gs_keys_bak[1] = g_xcdfld_t
               LET gs_keys[2] = g_xcdf_m.xcdf001
               LET gs_keys_bak[2] = g_xcdf001_t
               LET gs_keys[3] = g_xcdf_m.xcdf002
               LET gs_keys_bak[3] = g_xcdf002_t
               LET gs_keys[4] = g_xcdf_m.xcdf003
               LET gs_keys_bak[4] = g_xcdf003_t
               LET gs_keys[5] = g_xcdf_m.xcdf004
               LET gs_keys_bak[5] = g_xcdf004_t
               LET gs_keys[6] = g_xcdf_m.xcdf005
               LET gs_keys_bak[6] = g_xcdf005_t
               LET gs_keys[7] = g_xcdf_m.xcdf006
               LET gs_keys_bak[7] = g_xcdf006_t
               LET gs_keys[8] = g_xcdf_m.xcdf007
               LET gs_keys_bak[8] = g_xcdf007_t
               LET gs_keys[9] = g_xcdf_m.xcdf008
               LET gs_keys_bak[9] = g_xcdf008_t
               LET gs_keys[10] = g_xcdf_m.xcdf009
               LET gs_keys_bak[10] = g_xcdf009_t
               LET gs_keys[11] = g_xcdf_m.xcdf010
               LET gs_keys_bak[11] = g_xcdf010_t
               LET gs_keys[12] = g_xcdf_m.xcdf011
               LET gs_keys_bak[12] = g_xcdf011_t
               LET gs_keys[13] = g_xcdf_d[g_detail_idx].xcdf012
               LET gs_keys_bak[13] = g_xcdf_d_t.xcdf012
               CALL axcq523_update_b('xcdf_t',gs_keys,gs_keys_bak,"'1'")
                     
 
                     #add-point:單頭修改後 name="input.head.a_update"
                     
                     #end add-point
    
                     #頭先不紀錄
                     #LET g_log1 = util.JSON.stringify(g_xcdf_m_t)
                     #LET g_log2 = util.JSON.stringify(g_xcdf_m)
                     #IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                     #   CALL s_transaction_end('N','0')
                     #ELSE
                        CALL s_transaction_end('Y','0')
                     #END IF
               END CASE
            
               #將遮罩欄位進行遮蔽
               CALL axcq523_xcdf_t_mask_restore('restore_mask_n')
            
            ELSE    
               #add-point:單頭新增 name="input.head.a_insert"
               
               #end add-point
               
               #多語言處理
               
                         
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axcq523_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            END IF
 
           LET g_xcdfld_t = g_xcdf_m.xcdfld
           LET g_xcdf001_t = g_xcdf_m.xcdf001
           LET g_xcdf002_t = g_xcdf_m.xcdf002
           LET g_xcdf003_t = g_xcdf_m.xcdf003
           LET g_xcdf004_t = g_xcdf_m.xcdf004
           LET g_xcdf005_t = g_xcdf_m.xcdf005
           LET g_xcdf006_t = g_xcdf_m.xcdf006
           LET g_xcdf007_t = g_xcdf_m.xcdf007
           LET g_xcdf008_t = g_xcdf_m.xcdf008
           LET g_xcdf009_t = g_xcdf_m.xcdf009
           LET g_xcdf010_t = g_xcdf_m.xcdf010
           LET g_xcdf011_t = g_xcdf_m.xcdf011
 
           
           IF g_xcdf_d.getLength() = 0 THEN
              NEXT FIELD xcdf012
           END IF
 
      END INPUT
 
{</section>}
 
{<section id="axcq523.input.body" >}
      #Page1 預設值產生於此處
      INPUT ARRAY g_xcdf_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = FALSE,
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcdf_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axcq523_b_fill(g_wc2) #test 
            #如果一直都在單頭則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm' 
            LET g_current_page = 1
            #add-point:資料輸入前 name="input.body.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq523_idx_chk()
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axcq523_cl USING g_enterprise,g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf002,g_xcdf_m.xcdf003,g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf008,g_xcdf_m.xcdf009,g_xcdf_m.xcdf010,g_xcdf_m.xcdf011                          
               IF SQLCA.SQLCODE THEN   #(ver:49)
                  CLOSE axcq523_cl
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axcq523_cl:" 
                  LET g_errparam.code   = SQLCA.SQLCODE   #(ver:49)
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            IF g_rec_b >= l_ac 
               AND g_xcdf_d[l_ac].xcdf012 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xcdf_d_t.* = g_xcdf_d[l_ac].*  #BACKUP
               LET g_xcdf_d_o.* = g_xcdf_d[l_ac].*  #BACKUP
               CALL axcq523_set_entry_b(l_cmd)
               #add-point:set_entry_b後 name="input.body.before_row.set_entry_b"
               
               #end add-point
               CALL axcq523_set_no_entry_b(l_cmd)
               OPEN axcq523_bcl USING g_enterprise,g_xcdf_m.xcdfld,
                                                g_xcdf_m.xcdf001,
                                                g_xcdf_m.xcdf002,
                                                g_xcdf_m.xcdf003,
                                                g_xcdf_m.xcdf004,
                                                g_xcdf_m.xcdf005,
                                                g_xcdf_m.xcdf006,
                                                g_xcdf_m.xcdf007,
                                                g_xcdf_m.xcdf008,
                                                g_xcdf_m.xcdf009,
                                                g_xcdf_m.xcdf010,
                                                g_xcdf_m.xcdf011,
 
                                                g_xcdf_d_t.xcdf012
 
               IF SQLCA.SQLCODE THEN   #(ver:49)
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axcq523_bcl:" 
                  LET g_errparam.code   = SQLCA.SQLCODE   #(ver:49)
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axcq523_bcl INTO g_xcdf_d[l_ac].xcdf012,g_xcdf_d[l_ac].xcdf101,g_xcdf_d[l_ac].xcdf201, 
                      g_xcdf_d[l_ac].xcdf203,g_xcdf_d[l_ac].xcdf205,g_xcdf_d[l_ac].xcdf207,g_xcdf_d[l_ac].xcdf209, 
                      g_xcdf_d[l_ac].xcdf301,g_xcdf_d[l_ac].xcdf303,g_xcdf_d[l_ac].xcdf309,g_xcdf_d[l_ac].xcdf331, 
                      g_xcdf_d[l_ac].xcdf901,g_xcdf_d[l_ac].xcdf102,g_xcdf_d[l_ac].xcdf202,g_xcdf_d[l_ac].xcdf204, 
                      g_xcdf_d[l_ac].xcdf206,g_xcdf_d[l_ac].xcdf208,g_xcdf_d[l_ac].xcdf210,g_xcdf_d[l_ac].xcdf302, 
                      g_xcdf_d[l_ac].xcdf304,g_xcdf_d[l_ac].xcdf310,g_xcdf_d[l_ac].xcdf332,g_xcdf_d[l_ac].xcdf902 
 
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_xcdf_d_t.xcdf012,":",SQLERRMESSAGE 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
                      LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xcdf_d_mask_o[l_ac].* =  g_xcdf_d[l_ac].*
                  CALL axcq523_xcdf_t_mask()
                  LET g_xcdf_d_mask_n[l_ac].* =  g_xcdf_d[l_ac].*
                  
                  CALL axcq523_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            
 
        
         BEFORE INSERT
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            INITIALIZE g_xcdf_d_t.* TO NULL
            INITIALIZE g_xcdf_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xcdf_d[l_ac].* TO NULL
            #公用欄位預設值
              
            #一般欄位預設值
            
            
            #add-point:modify段before備份 name="input.body.before_insert.before_bak"
            
            #end add-point
            LET g_xcdf_d_t.* = g_xcdf_d[l_ac].*     #新輸入資料
            LET g_xcdf_d_o.* = g_xcdf_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axcq523_set_entry_b(l_cmd)
            #add-point:set_entry_b後 name="input.body.before_insert.set_entry_b"
            
            #end add-point
            CALL axcq523_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xcdf_d[li_reproduce_target].* = g_xcdf_d[li_reproduce].*
 
               LET g_xcdf_d[g_xcdf_d.getLength()].xcdf012 = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xcdf_t 
             WHERE xcdfent = g_enterprise AND xcdfld = g_xcdf_m.xcdfld
               AND xcdf001 = g_xcdf_m.xcdf001
               AND xcdf002 = g_xcdf_m.xcdf002
               AND xcdf003 = g_xcdf_m.xcdf003
               AND xcdf004 = g_xcdf_m.xcdf004
               AND xcdf005 = g_xcdf_m.xcdf005
               AND xcdf006 = g_xcdf_m.xcdf006
               AND xcdf007 = g_xcdf_m.xcdf007
               AND xcdf008 = g_xcdf_m.xcdf008
               AND xcdf009 = g_xcdf_m.xcdf009
               AND xcdf010 = g_xcdf_m.xcdf010
               AND xcdf011 = g_xcdf_m.xcdf011
 
               AND xcdf012 = g_xcdf_d[l_ac].xcdf012
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
               INSERT INTO xcdf_t
                           (xcdfent,
                            xcdfcomp,xcdf004,xcdf005,xcdf009,xcdf010,xcdfld,xcdf001,xcdf006,xcdf007,xcdf008,xcdf002,xcdf003,xcdf011,
                            xcdf012
                            ,xcdf101,xcdf201,xcdf203,xcdf205,xcdf207,xcdf209,xcdf301,xcdf303,xcdf309,xcdf331,xcdf901,xcdf102,xcdf202,xcdf204,xcdf206,xcdf208,xcdf210,xcdf302,xcdf304,xcdf310,xcdf332,xcdf902) 
                     VALUES(g_enterprise,
                            g_xcdf_m.xcdfcomp,g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf009,g_xcdf_m.xcdf010,g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf008,g_xcdf_m.xcdf002,g_xcdf_m.xcdf003,g_xcdf_m.xcdf011,
                            g_xcdf_d[l_ac].xcdf012
                            ,g_xcdf_d[l_ac].xcdf101,g_xcdf_d[l_ac].xcdf201,g_xcdf_d[l_ac].xcdf203,g_xcdf_d[l_ac].xcdf205, 
                                g_xcdf_d[l_ac].xcdf207,g_xcdf_d[l_ac].xcdf209,g_xcdf_d[l_ac].xcdf301, 
                                g_xcdf_d[l_ac].xcdf303,g_xcdf_d[l_ac].xcdf309,g_xcdf_d[l_ac].xcdf331, 
                                g_xcdf_d[l_ac].xcdf901,g_xcdf_d[l_ac].xcdf102,g_xcdf_d[l_ac].xcdf202, 
                                g_xcdf_d[l_ac].xcdf204,g_xcdf_d[l_ac].xcdf206,g_xcdf_d[l_ac].xcdf208, 
                                g_xcdf_d[l_ac].xcdf210,g_xcdf_d[l_ac].xcdf302,g_xcdf_d[l_ac].xcdf304, 
                                g_xcdf_d[l_ac].xcdf310,g_xcdf_d[l_ac].xcdf332,g_xcdf_d[l_ac].xcdf902) 
 
               #add-point:單身新增中 name="input.body.m_insert"
               
               #end add-point
               LET p_cmd = 'u'
               LET g_master_insert = TRUE
            ELSE    
               INITIALIZE g_xcdf_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcdf_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後 name="input.body.after_insert"
            
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               IF axcq523_before_delete() THEN 
                  
 
 
                  #取得該筆資料key值
                  INITIALIZE gs_keys TO NULL
                  LET gs_keys[01] = g_xcdf_m.xcdfld
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdf_m.xcdf001
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdf_m.xcdf002
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdf_m.xcdf003
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdf_m.xcdf004
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdf_m.xcdf005
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdf_m.xcdf006
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdf_m.xcdf007
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdf_m.xcdf008
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdf_m.xcdf009
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdf_m.xcdf010
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdf_m.xcdf011
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xcdf_d_t.xcdf012
 
 
                  #刪除下層單身
                  IF NOT axcq523_key_delete_b(gs_keys,'xcdf_t') THEN
                     CALL s_transaction_end('N','0')
                     CLOSE axcq523_bcl
                     CANCEL DELETE
                  END IF
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axcq523_bcl
               LET l_count = g_xcdf_d.getLength()
            END IF 
            
            #add-point:單身刪除後 name="input.body.a_delete"
            
            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE  name="input.body.after_delete"
               
               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_xcdf_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcau003
            #add-point:BEFORE FIELD xcau003 name="input.b.page1.xcau003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcau003
            
            #add-point:AFTER FIELD xcau003 name="input.a.page1.xcau003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcau003
            #add-point:ON CHANGE xcau003 name="input.g.page1.xcau003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdf012
            
            #add-point:AFTER FIELD xcdf012 name="input.a.page1.xcdf012"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_xcdf_m.xcdfld IS NOT NULL AND g_xcdf_m.xcdf001 IS NOT NULL AND g_xcdf_m.xcdf002 IS NOT NULL AND g_xcdf_m.xcdf003 IS NOT NULL AND g_xcdf_m.xcdf004 IS NOT NULL AND g_xcdf_m.xcdf005 IS NOT NULL AND g_xcdf_m.xcdf006 IS NOT NULL AND g_xcdf_m.xcdf007 IS NOT NULL AND g_xcdf_m.xcdf008 IS NOT NULL AND g_xcdf_m.xcdf009 IS NOT NULL AND g_xcdf_m.xcdf010 IS NOT NULL AND g_xcdf_m.xcdf011 IS NOT NULL AND g_xcdf_d[g_detail_idx].xcdf012 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcdf_m.xcdfld != g_xcdfld_t OR g_xcdf_m.xcdf001 != g_xcdf001_t OR g_xcdf_m.xcdf002 != g_xcdf002_t OR g_xcdf_m.xcdf003 != g_xcdf003_t OR g_xcdf_m.xcdf004 != g_xcdf004_t OR g_xcdf_m.xcdf005 != g_xcdf005_t OR g_xcdf_m.xcdf006 != g_xcdf006_t OR g_xcdf_m.xcdf007 != g_xcdf007_t OR g_xcdf_m.xcdf008 != g_xcdf008_t OR g_xcdf_m.xcdf009 != g_xcdf009_t OR g_xcdf_m.xcdf010 != g_xcdf010_t OR g_xcdf_m.xcdf011 != g_xcdf011_t OR g_xcdf_d[g_detail_idx].xcdf012 != g_xcdf_d_t.xcdf012)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcdf_t WHERE "||"xcdfent = '" ||g_enterprise|| "' AND "||"xcdfld = '"||g_xcdf_m.xcdfld ||"' AND "|| "xcdf001 = '"||g_xcdf_m.xcdf001 ||"' AND "|| "xcdf002 = '"||g_xcdf_m.xcdf002 ||"' AND "|| "xcdf003 = '"||g_xcdf_m.xcdf003 ||"' AND "|| "xcdf004 = '"||g_xcdf_m.xcdf004 ||"' AND "|| "xcdf005 = '"||g_xcdf_m.xcdf005 ||"' AND "|| "xcdf006 = '"||g_xcdf_m.xcdf006 ||"' AND "|| "xcdf007 = '"||g_xcdf_m.xcdf007 ||"' AND "|| "xcdf008 = '"||g_xcdf_m.xcdf008 ||"' AND "|| "xcdf009 = '"||g_xcdf_m.xcdf009 ||"' AND "|| "xcdf010 = '"||g_xcdf_m.xcdf010 ||"' AND "|| "xcdf011 = '"||g_xcdf_m.xcdf011 ||"' AND "|| "xcdf012 = '"||g_xcdf_d[g_detail_idx].xcdf012 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdf012
            #add-point:BEFORE FIELD xcdf012 name="input.b.page1.xcdf012"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdf012
            #add-point:ON CHANGE xcdf012 name="input.g.page1.xcdf012"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.xcau003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcau003
            #add-point:ON ACTION controlp INFIELD xcau003 name="input.c.page1.xcau003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcdf012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdf012
            #add-point:ON ACTION controlp INFIELD xcdf012 name="input.c.page1.xcdf012"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xcdf_d[l_ac].* = g_xcdf_d_t.*
               CLOSE axcq523_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xcdf_d[l_ac].xcdf012 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xcdf_d[l_ac].* = g_xcdf_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
         
               #將遮罩欄位還原
               CALL axcq523_xcdf_t_mask_restore('restore_mask_o')
         
               UPDATE xcdf_t SET (xcdfld,xcdf001,xcdf002,xcdf003,xcdf004,xcdf005,xcdf006,xcdf007,xcdf008, 
                   xcdf009,xcdf010,xcdf011,xcdf012,xcdf101,xcdf201,xcdf203,xcdf205,xcdf207,xcdf209,xcdf301, 
                   xcdf303,xcdf309,xcdf331,xcdf901,xcdf102,xcdf202,xcdf204,xcdf206,xcdf208,xcdf210,xcdf302, 
                   xcdf304,xcdf310,xcdf332,xcdf902) = (g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf002, 
                   g_xcdf_m.xcdf003,g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007, 
                   g_xcdf_m.xcdf008,g_xcdf_m.xcdf009,g_xcdf_m.xcdf010,g_xcdf_m.xcdf011,g_xcdf_d[l_ac].xcdf012, 
                   g_xcdf_d[l_ac].xcdf101,g_xcdf_d[l_ac].xcdf201,g_xcdf_d[l_ac].xcdf203,g_xcdf_d[l_ac].xcdf205, 
                   g_xcdf_d[l_ac].xcdf207,g_xcdf_d[l_ac].xcdf209,g_xcdf_d[l_ac].xcdf301,g_xcdf_d[l_ac].xcdf303, 
                   g_xcdf_d[l_ac].xcdf309,g_xcdf_d[l_ac].xcdf331,g_xcdf_d[l_ac].xcdf901,g_xcdf_d[l_ac].xcdf102, 
                   g_xcdf_d[l_ac].xcdf202,g_xcdf_d[l_ac].xcdf204,g_xcdf_d[l_ac].xcdf206,g_xcdf_d[l_ac].xcdf208, 
                   g_xcdf_d[l_ac].xcdf210,g_xcdf_d[l_ac].xcdf302,g_xcdf_d[l_ac].xcdf304,g_xcdf_d[l_ac].xcdf310, 
                   g_xcdf_d[l_ac].xcdf332,g_xcdf_d[l_ac].xcdf902)
                WHERE xcdfent = g_enterprise AND xcdfld = g_xcdf_m.xcdfld 
                 AND xcdf001 = g_xcdf_m.xcdf001 
                 AND xcdf002 = g_xcdf_m.xcdf002 
                 AND xcdf003 = g_xcdf_m.xcdf003 
                 AND xcdf004 = g_xcdf_m.xcdf004 
                 AND xcdf005 = g_xcdf_m.xcdf005 
                 AND xcdf006 = g_xcdf_m.xcdf006 
                 AND xcdf007 = g_xcdf_m.xcdf007 
                 AND xcdf008 = g_xcdf_m.xcdf008 
                 AND xcdf009 = g_xcdf_m.xcdf009 
                 AND xcdf010 = g_xcdf_m.xcdf010 
                 AND xcdf011 = g_xcdf_m.xcdf011 
 
                 AND xcdf012 = g_xcdf_d_t.xcdf012 #項次   
 
                 
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcdf_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "xcdf_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcdf_m.xcdfld
               LET gs_keys_bak[1] = g_xcdfld_t
               LET gs_keys[2] = g_xcdf_m.xcdf001
               LET gs_keys_bak[2] = g_xcdf001_t
               LET gs_keys[3] = g_xcdf_m.xcdf002
               LET gs_keys_bak[3] = g_xcdf002_t
               LET gs_keys[4] = g_xcdf_m.xcdf003
               LET gs_keys_bak[4] = g_xcdf003_t
               LET gs_keys[5] = g_xcdf_m.xcdf004
               LET gs_keys_bak[5] = g_xcdf004_t
               LET gs_keys[6] = g_xcdf_m.xcdf005
               LET gs_keys_bak[6] = g_xcdf005_t
               LET gs_keys[7] = g_xcdf_m.xcdf006
               LET gs_keys_bak[7] = g_xcdf006_t
               LET gs_keys[8] = g_xcdf_m.xcdf007
               LET gs_keys_bak[8] = g_xcdf007_t
               LET gs_keys[9] = g_xcdf_m.xcdf008
               LET gs_keys_bak[9] = g_xcdf008_t
               LET gs_keys[10] = g_xcdf_m.xcdf009
               LET gs_keys_bak[10] = g_xcdf009_t
               LET gs_keys[11] = g_xcdf_m.xcdf010
               LET gs_keys_bak[11] = g_xcdf010_t
               LET gs_keys[12] = g_xcdf_m.xcdf011
               LET gs_keys_bak[12] = g_xcdf011_t
               LET gs_keys[13] = g_xcdf_d[g_detail_idx].xcdf012
               LET gs_keys_bak[13] = g_xcdf_d_t.xcdf012
               CALL axcq523_update_b('xcdf_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     #修改歷程記錄(單身修改)
                     LET g_log1 = util.JSON.stringify(g_xcdf_m),util.JSON.stringify(g_xcdf_d_t)
                     LET g_log2 = util.JSON.stringify(g_xcdf_m),util.JSON.stringify(g_xcdf_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axcq523_xcdf_t_mask_restore('restore_mask_n')
               
               #若Key欄位有變動
               LET ls_keys[01] = g_xcdf_m.xcdfld
               LET ls_keys[ls_keys.getLength()+1] = g_xcdf_m.xcdf001
               LET ls_keys[ls_keys.getLength()+1] = g_xcdf_m.xcdf002
               LET ls_keys[ls_keys.getLength()+1] = g_xcdf_m.xcdf003
               LET ls_keys[ls_keys.getLength()+1] = g_xcdf_m.xcdf004
               LET ls_keys[ls_keys.getLength()+1] = g_xcdf_m.xcdf005
               LET ls_keys[ls_keys.getLength()+1] = g_xcdf_m.xcdf006
               LET ls_keys[ls_keys.getLength()+1] = g_xcdf_m.xcdf007
               LET ls_keys[ls_keys.getLength()+1] = g_xcdf_m.xcdf008
               LET ls_keys[ls_keys.getLength()+1] = g_xcdf_m.xcdf009
               LET ls_keys[ls_keys.getLength()+1] = g_xcdf_m.xcdf010
               LET ls_keys[ls_keys.getLength()+1] = g_xcdf_m.xcdf011
 
               LET ls_keys[ls_keys.getLength()+1] = g_xcdf_d_t.xcdf012
 
               CALL axcq523_key_update_b(ls_keys)
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
            END IF
 
         AFTER ROW
            #add-point:input段after row name="input.body.after_row"
            
            #end add-point  
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               CLOSE axcq523_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xcdf_d[l_ac].* = g_xcdf_d_t.*
               END IF
               EXIT DIALOG 
            END IF
 
            CLOSE axcq523_bcl
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xcdf_d.getLength() = 0 THEN
               NEXT FIELD xcdf012
            END IF
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point    
            
         ON ACTION controlo   
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xcdf_d[li_reproduce_target].* = g_xcdf_d[li_reproduce].*
 
               LET g_xcdf_d[li_reproduce_target].xcdf012 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_xcdf_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xcdf_d.getLength()+1
            END IF
            
      END INPUT
 
 
      
 
      
 
      
 
    
      #add-point:input段more_input name="input.more_inputarray"
      
      #end add-point    
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()    
         #add-point:input段before_dialog name="input.before_dialog"
         
         #end add-point 
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xcdfld
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xcau003
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #將畫面指標同步到當下指定的位置上
   CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
 
 
   
   #add-point:input段after_input name="input.after_input"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axcq523_show()
   #add-point:show段define name="show.define_customerization"
   
   #end add-point
   #add-point:show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="show.before"
   CALL axcq523_ref()
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL axcq523_b_fill(g_wc2) #第一階單身填充
      CALL axcq523_b_fill2('0')  #第二階單身填充
   END IF
   
   
 
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL axcq523_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   DISPLAY BY NAME g_xcdf_m.xcdfcomp,g_xcdf_m.xcdfcomp_desc,g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf009, 
       g_xcdf_m.xcdf009_desc,g_xcdf_m.xcdf009_desc_1,g_xcdf_m.xcdf010,g_xcdf_m.xcdfld,g_xcdf_m.xcdfld_desc, 
       g_xcdf_m.xcdf001,g_xcdf_m.xcdf001_desc,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf007_desc, 
       g_xcdf_m.xcdf008,g_xcdf_m.xcdf002,g_xcdf_m.xcdf002_desc,g_xcdf_m.xcdf003,g_xcdf_m.xcdf003_desc, 
       g_xcdf_m.xcdf011
 
   CALL axcq523_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後 name="show.after"
   
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.ref_show" >}
#+ 帶出reference資料
PRIVATE FUNCTION axcq523_ref_show()
   #add-point:ref_show段define name="ref_show.define_customerization"
   
   #end add-point 
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ref_show.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ref_show.pre_function"
   
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference name="ref_show.head.reference"
   
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xcdf_d.getLength()
      #add-point:ref_show段d_reference name="ref_show.body.reference"

   INITIALIZE g_ref_fields TO NULL 

   LET g_ref_fields[1] = g_xcdf_d[l_ac].xcdf012
   CALL ap_ref_array2(g_ref_fields," SELECT xcaul003 FROM xcaul_t WHERE xcaulent = '"||g_enterprise||"' AND xcaul001 = ? AND xcaul002='"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_xcdf_d[l_ac].lbl_xcdf012_desc = g_rtn_fields[1] 
   DISPLAY BY NAME g_xcdf_d[l_ac].lbl_xcdf012_desc
      #end add-point
   END FOR
   
 
   
   #add-point:ref_show段自訂 name="ref_show.other_reference"
   
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION
 
{</section>}
 
{<section id="axcq523.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axcq523_reproduce()
   #add-point:reproduce段define name="reproduce.define_customerization"
   
   #end add-point
   DEFINE l_newno     LIKE xcdf_t.xcdfld 
   DEFINE l_oldno     LIKE xcdf_t.xcdfld 
   DEFINE l_newno02     LIKE xcdf_t.xcdf001 
   DEFINE l_oldno02     LIKE xcdf_t.xcdf001 
   DEFINE l_newno03     LIKE xcdf_t.xcdf002 
   DEFINE l_oldno03     LIKE xcdf_t.xcdf002 
   DEFINE l_newno04     LIKE xcdf_t.xcdf003 
   DEFINE l_oldno04     LIKE xcdf_t.xcdf003 
   DEFINE l_newno05     LIKE xcdf_t.xcdf004 
   DEFINE l_oldno05     LIKE xcdf_t.xcdf004 
   DEFINE l_newno06     LIKE xcdf_t.xcdf005 
   DEFINE l_oldno06     LIKE xcdf_t.xcdf005 
   DEFINE l_newno07     LIKE xcdf_t.xcdf006 
   DEFINE l_oldno07     LIKE xcdf_t.xcdf006 
   DEFINE l_newno08     LIKE xcdf_t.xcdf007 
   DEFINE l_oldno08     LIKE xcdf_t.xcdf007 
   DEFINE l_newno09     LIKE xcdf_t.xcdf008 
   DEFINE l_oldno09     LIKE xcdf_t.xcdf008 
   DEFINE l_newno10     LIKE xcdf_t.xcdf009 
   DEFINE l_oldno10     LIKE xcdf_t.xcdf009 
   DEFINE l_newno11     LIKE xcdf_t.xcdf010 
   DEFINE l_oldno11     LIKE xcdf_t.xcdf010 
   DEFINE l_newno12     LIKE xcdf_t.xcdf011 
   DEFINE l_oldno12     LIKE xcdf_t.xcdf011 
 
   DEFINE l_master    RECORD LIKE xcdf_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE xcdf_t.* #此變數樣板目前無使用
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_xcdf_m.xcdfld IS NULL
      OR g_xcdf_m.xcdf001 IS NULL
      OR g_xcdf_m.xcdf002 IS NULL
      OR g_xcdf_m.xcdf003 IS NULL
      OR g_xcdf_m.xcdf004 IS NULL
      OR g_xcdf_m.xcdf005 IS NULL
      OR g_xcdf_m.xcdf006 IS NULL
      OR g_xcdf_m.xcdf007 IS NULL
      OR g_xcdf_m.xcdf008 IS NULL
      OR g_xcdf_m.xcdf009 IS NULL
      OR g_xcdf_m.xcdf010 IS NULL
      OR g_xcdf_m.xcdf011 IS NULL
 
      THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_xcdfld_t = g_xcdf_m.xcdfld
   LET g_xcdf001_t = g_xcdf_m.xcdf001
   LET g_xcdf002_t = g_xcdf_m.xcdf002
   LET g_xcdf003_t = g_xcdf_m.xcdf003
   LET g_xcdf004_t = g_xcdf_m.xcdf004
   LET g_xcdf005_t = g_xcdf_m.xcdf005
   LET g_xcdf006_t = g_xcdf_m.xcdf006
   LET g_xcdf007_t = g_xcdf_m.xcdf007
   LET g_xcdf008_t = g_xcdf_m.xcdf008
   LET g_xcdf009_t = g_xcdf_m.xcdf009
   LET g_xcdf010_t = g_xcdf_m.xcdf010
   LET g_xcdf011_t = g_xcdf_m.xcdf011
 
   
   LET g_xcdf_m.xcdfld = ""
   LET g_xcdf_m.xcdf001 = ""
   LET g_xcdf_m.xcdf002 = ""
   LET g_xcdf_m.xcdf003 = ""
   LET g_xcdf_m.xcdf004 = ""
   LET g_xcdf_m.xcdf005 = ""
   LET g_xcdf_m.xcdf006 = ""
   LET g_xcdf_m.xcdf007 = ""
   LET g_xcdf_m.xcdf008 = ""
   LET g_xcdf_m.xcdf009 = ""
   LET g_xcdf_m.xcdf010 = ""
   LET g_xcdf_m.xcdf011 = ""
 
   LET g_master_insert = FALSE
   CALL axcq523_set_entry('a')
   CALL axcq523_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #清空key欄位的desc
      LET g_xcdf_m.xcdf009_desc = ''
   DISPLAY BY NAME g_xcdf_m.xcdf009_desc
   LET g_xcdf_m.xcdf009_desc_1 = ''
   DISPLAY BY NAME g_xcdf_m.xcdf009_desc_1
   LET g_xcdf_m.xcdfld_desc = ''
   DISPLAY BY NAME g_xcdf_m.xcdfld_desc
   LET g_xcdf_m.xcdf001_desc = ''
   DISPLAY BY NAME g_xcdf_m.xcdf001_desc
   LET g_xcdf_m.xcdf007_desc = ''
   DISPLAY BY NAME g_xcdf_m.xcdf007_desc
   LET g_xcdf_m.xcdf002_desc = ''
   DISPLAY BY NAME g_xcdf_m.xcdf002_desc
   LET g_xcdf_m.xcdf003_desc = ''
   DISPLAY BY NAME g_xcdf_m.xcdf003_desc
 
   
   CALL axcq523_input("r")
    
   IF INT_FLAG AND NOT g_master_insert THEN
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      INITIALIZE g_xcdf_m.* TO NULL
      INITIALIZE g_xcdf_d TO NULL
 
      CALL axcq523_show()
      LET INT_FLAG = 0
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN 
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq523_set_act_visible()
   CALL axcq523_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_xcdfld_t = g_xcdf_m.xcdfld
   LET g_xcdf001_t = g_xcdf_m.xcdf001
   LET g_xcdf002_t = g_xcdf_m.xcdf002
   LET g_xcdf003_t = g_xcdf_m.xcdf003
   LET g_xcdf004_t = g_xcdf_m.xcdf004
   LET g_xcdf005_t = g_xcdf_m.xcdf005
   LET g_xcdf006_t = g_xcdf_m.xcdf006
   LET g_xcdf007_t = g_xcdf_m.xcdf007
   LET g_xcdf008_t = g_xcdf_m.xcdf008
   LET g_xcdf009_t = g_xcdf_m.xcdf009
   LET g_xcdf010_t = g_xcdf_m.xcdf010
   LET g_xcdf011_t = g_xcdf_m.xcdf011
 
   
   #組合新增資料的條件
   LET g_add_browse = " xcdfent = " ||g_enterprise|| " AND",
                      " xcdfld = '", g_xcdf_m.xcdfld, "' "
                      ," AND xcdf001 = '", g_xcdf_m.xcdf001, "' "
                      ," AND xcdf002 = '", g_xcdf_m.xcdf002, "' "
                      ," AND xcdf003 = '", g_xcdf_m.xcdf003, "' "
                      ," AND xcdf004 = '", g_xcdf_m.xcdf004, "' "
                      ," AND xcdf005 = '", g_xcdf_m.xcdf005, "' "
                      ," AND xcdf006 = '", g_xcdf_m.xcdf006, "' "
                      ," AND xcdf007 = '", g_xcdf_m.xcdf007, "' "
                      ," AND xcdf008 = '", g_xcdf_m.xcdf008, "' "
                      ," AND xcdf009 = '", g_xcdf_m.xcdf009, "' "
                      ," AND xcdf010 = '", g_xcdf_m.xcdf010, "' "
                      ," AND xcdf011 = '", g_xcdf_m.xcdf011, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axcq523_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   LET g_curr_diag = ui.DIALOG.getCurrent()
   CALL axcq523_idx_chk()
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   #功能已完成,通報訊息中心
   CALL axcq523_msgcentre_notify('reproduce')
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axcq523_detail_reproduce()
   #add-point:delete段define name="detail_reproduce.define_customerization"
   
   #end add-point 
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xcdf_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axcq523_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xcdf_t
    WHERE xcdfent = g_enterprise AND xcdfld = g_xcdfld_t
    AND xcdf001 = g_xcdf001_t
    AND xcdf002 = g_xcdf002_t
    AND xcdf003 = g_xcdf003_t
    AND xcdf004 = g_xcdf004_t
    AND xcdf005 = g_xcdf005_t
    AND xcdf006 = g_xcdf006_t
    AND xcdf007 = g_xcdf007_t
    AND xcdf008 = g_xcdf008_t
    AND xcdf009 = g_xcdf009_t
    AND xcdf010 = g_xcdf010_t
    AND xcdf011 = g_xcdf011_t
 
       INTO TEMP axcq523_detail
   
   #將key修正為調整後   
   UPDATE axcq523_detail 
      #更新key欄位
      SET xcdfld = g_xcdf_m.xcdfld
          , xcdf001 = g_xcdf_m.xcdf001
          , xcdf002 = g_xcdf_m.xcdf002
          , xcdf003 = g_xcdf_m.xcdf003
          , xcdf004 = g_xcdf_m.xcdf004
          , xcdf005 = g_xcdf_m.xcdf005
          , xcdf006 = g_xcdf_m.xcdf006
          , xcdf007 = g_xcdf_m.xcdf007
          , xcdf008 = g_xcdf_m.xcdf008
          , xcdf009 = g_xcdf_m.xcdf009
          , xcdf010 = g_xcdf_m.xcdf010
          , xcdf011 = g_xcdf_m.xcdf011
 
      #更新共用欄位
      
                                       
   #將資料塞回原table   
   INSERT INTO xcdf_t SELECT * FROM axcq523_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axcq523_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xcdfld_t = g_xcdf_m.xcdfld
   LET g_xcdf001_t = g_xcdf_m.xcdf001
   LET g_xcdf002_t = g_xcdf_m.xcdf002
   LET g_xcdf003_t = g_xcdf_m.xcdf003
   LET g_xcdf004_t = g_xcdf_m.xcdf004
   LET g_xcdf005_t = g_xcdf_m.xcdf005
   LET g_xcdf006_t = g_xcdf_m.xcdf006
   LET g_xcdf007_t = g_xcdf_m.xcdf007
   LET g_xcdf008_t = g_xcdf_m.xcdf008
   LET g_xcdf009_t = g_xcdf_m.xcdf009
   LET g_xcdf010_t = g_xcdf_m.xcdf010
   LET g_xcdf011_t = g_xcdf_m.xcdf011
 
   
   DROP TABLE axcq523_detail
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axcq523_delete()
   #add-point:delete段define name="delete.define_customerization"
   
   #end add-point
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_xcdf_m.xcdfld IS NULL
   OR g_xcdf_m.xcdf001 IS NULL
   OR g_xcdf_m.xcdf002 IS NULL
   OR g_xcdf_m.xcdf003 IS NULL
   OR g_xcdf_m.xcdf004 IS NULL
   OR g_xcdf_m.xcdf005 IS NULL
   OR g_xcdf_m.xcdf006 IS NULL
   OR g_xcdf_m.xcdf007 IS NULL
   OR g_xcdf_m.xcdf008 IS NULL
   OR g_xcdf_m.xcdf009 IS NULL
   OR g_xcdf_m.xcdf010 IS NULL
   OR g_xcdf_m.xcdf011 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   
 
   OPEN axcq523_cl USING g_enterprise,g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf002,g_xcdf_m.xcdf003,g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf008,g_xcdf_m.xcdf009,g_xcdf_m.xcdf010,g_xcdf_m.xcdf011
   IF SQLCA.SQLCODE THEN   #(ver:49)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axcq523_cl:" 
      LET g_errparam.code   = SQLCA.SQLCODE   #(ver:49)
      LET g_errparam.popup  = TRUE 
      CLOSE axcq523_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axcq523_master_referesh USING g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf002,g_xcdf_m.xcdf003, 
       g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf008,g_xcdf_m.xcdf009, 
       g_xcdf_m.xcdf010,g_xcdf_m.xcdf011 INTO g_xcdf_m.xcdfcomp,g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf009, 
       g_xcdf_m.xcdf010,g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf008, 
       g_xcdf_m.xcdf002,g_xcdf_m.xcdf003,g_xcdf_m.xcdf011,g_xcdf_m.xcdfcomp_desc,g_xcdf_m.xcdf009_desc, 
       g_xcdf_m.xcdfld_desc,g_xcdf_m.xcdf001_desc,g_xcdf_m.xcdf007_desc,g_xcdf_m.xcdf002_desc,g_xcdf_m.xcdf003_desc 
 
   
   #遮罩相關處理
   LET g_xcdf_m_mask_o.* =  g_xcdf_m.*
   CALL axcq523_xcdf_t_mask()
   LET g_xcdf_m_mask_n.* =  g_xcdf_m.*
   
   CALL axcq523_show()
 
   #單頭多語言資料備份
   
   
   IF cl_ask_del_master() THEN              #確認一下
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL axcq523_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
 
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM xcdf_t WHERE xcdfent = g_enterprise AND xcdfld = g_xcdf_m.xcdfld
                                                               AND xcdf001 = g_xcdf_m.xcdf001
                                                               AND xcdf002 = g_xcdf_m.xcdf002
                                                               AND xcdf003 = g_xcdf_m.xcdf003
                                                               AND xcdf004 = g_xcdf_m.xcdf004
                                                               AND xcdf005 = g_xcdf_m.xcdf005
                                                               AND xcdf006 = g_xcdf_m.xcdf006
                                                               AND xcdf007 = g_xcdf_m.xcdf007
                                                               AND xcdf008 = g_xcdf_m.xcdf008
                                                               AND xcdf009 = g_xcdf_m.xcdf009
                                                               AND xcdf010 = g_xcdf_m.xcdf010
                                                               AND xcdf011 = g_xcdf_m.xcdf011
 
                                                               
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xcdf_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
 
      
  
      #add-point:單身刪除後  name="delete.body.a_delete"
      
      #end add-point
      
 
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      #頭先不紀錄
      #IF NOT cl_log_modified_record('','') THEN 
      #   CLOSE axcq523_cl
      #   CALL s_transaction_end('N','0')
      #   RETURN 
      #END IF
      
      CLEAR FORM
      CALL g_xcdf_d.clear() 
 
     
      CALL axcq523_ui_browser_refresh()  
      #CALL axcq523_ui_headershow()  
      #CALL axcq523_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axcq523_fetch('P')
      ELSE
         #LET g_wc = " 1=1"
         #LET g_wc2 = " 1=1"
         #CALL axcq523_browser_fill("F")
         CLEAR FORM
      END IF
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')   
   END IF
 
   CLOSE axcq523_cl
 
   #功能已完成,通報訊息中心
   CALL axcq523_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="axcq523.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axcq523_b_fill(p_wc2)
   #add-point:b_fill段define name="b_fill.define_customerization"
   
   #end add-point
   DEFINE p_wc2      STRING
   #add-point:b_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #先清空單身變數內容
   CALL g_xcdf_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   LET g_sql = "SELECT  DISTINCT xcdf012,xcdf101,xcdf201,xcdf203,xcdf205,xcdf207,xcdf209,xcdf301,xcdf303, 
       xcdf309,xcdf331,xcdf901,xcdf102,xcdf202,xcdf204,xcdf206,xcdf208,xcdf210,xcdf302,xcdf304,xcdf310, 
       xcdf332,xcdf902 FROM xcdf_t",   
               "",
               
               
               " WHERE xcdfent= ? AND xcdfld=? AND xcdf001=? AND xcdf002=? AND xcdf003=? AND xcdf004=? AND xcdf005=? AND xcdf006=? AND xcdf007=? AND xcdf008=? AND xcdf009=? AND xcdf010=? AND xcdf011=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("xcdf_t")
   END IF
   
   #add-point:b_fill段sql_after name="b_fill.sql_after"
   LET g_sql = "SELECT  UNIQUE xcdf012,xcdf101,xcdf201,xcdf203,xcdf205,xcdf207,xcdf209,xcdf301,xcdf303, 
                xcdf309,xcdf331,xcdf901,xcdf102,xcdf202,xcdf204,xcdf206,xcdf208,xcdf210,xcdf302,xcdf304,xcdf310, 
                xcdf332,xcdf902 FROM xcdf_t",   
               " LEFT JOIN xcau_t ON xcauent=",g_enterprise," AND xcau001=xcdf012",
               
               
               " WHERE xcdfent= ? AND xcdfld=? AND xcdf001=? AND xcdf002=? AND xcdf003=? AND xcdf004=? AND xcdf005=? AND xcdf006=? AND xcdf007=? AND xcdf008=? AND xcdf009=? AND xcdf010=? AND xcdf011=?" ,
               "   AND EXISTS(SELECT 1 FROM sfaa_t WHERE sfaaent = xcdfent AND sfaadocno = xcdf006 AND sfaa061 = 'Y')"  #161027-00007#1 add               
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("xcdf_t")
   END IF
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axcq523_fill_chk(1) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = g_sql, " ORDER BY xcdf_t.xcdf012"
         #add-point:b_fill段fill_before name="b_fill.fill_before"
         
         #end add-point
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axcq523_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axcq523_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf002,g_xcdf_m.xcdf003,g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf008,g_xcdf_m.xcdf009,g_xcdf_m.xcdf010,g_xcdf_m.xcdf011   #(ver:49)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_xcdf_m.xcdfld,g_xcdf_m.xcdf001,g_xcdf_m.xcdf002,g_xcdf_m.xcdf003, 
          g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf006,g_xcdf_m.xcdf007,g_xcdf_m.xcdf008,g_xcdf_m.xcdf009, 
          g_xcdf_m.xcdf010,g_xcdf_m.xcdf011 INTO g_xcdf_d[l_ac].xcdf012,g_xcdf_d[l_ac].xcdf101,g_xcdf_d[l_ac].xcdf201, 
          g_xcdf_d[l_ac].xcdf203,g_xcdf_d[l_ac].xcdf205,g_xcdf_d[l_ac].xcdf207,g_xcdf_d[l_ac].xcdf209, 
          g_xcdf_d[l_ac].xcdf301,g_xcdf_d[l_ac].xcdf303,g_xcdf_d[l_ac].xcdf309,g_xcdf_d[l_ac].xcdf331, 
          g_xcdf_d[l_ac].xcdf901,g_xcdf_d[l_ac].xcdf102,g_xcdf_d[l_ac].xcdf202,g_xcdf_d[l_ac].xcdf204, 
          g_xcdf_d[l_ac].xcdf206,g_xcdf_d[l_ac].xcdf208,g_xcdf_d[l_ac].xcdf210,g_xcdf_d[l_ac].xcdf302, 
          g_xcdf_d[l_ac].xcdf304,g_xcdf_d[l_ac].xcdf310,g_xcdf_d[l_ac].xcdf332,g_xcdf_d[l_ac].xcdf902  
            #(ver:49)
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充 name="b_fill.fill"
         SELECT xcau003 INTO g_xcdf_d[l_ac].xcau003 FROM xcau_t WHERE xcauent=g_enterprise AND xcau001=g_xcdf_d[l_ac].xcdf012
         DISPLAY g_xcdf_d[l_ac].xcau003 TO s_detail1[l_ac].b_xcau003
         
         #end add-point
      
         #帶出公用欄位reference值
         
         
 
        
         #add-point:單身資料抓取 name="bfill.foreach"
         
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF 
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         
      END FOREACH
 
            CALL g_xcdf_d.deleteElement(g_xcdf_d.getLength())
 
      
   END IF
   
   #add-point:b_fill段more name="b_fill.more"
   
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   #遮罩相關處理
   FOR l_ac = 1 TO g_xcdf_d.getLength()
      LET g_xcdf_d_mask_o[l_ac].* =  g_xcdf_d[l_ac].*
      CALL axcq523_xcdf_t_mask()
      LET g_xcdf_d_mask_n[l_ac].* =  g_xcdf_d[l_ac].*
   END FOR
   
 
 
   FREE axcq523_pb   
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axcq523_idx_chk()
   #add-point:idx_chk段define name="idx_chk.define_customerization"
   
   #end add-point
   #add-point:idx_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   #判定目前選擇的頁面
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      #確保當下指標的位置未超過上限
      IF g_detail_idx > g_xcdf_d.getLength() THEN
         LET g_detail_idx = g_xcdf_d.getLength()
      END IF
      #確保資料位置不小於1
      IF g_detail_idx = 0 AND g_xcdf_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      #將筆數資料顯示到畫面上
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xcdf_d.getLength() TO FORMONLY.cnt
      #將位置顯示到正確筆數上
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   END IF
    
   #同第一個page的做法進行其他頁面的處理
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axcq523_b_fill2(pi_idx)
   #add-point:b_fill2段define name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_xcdf_d.getLength() <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.before_delete" >}
#+ 單身db資料刪除
PRIVATE FUNCTION axcq523_before_delete()
   #add-point:before_delete段define name="before_delete.define_customerization"
   
   #end add-point 
   #add-point:before_delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="before_delete.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="delete.body.b_single_delete"
   
   #end add-point
   
   DELETE FROM xcdf_t
    WHERE xcdfent = g_enterprise AND xcdfld = g_xcdf_m.xcdfld AND
                              xcdf001 = g_xcdf_m.xcdf001 AND
                              xcdf002 = g_xcdf_m.xcdf002 AND
                              xcdf003 = g_xcdf_m.xcdf003 AND
                              xcdf004 = g_xcdf_m.xcdf004 AND
                              xcdf005 = g_xcdf_m.xcdf005 AND
                              xcdf006 = g_xcdf_m.xcdf006 AND
                              xcdf007 = g_xcdf_m.xcdf007 AND
                              xcdf008 = g_xcdf_m.xcdf008 AND
                              xcdf009 = g_xcdf_m.xcdf009 AND
                              xcdf010 = g_xcdf_m.xcdf010 AND
                              xcdf011 = g_xcdf_m.xcdf011 AND
 
          xcdf012 = g_xcdf_d_t.xcdf012
 
      
   #add-point:單筆刪除中 name="delete.body.m_single_delete"
   
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xcdf_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後 name="delete.body.a_single_delete"
   
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
 
{</section>}
 
{<section id="axcq523.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axcq523_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define name="delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axcq523_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define name="insert_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axcq523_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define name="update_b.define_customerization"
   
   #end add-point 
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正其他單身key欄位
PRIVATE FUNCTION axcq523_key_update_b(ps_keys_bak)
   #add-point:update_b段define name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變, 若無改變則返回
   IF g_xcdf_d[l_ac].xcdf012 = g_xcdf_d_t.xcdf012 
 
      THEN
      RETURN
   END IF
    
 
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION axcq523_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axcq523_lock_b(ps_table,ps_page)
   #add-point:lock_b段define name="lock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
   
   #先刷新資料
   #CALL axcq523_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axcq523.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axcq523_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define name="unlock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
   
 
 
END FUNCTION
 
{</section>}
 
{<section id="axcq523.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axcq523_set_entry(p_cmd)
   #add-point:set_entry段define name="set_entry.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xcdfld,xcdf001,xcdf002,xcdf003,xcdf004,xcdf005,xcdf006,xcdf007,xcdf008,xcdf009,xcdf010,xcdf011",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axcq523.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axcq523_set_no_entry(p_cmd)
   #add-point:set_no_entry段define name="set_no_entry.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xcdfld,xcdf001,xcdf002,xcdf003,xcdf004,xcdf005,xcdf006,xcdf007,xcdf008,xcdf009,xcdf010,xcdf011",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axcq523.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axcq523_set_entry_b(p_cmd)
   #add-point:set_entry_b段define name="set_entry_b.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axcq523_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define name="set_no_entry_b.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b段"
   
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION axcq523_set_act_visible()
   #add-point:set_act_visible段define name="set_act_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point
   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axcq523.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION axcq523_set_act_no_visible()
   #add-point:set_act_no_visible段define name="set_act_no_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point
   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axcq523.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION axcq523_set_act_visible_b()
   #add-point:set_act_visible_b段define name="set_act_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axcq523.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION axcq523_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define name="set_act_no_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axcq523.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axcq523_default_search()
   #add-point:default_search段define name="default_search.define_customerization"
   
   #end add-point    
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="default_search.pre_function"
   
   #end add-point
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   #add-point:default_search段開始前 name="default_search.before"
   
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xcdfld = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xcdf001 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xcdf002 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " xcdf003 = '", g_argv[04], "' AND "
   END IF
   IF NOT cl_null(g_argv[05]) THEN
      LET ls_wc = ls_wc, " xcdf004 = '", g_argv[05], "' AND "
   END IF
   IF NOT cl_null(g_argv[06]) THEN
      LET ls_wc = ls_wc, " xcdf005 = '", g_argv[06], "' AND "
   END IF
   IF NOT cl_null(g_argv[07]) THEN
      LET ls_wc = ls_wc, " xcdf006 = '", g_argv[07], "' AND "
   END IF
   IF NOT cl_null(g_argv[08]) THEN
      LET ls_wc = ls_wc, " xcdf007 = '", g_argv[08], "' AND "
   END IF
   IF NOT cl_null(g_argv[09]) THEN
      LET ls_wc = ls_wc, " xcdf008 = '", g_argv[09], "' AND "
   END IF
   IF NOT cl_null(g_argv[10]) THEN
      LET ls_wc = ls_wc, " xcdf009 = '", g_argv[10], "' AND "
   END IF
   IF NOT cl_null(g_argv[11]) THEN
      LET ls_wc = ls_wc, " xcdf010 = '", g_argv[11], "' AND "
   END IF
   IF NOT cl_null(g_argv[12]) THEN
      LET ls_wc = ls_wc, " xcdf011 = '", g_argv[12], "' AND "
   END IF
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axcq523.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axcq523_fill_chk(ps_idx)
   #add-point:fill_chk段define name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="fill_chk.pre_function"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
   
   #add-point:fill_chk段other name="fill_chk.other"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axcq523.modify_detail_chk" >}
#+ 單身輸入判定
PRIVATE FUNCTION axcq523_modify_detail_chk(ps_record)
   #add-point:modify_detail_chk段define name="modify_detail_chk.define_customerization"
   
   #end add-point
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify_detail_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="modify_detail_chk.before"
   
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "xcau003"
 
      #add-point:modify_detail_chk段自訂page控制 name="modify_detail_chk.page_control"
      
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前 name="modify_detail_chk.after"
   
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
 
{</section>}
 
{<section id="axcq523.mask_functions" >}
&include "erp/axc/axcq523_mask.4gl"
 
{</section>}
 
{<section id="axcq523.state_change" >}
    
 
{</section>}
 
{<section id="axcq523.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION axcq523_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xcdf_m.xcdfld
   LET g_pk_array[1].column = 'xcdfld'
   LET g_pk_array[2].values = g_xcdf_m.xcdf001
   LET g_pk_array[2].column = 'xcdf001'
   LET g_pk_array[3].values = g_xcdf_m.xcdf002
   LET g_pk_array[3].column = 'xcdf002'
   LET g_pk_array[4].values = g_xcdf_m.xcdf003
   LET g_pk_array[4].column = 'xcdf003'
   LET g_pk_array[5].values = g_xcdf_m.xcdf004
   LET g_pk_array[5].column = 'xcdf004'
   LET g_pk_array[6].values = g_xcdf_m.xcdf005
   LET g_pk_array[6].column = 'xcdf005'
   LET g_pk_array[7].values = g_xcdf_m.xcdf006
   LET g_pk_array[7].column = 'xcdf006'
   LET g_pk_array[8].values = g_xcdf_m.xcdf007
   LET g_pk_array[8].column = 'xcdf007'
   LET g_pk_array[9].values = g_xcdf_m.xcdf008
   LET g_pk_array[9].column = 'xcdf008'
   LET g_pk_array[10].values = g_xcdf_m.xcdf009
   LET g_pk_array[10].column = 'xcdf009'
   LET g_pk_array[11].values = g_xcdf_m.xcdf010
   LET g_pk_array[11].column = 'xcdf010'
   LET g_pk_array[12].values = g_xcdf_m.xcdf011
   LET g_pk_array[12].column = 'xcdf011'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axcq523.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION axcq523_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL axcq523_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xcdf_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axcq523.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axcq523_set_default()
   DEFINE  l_glaa001        LIKE glaa_t.glaa001
#预设当前site的法人，主账套，年度期别，成本计算类型
   CALL s_axc_set_site_default() RETURNING g_xcdf_m.xcdfcomp,g_xcdf_m.xcdfld,g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf003
   DISPLAY BY NAME g_xcdf_m.xcdfcomp,g_xcdf_m.xcdfld,g_xcdf_m.xcdf004,g_xcdf_m.xcdf005,g_xcdf_m.xcdf003
   LET g_xcdf_m.xcdf001 = '1'
   DISPLAY BY NAME g_xcdf_m.xcdf001
   CALL axcq523_ref()
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axcq523_ref()
DEFINE  l_glaa001        LIKE glaa_t.glaa001
  
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcdf_m.xcdfcomp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcdf_m.xcdfcomp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcdf_m.xcdfcomp_desc 
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] =g_xcdf_m.xcdfld
   CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcdf_m.xcdfld_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcdf_m.xcdfld_desc 

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcdf_m.xcdf003
   CALL ap_ref_array2(g_ref_fields,"SELECT xcatl003 FROM xcatl_t WHERE xcatlent='"||g_enterprise||"' AND xcatl001=? AND xcatl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcdf_m.xcdf003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcdf_m.xcdf003_desc
      
  LET l_glaa001 = ' '
   CASE g_xcdf_m.xcdf001
      WHEN '1'
         SELECT glaa001 INTO l_glaa001
          FROM glaa_t
         WHERE glaaent = g_enterprise
           AND glaald  = g_xcdf_m.xcdfld
      WHEN '2'
         SELECT glaa016 INTO l_glaa001
          FROM glaa_t
         WHERE glaaent = g_enterprise
           AND glaald  =g_xcdf_m.xcdfld
      WHEN '3'
         SELECT glaa020 INTO l_glaa001
          FROM glaa_t
         WHERE glaaent = g_enterprise
           AND glaald  = g_xcdf_m.xcdfld
   END CASE
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = l_glaa001
   CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcdf_m.xcdf001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcdf_m.xcdf001_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcdf_m.xcdf009
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcdf_m.xcdf009_desc_1 = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcdf_m.xcdf009_desc_1
END FUNCTION

 
{</section>}
 
