#該程式未解開Section, 採用最新樣板產出!
{<section id="axcq531.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0005(2015-12-08 14:43:47), PR版次:0005(2016-10-21 15:46:57)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000040
#+ Filename...: axcq531
#+ Description: 庫存成本數量金額式明細查詢作業
#+ Creator....: 03297(2015-07-21 14:44:46)
#+ Modifier...: 05384 -SD/PR- 05384
 
{</section>}
 
{<section id="axcq531.global" >}
#應用 i07 樣板自動產生(Version:49)
#add-point:填寫註解說明 name="global.memo"
#160318-00025#9   2016/04/21 By 07675       將重複內容的錯誤訊息置換為公用錯誤訊息(r.v）
#160520-00004     2016/05/23 By Whitney     效能優化
#160802-00020#7   2016/10/07 By shiun       增加帳套權限管控、法人權限管控
#161019-00017#5   2016/10/21 By lixiang  调整组织栏位的开窗
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xcck_m        RECORD
       xcckcomp LIKE xcck_t.xcckcomp, 
   xcckcomp_desc LIKE type_t.chr80, 
   xcck004 LIKE xcck_t.xcck004, 
   xcck005 LIKE xcck_t.xcck005, 
   xcck001 LIKE xcck_t.xcck001, 
   xcck001_desc LIKE type_t.chr80, 
   a LIKE type_t.chr500, 
   xcckld LIKE xcck_t.xcckld, 
   xcckld_desc LIKE type_t.chr80, 
   xcck004_1 LIKE type_t.num5, 
   xcck005_1 LIKE type_t.num5, 
   xcck003 LIKE xcck_t.xcck003, 
   xcck003_desc LIKE type_t.chr80, 
   b LIKE type_t.chr500
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xcck_d        RECORD
       glcc002 LIKE type_t.chr500, 
   glcc002_desc LIKE type_t.chr500, 
   xcck010 LIKE xcck_t.xcck010, 
   xcck010_desc LIKE type_t.chr500, 
   xcck010_desc_desc LIKE type_t.chr500, 
   xcck002 LIKE xcck_t.xcck002, 
   xcck002_desc LIKE type_t.chr500, 
   xcck011 LIKE xcck_t.xcck011, 
   xcck017 LIKE xcck_t.xcck017, 
   xcbb005 LIKE type_t.chr10, 
   xcck020 LIKE xcck_t.xcck020, 
   xcck055 LIKE xcck_t.xcck055, 
   xcck006 LIKE xcck_t.xcck006, 
   xcck007 LIKE xcck_t.xcck007, 
   xcck008 LIKE xcck_t.xcck008, 
   xcck013 LIKE xcck_t.xcck013, 
   xceb102 LIKE type_t.chr500, 
   xcea101 LIKE type_t.chr20, 
   xcea102 LIKE type_t.dat, 
   xcck201 LIKE xcck_t.xcck201, 
   xcck202 LIKE xcck_t.xcck202, 
   xcck301 LIKE xcck_t.xcck301, 
   xcck302 LIKE xcck_t.xcck302, 
   dc LIKE type_t.chr500, 
   qty LIKE type_t.num20_6, 
   amt LIKE type_t.num20_6, 
   xcck009 LIKE xcck_t.xcck009, 
   xcckownid LIKE xcck_t.xcckownid, 
   xcckownid_desc LIKE type_t.chr500, 
   xcckowndp LIKE xcck_t.xcckowndp, 
   xcckowndp_desc LIKE type_t.chr500, 
   xcckcrtid LIKE xcck_t.xcckcrtid, 
   xcckcrtid_desc LIKE type_t.chr500, 
   xcckcrtdp LIKE xcck_t.xcckcrtdp, 
   xcckcrtdp_desc LIKE type_t.chr500, 
   xcckcrtdt DATETIME YEAR TO SECOND, 
   xcckmodid LIKE xcck_t.xcckmodid, 
   xcckmodid_desc LIKE type_t.chr500, 
   xcckmoddt DATETIME YEAR TO SECOND
       END RECORD
 
 
#add-point:自定義模組變數(Module Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_order1              STRING
DEFINE g_xcat005     LIKE xcat_t.xcat005
DEFINE g_a           LIKE type_t.chr1
DEFINE g_b           LIKE type_t.chr1

DEFINE g_browser1 DYNAMIC ARRAY OF RECORD
       xcck010  LIKE xcck_t.xcck010
       END RECORD
DEFINE g_xcck010 LIKE xcck_t.xcck010
#add--160802-00020#7 By shiun--(S)
DEFINE g_wc_cs_ld            STRING
DEFINE g_wc_cs_comp          STRING
#add--160802-00020#7 By shiun--(E)
#end add-point
 
 
#模組變數(Module Variables)
DEFINE g_xcck_m          type_g_xcck_m
DEFINE g_xcck_m_t        type_g_xcck_m
DEFINE g_xcck_m_o        type_g_xcck_m
DEFINE g_xcck_m_mask_o   type_g_xcck_m #轉換遮罩前資料
DEFINE g_xcck_m_mask_n   type_g_xcck_m #轉換遮罩後資料
 
   DEFINE g_xcck004_t LIKE xcck_t.xcck004
DEFINE g_xcck005_t LIKE xcck_t.xcck005
DEFINE g_xcck001_t LIKE xcck_t.xcck001
DEFINE g_xcckld_t LIKE xcck_t.xcckld
DEFINE g_xcck003_t LIKE xcck_t.xcck003
 
 
DEFINE g_xcck_d          DYNAMIC ARRAY OF type_g_xcck_d
DEFINE g_xcck_d_t        type_g_xcck_d
DEFINE g_xcck_d_o        type_g_xcck_d
DEFINE g_xcck_d_mask_o   DYNAMIC ARRAY OF type_g_xcck_d #轉換遮罩前資料
DEFINE g_xcck_d_mask_n   DYNAMIC ARRAY OF type_g_xcck_d #轉換遮罩後資料
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_xcckld LIKE xcck_t.xcckld,
      b_xcck001 LIKE xcck_t.xcck001,
      b_xcck003 LIKE xcck_t.xcck003,
      b_xcck004 LIKE xcck_t.xcck004,
      b_xcck005 LIKE xcck_t.xcck005
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num10             #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10             #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10             #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10             #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10             #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10             #Browser目前所在筆數(暫存用)
DEFINE g_current_page        LIKE type_t.num10             #目前所在頁數
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num10             #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入(僅用於三階)
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
DEFINE g_yy1 LIKE type_t.num5
DEFINE g_mm1 LIKE type_t.num5
DEFINE g_yy2 LIKE type_t.num5
DEFINE g_mm2 LIKE type_t.num5
#add--150703-00018#8 By shiun--(S)
TYPE type_g_xcck_e RECORD
       v          STRING
       END RECORD
DEFINE g_param     type_g_xcck_e
#add--150703-00018#8 By shiun--(E)
#end add-point
 
{</section>}
 
{<section id="axcq531.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:作業初始化 name="main.init"
   CALL axcq531_create_tmp()
   #add--160802-00020#7 By shiun--(S)
   CALL s_fin_create_account_center_tmp()                      #展組織下階成員所需之暫存檔 
   CALL s_fin_azzi800_sons_query(g_today)
   CALL s_fin_account_center_ld_str() RETURNING g_wc_cs_ld
   CALL s_fin_get_wc_str(g_wc_cs_ld)  RETURNING g_wc_cs_ld
   CALL s_axc_get_authcomp() RETURNING g_wc_cs_comp            #抓取使用者有拜訪權限據點的對應法人  
   #add--160802-00020#7 By shiun--(E)
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT xcckcomp,'',xcck004,xcck005,xcck001,'','',xcckld,'','','',xcck003,'', 
       ''", 
                      " FROM xcck_t",
                      " WHERE xcckent= ? AND xcckld=? AND xcck001=? AND xcck003=? AND xcck004=? AND  
                          xcck005=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axcq531_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.xcckcomp,t0.xcck004,t0.xcck005,t0.xcck001,t0.xcckld,t0.xcck003,t1.ooefl003 , 
       t2.glaal002 ,t3.xcatl003",
               " FROM xcck_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.xcckcomp AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN glaal_t t2 ON t2.glaalent="||g_enterprise||" AND t2.glaalld=t0.xcckld AND t2.glaal001='"||g_dlang||"' ",
               " LEFT JOIN xcatl_t t3 ON t3.xcatlent="||g_enterprise||" AND t3.xcatl001=t0.xcck003 AND t3.xcatl002='"||g_dlang||"' ",
 
               " WHERE t0.xcckent = " ||g_enterprise|| " AND t0.xcckld = ? AND t0.xcck001 = ? AND t0.xcck003 = ? AND t0.xcck004 = ? AND t0.xcck005 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   LET g_sql = " SELECT UNIQUE t0.xcckcomp,'','',t0.xcck001,t0.xcckld,t0.xcck003,t1.ooefl003 , 
       t2.glaal002 ,t3.xcatl003",
               " FROM xcck_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.xcckcomp AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN glaal_t t2 ON t2.glaalent='"||g_enterprise||"' AND t2.glaalld=t0.xcckld AND t2.glaal001='"||g_dlang||"' ",
               " LEFT JOIN xcatl_t t3 ON t3.xcatlent='"||g_enterprise||"' AND t3.xcatl001=t0.xcck003 AND t3.xcatl002='"||g_dlang||"' ",
 
               " WHERE t0.xcckent = '" ||g_enterprise|| "' AND t0.xcckld = ? AND t0.xcck001 = ? AND t0.xcck003 = ? "
   IF g_a = 'Y' THEN
      LET g_sql = g_sql CLIPPED," AND t0.xcck010 = ? "
   END IF
   #end add-point
   PREPARE axcq531_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axcq531 WITH FORM cl_ap_formpath("axc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axcq531_init()   
 
      #進入選單 Menu (="N")
      CALL axcq531_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
 
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axcq531
      
   END IF 
   
   CLOSE axcq531_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   DROP TABLE axcq531_tmp
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="axcq531.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axcq531_init()
   #add-point:init段define name="init.define_customerization"
   
   #end add-point   
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化 name="init.init"
   CALL cl_set_combo_scc("xcck001",'8914')
   CALL cl_set_combo_scc("xcck020",'200')
   CALL cl_set_combo_scc("xcck055",'8542')
   IF cl_get_para(g_enterprise,g_site,'S-FIN-6001') = 'Y' THEN   #成本域
      CALL cl_set_comp_visible("xcck002",TRUE)
   ELSE 
      CALL cl_set_comp_visible("xcck002",FALSE)
   END IF
   IF cl_get_para(g_enterprise,g_site,'S-FIN-6013') = 'Y' THEN   #特性
      CALL cl_set_comp_visible("xcck011",TRUE)
   ELSE 
      CALL cl_set_comp_visible("xcck011",FALSE)
   END IF
   #end add-point
   
   CALL axcq531_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="axcq531.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axcq531_ui_dialog()
   #add-point:ui_dialog段define name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE la_param  RECORD
          prog                  STRING,
          actionid              STRING,
          background            LIKE type_t.chr1,
          param                 DYNAMIC ARRAY OF STRING
                                END RECORD
   DEFINE ls_js                 STRING
   DEFINE li_idx                LIKE type_t.num10
   DEFINE ls_wc                 STRING
   DEFINE lb_first              BOOLEAN
   DEFINE l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
 
   #end add-point  
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE
      
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xcck_m.* TO NULL
         CALL g_xcck_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axcq531_init()
      END IF
 
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_xcck_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               #顯示單身筆數
               CALL axcq531_idx_chk()
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               CALL axcq531_ui_detailshow()
               
               #add-point:page1自定義行為 name="ui_dialog.body.before_row"
               
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
    
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         
         BEFORE DIALOG
            #先填充browser資料
            CALL axcq531_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axcq531_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axcq531_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         
    
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axcq531_fetch('F')
            LET g_current_row = g_current_idx         
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq531_idx_chk()
            LET g_action_choice = ""
          
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axcq531_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq531_idx_chk()
            LET g_action_choice = ""
          
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axcq531_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq531_idx_chk()
            LET g_action_choice = ""
        
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axcq531_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq531_idx_chk()
            LET g_action_choice = ""
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axcq531_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq531_idx_chk()
            LET g_action_choice = ""
            
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xcck_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xcck002
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axcq531_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axcq531_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLEAR FORM
               ELSE
                  CALL axcq531_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               #add--150703-00018#8 By shiun--(S)
               IF g_xcck_d.getLength()>0 THEN
                  CALL axcq531_cre_rep_tmp()  
                  CALL axcq531_ins_rep_tmp()               
                  LET g_param.v = "axcq531_rep_tmp"
                  CALL axcr531_x02('1=1',g_b,g_param.v)
               END IF
               #add--150703-00018#8 By shiun--(E)
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               #add--150703-00018#8 By shiun--(S)
               IF g_xcck_d.getLength()>0 THEN
                  CALL axcq531_cre_rep_tmp()  
                  CALL axcq531_ins_rep_tmp()               
                  LET g_param.v = "axcq531_rep_tmp"
                  CALL axcr531_x02('1=1',g_b,g_param.v)
               END IF
               #add--150703-00018#8 By shiun--(E)
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axcq531_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo name="menu.datainfo"
               
               #END add-point
               
            END IF
 
 
 
 
         
         
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL axcq531_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axcq531_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axcq531_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
         CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.browser_search" >}
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axcq531_browser_search(p_type)
   #add-point:browser_search段define name="browser_search.define_customerization"
   
   #end add-point   
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_search.define"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axcq531.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axcq531_browser_fill(ps_page_action)
   #add-point:browser_fill段define name="browser_fill.define_customerization"
   
   #end add-point   
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   DEFINE l_sql_cmr         STRING
   #end add-point
   
   #add-point:Function前置處理  name="browser_fill.before_browser_fill"
   LET l_sql_cmr = " (xcck004*12+xcck005 BETWEEN ",g_yy1,"*12+",g_mm1," AND ",g_yy2,"*12+",g_mm2,")"

   LET g_wc = g_wc," AND ",l_sql_cmr

   IF cl_null(g_wc) THEN
      LET g_wc = g_wc," AND (xcck004*12+xcck005 BETWEEN ",g_yy1,"*12+",g_mm1," AND ",g_yy2,"*12+",g_mm2,")"         
   ELSE
      LET g_wc = g_wc," AND (xcck004*12+xcck005 BETWEEN ",g_yy1,"*12+",g_mm1," AND ",g_yy2,"*12+",g_mm2,")"    
   END IF   
   IF g_a = 'Y' THEN
      CALL axcq531_browser_fill_1(ps_page_action)
      RETURN
   END IF
   #end add-point    
 
   LET l_searchcol = "xcckld,xcck001,xcck003,xcck004,xcck005"
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT xcckld ",
                      ", xcck001 ",
                      ", xcck003 ",
                      ", xcck004 ",
                      ", xcck005 ",
 
                      " FROM xcck_t ",
                      " ",
                      " ", 
 
 
 
                      " WHERE xcckent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xcck_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT xcckld ",
                      ", xcck001 ",
                      ", xcck003 ",
                      ", xcck004 ",
                      ", xcck005 ",
 
                      " FROM xcck_t ",
                      " ",
                      " ", 
 
 
                      " WHERE xcckent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("xcck_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   #fengmy150807----begin
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xcckld ",
                      ", xcck001 ",
                      ", xcck003 ",
 
                      " FROM xcck_t ",
                      " ",
                      " ",
 
                      " WHERE xcckent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xcck_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xcckld ",
                      ", xcck001 ",
                      ", xcck003 ",
 
                      " FROM xcck_t ",
                      " ",
                      " ",
                      " WHERE xcckent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xcck_t")
   END IF 
   #add--160802-00020#7 By shiun--(S)
   #---增加帳套權限控管
   IF NOT cl_null(g_wc_cs_ld) THEN
      LET l_sub_sql = l_sub_sql ," AND xcckld IN ",g_wc_cs_ld
    END IF
   #---增加法人過濾條件
   IF NOT cl_null(g_wc_cs_comp) THEN
      LET l_sub_sql = l_sub_sql ," AND xcckcomp IN ",g_wc_cs_comp
   END IF
   #add--160802-00020#7 By shiun--(E)
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   #fengmy150807----end
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt 
         LET g_errparam.code   = 9035
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   LET g_error_show = 0
 
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xcck_m.* TO NULL
      CALL g_xcck_d.clear()        
 
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xcckld,t0.xcck001,t0.xcck003,t0.xcck004,t0.xcck005 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT t0.xcckld,t0.xcck001,t0.xcck003,t0.xcck004,t0.xcck005",
                " FROM xcck_t t0",
                #" ",
                " ",
 
 
 
                
                " WHERE t0.xcckent = " ||g_enterprise|| " AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("xcck_t")
 
   #add-point:browser_fill,sql_rank前 name="browser_fill.before_sql_rank"
   #add--160802-00020#7 By shiun--(S)
   #---增加帳套權限控管
   IF NOT cl_null(g_wc_cs_ld) THEN
      LET g_sql = g_sql ," AND xcckld IN ",g_wc_cs_ld
    END IF
   #---增加法人過濾條件
   IF NOT cl_null(g_wc_cs_comp) THEN
      LET g_sql = g_sql ," AND xcckcomp IN ",g_wc_cs_comp
   END IF
   #add--160802-00020#7 By shiun--(E)
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前 name="browser_fill.before_pre"
   #fengmy150807----begin
   LET g_sql  = "SELECT DISTINCT t0.xcckld,t0.xcck001,t0.xcck003,'','' ",
                " FROM xcck_t t0",
                " ",
                " ",
 
                
                " WHERE t0.xcckent = '" ||g_enterprise|| "' AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("xcck_t")
   LET g_sql= g_sql, " ORDER BY ","xcckld,xcck001,xcck003", " ", g_order
   #fengmy150807----end
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"xcck_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_xcckld,g_browser[g_cnt].b_xcck001,g_browser[g_cnt].b_xcck003, 
          g_browser[g_cnt].b_xcck004,g_browser[g_cnt].b_xcck005 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
         
         
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point  
      
         
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
      END FOREACH
      FREE browse_pre
   END IF
 
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xcckld) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_xcck_m.* TO NULL
      CALL g_xcck_d.clear()
 
      #add-point:browser_fill段after_clear name="browser_fill.after_clear"
      
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   LET g_browser_cnt = g_browser.getLength()
   CALL axcq531_fetch('')
   
   #筆數顯示
   LET g_browser_idx = g_current_idx 
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axcq531_ui_headershow()
   #add-point:ui_headershow段define name="ui_headershow.define_customerization"
   
   #end add-point    
   #add-point:ui_headershow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_xcck_m.xcckld = g_browser[g_current_idx].b_xcckld   
   LET g_xcck_m.xcck001 = g_browser[g_current_idx].b_xcck001   
   LET g_xcck_m.xcck003 = g_browser[g_current_idx].b_xcck003   
   LET g_xcck_m.xcck004 = g_browser[g_current_idx].b_xcck004   
   LET g_xcck_m.xcck005 = g_browser[g_current_idx].b_xcck005   
 
   EXECUTE axcq531_master_referesh USING g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck_m.xcck004, 
       g_xcck_m.xcck005 INTO g_xcck_m.xcckcomp,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck_m.xcck001,g_xcck_m.xcckld, 
       g_xcck_m.xcck003,g_xcck_m.xcckcomp_desc,g_xcck_m.xcckld_desc,g_xcck_m.xcck003_desc
   CALL axcq531_show()
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axcq531_ui_detailshow()
   #add-point:ui_detailshow段define name="ui_detailshow.define_customerization"
   
   #end add-point
   #add-point:ui_detailshow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_detailshow.before"
   
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
      #add-point:ui_detailshow段more name="ui_detailshow.more"
      
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axcq531_ui_browser_refresh()
   #add-point:ui_browser_refresh段define name="ui_browser_refresh.define_customerization"
   
   #end add-point   
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xcckld = g_xcck_m.xcckld 
         AND g_browser[l_i].b_xcck001 = g_xcck_m.xcck001 
         AND g_browser[l_i].b_xcck003 = g_xcck_m.xcck003 
         AND g_browser[l_i].b_xcck004 = g_xcck_m.xcck004 
         AND g_browser[l_i].b_xcck005 = g_xcck_m.xcck005 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axcq531_construct()
   #add-point:cs段define name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   DEFINE l_glaa001   LIKE glaa_t.glaa001
   #end add-point 
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
   
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_xcck_m.* TO NULL
   CALL g_xcck_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外 name="cs.head.before"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xcckcomp,xcck001,xcckld,xcck003
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.head.before_construct"
 
            #end add-point 
            
                 #Ctrlp:construct.c.xcckcomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcckcomp
            #add-point:ON ACTION controlp INFIELD xcckcomp name="construct.c.xcckcomp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            #160802-00020#8-add-(S)
      	   #增加法人過濾條件
            IF NOT cl_null(g_wc_cs_comp) THEN
               LET g_qryparam.where = " ooef001 IN ",g_wc_cs_comp
            END IF
            #160802-00020#8-add-(E)
            #CALL q_ooef001()                           #呼叫開窗  #161019-00017#5
            CALL q_ooef001_2()   #161019-00017#5
            DISPLAY g_qryparam.return1 TO xcckcomp  #顯示到畫面上
            NEXT FIELD xcckcomp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcckcomp
            #add-point:BEFORE FIELD xcckcomp name="construct.b.xcckcomp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcckcomp
            
            #add-point:AFTER FIELD xcckcomp name="construct.a.xcckcomp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck001
            #add-point:BEFORE FIELD xcck001 name="construct.b.xcck001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck001
            
            #add-point:AFTER FIELD xcck001 name="construct.a.xcck001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xcck001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck001
            #add-point:ON ACTION controlp INFIELD xcck001 name="construct.c.xcck001"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xcckld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcckld
            #add-point:ON ACTION controlp INFIELD xcckld name="construct.c.xcckld"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE            
            #add--160802-00020#7 By shiun--(S)
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept   
            #增加帳套權限控制
            IF NOT cl_null(g_wc_cs_ld) THEN
               LET g_qryparam.where = " glaald IN ",g_wc_cs_ld
            END IF
            #add--160802-00020#7 By shiun--(E)
            CALL q_authorised_ld()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcckld  #顯示到畫面上
            NEXT FIELD xcckld                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcckld
            #add-point:BEFORE FIELD xcckld name="construct.b.xcckld"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcckld
            
            #add-point:AFTER FIELD xcckld name="construct.a.xcckld"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xcck003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck003
            #add-point:ON ACTION controlp INFIELD xcck003 name="construct.c.xcck003"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_xcat001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcck003  #顯示到畫面上
            NEXT FIELD xcck003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck003
            #add-point:BEFORE FIELD xcck003 name="construct.b.xcck003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck003
            
            #add-point:AFTER FIELD xcck003 name="construct.a.xcck003"
            
            #END add-point
            
 
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON xcck010,xcck002,xcck011,xcck017,xcck013,xcck009,xcckownid,xcckowndp, 
          xcckcrtid,xcckcrtdp,xcckcrtdt,xcckmodid,xcckmoddt
           FROM s_detail1[1].xcck010,s_detail1[1].xcck002,s_detail1[1].xcck011,s_detail1[1].xcck017, 
               s_detail1[1].xcck013,s_detail1[1].xcck009,s_detail1[1].xcckownid,s_detail1[1].xcckowndp, 
               s_detail1[1].xcckcrtid,s_detail1[1].xcckcrtdp,s_detail1[1].xcckcrtdt,s_detail1[1].xcckmodid, 
               s_detail1[1].xcckmoddt
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.body.before_construct"
            
            #end add-point 
            
         #單身公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<xcckcrtdt>>----
         AFTER FIELD xcckcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<xcckmoddt>>----
         AFTER FIELD xcckmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xcckcnfdt>>----
         
         #----<<xcckpstdt>>----
 
 
 
           
         #單身一般欄位開窗相關處理
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck010
            #add-point:BEFORE FIELD xcck010 name="construct.b.page1.xcck010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck010
            
            #add-point:AFTER FIELD xcck010 name="construct.a.page1.xcck010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcck010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck010
            #add-point:ON ACTION controlp INFIELD xcck010 name="construct.c.page1.xcck010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck002
            #add-point:BEFORE FIELD xcck002 name="construct.b.page1.xcck002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck002
            
            #add-point:AFTER FIELD xcck002 name="construct.a.page1.xcck002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcck002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck002
            #add-point:ON ACTION controlp INFIELD xcck002 name="construct.c.page1.xcck002"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xcck011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck011
            #add-point:ON ACTION controlp INFIELD xcck011 name="construct.c.page1.xcck011"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_xcck011()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcck011  #顯示到畫面上
            NEXT FIELD xcck011                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck011
            #add-point:BEFORE FIELD xcck011 name="construct.b.page1.xcck011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck011
            
            #add-point:AFTER FIELD xcck011 name="construct.a.page1.xcck011"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck017
            #add-point:BEFORE FIELD xcck017 name="construct.b.page1.xcck017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck017
            
            #add-point:AFTER FIELD xcck017 name="construct.a.page1.xcck017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcck017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck017
            #add-point:ON ACTION controlp INFIELD xcck017 name="construct.c.page1.xcck017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck013
            #add-point:BEFORE FIELD xcck013 name="construct.b.page1.xcck013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck013
            
            #add-point:AFTER FIELD xcck013 name="construct.a.page1.xcck013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcck013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck013
            #add-point:ON ACTION controlp INFIELD xcck013 name="construct.c.page1.xcck013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck009
            #add-point:BEFORE FIELD xcck009 name="construct.b.page1.xcck009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck009
            
            #add-point:AFTER FIELD xcck009 name="construct.a.page1.xcck009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcck009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck009
            #add-point:ON ACTION controlp INFIELD xcck009 name="construct.c.page1.xcck009"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xcckownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcckownid
            #add-point:ON ACTION controlp INFIELD xcckownid name="construct.c.page1.xcckownid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcckownid  #顯示到畫面上
            NEXT FIELD xcckownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcckownid
            #add-point:BEFORE FIELD xcckownid name="construct.b.page1.xcckownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcckownid
            
            #add-point:AFTER FIELD xcckownid name="construct.a.page1.xcckownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcckowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcckowndp
            #add-point:ON ACTION controlp INFIELD xcckowndp name="construct.c.page1.xcckowndp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcckowndp  #顯示到畫面上
            NEXT FIELD xcckowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcckowndp
            #add-point:BEFORE FIELD xcckowndp name="construct.b.page1.xcckowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcckowndp
            
            #add-point:AFTER FIELD xcckowndp name="construct.a.page1.xcckowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcckcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcckcrtid
            #add-point:ON ACTION controlp INFIELD xcckcrtid name="construct.c.page1.xcckcrtid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcckcrtid  #顯示到畫面上
            NEXT FIELD xcckcrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcckcrtid
            #add-point:BEFORE FIELD xcckcrtid name="construct.b.page1.xcckcrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcckcrtid
            
            #add-point:AFTER FIELD xcckcrtid name="construct.a.page1.xcckcrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcckcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcckcrtdp
            #add-point:ON ACTION controlp INFIELD xcckcrtdp name="construct.c.page1.xcckcrtdp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcckcrtdp  #顯示到畫面上
            NEXT FIELD xcckcrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcckcrtdp
            #add-point:BEFORE FIELD xcckcrtdp name="construct.b.page1.xcckcrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcckcrtdp
            
            #add-point:AFTER FIELD xcckcrtdp name="construct.a.page1.xcckcrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcckcrtdt
            #add-point:BEFORE FIELD xcckcrtdt name="construct.b.page1.xcckcrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xcckmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcckmodid
            #add-point:ON ACTION controlp INFIELD xcckmodid name="construct.c.page1.xcckmodid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcckmodid  #顯示到畫面上
            NEXT FIELD xcckmodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcckmodid
            #add-point:BEFORE FIELD xcckmodid name="construct.b.page1.xcckmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcckmodid
            
            #add-point:AFTER FIELD xcckmodid name="construct.a.page1.xcckmodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcckmoddt
            #add-point:BEFORE FIELD xcckmoddt name="construct.b.page1.xcckmoddt"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct name="cs.more_construct"
      INPUT g_a,g_b FROM a,b
      END INPUT
      INPUT g_yy1,g_mm1,g_yy2,g_mm2 FROM xcck004,xcck005,xcck004_1,xcck005_1
         AFTER FIELD xcck004 
            IF NOT cl_null(g_yy1) AND NOT cl_null(g_yy2) THEN
                IF g_yy1 > g_yy2 THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = 'acr-00064'
                   LET g_errparam.extend = ''
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                   NEXT FIELD xcck004
                END IF
             END IF
         AFTER FIELD xcck005
            IF NOT cl_null(g_mm1) AND NOT cl_null(g_mm2) THEN
               IF g_yy1 = g_yy2 AND 
                  g_mm1 > g_mm2 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'acr-00067'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD xcck005
               END IF
            END IF
         AFTER FIELD xcck004_1
            IF NOT cl_null(g_yy1) AND NOT cl_null(g_yy2) THEN
                IF g_yy1 > g_yy2 THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = 'acr-00064'
                   LET g_errparam.extend = ''
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                   NEXT FIELD xcck004_1
                END IF
             END IF
         AFTER FIELD xcck005_1   
            IF NOT cl_null(g_mm1) AND NOT cl_null(g_mm2) THEN
               IF g_yy1 = g_yy2 AND 
                  g_mm1 > g_mm2 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'acr-00067'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD xcck005_1
               END IF
            END IF          
      END INPUT
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog name="cs.before_dialog"
         LET g_a = 'N'
         LET g_b = 'Y'
         IF cl_null(g_xcck_m.xcckcomp) AND cl_null(g_xcck_m.xcckld) AND cl_null(g_yy1) AND cl_null(g_mm1) 
                   AND cl_null(g_yy2) AND cl_null(g_mm2) AND cl_null(g_xcck_m.xcck003) AND cl_null(g_xcck_m.xcck001) THEN
            CALL s_axc_set_site_default() RETURNING g_xcck_m.xcckcomp,g_xcck_m.xcckld,g_yy2,g_mm2,g_xcck_m.xcck003
            DISPLAY BY NAME g_xcck_m.xcckcomp,g_xcck_m.xcckld,g_xcck_m.xcck003
            LET g_yy1 = g_yy2
            LET g_mm1 = g_mm2
            DISPLAY g_yy1 TO xcck004
            DISPLAY g_mm1 TO xcck005
            DISPLAY g_yy2 TO xcck004_1
            DISPLAY g_mm2 TO xcck005_1
         END IF         
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_xcck_m.xcckcomp
         CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_xcck_m.xcckcomp_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_xcck_m.xcckcomp_desc 
         
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_xcck_m.xcckld
         CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_xcck_m.xcckld_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_xcck_m.xcckld_desc 
         
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_xcck_m.xcck003
         CALL ap_ref_array2(g_ref_fields,"SELECT xcatl003 FROM xcatl_t WHERE xcatlent='"||g_enterprise||"' AND xcatl001=? AND xcatl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_xcck_m.xcck003_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_xcck_m.xcck003_desc
            
         LET g_xcck_m.xcck001 = '1'
         DISPLAY BY NAME g_xcck_m.xcck001
         
         SELECT glaa001 INTO l_glaa001
           FROM glaa_t
          WHERE glaaent = g_enterprise
            AND glaald  = g_xcck_m.xcckld
         
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = l_glaa001
         CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_xcck_m.xcck001_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_xcck_m.xcck001_desc     
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct name="cs.after_construct"
   
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
 
{</section>}
 
{<section id="axcq531.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axcq531_query()
   #add-point:query段define name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="query.befroe_query"
   
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xcck_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axcq531_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL axcq531_browser_fill(g_wc)
      CALL axcq531_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL axcq531_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL axcq531_fetch("F") 
   END IF
   
   CALL axcq531_idx_chk()
   
   LET g_wc_filter = ""
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axcq531_fetch(p_flag)
   #add-point:fetch段define name="fetch.define_customerization"
   
   #end add-point   
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="fetch.before_fetch"
   IF g_a = 'Y' THEN
      CALL axcq531_fetch_1(p_flag)
      RETURN
   END IF
   
   
   
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L' 
         LET g_current_idx = g_header_cnt
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   #CALL axcq531_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart + g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting(g_current_idx,g_detail_cnt)
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xcck_m.xcckld = g_browser[g_current_idx].b_xcckld
   LET g_xcck_m.xcck001 = g_browser[g_current_idx].b_xcck001
   LET g_xcck_m.xcck003 = g_browser[g_current_idx].b_xcck003

   EXECUTE axcq531_master_referesh USING g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003
      INTO g_xcck_m.xcckcomp,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck_m.xcck001,g_xcck_m.xcckld, 
       g_xcck_m.xcck003,g_xcck_m.xcckcomp_desc,g_xcck_m.xcckld_desc,g_xcck_m.xcck003_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xcck_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      INITIALIZE g_xcck_m.* TO NULL
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xcck_m_mask_o.* =  g_xcck_m.*
   CALL axcq531_xcck_t_mask()
   LET g_xcck_m_mask_n.* =  g_xcck_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq531_set_act_visible()
   CALL axcq531_set_act_no_visible()
 
   #保存單頭舊值
   LET g_xcck_m_t.* = g_xcck_m.*
   LET g_xcck_m_o.* = g_xcck_m.*
   
   #重新顯示   
   CALL axcq531_show()
   RETURN
   #end add-point    
 
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L' 
         LET g_current_idx = g_header_cnt
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   #CALL axcq531_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart + g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting(g_current_idx,g_detail_cnt)
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xcck_m.xcckld = g_browser[g_current_idx].b_xcckld
   LET g_xcck_m.xcck001 = g_browser[g_current_idx].b_xcck001
   LET g_xcck_m.xcck003 = g_browser[g_current_idx].b_xcck003
   LET g_xcck_m.xcck004 = g_browser[g_current_idx].b_xcck004
   LET g_xcck_m.xcck005 = g_browser[g_current_idx].b_xcck005
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axcq531_master_referesh USING g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck_m.xcck004, 
       g_xcck_m.xcck005 INTO g_xcck_m.xcckcomp,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck_m.xcck001,g_xcck_m.xcckld, 
       g_xcck_m.xcck003,g_xcck_m.xcckcomp_desc,g_xcck_m.xcckld_desc,g_xcck_m.xcck003_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xcck_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      INITIALIZE g_xcck_m.* TO NULL
      RETURN
   END IF
 
   #遮罩相關處理
   LET g_xcck_m_mask_o.* =  g_xcck_m.*
   CALL axcq531_xcck_t_mask()
   LET g_xcck_m_mask_n.* =  g_xcck_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq531_set_act_visible()
   CALL axcq531_set_act_no_visible()
 
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
 
   #保存單頭舊值
   LET g_xcck_m_t.* = g_xcck_m.*
   LET g_xcck_m_o.* = g_xcck_m.*
   
   #重新顯示   
   CALL axcq531_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="axcq531.insert" >}
#+ 資料新增
PRIVATE FUNCTION axcq531_insert()
   #add-point:insert段define name="insert.define_customerization"
   
   #end add-point   
   #add-point:insert段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="insert.before"
   
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_xcck_d.clear()
 
 
   INITIALIZE g_xcck_m.* TO NULL             #DEFAULT 設定
   LET g_xcckld_t = NULL
   LET g_xcck001_t = NULL
   LET g_xcck003_t = NULL
   LET g_xcck004_t = NULL
   LET g_xcck005_t = NULL
 
   LET g_master_insert = FALSE
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值 name="insert.default"
      
      #end add-point 
 
      CALL axcq531_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xcck_m.* TO NULL
         INITIALIZE g_xcck_d TO NULL
 
         CALL axcq531_show()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         LET g_xcck_m.* = g_xcck_m_t.*
         CALL axcq531_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF
    
      #CALL g_xcck_d.clear()
 
      
      #add-point:單頭輸入後2 name="insert.after_insert2"
      
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq531_set_act_visible()
   CALL axcq531_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_xcckld_t = g_xcck_m.xcckld
   LET g_xcck001_t = g_xcck_m.xcck001
   LET g_xcck003_t = g_xcck_m.xcck003
   LET g_xcck004_t = g_xcck_m.xcck004
   LET g_xcck005_t = g_xcck_m.xcck005
 
   
   #組合新增資料的條件
   LET g_add_browse = " xcckent = " ||g_enterprise|| " AND",
                      " xcckld = '", g_xcck_m.xcckld, "' "
                      ," AND xcck001 = '", g_xcck_m.xcck001, "' "
                      ," AND xcck003 = '", g_xcck_m.xcck003, "' "
                      ," AND xcck004 = '", g_xcck_m.xcck004, "' "
                      ," AND xcck005 = '", g_xcck_m.xcck005, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axcq531_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CALL axcq531_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axcq531_master_referesh USING g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck_m.xcck004, 
       g_xcck_m.xcck005 INTO g_xcck_m.xcckcomp,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck_m.xcck001,g_xcck_m.xcckld, 
       g_xcck_m.xcck003,g_xcck_m.xcckcomp_desc,g_xcck_m.xcckld_desc,g_xcck_m.xcck003_desc
   
   #遮罩相關處理
   LET g_xcck_m_mask_o.* =  g_xcck_m.*
   CALL axcq531_xcck_t_mask()
   LET g_xcck_m_mask_n.* =  g_xcck_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xcck_m.xcckcomp,g_xcck_m.xcckcomp_desc,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck_m.xcck001, 
       g_xcck_m.xcck001_desc,g_xcck_m.a,g_xcck_m.xcckld,g_xcck_m.xcckld_desc,g_xcck_m.xcck004_1,g_xcck_m.xcck005_1, 
       g_xcck_m.xcck003,g_xcck_m.xcck003_desc,g_xcck_m.b
   
   #功能已完成,通報訊息中心
   CALL axcq531_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.modify" >}
#+ 資料修改
PRIVATE FUNCTION axcq531_modify()
   #add-point:modify段define name="modify.define_customerization"
   
   #end add-point    
   #add-point:modify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   IF g_xcck_m.xcckld IS NULL
   OR g_xcck_m.xcck001 IS NULL
   OR g_xcck_m.xcck003 IS NULL
   OR g_xcck_m.xcck004 IS NULL
   OR g_xcck_m.xcck005 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL  
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
   LET g_xcckld_t = g_xcck_m.xcckld
   LET g_xcck001_t = g_xcck_m.xcck001
   LET g_xcck003_t = g_xcck_m.xcck003
   LET g_xcck004_t = g_xcck_m.xcck004
   LET g_xcck005_t = g_xcck_m.xcck005
 
   CALL s_transaction_begin()
   
   OPEN axcq531_cl USING g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005
   IF SQLCA.SQLCODE THEN   #(ver:49)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axcq531_cl:" 
      LET g_errparam.code   = SQLCA.SQLCODE   #(ver:49)
      LET g_errparam.popup  = TRUE 
      CLOSE axcq531_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axcq531_master_referesh USING g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck_m.xcck004, 
       g_xcck_m.xcck005 INTO g_xcck_m.xcckcomp,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck_m.xcck001,g_xcck_m.xcckld, 
       g_xcck_m.xcck003,g_xcck_m.xcckcomp_desc,g_xcck_m.xcckld_desc,g_xcck_m.xcck003_desc
   
   #遮罩相關處理
   LET g_xcck_m_mask_o.* =  g_xcck_m.*
   CALL axcq531_xcck_t_mask()
   LET g_xcck_m_mask_n.* =  g_xcck_m.*
   
   CALL s_transaction_end('Y','0')
 
   CALL axcq531_show()
   WHILE TRUE
      LET g_xcckld_t = g_xcck_m.xcckld
      LET g_xcck001_t = g_xcck_m.xcck001
      LET g_xcck003_t = g_xcck_m.xcck003
      LET g_xcck004_t = g_xcck_m.xcck004
      LET g_xcck005_t = g_xcck_m.xcck005
 
 
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      CALL axcq531_input("u")     #欄位更改
      
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         LET g_xcck_m.* = g_xcck_m_t.*
         CALL axcq531_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更(更新單身table的key欄位值)
      IF g_xcck_m.xcckld != g_xcckld_t 
      OR g_xcck_m.xcck001 != g_xcck001_t 
      OR g_xcck_m.xcck003 != g_xcck003_t 
      OR g_xcck_m.xcck004 != g_xcck004_t 
      OR g_xcck_m.xcck005 != g_xcck005_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前 name="modify.b_key_update"
         
         #end add-point
         
         #add-point:單頭(偽)修改中 name="modify.m_key_update"
         
         #end add-point
         
 
         
         #add-point:單頭(偽)修改後 name="modify.a_key_update"
         
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq531_set_act_visible()
   CALL axcq531_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xcckent = " ||g_enterprise|| " AND",
                      " xcckld = '", g_xcck_m.xcckld, "' "
                      ," AND xcck001 = '", g_xcck_m.xcck001, "' "
                      ," AND xcck003 = '", g_xcck_m.xcck003, "' "
                      ," AND xcck004 = '", g_xcck_m.xcck004, "' "
                      ," AND xcck005 = '", g_xcck_m.xcck005, "' "
 
   #填到對應位置
   CALL axcq531_browser_fill("")
 
   CALL axcq531_idx_chk()
 
   CLOSE axcq531_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axcq531_msgcentre_notify('modify')
   
END FUNCTION   
 
{</section>}
 
{<section id="axcq531.input" >}
#+ 資料輸入
PRIVATE FUNCTION axcq531_input(p_cmd)
   #add-point:input段define name="input.define_customerization"
   
   #end add-point   
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num10               #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num10               #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10               #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xcck_m.xcckcomp,g_xcck_m.xcckcomp_desc,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck_m.xcck001, 
       g_xcck_m.xcck001_desc,g_xcck_m.a,g_xcck_m.xcckld,g_xcck_m.xcckld_desc,g_xcck_m.xcck004_1,g_xcck_m.xcck005_1, 
       g_xcck_m.xcck003,g_xcck_m.xcck003_desc,g_xcck_m.b
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT xcck010,xcck002,xcck011,xcck017,xcck020,xcck055,xcck006,xcck007,xcck008, 
       xcck013,xcck201,xcck202,xcck301,xcck302,xcck009,xcckownid,xcckowndp,xcckcrtid,xcckcrtdp,xcckcrtdt, 
       xcckmodid,xcckmoddt FROM xcck_t WHERE xcckent=? AND xcckld=? AND xcck001=? AND xcck003=? AND  
       xcck004=? AND xcck005=? AND xcck002=? AND xcck006=? AND xcck007=? AND xcck008=? AND xcck009=?  
       FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axcq531_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axcq531_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL axcq531_set_no_entry(p_cmd)
   #add-point:set_no_entry後 name="input.after_set_no_entry"
   
   #end add-point
 
   DISPLAY BY NAME g_xcck_m.xcckcomp,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck_m.xcck001,g_xcck_m.a,g_xcck_m.xcckld, 
       g_xcck_m.xcck004_1,g_xcck_m.xcck005_1,g_xcck_m.xcck003,g_xcck_m.b
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:進入修改段前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="axcq531.input.head" >}
   
      #單頭段
      INPUT BY NAME g_xcck_m.xcckcomp,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck_m.xcck001,g_xcck_m.a, 
          g_xcck_m.xcckld,g_xcck_m.xcck004_1,g_xcck_m.xcck005_1,g_xcck_m.xcck003,g_xcck_m.b 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前 name="input.head.b_input"
            
            #end add-point
          
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcckcomp
            
            #add-point:AFTER FIELD xcckcomp name="input.a.xcckcomp"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcck_m.xcckcomp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcck_m.xcckcomp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcck_m.xcckcomp_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcckcomp
            #add-point:BEFORE FIELD xcckcomp name="input.b.xcckcomp"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcckcomp
            #add-point:ON CHANGE xcckcomp name="input.g.xcckcomp"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck004
            #add-point:BEFORE FIELD xcck004 name="input.b.xcck004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck004
            
            #add-point:AFTER FIELD xcck004 name="input.a.xcck004"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_xcck_m.xcckld) AND NOT cl_null(g_xcck_m.xcck001) AND NOT cl_null(g_xcck_m.xcck003) AND NOT cl_null(g_xcck_m.xcck004) AND NOT cl_null(g_xcck_m.xcck005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcck_m.xcckld != g_xcckld_t  OR g_xcck_m.xcck001 != g_xcck001_t  OR g_xcck_m.xcck003 != g_xcck003_t  OR g_xcck_m.xcck004 != g_xcck004_t  OR g_xcck_m.xcck005 != g_xcck005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcck_t WHERE "||"xcckent = '" ||g_enterprise|| "' AND "||"xcckld = '"||g_xcck_m.xcckld ||"' AND "|| "xcck001 = '"||g_xcck_m.xcck001 ||"' AND "|| "xcck003 = '"||g_xcck_m.xcck003 ||"' AND "|| "xcck004 = '"||g_xcck_m.xcck004 ||"' AND "|| "xcck005 = '"||g_xcck_m.xcck005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck004
            #add-point:ON CHANGE xcck004 name="input.g.xcck004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck005
            #add-point:BEFORE FIELD xcck005 name="input.b.xcck005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck005
            
            #add-point:AFTER FIELD xcck005 name="input.a.xcck005"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_xcck_m.xcckld) AND NOT cl_null(g_xcck_m.xcck001) AND NOT cl_null(g_xcck_m.xcck003) AND NOT cl_null(g_xcck_m.xcck004) AND NOT cl_null(g_xcck_m.xcck005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcck_m.xcckld != g_xcckld_t  OR g_xcck_m.xcck001 != g_xcck001_t  OR g_xcck_m.xcck003 != g_xcck003_t  OR g_xcck_m.xcck004 != g_xcck004_t  OR g_xcck_m.xcck005 != g_xcck005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcck_t WHERE "||"xcckent = '" ||g_enterprise|| "' AND "||"xcckld = '"||g_xcck_m.xcckld ||"' AND "|| "xcck001 = '"||g_xcck_m.xcck001 ||"' AND "|| "xcck003 = '"||g_xcck_m.xcck003 ||"' AND "|| "xcck004 = '"||g_xcck_m.xcck004 ||"' AND "|| "xcck005 = '"||g_xcck_m.xcck005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck005
            #add-point:ON CHANGE xcck005 name="input.g.xcck005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck001
            
            #add-point:AFTER FIELD xcck001 name="input.a.xcck001"

            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_xcck_m.xcckld) AND NOT cl_null(g_xcck_m.xcck001) AND NOT cl_null(g_xcck_m.xcck003) AND NOT cl_null(g_xcck_m.xcck004) AND NOT cl_null(g_xcck_m.xcck005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcck_m.xcckld != g_xcckld_t  OR g_xcck_m.xcck001 != g_xcck001_t  OR g_xcck_m.xcck003 != g_xcck003_t  OR g_xcck_m.xcck004 != g_xcck004_t  OR g_xcck_m.xcck005 != g_xcck005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcck_t WHERE "||"xcckent = '" ||g_enterprise|| "' AND "||"xcckld = '"||g_xcck_m.xcckld ||"' AND "|| "xcck001 = '"||g_xcck_m.xcck001 ||"' AND "|| "xcck003 = '"||g_xcck_m.xcck003 ||"' AND "|| "xcck004 = '"||g_xcck_m.xcck004 ||"' AND "|| "xcck005 = '"||g_xcck_m.xcck005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck001
            #add-point:BEFORE FIELD xcck001 name="input.b.xcck001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck001
            #add-point:ON CHANGE xcck001 name="input.g.xcck001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD a
            #add-point:BEFORE FIELD a name="input.b.a"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD a
            
            #add-point:AFTER FIELD a name="input.a.a"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE a
            #add-point:ON CHANGE a name="input.g.a"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcckld
            
            #add-point:AFTER FIELD xcckld name="input.a.xcckld"
            IF NOT cl_null(g_xcck_m.xcckld) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcck_m.xcckld
               #160318-00025#9--add--str
               LET g_errshow = TRUE 
               LET g_chkparam.err_str[1] = "agl-00051:sub-01302|agli010|",cl_get_progname("agli010",g_lang,"2"),"|:EXEPROGagli010"
               #160318-00025#9--add--end
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_glaald") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF


            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcck_m.xcckld
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcck_m.xcckld_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcck_m.xcckld_desc

            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_xcck_m.xcckld) AND NOT cl_null(g_xcck_m.xcck001) AND NOT cl_null(g_xcck_m.xcck003) AND NOT cl_null(g_xcck_m.xcck004) AND NOT cl_null(g_xcck_m.xcck005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcck_m.xcckld != g_xcckld_t  OR g_xcck_m.xcck001 != g_xcck001_t  OR g_xcck_m.xcck003 != g_xcck003_t  OR g_xcck_m.xcck004 != g_xcck004_t  OR g_xcck_m.xcck005 != g_xcck005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcck_t WHERE "||"xcckent = '" ||g_enterprise|| "' AND "||"xcckld = '"||g_xcck_m.xcckld ||"' AND "|| "xcck001 = '"||g_xcck_m.xcck001 ||"' AND "|| "xcck003 = '"||g_xcck_m.xcck003 ||"' AND "|| "xcck004 = '"||g_xcck_m.xcck004 ||"' AND "|| "xcck005 = '"||g_xcck_m.xcck005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcckld
            #add-point:BEFORE FIELD xcckld name="input.b.xcckld"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcckld
            #add-point:ON CHANGE xcckld name="input.g.xcckld"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck004_1
            #add-point:BEFORE FIELD xcck004_1 name="input.b.xcck004_1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck004_1
            
            #add-point:AFTER FIELD xcck004_1 name="input.a.xcck004_1"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck004_1
            #add-point:ON CHANGE xcck004_1 name="input.g.xcck004_1"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck005_1
            #add-point:BEFORE FIELD xcck005_1 name="input.b.xcck005_1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck005_1
            
            #add-point:AFTER FIELD xcck005_1 name="input.a.xcck005_1"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck005_1
            #add-point:ON CHANGE xcck005_1 name="input.g.xcck005_1"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck003
            
            #add-point:AFTER FIELD xcck003 name="input.a.xcck003"
            IF NOT cl_null(g_xcck_m.xcck003) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcck_m.xcck003
               #160318-00025#9--add--str
               LET g_errshow = TRUE 
               LET g_chkparam.err_str[1] = "agl-00195:sub-01302|axci100|",cl_get_progname("axci100",g_lang,"2"),"|:EXEPROGaxci100"
               #160318-00025#9--add--end
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_xcat001") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF


            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcck_m.xcck003
            CALL ap_ref_array2(g_ref_fields,"SELECT xcatl003 FROM xcatl_t WHERE xcatlent='"||g_enterprise||"' AND xcatl001=? AND xcatl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcck_m.xcck003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcck_m.xcck003_desc

            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_xcck_m.xcckld) AND NOT cl_null(g_xcck_m.xcck001) AND NOT cl_null(g_xcck_m.xcck003) AND NOT cl_null(g_xcck_m.xcck004) AND NOT cl_null(g_xcck_m.xcck005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcck_m.xcckld != g_xcckld_t  OR g_xcck_m.xcck001 != g_xcck001_t  OR g_xcck_m.xcck003 != g_xcck003_t  OR g_xcck_m.xcck004 != g_xcck004_t  OR g_xcck_m.xcck005 != g_xcck005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcck_t WHERE "||"xcckent = '" ||g_enterprise|| "' AND "||"xcckld = '"||g_xcck_m.xcckld ||"' AND "|| "xcck001 = '"||g_xcck_m.xcck001 ||"' AND "|| "xcck003 = '"||g_xcck_m.xcck003 ||"' AND "|| "xcck004 = '"||g_xcck_m.xcck004 ||"' AND "|| "xcck005 = '"||g_xcck_m.xcck005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck003
            #add-point:BEFORE FIELD xcck003 name="input.b.xcck003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck003
            #add-point:ON CHANGE xcck003 name="input.g.xcck003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b
            #add-point:BEFORE FIELD b name="input.b.b"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b
            
            #add-point:AFTER FIELD b name="input.a.b"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE b
            #add-point:ON CHANGE b name="input.g.b"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.xcckcomp
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcckcomp
            #add-point:ON ACTION controlp INFIELD xcckcomp name="input.c.xcckcomp"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcck004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck004
            #add-point:ON ACTION controlp INFIELD xcck004 name="input.c.xcck004"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcck005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck005
            #add-point:ON ACTION controlp INFIELD xcck005 name="input.c.xcck005"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcck001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck001
            #add-point:ON ACTION controlp INFIELD xcck001 name="input.c.xcck001"
            
            #END add-point
 
 
         #Ctrlp:input.c.a
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD a
            #add-point:ON ACTION controlp INFIELD a name="input.c.a"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcckld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcckld
            #add-point:ON ACTION controlp INFIELD xcckld name="input.c.xcckld"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcck_m.xcckld             #給予default值

            #給予arg
            #add--160802-00020#7 By shiun--(S)
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept   
            #增加帳套權限控制
            IF NOT cl_null(g_wc_cs_ld) THEN
               LET g_qryparam.where = " glaald IN ",g_wc_cs_ld
            END IF
            #add--160802-00020#7 By shiun--(E)
            CALL q_authorised_ld()                                #呼叫開窗

            LET g_xcck_m.xcckld = g_qryparam.return1              

            DISPLAY g_xcck_m.xcckld TO xcckld              #

            NEXT FIELD xcckld                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xcck004_1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck004_1
            #add-point:ON ACTION controlp INFIELD xcck004_1 name="input.c.xcck004_1"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcck005_1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck005_1
            #add-point:ON ACTION controlp INFIELD xcck005_1 name="input.c.xcck005_1"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcck003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck003
            #add-point:ON ACTION controlp INFIELD xcck003 name="input.c.xcck003"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcck_m.xcck003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_xcat001()                                #呼叫開窗

            LET g_xcck_m.xcck003 = g_qryparam.return1              

            DISPLAY g_xcck_m.xcck003 TO xcck003              #

            NEXT FIELD xcck003                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.b
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b
            #add-point:ON ACTION controlp INFIELD b name="input.c.b"
            
            #END add-point
 
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
            
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xcck_m.xcckld             
                            ,g_xcck_m.xcck001   
                            ,g_xcck_m.xcck003   
                            ,g_xcck_m.xcck004   
                            ,g_xcck_m.xcck005   
 
 
            #add-point:單頭修改前 name="input.head.b_after_input"
            
            #end add-point
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
            
               #將遮罩欄位還原
               CALL axcq531_xcck_t_mask_restore('restore_mask_o')
            
               UPDATE xcck_t SET (xcckcomp,xcck004,xcck005,xcck001,xcckld,xcck003) = (g_xcck_m.xcckcomp, 
                   g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck_m.xcck001,g_xcck_m.xcckld,g_xcck_m.xcck003) 
 
                WHERE xcckent = g_enterprise AND xcckld = g_xcckld_t
                  AND xcck001 = g_xcck001_t
                  AND xcck003 = g_xcck003_t
                  AND xcck004 = g_xcck004_t
                  AND xcck005 = g_xcck005_t
 
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcck_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcck_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcck_m.xcckld
               LET gs_keys_bak[1] = g_xcckld_t
               LET gs_keys[2] = g_xcck_m.xcck001
               LET gs_keys_bak[2] = g_xcck001_t
               LET gs_keys[3] = g_xcck_m.xcck003
               LET gs_keys_bak[3] = g_xcck003_t
               LET gs_keys[4] = g_xcck_m.xcck004
               LET gs_keys_bak[4] = g_xcck004_t
               LET gs_keys[5] = g_xcck_m.xcck005
               LET gs_keys_bak[5] = g_xcck005_t
               LET gs_keys[6] = g_xcck_d[g_detail_idx].xcck002
               LET gs_keys_bak[6] = g_xcck_d_t.xcck002
               LET gs_keys[7] = g_xcck_d[g_detail_idx].xcck006
               LET gs_keys_bak[7] = g_xcck_d_t.xcck006
               LET gs_keys[8] = g_xcck_d[g_detail_idx].xcck007
               LET gs_keys_bak[8] = g_xcck_d_t.xcck007
               LET gs_keys[9] = g_xcck_d[g_detail_idx].xcck008
               LET gs_keys_bak[9] = g_xcck_d_t.xcck008
               LET gs_keys[10] = g_xcck_d[g_detail_idx].xcck009
               LET gs_keys_bak[10] = g_xcck_d_t.xcck009
               CALL axcq531_update_b('xcck_t',gs_keys,gs_keys_bak,"'1'")
                     
 
                     #add-point:單頭修改後 name="input.head.a_update"
                     
                     #end add-point
    
                     #頭先不紀錄
                     #LET g_log1 = util.JSON.stringify(g_xcck_m_t)
                     #LET g_log2 = util.JSON.stringify(g_xcck_m)
                     #IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                     #   CALL s_transaction_end('N','0')
                     #ELSE
                        CALL s_transaction_end('Y','0')
                     #END IF
               END CASE
            
               #將遮罩欄位進行遮蔽
               CALL axcq531_xcck_t_mask_restore('restore_mask_n')
            
            ELSE    
               #add-point:單頭新增 name="input.head.a_insert"
               
               #end add-point
               
               #多語言處理
               
                         
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axcq531_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            END IF
 
           LET g_xcckld_t = g_xcck_m.xcckld
           LET g_xcck001_t = g_xcck_m.xcck001
           LET g_xcck003_t = g_xcck_m.xcck003
           LET g_xcck004_t = g_xcck_m.xcck004
           LET g_xcck005_t = g_xcck_m.xcck005
 
           
           IF g_xcck_d.getLength() = 0 THEN
              NEXT FIELD xcck002
           END IF
 
      END INPUT
 
{</section>}
 
{<section id="axcq531.input.body" >}
      #Page1 預設值產生於此處
      INPUT ARRAY g_xcck_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcck_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axcq531_b_fill(g_wc2) #test 
            #如果一直都在單頭則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm' 
            LET g_current_page = 1
            #add-point:資料輸入前 name="input.body.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq531_idx_chk()
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axcq531_cl USING g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005                          
               IF SQLCA.SQLCODE THEN   #(ver:49)
                  CLOSE axcq531_cl
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axcq531_cl:" 
                  LET g_errparam.code   = SQLCA.SQLCODE   #(ver:49)
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            IF g_rec_b >= l_ac 
               AND g_xcck_d[l_ac].xcck002 IS NOT NULL
               AND g_xcck_d[l_ac].xcck006 IS NOT NULL
               AND g_xcck_d[l_ac].xcck007 IS NOT NULL
               AND g_xcck_d[l_ac].xcck008 IS NOT NULL
               AND g_xcck_d[l_ac].xcck009 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xcck_d_t.* = g_xcck_d[l_ac].*  #BACKUP
               LET g_xcck_d_o.* = g_xcck_d[l_ac].*  #BACKUP
               CALL axcq531_set_entry_b(l_cmd)
               #add-point:set_entry_b後 name="input.body.before_row.set_entry_b"
               
               #end add-point
               CALL axcq531_set_no_entry_b(l_cmd)
               OPEN axcq531_bcl USING g_enterprise,g_xcck_m.xcckld,
                                                g_xcck_m.xcck001,
                                                g_xcck_m.xcck003,
                                                g_xcck_m.xcck004,
                                                g_xcck_m.xcck005,
 
                                                g_xcck_d_t.xcck002
                                                ,g_xcck_d_t.xcck006
                                                ,g_xcck_d_t.xcck007
                                                ,g_xcck_d_t.xcck008
                                                ,g_xcck_d_t.xcck009
 
               IF SQLCA.SQLCODE THEN   #(ver:49)
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axcq531_bcl:" 
                  LET g_errparam.code   = SQLCA.SQLCODE   #(ver:49)
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axcq531_bcl INTO g_xcck_d[l_ac].xcck010,g_xcck_d[l_ac].xcck002,g_xcck_d[l_ac].xcck011, 
                      g_xcck_d[l_ac].xcck017,g_xcck_d[l_ac].xcck020,g_xcck_d[l_ac].xcck055,g_xcck_d[l_ac].xcck006, 
                      g_xcck_d[l_ac].xcck007,g_xcck_d[l_ac].xcck008,g_xcck_d[l_ac].xcck013,g_xcck_d[l_ac].xcck201, 
                      g_xcck_d[l_ac].xcck202,g_xcck_d[l_ac].xcck301,g_xcck_d[l_ac].xcck302,g_xcck_d[l_ac].xcck009, 
                      g_xcck_d[l_ac].xcckownid,g_xcck_d[l_ac].xcckowndp,g_xcck_d[l_ac].xcckcrtid,g_xcck_d[l_ac].xcckcrtdp, 
                      g_xcck_d[l_ac].xcckcrtdt,g_xcck_d[l_ac].xcckmodid,g_xcck_d[l_ac].xcckmoddt
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_xcck_d_t.xcck002,":",SQLERRMESSAGE 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
                      LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xcck_d_mask_o[l_ac].* =  g_xcck_d[l_ac].*
                  CALL axcq531_xcck_t_mask()
                  LET g_xcck_d_mask_n[l_ac].* =  g_xcck_d[l_ac].*
                  
                  CALL axcq531_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            
 
        
         BEFORE INSERT
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            INITIALIZE g_xcck_d_t.* TO NULL
            INITIALIZE g_xcck_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xcck_d[l_ac].* TO NULL
            #公用欄位預設值
            #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xcck_d[l_ac].xcckownid = g_user
      LET g_xcck_d[l_ac].xcckowndp = g_dept
      LET g_xcck_d[l_ac].xcckcrtid = g_user
      LET g_xcck_d[l_ac].xcckcrtdp = g_dept 
      LET g_xcck_d[l_ac].xcckcrtdt = cl_get_current()
      LET g_xcck_d[l_ac].xcckmodid = g_user
      LET g_xcck_d[l_ac].xcckmoddt = cl_get_current()
 
 
  
            #一般欄位預設值
                  LET g_xcck_d[l_ac].qty = "0"
      LET g_xcck_d[l_ac].amt = "0"
 
            
            #add-point:modify段before備份 name="input.body.before_insert.before_bak"
            
            #end add-point
            LET g_xcck_d_t.* = g_xcck_d[l_ac].*     #新輸入資料
            LET g_xcck_d_o.* = g_xcck_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axcq531_set_entry_b(l_cmd)
            #add-point:set_entry_b後 name="input.body.before_insert.set_entry_b"
            
            #end add-point
            CALL axcq531_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xcck_d[li_reproduce_target].* = g_xcck_d[li_reproduce].*
 
               LET g_xcck_d[g_xcck_d.getLength()].xcck002 = NULL
               LET g_xcck_d[g_xcck_d.getLength()].xcck006 = NULL
               LET g_xcck_d[g_xcck_d.getLength()].xcck007 = NULL
               LET g_xcck_d[g_xcck_d.getLength()].xcck008 = NULL
               LET g_xcck_d[g_xcck_d.getLength()].xcck009 = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xcck_t 
             WHERE xcckent = g_enterprise AND xcckld = g_xcck_m.xcckld
               AND xcck001 = g_xcck_m.xcck001
               AND xcck003 = g_xcck_m.xcck003
               AND xcck004 = g_xcck_m.xcck004
               AND xcck005 = g_xcck_m.xcck005
 
               AND xcck002 = g_xcck_d[l_ac].xcck002
               AND xcck006 = g_xcck_d[l_ac].xcck006
               AND xcck007 = g_xcck_d[l_ac].xcck007
               AND xcck008 = g_xcck_d[l_ac].xcck008
               AND xcck009 = g_xcck_d[l_ac].xcck009
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
               INSERT INTO xcck_t
                           (xcckent,
                            xcckcomp,xcck004,xcck005,xcck001,xcckld,xcck003,
                            xcck002,xcck006,xcck007,xcck008,xcck009
                            ,xcck010,xcck011,xcck017,xcck020,xcck055,xcck013,xcck201,xcck202,xcck301,xcck302,xcckownid,xcckowndp,xcckcrtid,xcckcrtdp,xcckcrtdt,xcckmodid,xcckmoddt) 
                     VALUES(g_enterprise,
                            g_xcck_m.xcckcomp,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck_m.xcck001,g_xcck_m.xcckld,g_xcck_m.xcck003,
                            g_xcck_d[l_ac].xcck002,g_xcck_d[l_ac].xcck006,g_xcck_d[l_ac].xcck007,g_xcck_d[l_ac].xcck008, 
                                g_xcck_d[l_ac].xcck009
                            ,g_xcck_d[l_ac].xcck010,g_xcck_d[l_ac].xcck011,g_xcck_d[l_ac].xcck017,g_xcck_d[l_ac].xcck020, 
                                g_xcck_d[l_ac].xcck055,g_xcck_d[l_ac].xcck013,g_xcck_d[l_ac].xcck201, 
                                g_xcck_d[l_ac].xcck202,g_xcck_d[l_ac].xcck301,g_xcck_d[l_ac].xcck302, 
                                g_xcck_d[l_ac].xcckownid,g_xcck_d[l_ac].xcckowndp,g_xcck_d[l_ac].xcckcrtid, 
                                g_xcck_d[l_ac].xcckcrtdp,g_xcck_d[l_ac].xcckcrtdt,g_xcck_d[l_ac].xcckmodid, 
                                g_xcck_d[l_ac].xcckmoddt)
               #add-point:單身新增中 name="input.body.m_insert"
               
               #end add-point
               LET p_cmd = 'u'
               LET g_master_insert = TRUE
            ELSE    
               INITIALIZE g_xcck_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcck_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後 name="input.body.after_insert"
            
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               IF axcq531_before_delete() THEN 
                  
 
 
                  #取得該筆資料key值
                  INITIALIZE gs_keys TO NULL
                  LET gs_keys[01] = g_xcck_m.xcckld
                  LET gs_keys[gs_keys.getLength()+1] = g_xcck_m.xcck001
                  LET gs_keys[gs_keys.getLength()+1] = g_xcck_m.xcck003
                  LET gs_keys[gs_keys.getLength()+1] = g_xcck_m.xcck004
                  LET gs_keys[gs_keys.getLength()+1] = g_xcck_m.xcck005
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xcck_d_t.xcck002
                  LET gs_keys[gs_keys.getLength()+1] = g_xcck_d_t.xcck006
                  LET gs_keys[gs_keys.getLength()+1] = g_xcck_d_t.xcck007
                  LET gs_keys[gs_keys.getLength()+1] = g_xcck_d_t.xcck008
                  LET gs_keys[gs_keys.getLength()+1] = g_xcck_d_t.xcck009
 
 
                  #刪除下層單身
                  IF NOT axcq531_key_delete_b(gs_keys,'xcck_t') THEN
                     CALL s_transaction_end('N','0')
                     CLOSE axcq531_bcl
                     CANCEL DELETE
                  END IF
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axcq531_bcl
               LET l_count = g_xcck_d.getLength()
            END IF 
            
            #add-point:單身刪除後 name="input.body.a_delete"
            
            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE  name="input.body.after_delete"
               
               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_xcck_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glcc002
            
            #add-point:AFTER FIELD glcc002 name="input.a.page1.glcc002"
            IF NOT cl_null(g_xcck_d[l_ac].glcc002) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcck_d[l_ac].glcc002
               LET g_chkparam.arg2 = '參數2'
               #160318-00025#9--add--str
               LET g_errshow = TRUE 
               LET g_chkparam.err_str[1] = "agl-00012:sub-01302|agli020|",cl_get_progname("agli020",g_lang,"2"),"|:EXEPROGagli020"
               #160318-00025#9--add--end    
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_glac002_3") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF


            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glcc002
            #add-point:BEFORE FIELD glcc002 name="input.b.page1.glcc002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glcc002
            #add-point:ON CHANGE glcc002 name="input.g.page1.glcc002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck010
            
            #add-point:AFTER FIELD xcck010 name="input.a.page1.xcck010"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck010
            #add-point:BEFORE FIELD xcck010 name="input.b.page1.xcck010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck010
            #add-point:ON CHANGE xcck010 name="input.g.page1.xcck010"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck002
            
            #add-point:AFTER FIELD xcck002 name="input.a.page1.xcck002"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_xcck_m.xcckld IS NOT NULL AND g_xcck_m.xcck001 IS NOT NULL AND g_xcck_m.xcck003 IS NOT NULL AND g_xcck_m.xcck004 IS NOT NULL AND g_xcck_m.xcck005 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck002 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck006 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck007 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck008 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck009 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcck_m.xcckld != g_xcckld_t OR g_xcck_m.xcck001 != g_xcck001_t OR g_xcck_m.xcck003 != g_xcck003_t OR g_xcck_m.xcck004 != g_xcck004_t OR g_xcck_m.xcck005 != g_xcck005_t OR g_xcck_d[g_detail_idx].xcck002 != g_xcck_d_t.xcck002 OR g_xcck_d[g_detail_idx].xcck006 != g_xcck_d_t.xcck006 OR g_xcck_d[g_detail_idx].xcck007 != g_xcck_d_t.xcck007 OR g_xcck_d[g_detail_idx].xcck008 != g_xcck_d_t.xcck008 OR g_xcck_d[g_detail_idx].xcck009 != g_xcck_d_t.xcck009)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcck_t WHERE "||"xcckent = '" ||g_enterprise|| "' AND "||"xcckld = '"||g_xcck_m.xcckld ||"' AND "|| "xcck001 = '"||g_xcck_m.xcck001 ||"' AND "|| "xcck003 = '"||g_xcck_m.xcck003 ||"' AND "|| "xcck004 = '"||g_xcck_m.xcck004 ||"' AND "|| "xcck005 = '"||g_xcck_m.xcck005 ||"' AND "|| "xcck002 = '"||g_xcck_d[g_detail_idx].xcck002 ||"' AND "|| "xcck006 = '"||g_xcck_d[g_detail_idx].xcck006 ||"' AND "|| "xcck007 = '"||g_xcck_d[g_detail_idx].xcck007 ||"' AND "|| "xcck008 = '"||g_xcck_d[g_detail_idx].xcck008 ||"' AND "|| "xcck009 = '"||g_xcck_d[g_detail_idx].xcck009 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck002
            #add-point:BEFORE FIELD xcck002 name="input.b.page1.xcck002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck002
            #add-point:ON CHANGE xcck002 name="input.g.page1.xcck002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck011
            #add-point:BEFORE FIELD xcck011 name="input.b.page1.xcck011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck011
            
            #add-point:AFTER FIELD xcck011 name="input.a.page1.xcck011"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck011
            #add-point:ON CHANGE xcck011 name="input.g.page1.xcck011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck017
            #add-point:BEFORE FIELD xcck017 name="input.b.page1.xcck017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck017
            
            #add-point:AFTER FIELD xcck017 name="input.a.page1.xcck017"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck017
            #add-point:ON CHANGE xcck017 name="input.g.page1.xcck017"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcbb005
            #add-point:BEFORE FIELD xcbb005 name="input.b.page1.xcbb005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcbb005
            
            #add-point:AFTER FIELD xcbb005 name="input.a.page1.xcbb005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcbb005
            #add-point:ON CHANGE xcbb005 name="input.g.page1.xcbb005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck020
            #add-point:BEFORE FIELD xcck020 name="input.b.page1.xcck020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck020
            
            #add-point:AFTER FIELD xcck020 name="input.a.page1.xcck020"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck020
            #add-point:ON CHANGE xcck020 name="input.g.page1.xcck020"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck055
            #add-point:BEFORE FIELD xcck055 name="input.b.page1.xcck055"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck055
            
            #add-point:AFTER FIELD xcck055 name="input.a.page1.xcck055"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck055
            #add-point:ON CHANGE xcck055 name="input.g.page1.xcck055"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck006
            #add-point:BEFORE FIELD xcck006 name="input.b.page1.xcck006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck006
            
            #add-point:AFTER FIELD xcck006 name="input.a.page1.xcck006"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_xcck_m.xcckld IS NOT NULL AND g_xcck_m.xcck001 IS NOT NULL AND g_xcck_m.xcck003 IS NOT NULL AND g_xcck_m.xcck004 IS NOT NULL AND g_xcck_m.xcck005 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck002 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck006 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck007 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck008 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck009 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcck_m.xcckld != g_xcckld_t OR g_xcck_m.xcck001 != g_xcck001_t OR g_xcck_m.xcck003 != g_xcck003_t OR g_xcck_m.xcck004 != g_xcck004_t OR g_xcck_m.xcck005 != g_xcck005_t OR g_xcck_d[g_detail_idx].xcck002 != g_xcck_d_t.xcck002 OR g_xcck_d[g_detail_idx].xcck006 != g_xcck_d_t.xcck006 OR g_xcck_d[g_detail_idx].xcck007 != g_xcck_d_t.xcck007 OR g_xcck_d[g_detail_idx].xcck008 != g_xcck_d_t.xcck008 OR g_xcck_d[g_detail_idx].xcck009 != g_xcck_d_t.xcck009)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcck_t WHERE "||"xcckent = '" ||g_enterprise|| "' AND "||"xcckld = '"||g_xcck_m.xcckld ||"' AND "|| "xcck001 = '"||g_xcck_m.xcck001 ||"' AND "|| "xcck003 = '"||g_xcck_m.xcck003 ||"' AND "|| "xcck004 = '"||g_xcck_m.xcck004 ||"' AND "|| "xcck005 = '"||g_xcck_m.xcck005 ||"' AND "|| "xcck002 = '"||g_xcck_d[g_detail_idx].xcck002 ||"' AND "|| "xcck006 = '"||g_xcck_d[g_detail_idx].xcck006 ||"' AND "|| "xcck007 = '"||g_xcck_d[g_detail_idx].xcck007 ||"' AND "|| "xcck008 = '"||g_xcck_d[g_detail_idx].xcck008 ||"' AND "|| "xcck009 = '"||g_xcck_d[g_detail_idx].xcck009 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck006
            #add-point:ON CHANGE xcck006 name="input.g.page1.xcck006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck007
            #add-point:BEFORE FIELD xcck007 name="input.b.page1.xcck007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck007
            
            #add-point:AFTER FIELD xcck007 name="input.a.page1.xcck007"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_xcck_m.xcckld IS NOT NULL AND g_xcck_m.xcck001 IS NOT NULL AND g_xcck_m.xcck003 IS NOT NULL AND g_xcck_m.xcck004 IS NOT NULL AND g_xcck_m.xcck005 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck002 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck006 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck007 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck008 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck009 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcck_m.xcckld != g_xcckld_t OR g_xcck_m.xcck001 != g_xcck001_t OR g_xcck_m.xcck003 != g_xcck003_t OR g_xcck_m.xcck004 != g_xcck004_t OR g_xcck_m.xcck005 != g_xcck005_t OR g_xcck_d[g_detail_idx].xcck002 != g_xcck_d_t.xcck002 OR g_xcck_d[g_detail_idx].xcck006 != g_xcck_d_t.xcck006 OR g_xcck_d[g_detail_idx].xcck007 != g_xcck_d_t.xcck007 OR g_xcck_d[g_detail_idx].xcck008 != g_xcck_d_t.xcck008 OR g_xcck_d[g_detail_idx].xcck009 != g_xcck_d_t.xcck009)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcck_t WHERE "||"xcckent = '" ||g_enterprise|| "' AND "||"xcckld = '"||g_xcck_m.xcckld ||"' AND "|| "xcck001 = '"||g_xcck_m.xcck001 ||"' AND "|| "xcck003 = '"||g_xcck_m.xcck003 ||"' AND "|| "xcck004 = '"||g_xcck_m.xcck004 ||"' AND "|| "xcck005 = '"||g_xcck_m.xcck005 ||"' AND "|| "xcck002 = '"||g_xcck_d[g_detail_idx].xcck002 ||"' AND "|| "xcck006 = '"||g_xcck_d[g_detail_idx].xcck006 ||"' AND "|| "xcck007 = '"||g_xcck_d[g_detail_idx].xcck007 ||"' AND "|| "xcck008 = '"||g_xcck_d[g_detail_idx].xcck008 ||"' AND "|| "xcck009 = '"||g_xcck_d[g_detail_idx].xcck009 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck007
            #add-point:ON CHANGE xcck007 name="input.g.page1.xcck007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck008
            #add-point:BEFORE FIELD xcck008 name="input.b.page1.xcck008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck008
            
            #add-point:AFTER FIELD xcck008 name="input.a.page1.xcck008"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_xcck_m.xcckld IS NOT NULL AND g_xcck_m.xcck001 IS NOT NULL AND g_xcck_m.xcck003 IS NOT NULL AND g_xcck_m.xcck004 IS NOT NULL AND g_xcck_m.xcck005 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck002 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck006 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck007 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck008 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck009 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcck_m.xcckld != g_xcckld_t OR g_xcck_m.xcck001 != g_xcck001_t OR g_xcck_m.xcck003 != g_xcck003_t OR g_xcck_m.xcck004 != g_xcck004_t OR g_xcck_m.xcck005 != g_xcck005_t OR g_xcck_d[g_detail_idx].xcck002 != g_xcck_d_t.xcck002 OR g_xcck_d[g_detail_idx].xcck006 != g_xcck_d_t.xcck006 OR g_xcck_d[g_detail_idx].xcck007 != g_xcck_d_t.xcck007 OR g_xcck_d[g_detail_idx].xcck008 != g_xcck_d_t.xcck008 OR g_xcck_d[g_detail_idx].xcck009 != g_xcck_d_t.xcck009)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcck_t WHERE "||"xcckent = '" ||g_enterprise|| "' AND "||"xcckld = '"||g_xcck_m.xcckld ||"' AND "|| "xcck001 = '"||g_xcck_m.xcck001 ||"' AND "|| "xcck003 = '"||g_xcck_m.xcck003 ||"' AND "|| "xcck004 = '"||g_xcck_m.xcck004 ||"' AND "|| "xcck005 = '"||g_xcck_m.xcck005 ||"' AND "|| "xcck002 = '"||g_xcck_d[g_detail_idx].xcck002 ||"' AND "|| "xcck006 = '"||g_xcck_d[g_detail_idx].xcck006 ||"' AND "|| "xcck007 = '"||g_xcck_d[g_detail_idx].xcck007 ||"' AND "|| "xcck008 = '"||g_xcck_d[g_detail_idx].xcck008 ||"' AND "|| "xcck009 = '"||g_xcck_d[g_detail_idx].xcck009 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck008
            #add-point:ON CHANGE xcck008 name="input.g.page1.xcck008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck013
            #add-point:BEFORE FIELD xcck013 name="input.b.page1.xcck013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck013
            
            #add-point:AFTER FIELD xcck013 name="input.a.page1.xcck013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck013
            #add-point:ON CHANGE xcck013 name="input.g.page1.xcck013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xceb102
            #add-point:BEFORE FIELD xceb102 name="input.b.page1.xceb102"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xceb102
            
            #add-point:AFTER FIELD xceb102 name="input.a.page1.xceb102"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xceb102
            #add-point:ON CHANGE xceb102 name="input.g.page1.xceb102"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcea101
            #add-point:BEFORE FIELD xcea101 name="input.b.page1.xcea101"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcea101
            
            #add-point:AFTER FIELD xcea101 name="input.a.page1.xcea101"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcea101
            #add-point:ON CHANGE xcea101 name="input.g.page1.xcea101"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcea102
            #add-point:BEFORE FIELD xcea102 name="input.b.page1.xcea102"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcea102
            
            #add-point:AFTER FIELD xcea102 name="input.a.page1.xcea102"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcea102
            #add-point:ON CHANGE xcea102 name="input.g.page1.xcea102"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck201
            #add-point:BEFORE FIELD xcck201 name="input.b.page1.xcck201"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck201
            
            #add-point:AFTER FIELD xcck201 name="input.a.page1.xcck201"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck201
            #add-point:ON CHANGE xcck201 name="input.g.page1.xcck201"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck202
            #add-point:BEFORE FIELD xcck202 name="input.b.page1.xcck202"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck202
            
            #add-point:AFTER FIELD xcck202 name="input.a.page1.xcck202"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck202
            #add-point:ON CHANGE xcck202 name="input.g.page1.xcck202"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck301
            #add-point:BEFORE FIELD xcck301 name="input.b.page1.xcck301"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck301
            
            #add-point:AFTER FIELD xcck301 name="input.a.page1.xcck301"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck301
            #add-point:ON CHANGE xcck301 name="input.g.page1.xcck301"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck302
            #add-point:BEFORE FIELD xcck302 name="input.b.page1.xcck302"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck302
            
            #add-point:AFTER FIELD xcck302 name="input.a.page1.xcck302"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck302
            #add-point:ON CHANGE xcck302 name="input.g.page1.xcck302"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dc
            #add-point:BEFORE FIELD dc name="input.b.page1.dc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dc
            
            #add-point:AFTER FIELD dc name="input.a.page1.dc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dc
            #add-point:ON CHANGE dc name="input.g.page1.dc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD qty
            #add-point:BEFORE FIELD qty name="input.b.page1.qty"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD qty
            
            #add-point:AFTER FIELD qty name="input.a.page1.qty"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE qty
            #add-point:ON CHANGE qty name="input.g.page1.qty"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt
            #add-point:BEFORE FIELD amt name="input.b.page1.amt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt
            
            #add-point:AFTER FIELD amt name="input.a.page1.amt"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt
            #add-point:ON CHANGE amt name="input.g.page1.amt"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcck009
            #add-point:BEFORE FIELD xcck009 name="input.b.page1.xcck009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcck009
            
            #add-point:AFTER FIELD xcck009 name="input.a.page1.xcck009"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_xcck_m.xcckld IS NOT NULL AND g_xcck_m.xcck001 IS NOT NULL AND g_xcck_m.xcck003 IS NOT NULL AND g_xcck_m.xcck004 IS NOT NULL AND g_xcck_m.xcck005 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck002 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck006 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck007 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck008 IS NOT NULL AND g_xcck_d[g_detail_idx].xcck009 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcck_m.xcckld != g_xcckld_t OR g_xcck_m.xcck001 != g_xcck001_t OR g_xcck_m.xcck003 != g_xcck003_t OR g_xcck_m.xcck004 != g_xcck004_t OR g_xcck_m.xcck005 != g_xcck005_t OR g_xcck_d[g_detail_idx].xcck002 != g_xcck_d_t.xcck002 OR g_xcck_d[g_detail_idx].xcck006 != g_xcck_d_t.xcck006 OR g_xcck_d[g_detail_idx].xcck007 != g_xcck_d_t.xcck007 OR g_xcck_d[g_detail_idx].xcck008 != g_xcck_d_t.xcck008 OR g_xcck_d[g_detail_idx].xcck009 != g_xcck_d_t.xcck009)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcck_t WHERE "||"xcckent = '" ||g_enterprise|| "' AND "||"xcckld = '"||g_xcck_m.xcckld ||"' AND "|| "xcck001 = '"||g_xcck_m.xcck001 ||"' AND "|| "xcck003 = '"||g_xcck_m.xcck003 ||"' AND "|| "xcck004 = '"||g_xcck_m.xcck004 ||"' AND "|| "xcck005 = '"||g_xcck_m.xcck005 ||"' AND "|| "xcck002 = '"||g_xcck_d[g_detail_idx].xcck002 ||"' AND "|| "xcck006 = '"||g_xcck_d[g_detail_idx].xcck006 ||"' AND "|| "xcck007 = '"||g_xcck_d[g_detail_idx].xcck007 ||"' AND "|| "xcck008 = '"||g_xcck_d[g_detail_idx].xcck008 ||"' AND "|| "xcck009 = '"||g_xcck_d[g_detail_idx].xcck009 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcck009
            #add-point:ON CHANGE xcck009 name="input.g.page1.xcck009"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.glcc002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glcc002
            #add-point:ON ACTION controlp INFIELD glcc002 name="input.c.page1.glcc002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcck010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck010
            #add-point:ON ACTION controlp INFIELD xcck010 name="input.c.page1.xcck010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcck002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck002
            #add-point:ON ACTION controlp INFIELD xcck002 name="input.c.page1.xcck002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcck011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck011
            #add-point:ON ACTION controlp INFIELD xcck011 name="input.c.page1.xcck011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcck017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck017
            #add-point:ON ACTION controlp INFIELD xcck017 name="input.c.page1.xcck017"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcbb005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcbb005
            #add-point:ON ACTION controlp INFIELD xcbb005 name="input.c.page1.xcbb005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcck020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck020
            #add-point:ON ACTION controlp INFIELD xcck020 name="input.c.page1.xcck020"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcck055
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck055
            #add-point:ON ACTION controlp INFIELD xcck055 name="input.c.page1.xcck055"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcck006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck006
            #add-point:ON ACTION controlp INFIELD xcck006 name="input.c.page1.xcck006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcck007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck007
            #add-point:ON ACTION controlp INFIELD xcck007 name="input.c.page1.xcck007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcck008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck008
            #add-point:ON ACTION controlp INFIELD xcck008 name="input.c.page1.xcck008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcck013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck013
            #add-point:ON ACTION controlp INFIELD xcck013 name="input.c.page1.xcck013"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xceb102
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xceb102
            #add-point:ON ACTION controlp INFIELD xceb102 name="input.c.page1.xceb102"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcea101
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcea101
            #add-point:ON ACTION controlp INFIELD xcea101 name="input.c.page1.xcea101"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcea102
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcea102
            #add-point:ON ACTION controlp INFIELD xcea102 name="input.c.page1.xcea102"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcck201
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck201
            #add-point:ON ACTION controlp INFIELD xcck201 name="input.c.page1.xcck201"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcck202
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck202
            #add-point:ON ACTION controlp INFIELD xcck202 name="input.c.page1.xcck202"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcck301
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck301
            #add-point:ON ACTION controlp INFIELD xcck301 name="input.c.page1.xcck301"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcck302
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck302
            #add-point:ON ACTION controlp INFIELD xcck302 name="input.c.page1.xcck302"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.dc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dc
            #add-point:ON ACTION controlp INFIELD dc name="input.c.page1.dc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.qty
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD qty
            #add-point:ON ACTION controlp INFIELD qty name="input.c.page1.qty"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt
            #add-point:ON ACTION controlp INFIELD amt name="input.c.page1.amt"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcck009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcck009
            #add-point:ON ACTION controlp INFIELD xcck009 name="input.c.page1.xcck009"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xcck_d[l_ac].* = g_xcck_d_t.*
               CLOSE axcq531_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xcck_d[l_ac].xcck002 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xcck_d[l_ac].* = g_xcck_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_xcck_d[l_ac].xcckmodid = g_user 
LET g_xcck_d[l_ac].xcckmoddt = cl_get_current()
LET g_xcck_d[l_ac].xcckmodid_desc = cl_get_username(g_xcck_d[l_ac].xcckmodid)
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
         
               #將遮罩欄位還原
               CALL axcq531_xcck_t_mask_restore('restore_mask_o')
         
               UPDATE xcck_t SET (xcckld,xcck001,xcck003,xcck004,xcck005,xcck010,xcck002,xcck011,xcck017, 
                   xcck020,xcck055,xcck006,xcck007,xcck008,xcck013,xcck201,xcck202,xcck301,xcck302,xcck009, 
                   xcckownid,xcckowndp,xcckcrtid,xcckcrtdp,xcckcrtdt,xcckmodid,xcckmoddt) = (g_xcck_m.xcckld, 
                   g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck_d[l_ac].xcck010, 
                   g_xcck_d[l_ac].xcck002,g_xcck_d[l_ac].xcck011,g_xcck_d[l_ac].xcck017,g_xcck_d[l_ac].xcck020, 
                   g_xcck_d[l_ac].xcck055,g_xcck_d[l_ac].xcck006,g_xcck_d[l_ac].xcck007,g_xcck_d[l_ac].xcck008, 
                   g_xcck_d[l_ac].xcck013,g_xcck_d[l_ac].xcck201,g_xcck_d[l_ac].xcck202,g_xcck_d[l_ac].xcck301, 
                   g_xcck_d[l_ac].xcck302,g_xcck_d[l_ac].xcck009,g_xcck_d[l_ac].xcckownid,g_xcck_d[l_ac].xcckowndp, 
                   g_xcck_d[l_ac].xcckcrtid,g_xcck_d[l_ac].xcckcrtdp,g_xcck_d[l_ac].xcckcrtdt,g_xcck_d[l_ac].xcckmodid, 
                   g_xcck_d[l_ac].xcckmoddt)
                WHERE xcckent = g_enterprise AND xcckld = g_xcck_m.xcckld 
                 AND xcck001 = g_xcck_m.xcck001 
                 AND xcck003 = g_xcck_m.xcck003 
                 AND xcck004 = g_xcck_m.xcck004 
                 AND xcck005 = g_xcck_m.xcck005 
 
                 AND xcck002 = g_xcck_d_t.xcck002 #項次   
                 AND xcck006 = g_xcck_d_t.xcck006  
                 AND xcck007 = g_xcck_d_t.xcck007  
                 AND xcck008 = g_xcck_d_t.xcck008  
                 AND xcck009 = g_xcck_d_t.xcck009  
 
                 
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcck_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "xcck_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcck_m.xcckld
               LET gs_keys_bak[1] = g_xcckld_t
               LET gs_keys[2] = g_xcck_m.xcck001
               LET gs_keys_bak[2] = g_xcck001_t
               LET gs_keys[3] = g_xcck_m.xcck003
               LET gs_keys_bak[3] = g_xcck003_t
               LET gs_keys[4] = g_xcck_m.xcck004
               LET gs_keys_bak[4] = g_xcck004_t
               LET gs_keys[5] = g_xcck_m.xcck005
               LET gs_keys_bak[5] = g_xcck005_t
               LET gs_keys[6] = g_xcck_d[g_detail_idx].xcck002
               LET gs_keys_bak[6] = g_xcck_d_t.xcck002
               LET gs_keys[7] = g_xcck_d[g_detail_idx].xcck006
               LET gs_keys_bak[7] = g_xcck_d_t.xcck006
               LET gs_keys[8] = g_xcck_d[g_detail_idx].xcck007
               LET gs_keys_bak[8] = g_xcck_d_t.xcck007
               LET gs_keys[9] = g_xcck_d[g_detail_idx].xcck008
               LET gs_keys_bak[9] = g_xcck_d_t.xcck008
               LET gs_keys[10] = g_xcck_d[g_detail_idx].xcck009
               LET gs_keys_bak[10] = g_xcck_d_t.xcck009
               CALL axcq531_update_b('xcck_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     #修改歷程記錄(單身修改)
                     LET g_log1 = util.JSON.stringify(g_xcck_m),util.JSON.stringify(g_xcck_d_t)
                     LET g_log2 = util.JSON.stringify(g_xcck_m),util.JSON.stringify(g_xcck_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axcq531_xcck_t_mask_restore('restore_mask_n')
               
               #若Key欄位有變動
               LET ls_keys[01] = g_xcck_m.xcckld
               LET ls_keys[ls_keys.getLength()+1] = g_xcck_m.xcck001
               LET ls_keys[ls_keys.getLength()+1] = g_xcck_m.xcck003
               LET ls_keys[ls_keys.getLength()+1] = g_xcck_m.xcck004
               LET ls_keys[ls_keys.getLength()+1] = g_xcck_m.xcck005
 
               LET ls_keys[ls_keys.getLength()+1] = g_xcck_d_t.xcck002
               LET ls_keys[ls_keys.getLength()+1] = g_xcck_d_t.xcck006
               LET ls_keys[ls_keys.getLength()+1] = g_xcck_d_t.xcck007
               LET ls_keys[ls_keys.getLength()+1] = g_xcck_d_t.xcck008
               LET ls_keys[ls_keys.getLength()+1] = g_xcck_d_t.xcck009
 
               CALL axcq531_key_update_b(ls_keys)
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
            END IF
 
         AFTER ROW
            #add-point:input段after row name="input.body.after_row"
            
            #end add-point  
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               CLOSE axcq531_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xcck_d[l_ac].* = g_xcck_d_t.*
               END IF
               EXIT DIALOG 
            END IF
 
            CLOSE axcq531_bcl
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xcck_d.getLength() = 0 THEN
               NEXT FIELD xcck002
            END IF
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point    
            
         ON ACTION controlo   
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xcck_d[li_reproduce_target].* = g_xcck_d[li_reproduce].*
 
               LET g_xcck_d[li_reproduce_target].xcck002 = NULL
               LET g_xcck_d[li_reproduce_target].xcck006 = NULL
               LET g_xcck_d[li_reproduce_target].xcck007 = NULL
               LET g_xcck_d[li_reproduce_target].xcck008 = NULL
               LET g_xcck_d[li_reproduce_target].xcck009 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_xcck_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xcck_d.getLength()+1
            END IF
            
      END INPUT
 
 
      
 
      
 
      
 
    
      #add-point:input段more_input name="input.more_inputarray"
      
      #end add-point    
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()    
         #add-point:input段before_dialog name="input.before_dialog"
         
         #end add-point 
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xcckld
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD glcc002
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #將畫面指標同步到當下指定的位置上
   CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
 
 
   
   #add-point:input段after_input name="input.after_input"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axcq531_show()
   #add-point:show段define name="show.define_customerization"
   
   #end add-point
   #add-point:show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE l_glaa001 LIKE glaa_t.glaa001
   DEFINE l_glaa016 LIKE glaa_t.glaa016
   DEFINE l_glaa020 LIKE glaa_t.glaa020
   #end add-point
   
   #add-point:Function前置處理  name="show.before"
   IF g_bgjob = 'Y' THEN
      LET g_bfill = 'Y'
      LET g_wc2 = ' 1=1 '
   END IF
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL axcq531_b_fill(g_wc2) #第一階單身填充
      CALL axcq531_b_fill2('0')  #第二階單身填充
   END IF
   
   
 
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL axcq531_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   DISPLAY BY NAME g_xcck_m.xcckcomp,g_xcck_m.xcckcomp_desc,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck_m.xcck001, 
       g_xcck_m.xcck001_desc,g_xcck_m.a,g_xcck_m.xcckld,g_xcck_m.xcckld_desc,g_xcck_m.xcck004_1,g_xcck_m.xcck005_1, 
       g_xcck_m.xcck003,g_xcck_m.xcck003_desc,g_xcck_m.b
 
   CALL axcq531_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後 name="show.after"
   SELECT glaa001,glaa016,glaa020 INTO l_glaa001,l_glaa016,l_glaa020
     FROM glaa_t
    WHERE glaaent = g_enterprise
      AND glaald  = g_xcck_m.xcckld

   IF cl_get_para(g_enterprise,g_xcck_m.xcckcomp,'S-FIN-6001') = 'Y' THEN   #成本域
      CALL cl_set_comp_visible("xcck002,xcck002_desc",TRUE)
   ELSE 
      CALL cl_set_comp_visible("xcck002,xcck002_desc",FALSE)
   END IF
   IF cl_get_para(g_enterprise,g_xcck_m.xcckcomp,'S-FIN-6013') = 'Y' THEN   #特性
      CALL cl_set_comp_visible("xcck011",TRUE)
   ELSE 
      CALL cl_set_comp_visible("xcck011",FALSE)
   END IF
   #批次成本 啟用批號
   IF g_xcat005 = '3' THEN
     CALL cl_set_comp_visible("xcck017",TRUE)
   ELSE
      CALL cl_set_comp_visible("xcck017",FALSE)
   END IF
   IF g_b = 'Y' THEN
      CALL cl_set_comp_visible("xcck020,xcck055,xcck006,xcck007,xcck008",TRUE)
   ELSE
      CALL cl_set_comp_visible("xcck020,xcck055,xcck006,xcck007,xcck008",FALSE)
   END IF

   DISPLAY g_a TO a
   DISPLAY g_b TO b
   DISPLAY g_yy1 TO xcck004
   DISPLAY g_mm1 TO xcck005
   DISPLAY g_yy2 TO xcck004_1
   DISPLAY g_mm2 TO xcck005_1
   CASE g_xcck_m.xcck001
      WHEN '1'
        INITIALIZE g_ref_fields TO NULL
        LET g_ref_fields[1] = l_glaa001
        CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
        LET g_xcck_m.xcck001_desc = '', g_rtn_fields[1] , ''
      WHEN '2'
        INITIALIZE g_ref_fields TO NULL
        LET g_ref_fields[1] = l_glaa016
        CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
        LET g_xcck_m.xcck001_desc = '', g_rtn_fields[1] , ''
      WHEN '3'
        INITIALIZE g_ref_fields TO NULL
        LET g_ref_fields[1] = l_glaa020
        CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
        LET g_xcck_m.xcck001_desc = '', g_rtn_fields[1] , ''
   END CASE
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.ref_show" >}
#+ 帶出reference資料
PRIVATE FUNCTION axcq531_ref_show()
   #add-point:ref_show段define name="ref_show.define_customerization"
   
   #end add-point 
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ref_show.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ref_show.pre_function"
   
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference name="ref_show.head.reference"
   
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xcck_d.getLength()
      #add-point:ref_show段d_reference name="ref_show.body.reference"
      
      #end add-point
   END FOR
   
 
   
   #add-point:ref_show段自訂 name="ref_show.other_reference"
   
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION
 
{</section>}
 
{<section id="axcq531.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axcq531_reproduce()
   #add-point:reproduce段define name="reproduce.define_customerization"
   
   #end add-point
   DEFINE l_newno     LIKE xcck_t.xcckld 
   DEFINE l_oldno     LIKE xcck_t.xcckld 
   DEFINE l_newno02     LIKE xcck_t.xcck001 
   DEFINE l_oldno02     LIKE xcck_t.xcck001 
   DEFINE l_newno03     LIKE xcck_t.xcck003 
   DEFINE l_oldno03     LIKE xcck_t.xcck003 
   DEFINE l_newno04     LIKE xcck_t.xcck004 
   DEFINE l_oldno04     LIKE xcck_t.xcck004 
   DEFINE l_newno05     LIKE xcck_t.xcck005 
   DEFINE l_oldno05     LIKE xcck_t.xcck005 
 
   DEFINE l_master    RECORD LIKE xcck_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE xcck_t.* #此變數樣板目前無使用
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_xcck_m.xcckld IS NULL
      OR g_xcck_m.xcck001 IS NULL
      OR g_xcck_m.xcck003 IS NULL
      OR g_xcck_m.xcck004 IS NULL
      OR g_xcck_m.xcck005 IS NULL
 
      THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_xcckld_t = g_xcck_m.xcckld
   LET g_xcck001_t = g_xcck_m.xcck001
   LET g_xcck003_t = g_xcck_m.xcck003
   LET g_xcck004_t = g_xcck_m.xcck004
   LET g_xcck005_t = g_xcck_m.xcck005
 
   
   LET g_xcck_m.xcckld = ""
   LET g_xcck_m.xcck001 = ""
   LET g_xcck_m.xcck003 = ""
   LET g_xcck_m.xcck004 = ""
   LET g_xcck_m.xcck005 = ""
 
   LET g_master_insert = FALSE
   CALL axcq531_set_entry('a')
   CALL axcq531_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #清空key欄位的desc
      LET g_xcck_m.xcck001_desc = ''
   DISPLAY BY NAME g_xcck_m.xcck001_desc
   LET g_xcck_m.xcckld_desc = ''
   DISPLAY BY NAME g_xcck_m.xcckld_desc
   LET g_xcck_m.xcck003_desc = ''
   DISPLAY BY NAME g_xcck_m.xcck003_desc
 
   
   CALL axcq531_input("r")
    
   IF INT_FLAG AND NOT g_master_insert THEN
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      INITIALIZE g_xcck_m.* TO NULL
      INITIALIZE g_xcck_d TO NULL
 
      CALL axcq531_show()
      LET INT_FLAG = 0
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN 
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq531_set_act_visible()
   CALL axcq531_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_xcckld_t = g_xcck_m.xcckld
   LET g_xcck001_t = g_xcck_m.xcck001
   LET g_xcck003_t = g_xcck_m.xcck003
   LET g_xcck004_t = g_xcck_m.xcck004
   LET g_xcck005_t = g_xcck_m.xcck005
 
   
   #組合新增資料的條件
   LET g_add_browse = " xcckent = " ||g_enterprise|| " AND",
                      " xcckld = '", g_xcck_m.xcckld, "' "
                      ," AND xcck001 = '", g_xcck_m.xcck001, "' "
                      ," AND xcck003 = '", g_xcck_m.xcck003, "' "
                      ," AND xcck004 = '", g_xcck_m.xcck004, "' "
                      ," AND xcck005 = '", g_xcck_m.xcck005, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axcq531_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   LET g_curr_diag = ui.DIALOG.getCurrent()
   CALL axcq531_idx_chk()
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   #功能已完成,通報訊息中心
   CALL axcq531_msgcentre_notify('reproduce')
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axcq531_detail_reproduce()
   #add-point:delete段define name="detail_reproduce.define_customerization"
   
   #end add-point 
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xcck_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axcq531_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xcck_t
    WHERE xcckent = g_enterprise AND xcckld = g_xcckld_t
    AND xcck001 = g_xcck001_t
    AND xcck003 = g_xcck003_t
    AND xcck004 = g_xcck004_t
    AND xcck005 = g_xcck005_t
 
       INTO TEMP axcq531_detail
   
   #將key修正為調整後   
   UPDATE axcq531_detail 
      #更新key欄位
      SET xcckld = g_xcck_m.xcckld
          , xcck001 = g_xcck_m.xcck001
          , xcck003 = g_xcck_m.xcck003
          , xcck004 = g_xcck_m.xcck004
          , xcck005 = g_xcck_m.xcck005
 
      #更新共用欄位
      #應用 a13 樣板自動產生(Version:4)
       , xcckownid = g_user 
       , xcckowndp = g_dept
       , xcckcrtid = g_user
       , xcckcrtdp = g_dept 
       , xcckcrtdt = ld_date
       , xcckmodid = g_user
       , xcckmoddt = ld_date
 
 
 
                                       
   #將資料塞回原table   
   INSERT INTO xcck_t SELECT * FROM axcq531_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axcq531_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xcckld_t = g_xcck_m.xcckld
   LET g_xcck001_t = g_xcck_m.xcck001
   LET g_xcck003_t = g_xcck_m.xcck003
   LET g_xcck004_t = g_xcck_m.xcck004
   LET g_xcck005_t = g_xcck_m.xcck005
 
   
   DROP TABLE axcq531_detail
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axcq531_delete()
   #add-point:delete段define name="delete.define_customerization"
   
   #end add-point
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_xcck_m.xcckld IS NULL
   OR g_xcck_m.xcck001 IS NULL
   OR g_xcck_m.xcck003 IS NULL
   OR g_xcck_m.xcck004 IS NULL
   OR g_xcck_m.xcck005 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   
 
   OPEN axcq531_cl USING g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005
   IF SQLCA.SQLCODE THEN   #(ver:49)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axcq531_cl:" 
      LET g_errparam.code   = SQLCA.SQLCODE   #(ver:49)
      LET g_errparam.popup  = TRUE 
      CLOSE axcq531_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axcq531_master_referesh USING g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck_m.xcck004, 
       g_xcck_m.xcck005 INTO g_xcck_m.xcckcomp,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck_m.xcck001,g_xcck_m.xcckld, 
       g_xcck_m.xcck003,g_xcck_m.xcckcomp_desc,g_xcck_m.xcckld_desc,g_xcck_m.xcck003_desc
   
   #遮罩相關處理
   LET g_xcck_m_mask_o.* =  g_xcck_m.*
   CALL axcq531_xcck_t_mask()
   LET g_xcck_m_mask_n.* =  g_xcck_m.*
   
   CALL axcq531_show()
 
   #單頭多語言資料備份
   
   
   IF cl_ask_del_master() THEN              #確認一下
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL axcq531_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
 
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM xcck_t WHERE xcckent = g_enterprise AND xcckld = g_xcck_m.xcckld
                                                               AND xcck001 = g_xcck_m.xcck001
                                                               AND xcck003 = g_xcck_m.xcck003
                                                               AND xcck004 = g_xcck_m.xcck004
                                                               AND xcck005 = g_xcck_m.xcck005
 
                                                               
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xcck_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
 
      
  
      #add-point:單身刪除後  name="delete.body.a_delete"
      
      #end add-point
      
 
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      #頭先不紀錄
      #IF NOT cl_log_modified_record('','') THEN 
      #   CLOSE axcq531_cl
      #   CALL s_transaction_end('N','0')
      #   RETURN 
      #END IF
      
      CLEAR FORM
      CALL g_xcck_d.clear() 
 
     
      CALL axcq531_ui_browser_refresh()  
      #CALL axcq531_ui_headershow()  
      #CALL axcq531_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axcq531_fetch('P')
      ELSE
         #LET g_wc = " 1=1"
         #LET g_wc2 = " 1=1"
         #CALL axcq531_browser_fill("F")
         CLEAR FORM
      END IF
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')   
   END IF
 
   CLOSE axcq531_cl
 
   #功能已完成,通報訊息中心
   CALL axcq531_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="axcq531.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axcq531_b_fill(p_wc2)
   #add-point:b_fill段define name="b_fill.define_customerization"
   
   #end add-point
   DEFINE p_wc2      STRING
   #add-point:b_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #先清空單身變數內容
   CALL g_xcck_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   CALL axcq531_b_fill_1(p_wc2)
   RETURN
   #end add-point
   
   LET g_sql = "SELECT  DISTINCT xcck010,xcck002,xcck011,xcck017,xcck020,xcck055,xcck006,xcck007,xcck008, 
       xcck013,xcck201,xcck202,xcck301,xcck302,xcck009,xcckownid,xcckowndp,xcckcrtid,xcckcrtdp,xcckcrtdt, 
       xcckmodid,xcckmoddt,t1.ooag011 ,t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011 FROM xcck_t", 
          
               "",
               
                              " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=xcckownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=xcckowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=xcckcrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=xcckcrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=xcckmodid  ",
 
               " WHERE xcckent= ? AND xcckld=? AND xcck001=? AND xcck003=? AND xcck004=? AND xcck005=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("xcck_t")
   END IF
   
   #add-point:b_fill段sql_after name="b_fill.sql_after"
   
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axcq531_fill_chk(1) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = g_sql, " ORDER BY xcck_t.xcck002,xcck_t.xcck006,xcck_t.xcck007,xcck_t.xcck008,xcck_t.xcck009"
         #add-point:b_fill段fill_before name="b_fill.fill_before"
         
         #end add-point
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axcq531_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axcq531_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005   #(ver:49)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck_m.xcck004, 
          g_xcck_m.xcck005 INTO g_xcck_d[l_ac].xcck010,g_xcck_d[l_ac].xcck002,g_xcck_d[l_ac].xcck011, 
          g_xcck_d[l_ac].xcck017,g_xcck_d[l_ac].xcck020,g_xcck_d[l_ac].xcck055,g_xcck_d[l_ac].xcck006, 
          g_xcck_d[l_ac].xcck007,g_xcck_d[l_ac].xcck008,g_xcck_d[l_ac].xcck013,g_xcck_d[l_ac].xcck201, 
          g_xcck_d[l_ac].xcck202,g_xcck_d[l_ac].xcck301,g_xcck_d[l_ac].xcck302,g_xcck_d[l_ac].xcck009, 
          g_xcck_d[l_ac].xcckownid,g_xcck_d[l_ac].xcckowndp,g_xcck_d[l_ac].xcckcrtid,g_xcck_d[l_ac].xcckcrtdp, 
          g_xcck_d[l_ac].xcckcrtdt,g_xcck_d[l_ac].xcckmodid,g_xcck_d[l_ac].xcckmoddt,g_xcck_d[l_ac].xcckownid_desc, 
          g_xcck_d[l_ac].xcckowndp_desc,g_xcck_d[l_ac].xcckcrtid_desc,g_xcck_d[l_ac].xcckcrtdp_desc, 
          g_xcck_d[l_ac].xcckmodid_desc   #(ver:49)
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充 name="b_fill.fill"
         
         #end add-point
      
         #帶出公用欄位reference值
         #應用 a12 樣板自動產生(Version:4)
 
 
 
         
 
        
         #add-point:單身資料抓取 name="bfill.foreach"
         
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF 
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         
      END FOREACH
 
            CALL g_xcck_d.deleteElement(g_xcck_d.getLength())
 
      
   END IF
   
   #add-point:b_fill段more name="b_fill.more"
   
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   #遮罩相關處理
   FOR l_ac = 1 TO g_xcck_d.getLength()
      LET g_xcck_d_mask_o[l_ac].* =  g_xcck_d[l_ac].*
      CALL axcq531_xcck_t_mask()
      LET g_xcck_d_mask_n[l_ac].* =  g_xcck_d[l_ac].*
   END FOR
   
 
 
   FREE axcq531_pb   
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axcq531_idx_chk()
   #add-point:idx_chk段define name="idx_chk.define_customerization"
   
   #end add-point
   #add-point:idx_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   #判定目前選擇的頁面
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      #確保當下指標的位置未超過上限
      IF g_detail_idx > g_xcck_d.getLength() THEN
         LET g_detail_idx = g_xcck_d.getLength()
      END IF
      #確保資料位置不小於1
      IF g_detail_idx = 0 AND g_xcck_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      #將筆數資料顯示到畫面上
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xcck_d.getLength() TO FORMONLY.cnt
      #將位置顯示到正確筆數上
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   END IF
    
   #同第一個page的做法進行其他頁面的處理
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axcq531_b_fill2(pi_idx)
   #add-point:b_fill2段define name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_xcck_d.getLength() <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.before_delete" >}
#+ 單身db資料刪除
PRIVATE FUNCTION axcq531_before_delete()
   #add-point:before_delete段define name="before_delete.define_customerization"
   
   #end add-point 
   #add-point:before_delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="before_delete.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="delete.body.b_single_delete"
   
   #end add-point
   
   DELETE FROM xcck_t
    WHERE xcckent = g_enterprise AND xcckld = g_xcck_m.xcckld AND
                              xcck001 = g_xcck_m.xcck001 AND
                              xcck003 = g_xcck_m.xcck003 AND
                              xcck004 = g_xcck_m.xcck004 AND
                              xcck005 = g_xcck_m.xcck005 AND
 
          xcck002 = g_xcck_d_t.xcck002
      AND xcck006 = g_xcck_d_t.xcck006
      AND xcck007 = g_xcck_d_t.xcck007
      AND xcck008 = g_xcck_d_t.xcck008
      AND xcck009 = g_xcck_d_t.xcck009
 
      
   #add-point:單筆刪除中 name="delete.body.m_single_delete"
   
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xcck_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後 name="delete.body.a_single_delete"
   
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
 
{</section>}
 
{<section id="axcq531.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axcq531_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define name="delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axcq531_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define name="insert_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axcq531_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define name="update_b.define_customerization"
   
   #end add-point 
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正其他單身key欄位
PRIVATE FUNCTION axcq531_key_update_b(ps_keys_bak)
   #add-point:update_b段define name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變, 若無改變則返回
   IF g_xcck_d[l_ac].xcck002 = g_xcck_d_t.xcck002 
      AND g_xcck_d[l_ac].xcck006 = g_xcck_d_t.xcck006 
      AND g_xcck_d[l_ac].xcck007 = g_xcck_d_t.xcck007 
      AND g_xcck_d[l_ac].xcck008 = g_xcck_d_t.xcck008 
      AND g_xcck_d[l_ac].xcck009 = g_xcck_d_t.xcck009 
 
      THEN
      RETURN
   END IF
    
 
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION axcq531_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axcq531_lock_b(ps_table,ps_page)
   #add-point:lock_b段define name="lock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
   
   #先刷新資料
   #CALL axcq531_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axcq531.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axcq531_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define name="unlock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
   
 
 
END FUNCTION
 
{</section>}
 
{<section id="axcq531.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axcq531_set_entry(p_cmd)
   #add-point:set_entry段define name="set_entry.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xcckld,xcck001,xcck003,xcck004,xcck005",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axcq531.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axcq531_set_no_entry(p_cmd)
   #add-point:set_no_entry段define name="set_no_entry.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xcckld,xcck001,xcck003,xcck004,xcck005",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axcq531.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axcq531_set_entry_b(p_cmd)
   #add-point:set_entry_b段define name="set_entry_b.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axcq531_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define name="set_no_entry_b.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b段"
   
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION axcq531_set_act_visible()
   #add-point:set_act_visible段define name="set_act_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point
   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axcq531.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION axcq531_set_act_no_visible()
   #add-point:set_act_no_visible段define name="set_act_no_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point
   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axcq531.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION axcq531_set_act_visible_b()
   #add-point:set_act_visible_b段define name="set_act_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axcq531.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION axcq531_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define name="set_act_no_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axcq531.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axcq531_default_search()
   #add-point:default_search段define name="default_search.define_customerization"
   
   #end add-point    
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="default_search.pre_function"
   
   #end add-point
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   #add-point:default_search段開始前 name="default_search.before"
   
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xcckld = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xcck001 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xcck003 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " xcck004 = '", g_argv[04], "' AND "
   END IF
   IF NOT cl_null(g_argv[05]) THEN
      LET ls_wc = ls_wc, " xcck005 = '", g_argv[05], "' AND "
   END IF
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axcq531.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axcq531_fill_chk(ps_idx)
   #add-point:fill_chk段define name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="fill_chk.pre_function"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
   
   #add-point:fill_chk段other name="fill_chk.other"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axcq531.modify_detail_chk" >}
#+ 單身輸入判定
PRIVATE FUNCTION axcq531_modify_detail_chk(ps_record)
   #add-point:modify_detail_chk段define name="modify_detail_chk.define_customerization"
   
   #end add-point
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify_detail_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="modify_detail_chk.before"
   
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "glcc002"
 
      #add-point:modify_detail_chk段自訂page控制 name="modify_detail_chk.page_control"
      
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前 name="modify_detail_chk.after"
   
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
 
{</section>}
 
{<section id="axcq531.mask_functions" >}
&include "erp/axc/axcq531_mask.4gl"
 
{</section>}
 
{<section id="axcq531.state_change" >}
    
 
{</section>}
 
{<section id="axcq531.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION axcq531_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xcck_m.xcckld
   LET g_pk_array[1].column = 'xcckld'
   LET g_pk_array[2].values = g_xcck_m.xcck001
   LET g_pk_array[2].column = 'xcck001'
   LET g_pk_array[3].values = g_xcck_m.xcck003
   LET g_pk_array[3].column = 'xcck003'
   LET g_pk_array[4].values = g_xcck_m.xcck004
   LET g_pk_array[4].column = 'xcck004'
   LET g_pk_array[5].values = g_xcck_m.xcck005
   LET g_pk_array[5].column = 'xcck005'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axcq531.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION axcq531_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL axcq531_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xcck_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axcq531.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axcq531_b_fill_1(p_wc2)
DEFINE p_wc2        STRING
DEFINE l_mark       LIKE type_t.num5
DEFINE l_dc         LIKE type_t.num5
DEFINE l_xcck010_t  LIKE xcck_t.xcck010
DEFINE l_xcck002_t  LIKE xcck_t.xcck002
DEFINE l_xcck011_t  LIKE xcck_t.xcck011
DEFINE l_xcck017_t  LIKE xcck_t.xcck017
DEFINE l_qtysum     LIKE xcck_t.xcck201
DEFINE l_amtsum     LIKE xcck_t.xcck202
DEFINE l_success    LIKE type_t.num5
DEFINE l_xcck047    LIKE xcck_t.xcck047
#160520-00004 by whitney modify start
#DEFINE l_xcck004    LIKE xcck_t.xcck004
#DEFINE l_xcck005    LIKE xcck_t.xcck005
DEFINE l_glaa004    LIKE glaa_t.glaa004
DEFINE l_msg1       STRING
DEFINE l_msg2       STRING
DEFINE l_msg3       STRING
DEFINE l_msg4       STRING
DEFINE l_msg5       STRING
DEFINE l_msg6       STRING
#160520-00004 by whitney modify end

   #先清空單身變數內容
   CALL g_xcck_d.clear()
   CALL axcq531_insert_tmp()
   
   #160520-00004 by whitney add start
   LET l_glaa004 = ''
   SELECT glaa004 INTO l_glaa004 FROM glaa_t
    WHERE glaaent = g_enterprise AND glaald = g_xcck_m.xcckld
   LET g_sql = " SELECT glacl004 FROM glacl_t ",
               "  WHERE glaclent=? AND glacl001=? AND glacl002=? AND glacl003=? "
   PREPARE get_glacl004_pre FROM g_sql
   
   LET l_msg1 = cl_getmsg("axr-00152",g_lang)  #期初余额
   LET l_msg2 = cl_getmsg("axc-00734",g_lang)  #成本调整
   LET l_msg3 = cl_getmsg("axc-00724",g_lang)  #结存调整
   LET l_msg4 = cl_getmsg("axc-00726",g_lang)  #期末结存
   LET l_msg5 = cl_getmsg("axc-00725",g_lang)  #平
   LET l_msg6 = cl_getmsg("axr-00302",g_lang)  #借
   #160520-00004 by whitney add end
   
   #160520-00004 by whitney modify start
   LET g_sql = " SELECT xcck010,imaal003,imaal004,xcck020,xcck055,xcck006,xcck007,xcck008,xceb102,xcea101, ",
               "        xcea102,xcck201,xcck202,xcck301,xcck302,xcck002, ",
               "(SELECT xcbfl003 FROM xcbfl_t WHERE xcbflent='"||g_enterprise||"'  AND xcbflcomp='"||g_xcck_m.xcckcomp||"' AND xcbfl001=xcck002 AND xcbfl002='"||g_dlang||"') xcbfl003, ",
               "        xcck011,xcck017,xcck013, ",
               "(SELECT xcbb005 FROM xcbb_t WHERE xcbbent='"||g_enterprise||"' AND xcbbcomp='"||g_xcck_m.xcckcomp||"' AND xcbb001=xcck004 AND xcbb002=xcck005 AND xcbb003=xcck010 AND xcbb004=xcck011) xcbb005, ",
               "        qty,amt,dc,mark ",
               "   FROM axcq531_tmp ",
               "   LEFT JOIN imaal_t ON imaalent='"||g_enterprise||"' AND imaal001=xcck010 AND imaal002='"||g_dlang||"' "
   #160520-00004 by whitney modify end
   
   #判斷是否填充
   IF axcq531_fill_chk(1) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = g_sql, " ORDER BY xcck010",g_order1,",yymm,mark,xcck013,xcck014,xcck006,xcck007,xcck008 "
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axcq531_pb1 FROM g_sql
         DECLARE b_fill_cs1 CURSOR FOR axcq531_pb1
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      LET l_xcck010_t = ''
      LET l_xcck002_t = ''
      LET l_xcck011_t = ''
      LET l_xcck017_t = ''
      #160520-00004 by whitney modify start
      FOREACH b_fill_cs1 INTO g_xcck_d[l_ac].xcck010,g_xcck_d[l_ac].xcck010_desc,g_xcck_d[l_ac].xcck010_desc_desc,g_xcck_d[l_ac].xcck020,g_xcck_d[l_ac].xcck055,
                              g_xcck_d[l_ac].xcck006,g_xcck_d[l_ac].xcck007,g_xcck_d[l_ac].xcck008,g_xcck_d[l_ac].xceb102,g_xcck_d[l_ac].xcea101,
                              g_xcck_d[l_ac].xcea102,g_xcck_d[l_ac].xcck201,g_xcck_d[l_ac].xcck202,g_xcck_d[l_ac].xcck301,g_xcck_d[l_ac].xcck302,
                              g_xcck_d[l_ac].xcck002,g_xcck_d[l_ac].xcck002_desc,g_xcck_d[l_ac].xcck011,g_xcck_d[l_ac].xcck017,
                              g_xcck_d[l_ac].xcck013,g_xcck_d[l_ac].xcbb005,g_xcck_d[l_ac].qty,g_xcck_d[l_ac].amt,l_dc,l_mark
      #160520-00004 by whitney modify end
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            EXIT FOREACH
         END IF
         
         #本行期末数量=上一行的期末数量+借方数量-贷方数量
         #本行期末金额=上一行的期末金额+借方金额-贷方金额
         IF l_mark = 0 THEN
            LET l_xcck010_t = g_xcck_d[l_ac].xcck010
            LET l_xcck002_t = g_xcck_d[l_ac].xcck002
            LET l_xcck011_t = g_xcck_d[l_ac].xcck011
            LET l_xcck017_t = g_xcck_d[l_ac].xcck017
#            LET l_qtysum = g_xcck_d[l_ac].qty * l_dc
#            LET l_amtsum = g_xcck_d[l_ac].amt * l_dc
            LET l_qtysum = g_xcck_d[l_ac].qty
            LET l_amtsum = g_xcck_d[l_ac].amt
         ELSE
            LET l_qtysum = l_qtysum + g_xcck_d[l_ac].xcck201 - g_xcck_d[l_ac].xcck301
            LET l_amtsum = l_amtsum + g_xcck_d[l_ac].xcck202 - g_xcck_d[l_ac].xcck302
            LET g_xcck_d[l_ac].qty = l_qtysum
            LET g_xcck_d[l_ac].amt = l_amtsum
         END IF
         
         IF l_mark = 4 THEN
            LET g_xcck_d[l_ac].qty = g_xcck_d[l_ac - 1].qty
            LET g_xcck_d[l_ac].amt = g_xcck_d[l_ac - 1].amt
         END IF
         
         #160520-00004 by whitney modify start
         CASE l_mark
            WHEN 0 LET g_xcck_d[l_ac].xceb102 = l_msg1  #期初余额
            WHEN 1 LET g_xcck_d[l_ac].xceb102 = l_msg2  #成本调整
            WHEN 3 LET g_xcck_d[l_ac].xceb102 = l_msg3  #结存调整
            WHEN 4 LET g_xcck_d[l_ac].xceb102 = l_msg4  #期末结存
         END CASE
         #160520-00004 by whitney modify end
         
         IF l_mark = 0 OR l_mark = 4 THEN
            LET g_xcck_d[l_ac].xcck013 = ''
         END IF
         
#         IF l_mark =3 THEN
#            CASE
#               WHEN g_xcck_d[l_ac].amt>0 LET g_xcck_d[l_ac].dc = cl_getmsg("axr-00302",g_lang) #借
#               WHEN g_xcck_d[l_ac].amt<0 LET g_xcck_d[l_ac].dc = cl_getmsg("axr-00303",g_lang) #贷
#               WHEN g_xcck_d[l_ac].amt=0 LET g_xcck_d[l_ac].dc = cl_getmsg("axc-00725",g_lang) #平
#            END CASE
#         ELSE
#            CASE l_dc
#               WHEN 1  LET g_xcck_d[l_ac].dc = cl_getmsg("axr-00302",g_lang) #借
#               WHEN 0  LET g_xcck_d[l_ac].dc = cl_getmsg("axc-00725",g_lang) #平
#               WHEN -1 LET g_xcck_d[l_ac].dc = cl_getmsg("axr-00303",g_lang) #贷
#            END CASE    
#         END IF
         
         #160520-00004 by whitney modify start
         IF g_xcck_d[l_ac].qty = 0 AND g_xcck_d[l_ac].amt = 0 THEN
            LET g_xcck_d[l_ac].dc = l_msg5  #平
         ELSE
            LET g_xcck_d[l_ac].dc = l_msg6  #借
         END IF
         #160520-00004 by whitney modify end
         
         CALL s_get_item_acc(g_xcck_m.xcckld,'1',g_xcck_d[l_ac].xcck010,'','',g_xcck_m.xcckcomp,'')
              RETURNING l_success,g_xcck_d[l_ac].glcc002
         #160520-00004 by whitney modify start
         #CALL axcq531_glcc002_desc(g_xcck_d[l_ac].glcc002,g_xcck_m.xcckld) RETURNING g_xcck_d[l_ac].glcc002_desc
         EXECUTE get_glacl004_pre USING g_enterprise,l_glaa004,g_xcck_d[l_ac].glcc002,g_dlang INTO g_xcck_d[l_ac].glcc002_desc
         #160520-00004 by whitney modify end
         
#160520-00004 by whitney mark start
#         CALL s_desc_get_item_desc(g_xcck_d[l_ac].xcck010) RETURNING g_xcck_d[l_ac].xcck010_desc,g_xcck_d[l_ac].xcck010_desc_desc
#         #成本單位取axci120
#         SELECT xcbb005 INTO g_xcck_d[l_ac].xcbb005 FROM xcbb_t
#          WHERE xcbbent  = g_enterprise
#            AND xcbbcomp = g_xcck_m.xcckcomp
#            AND xcbb001  = l_xcck004
#            AND xcbb002  = l_xcck005
#            AND xcbb003  = g_xcck_d[l_ac].xcck010
#         #成本域
#         INITIALIZE g_ref_fields TO NULL
#         LET g_ref_fields[1] = g_xcck_d[l_ac].xcck002
#         CALL ap_ref_array2(g_ref_fields,"SELECT xcbfl003 FROM xcbfl_t WHERE xcbflent='"||g_enterprise||"' AND xcbfl001=? AND xcbfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#         LET g_xcck_d[l_ac].xcck002_desc = '', g_rtn_fields[1] , ''
#         DISPLAY BY NAME g_xcck_d[l_ac].xcck002_desc
#160520-00004 by whitney mark start
         
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035
               LET g_errparam.popup  = TRUE
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         LET l_ac = l_ac + 1
      END FOREACH
      CALL g_xcck_d.deleteElement(g_xcck_d.getLength())
   END IF
   
   LET g_rec_b = l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_xcck_d.getLength()
      LET g_xcck_d_mask_o[l_ac].* =  g_xcck_d[l_ac].*
      CALL axcq531_xcck_t_mask()
      LET g_xcck_d_mask_n[l_ac].* =  g_xcck_d[l_ac].*
   END FOR
   
   FREE axcq531_pb1
   FREE get_glacl004_pre  #160520-00004 by whitney add
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axcq531_create_tmp()

   DROP TABLE axcq531_tmp
   
   CREATE TEMP TABLE axcq531_tmp(
      xcck047    LIKE xcck_t.xcck047,     #1 工单
      xcck010    LIKE xcck_t.xcck010,     #2料
      xcck020    LIKE xcck_t.xcck020,     #3
      xcck055    LIKE xcck_t.xcck055,     #4
      xcck006    LIKE xcck_t.xcck006,     #5 单号
      xcck007    LIKE xcck_t.xcck007,     #6 项次
      xcck008    LIKE xcck_t.xcck008,     #7 项序
      xceb102    LIKE type_t.chr500,      #8 摘要
      xcea101    LIKE type_t.chr20,       #9 凭证编号
      xcea102    LIKE type_t.dat,         #10凭证日期
      xcck201    LIKE xcck_t.xcck201,     #11借数
      xcck202    LIKE xcck_t.xcck202,     #12借金
      xcck301    LIKE xcck_t.xcck301,     #13贷数
      xcck302    LIKE xcck_t.xcck302,     #14贷金
      qty        LIKE xcck_t.xcck301,     #15期末数量
      amt        LIKE xcck_t.xcck302,     #16期末金额
      dc         LIKE type_t.num5,        #17借贷标志
      xcck002    LIKE xcck_t.xcck002,     #18成本域-    S-FIN-6001
      xcck011    LIKE xcck_t.xcck011,     #19特性       S-FIN-6013
      xcck017    LIKE xcck_t.xcck017,     #20批号       xcat005 = 3
      mark       LIKE type_t.num5,        #
      xcck004    LIKE xcck_t.xcck004,
      xcck005    LIKE xcck_t.xcck005,
      xcck013    LIKE xcck_t.xcck013,
      xcck014    LIKE xcck_t.xcck014,
      yymm       LIKE type_t.num5)

END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axcq531_insert_tmp()
   DEFINE l_sql1        STRING  #期初
   DEFINE l_sql2        STRING
   DEFINE l_sql3        STRING
   DEFINE l_sql4        STRING
   DEFINE l_sql5        STRING
   DEFINE l_sql11       STRING
   DEFINE l_sql21       STRING
   DEFINE l_sql22       STRING
   DEFINE l_sql24       STRING
   DEFINE l_sql26       STRING
   DEFINE l_sql27       STRING
   DEFINE l_sel_xcck    STRING
   DEFINE l_sel_xccc    STRING  #成本域、特性、批号启用
   DEFINE l_sel_xccc1   STRING
   DEFINE l_sel_xcco    STRING
   DEFINE l_sel_xceb    STRING
   DEFINE l_sel_xcec    STRING
   DEFINE l_grp_xccc    STRING
   DEFINE l_grp_xcco    STRING
   DEFINE l_where_xcck  STRING
   DEFINE l_where_xccc  STRING
   DEFINE l_where_xcco  STRING
   DEFINE l_xcck_xccc   STRING
   DEFINE l_xcck_xcco   STRING
   DEFINE l_xceb_xccc   STRING
   DEFINE l_xceb_xcck   STRING
   DEFINE l_xceb_xcco   STRING

   DELETE FROM axcq531_tmp  #160520-00004 by whitney add

#1.期初数据：
#  根据料号（成本域、特性、批号视其是否启用抓取）、成本计算类型、账套、年度、期别、本位币顺序从xccc_t中抓取该料号的期初数量和金额，并根据料号+账套从glcc_t抓取科目编号
#2.本期异动数据:
# 2.1日常有库存异动明细数据的：
#    根据料号（成本域、特性、批号视其是否启用抓取）、成本计算类型、账套、年度、期别、本位币顺序从xcck_t中抓取该料号的异动单号、项次、项序、成本单位、数量和金额，并根据料号+账套从glcc_t抓取科目编号；根据异动单号+项次+项序从xrea_t/xreb_t/xrec_t中抓取摘要、凭证号码、凭证日期。
#2.2成本调整（axct310）
#   根据料号（成本域、特性、批号视其是否启用抓取）、成本计算类型、账套、年度、期别、本位币顺序从xcco_t中抓取该料号的调整金额xcco102，并根据料号+账套从glcc_t抓取科目编号；从xrea_t/xreb_t/xrec_t中按库存成本调整凭证类型
# 2.3成本计算尾差调整数据（即结存调整)：
#    根据料号（成本域、特性、批号视其是否启用抓取）、成本计算类型、账套、年度、期别、本位币顺序从xccc_t中抓取该料号的调整金额xccc903，并根据料号+账套从glcc_t抓取科目编号；从xrea_t/xreb_t/xrec_t中按结存调整凭证类型（axct710中）抓取摘要、凭证号码、凭证日期。
# 2.4计算每一行的期末数量和金额
#    公式：
#      本行期末数量=上一行的期末数量+借方数量-贷方数量
#      本行期末金额=上一行的期末金额+借方金额-贷方金额
#3.期末数据：
#    公式：
#      本行期末数量=上一行的期末数量+借方数量-贷方数量
#      本行期末金额=上一行的期末金额+借方金额-贷方金额

#t0 xcck/tmp
#t1 xccc
#t2 xcco
#t3 xceb/xcec

   LET l_sql1        = ''
   LET l_sql2        = ''
   LET l_sql3        = ''
   LET l_sql4        = ''
   LET l_sql5        = ''
   LET l_sql11       = ''
   LET l_sql21       = ''
   LET l_sql22       = ''
   LET l_sql24       = ''
   LET l_sql26       = ''
   LET l_sql27       = ''
   LET l_sel_xcck    = ''
   LET l_sel_xccc    = ''
   LET l_sel_xccc1   = ''
   LET l_sel_xcco    = ''
   LET l_sel_xceb    = ''
   LET l_sel_xcec    = ''
   LET l_grp_xccc    = ''
   LET l_grp_xcco    = ''
   LET l_where_xcck  = ''
   LET l_where_xccc  = ''
   LET l_where_xcco  = ''
   LET l_xcck_xccc   = ''
   LET l_xceb_xccc   = ''
   LET l_xceb_xcck   = ''
   LET l_xceb_xcco   = ''
   LET g_order1 = ''
   
   #WHERE条件
   #add--150703-00018#8 By shiun--(S)
   IF cl_null(g_wc2_table1) THEN
      LET g_wc2_table1 = ' 1=1 '
   END IF
   #add--150703-00018#8 By shiun--(E)
   LET g_wc2_table1 = g_wc2_table1 CLIPPED," AND ",g_wc CLIPPED
   IF NOT cl_null(g_wc2_table1) THEN
      LET l_where_xccc = cl_replace_str(g_wc2_table1,'xcck010','xccc006')
      LET l_where_xccc = cl_replace_str(l_where_xccc,'xcck011','xccc007')
      LET l_where_xccc = cl_replace_str(l_where_xccc,'xcck017','xccc008')
      LET l_where_xccc = cl_replace_str(l_where_xccc,'xcck','xccc')
   END IF
   LET l_where_xcco = cl_replace_str(l_where_xccc,"xccc","xcco") 
   
   
   LET l_grp_xccc  = "   GROUP BY xccc004,xccc005,(xccc004*12+xccc005),xccc006 "

#----------------------根据参数，组sql条件，成本域&特性&批号------------------------------------
   #成本域
   IF cl_get_para(g_enterprise,g_xcck_m.xcckcomp,'S-FIN-6001') = 'Y' THEN   #成本域
      #select
      LET l_sel_xcck = l_sel_xcck CLIPPED," ,xcck002 "
      LET l_sel_xceb = l_sel_xceb CLIPPED," ,xceb103 range"
      #group
      LET l_grp_xccc = l_grp_xccc CLIPPED," ,xccc002 "
      #join条件
      LET l_xceb_xccc = l_xceb_xccc CLIPPED," AND t3.range = t1.xccc002 "
      LET l_xcck_xccc = l_xcck_xccc CLIPPED," AND t1.xccc002 = t0.xcck002 "
      #order
      LET g_order1 = " ,xcck002 "
   ELSE 
      LET l_sel_xcck = l_sel_xcck CLIPPED," ,'' "
   END IF
   IF cl_get_para(g_enterprise,g_xcck_m.xcckcomp,'S-FIN-6013') = 'Y' THEN   #特性
      LET l_sel_xcck = l_sel_xcck CLIPPED," ,xcck011 "
      LET l_grp_xccc = l_grp_xccc CLIPPED," ,xccc007 "
      LET l_sel_xceb = l_sel_xceb CLIPPED," ,xceb005 spec"
      LET l_xceb_xccc = l_xceb_xccc CLIPPED," AND t3.spec = t1.xccc007 "
      LET l_xcck_xccc = l_xcck_xccc CLIPPED," AND t1.xccc007 = t0.xcck011 "
      LET g_order1 = " ,xcck011 "
   ELSE 
      LET l_sel_xcck = l_sel_xcck CLIPPED," ,'' "
   END IF
   #批次成本 啟用批號
   SELECT xcat005 INTO g_xcat005 
     FROM xcat_t 
    WHERE xcatent = g_enterprise AND xcat001 = g_xcck_m.xcck003
   IF g_xcat005 = '3' THEN
      LET l_sel_xcck = l_sel_xcck CLIPPED," ,xcck017 "
      LET l_grp_xccc = l_grp_xccc CLIPPED," ,xccc008 "
      LET l_xcck_xccc = l_xcck_xccc CLIPPED," AND t1.xccc008 = t0.xcck017 "
      LET g_order1 = " ,xcck017 "      
   ELSE
      LET l_sel_xcck = l_sel_xcck CLIPPED," ,'' "   
   END IF
   
   LET l_sel_xcec = cl_replace_str(l_sel_xceb,"xceb","xcec")  
   LET l_sel_xccc = cl_replace_str(l_sel_xcck,'xcck010','xccc006')
   LET l_sel_xccc = cl_replace_str(l_sel_xccc,'xcck011','xccc007')
   LET l_sel_xccc = cl_replace_str(l_sel_xccc,'xcck017','xccc008')
   LET l_sel_xccc = cl_replace_str(l_sel_xccc,'xcck','xccc')
   LET l_sel_xcco = cl_replace_str(l_sel_xccc,'xccc','xcco')
   LET l_sel_xccc1 = cl_replace_str(l_sel_xccc,",''","")
   
   LET l_xcck_xcco = cl_replace_str(l_xcck_xccc,"t1","t2")
   LET l_xcck_xcco = cl_replace_str(l_xcck_xcco,"xccc","xcco")
   LET l_xceb_xcck = cl_replace_str(l_xceb_xccc,"t1","t0") 
   LET l_xceb_xcck = cl_replace_str(l_xceb_xcck,"xccc007","xcck011") 
   LET l_xceb_xcck = cl_replace_str(l_xceb_xcck,"xccc002","xcck002") 
   
   LET l_xceb_xcco = cl_replace_str(l_xceb_xccc, "t1","t2")
   LET l_xceb_xcco = cl_replace_str(l_xceb_xcco,"xccc","xcco")
   LET l_grp_xcco = cl_replace_str(l_grp_xccc,"xccc","xcco")
#   LET l_group3 = cl_replace_str(l_grp_xccc,"(xccc004*12+xccc005),","")



   #1.期初数据----------------------------------------------------------
   #把这个期间的所有料都插入，若其实年期没有金额数值就给0
   LET l_sql1 = 
                " SELECT UNIQUE '',xcck010,'','',",
                "        '','','','','','','','','','',",
                "        0,0,0 "
                
   LET l_sql1 = " INSERT INTO axcq531_tmp ",
                 l_sql1 CLIPPED,l_sel_xcck CLIPPED, ",0,",g_yy1," , ",g_mm1,
                 #" ,to_date('",MDY(g_mm1,1,g_yy1)," 00:00:00','YYYY-MM-DD HH24:MI:SS'),",
                 " ,to_date('",MDY(g_mm1,1,g_yy1),"','YYYY-MM-DD'),",
                 "'00:00:00',",(g_yy1*12+g_mm1),"   FROM xcck_t ",  #期初摘要先設置標記0
                 "    WHERE xcckent= ? AND xcckld=? AND xcck001=? AND xcck003=?  "
   IF g_a = 'Y' THEN LET l_sql1 = l_sql1 CLIPPED," AND xcck010 = ? " END IF
   LET l_sql1 = l_sql1," AND ",g_wc2_table1

   PREPARE axcq531_ins_tmp0 FROM l_sql1

   IF g_a = 'Y' THEN
      EXECUTE axcq531_ins_tmp0 USING g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck010
   ELSE                                                                                             
      EXECUTE axcq531_ins_tmp0 USING g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003  
   END IF
   
   IF SQLCA.sqlcode THEN
      LET g_success='N'
      CALL cl_errmsg('','','INS axcq531_tmp_0',SQLCA.sqlcode,1)
      RETURN
   END IF
   FREE axcq531_ins_tmp0   
   
   LET l_sql11 = 
                 "MERGE INTO axcq531_tmp t0 ", 
                 "      USING (SELECT xccc004,xccc005,xccc006,SUM(xccc101) xccc101,SUM(xccc102) xccc102 ",l_sel_xccc1,  
                 "               FROM xccc_t  ",
                 "               WHERE xcccent = ? AND xcccld = ? AND xccc003 = ?  "
  IF g_a = 'Y' THEN LET l_sql11 = l_sql11 CLIPPED," AND xccc006 = ? " END IF
  LET l_sql11 = l_sql11 CLIPPED,l_grp_xccc,
                ") t1
                ON (t1.xccc004 = t0.xcck004 AND t1.xccc005 = t0.xcck005 AND t0.mark = 0 AND t1.xccc006 = t0.xcck010 ",
                   l_xcck_xccc," ) ",
                 "    WHEN MATCHED THEN ",
                 " UPDATE SET t0.qty = t1.xccc101,",
                 "            t0.amt = t1.xccc102 "
   PREPARE axcq531_merge_tmp01 FROM l_sql11


   IF g_a = 'Y' THEN 
      EXECUTE axcq531_merge_tmp01 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck010    
   ELSE   
      EXECUTE axcq531_merge_tmp01 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003
   END IF

   IF SQLCA.sqlcode THEN
      LET g_success='N'
      CALL cl_errmsg('','','INS axcq531_tmp_01',SQLCA.sqlcode,1)
      RETURN
   END IF
   FREE axcq531_merge_tmp01
#-----------------------------------------------------------------------------------------------------    

   #2.1日常有库存异动明细数据
#axct7* 不同类型，不同的资料来源，分开MERGE-----mark---begin 
#   LET l_sql2 = "SELECT  UNIQUE xcck010,xcck020,xcck055,xcck006,xcck007,xcck008,",
#                "               t2.memo,t2.bill,t2.dd, ",
#                "               CASE xcck009 WHEN 1 THEN xcck201 ELSE 0 END, ",
#                "               CASE xcck009 WHEN 1 THEN xcck202 ELSE 0 END, ",
#                "               CASE xcck009 WHEN -1 THEN xcck201 ELSE 0 END, ",
#                "               CASE xcck009 WHEN -1 THEN xcck202 ELSE 0 END, ",
#                "               0,0,0 "
#   LET l_sel_xcck = cl_replace_str(l_sel_xcck,"xccc002","xcck002")
#   LET l_sel_xcck = cl_replace_str(l_sel_xcck,"xccc007","xcck011")
#   LET l_sel_xcck = cl_replace_str(l_sel_xcck,"xccc008","xcck017")
##   LET l_grp_xcco = s_chr_replace(l_grp_xccc,'xccc006','xcck010',0)
##   LET l_grp_xcco = s_chr_replace(l_grp_xccc,'xccc002','xcck002',0)
##   LET l_grp_xcco = s_chr_replace(l_grp_xccc,'xccc007','xcck011',0)
##   LET l_grp_xcco = s_chr_replace(l_grp_xccc,'xccc008','xcck017',0)
#
##不同xccc005对应不同的凭证异动类型axct7
#
#   LET l_sql2 = " INSERT INTO axcq531_tmp ",
#                l_sql2 CLIPPED,l_sel_xcck CLIPPED, ",1   FROM xcck_t t0 ",  #本期1
#                "  LEFT JOIN ",
#               #"              (SELECT xceb102 memo,xcea101 bill,xcea102 dd,xceb001 doc",#xceb002 seq 
#                "              (SELECT UNIQUE xceb102 memo,xceadocno bill,xcea001 dd,xceb001 doc",#xceb002 seq 
#                "                 FROM xcea_t,xceb_t
#                                 WHERE xceaent = ? AND xceald = ? AND xcea003 = ? AND xcea004 =? AND xcea005 = ? "
#  IF g_a = 'Y' THEN LET l_sql2 = l_sql2 CLIPPED," AND xceb004 = ? " END IF
#  LET l_sql2 = l_sql2 CLIPPED,"
#                                   AND xceaent = xcebent AND xceald = xcebld
#                                   AND xceadocno = xcebdocno AND xcea002 IN (1,2,5)
#                                UNION ALL ",
#                #               SELECT xcec102 memo,xcea101 bill,xcea102 dd,xcec001 doc",#xcec002 seq 
#                "               SELECT xcec102 memo,xceadocno bill,xcea001 dd,xcec001 doc",#xcec002 seq                                
#                "                 FROM xcea_t,xcec_t
#                                 WHERE xceaent = ? AND xceald = ? AND xcea003 = ? AND xcea004 =? AND xcea005 = ? "
#  IF g_a = 'Y' THEN LET l_sql2 = l_sql2 CLIPPED," AND xcec004 = ? " END IF
#  LET l_sql2 = l_sql2 CLIPPED,"
#                                   AND xceaent = xcecent AND xceald = xcecld
#                                   AND xceadocno = xcecdocno AND xcea002 IN (1,2,5)) t2
#                ON t2.doc = t0.xcck047 ",# AND t2.seq = t0.xcck007 ", 
#               " WHERE xcckent= ? AND xcckld=? AND xcck001=? AND xcck003=? AND xcck004=? AND xcck005=? "
#   IF g_a = 'Y' THEN LET l_sql2 = l_sql2 CLIPPED," AND xcck010 = ? " END IF
#   IF NOT cl_null(g_wc2_table1) THEN
#      LET  l_sql2 = l_sql2 CLIPPED," AND ",g_wc2_table1 CLIPPED
#   END IF
#   PREPARE axcq531_ins_tmp1 FROM l_sql2
#   IF g_a = 'Y' THEN 
#      EXECUTE axcq531_ins_tmp1 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck010,
#                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck010,
#                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck010      
#   ELSE   
#      EXECUTE axcq531_ins_tmp1 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005,
#                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005,
#                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005
#   END IF
#   IF SQLCA.sqlcode THEN
#      LET g_success='N'
#      CALL cl_errmsg('','','INS axcq531_tmp_0',SQLCA.sqlcode,1)
#      RETURN
#   END IF
#   FREE axcq531_ins_tmp1
#axct7* 不同类型，不同的资料来源，分开MERGE-----mark---end
#axct7* 不同类型，不同的资料来源，分开MERGE-----begin
#insert 
   LET l_sql2 = "SELECT  UNIQUE xcck047,xcck010,xcck020,xcck055,xcck006,xcck007,xcck008,",
                "               '','','', ",
                "               CASE xcck009 WHEN 1 THEN xcck201 ELSE 0 END, ",
                "               CASE xcck009 WHEN 1 THEN xcck202 ELSE 0 END, ",
                "               CASE xcck009 WHEN -1 THEN xcck201 ELSE 0 END, ",
                "               CASE xcck009 WHEN -1 THEN xcck202 ELSE 0 END, ",
                "               0,0,0 "

#不同xccc005对应不同的凭证异动类型axct7

   LET l_sql2 = " INSERT INTO axcq531_tmp ",
#                l_sql2 CLIPPED,l_sel_xcck CLIPPED, ",2   FROM xcck_t t0 ",  #本期1
                l_sql2 CLIPPED,l_sel_xcck CLIPPED, ",2,xcck004,xcck005,
                xcck013,xcck014,
                (xcck004*12+xcck005)   FROM xcck_t  ",  #本期1
#                "  LEFT JOIN ",
#               #"              (SELECT xceb102 memo,xcea101 bill,xcea102 dd,xceb001 doc",#xceb002 seq 
#                "              (SELECT UNIQUE xceb102 memo,xceadocno bill,xcea001 dd,xceb001 doc",#xceb002 seq 
#                "                 FROM xcea_t,xceb_t
#                                 WHERE xceaent = ? AND xceald = ? AND xcea003 = ? AND xcea004 =? AND xcea005 = ? "
#  IF g_a = 'Y' THEN LET l_sql2 = l_sql2 CLIPPED," AND xceb004 = ? " END IF
#  LET l_sql2 = l_sql2 CLIPPED,"
#                                   AND xceaent = xcebent AND xceald = xcebld
#                                   AND xceadocno = xcebdocno AND xcea002 IN (1,2,5)
#                                UNION ALL ",
#                #               SELECT xcec102 memo,xcea101 bill,xcea102 dd,xcec001 doc",#xcec002 seq 
#                "               SELECT xcec102 memo,xceadocno bill,xcea001 dd,xcec001 doc",#xcec002 seq                                
#                "                 FROM xcea_t,xcec_t
#                                 WHERE xceaent = ? AND xceald = ? AND xcea003 = ? AND xcea004 =? AND xcea005 = ? "
#  IF g_a = 'Y' THEN LET l_sql2 = l_sql2 CLIPPED," AND xcec004 = ? " END IF
#  LET l_sql2 = l_sql2 CLIPPED,"
#                                   AND xceaent = xcecent AND xceald = xcecld
#                                   AND xceadocno = xcecdocno AND xcea002 IN (1,2,5)) t2
#                ON t2.doc = t0.xcck047 ",# AND t2.seq = t0.xcck007 ", 

#               " WHERE xcckent= ? AND xcckld=? AND xcck001=? AND xcck003=? AND xcck004=? AND xcck005=? "
                " WHERE xcckent= ? AND xcckld=? AND xcck001=? AND xcck003=?  "
   IF g_a = 'Y' THEN LET l_sql2 = l_sql2 CLIPPED," AND xcck010 = ? " END IF
   IF NOT cl_null(g_wc2_table1) THEN
      LET  l_sql2 = l_sql2 CLIPPED," AND ",g_wc2_table1 CLIPPED
   END IF
   PREPARE axcq531_ins_tmp1 FROM l_sql2
#   IF g_a = 'Y' THEN 
#      EXECUTE axcq531_ins_tmp1 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck010      
#   ELSE   
#      EXECUTE axcq531_ins_tmp1 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005
#   END IF

   IF g_a = 'Y' THEN 
      EXECUTE axcq531_ins_tmp1 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck010      
   ELSE   
      EXECUTE axcq531_ins_tmp1 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003
   END IF

   IF SQLCA.sqlcode THEN
      LET g_success='N'
      CALL cl_errmsg('','','INS axcq531_tmp_0',SQLCA.sqlcode,1)
      RETURN
   END IF
   FREE axcq531_ins_tmp1
#merge
#axct701
   LET l_sql21 = 
                 "MERGE INTO axcq531_tmp t0 ",
#                 "      USING (SELECT UNIQUE xceb102 memo,xcea101 bill,xcea102 dd,xceb001 doc,xceb004 item ",l_sel_xceb, 
                 "      USING (SELECT UNIQUE xceb102 memo,xcea101 bill,xcea102 dd,xceb001 doc,xceb004 item,xcea004 yy,xcea005 mm ",l_sel_xceb, 
                 "               FROM xcea_t,xceb_t  ",
#                 "               WHERE xceaent = ? AND xceald = ? AND xcea003 = ? AND xcea004 =? AND xcea005 = ? "
                 "               WHERE xceaent = ? AND xceald = ? AND xcea003 = ?  "
  IF g_a = 'Y' THEN LET l_sql21 = l_sql21 CLIPPED," AND xceb004 = ? " END IF
  LET l_sql21 = l_sql21 CLIPPED,"
                                   AND xceaent = xcebent AND xceald = xcebld
                                   AND xceadocno = xcebdocno AND xcea002 = 1 
                                UNION  ",
#                "               SELECT UNIQUE xcec102 memo,xcea101 bill,xcea102 dd,xcec001 doc,xcec004 item",l_sel_xcec, 
                "               SELECT UNIQUE xcec102 memo,xcea101 bill,xcea102 dd,xcec001 doc,xcec004 item,xcea004 yy,xcea005 mm ",l_sel_xcec, 
                "                 FROM xcea_t,xcec_t  ",
#                "                WHERE xceaent = ? AND xceald = ? AND xcea003 = ? AND xcea004 =? AND xcea005 = ? "
                "                WHERE xceaent = ? AND xceald = ? AND xcea003 = ?  "
  IF g_a = 'Y' THEN LET l_sql21 = l_sql21 CLIPPED," AND xcec004 = ? " END IF
  LET l_sql21 = l_sql21 CLIPPED,"
                                   AND xceaent = xcecent AND xceald = xcecld
                                   AND xceadocno = xcecdocno AND xcea002 = 1) t3
                ON (t3.doc = t0.xcck047 AND t3.item = t0.xcck010 AND t0.mark = 2 AND t0.xcck020 IN ('302','303') ",
                   l_xceb_xcck,
                 " AND t3.yy = t0.xcck004 AND t3.mm = t0.xcck005 ",
                 " ) ",
                 "    WHEN MATCHED THEN ",
                 " UPDATE SET t0.xceb102 = t3.memo,",      
                 "            t0.xcea101 = t3.bill,",
                 "            t0.xcea102 = t3.dd "
   PREPARE axcq531_merge_tmp11 FROM l_sql21
#   IF g_a = 'Y' THEN 
#      EXECUTE axcq531_merge_tmp11 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck010,
#                                         g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck010      
#   ELSE   
#      EXECUTE axcq531_merge_tmp11 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005,
#                                         g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005
#   END IF

   IF g_a = 'Y' THEN 
      EXECUTE axcq531_merge_tmp11 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck010,
                                         g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck010      
   ELSE   
      EXECUTE axcq531_merge_tmp11 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,
                                         g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003
   END IF

   IF SQLCA.sqlcode THEN
      LET g_success='N'
      CALL cl_errmsg('','','INS axcq531_tmp_11',SQLCA.sqlcode,1)
      RETURN
   END IF
   FREE axcq531_merge_tmp11
#axct702
   LET l_sql22 = 
                 "MERGE INTO axcq531_tmp t0 ",
#                 "      USING (SELECT UNIQUE xceb102 memo,xcea101 bill,xcea102 dd,xceb001 doc,xceb004 item ",l_sel_xceb, 
                 "      USING (SELECT UNIQUE xceb102 memo,xcea101 bill,xcea102 dd,xceb001 doc,xceb004 item,xcea004 yy,xcea005 mm ",l_sel_xceb, 
                 "               FROM xcea_t,xceb_t  ",
#                 "               WHERE xceaent = ? AND xceald = ? AND xcea003 = ? AND xcea004 =? AND xcea005 = ? "
                 "               WHERE xceaent = ? AND xceald = ? AND xcea003 = ? "
  IF g_a = 'Y' THEN LET l_sql22 = l_sql22 CLIPPED," AND xceb004 = ? " END IF
  LET l_sql22 = l_sql22 CLIPPED,"
                                   AND xceaent = xcebent AND xceald = xcebld
                                   AND xceadocno = xcebdocno AND xcea002 = 2 
                                UNION  ",
#                "               SELECT UNIQUE xcec102 memo,xcea101 bill,xcea102 dd,xcec001 doc,xcec004 item ",l_sel_xcec,    
                "               SELECT UNIQUE xcec102 memo,xcea101 bill,xcea102 dd,xcec001 doc,xcec004 item,xcea004 yy,xcea005 mm ",l_sel_xcec,  
                "                 FROM xcea_t,xcec_t  ",
#                "                WHERE xceaent = ? AND xceald = ? AND xcea003 = ? AND xcea004 =? AND xcea005 = ? "
                "                WHERE xceaent = ? AND xceald = ? AND xcea003 = ?  "
  IF g_a = 'Y' THEN LET l_sql22 = l_sql22 CLIPPED," AND xcec004 = ? " END IF
  LET l_sql22 = l_sql22 CLIPPED,"
                                   AND xceaent = xcecent AND xceald = xcecld
                                   AND xceadocno = xcecdocno AND xcea002 = 2) t3
                ON (t3.doc = t0.xcck047 AND t3.item = t0.xcck010 AND t0.mark = 2 AND t0.xcck055 IN ('203','205','217') ",
                    l_xceb_xcck,
                 "  AND t3.yy = t0.xcck004 AND t3.mm = t0.xcck005 ",
                 " ) ",  
                 "    WHEN MATCHED THEN ",
                 " UPDATE SET t0.xceb102 = t3.memo,",      
                 "            t0.xcea101 = t3.bill,",
                 "            t0.xcea102 = t3.dd "                
   PREPARE axcq531_merge_tmp12 FROM l_sql22
#   IF g_a = 'Y' THEN 
#      EXECUTE axcq531_merge_tmp12 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck010,
#                                         g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck010      
#   ELSE   
#      EXECUTE axcq531_merge_tmp12 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005,
#                                         g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005
#   END IF

   IF g_a = 'Y' THEN 
      EXECUTE axcq531_merge_tmp12 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck010,
                                         g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck010      
   ELSE   
      EXECUTE axcq531_merge_tmp12 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,
                                         g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003
   END IF
   IF SQLCA.sqlcode THEN
      LET g_success='N'
      CALL cl_errmsg('','','INS axcq531_tmp_12',SQLCA.sqlcode,1)
      RETURN
   END IF
   FREE axcq531_merge_tmp12   
#axct704
   LET l_sql24 = 
                 "MERGE INTO axcq531_tmp t0 ",
#                 "      USING (SELECT UNIQUE xceb102 memo,xcea101 bill,xcea102 dd,xceb001 doc,xceb004 item,xceb002 seq ",l_sel_xceb, 
                 "      USING (SELECT UNIQUE xceb102 memo,xcea101 bill,xcea102 dd,xceb001 doc,xceb004 item,xceb002 seq,xcea004 yy,xcea005 mm ",l_sel_xceb, 
                 "               FROM xcea_t,xceb_t  ",
#                 "               WHERE xceaent = ? AND xceald = ? AND xcea003 = ? AND xcea004 =? AND xcea005 = ? "
                 "               WHERE xceaent = ? AND xceald = ? AND xcea003 = ?  "
  IF g_a = 'Y' THEN LET l_sql24 = l_sql24 CLIPPED," AND xceb004 = ? " END IF
  LET l_sql24 = l_sql24 CLIPPED,"
                                   AND xceaent = xcebent AND xceald = xcebld
                                   AND xceadocno = xcebdocno AND xcea002 = 4
                                UNION  ",
#                "               SELECT UNIQUE xcec102 memo,xcea101 bill,xcea102 dd,xcec001 doc,xcec004 item,xcec002 seq ",l_sel_xcec,#xcec002 seq    
                "               SELECT UNIQUE xcec102 memo,xcea101 bill,xcea102 dd,xcec001 doc,xcec004 item,xcec002 seq,xcea004 yy,xcea005 mm ",l_sel_xcec,#xcec002 seq   
                "                 FROM xcea_t,xcec_t  ",
#                "                WHERE xceaent = ? AND xceald = ? AND xcea003 = ? AND xcea004 =? AND xcea005 = ? "
                "                WHERE xceaent = ? AND xceald = ? AND xcea003 = ?  "
  IF g_a = 'Y' THEN LET l_sql24 = l_sql24 CLIPPED," AND xcec004 = ? " END IF
  LET l_sql24 = l_sql24 CLIPPED,"
                                   AND xceaent = xcecent AND xceald = xcecld
                                   AND xceadocno = xcecdocno AND xcea002 = 4) t3
                ON (t3.doc = t0.xcck006 AND t3.seq = t0.xcck007 AND t3.item = t0.xcck010 AND t0.mark = 2 AND t0.xcck055 = '311' ",
                    l_xceb_xcck,
                 "  AND t3.yy = t0.xcck004 AND t3.mm = t0.xcck005 ",
                 " ) ",  
                 "    WHEN MATCHED THEN ",
                 " UPDATE SET t0.xceb102 = t3.memo,",      
                 "            t0.xcea101 = t3.bill,",
                 "            t0.xcea102 = t3.dd "
                                  
   PREPARE axcq531_merge_tmp14 FROM l_sql24
#   IF g_a = 'Y' THEN 
#      EXECUTE axcq531_merge_tmp14 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck010,
#                                         g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck010      
#   ELSE   
#      EXECUTE axcq531_merge_tmp14 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005,
#                                         g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005
#   END IF

   IF g_a = 'Y' THEN 
      EXECUTE axcq531_merge_tmp14 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck010,
                                         g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck010      
   ELSE   
      EXECUTE axcq531_merge_tmp14 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,
                                         g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003
   END IF

   IF SQLCA.sqlcode THEN
      LET g_success='N'
      CALL cl_errmsg('','','INS axcq531_tmp_14',SQLCA.sqlcode,1)
      RETURN
   END IF
   FREE axcq531_merge_tmp14
   
#axct706
   LET l_sql26 = 
                 "MERGE INTO axcq531_tmp t0 ",
#                 "      USING (SELECT UNIQUE xceb102 memo,xcea101 bill,xcea102 dd,xceb001 doc,xceb004 item ",l_sel_xceb,  
                 "      USING (SELECT UNIQUE xceb102 memo,xcea101 bill,xcea102 dd,xceb001 doc,xceb004 item,xcea004 yy,xcea005 mm ",l_sel_xceb,  
                 "               FROM xcea_t,xceb_t  ",
#                 "               WHERE xceaent = ? AND xceald = ? AND xcea003 = ? AND xcea004 =? AND xcea005 = ? "
                 "               WHERE xceaent = ? AND xceald = ? AND xcea003 = ?  "
  IF g_a = 'Y' THEN LET l_sql26 = l_sql26 CLIPPED," AND xceb004 = ? " END IF
  LET l_sql26 = l_sql26 CLIPPED,"
                                   AND xceaent = xcebent AND xceald = xcebld
                                   AND xceadocno = xcebdocno AND xcea002 = 6   ",
               #"                UNION ALL ",
                "                UNION  ",
#                "               SELECT UNIQUE xcec102 memo,xcea101 bill,xcea102 dd,xcec001 doc,xcec004 item",l_sel_xcec,                                
                "               SELECT UNIQUE xcec102 memo,xcea101 bill,xcea102 dd,xcec001 doc,xcec004 item,xcea004 yy,xcea005 mm ",l_sel_xcec, 
                "                 FROM xcea_t,xcec_t   ",
#               "                 WHERE xceaent = ? AND xceald = ? AND xcea003 = ? AND xcea004 =? AND xcea005 = ? "
               "                 WHERE xceaent = ? AND xceald = ? AND xcea003 = ?  "
  IF g_a = 'Y' THEN LET l_sql26 = l_sql26 CLIPPED," AND xcec004 = ? " END IF
  LET l_sql26 = l_sql26 CLIPPED,"
                                   AND xceaent = xcecent AND xceald = xcecld
                                   AND xceadocno = xcecdocno AND xcea002 = 6) t3
                ON (t3.item = t0.xcck010 AND t0.mark = 2 AND t0.xcck020 IN ('201','202') ",
                    l_xceb_xcck,
                 "  AND t3.yy = t0.xcck004 AND t3.mm = t0.xcck005 ",
                 " ) ", 
                 "    WHEN MATCHED THEN ",
                 " UPDATE SET t0.xceb102 = t3.memo,",      
                 "            t0.xcea101 = t3.bill,",
                 "            t0.xcea102 = t3.dd "                
   PREPARE axcq531_merge_tmp16 FROM l_sql26
#   IF g_a = 'Y' THEN 
#      EXECUTE axcq531_merge_tmp16 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck010,
#                                         g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck010      
#   ELSE   
#      EXECUTE axcq531_merge_tmp16 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005,
#                                         g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck_m.xcck004,g_xcck_m.xcck005
#   END IF

   IF g_a = 'Y' THEN 
      EXECUTE axcq531_merge_tmp16 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck010,
                                         g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck010      
   ELSE   
      EXECUTE axcq531_merge_tmp16 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,
                                         g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003
   END IF


   IF SQLCA.sqlcode THEN
      LET g_success='N'
      CALL cl_errmsg('','','INS axcq531_tmp_16',SQLCA.sqlcode,1)
      RETURN
   END IF
   FREE axcq531_merge_tmp16
   
#axct707
   LET l_sql27 = 
                 "MERGE INTO axcq531_tmp t0 ",
#                 "      USING (SELECT UNIQUE xceb102 memo,xcea101 bill,xcea102 dd,xceb001 doc,xceb004 item ",l_sel_xceb,   
                 "      USING (SELECT UNIQUE xceb102 memo,xcea101 bill,xcea102 dd,xceb001 doc,xceb004 item,xcea004 yy,xcea005 mm ",l_sel_xceb, 
                 "               FROM xcea_t,xceb_t  ",
#                                 WHERE xceaent = ? AND xceald = ? AND xcea003 = ? AND xcea004 =? AND xcea005 = ? "
                 "               WHERE xceaent = ? AND xceald = ? AND xcea003 = ?  "
  IF g_a = 'Y' THEN LET l_sql27 = l_sql27 CLIPPED," AND xceb004 = ? " END IF
  LET l_sql27 = l_sql27 CLIPPED,"
                                   AND xceaent = xcebent AND xceald = xcebld
                                   AND xceadocno = xcebdocno AND xcea002  =7 ",
               #"                UNION ALL ",
                "                UNION ",
#                "               SELECT UNIQUE xcec102 memo,xcea101 bill,xcea102 dd,xcec001 doc,xcec004 item",l_sel_xcec,  #xcec002 seq       
                "               SELECT UNIQUE xcec102 memo,xcea101 bill,xcea102 dd,xcec001 doc,xcec004 item,xcea004 yy,xcea005 mm ",l_sel_xcec,  #xcec002 seq                               
                "                 FROM xcea_t,xcec_t   ",
#                                 WHERE xceaent = ? AND xceald = ? AND xcea003 = ? AND xcea004 =? AND xcea005 = ? "
                "                WHERE xceaent = ? AND xceald = ? AND xcea003 = ?  "
  IF g_a = 'Y' THEN LET l_sql27 = l_sql27 CLIPPED," AND xcec004 = ? " END IF
  LET l_sql27 = l_sql27 CLIPPED,"
                                   AND xceaent = xcecent AND xceald = xcecld
                                   AND xceadocno = xcecdocno AND xcea002 =7 ) t3
                ON (t3.item = t0.xcck010 AND t0.mark = 2 AND t0.xcck020 IN ('101','301') ",
                    l_xceb_xcck,
                 "  AND t3.yy = t0.xcck004 AND t3.mm = t0.xcck005 ",  #add
                 " ) ",
                 "    WHEN MATCHED THEN ",
                 " UPDATE SET t0.xceb102 = t3.memo,",      
                 "            t0.xcea101 = t3.bill,",
                 "            t0.xcea102 = t3.dd "                
   PREPARE axcq531_merge_tmp17 FROM l_sql27
   IF g_a = 'Y' THEN 
      EXECUTE axcq531_merge_tmp17 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck010,
                                         g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck010      
   ELSE   
      EXECUTE axcq531_merge_tmp17 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,
                                         g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003
   END IF
   IF SQLCA.sqlcode THEN
      LET g_success='N'
      CALL cl_errmsg('','','INS axcq531_tmp_17',SQLCA.sqlcode,1)
      RETURN
   END IF
   FREE axcq531_merge_tmp17
#axct7* 不同类型，不同的资料来源，分开MERGE-----end

#2.2成本调整（axct310） 
   
#   LET l_sql5 = " SELECT '',xcco006,'','',",
#                "        '','','',t3.memo,t3.bill,t3.dd,",  
#                "        0,CASE WHEN SUM(xcco102)>=0 THEN SUM(xcco102) ELSE 0 END,0,CASE WHEN SUM(xcco102)<0 THEN -1*SUM(xcco102) ELSE 0 END,0,0,0 "
#   LET l_sql5 = " INSERT INTO axcq531_tmp ",
#   l_sql5 CLIPPED,l_sel_xcco CLIPPED, ",1,xcco004,xcco005,(xcco004*12+xcco005)   FROM xcck_t t0,xcco_t t2",  #期初摘要先設置標記1
#                "  LEFT JOIN ",
#                "              (SELECT xceb102 memo,xcea101 bill,xcea102 dd,xceb004 item,xcea004 yy,xcea005 mm ",l_sel_xceb,               
#                "                 FROM xcea_t,xceb_t   ",
#                "                WHERE xceaent = ? AND xceald = ? AND xcea003 = ?  "
#   IF g_a = 'Y' THEN LET l_sql5 = l_sql5 CLIPPED," AND xceb004 = ? " END IF
#   LET l_sql5 = l_sql5 CLIPPED,"
#                                   AND xcea002 = '3'
#                                   AND xceaent = xcebent AND xceald = xcebld
#                                   AND xceadocno = xcebdocno 
#                                UNION ",
#                "               SELECT xcec102 memo,xcea101 bill,xcea102 dd,xcec004 item,xcea004 yy,xcea005 mm ",l_sel_xcec,
#                "                 FROM xcea_t,xcec_t
#                                 WHERE xceaent = ? AND xceald = ? AND xcea003 = ? "
#   IF g_a = 'Y' THEN LET l_sql5 = l_sql5 CLIPPED," AND xcec004 = ? " END IF
#   LET l_sql5 = l_sql5 CLIPPED,"
#                                   AND xcea002 = '3'                                 
#                                   AND xceaent = xcecent AND xceald = xcecld
#                                   AND xceadocno = xcecdocno ) t3
#                ON t3.item = t2.xcco006  ",l_xceb_xcco," AND t3.yy = t2.xcco004 AND t3.mm = t2.xcco005 ",
#                "    WHERE xccoent= ? AND xccold=? AND xcco001=? AND xcco003=? ",
#                "      AND xcckent= ? AND xcckld=? AND xcck001=? AND xcck003=?"
#   IF g_a = 'Y' THEN LET l_sql5 = l_sql5 CLIPPED," AND xcco006 = ? AND xcck010 = ? " END IF
#   LET l_sql5 = l_sql5 CLIPPED,
#                " AND t2.xcco004 = t0.xcck004 AND t2.xcco005 = t0.xcck005 ",
#                " AND t2.xcco006 = t0.xcck010 ",l_xcck_xcco,
#                " AND ",g_wc2_table1,l_grp_xcco," ,t3.memo,t3.bill,t3.dd "
#   PREPARE axcq531_ins_tmp4 FROM l_sql5
#   IF g_a = 'Y' THEN
#      EXECUTE axcq531_ins_tmp4 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck010,
#                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck010,
#                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,
#                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,
#                                      g_xcck010,g_xcck010
#   ELSE
#      EXECUTE axcq531_ins_tmp4 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,
#                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,
#                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,
#                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003
#   END IF
   
   
   LET l_sql5 = " SELECT '',xcco006,'','',",
                "        '','','',t3.memo,t3.bill,t3.dd,",  
                "        0,CASE WHEN SUM(xcco102)>=0 THEN SUM(xcco102) ELSE 0 END,0,CASE WHEN SUM(xcco102)<0 THEN -1*SUM(xcco102) ELSE 0 END,0,0,0 "
   LET l_sql5 = " INSERT INTO axcq531_tmp ",
   l_sql5 CLIPPED,l_sel_xcco CLIPPED, ",1,xcco004,xcco005,",
                #to_date('",MDY(xcco005,1,xcco004),"','YYYY-MM-DD'),",
                #to_date(to_char(xcco004,'0000')||to_char(xcco005,'00')||'01','yyyy-mm-dd')
                " TO_DATE(TO_CHAR(xcco004,'0000')||TO_CHAR(xcco005,'00')||'01','YYYY-MM-DD'),",  #年月第一天
                "'00:00:00',(xcco004*12+xcco005)   FROM xcco_t t2",  #期初摘要先設置標記1
                "  LEFT JOIN ",
                "              (SELECT xceb102 memo,xcea101 bill,xcea102 dd,xceb004 item,xcea004 yy,xcea005 mm ",l_sel_xceb,               
                "                 FROM xcea_t,xceb_t   ",
                "                WHERE xceaent = ? AND xceald = ? AND xcea003 = ?  "
   IF g_a = 'Y' THEN LET l_sql5 = l_sql5 CLIPPED," AND xceb004 = ? " END IF
   LET l_sql5 = l_sql5 CLIPPED,"
                                   AND xcea002 = '3'
                                   AND xceaent = xcebent AND xceald = xcebld
                                   AND xceadocno = xcebdocno 
                                UNION ",
                "               SELECT xcec102 memo,xcea101 bill,xcea102 dd,xcec004 item,xcea004 yy,xcea005 mm ",l_sel_xcec,
                "                 FROM xcea_t,xcec_t
                                 WHERE xceaent = ? AND xceald = ? AND xcea003 = ? "
   IF g_a = 'Y' THEN LET l_sql5 = l_sql5 CLIPPED," AND xcec004 = ? " END IF
   LET l_sql5 = l_sql5 CLIPPED,"
                                   AND xcea002 = '3'                                 
                                   AND xceaent = xcecent AND xceald = xcecld
                                   AND xceadocno = xcecdocno ) t3
                ON t3.item = t2.xcco006  ",l_xceb_xcco," AND t3.yy = t2.xcco004 AND t3.mm = t2.xcco005 ",
                "    WHERE xccoent= ? AND xccold=? AND xcco001=? AND xcco003=? "
                #"      AND xcckent= ? AND xcckld=? AND xcck001=? AND xcck003=?"
   IF g_a = 'Y' THEN LET l_sql5 = l_sql5 CLIPPED," AND xcco006 = ?  " END IF
   LET l_sql5 = l_sql5 CLIPPED,
                " AND EXISTS (SELECT 1 FROM xcck_t t0 WHERE t2.xccoent = t0.xcckent ",
                " AND t2.xccold = t0.xcckld AND t2.xcco001 = t0.xcck001 AND t2.xcco003 = t0.xcck003 ",
                " AND t2.xcco004 = t0.xcck004 AND t2.xcco005 = t0.xcck005 ",
                " AND t2.xcco006 = t0.xcck010 ",l_xcck_xcco,
                " AND ",g_wc2_table1," ) ",l_grp_xcco," ,t3.memo,t3.bill,t3.dd "
   PREPARE axcq531_ins_tmp4 FROM l_sql5
   IF g_a = 'Y' THEN
      EXECUTE axcq531_ins_tmp4 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck010,
                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck010,
                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck010
   ELSE
      EXECUTE axcq531_ins_tmp4 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,
                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,
                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003
   END IF   

   IF SQLCA.sqlcode THEN
      LET g_success='N'
      CALL cl_errmsg('','','INS axcq531_tmp_4',SQLCA.sqlcode,1)
      RETURN
   END IF
   FREE axcq531_ins_tmp4



   #2.3结存调整
#   LET l_sql3 = " SELECT '',xccc006,'','',",
#                "        '','','',t3.memo,t3.bill,t3.dd,",  
#                "        0,CASE WHEN SUM(xccc903)>=0 THEN SUM(xccc903) ELSE 0 END,0,CASE WHEN SUM(xccc903)<0 THEN -1*SUM(xccc903) ELSE 0 END,0,0,0 "
#   LET l_sql3 = " INSERT INTO axcq531_tmp ",
#   l_sql3 CLIPPED,l_sel_xccc CLIPPED, ",3,xccc004,xccc005,(xccc004*12+xccc005)   FROM xcck_t t0,xccc_t t1",  #期初摘要先設置標記2
#                "  LEFT JOIN ",
#               #"              (SELECT xceb102 memo,xcea101 bill,xcea102 dd,xceb004 material ",l_sel_xceb,
#                "              (SELECT xceb102 memo,xcea101 bill,xcea102 dd,xceb004 item,xcea004 yy,xcea005 mm ",l_sel_xceb,               
#                "                 FROM xcea_t,xceb_t
#                                 WHERE xceaent = ? AND xceald = ? AND xcea003 = ?  "
#   IF g_a = 'Y' THEN LET l_sql3 = l_sql3 CLIPPED," AND xceb004 = ? " END IF
#   LET l_sql3 = l_sql3 CLIPPED,"
#                                   AND xcea002 = '10'
#                                   AND xceaent = xcebent AND xceald = xcebld
#                                   AND xceadocno = xcebdocno 
#                                UNION ",
#                #               SELECT xcec102 memo,xcea101 bill,xcea102 dd,xcec004 material",l_sel_xcec, 
#                "               SELECT xcec102 memo,xcea101 bill,xcea102 dd,xcec004 item,xcea004 yy,xcea005 mm ",l_sel_xcec,
#                "                 FROM xcea_t,xcec_t
#                                 WHERE xceaent = ? AND xceald = ? AND xcea003 = ? "
#   IF g_a = 'Y' THEN LET l_sql3 = l_sql3 CLIPPED," AND xcec004 = ? " END IF
#   LET l_sql3 = l_sql3 CLIPPED,"
#                                   AND xcea002 = '10'                                 
#                                   AND xceaent = xcecent AND xceald = xcecld
#                                   AND xceadocno = xcecdocno ) t3
#                ON t3.item = t1.xccc006  ",l_xceb_xccc, " AND t3.yy = t1.xccc004 AND t3.mm = t1.xccc005 ", 
#                "    WHERE xcccent= ? AND xcccld=? AND xccc001=? AND xccc003=? ",
#                "      AND xcckent= ? AND xcckld=? AND xcck001=? AND xcck003=?"
#   IF g_a = 'Y' THEN LET l_sql3 = l_sql3 CLIPPED," AND xccc006 = ? AND xcck010 = ? " END IF
#   LET l_sql3 = l_sql3 CLIPPED,
#                " AND t1.xccc004 = t0.xcck004 AND t1.xccc005 = t0.xcck005 ",
#                " AND t1.xccc006 = t0.xcck010 ",l_xcck_xccc,
#                " AND ",l_where_xccc,l_grp_xccc," ,t3.memo,t3.bill,t3.dd "
#   PREPARE axcq531_ins_tmp2 FROM l_sql3
#   IF g_a = 'Y' THEN
#      EXECUTE axcq531_ins_tmp2 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck010,
#                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck010,
#                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,
#                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,
#                                      g_xcck010,g_xcck010
#   ELSE
#      EXECUTE axcq531_ins_tmp2 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,
#                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,
#                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,
#                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003
#   END IF
   LET l_sql3 = " SELECT '',xccc006,'','',",
                "        '','','',t3.memo,t3.bill,t3.dd,",  
                "        0,CASE WHEN SUM(xccc903)>=0 THEN SUM(xccc903) ELSE 0 END,0,CASE WHEN SUM(xccc903)<0 THEN -1*SUM(xccc903) ELSE 0 END,0,0,0 "
   LET l_sql3 = " INSERT INTO axcq531_tmp ",
   l_sql3 CLIPPED,l_sel_xccc CLIPPED, ",3,xccc004,xccc005,
                LAST_DAY(TO_DATE(TO_CHAR(xccc004,'0000')||TO_CHAR(xccc005,'00')||'01','YYYY-MM-DD')),
                '00:00:00',
                (xccc004*12+xccc005)   FROM xccc_t t1",  #期初摘要先設置標記2
                "  LEFT JOIN ",
                "              (SELECT xceb102 memo,xcea101 bill,xcea102 dd,xceb004 item,xcea004 yy,xcea005 mm ",l_sel_xceb,               
                "                 FROM xcea_t,xceb_t
                                 WHERE xceaent = ? AND xceald = ? AND xcea003 = ?  "
   IF g_a = 'Y' THEN LET l_sql3 = l_sql3 CLIPPED," AND xceb004 = ? " END IF
   LET l_sql3 = l_sql3 CLIPPED,"
                                   AND xcea002 = '10'
                                   AND xceaent = xcebent AND xceald = xcebld
                                   AND xceadocno = xcebdocno 
                                UNION ",
                "               SELECT xcec102 memo,xcea101 bill,xcea102 dd,xcec004 item,xcea004 yy,xcea005 mm ",l_sel_xcec,
                "                 FROM xcea_t,xcec_t
                                 WHERE xceaent = ? AND xceald = ? AND xcea003 = ? "
   IF g_a = 'Y' THEN LET l_sql3 = l_sql3 CLIPPED," AND xcec004 = ? " END IF
   LET l_sql3 = l_sql3 CLIPPED,"
                                   AND xcea002 = '10'                                 
                                   AND xceaent = xcecent AND xceald = xcecld
                                   AND xceadocno = xcecdocno ) t3
                ON t3.item = t1.xccc006  ",l_xceb_xccc, " AND t3.yy = t1.xccc004 AND t3.mm = t1.xccc005 ", 
                "    WHERE xcccent= ? AND xcccld=? AND xccc001=? AND xccc003=? "
   IF g_a = 'Y' THEN LET l_sql3 = l_sql3 CLIPPED," AND xccc006 = ?  " END IF
   LET l_sql3 = l_sql3 CLIPPED,
                " AND EXISTS (SELECT 1 FROM xcck_t t0 WHERE t1.xcccent = t0.xcckent ",
                " AND t1.xcccld = t0.xcckld AND t1.xccc001 = t0.xcck001 AND t1.xccc003 = t0.xcck003 ",
                " AND t1.xccc004 = t0.xcck004 AND t1.xccc005 = t0.xcck005 ",
                " AND t1.xccc006 = t0.xcck010 ",l_xcck_xccc,
                " AND ",l_where_xccc," ) ",l_grp_xccc," ,t3.memo,t3.bill,t3.dd "
   PREPARE axcq531_ins_tmp2 FROM l_sql3
   IF g_a = 'Y' THEN
      EXECUTE axcq531_ins_tmp2 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck010,
                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,g_xcck010,
                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck010
   ELSE
      EXECUTE axcq531_ins_tmp2 USING  g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,
                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck003,
                                      g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003
   END IF
   IF SQLCA.sqlcode THEN
      LET g_success='N'
      CALL cl_errmsg('','','INS axcq531_tmp_0',SQLCA.sqlcode,1)
      RETURN
   END IF
   FREE axcq531_ins_tmp2

#期末结存
   LET l_sql4 = " SELECT UNIQUE '',xcck010,'','',",
                "        '','','','','','','','','','',",  
                "        0,0,0 "
   LET l_sql4 = " INSERT INTO axcq531_tmp ",
                l_sql4 CLIPPED,l_sel_xcck CLIPPED, ",4,",g_yy2," , ",g_mm2,
                " ,LAST_DAY(TO_DATE('",MDY(g_mm2,1,g_yy2),"','YYYY-MM-DD')),
                '00:00:00', ",(g_yy2*12+g_mm2),"   FROM xcck_t ",  #期初摘要先設置標記0
                "    WHERE xcckent= ? AND xcckld=? AND xcck001=? AND xcck003=? "
   IF g_a = 'Y' THEN LET l_sql4 = l_sql4 CLIPPED," AND xcck010 = ? " END IF
   LET l_sql4 = l_sql4 CLIPPED,              
                " AND ",g_wc2_table1
   PREPARE axcq531_ins_tmp3 FROM l_sql4
   IF g_a = 'Y' THEN 
      EXECUTE axcq531_ins_tmp3 USING g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck010
   ELSE                                                                                             
      EXECUTE axcq531_ins_tmp3 USING g_enterprise,g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003
   END IF

   IF SQLCA.sqlcode THEN
      LET g_success='N'
      CALL cl_errmsg('','','INS axcq531_tmp_3',SQLCA.sqlcode,1)
      RETURN
   END IF
   FREE axcq531_ins_tmp3

#成本调整和结存调整 0不显示
DELETE FROM axcq531_tmp
 WHERE xcck202 = 0 AND xcck302 = 0 
   AND (mark = 1 OR mark = 3)
#借贷
##UPDATE axcq531_tmp
##   SET dc = SIGN(amt)
## WHERE mark IN (0,2)
#UPDATE axcq531_tmp
#   SET dc = SIGN(amt)
# WHERE mark = 0
#UPDATE axcq531_tmp
#   SET dc = SIGN(xcck202-xcck302)
# WHERE mark IN (1,2) 
##期初结存调整为负，显示成正，用借贷区分
#UPDATE axcq531_tmp
#   SET qty = qty*dc,amt = amt*dc
# WHERE mark = 0   AND dc < 0 
##UPDATE axcq531_tmp
##   SET amt = amt*dc
## WHERE mark = 2   AND dc < 0 
    
END FUNCTION

################################################################################
# Descriptions...: 料件分页显示
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 150909 By fengmy
# Modify.........:
################################################################################
PRIVATE FUNCTION axcq531_browser_fill_1(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   
   LET l_searchcol = "xcckld,xcck001,xcck003,xcck010"
   LET l_wc  = g_wc.trim()
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xcckld,xcck001,xcck003,xcck010 ",
                      "   FROM xcck_t ",
                      "  WHERE xcckent='"||g_enterprise||"' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xcck_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xcckld,xcck001,xcck003,xcck010 ",
                      "   FROM xcck_t ",
                      "  WHERE xcckent='"||g_enterprise||"' AND ",l_wc CLIPPED, cl_sql_add_filter("xcck_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre1 FROM g_sql
      EXECUTE header_cnt_pre1 INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre1
   END IF
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   LET g_error_show = 0
   
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM
      INITIALIZE g_xcck_m.* TO NULL
      CALL g_xcck_d.clear()
      CALL g_browser1.clear()
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1"
      LET g_cnt = g_current_idx
   END IF
   
   #依照t0.xcckld,t0.xcck001,t0.xcck003,t0.xcck004,t0.xcck005 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT t0.xcckld,t0.xcck001,t0.xcck003,'','',t0.xcck010 ",
               "   FROM xcck_t t0 ",
               "  WHERE t0.xcckent='"||g_enterprise||"' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xcck_t")
   
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"xcck_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre1 FROM g_sql
      DECLARE browse_cur1 CURSOR FOR browse_pre1
      
      FOREACH browse_cur1 INTO g_browser[g_cnt].b_xcckld,g_browser[g_cnt].b_xcck001,g_browser[g_cnt].b_xcck003,
                               g_browser[g_cnt].b_xcck004,g_browser[g_cnt].b_xcck005,g_browser1[g_cnt].xcck010
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            EXIT FOREACH
         END IF
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
      END FOREACH
      FREE browse_pre1
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xcckld) THEN
      CALL g_browser.deleteElement(g_cnt)
      CALL g_browser1.deleteElement(g_cnt)
   END IF
   
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_xcck_m.* TO NULL
      CALL g_xcck_d.clear()
      LET g_xcck010 = ''
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   LET g_browser_cnt = g_browser.getLength()
   CALL axcq531_fetch_1('')
   
   #筆數顯示
   LET g_browser_idx = g_current_idx
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axcq531_fetch_1(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING

   CASE p_flag
      WHEN 'F'
         LET g_current_idx = 1
      WHEN 'L'
         LET g_current_idx = g_header_cnt
         LET g_current_idx = g_browser.getLength()
      WHEN 'P'
         IF g_current_idx > 1 THEN
            LET g_current_idx = g_current_idx - 1
         END IF
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF
      WHEN '/'
         IF (NOT g_no_ask) THEN
            CALL cl_set_act_visible("accept,cancel", TRUE)
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl"
            END PROMPT
            
            CALL cl_set_act_visible("accept,cancel", FALSE)
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE
            END IF
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE
   END CASE
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   #CALL axcq531_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart + g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting(g_current_idx,g_detail_cnt)
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xcck_m.xcckld = g_browser[g_current_idx].b_xcckld
   LET g_xcck_m.xcck001 = g_browser[g_current_idx].b_xcck001
   LET g_xcck_m.xcck003 = g_browser[g_current_idx].b_xcck003
   LET g_xcck010 = g_browser1[g_current_idx].xcck010
   
   #重讀DB,因TEMP有不被更新特性
   #160520-00004 by whitney modify start
   LET g_sql = " SELECT UNIQUE t0.xcckcomp,'','',t0.xcck001,t0.xcckld,t0.xcck003, ",
               "(SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=t0.xcckcomp AND ooefl002='"||g_dlang||"') ooefl003, ",
               "(SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=t0.xcckld AND glaal001='"||g_dlang||"') glaal002, ",
               "(SELECT xcatl003 FROM xcatl_t WHERE xcatlent='"||g_enterprise||"' AND xcatl001=t0.xcck003 AND xcatl002='"||g_dlang||"') xcatl003 ",
               "   FROM xcck_t t0 ",
               "  WHERE t0.xcckent='"||g_enterprise||"' AND t0.xcckld = ? AND t0.xcck001 = ? AND t0.xcck003 = ? AND t0.xcck010 = ? "
   #160520-00004 by whitney modify end
   PREPARE axcq531_master_referesh1 FROM g_sql   
   EXECUTE axcq531_master_referesh1 USING g_xcck_m.xcckld,g_xcck_m.xcck001,g_xcck_m.xcck003,g_xcck010
      INTO g_xcck_m.xcckcomp,g_xcck_m.xcck004,g_xcck_m.xcck005,g_xcck_m.xcck001,g_xcck_m.xcckld,
           g_xcck_m.xcck003,g_xcck_m.xcckcomp_desc,g_xcck_m.xcckld_desc,g_xcck_m.xcck003_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = "xcck_t:",SQLERRMESSAGE
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      INITIALIZE g_xcck_m.* TO NULL
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xcck_m_mask_o.* =  g_xcck_m.*
   CALL axcq531_xcck_t_mask()
   LET g_xcck_m_mask_n.* =  g_xcck_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq531_set_act_visible()
   CALL axcq531_set_act_no_visible()
   
   #保存單頭舊值
   LET g_xcck_m_t.* = g_xcck_m.*
   LET g_xcck_m_o.* = g_xcck_m.*
   
   #重新顯示
   CALL axcq531_show()
   
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axcq531_glcc002_desc(p_glcc002,p_ld)
DEFINE p_glcc002  LIKE glcc_t.glcc002
DEFINE p_ld       LIKE xcea_t.xceald
DEFINE l_glaa004  LIKE glaa_t.glaa004

   SELECT glaa004 INTO l_glaa004 FROM glaa_t
    WHERE glaaent = g_enterprise AND glaald = p_ld

    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = p_glcc002
    CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001='"||l_glaa004||"' AND glacl002=? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
    RETURN  g_rtn_fields[1]

END FUNCTION

################################################################################
# Descriptions...: 報表用tmp
# Memo...........:
# Usage..........: CALL axcq531_cre_rep_tmp()
# Input parameter: 
# Return code....: 
# Date & Author..: 2015/12/09 By shiun
# Modify.........:
################################################################################
PRIVATE FUNCTION axcq531_cre_rep_tmp()
DROP TABLE axcq531_rep_tmp;
   CREATE TEMP TABLE axcq531_rep_tmp(
   l_glcc002       LIKE glcc_t.glcc002,
   l_glcc002_desc  LIKE type_t.chr500,
   xcck010         LIKE xcck_t.xcck010,
   l_xcck010_desc  LIKE type_t.chr500,
   l_xcck010_desc1 LIKE type_t.chr500,
   xcck002         LIKE xcck_t.xcck002,
   l_xcck002_desc  LIKE type_t.chr500,
   xcck011         LIKE xcck_t.xcck011,
   xcck017         LIKE xcck_t.xcck017,
   l_xcbb005       LIKE xcbb_t.xcbb005,
   l_xcck020_desc  LIKE type_t.chr500,
   l_xcck055_desc  LIKE type_t.chr500,
   xcck006         LIKE xcck_t.xcck006,
   xcck007         LIKE xcck_t.xcck007,
   xcck008         LIKE xcck_t.xcck008,
   xcck013         LIKE xcck_t.xcck013,
   l_xceb102       LIKE xceb_t.xceb102,
   l_xcea101       LIKE xcea_t.xcea101,
   l_xcea102       LIKE xcea_t.xcea102,
   xcck201         LIKE xcck_t.xcck201,
   xcck202         LIKE xcck_t.xcck202,
   xcck301         LIKE xcck_t.xcck301,
   xcck302         LIKE xcck_t.xcck302,
   l_dc            LIKE type_t.chr500,
   l_qty           LIKE type_t.num20_6,
   l_amt           LIKE type_t.num20_6,
   xcckcomp        LIKE xcck_t.xcckcomp,
   l_xcckcomp_desc LIKE type_t.chr500,
   xcckld          LIKE xcck_t.xcckld,
   l_xcckld_desc   LIKE type_t.chr500,
   xcck004         LIKE xcck_t.xcck004,
   xcck005         LIKE xcck_t.xcck005,
   l_xcck004_e     LIKE xcck_t.xcck004,
   l_xcck005_e     LIKE xcck_t.xcck005,
   xcck001         LIKE xcck_t.xcck001,
   l_xcck001_desc  LIKE type_t.chr500,
   xcck003         LIKE xcck_t.xcck003,
   l_xcck003_desc  LIKE type_t.chr500,
   l_key           LIKE type_t.chr1000,
   l_count         LIKE type_t.num5
);
END FUNCTION

################################################################################
# Descriptions...: 報表用ins_tmp
# Memo...........:
# Usage..........: CALL axcq531_ins_rep_tmp()
# Input parameter: 
# Return code....: 
# Date & Author..: 2015/12/09 By shiun
# Modify.........:
################################################################################
PRIVATE FUNCTION axcq531_ins_rep_tmp()
DEFINE sr           RECORD
   l_glcc002       LIKE glcc_t.glcc002,
   l_glcc002_desc  LIKE type_t.chr500,
   xcck010         LIKE xcck_t.xcck010,
   l_xcck010_desc  LIKE type_t.chr500,
   l_xcck010_desc1 LIKE type_t.chr500,
   xcck002         LIKE xcck_t.xcck002,
   l_xcck002_desc  LIKE type_t.chr500,
   xcck011         LIKE xcck_t.xcck011,
   xcck017         LIKE xcck_t.xcck017,
   l_xcbb005       LIKE xcbb_t.xcbb005,
   l_xcck020_desc  LIKE type_t.chr500,
   l_xcck055_desc  LIKE type_t.chr500,
   xcck006         LIKE xcck_t.xcck006,
   xcck007         LIKE xcck_t.xcck007,
   xcck008         LIKE xcck_t.xcck008,
   xcck013         LIKE xcck_t.xcck013,
   l_xceb102       LIKE xceb_t.xceb102,
   l_xcea101       LIKE xcea_t.xcea101,
   l_xcea102       LIKE xcea_t.xcea102,
   xcck201         LIKE xcck_t.xcck201,
   xcck202         LIKE xcck_t.xcck202,
   xcck301         LIKE xcck_t.xcck301,
   xcck302         LIKE xcck_t.xcck302,
   l_dc            LIKE type_t.chr500,
   l_qty           LIKE type_t.num20_6,
   l_amt           LIKE type_t.num20_6,
   xcckcomp        LIKE xcck_t.xcckcomp,
   l_xcckcomp_desc LIKE type_t.chr500,
   xcckld          LIKE xcck_t.xcckld,
   l_xcckld_desc   LIKE type_t.chr500,
   xcck004         LIKE xcck_t.xcck004,
   xcck005         LIKE xcck_t.xcck005,
   l_xcck004_e     LIKE xcck_t.xcck004,
   l_xcck005_e     LIKE xcck_t.xcck005,
   xcck001         LIKE xcck_t.xcck001,
   l_xcck001_desc  LIKE type_t.chr500,
   xcck003         LIKE xcck_t.xcck003,
   l_xcck003_desc  LIKE type_t.chr500,
   l_key           LIKE type_t.chr1000,
   l_count         LIKE type_t.num5
       END RECORD
   DEFINE l_cnt1   LIKE type_t.num5
   DEFINE l_count  LIKE type_t.num5
   
   LET l_count = g_xcck_d.getLength()
   FOR l_cnt1 = 1 TO l_count
      
      LET sr.xcck004  = g_yy1
      LET sr.xcck001  = g_xcck_m.xcck001
      LET sr.xcckld   = g_xcck_m.xcckld
      LET sr.xcck005  = g_mm1
      LET sr.xcck003  = g_xcck_m.xcck003
      
      EXECUTE axcq531_master_referesh USING sr.xcckld,sr.xcck001,sr.xcck003,sr.xcck004,sr.xcck005 
         INTO sr.xcckcomp,sr.xcck004,sr.xcck005,sr.xcck001,sr.xcckld,sr.xcck003,
              sr.l_xcckcomp_desc,sr.l_xcckld_desc,sr.l_xcck003_desc
       
      IF cl_null(g_yy2) AND cl_null(g_mm2) THEN
         LET sr.l_xcck004_e  = sr.xcck004
         LET sr.l_xcck005_e  = sr.xcck005
      ELSE
         LET sr.l_xcck004_e  = g_yy2
         LET sr.l_xcck005_e  = g_mm2
      END IF

      LET sr.l_glcc002 = g_xcck_d[l_cnt1].glcc002
      LET sr.l_glcc002_desc = g_xcck_d[l_cnt1].glcc002_desc
      LET sr.xcck010 = g_xcck_d[l_cnt1].xcck010
      LET sr.l_xcck010_desc = g_xcck_d[l_cnt1].xcck010_desc
      LET sr.l_xcck010_desc1 = g_xcck_d[l_cnt1].xcck010_desc_desc
      LET sr.xcck002 = g_xcck_d[l_cnt1].xcck002
      LET sr.l_xcck002_desc = g_xcck_d[l_cnt1].xcck002_desc
      LET sr.xcck011 = g_xcck_d[l_cnt1].xcck011
      LET sr.xcck017 = g_xcck_d[l_cnt1].xcck017
      LET sr.l_xcbb005 = g_xcck_d[l_cnt1].xcbb005
      LET sr.l_xcck020_desc = g_xcck_d[l_cnt1].xcck020
      LET sr.l_xcck055_desc = g_xcck_d[l_cnt1].xcck055
      LET sr.xcck006 = g_xcck_d[l_cnt1].xcck006
      LET sr.xcck007 = g_xcck_d[l_cnt1].xcck007
      LET sr.xcck008 = g_xcck_d[l_cnt1].xcck008
      LET sr.xcck013 = g_xcck_d[l_cnt1].xcck013
      LET sr.l_xceb102 = g_xcck_d[l_cnt1].xceb102
      LET sr.l_xcea101 = g_xcck_d[l_cnt1].xcea101
      LET sr.l_xcea102 = g_xcck_d[l_cnt1].xcea102
      LET sr.xcck201 = g_xcck_d[l_cnt1].xcck201
      LET sr.xcck202 = g_xcck_d[l_cnt1].xcck202
      LET sr.xcck301 = g_xcck_d[l_cnt1].xcck301
      LET sr.xcck302 = g_xcck_d[l_cnt1].xcck302
      LET sr.l_dc = g_xcck_d[l_cnt1].dc
      LET sr.l_qty = g_xcck_d[l_cnt1].qty
      LET sr.l_amt = g_xcck_d[l_cnt1].amt
      LET sr.l_count = l_cnt1
      IF g_xcck_m.a = 'Y' THEN
         LET sr.l_key = sr.l_glcc002 ,"-",sr.xcck010
      ELSE
         LET sr.l_key = sr.l_glcc002
      END IF
      INSERT INTO axcq531_rep_tmp (l_glcc002,l_glcc002_desc,xcck010,l_xcck010_desc,l_xcck010_desc1,xcck002,l_xcck002_desc,
                                   xcck011,xcck017,l_xcbb005,l_xcck020_desc,l_xcck055_desc,xcck006,xcck007,xcck008,xcck013,
                                   l_xceb102,l_xcea101,l_xcea102,xcck201,xcck202,xcck301,xcck302,l_dc,l_qty,l_amt,xcckcomp,
                                   l_xcckcomp_desc,xcckld,l_xcckld_desc,xcck004,xcck005,l_xcck004_e,l_xcck005_e,xcck001,
                                   l_xcck001_desc,xcck003,l_xcck003_desc,l_key,l_count)
                  VALUES (sr.l_glcc002,sr.l_glcc002_desc,sr.xcck010,sr.l_xcck010_desc,sr.l_xcck010_desc1,sr.xcck002,
                          sr.l_xcck002_desc,sr.xcck011,sr.xcck017,sr.l_xcbb005,sr.l_xcck020_desc,sr.l_xcck055_desc,
                          sr.xcck006,sr.xcck007,sr.xcck008,sr.xcck013,sr.l_xceb102,sr.l_xcea101,sr.l_xcea102,sr.xcck201,
                          sr.xcck202,sr.xcck301,sr.xcck302,sr.l_dc,sr.l_qty,sr.l_amt,sr.xcckcomp,sr.l_xcckcomp_desc,
                          sr.xcckld,sr.l_xcckld_desc,sr.xcck004,sr.xcck005,sr.l_xcck004_e,sr.l_xcck005_e,sr.xcck001,
                          sr.l_xcck001_desc,sr.xcck003,sr.l_xcck003_desc,sr.l_key,sr.l_count)
   END FOR
END FUNCTION

################################################################################
# Descriptions...: 報表用查詢
# Memo...........:
# Usage..........: CALL axcq531_rep_query()
# Input parameter: 
# Return code....: 
# Date & Author..: 2015/12/9 By shiun
# Modify.........:
################################################################################
PRIVATE FUNCTION axcq531_rep_query()
   DEFINE ls_wc STRING

   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xcck_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count

   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL axcq531_browser_fill(g_wc)
      CALL axcq531_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL axcq531_browser_fill("F")
   
   #儲存WC資訊
#   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL axcq531_fetch("F") 
   END IF
   
   CALL axcq531_idx_chk()
   
   LET g_wc_filter = ""
END FUNCTION

 
{</section>}
 
