#該程式未解開Section, 採用最新樣板產出!
{<section id="axct304.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0009(2014-11-10 15:59:19), PR版次:0009(2016-12-05 11:05:10)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000110
#+ Filename...: axct304
#+ Description: 期初庫存數量成本次要素開帳作業
#+ Creator....: 03297(2014-08-18 15:32:40)
#+ Modifier...: 03297 -SD/PR- 02749
 
{</section>}
 
{<section id="axct304.global" >}
#應用 i07 樣板自動產生(Version:49)
#add-point:填寫註解說明 name="global.memo"
#160318-00025#12    2016/04/26 By 07675    將重複內容的錯誤訊息置換為公用錯誤訊息(r.v）
#160802-00020#5     2016/10/12 By 02040    增加帳套權限管控、法人權限管控
#161013-00051#1     2016/10/18 By shiun    整批調整據點組織開窗
#161109-00085#22    2016/11/16 By 08993    整批調整系統星號寫法
#160824-00007#222   2016/12/02 By lori     修正舊值備份寫法
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"
 
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xcda_m        RECORD
       xcdacomp LIKE xcda_t.xcdacomp, 
   xcdacomp_desc LIKE type_t.chr80, 
   xcda004 LIKE xcda_t.xcda004, 
   xcda005 LIKE xcda_t.xcda005, 
   xcdald LIKE xcda_t.xcdald, 
   xcdald_desc LIKE type_t.chr80, 
   xcda003 LIKE xcda_t.xcda003, 
   xcda003_desc LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xcda_d        RECORD
       xcda001 LIKE xcda_t.xcda001, 
   xcda002 LIKE xcda_t.xcda002, 
   xcda002_desc LIKE type_t.chr500, 
   xcda006 LIKE xcda_t.xcda006, 
   xcda007 LIKE xcda_t.xcda007, 
   xcda006_desc LIKE type_t.chr500, 
   xcda006_desc_desc LIKE type_t.chr500, 
   imag014 LIKE type_t.chr10, 
   xcda008 LIKE xcda_t.xcda008, 
   xcda009 LIKE xcda_t.xcda009, 
   xcda009_desc LIKE type_t.chr500, 
   xcda101 LIKE xcda_t.xcda101, 
   xcda102 LIKE xcda_t.xcda102
       END RECORD
PRIVATE TYPE type_g_xcda2_d RECORD
       xcda001 LIKE xcda_t.xcda001, 
   xcda002 LIKE xcda_t.xcda002, 
   xcda006 LIKE xcda_t.xcda006, 
   xcda007 LIKE xcda_t.xcda007, 
   xcda008 LIKE xcda_t.xcda008, 
   xcda009 LIKE xcda_t.xcda009, 
   xcdaownid LIKE xcda_t.xcdaownid, 
   xcdaownid_desc LIKE type_t.chr500, 
   xcdaowndp LIKE xcda_t.xcdaowndp, 
   xcdaowndp_desc LIKE type_t.chr500, 
   xcdacrtid LIKE xcda_t.xcdacrtid, 
   xcdacrtid_desc LIKE type_t.chr500, 
   xcdacrtdp LIKE xcda_t.xcdacrtdp, 
   xcdacrtdp_desc LIKE type_t.chr500, 
   xcdacrtdt DATETIME YEAR TO SECOND, 
   xcdamodid LIKE xcda_t.xcdamodid, 
   xcdamodid_desc LIKE type_t.chr500, 
   xcdamoddt DATETIME YEAR TO SECOND, 
   xcdacnfid LIKE xcda_t.xcdacnfid, 
   xcdacnfid_desc LIKE type_t.chr500, 
   xcdacnfdt DATETIME YEAR TO SECOND, 
   xcdapstid LIKE xcda_t.xcdapstid, 
   xcdapstid_desc LIKE type_t.chr500, 
   xcdapstdt LIKE xcda_t.xcdapstdt
       END RECORD
 
 
#add-point:自定義模組變數(Module Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
 TYPE type_g_xcda3_d        RECORD
       xcda001_3 LIKE xcda_t.xcda001, 
   xcda002_3 LIKE xcda_t.xcda002, 
   xcda002_3_desc LIKE type_t.chr500, 
   xcda006_3 LIKE xcda_t.xcda006, 
   xcda007_3 LIKE xcda_t.xcda007, 
   xcda006_3_desc LIKE type_t.chr500, 
   xcda006_3_desc_desc LIKE type_t.chr500, 
   imag014_3 LIKE type_t.chr10, 
   xcda008_3 LIKE xcda_t.xcda008, 
   xcda009_3 LIKE xcda_t.xcda009, 
   xcda009_3_desc LIKE type_t.chr500, 
   xcda101_3 LIKE xcda_t.xcda101, 
   xcda102_3 LIKE xcda_t.xcda102
       END RECORD
 TYPE type_g_xcda4_d        RECORD
   xcda001_4 LIKE xcda_t.xcda001, 
   xcda002_4 LIKE xcda_t.xcda002, 
   xcda002_4_desc LIKE type_t.chr500, 
   xcda006_4 LIKE xcda_t.xcda006, 
   xcda007_4 LIKE xcda_t.xcda007, 
   xcda006_4_desc LIKE type_t.chr500, 
   xcda006_4_desc_desc LIKE type_t.chr500, 
   imag014_4 LIKE type_t.chr10, 
   xcda008_4 LIKE xcda_t.xcda008, 
   xcda009_4 LIKE xcda_t.xcda009, 
   xcda009_4_desc LIKE type_t.chr500, 
   xcda101_4 LIKE xcda_t.xcda101, 
   xcda102_4 LIKE xcda_t.xcda102
       END RECORD
DEFINE g_xcda3_d          DYNAMIC ARRAY OF type_g_xcda3_d
DEFINE g_xcda3_d_t        type_g_xcda3_d
DEFINE g_xcda3_d_o        type_g_xcda3_d
DEFINE g_xcda4_d          DYNAMIC ARRAY OF type_g_xcda4_d
DEFINE g_xcda4_d_t        type_g_xcda4_d
DEFINE g_xcda4_d_o        type_g_xcda4_d
DEFINE g_glaa015          LIKE glaa_t.glaa015
DEFINE g_glaa019          LIKE glaa_t.glaa019
DEFINE g_glaa001          LIKE glaa_t.glaa001
DEFINE g_glaa003          LIKE glaa_t.glaa003
DEFINE g_glaa016          LIKE glaa_t.glaa016
DEFINE g_glaa018          LIKE glaa_t.glaa018
DEFINE g_glaa020          LIKE glaa_t.glaa020
DEFINE g_glaa022          LIKE glaa_t.glaa022
DEFINE g_glaa025          LIKE glaa_t.glaa025
DEFINE g_bdate            LIKE glav_t.glav004
DEFINE g_edate            LIKE glav_t.glav004
DEFINE g_sum_sql          STRING
TYPE type_g_xcda5_d        RECORD
   xcdaent   LIKE xcda_t.xcdaent,
   xcdald    LIKE xcda_t.xcdald,
   xcdacomp  LIKE xcda_t.xcdacomp,   
   xcda001   LIKE xcda_t.xcda001, 
   xcda002   LIKE xcda_t.xcda002, 
   xcda003   LIKE xcda_t.xcda003,
   xcda004   LIKE xcda_t.xcda004, 
   xcda005   LIKE xcda_t.xcda005, 
   xcda006   LIKE xcda_t.xcda006,
   xcda007   LIKE xcda_t.xcda007, 
   xcda008   LIKE xcda_t.xcda008, 
   xcda009   LIKE xcda_t.xcda009,
   xcda101   LIKE xcda_t.xcda101, 
   xcda102   LIKE xcda_t.xcda102,
   xcda102_1 LIKE xcda_t.xcda102,
   xcda102_2 LIKE xcda_t.xcda102
   END RECORD
TYPE type_g_xcda_f        RECORD
        xcdacomp LIKE xcda_t.xcdacomp, 
        xcdacomp_desc LIKE type_t.chr80, 
        xcdald LIKE xcda_t.xcdald, 
        xcdald_desc LIKE type_t.chr80, 
        format LIKE type_t.chr80, 
        char LIKE type_t.chr80, 
        dir LIKE type_t.chr80
       END RECORD
DEFINE g_xcda_f        type_g_xcda_f
DEFINE g_xcda_f_t      type_g_xcda_f
DEFINE g_xcda5_d          DYNAMIC ARRAY OF type_g_xcda5_d
DEFINE w        ui.Window
DEFINE f        ui.Form
DEFINE page     om.DomNode
TYPE   type_g_xcda_s        RECORD
       name LIKE type_t.chr80, 
       dir LIKE type_t.chr80
                            END RECORD
DEFINE g_xcda_s        type_g_xcda_s
DEFINE  g_hidden        DYNAMIC ARRAY OF LIKE type_t.chr1,
        g_ifchar        DYNAMIC ARRAY OF LIKE type_t.chr1,
        g_mask          DYNAMIC ARRAY OF LIKE type_t.chr1,
        g_quote         STRING
DEFINE xls_name        STRING 
DEFINE  l_channel       base.Channel,
        l_str           STRING,
        l_cmd           STRING,
        l_field_name    STRING,
        cnt_table       LIKE type_t.num10
DEFINE  g_sheet         STRING 
DEFINE  ms_codeset      STRING
DEFINE  ms_locale       STRING
DEFINE  tsconv_cmd      STRING
DEFINE  l_win_name      STRING,              
        cnt_header      LIKE type_t.num10
DEFINE  g_sort          RECORD
         column         LIKE type_t.num5,    #sortColumn
         type           STRING,                 #sortType:排序方式:asc/desc
         name           STRING                  #欄位代號
                        END RECORD
DEFINE g_bufstr         base.StringBuffer  
DEFINE g_para_data        LIKE type_t.chr80     #采用成本域否
DEFINE g_today          DATETIME YEAR TO SECOND
DEFINE g_wc3            STRING
#160802-00020#5-s-add
DEFINE g_wc_cs_ld            STRING
DEFINE g_wc_cs_comp          STRING
#160802-00020#5-e-add
#end add-point
 
 
#模組變數(Module Variables)
DEFINE g_xcda_m          type_g_xcda_m
DEFINE g_xcda_m_t        type_g_xcda_m
DEFINE g_xcda_m_o        type_g_xcda_m
DEFINE g_xcda_m_mask_o   type_g_xcda_m #轉換遮罩前資料
DEFINE g_xcda_m_mask_n   type_g_xcda_m #轉換遮罩後資料
 
   DEFINE g_xcda004_t LIKE xcda_t.xcda004
DEFINE g_xcda005_t LIKE xcda_t.xcda005
DEFINE g_xcdald_t LIKE xcda_t.xcdald
DEFINE g_xcda003_t LIKE xcda_t.xcda003
 
 
DEFINE g_xcda_d          DYNAMIC ARRAY OF type_g_xcda_d
DEFINE g_xcda_d_t        type_g_xcda_d
DEFINE g_xcda_d_o        type_g_xcda_d
DEFINE g_xcda_d_mask_o   DYNAMIC ARRAY OF type_g_xcda_d #轉換遮罩前資料
DEFINE g_xcda_d_mask_n   DYNAMIC ARRAY OF type_g_xcda_d #轉換遮罩後資料
DEFINE g_xcda2_d   DYNAMIC ARRAY OF type_g_xcda2_d
DEFINE g_xcda2_d_t type_g_xcda2_d
DEFINE g_xcda2_d_o type_g_xcda2_d
DEFINE g_xcda2_d_mask_o   DYNAMIC ARRAY OF type_g_xcda2_d #轉換遮罩前資料
DEFINE g_xcda2_d_mask_n   DYNAMIC ARRAY OF type_g_xcda2_d #轉換遮罩後資料
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_xcdald LIKE xcda_t.xcdald,
      b_xcda003 LIKE xcda_t.xcda003,
      b_xcda004 LIKE xcda_t.xcda004,
      b_xcda005 LIKE xcda_t.xcda005
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num10             #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10             #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10             #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10             #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10             #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10             #Browser目前所在筆數(暫存用)
DEFINE g_current_page        LIKE type_t.num10             #目前所在頁數
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num10             #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入(僅用於三階)
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="axct304.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:作業初始化 name="main.init"
   #160802-00020#5-s-add
   CALL s_fin_create_account_center_tmp()                      #展組織下階成員所需之暫存檔 
   CALL s_fin_azzi800_sons_query(g_today)
   CALL s_fin_account_center_ld_str() RETURNING g_wc_cs_ld
   CALL s_fin_get_wc_str(g_wc_cs_ld)  RETURNING g_wc_cs_ld
   CALL s_axc_get_authcomp() RETURNING g_wc_cs_comp            #抓取使用者有拜訪權限據點的對應法人  
   #160802-00020#5-e-add 
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   LET g_sum_sql = " SELECT xcda001,xcda002,xcda006,xcda007,xcda008", 
                      " FROM xcda_t",
                      " WHERE xcdaent= ? AND xcdald=? AND xcda003=? AND xcda004=? AND xcda005=? "
   DECLARE axct304_sum_cs CURSOR FROM g_sum_sql
   
   LET g_sql = " SELECT xcda009", 
                      " FROM xcda_t",
                      " WHERE xcdaent= ? AND xcdald=? AND xcda003=? AND xcda004=? AND xcda005=? AND xcda001 = ? "
   DECLARE axct304_xcda009_cs CURSOR FROM g_sql
   #end add-point
   LET g_forupd_sql = " SELECT xcdacomp,'',xcda004,xcda005,xcdald,'',xcda003,''", 
                      " FROM xcda_t",
                      " WHERE xcdaent= ? AND xcdald=? AND xcda003=? AND xcda004=? AND xcda005=? FOR  
                          UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axct304_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.xcdacomp,t0.xcda004,t0.xcda005,t0.xcdald,t0.xcda003,t1.ooefl003 , 
       t2.glaal002 ,t3.xcatl003",
               " FROM xcda_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.xcdacomp AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN glaal_t t2 ON t2.glaalent="||g_enterprise||" AND t2.glaalld=t0.xcdald AND t2.glaal001='"||g_dlang||"' ",
               " LEFT JOIN xcatl_t t3 ON t3.xcatlent="||g_enterprise||" AND t3.xcatl001=t0.xcda003 AND t3.xcatl002='"||g_dlang||"' ",
 
               " WHERE t0.xcdaent = " ||g_enterprise|| " AND t0.xcdald = ? AND t0.xcda003 = ? AND t0.xcda004 = ? AND t0.xcda005 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE axct304_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
 
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axct304 WITH FORM cl_ap_formpath("axc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axct304_init()   
 
      #進入選單 Menu (="N")
      CALL axct304_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axct304
      
   END IF 
   
   CLOSE axct304_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="axct304.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axct304_init()
   #add-point:init段define name="init.define_customerization"
   
   #end add-point   
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
      CALL cl_set_combo_scc('xcda001','8914') 
 
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化 name="init.init"
   CALL cl_set_combo_scc('xcda001','8914') 
   CALL cl_set_combo_scc('xcda001_1','8914')
   CALL cl_set_combo_scc('xcda001_2','8914')
   CALL cl_set_combo_scc('xcda001_3','8914')  
   CALL cl_set_combo_scc('xcda001_4','8914')   
   LET g_today=cl_get_today()  
   CALL cl_set_comp_visible('xcda002,xcda002_desc,xcda002_3,xcda002_3_desc,xcda002_4,xcda002_4_desc',FALSE)    
   #end add-point
   
   CALL axct304_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="axct304.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axct304_ui_dialog()
   #add-point:ui_dialog段define name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE la_param  RECORD
          prog                  STRING,
          actionid              STRING,
          background            LIKE type_t.chr1,
          param                 DYNAMIC ARRAY OF STRING
                                END RECORD
   DEFINE ls_js                 STRING
   DEFINE li_idx                LIKE type_t.num10
   DEFINE ls_wc                 STRING
   DEFINE lb_first              BOOLEAN
   DEFINE l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   DEFINE l_success       LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE
      
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xcda_m.* TO NULL
         CALL g_xcda_d.clear()
         CALL g_xcda2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axct304_init()
      END IF
 
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_xcda_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               #顯示單身筆數
               CALL axct304_idx_chk()
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               CALL axct304_ui_detailshow()
               
               #add-point:page1自定義行為 name="ui_dialog.body.before_row"
               
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
    
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_xcda2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_curr_diag = ui.DIALOG.getCurrent()
               CALL axct304_idx_chk()
               CALL axct304_ui_detailshow()
               
               #add-point:page1自定義行為 name="ui_dialog.body2.before_row"
               
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'     
               LET g_current_page = 2
            
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         DISPLAY ARRAY g_xcda3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_curr_diag = ui.DIALOG.getCurrent()
               CALL axct304_idx_chk()
               CALL axct304_ui_detailshow()
               
               #add-point:page1自定義行為

               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'     
               LET g_current_page = 3
            
            
         
            #add-point:page3自定義行為

            #end add-point
         
         END DISPLAY
         
         DISPLAY ARRAY g_xcda4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               LET g_curr_diag = ui.DIALOG.getCurrent()
               CALL axct304_idx_chk()
               CALL axct304_ui_detailshow()
               
               #add-point:page1自定義行為

               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'     
               LET g_current_page = 4
            
            
         
            #add-point:page4自定義行為

            #end add-point
         
         END DISPLAY
         #end add-point
         
         
         BEFORE DIALOG
            #先填充browser資料
            CALL axct304_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axct304_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axct304_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         
    
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axct304_fetch('F')
            LET g_current_row = g_current_idx         
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct304_idx_chk()
            LET g_action_choice = ""
          
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axct304_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct304_idx_chk()
            LET g_action_choice = ""
          
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axct304_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct304_idx_chk()
            LET g_action_choice = ""
        
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axct304_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct304_idx_chk()
            LET g_action_choice = ""
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axct304_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct304_idx_chk()
            LET g_action_choice = ""
            
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xcda_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_xcda2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xcda001
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axct304_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axct304_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLEAR FORM
               ELSE
                  CALL axct304_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axct304_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axct304_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axct304_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               &include "erp/axc/axct304_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               
               #END add-point
               &include "erp/axc/axct304_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axct304_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axct300
            LET g_action_choice="axct300"
            IF cl_auth_chk_act("axct300") THEN
               
               #add-point:ON ACTION axct300 name="menu.axct300"
               INITIALIZE la_param.* TO NULL
               LET la_param.prog = "axct300"
               LET la_param.param[1] = g_xcda_m.xcdald
               LET la_param.param[2] = g_xcda_m.xcda003
               LET la_param.param[3] = g_xcda_m.xcda004
               LET la_param.param[4] = g_xcda_m.xcda005               
               LET ls_js = util.JSON.stringify(la_param)
               DISPLAY ls_js
               CALL cl_cmdrun(ls_js)
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_axct304_s01
            LET g_action_choice="open_axct304_s01"
            IF cl_auth_chk_act("open_axct304_s01") THEN
               
               #add-point:ON ACTION open_axct304_s01 name="menu.open_axct304_s01"
               CALL axct304_s01()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_axct304_s02
            LET g_action_choice="open_axct304_s02"
            IF cl_auth_chk_act("open_axct304_s02") THEN
               
               #add-point:ON ACTION open_axct304_s02 name="menu.open_axct304_s02"
               CALL axct304_s02() RETURNING l_success
               IF l_success = TRUE THEN
                  CALL s_transaction_end('Y','1')
                  ERROR "INSERT O.K"
               ELSE
                  CALL s_transaction_end('N','1')
               END IF
               CALL axct304_show()
               #END add-point
               
            END IF
 
 
 
 
         
         
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL axct304_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axct304_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axct304_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
         CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.browser_search" >}
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axct304_browser_search(p_type)
   #add-point:browser_search段define name="browser_search.define_customerization"
   
   #end add-point   
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_search.define"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axct304.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axct304_browser_fill(ps_page_action)
   #add-point:browser_fill段define name="browser_fill.define_customerization"
   
   #end add-point   
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="browser_fill.before_browser_fill"
   
   #end add-point    
 
   LET l_searchcol = "xcdald,xcda003,xcda004,xcda005"
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT xcdald ",
                      ", xcda003 ",
                      ", xcda004 ",
                      ", xcda005 ",
 
                      " FROM xcda_t ",
                      " ",
                      " ", 
 
 
 
                      " WHERE xcdaent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xcda_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT xcdald ",
                      ", xcda003 ",
                      ", xcda004 ",
                      ", xcda005 ",
 
                      " FROM xcda_t ",
                      " ",
                      " ", 
 
 
                      " WHERE xcdaent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("xcda_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前 name="browser_fill.before_count"
  #160802-00020#5-s-add  
   #---增加帳套權限控管
   IF NOT cl_null(g_wc_cs_ld) THEN
      LET l_sub_sql = l_sub_sql , " AND xcdald IN ",g_wc_cs_ld
   END IF
   #---增加法人過濾條件
   IF NOT cl_null(g_wc_cs_comp) THEN
      LET l_sub_sql = l_sub_sql," AND xcdacomp IN ",g_wc_cs_comp
   END IF  
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
  #160802-00020#5-e-add
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt 
         LET g_errparam.code   = 9035
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   LET g_error_show = 0
 
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xcda_m.* TO NULL
      CALL g_xcda_d.clear()        
      CALL g_xcda2_d.clear() 
 
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xcdald,t0.xcda003,t0.xcda004,t0.xcda005 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT t0.xcdald,t0.xcda003,t0.xcda004,t0.xcda005",
                " FROM xcda_t t0",
                #" ",
                " ",
 
 
 
                
                " WHERE t0.xcdaent = " ||g_enterprise|| " AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("xcda_t")
 
   #add-point:browser_fill,sql_rank前 name="browser_fill.before_sql_rank"
   #160802-00020#5-s-add
   #---增加帳套權限控管
   IF NOT cl_null(g_wc_cs_ld) THEN
      LET g_sql = g_sql , " AND t0.xcdald IN ",g_wc_cs_ld
   END IF
   #---增加法人過濾條件
   IF NOT cl_null(g_wc_cs_comp) THEN
      LET g_sql = g_sql," AND t0.xcdacomp IN ",g_wc_cs_comp
   END IF  
   #160802-00020#5-e-add
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前 name="browser_fill.before_pre"
   
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"xcda_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_xcdald,g_browser[g_cnt].b_xcda003,g_browser[g_cnt].b_xcda004, 
          g_browser[g_cnt].b_xcda005 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
         
         
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point  
      
         
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
      END FOREACH
      FREE browse_pre
   END IF
 
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xcdald) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_xcda_m.* TO NULL
      CALL g_xcda_d.clear()
      CALL g_xcda2_d.clear()
 
      #add-point:browser_fill段after_clear name="browser_fill.after_clear"
      
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   LET g_browser_cnt = g_browser.getLength()
   CALL axct304_fetch('')
   
   #筆數顯示
   LET g_browser_idx = g_current_idx 
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axct304_ui_headershow()
   #add-point:ui_headershow段define name="ui_headershow.define_customerization"
   
   #end add-point    
   #add-point:ui_headershow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_xcda_m.xcdald = g_browser[g_current_idx].b_xcdald   
   LET g_xcda_m.xcda003 = g_browser[g_current_idx].b_xcda003   
   LET g_xcda_m.xcda004 = g_browser[g_current_idx].b_xcda004   
   LET g_xcda_m.xcda005 = g_browser[g_current_idx].b_xcda005   
 
   EXECUTE axct304_master_referesh USING g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcda004,g_xcda_m.xcda005 INTO g_xcda_m.xcdacomp, 
       g_xcda_m.xcda004,g_xcda_m.xcda005,g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcdacomp_desc,g_xcda_m.xcdald_desc, 
       g_xcda_m.xcda003_desc
   CALL axct304_show()
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axct304_ui_detailshow()
   #add-point:ui_detailshow段define name="ui_detailshow.define_customerization"
   
   #end add-point
   #add-point:ui_detailshow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_detailshow.before"
   
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
      #add-point:ui_detailshow段more name="ui_detailshow.more"
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axct304_ui_browser_refresh()
   #add-point:ui_browser_refresh段define name="ui_browser_refresh.define_customerization"
   
   #end add-point   
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xcdald = g_xcda_m.xcdald 
         AND g_browser[l_i].b_xcda003 = g_xcda_m.xcda003 
         AND g_browser[l_i].b_xcda004 = g_xcda_m.xcda004 
         AND g_browser[l_i].b_xcda005 = g_xcda_m.xcda005 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axct304_construct()
   #add-point:cs段define name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
   
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_xcda_m.* TO NULL
   CALL g_xcda_d.clear()
   CALL g_xcda2_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外 name="cs.head.before"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xcdacomp,xcda004,xcda005,xcdald,xcda003
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.head.before_construct"
            
            #end add-point 
            
                 #Ctrlp:construct.c.xcdacomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdacomp
            #add-point:ON ACTION controlp INFIELD xcdacomp name="construct.c.xcdacomp"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
           #160802-00020#5-s-add 
            #增加法人過濾條件
            IF NOT cl_null(g_wc_cs_comp) THEN
               LET g_qryparam.where = " ooef001 IN ",g_wc_cs_comp
            END IF
           #160802-00020#5-e-add             
            #mod--161013-00051#1 By shiun--(S)
#            CALL q_ooef001_8()                           #呼叫開窗
            CALL q_ooef001_2()
            #mod--161013-00051#1 By shiun--(E)
            DISPLAY g_qryparam.return1 TO xcdacomp  #顯示到畫面上
            CALL axct304_ref()
            NEXT FIELD xcdacomp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdacomp
            #add-point:BEFORE FIELD xcdacomp name="construct.b.xcdacomp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdacomp
            
            #add-point:AFTER FIELD xcdacomp name="construct.a.xcdacomp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda004
            #add-point:BEFORE FIELD xcda004 name="construct.b.xcda004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda004
            
            #add-point:AFTER FIELD xcda004 name="construct.a.xcda004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xcda004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda004
            #add-point:ON ACTION controlp INFIELD xcda004 name="construct.c.xcda004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda005
            #add-point:BEFORE FIELD xcda005 name="construct.b.xcda005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda005
            
            #add-point:AFTER FIELD xcda005 name="construct.a.xcda005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xcda005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda005
            #add-point:ON ACTION controlp INFIELD xcda005 name="construct.c.xcda005"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xcdald
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdald
            #add-point:ON ACTION controlp INFIELD xcdald name="construct.c.xcdald"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            #160802-00020#5-s-add
            #增加帳套權限控制
            IF NOT cl_null(g_wc_cs_ld) THEN
               LET g_qryparam.where = " glaald IN ",g_wc_cs_ld
            END IF
            #160802-00020#5-e-add            
            CALL q_authorised_ld()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcdald  #顯示到畫面上
            
            NEXT FIELD xcdald                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdald
            #add-point:BEFORE FIELD xcdald name="construct.b.xcdald"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdald
            
            #add-point:AFTER FIELD xcdald name="construct.a.xcdald"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xcda003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda003
            #add-point:ON ACTION controlp INFIELD xcda003 name="construct.c.xcda003"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xcat001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcda003  #顯示到畫面上
            CALL axct304_ref()
            NEXT FIELD xcda003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda003
            #add-point:BEFORE FIELD xcda003 name="construct.b.xcda003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda003
            
            #add-point:AFTER FIELD xcda003 name="construct.a.xcda003"
            
            #END add-point
            
 
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON xcda001,xcda002,xcda006,xcda007,imag014,xcda008,xcda009,xcda101,xcda102, 
          xcdaownid,xcdaowndp,xcdacrtid,xcdacrtdp,xcdacrtdt,xcdamodid,xcdamoddt,xcdacnfid,xcdacnfdt, 
          xcdapstid,xcdapstdt
           FROM s_detail1[1].xcda001,s_detail1[1].xcda002,s_detail1[1].xcda006,s_detail1[1].xcda007, 
               s_detail1[1].imag014,s_detail1[1].xcda008,s_detail1[1].xcda009,s_detail1[1].xcda101,s_detail1[1].xcda102, 
               s_detail2[1].xcdaownid,s_detail2[1].xcdaowndp,s_detail2[1].xcdacrtid,s_detail2[1].xcdacrtdp, 
               s_detail2[1].xcdacrtdt,s_detail2[1].xcdamodid,s_detail2[1].xcdamoddt,s_detail2[1].xcdacnfid, 
               s_detail2[1].xcdacnfdt,s_detail2[1].xcdapstid,s_detail2[1].xcdapstdt
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.body.before_construct"
            
            #end add-point 
            
         #單身公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<xcdacrtdt>>----
         AFTER FIELD xcdacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<xcdamoddt>>----
         AFTER FIELD xcdamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xcdacnfdt>>----
         AFTER FIELD xcdacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xcdapstdt>>----
         AFTER FIELD xcdapstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
 
           
         #單身一般欄位開窗相關處理
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda001
            #add-point:BEFORE FIELD xcda001 name="construct.b.page1.xcda001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda001
            
            #add-point:AFTER FIELD xcda001 name="construct.a.page1.xcda001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcda001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda001
            #add-point:ON ACTION controlp INFIELD xcda001 name="construct.c.page1.xcda001"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xcda002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda002
            #add-point:ON ACTION controlp INFIELD xcda002 name="construct.c.page1.xcda002"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xcbf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcda002  #顯示到畫面上
            
            NEXT FIELD xcda002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda002
            #add-point:BEFORE FIELD xcda002 name="construct.b.page1.xcda002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda002
            
            #add-point:AFTER FIELD xcda002 name="construct.a.page1.xcda002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcda006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda006
            #add-point:ON ACTION controlp INFIELD xcda006 name="construct.c.page1.xcda006"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imag001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcda006  #顯示到畫面上
            NEXT FIELD xcda006                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda006
            #add-point:BEFORE FIELD xcda006 name="construct.b.page1.xcda006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda006
            
            #add-point:AFTER FIELD xcda006 name="construct.a.page1.xcda006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcda007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda007
            #add-point:ON ACTION controlp INFIELD xcda007 name="construct.c.page1.xcda007"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inag006_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcda007  #顯示到畫面上            
            NEXT FIELD xcda007                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda007
            #add-point:BEFORE FIELD xcda007 name="construct.b.page1.xcda007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda007
            
            #add-point:AFTER FIELD xcda007 name="construct.a.page1.xcda007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.imag014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imag014
            #add-point:ON ACTION controlp INFIELD imag014 name="construct.c.page1.imag014"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imag014()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imag014  #顯示到畫面上
            NEXT FIELD imag014                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imag014
            #add-point:BEFORE FIELD imag014 name="construct.b.page1.imag014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imag014
            
            #add-point:AFTER FIELD imag014 name="construct.a.page1.imag014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcda008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda008
            #add-point:ON ACTION controlp INFIELD xcda008 name="construct.c.page1.xcda008"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaj010()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcda008  #顯示到畫面上
            NEXT FIELD xcda008                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda008
            #add-point:BEFORE FIELD xcda008 name="construct.b.page1.xcda008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda008
            
            #add-point:AFTER FIELD xcda008 name="construct.a.page1.xcda008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcda009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda009
            #add-point:ON ACTION controlp INFIELD xcda009 name="construct.c.page1.xcda009"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xcau001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcda009  #顯示到畫面上
            NEXT FIELD xcda009                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda009
            #add-point:BEFORE FIELD xcda009 name="construct.b.page1.xcda009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda009
            
            #add-point:AFTER FIELD xcda009 name="construct.a.page1.xcda009"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda101
            #add-point:BEFORE FIELD xcda101 name="construct.b.page1.xcda101"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda101
            
            #add-point:AFTER FIELD xcda101 name="construct.a.page1.xcda101"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcda101
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda101
            #add-point:ON ACTION controlp INFIELD xcda101 name="construct.c.page1.xcda101"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda102
            #add-point:BEFORE FIELD xcda102 name="construct.b.page1.xcda102"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda102
            
            #add-point:AFTER FIELD xcda102 name="construct.a.page1.xcda102"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xcda102
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda102
            #add-point:ON ACTION controlp INFIELD xcda102 name="construct.c.page1.xcda102"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xcdaownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdaownid
            #add-point:ON ACTION controlp INFIELD xcdaownid name="construct.c.page2.xcdaownid"
            #此段落由子樣板a08產生
            #開窗c段
           

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdaownid
            #add-point:BEFORE FIELD xcdaownid name="construct.b.page2.xcdaownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdaownid
            
            #add-point:AFTER FIELD xcdaownid name="construct.a.page2.xcdaownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xcdaowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdaowndp
            #add-point:ON ACTION controlp INFIELD xcdaowndp name="construct.c.page2.xcdaowndp"
            #此段落由子樣板a08產生
            #開窗c段
          

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdaowndp
            #add-point:BEFORE FIELD xcdaowndp name="construct.b.page2.xcdaowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdaowndp
            
            #add-point:AFTER FIELD xcdaowndp name="construct.a.page2.xcdaowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xcdacrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdacrtid
            #add-point:ON ACTION controlp INFIELD xcdacrtid name="construct.c.page2.xcdacrtid"
            #此段落由子樣板a08產生
            #開窗c段
          


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdacrtid
            #add-point:BEFORE FIELD xcdacrtid name="construct.b.page2.xcdacrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdacrtid
            
            #add-point:AFTER FIELD xcdacrtid name="construct.a.page2.xcdacrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xcdacrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdacrtdp
            #add-point:ON ACTION controlp INFIELD xcdacrtdp name="construct.c.page2.xcdacrtdp"
            #此段落由子樣板a08產生
            #開窗c段
           


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdacrtdp
            #add-point:BEFORE FIELD xcdacrtdp name="construct.b.page2.xcdacrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdacrtdp
            
            #add-point:AFTER FIELD xcdacrtdp name="construct.a.page2.xcdacrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdacrtdt
            #add-point:BEFORE FIELD xcdacrtdt name="construct.b.page2.xcdacrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xcdamodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdamodid
            #add-point:ON ACTION controlp INFIELD xcdamodid name="construct.c.page2.xcdamodid"
            #此段落由子樣板a08產生
            #開窗c段
          
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdamodid
            #add-point:BEFORE FIELD xcdamodid name="construct.b.page2.xcdamodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdamodid
            
            #add-point:AFTER FIELD xcdamodid name="construct.a.page2.xcdamodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdamoddt
            #add-point:BEFORE FIELD xcdamoddt name="construct.b.page2.xcdamoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xcdacnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdacnfid
            #add-point:ON ACTION controlp INFIELD xcdacnfid name="construct.c.page2.xcdacnfid"
            #此段落由子樣板a08產生
            #開窗c段
            

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdacnfid
            #add-point:BEFORE FIELD xcdacnfid name="construct.b.page2.xcdacnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdacnfid
            
            #add-point:AFTER FIELD xcdacnfid name="construct.a.page2.xcdacnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdacnfdt
            #add-point:BEFORE FIELD xcdacnfdt name="construct.b.page2.xcdacnfdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xcdapstid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdapstid
            #add-point:ON ACTION controlp INFIELD xcdapstid name="construct.c.page2.xcdapstid"
            #此段落由子樣板a08產生
            #開窗c段
           
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdapstid
            #add-point:BEFORE FIELD xcdapstid name="construct.b.page2.xcdapstid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdapstid
            
            #add-point:AFTER FIELD xcdapstid name="construct.a.page2.xcdapstid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdapstdt
            #add-point:BEFORE FIELD xcdapstdt name="construct.b.page2.xcdapstdt"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct name="cs.more_construct"
 
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog name="cs.before_dialog"
         LET g_xcda_d[1].xcda006 = ""
         DISPLAY ARRAY g_xcda_d TO s_detail1.*
            BEFORE DISPLAY
               EXIT DISPLAY
         END DISPLAY
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct name="cs.after_construct"
   
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
 
{</section>}
 
{<section id="axct304.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axct304_query()
   #add-point:query段define name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="query.befroe_query"
   
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xcda_d.clear()
   CALL g_xcda2_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axct304_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL axct304_browser_fill(g_wc)
      CALL axct304_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL axct304_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL axct304_fetch("F") 
   END IF
   
   CALL axct304_idx_chk()
   
   LET g_wc_filter = ""
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axct304_fetch(p_flag)
   #add-point:fetch段define name="fetch.define_customerization"
   
   #end add-point   
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="fetch.before_fetch"
   CALL cl_set_act_visible("modify,modify_detail,delete", TRUE)
   #end add-point    
 
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L' 
         LET g_current_idx = g_header_cnt
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   #CALL axct304_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart + g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting(g_current_idx,g_detail_cnt)
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xcda_m.xcdald = g_browser[g_current_idx].b_xcdald
   LET g_xcda_m.xcda003 = g_browser[g_current_idx].b_xcda003
   LET g_xcda_m.xcda004 = g_browser[g_current_idx].b_xcda004
   LET g_xcda_m.xcda005 = g_browser[g_current_idx].b_xcda005
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axct304_master_referesh USING g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcda004,g_xcda_m.xcda005 INTO g_xcda_m.xcdacomp, 
       g_xcda_m.xcda004,g_xcda_m.xcda005,g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcdacomp_desc,g_xcda_m.xcdald_desc, 
       g_xcda_m.xcda003_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xcda_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      INITIALIZE g_xcda_m.* TO NULL
      RETURN
   END IF
 
   #遮罩相關處理
   LET g_xcda_m_mask_o.* =  g_xcda_m.*
   CALL axct304_xcda_t_mask()
   LET g_xcda_m_mask_n.* =  g_xcda_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axct304_set_act_visible()
   CALL axct304_set_act_no_visible()
 
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
 
   #保存單頭舊值
   LET g_xcda_m_t.* = g_xcda_m.*
   LET g_xcda_m_o.* = g_xcda_m.*
   
   #重新顯示   
   CALL axct304_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="axct304.insert" >}
#+ 資料新增
PRIVATE FUNCTION axct304_insert()
   #add-point:insert段define name="insert.define_customerization"
   
   #end add-point   
   #add-point:insert段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="insert.before"
   
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_xcda_d.clear()
   CALL g_xcda2_d.clear()
 
 
   INITIALIZE g_xcda_m.* TO NULL             #DEFAULT 設定
   LET g_xcdald_t = NULL
   LET g_xcda003_t = NULL
   LET g_xcda004_t = NULL
   LET g_xcda005_t = NULL
 
   LET g_master_insert = FALSE
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值 name="insert.default"
#      LET g_xcda_m.xcdastus = 'N'
      #end add-point 
 
      CALL axct304_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
       
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xcda_m.* TO NULL
         INITIALIZE g_xcda_d TO NULL
         INITIALIZE g_xcda2_d TO NULL
 
         CALL axct304_show()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         LET g_xcda_m.* = g_xcda_m_t.*
         CALL axct304_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF
    
      #CALL g_xcda_d.clear()
      #CALL g_xcda2_d.clear()
 
      
      #add-point:單頭輸入後2 name="insert.after_insert2"
      
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axct304_set_act_visible()
   CALL axct304_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_xcdald_t = g_xcda_m.xcdald
   LET g_xcda003_t = g_xcda_m.xcda003
   LET g_xcda004_t = g_xcda_m.xcda004
   LET g_xcda005_t = g_xcda_m.xcda005
 
   
   #組合新增資料的條件
   LET g_add_browse = " xcdaent = " ||g_enterprise|| " AND",
                      " xcdald = '", g_xcda_m.xcdald, "' "
                      ," AND xcda003 = '", g_xcda_m.xcda003, "' "
                      ," AND xcda004 = '", g_xcda_m.xcda004, "' "
                      ," AND xcda005 = '", g_xcda_m.xcda005, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axct304_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CALL axct304_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axct304_master_referesh USING g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcda004,g_xcda_m.xcda005 INTO g_xcda_m.xcdacomp, 
       g_xcda_m.xcda004,g_xcda_m.xcda005,g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcdacomp_desc,g_xcda_m.xcdald_desc, 
       g_xcda_m.xcda003_desc
   
   #遮罩相關處理
   LET g_xcda_m_mask_o.* =  g_xcda_m.*
   CALL axct304_xcda_t_mask()
   LET g_xcda_m_mask_n.* =  g_xcda_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xcda_m.xcdacomp,g_xcda_m.xcdacomp_desc,g_xcda_m.xcda004,g_xcda_m.xcda005,g_xcda_m.xcdald, 
       g_xcda_m.xcdald_desc,g_xcda_m.xcda003,g_xcda_m.xcda003_desc
   
   #功能已完成,通報訊息中心
   CALL axct304_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.modify" >}
#+ 資料修改
PRIVATE FUNCTION axct304_modify()
   #add-point:modify段define name="modify.define_customerization"
   
   #end add-point    
   #add-point:modify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
DEFINE l_success  LIKE type_t.chr1
   #end add-point  
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   IF g_xcda_m.xcdald IS NULL
   OR g_xcda_m.xcda003 IS NULL
   OR g_xcda_m.xcda004 IS NULL
   OR g_xcda_m.xcda005 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL  
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
   LET g_xcdald_t = g_xcda_m.xcdald
   LET g_xcda003_t = g_xcda_m.xcda003
   LET g_xcda004_t = g_xcda_m.xcda004
   LET g_xcda005_t = g_xcda_m.xcda005
 
   CALL s_transaction_begin()
   
   OPEN axct304_cl USING g_enterprise,g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcda004,g_xcda_m.xcda005
   IF SQLCA.SQLCODE THEN   #(ver:49)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axct304_cl:" 
      LET g_errparam.code   = SQLCA.SQLCODE   #(ver:49)
      LET g_errparam.popup  = TRUE 
      CLOSE axct304_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axct304_master_referesh USING g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcda004,g_xcda_m.xcda005 INTO g_xcda_m.xcdacomp, 
       g_xcda_m.xcda004,g_xcda_m.xcda005,g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcdacomp_desc,g_xcda_m.xcdald_desc, 
       g_xcda_m.xcda003_desc
   
   #遮罩相關處理
   LET g_xcda_m_mask_o.* =  g_xcda_m.*
   CALL axct304_xcda_t_mask()
   LET g_xcda_m_mask_n.* =  g_xcda_m.*
   
   CALL s_transaction_end('Y','0')
 
   CALL axct304_show()
   WHILE TRUE
      LET g_xcdald_t = g_xcda_m.xcdald
      LET g_xcda003_t = g_xcda_m.xcda003
      LET g_xcda004_t = g_xcda_m.xcda004
      LET g_xcda005_t = g_xcda_m.xcda005
 
 
      #add-point:modify段修改前 name="modify.before_input"
      #已确认资料不可修改
#      IF g_xcda_m.xcdastus <> 'N' THEN
#         INITIALIZE g_errparam TO NULL 
#         LET g_errparam.extend = ''         
#         LET g_errparam.code   = "apm-00035" 
#         LET g_errparam.popup  = TRUE 
#         CALL cl_err()
#         RETURN
#      END IF
##      IF NOT axct304_chk_year_period() THEN
##         RETURN
##      END IF
#      CALL s_transaction_begin() 
      #end add-point
      
      CALL axct304_input("u")     #欄位更改
      
      #add-point:modify段修改後 name="modify.after_input"
#      CALL s_transaction_end('Y','0')
      CALL axct304_xcca_chk() RETURNING l_success
      IF l_success = 'N' THEN
         CONTINUE WHILE
      END IF 
      CALL axct304_xcda009_chk() RETURNING l_success
      IF l_success = 'N' THEN
         CONTINUE WHILE
      END IF 
      CALL axct304_sum_chk() RETURNING l_success
      IF l_success = 'N' THEN
         CONTINUE WHILE
      END IF      
      #end add-point
      
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         LET g_xcda_m.* = g_xcda_m_t.*
         CALL axct304_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更(更新單身table的key欄位值)
      IF g_xcda_m.xcdald != g_xcdald_t 
      OR g_xcda_m.xcda003 != g_xcda003_t 
      OR g_xcda_m.xcda004 != g_xcda004_t 
      OR g_xcda_m.xcda005 != g_xcda005_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前 name="modify.b_key_update"
         
         #end add-point
         
         #add-point:單頭(偽)修改中 name="modify.m_key_update"
         
         #end add-point
         
 
         
         #add-point:單頭(偽)修改後 name="modify.a_key_update"
         
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axct304_set_act_visible()
   CALL axct304_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xcdaent = " ||g_enterprise|| " AND",
                      " xcdald = '", g_xcda_m.xcdald, "' "
                      ," AND xcda003 = '", g_xcda_m.xcda003, "' "
                      ," AND xcda004 = '", g_xcda_m.xcda004, "' "
                      ," AND xcda005 = '", g_xcda_m.xcda005, "' "
 
   #填到對應位置
   CALL axct304_browser_fill("")
 
   CALL axct304_idx_chk()
 
   CLOSE axct304_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axct304_msgcentre_notify('modify')
   
END FUNCTION   
 
{</section>}
 
{<section id="axct304.input" >}
#+ 資料輸入
PRIVATE FUNCTION axct304_input(p_cmd)
   #add-point:input段define name="input.define_customerization"
   
   #end add-point   
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num10               #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num10               #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10               #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_success              LIKE type_t.num5     #140819   
   DEFINE  l_count1               LIKE type_t.num5
   DEFINE  l_flag1                LIKE type_t.chr1
   DEFINE  l_errno                LIKE type_t.chr100
   DEFINE  l_glav002              LIKE glav_t.glav002
   DEFINE  l_glav005              LIKE glav_t.glav005
   DEFINE  l_bdate                LIKE glav_t.glav004 #起始年度+期別對應的起始截止日期
   DEFINE  l_edate                LIKE glav_t.glav004
   DEFINE  l_sdate_s              LIKE glav_t.glav004
   DEFINE  l_sdate_e              LIKE glav_t.glav004
   DEFINE  l_glav006              LIKE glav_t.glav006
   DEFINE  l_glav007              LIKE glav_t.glav007
   DEFINE  l_wdate_s              LIKE glav_t.glav004
   DEFINE  l_wdate_e              LIKE glav_t.glav004
   DEFINE  l_glaa003              LIKE glaa_t.glaa003
   DEFINE  l_amount               LIKE xcda_t.xcda102  #用于换算币种金额
   DEFINE  l_rate                 LIKE xccw_t.xccw042  #汇率
   #end add-point
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xcda_m.xcdacomp,g_xcda_m.xcdacomp_desc,g_xcda_m.xcda004,g_xcda_m.xcda005,g_xcda_m.xcdald, 
       g_xcda_m.xcdald_desc,g_xcda_m.xcda003,g_xcda_m.xcda003_desc
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT xcda001,xcda002,xcda006,xcda007,xcda008,xcda009,xcda101,xcda102,xcda001, 
       xcda002,xcda006,xcda007,xcda008,xcda009,xcdaownid,xcdaowndp,xcdacrtid,xcdacrtdp,xcdacrtdt,xcdamodid, 
       xcdamoddt,xcdacnfid,xcdacnfdt,xcdapstid,xcdapstdt FROM xcda_t WHERE xcdaent=? AND xcdald=? AND  
       xcda003=? AND xcda004=? AND xcda005=? AND xcda001=? AND xcda002=? AND xcda006=? AND xcda007=?  
       AND xcda008=? AND xcda009=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axct304_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axct304_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL axct304_set_no_entry(p_cmd)
   #add-point:set_no_entry後 name="input.after_set_no_entry"
   
   #end add-point
 
   DISPLAY BY NAME g_xcda_m.xcdacomp,g_xcda_m.xcda004,g_xcda_m.xcda005,g_xcda_m.xcdald,g_xcda_m.xcda003 
 
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:進入修改段前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="axct304.input.head" >}
   
      #單頭段
      INPUT BY NAME g_xcda_m.xcdacomp,g_xcda_m.xcda004,g_xcda_m.xcda005,g_xcda_m.xcdald,g_xcda_m.xcda003  
 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前 name="input.head.b_input"
            
            #end add-point
          
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdacomp
            
            #add-point:AFTER FIELD xcdacomp name="input.a.xcdacomp"
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcda_m.xcdacomp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_xcda_m.xcdacomp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcda_m.xcdacomp_desc
            #140819
            
#            IF NOT cl_null(g_xcda_m.xcdacomp) THEN 
##此段落由子樣板a19產生
#               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#               INITIALIZE g_chkparam.* TO NULL
#               
#               #設定g_chkparam.*的參數
#               LET g_chkparam.arg1 = g_xcda_m.xcdacomp
#                  
#               #呼叫檢查存在並帶值的library
#               IF cl_chk_exist("v_ooef001_1") THEN
#                  #檢查成功時後續處理
#                  #LET  = g_chkparam.return1
#                  #DISPLAY BY NAME 
#               ELSE
#                  #檢查失敗時後續處理
#                  LET g_xcda_m.xcdacomp = g_xcda_m_t.xcdacomp
#                  CALL axct304_ref()
#                  NEXT FIELD CURRENT
#               END IF 
#               
#            END IF
#            #140819            
#            IF NOT cl_null(g_xcda_m.xcdacomp) THEN 
#               #抓出会计周期参考表号  glaa003
#               SELECT glaa003 INTO l_glaa003
#                 FROM glaa_t
#                WHERE glaaent  = g_enterprise
#                  AND glaacomp = g_xcda_m.xcdacomp
#                  AND glaa014  = 'Y' 
#                  
#                CALL cl_get_para(g_enterprise,g_xcda_m.xcdacomp,'S-FIN-6012') RETURNING l_date
#                #取得画面上年期的开始截止日期
#                CALL s_get_accdate(l_glaa003,'',g_xcda_m.xcda004,g_xcda_m.xcda005)
#                  RETURNING l_flag1,l_errno,l_glav002,l_glav005,l_sdate_s,l_sdate_e,
#                            l_glav006,l_bdate,l_edate,l_glav007,l_wdate_s,l_wdate_e
#                IF l_flag1='N' THEN
#                   INITIALIZE g_errparam TO NULL
#                   LET g_errparam.code = l_errno
#                   LET g_errparam.extend = 'get bdate/edate'
#                   LET g_errparam.popup  = TRUE
#                   CALL cl_err()
#                   NEXT FIELD CURRENT             
#                END IF
#                IF l_edate <= l_date THEN
#                   INITIALIZE g_errparam TO NULL
#                   LET g_errparam.code = 'axc-00226'
#                   LET g_errparam.extend = ''
#                   LET g_errparam.popup = TRUE
#                   CALL cl_err()
#                   NEXT FIELD xcda004
#                END IF
#                
#            END IF
            IF NOT cl_null(g_xcda_m.xcdacomp) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xcda_m_t.xcdacomp IS NULL OR g_xcda_m.xcdacomp != g_xcda_m_t.xcdacomp)) THEN
                  IF NOT axct304_chk_ld_comp() THEN
                     LET g_xcda_m.xcdacomp = g_xcda_m_t.xcdacomp
                     NEXT FIELD CURRENT
                  END IF
               END IF
               CALL cl_get_para(g_enterprise,g_xcda_m.xcdacomp,'S-FIN-6001') RETURNING g_para_data   #采用成本域否            
               IF g_para_data = 'Y' THEN
                  CALL cl_set_comp_visible('xcda002,xcda002_desc,xcda002_3,xcda002_3_desc,xcda002_4,xcda002_4_desc',TRUE)                    
               ELSE
                  CALL cl_set_comp_visible('xcda002,xcda002_desc,xcda002_3,xcda002_3_desc,xcda002_4,xcda002_4_desc',FALSE)                
               END IF
            END IF
            CALL axct304_ref()
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdacomp
            #add-point:BEFORE FIELD xcdacomp name="input.b.xcdacomp"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdacomp
            #add-point:ON CHANGE xcdacomp name="input.g.xcdacomp"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda004
            #add-point:BEFORE FIELD xcda004 name="input.b.xcda004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda004
            
            #add-point:AFTER FIELD xcda004 name="input.a.xcda004"
            #此段落由子樣板a05產生
            #確認資料無重複
            IF NOT cl_null(g_xcda_m.xcda004) THEN
               IF p_cmd ='a' OR (p_cmd ='u' AND (g_xcda_m_t.xcda004 IS NULL OR g_xcda_m.xcda004 != g_xcda_m_t.xcda004)) THEN
                  IF NOT axct304_chk_year_period() THEN
                     LET g_xcda_m.xcda004 = g_xcda_m_t.xcda004
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF  NOT cl_null(g_xcda_m.xcdald) AND NOT cl_null(g_xcda_m.xcda003) AND NOT cl_null(g_xcda_m.xcda004) AND NOT cl_null(g_xcda_m.xcda005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t  OR g_xcda_m.xcda003 != g_xcda003_t  OR g_xcda_m.xcda004 != g_xcda004_t  OR g_xcda_m.xcda005 != g_xcda005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
#            IF cl_null(g_xcda_m.xcdacomp) THEN 
#               NEXT FIELD xcdacomp
#            END IF 
#            IF NOT cl_null(g_xcda_m.xcda004) THEN
#               IF NOT cl_null(g_xcda_m.xcda005) THEN            
#                  #取得画面上年期的开始截止日期
#                  CALL s_get_accdate(l_glaa003,'',g_xcda_m.xcda004,g_xcda_m.xcda005)
#                    RETURNING l_flag1,l_errno,l_glav002,l_glav005,l_sdate_s,l_sdate_e,
#                              l_glav006,l_bdate,l_edate,l_glav007,l_wdate_s,l_wdate_e
#                  IF l_flag1='N' THEN
#                     INITIALIZE g_errparam TO NULL
#                     LET g_errparam.code = l_errno
#                     LET g_errparam.extend = 'get bdate/edate'
#                     LET g_errparam.popup  = TRUE
#                     CALL cl_err() 
#                     NEXT FIELD CURRENT                     
#                  END IF
#                  IF l_edate <= l_date THEN
#                     INITIALIZE g_errparam TO NULL
#                     LET g_errparam.code = 'axc-00226'
#                     LET g_errparam.extend = ''
#                     LET g_errparam.popup = TRUE
#                     CALL cl_err()
#                     NEXT FIELD CURRENT 
#                  END IF 
#                ELSE 
#                   NEXT FIELD xcda005
#                END IF
#            END IF
             
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcda004
            #add-point:ON CHANGE xcda004 name="input.g.xcda004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda005
            #add-point:BEFORE FIELD xcda005 name="input.b.xcda005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda005
            
            #add-point:AFTER FIELD xcda005 name="input.a.xcda005"
            #此段落由子樣板a05產生
            #確認資料無重複
            IF NOT cl_null(g_xcda_m.xcda005) THEN
               IF p_cmd ='a' OR (p_cmd ='u' AND (g_xcda_m_t.xcda005 IS NULL OR g_xcda_m.xcda005 != g_xcda_m_t.xcda005)) THEN
                  IF NOT axct304_chk_year_period() THEN
                     LET g_xcda_m.xcda005 = g_xcda_m_t.xcda005
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            IF  NOT cl_null(g_xcda_m.xcdald) AND NOT cl_null(g_xcda_m.xcda003) AND NOT cl_null(g_xcda_m.xcda004) AND NOT cl_null(g_xcda_m.xcda005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t  OR g_xcda_m.xcda003 != g_xcda003_t  OR g_xcda_m.xcda004 != g_xcda004_t  OR g_xcda_m.xcda005 != g_xcda005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
#            
#            #140819
#            IF cl_null(g_xcda_m.xcdacomp) THEN 
#               NEXT FIELD xcdacomp
#            END IF 
#            IF NOT cl_null(g_xcda_m.xcda005) THEN
#               IF NOT cl_null(g_xcda_m.xcda004) THEN            
#                  #取得画面上年期的开始截止日期
#                  CALL s_get_accdate(l_glaa003,'',g_xcda_m.xcda004,g_xcda_m.xcda005)
#                    RETURNING l_flag1,l_errno,l_glav002,l_glav005,l_sdate_s,l_sdate_e,
#                              l_glav006,l_bdate,l_edate,l_glav007,l_wdate_s,l_wdate_e
#                  IF l_flag1='N' THEN
#                     INITIALIZE g_errparam TO NULL
#                     LET g_errparam.code = l_errno
#                     LET g_errparam.extend = 'get bdate/edate'
#                     LET g_errparam.popup  = TRUE
#                     CALL cl_err() 
#                     NEXT FIELD CURRENT                     
#                  END IF
#                  IF l_edate <= l_date THEN
#                     INITIALIZE g_errparam TO NULL
#                     LET g_errparam.code = 'axc-00226'
#                     LET g_errparam.extend = ''
#                     LET g_errparam.popup = TRUE
#                     CALL cl_err()
#                     NEXT FIELD CURRENT 
#                  END IF 
#                ELSE 
#                   NEXT FIELD xcda004
#                END IF
#            END IF

            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcda005
            #add-point:ON CHANGE xcda005 name="input.g.xcda005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcdald
            
            #add-point:AFTER FIELD xcdald name="input.a.xcdald"
            #140819
            #此段落由子樣板a05產生
            #確認資料無重複      
            IF NOT cl_null(g_xcda_m.xcdald) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xcda_m_t.xcdald IS NULL OR g_xcda_m.xcdald != g_xcda_m_t.xcdald)) THEN
                  IF NOT axct304_chk_ld_comp() THEN
                     LET g_xcda_m.xcdald = g_xcda_m_t.xcdald
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
                      
            IF  NOT cl_null(g_xcda_m.xcdald) AND NOT cl_null(g_xcda_m.xcda003) AND NOT cl_null(g_xcda_m.xcda004) AND NOT cl_null(g_xcda_m.xcda005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t  OR g_xcda_m.xcda003 != g_xcda003_t  OR g_xcda_m.xcda004 != g_xcda004_t  OR g_xcda_m.xcda005 != g_xcda005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            CALL axct304_ref()
#            IF NOT cl_null(g_xcda_m.xcdald) THEN 
##此段落由子樣板a19產生
#               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#               INITIALIZE g_chkparam.* TO NULL
#               
#               #設定g_chkparam.*的參數
#               LET g_chkparam.arg1 = g_xcda_m.xcdald
#                  
#               #呼叫檢查存在並帶值的library
#               IF cl_chk_exist("v_glaald") THEN
#                  #檢查成功時後續處理
#                  #LET  = g_chkparam.return1
#                  #DISPLAY BY NAME                   
#                  CALL s_ld_chk_authorization(g_user,g_xcda_m.xcdald) RETURNING l_success
#                  IF l_success = FALSE THEN
#                     INITIALIZE g_errparam TO NULL
#                     LET g_errparam.code = 'axr-00022'
#                     LET g_errparam.extend = g_xcda_m.xcdald
#                     LET g_errparam.popup = TRUE
#                     CALL cl_err()
#
#                     LET g_xcda_m.xcdald = ''
#                     CALL axct304_ref()
#                     NEXT FIELD CURRENT
#                  END IF 
#                  
#               ELSE
#                  #檢查失敗時後續處理
#                  LET g_xcda_m.xcdald = g_xcda_m_t.xcdald
#                  CALL axct304_ref()
#                  NEXT FIELD CURRENT
#               END IF
#            
#
#            END IF 
#

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcdald
            #add-point:BEFORE FIELD xcdald name="input.b.xcdald"
            IF cl_null(g_xcda_m.xcdacomp) THEN
               NEXT FIELD xcdacomp
            END IF
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcdald
            #add-point:ON CHANGE xcdald name="input.g.xcdald"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda003
            
            #add-point:AFTER FIELD xcda003 name="input.a.xcda003"
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcda_m.xcda003
#            CALL ap_ref_array2(g_ref_fields,"SELECT xcatl003 FROM xcatl_t WHERE xcatlent='"||g_enterprise||"' AND xcatl001=? AND xcatl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_xcda_m.xcda003_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcda_m.xcda003_desc

            #此段落由子樣板a05產生
            #確認資料無重複
            IF  NOT cl_null(g_xcda_m.xcdald) AND NOT cl_null(g_xcda_m.xcda003) AND NOT cl_null(g_xcda_m.xcda004) AND NOT cl_null(g_xcda_m.xcda005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t  OR g_xcda_m.xcda003 != g_xcda003_t  OR g_xcda_m.xcda004 != g_xcda004_t  OR g_xcda_m.xcda005 != g_xcda005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            #140819
            CALL axct304_ref()
            IF NOT cl_null(g_xcda_m.xcda003) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcda_m.xcda003
               #160318-00025#12--add--str
               LET g_errshow = TRUE 
               LET g_chkparam.err_str[1] = "agl-00195:sub-01302|axci100|",cl_get_progname("axci100",g_lang,"2"),"|:EXEPROGaxci100"
               #160318-00025#12--add--end   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_xcat001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_xcda_m.xcda003 = g_xcda_m_t.xcda003
                  CALL axct304_ref()
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda003
            #add-point:BEFORE FIELD xcda003 name="input.b.xcda003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcda003
            #add-point:ON CHANGE xcda003 name="input.g.xcda003"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.xcdacomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdacomp
            #add-point:ON ACTION controlp INFIELD xcdacomp name="input.c.xcdacomp"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda_m.xcdacomp             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            #mod--161013-00051#1 By shiun--(S)
#            CALL q_ooef001_8()                                #呼叫開窗
            CALL q_ooef001_2()
            #mod--161013-00051#1 By shiun--(E)

            LET g_xcda_m.xcdacomp = g_qryparam.return1              

            DISPLAY g_xcda_m.xcdacomp TO xcdacomp              #
            CALL axct304_ref()
            NEXT FIELD xcdacomp                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xcda004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda004
            #add-point:ON ACTION controlp INFIELD xcda004 name="input.c.xcda004"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcda005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda005
            #add-point:ON ACTION controlp INFIELD xcda005 name="input.c.xcda005"
            
            #END add-point
 
 
         #Ctrlp:input.c.xcdald
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcdald
            #add-point:ON ACTION controlp INFIELD xcdald name="input.c.xcdald"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda_m.xcdald             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            
            CALL q_authorised_ld()                                #呼叫開窗

            LET g_xcda_m.xcdald = g_qryparam.return1              

            DISPLAY g_xcda_m.xcdald TO xcdald              #
            CALL axct304_ref()
            NEXT FIELD xcdald                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xcda003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda003
            #add-point:ON ACTION controlp INFIELD xcda003 name="input.c.xcda003"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda_m.xcda003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_xcat001()                                #呼叫開窗

            LET g_xcda_m.xcda003 = g_qryparam.return1              

            DISPLAY g_xcda_m.xcda003 TO xcda003              #
            CALL axct304_ref() 
            NEXT FIELD xcda003                          #返回原欄位


            #END add-point
 
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
            
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xcda_m.xcdald             
                            ,g_xcda_m.xcda003   
                            ,g_xcda_m.xcda004   
                            ,g_xcda_m.xcda005   
 
 
            #add-point:單頭修改前 name="input.head.b_after_input"
            
            #end add-point
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
            
               #將遮罩欄位還原
               CALL axct304_xcda_t_mask_restore('restore_mask_o')
            
               UPDATE xcda_t SET (xcdacomp,xcda004,xcda005,xcdald,xcda003) = (g_xcda_m.xcdacomp,g_xcda_m.xcda004, 
                   g_xcda_m.xcda005,g_xcda_m.xcdald,g_xcda_m.xcda003)
                WHERE xcdaent = g_enterprise AND xcdald = g_xcdald_t
                  AND xcda003 = g_xcda003_t
                  AND xcda004 = g_xcda004_t
                  AND xcda005 = g_xcda005_t
 
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcda_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcda_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcda_m.xcdald
               LET gs_keys_bak[1] = g_xcdald_t
               LET gs_keys[2] = g_xcda_m.xcda003
               LET gs_keys_bak[2] = g_xcda003_t
               LET gs_keys[3] = g_xcda_m.xcda004
               LET gs_keys_bak[3] = g_xcda004_t
               LET gs_keys[4] = g_xcda_m.xcda005
               LET gs_keys_bak[4] = g_xcda005_t
               LET gs_keys[5] = g_xcda_d[g_detail_idx].xcda001
               LET gs_keys_bak[5] = g_xcda_d_t.xcda001
               LET gs_keys[6] = g_xcda_d[g_detail_idx].xcda002
               LET gs_keys_bak[6] = g_xcda_d_t.xcda002
               LET gs_keys[7] = g_xcda_d[g_detail_idx].xcda006
               LET gs_keys_bak[7] = g_xcda_d_t.xcda006
               LET gs_keys[8] = g_xcda_d[g_detail_idx].xcda007
               LET gs_keys_bak[8] = g_xcda_d_t.xcda007
               LET gs_keys[9] = g_xcda_d[g_detail_idx].xcda008
               LET gs_keys_bak[9] = g_xcda_d_t.xcda008
               LET gs_keys[10] = g_xcda_d[g_detail_idx].xcda009
               LET gs_keys_bak[10] = g_xcda_d_t.xcda009
               CALL axct304_update_b('xcda_t',gs_keys,gs_keys_bak,"'1'")
                     
 
                     #add-point:單頭修改後 name="input.head.a_update"
                     
                     #end add-point
    
                     #頭先不紀錄
                     #LET g_log1 = util.JSON.stringify(g_xcda_m_t)
                     #LET g_log2 = util.JSON.stringify(g_xcda_m)
                     #IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                     #   CALL s_transaction_end('N','0')
                     #ELSE
                        CALL s_transaction_end('Y','0')
                     #END IF
               END CASE
            
               #將遮罩欄位進行遮蔽
               CALL axct304_xcda_t_mask_restore('restore_mask_n')
            
            ELSE    
               #add-point:單頭新增 name="input.head.a_insert"
               
               #end add-point
               
               #多語言處理
               
                         
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axct304_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            END IF
 
           LET g_xcdald_t = g_xcda_m.xcdald
           LET g_xcda003_t = g_xcda_m.xcda003
           LET g_xcda004_t = g_xcda_m.xcda004
           LET g_xcda005_t = g_xcda_m.xcda005
 
           
           IF g_xcda_d.getLength() = 0 THEN
              NEXT FIELD xcda001
           END IF
 
      END INPUT
 
{</section>}
 
{<section id="axct304.input.body" >}
      #Page1 預設值產生於此處
      INPUT ARRAY g_xcda_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcda_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axct304_b_fill(g_wc2) #test 
            #如果一直都在單頭則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm' 
            LET g_current_page = 1
            #add-point:資料輸入前 name="input.body.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct304_idx_chk()
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axct304_cl USING g_enterprise,g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcda004,g_xcda_m.xcda005                          
               IF SQLCA.SQLCODE THEN   #(ver:49)
                  CLOSE axct304_cl
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct304_cl:" 
                  LET g_errparam.code   = SQLCA.SQLCODE   #(ver:49)
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            IF g_rec_b >= l_ac 
               AND g_xcda_d[l_ac].xcda001 IS NOT NULL
               AND g_xcda_d[l_ac].xcda002 IS NOT NULL
               AND g_xcda_d[l_ac].xcda006 IS NOT NULL
               AND g_xcda_d[l_ac].xcda007 IS NOT NULL
               AND g_xcda_d[l_ac].xcda008 IS NOT NULL
               AND g_xcda_d[l_ac].xcda009 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xcda_d_t.* = g_xcda_d[l_ac].*  #BACKUP
               LET g_xcda_d_o.* = g_xcda_d[l_ac].*  #BACKUP
               CALL axct304_set_entry_b(l_cmd)
               #add-point:set_entry_b後 name="input.body.before_row.set_entry_b"
               
               #end add-point
               CALL axct304_set_no_entry_b(l_cmd)
               OPEN axct304_bcl USING g_enterprise,g_xcda_m.xcdald,
                                                g_xcda_m.xcda003,
                                                g_xcda_m.xcda004,
                                                g_xcda_m.xcda005,
 
                                                g_xcda_d_t.xcda001
                                                ,g_xcda_d_t.xcda002
                                                ,g_xcda_d_t.xcda006
                                                ,g_xcda_d_t.xcda007
                                                ,g_xcda_d_t.xcda008
                                                ,g_xcda_d_t.xcda009
 
               IF SQLCA.SQLCODE THEN   #(ver:49)
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct304_bcl:" 
                  LET g_errparam.code   = SQLCA.SQLCODE   #(ver:49)
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axct304_bcl INTO g_xcda_d[l_ac].xcda001,g_xcda_d[l_ac].xcda002,g_xcda_d[l_ac].xcda006, 
                      g_xcda_d[l_ac].xcda007,g_xcda_d[l_ac].xcda008,g_xcda_d[l_ac].xcda009,g_xcda_d[l_ac].xcda101, 
                      g_xcda_d[l_ac].xcda102,g_xcda2_d[l_ac].xcda001,g_xcda2_d[l_ac].xcda002,g_xcda2_d[l_ac].xcda006, 
                      g_xcda2_d[l_ac].xcda007,g_xcda2_d[l_ac].xcda008,g_xcda2_d[l_ac].xcda009,g_xcda2_d[l_ac].xcdaownid, 
                      g_xcda2_d[l_ac].xcdaowndp,g_xcda2_d[l_ac].xcdacrtid,g_xcda2_d[l_ac].xcdacrtdp, 
                      g_xcda2_d[l_ac].xcdacrtdt,g_xcda2_d[l_ac].xcdamodid,g_xcda2_d[l_ac].xcdamoddt, 
                      g_xcda2_d[l_ac].xcdacnfid,g_xcda2_d[l_ac].xcdacnfdt,g_xcda2_d[l_ac].xcdapstid, 
                      g_xcda2_d[l_ac].xcdapstdt
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_xcda_d_t.xcda001,":",SQLERRMESSAGE 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
                      LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xcda_d_mask_o[l_ac].* =  g_xcda_d[l_ac].*
                  CALL axct304_xcda_t_mask()
                  LET g_xcda_d_mask_n[l_ac].* =  g_xcda_d[l_ac].*
                  
                  CALL axct304_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            IF l_cmd='u' THEN
               IF g_glaa015 = 'Y' THEN
                   OPEN axct304_bcl USING g_enterprise,g_xcda_m.xcdald,
                                                g_xcda_m.xcda003,
                                                g_xcda_m.xcda004,
                                                g_xcda_m.xcda005,
 
                                                '2'
                                                ,g_xcda_d_t.xcda002
                                                ,g_xcda_d_t.xcda006
                                                ,g_xcda_d_t.xcda007
                                                ,g_xcda_d_t.xcda008
                                                ,g_xcda_d_t.xcda009
                  
                  IF STATUS THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "OPEN axct304_bcl:" 
                     LET g_errparam.code   =  STATUS 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                   
                     LET l_lock_sw='Y'
                  END IF
               END IF
               IF g_glaa019 = 'Y' THEN                                 
                  OPEN axct304_bcl USING g_enterprise,g_xcda_m.xcdald,
                                                g_xcda_m.xcda003,
                                                g_xcda_m.xcda004,
                                                g_xcda_m.xcda005,
 
                                                '3'
                                                ,g_xcda_d_t.xcda002
                                                ,g_xcda_d_t.xcda006
                                                ,g_xcda_d_t.xcda007
                                                ,g_xcda_d_t.xcda008
                                                ,g_xcda_d_t.xcda009
                  
                  IF STATUS THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "OPEN axct304_bcl" 
                     LET g_errparam.code   =  STATUS 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                  
                     LET l_lock_sw='Y'
                  END IF
               END IF
            END IF
            #end add-point  
            
 
 
        
         BEFORE INSERT
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            INITIALIZE g_xcda_d_t.* TO NULL
            INITIALIZE g_xcda_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xcda_d[l_ac].* TO NULL
            #公用欄位預設值
            #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xcda2_d[l_ac].xcdaownid = g_user
      LET g_xcda2_d[l_ac].xcdaowndp = g_dept
      LET g_xcda2_d[l_ac].xcdacrtid = g_user
      LET g_xcda2_d[l_ac].xcdacrtdp = g_dept 
      LET g_xcda2_d[l_ac].xcdacrtdt = cl_get_current()
      LET g_xcda2_d[l_ac].xcdamodid = g_user
      LET g_xcda2_d[l_ac].xcdamoddt = cl_get_current()
 
 
  
            #一般欄位預設值
                  LET g_xcda_d[l_ac].xcda001 = "1"
 
            
            #add-point:modify段before備份 name="input.body.before_insert.before_bak"
            
            #end add-point
            LET g_xcda_d_t.* = g_xcda_d[l_ac].*     #新輸入資料
            LET g_xcda_d_o.* = g_xcda_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axct304_set_entry_b(l_cmd)
            #add-point:set_entry_b後 name="input.body.before_insert.set_entry_b"
            
            #end add-point
            CALL axct304_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xcda_d[li_reproduce_target].* = g_xcda_d[li_reproduce].*
               LET g_xcda2_d[li_reproduce_target].* = g_xcda2_d[li_reproduce].*
 
               LET g_xcda_d[g_xcda_d.getLength()].xcda001 = NULL
               LET g_xcda_d[g_xcda_d.getLength()].xcda002 = NULL
               LET g_xcda_d[g_xcda_d.getLength()].xcda006 = NULL
               LET g_xcda_d[g_xcda_d.getLength()].xcda007 = NULL
               LET g_xcda_d[g_xcda_d.getLength()].xcda008 = NULL
               LET g_xcda_d[g_xcda_d.getLength()].xcda009 = NULL
 
            END IF
            
 
 
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xcda_t 
             WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald
               AND xcda003 = g_xcda_m.xcda003
               AND xcda004 = g_xcda_m.xcda004
               AND xcda005 = g_xcda_m.xcda005
 
               AND xcda001 = g_xcda_d[l_ac].xcda001
               AND xcda002 = g_xcda_d[l_ac].xcda002
               AND xcda006 = g_xcda_d[l_ac].xcda006
               AND xcda007 = g_xcda_d[l_ac].xcda007
               AND xcda008 = g_xcda_d[l_ac].xcda008
               AND xcda009 = g_xcda_d[l_ac].xcda009
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前 name="input.body.b_insert"
#140825
               IF cl_null(g_xcda_d[l_ac].xcda002) THEN
                  LET g_xcda_d[l_ac].xcda002 = ' '
               END IF
               IF cl_null(g_xcda_d[l_ac].xcda008) THEN
                  LET g_xcda_d[l_ac].xcda008 = ' '
               END IF
               IF cl_null(g_xcda_d[l_ac].xcda007) THEN
                  LET g_xcda_d[l_ac].xcda007 = ' '
               END IF
               
               LET l_count1 = 0 
               SELECT COUNT(*) INTO l_count1 FROM xcca_t 
                WHERE xccaent = g_enterprise AND xccald = g_xcda_m.xcdald
                  AND xcca003 = g_xcda_m.xcda003
                  AND xcca004 = g_xcda_m.xcda004
                  AND xcca005 = g_xcda_m.xcda005                  
                        
                  AND xcca001 = g_xcda_d[l_ac].xcda001
                  AND xcca002 = g_xcda_d[l_ac].xcda002                  
                  AND xcca006 = g_xcda_d[l_ac].xcda006
                  AND xcca007 = g_xcda_d[l_ac].xcda007
                  AND xcca008 = g_xcda_d[l_ac].xcda008
                IF l_count1 = 0 THEN
                   INITIALIZE g_errparam TO NULL 
                   LET g_errparam.extend = 'xcca_t'                   
                   LET g_errparam.columns[1] = "lbl_xcda002"
                   LET g_errparam.columns[2] = "lbl_xcda006"
                   LET g_errparam.columns[3] = "lbl_xcda007"
                   LET g_errparam.columns[4] = "lbl_xcda008"                 
                   LET g_errparam.values[1] = g_xcda_d[l_ac].xcda002
                   LET g_errparam.values[2] = g_xcda_d[l_ac].xcda006
                   LET g_errparam.values[3] = g_xcda_d[l_ac].xcda007
                   LET g_errparam.values[4] = g_xcda_d[l_ac].xcda008
                   #待改 报错信息
                   LET g_errparam.code   = "axc-00528" 
                   LET g_errparam.popup  = TRUE 
                   CALL cl_err()
                   INITIALIZE g_xcda_d[l_ac].* TO NULL
                   CANCEL INSERT
                END IF
#               LET g_xcda_m.xcdastus = 'N' 
               IF cl_null(g_xcda_d[l_ac].xcda102) THEN LET g_xcda_d[l_ac].xcda102 = 0 END IF
               CALL s_curr_round('',g_glaa001,g_xcda_d[l_ac].xcda102,2) RETURNING  g_xcda_d[l_ac].xcda102
               IF 1=2 THEN
               #end add-point
               INSERT INTO xcda_t
                           (xcdaent,
                            xcdacomp,xcda004,xcda005,xcdald,xcda003,
                            xcda001,xcda002,xcda006,xcda007,xcda008,xcda009
                            ,xcda101,xcda102,xcdaownid,xcdaowndp,xcdacrtid,xcdacrtdp,xcdacrtdt,xcdamodid,xcdamoddt,xcdacnfid,xcdacnfdt,xcdapstid,xcdapstdt) 
                     VALUES(g_enterprise,
                            g_xcda_m.xcdacomp,g_xcda_m.xcda004,g_xcda_m.xcda005,g_xcda_m.xcdald,g_xcda_m.xcda003,
                            g_xcda_d[l_ac].xcda001,g_xcda_d[l_ac].xcda002,g_xcda_d[l_ac].xcda006,g_xcda_d[l_ac].xcda007, 
                                g_xcda_d[l_ac].xcda008,g_xcda_d[l_ac].xcda009
                            ,g_xcda_d[l_ac].xcda101,g_xcda_d[l_ac].xcda102,g_xcda2_d[l_ac].xcdaownid, 
                                g_xcda2_d[l_ac].xcdaowndp,g_xcda2_d[l_ac].xcdacrtid,g_xcda2_d[l_ac].xcdacrtdp, 
                                g_xcda2_d[l_ac].xcdacrtdt,g_xcda2_d[l_ac].xcdamodid,g_xcda2_d[l_ac].xcdamoddt, 
                                g_xcda2_d[l_ac].xcdacnfid,g_xcda2_d[l_ac].xcdacnfdt,g_xcda2_d[l_ac].xcdapstid, 
                                g_xcda2_d[l_ac].xcdapstdt)
               #add-point:單身新增中 name="input.body.m_insert"
               #add stus
               ELSE
                  INSERT INTO xcda_t
                           (xcdaent,
                            xcdacomp,xcda004,xcda005,xcdald,xcda003,xcdastus,
                            xcda001,xcda002,xcda006,xcda007,xcda008,xcda009
                            ,xcda101,xcda102,xcdaownid,xcdaowndp,xcdacrtid,xcdacrtdp,xcdacrtdt,xcdamodid,xcdamoddt,xcdacnfid,xcdacnfdt,xcdapstid,xcdapstdt) 
                     VALUES(g_enterprise,
                            g_xcda_m.xcdacomp,g_xcda_m.xcda004,g_xcda_m.xcda005,g_xcda_m.xcdald,g_xcda_m.xcda003,'Y',
                            g_xcda_d[l_ac].xcda001,g_xcda_d[l_ac].xcda002,g_xcda_d[l_ac].xcda006,g_xcda_d[l_ac].xcda007, 
                                g_xcda_d[l_ac].xcda008,g_xcda_d[l_ac].xcda009
                            ,g_xcda_d[l_ac].xcda101,g_xcda_d[l_ac].xcda102,g_xcda2_d[l_ac].xcdaownid, 
                                g_xcda2_d[l_ac].xcdaowndp,g_xcda2_d[l_ac].xcdacrtid,g_xcda2_d[l_ac].xcdacrtdp, 
                                g_xcda2_d[l_ac].xcdacrtdt,g_xcda2_d[l_ac].xcdamodid,g_xcda2_d[l_ac].xcdamoddt, 
                                g_xcda2_d[l_ac].xcdacnfid,g_xcda2_d[l_ac].xcdacnfdt,g_xcda2_d[l_ac].xcdapstid, 
                                g_xcda2_d[l_ac].xcdapstdt)
                  LET l_amount = 0 
                  LET l_rate = 1
                  IF g_glaa015 = 'Y' THEN
                     IF g_xcda_d[l_ac].xcda102<>0 THEN
                        CALL s_aooi160_get_exrate('2',g_xcda_m.xcdald,g_bdate,g_glaa001,g_glaa016,0,g_glaa018)
                            RETURNING l_rate
                        LET l_amount = l_rate * g_xcda_d[l_ac].xcda102
                     END IF
                     CALL s_curr_round('',g_glaa016,l_amount,2) RETURNING  l_amount
                     INSERT INTO xcda_t
                              (xcdaent,
                               xcdacomp,xcda004,xcda005,xcdald,xcda003,xcdastus,
                               xcda001,xcda002,xcda006,xcda007,xcda008,xcda009
                               ,xcda101,xcda102,xcdaownid,xcdaowndp,xcdacrtid,xcdacrtdp,xcdacrtdt,xcdamodid,xcdamoddt,xcdacnfid,xcdacnfdt,xcdapstid,xcdapstdt) 
                        VALUES(g_enterprise,
                               g_xcda_m.xcdacomp,g_xcda_m.xcda004,g_xcda_m.xcda005,g_xcda_m.xcdald,g_xcda_m.xcda003,'Y',
                               '2',g_xcda_d[l_ac].xcda002,g_xcda_d[l_ac].xcda006,g_xcda_d[l_ac].xcda007, 
                                   g_xcda_d[l_ac].xcda008,g_xcda_d[l_ac].xcda009
                               ,g_xcda_d[l_ac].xcda101,l_amount,g_xcda2_d[l_ac].xcdaownid, 
                                   g_xcda2_d[l_ac].xcdaowndp,g_xcda2_d[l_ac].xcdacrtid,g_xcda2_d[l_ac].xcdacrtdp, 
                                   g_xcda2_d[l_ac].xcdacrtdt,g_xcda2_d[l_ac].xcdamodid,g_xcda2_d[l_ac].xcdamoddt, 
                                   g_xcda2_d[l_ac].xcdacnfid,g_xcda2_d[l_ac].xcdacnfdt,g_xcda2_d[l_ac].xcdapstid, 
                                   g_xcda2_d[l_ac].xcdapstdt)
                     
                  END IF
                  LET l_amount = 0
                  LET l_rate = 1
                  IF g_glaa019 = 'Y' THEN
                     IF g_xcda_d[l_ac].xcda102<>0 THEN
                        CALL s_aooi160_get_exrate('2',g_xcda_m.xcdald,g_bdate,g_glaa001,g_glaa020,0,g_glaa022)
                             RETURNING l_rate
                        LET l_amount = l_rate * g_xcda_d[l_ac].xcda102 
                     END IF
                     CALL s_curr_round('',g_glaa020,l_amount,2) RETURNING  l_amount 
                     INSERT INTO xcda_t
                              (xcdaent,
                               xcdacomp,xcda004,xcda005,xcdald,xcda003,xcdastus,
                               xcda001,xcda002,xcda006,xcda007,xcda008,xcda009
                               ,xcda101,xcda102,xcdaownid,xcdaowndp,xcdacrtid,xcdacrtdp,xcdacrtdt,xcdamodid,xcdamoddt,xcdacnfid,xcdacnfdt,xcdapstid,xcdapstdt) 
                        VALUES(g_enterprise,
                               g_xcda_m.xcdacomp,g_xcda_m.xcda004,g_xcda_m.xcda005,g_xcda_m.xcdald,g_xcda_m.xcda003,'Y',
                               '3',g_xcda_d[l_ac].xcda002,g_xcda_d[l_ac].xcda006,g_xcda_d[l_ac].xcda007, 
                                   g_xcda_d[l_ac].xcda008,g_xcda_d[l_ac].xcda009
                               ,g_xcda_d[l_ac].xcda101,l_amount,g_xcda2_d[l_ac].xcdaownid, 
                                   g_xcda2_d[l_ac].xcdaowndp,g_xcda2_d[l_ac].xcdacrtid,g_xcda2_d[l_ac].xcdacrtdp, 
                                   g_xcda2_d[l_ac].xcdacrtdt,g_xcda2_d[l_ac].xcdamodid,g_xcda2_d[l_ac].xcdamoddt, 
                                   g_xcda2_d[l_ac].xcdacnfid,g_xcda2_d[l_ac].xcdacnfdt,g_xcda2_d[l_ac].xcdapstid, 
                                   g_xcda2_d[l_ac].xcdapstdt)
                  END IF
               END IF
               #end add-point
               LET p_cmd = 'u'
               LET g_master_insert = TRUE
            ELSE    
               INITIALIZE g_xcda_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcda_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後 name="input.body.after_insert"
            
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               IF axct304_before_delete() THEN 
                  
 
 
 
                  #取得該筆資料key值
                  INITIALIZE gs_keys TO NULL
                  LET gs_keys[01] = g_xcda_m.xcdald
                  LET gs_keys[gs_keys.getLength()+1] = g_xcda_m.xcda003
                  LET gs_keys[gs_keys.getLength()+1] = g_xcda_m.xcda004
                  LET gs_keys[gs_keys.getLength()+1] = g_xcda_m.xcda005
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xcda_d_t.xcda001
                  LET gs_keys[gs_keys.getLength()+1] = g_xcda_d_t.xcda002
                  LET gs_keys[gs_keys.getLength()+1] = g_xcda_d_t.xcda006
                  LET gs_keys[gs_keys.getLength()+1] = g_xcda_d_t.xcda007
                  LET gs_keys[gs_keys.getLength()+1] = g_xcda_d_t.xcda008
                  LET gs_keys[gs_keys.getLength()+1] = g_xcda_d_t.xcda009
 
 
                  #刪除下層單身
                  IF NOT axct304_key_delete_b(gs_keys,'xcda_t') THEN
                     CALL s_transaction_end('N','0')
                     CLOSE axct304_bcl
                     CANCEL DELETE
                  END IF
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axct304_bcl
               LET l_count = g_xcda_d.getLength()
            END IF 
            
            #add-point:單身刪除後 name="input.body.a_delete"
            
            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE  name="input.body.after_delete"
               IF g_rec_b = 0 THEN
                  RETURN
               END IF 
               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_xcda_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda001
            #add-point:BEFORE FIELD xcda001 name="input.b.page1.xcda001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda001
            
            #add-point:AFTER FIELD xcda001 name="input.a.page1.xcda001"
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcda_m.xcdald IS NOT NULL AND g_xcda_m.xcda003 IS NOT NULL AND g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda001 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda002 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda006 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda007 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda008 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda009 IS NOT NULL THEN 
              #IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t OR g_xcda_d[g_detail_idx].xcda001 != g_xcda_d_t.xcda001 OR g_xcda_d[g_detail_idx].xcda002 != g_xcda_d_t.xcda002 OR g_xcda_d[g_detail_idx].xcda006 != g_xcda_d_t.xcda006 OR g_xcda_d[g_detail_idx].xcda007 != g_xcda_d_t.xcda007 OR g_xcda_d[g_detail_idx].xcda008 != g_xcda_d_t.xcda008 OR g_xcda_d[g_detail_idx].xcda009 != g_xcda_d_t.xcda009)) THEN   #160824-00007#222 161202 by lori mark
               #160824-00007#222 161202 by lori add---(S) 
               #xcda002,xcda006,xcda007,xcda008就值改用_o
               IF l_cmd = 'a' OR ( l_cmd = 'u' 
                                  AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t 
                                    OR g_xcda_d[g_detail_idx].xcda001 != g_xcda_d_t.xcda001 OR g_xcda_d[g_detail_idx].xcda002 != g_xcda_d_o.xcda002 
                                     OR g_xcda_d[g_detail_idx].xcda006 != g_xcda_d_o.xcda006 OR g_xcda_d[g_detail_idx].xcda007 != g_xcda_d_o.xcda007 
                                     OR g_xcda_d[g_detail_idx].xcda008 != g_xcda_d_o.xcda008 OR g_xcda_d[g_detail_idx].xcda009 != g_xcda_d_t.xcda009)) THEN    
               #160824-00007#222 161202 by lori add---(E) 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"' AND "|| "xcda001 = '"||g_xcda_d[g_detail_idx].xcda001 ||"' AND "|| "xcda002 = '"||g_xcda_d[g_detail_idx].xcda002 ||"' AND "|| "xcda006 = '"||g_xcda_d[g_detail_idx].xcda006 ||"' AND "|| "xcda007 = '"||g_xcda_d[g_detail_idx].xcda007 ||"' AND "|| "xcda008 = '"||g_xcda_d[g_detail_idx].xcda008 ||"' AND "|| "xcda009 = '"||g_xcda_d[g_detail_idx].xcda009 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcda001
            #add-point:ON CHANGE xcda001 name="input.g.page1.xcda001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda002
            
            #add-point:AFTER FIELD xcda002 name="input.a.page1.xcda002"
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcda_m.xcdald IS NOT NULL AND g_xcda_m.xcda003 IS NOT NULL AND g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda001 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda002 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda006 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda007 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda008 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda009 IS NOT NULL THEN 
              #IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t OR g_xcda_d[g_detail_idx].xcda001 != g_xcda_d_t.xcda001 OR g_xcda_d[g_detail_idx].xcda002 != g_xcda_d_t.xcda002 OR g_xcda_d[g_detail_idx].xcda006 != g_xcda_d_t.xcda006 OR g_xcda_d[g_detail_idx].xcda007 != g_xcda_d_t.xcda007 OR g_xcda_d[g_detail_idx].xcda008 != g_xcda_d_t.xcda008 OR g_xcda_d[g_detail_idx].xcda009 != g_xcda_d_t.xcda009)) THEN   #160824-00007#222 161202 by lori mark
               #160824-00007#222 161202 by lori add---(S) 
               #xcda002,xcda006,xcda007,xcda008就值改用_o
               IF l_cmd = 'a' OR ( l_cmd = 'u' 
                                  AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t 
                                    OR g_xcda_d[g_detail_idx].xcda001 != g_xcda_d_t.xcda001 OR g_xcda_d[g_detail_idx].xcda002 != g_xcda_d_o.xcda002 
                                     OR g_xcda_d[g_detail_idx].xcda006 != g_xcda_d_o.xcda006 OR g_xcda_d[g_detail_idx].xcda007 != g_xcda_d_o.xcda007 
                                     OR g_xcda_d[g_detail_idx].xcda008 != g_xcda_d_o.xcda008 OR g_xcda_d[g_detail_idx].xcda009 != g_xcda_d_t.xcda009)) THEN    
               #160824-00007#222 161202 by lori add---(E) 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"' AND "|| "xcda001 = '"||g_xcda_d[g_detail_idx].xcda001 ||"' AND "|| "xcda002 = '"||g_xcda_d[g_detail_idx].xcda002 ||"' AND "|| "xcda006 = '"||g_xcda_d[g_detail_idx].xcda006 ||"' AND "|| "xcda007 = '"||g_xcda_d[g_detail_idx].xcda007 ||"' AND "|| "xcda008 = '"||g_xcda_d[g_detail_idx].xcda008 ||"' AND "|| "xcda009 = '"||g_xcda_d[g_detail_idx].xcda009 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            #160824-00007#222 161202 by lori add---(S)
            IF g_xcda_d[l_ac].xcda002 <> g_xcda_d_o.xcda002 OR cl_null(g_xcda_d_o.xcda002) THEN
               CALL axct304_insert_default()
               CALL axct304_detail_ref(g_xcda_d[l_ac].xcda002,g_xcda_d[l_ac].xcda006,g_xcda_d[l_ac].xcda009)
                    RETURNING g_xcda_d[l_ac].xcda002_desc,g_xcda_d[l_ac].xcda006_desc,g_xcda_d[l_ac].xcda006_desc_desc,
                              g_xcda_d[l_ac].imag014,g_xcda_d[l_ac].xcda009_desc         
            END IF                  
            #160824-00007#222 161202 by lori add---(E)

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcda_m.xcdacomp
            LET g_ref_fields[2] = g_xcda_d[l_ac].xcda002
            CALL ap_ref_array2(g_ref_fields,"SELECT xcbfl003 FROM xcbfl_t WHERE xcbflent='"||g_enterprise||"' AND xcbflcomp=? AND xcbfl001=? AND xcbfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcda_d[l_ac].xcda002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcda_d[l_ac].xcda002_desc

            #160824-00007#222 161202 by lori mark---(S)
            #CALL axct304_insert_default()
            #CALL axct304_detail_ref(g_xcda_d[l_ac].xcda002,g_xcda_d[l_ac].xcda006,g_xcda_d[l_ac].xcda009)
            #     RETURNING g_xcda_d[l_ac].xcda002_desc,g_xcda_d[l_ac].xcda006_desc,g_xcda_d[l_ac].xcda006_desc_desc,
            #               g_xcda_d[l_ac].imag014,g_xcda_d[l_ac].xcda009_desc
            #160824-00007#222 161202 by lori mark---(E)   

            LET g_xcda_d_o.xcda002 = g_xcda_d[l_ac].xcda002   #160824-00007#222 161202 by lori add
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda002
            #add-point:BEFORE FIELD xcda002 name="input.b.page1.xcda002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcda002
            #add-point:ON CHANGE xcda002 name="input.g.page1.xcda002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda006
            
            #add-point:AFTER FIELD xcda006 name="input.a.page1.xcda006"
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcda_m.xcdald IS NOT NULL AND g_xcda_m.xcda003 IS NOT NULL AND g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda001 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda002 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda006 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda007 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda008 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda009 IS NOT NULL THEN 
              #IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t OR g_xcda_d[g_detail_idx].xcda001 != g_xcda_d_t.xcda001 OR g_xcda_d[g_detail_idx].xcda002 != g_xcda_d_t.xcda002 OR g_xcda_d[g_detail_idx].xcda006 != g_xcda_d_t.xcda006 OR g_xcda_d[g_detail_idx].xcda007 != g_xcda_d_t.xcda007 OR g_xcda_d[g_detail_idx].xcda008 != g_xcda_d_t.xcda008 OR g_xcda_d[g_detail_idx].xcda009 != g_xcda_d_t.xcda009)) THEN   #160824-00007#222 161202 by lori mark
               #160824-00007#222 161202 by lori add---(S) 
               #xcda002,xcda006,xcda007,xcda008就值改用_o
               IF l_cmd = 'a' OR ( l_cmd = 'u' 
                                  AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t 
                                    OR g_xcda_d[g_detail_idx].xcda001 != g_xcda_d_t.xcda001 OR g_xcda_d[g_detail_idx].xcda002 != g_xcda_d_o.xcda002 
                                     OR g_xcda_d[g_detail_idx].xcda006 != g_xcda_d_o.xcda006 OR g_xcda_d[g_detail_idx].xcda007 != g_xcda_d_o.xcda007 
                                     OR g_xcda_d[g_detail_idx].xcda008 != g_xcda_d_o.xcda008 OR g_xcda_d[g_detail_idx].xcda009 != g_xcda_d_t.xcda009)) THEN    
               #160824-00007#222 161202 by lori add---(E)                
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"' AND "|| "xcda001 = '"||g_xcda_d[g_detail_idx].xcda001 ||"' AND "|| "xcda002 = '"||g_xcda_d[g_detail_idx].xcda002 ||"' AND "|| "xcda006 = '"||g_xcda_d[g_detail_idx].xcda006 ||"' AND "|| "xcda007 = '"||g_xcda_d[g_detail_idx].xcda007 ||"' AND "|| "xcda008 = '"||g_xcda_d[g_detail_idx].xcda008 ||"' AND "|| "xcda009 = '"||g_xcda_d[g_detail_idx].xcda009 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            #160824-00007#222 by 161202 lori add---(S)
            IF g_xcda_d[l_ac].xcda006 <> g_xcda_d_o.xcda006 OR cl_null(g_xcda_d_o.xcda006) THEN
               CALL axct304_insert_default()
               CALL axct304_detail_ref(g_xcda_d[l_ac].xcda002,g_xcda_d[l_ac].xcda006,g_xcda_d[l_ac].xcda009)
                   RETURNING g_xcda_d[l_ac].xcda002_desc,g_xcda_d[l_ac].xcda006_desc,g_xcda_d[l_ac].xcda006_desc_desc,
                             g_xcda_d[l_ac].imag014,g_xcda_d[l_ac].xcda009_desc
            END IF   
            #160824-00007#222 by 161202 lori add---(E)
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcda_d[l_ac].xcda006
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcda_d[l_ac].xcda006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcda_d[l_ac].xcda006_desc

            #160824-00007#222 161202 by lori mark---(S)
            #CALL axct304_insert_default()
            # CALL axct304_detail_ref(g_xcda_d[l_ac].xcda002,g_xcda_d[l_ac].xcda006,g_xcda_d[l_ac].xcda009)
            #     RETURNING g_xcda_d[l_ac].xcda002_desc,g_xcda_d[l_ac].xcda006_desc,g_xcda_d[l_ac].xcda006_desc_desc,
            #               g_xcda_d[l_ac].imag014,g_xcda_d[l_ac].xcda009_desc
            #160824-00007#222 161202 by lori mark---(E)
            
            LET g_xcda_d_o.xcda006 = g_xcda_d[l_ac].xcda006   #160824-00007#222 161202 by lori add
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda006
            #add-point:BEFORE FIELD xcda006 name="input.b.page1.xcda006"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcda006
            #add-point:ON CHANGE xcda006 name="input.g.page1.xcda006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda007
            #add-point:BEFORE FIELD xcda007 name="input.b.page1.xcda007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda007
            
            #add-point:AFTER FIELD xcda007 name="input.a.page1.xcda007"
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcda_m.xcdald IS NOT NULL AND g_xcda_m.xcda003 IS NOT NULL AND g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda001 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda002 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda006 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda007 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda008 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda009 IS NOT NULL THEN 
              #IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t OR g_xcda_d[g_detail_idx].xcda001 != g_xcda_d_t.xcda001 OR g_xcda_d[g_detail_idx].xcda002 != g_xcda_d_t.xcda002 OR g_xcda_d[g_detail_idx].xcda006 != g_xcda_d_t.xcda006 OR g_xcda_d[g_detail_idx].xcda007 != g_xcda_d_t.xcda007 OR g_xcda_d[g_detail_idx].xcda008 != g_xcda_d_t.xcda008 OR g_xcda_d[g_detail_idx].xcda009 != g_xcda_d_t.xcda009)) THEN   #160824-00007#222 161202 by lori mark
               #160824-00007#222 161202 by lori add---(S)
               #xcda002,xcda006,xcda007,xcda008就值改用_o
               IF l_cmd = 'a' OR ( l_cmd = 'u' 
                                  AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t 
                                    OR g_xcda_d[g_detail_idx].xcda001 != g_xcda_d_t.xcda001 OR g_xcda_d[g_detail_idx].xcda002 != g_xcda_d_o.xcda002 
                                     OR g_xcda_d[g_detail_idx].xcda006 != g_xcda_d_o.xcda006 OR g_xcda_d[g_detail_idx].xcda007 != g_xcda_d_o.xcda007 
                                     OR g_xcda_d[g_detail_idx].xcda008 != g_xcda_d_o.xcda008 OR g_xcda_d[g_detail_idx].xcda009 != g_xcda_d_t.xcda009)) THEN    
               #160824-00007#222 161202 by lori add---(E)               
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"' AND "|| "xcda001 = '"||g_xcda_d[g_detail_idx].xcda001 ||"' AND "|| "xcda002 = '"||g_xcda_d[g_detail_idx].xcda002 ||"' AND "|| "xcda006 = '"||g_xcda_d[g_detail_idx].xcda006 ||"' AND "|| "xcda007 = '"||g_xcda_d[g_detail_idx].xcda007 ||"' AND "|| "xcda008 = '"||g_xcda_d[g_detail_idx].xcda008 ||"' AND "|| "xcda009 = '"||g_xcda_d[g_detail_idx].xcda009 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            CALL axct304_insert_default()
            IF cl_null(g_xcda_d[l_ac].xcda007) THEN LET g_xcda_d[l_ac].xcda007 = ' ' END IF  #fengmy150804
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcda007
            #add-point:ON CHANGE xcda007 name="input.g.page1.xcda007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda008
            #add-point:BEFORE FIELD xcda008 name="input.b.page1.xcda008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda008
            
            #add-point:AFTER FIELD xcda008 name="input.a.page1.xcda008"
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcda_m.xcdald IS NOT NULL AND g_xcda_m.xcda003 IS NOT NULL AND g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda001 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda002 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda006 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda007 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda008 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda009 IS NOT NULL THEN 
              #IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t OR g_xcda_d[g_detail_idx].xcda001 != g_xcda_d_t.xcda001 OR g_xcda_d[g_detail_idx].xcda002 != g_xcda_d_t.xcda002 OR g_xcda_d[g_detail_idx].xcda006 != g_xcda_d_t.xcda006 OR g_xcda_d[g_detail_idx].xcda007 != g_xcda_d_t.xcda007 OR g_xcda_d[g_detail_idx].xcda008 != g_xcda_d_t.xcda008 OR g_xcda_d[g_detail_idx].xcda009 != g_xcda_d_t.xcda009)) THEN    #160824-00007#222 161202 by lori mark
               #160824-00007#222 161202 by lori add---(S)
               #xcda002,xcda006,xcda007,xcda008就值改用_o
               IF l_cmd = 'a' OR ( l_cmd = 'u' 
                                  AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t 
                                    OR g_xcda_d[g_detail_idx].xcda001 != g_xcda_d_t.xcda001 OR g_xcda_d[g_detail_idx].xcda002 != g_xcda_d_o.xcda002 
                                     OR g_xcda_d[g_detail_idx].xcda006 != g_xcda_d_o.xcda006 OR g_xcda_d[g_detail_idx].xcda007 != g_xcda_d_o.xcda007 
                                     OR g_xcda_d[g_detail_idx].xcda008 != g_xcda_d_o.xcda008 OR g_xcda_d[g_detail_idx].xcda009 != g_xcda_d_t.xcda009)) THEN    
               #160824-00007#222 161202 by lori add---(E)
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"' AND "|| "xcda001 = '"||g_xcda_d[g_detail_idx].xcda001 ||"' AND "|| "xcda002 = '"||g_xcda_d[g_detail_idx].xcda002 ||"' AND "|| "xcda006 = '"||g_xcda_d[g_detail_idx].xcda006 ||"' AND "|| "xcda007 = '"||g_xcda_d[g_detail_idx].xcda007 ||"' AND "|| "xcda008 = '"||g_xcda_d[g_detail_idx].xcda008 ||"' AND "|| "xcda009 = '"||g_xcda_d[g_detail_idx].xcda009 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            CALL axct304_insert_default() 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcda008
            #add-point:ON CHANGE xcda008 name="input.g.page1.xcda008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda009
            
            #add-point:AFTER FIELD xcda009 name="input.a.page1.xcda009"
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcda_m.xcdald IS NOT NULL AND g_xcda_m.xcda003 IS NOT NULL AND g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda001 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda002 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda006 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda007 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda008 IS NOT NULL AND g_xcda_d[g_detail_idx].xcda009 IS NOT NULL THEN 
              #IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t OR g_xcda_d[g_detail_idx].xcda001 != g_xcda_d_t.xcda001 OR g_xcda_d[g_detail_idx].xcda002 != g_xcda_d_t.xcda002 OR g_xcda_d[g_detail_idx].xcda006 != g_xcda_d_t.xcda006 OR g_xcda_d[g_detail_idx].xcda007 != g_xcda_d_t.xcda007 OR g_xcda_d[g_detail_idx].xcda008 != g_xcda_d_t.xcda008 OR g_xcda_d[g_detail_idx].xcda009 != g_xcda_d_t.xcda009)) THEN   #160824-00007#222 161202 by lori mark
               #160824-00007#222 161202 by lori add---(S) 
               #xcda002,xcda006,xcda007,xcda008就值改用_o
               IF l_cmd = 'a' OR ( l_cmd = 'u' 
                                  AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t 
                                    OR g_xcda_d[g_detail_idx].xcda001 != g_xcda_d_t.xcda001 OR g_xcda_d[g_detail_idx].xcda002 != g_xcda_d_o.xcda002 
                                     OR g_xcda_d[g_detail_idx].xcda006 != g_xcda_d_o.xcda006 OR g_xcda_d[g_detail_idx].xcda007 != g_xcda_d_o.xcda007 
                                     OR g_xcda_d[g_detail_idx].xcda008 != g_xcda_d_o.xcda008 OR g_xcda_d[g_detail_idx].xcda009 != g_xcda_d_t.xcda009)) THEN    
               #160824-00007#222 161202 by lori add---(E) 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"' AND "|| "xcda001 = '"||g_xcda_d[g_detail_idx].xcda001 ||"' AND "|| "xcda002 = '"||g_xcda_d[g_detail_idx].xcda002 ||"' AND "|| "xcda006 = '"||g_xcda_d[g_detail_idx].xcda006 ||"' AND "|| "xcda007 = '"||g_xcda_d[g_detail_idx].xcda007 ||"' AND "|| "xcda008 = '"||g_xcda_d[g_detail_idx].xcda008 ||"' AND "|| "xcda009 = '"||g_xcda_d[g_detail_idx].xcda009 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            IF NOT cl_null(g_xcda_d[l_ac].xcda009) THEN 
               #此段落由子樣板a19產生
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcda_d[l_ac].xcda009
               #160318-00025#12--add--str
               LET g_errshow = TRUE 
               LET g_chkparam.err_str[1] = "axc-00056:sub-01302|axci111|",cl_get_progname("axci111",g_lang,"2"),"|:EXEPROGaxci111"
               #160318-00025#12--add--end
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_xcau001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  LET g_xcda_d[l_ac].xcda009 = g_xcda_d_t.xcda009   #160824-00007#222 161202 by lori add
                  NEXT FIELD CURRENT
               END IF
            
            ELSE 
               NEXT FIELD CURRENT
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcda_d[l_ac].xcda009
            CALL ap_ref_array2(g_ref_fields,"SELECT xcaul003 FROM xcaul_t WHERE xcaulent='"||g_enterprise||"' AND xcaul001=? AND xcaul002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcda_d[l_ac].xcda009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcda_d[l_ac].xcda009_desc

             CALL axct304_detail_ref(g_xcda_d[l_ac].xcda002,g_xcda_d[l_ac].xcda006,g_xcda_d[l_ac].xcda009)
                 RETURNING g_xcda_d[l_ac].xcda002_desc,g_xcda_d[l_ac].xcda006_desc,g_xcda_d[l_ac].xcda006_desc_desc,
                           g_xcda_d[l_ac].imag014,g_xcda_d[l_ac].xcda009_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda009
            #add-point:BEFORE FIELD xcda009 name="input.b.page1.xcda009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcda009
            #add-point:ON CHANGE xcda009 name="input.g.page1.xcda009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda101
            #add-point:BEFORE FIELD xcda101 name="input.b.page1.xcda101"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda101
            
            #add-point:AFTER FIELD xcda101 name="input.a.page1.xcda101"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcda101
            #add-point:ON CHANGE xcda101 name="input.g.page1.xcda101"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcda102
            #add-point:BEFORE FIELD xcda102 name="input.b.page1.xcda102"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcda102
            
            #add-point:AFTER FIELD xcda102 name="input.a.page1.xcda102"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcda102
            #add-point:ON CHANGE xcda102 name="input.g.page1.xcda102"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.xcda001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda001
            #add-point:ON ACTION controlp INFIELD xcda001 name="input.c.page1.xcda001"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcda002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda002
            #add-point:ON ACTION controlp INFIELD xcda002 name="input.c.page1.xcda002"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda_d[l_ac].xcda002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_xcbf001()                                #呼叫開窗

            LET g_xcda_d[l_ac].xcda002 = g_qryparam.return1              

            DISPLAY g_xcda_d[l_ac].xcda002 TO xcda002              #
            CALL axct304_detail_ref(g_xcda_d[l_ac].xcda002,g_xcda_d[l_ac].xcda006,g_xcda_d[l_ac].xcda009)
                 RETURNING g_xcda_d[l_ac].xcda002_desc,g_xcda_d[l_ac].xcda006_desc,g_xcda_d[l_ac].xcda006_desc_desc,
                     g_xcda_d[l_ac].imag014,g_xcda_d[l_ac].xcda009_desc
            NEXT FIELD xcda002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xcda006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda006
            #add-point:ON ACTION controlp INFIELD xcda006 name="input.c.page1.xcda006"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda_d[l_ac].xcda006             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_imag001_2()                                #呼叫開窗

            LET g_xcda_d[l_ac].xcda006 = g_qryparam.return1              

            DISPLAY g_xcda_d[l_ac].xcda006 TO xcda006              #
            CALL axct304_detail_ref(g_xcda_d[l_ac].xcda002,g_xcda_d[l_ac].xcda006,g_xcda_d[l_ac].xcda009)
            RETURNING g_xcda_d[l_ac].xcda002_desc,g_xcda_d[l_ac].xcda006_desc,g_xcda_d[l_ac].xcda006_desc_desc,
                     g_xcda_d[l_ac].imag014,g_xcda_d[l_ac].xcda009_desc
            NEXT FIELD xcda006                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xcda007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda007
            #add-point:ON ACTION controlp INFIELD xcda007 name="input.c.page1.xcda007"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda_d[l_ac].xcda007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_inag006_2()                                #呼叫開窗

            LET g_xcda_d[l_ac].xcda007 = g_qryparam.return1              

            DISPLAY g_xcda_d[l_ac].xcda007 TO xcda007              #

            NEXT FIELD xcda007                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xcda008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda008
            #add-point:ON ACTION controlp INFIELD xcda008 name="input.c.page1.xcda008"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda_d[l_ac].xcda008             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_inaj010()                                #呼叫開窗

            LET g_xcda_d[l_ac].xcda008 = g_qryparam.return1              

            DISPLAY g_xcda_d[l_ac].xcda008 TO xcda008              #

            NEXT FIELD xcda008                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xcda009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda009
            #add-point:ON ACTION controlp INFIELD xcda009 name="input.c.page1.xcda009"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda_d[l_ac].xcda009             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_xcau001()                                #呼叫開窗

            LET g_xcda_d[l_ac].xcda009 = g_qryparam.return1              

            DISPLAY g_xcda_d[l_ac].xcda009 TO xcda009              #
            CALL axct304_detail_ref(g_xcda_d[l_ac].xcda002,g_xcda_d[l_ac].xcda006,g_xcda_d[l_ac].xcda009)
           RETURNING g_xcda_d[l_ac].xcda002_desc,g_xcda_d[l_ac].xcda006_desc,g_xcda_d[l_ac].xcda006_desc_desc,
                     g_xcda_d[l_ac].imag014,g_xcda_d[l_ac].xcda009_desc
            NEXT FIELD xcda009                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xcda101
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda101
            #add-point:ON ACTION controlp INFIELD xcda101 name="input.c.page1.xcda101"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xcda102
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcda102
            #add-point:ON ACTION controlp INFIELD xcda102 name="input.c.page1.xcda102"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xcda_d[l_ac].* = g_xcda_d_t.*
               CLOSE axct304_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xcda_d[l_ac].xcda001 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xcda_d[l_ac].* = g_xcda_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_xcda2_d[l_ac].xcdamodid = g_user 
LET g_xcda2_d[l_ac].xcdamoddt = cl_get_current()
LET g_xcda2_d[l_ac].xcdamodid_desc = cl_get_username(g_xcda2_d[l_ac].xcdamodid)
            
               #add-point:單身修改前 name="input.body.b_update"
               IF cl_null(g_xcda_d[l_ac].xcda007) THEN LET g_xcda_d[l_ac].xcda007 = ' ' END IF  #fengmy150804
               IF cl_null(g_xcda_d[l_ac].xcda102) THEN LET g_xcda_d[l_ac].xcda102 = 0 END IF
               CALL s_curr_round('',g_glaa001,g_xcda_d[l_ac].xcda102,2) RETURNING  g_xcda_d[l_ac].xcda102 
               CALL s_transaction_begin()
               #end add-point
         
               #將遮罩欄位還原
               CALL axct304_xcda_t_mask_restore('restore_mask_o')
         
               UPDATE xcda_t SET (xcdald,xcda003,xcda004,xcda005,xcda001,xcda002,xcda006,xcda007,xcda008, 
                   xcda009,xcda101,xcda102,xcdaownid,xcdaowndp,xcdacrtid,xcdacrtdp,xcdacrtdt,xcdamodid, 
                   xcdamoddt,xcdacnfid,xcdacnfdt,xcdapstid,xcdapstdt) = (g_xcda_m.xcdald,g_xcda_m.xcda003, 
                   g_xcda_m.xcda004,g_xcda_m.xcda005,g_xcda_d[l_ac].xcda001,g_xcda_d[l_ac].xcda002,g_xcda_d[l_ac].xcda006, 
                   g_xcda_d[l_ac].xcda007,g_xcda_d[l_ac].xcda008,g_xcda_d[l_ac].xcda009,g_xcda_d[l_ac].xcda101, 
                   g_xcda_d[l_ac].xcda102,g_xcda2_d[l_ac].xcdaownid,g_xcda2_d[l_ac].xcdaowndp,g_xcda2_d[l_ac].xcdacrtid, 
                   g_xcda2_d[l_ac].xcdacrtdp,g_xcda2_d[l_ac].xcdacrtdt,g_xcda2_d[l_ac].xcdamodid,g_xcda2_d[l_ac].xcdamoddt, 
                   g_xcda2_d[l_ac].xcdacnfid,g_xcda2_d[l_ac].xcdacnfdt,g_xcda2_d[l_ac].xcdapstid,g_xcda2_d[l_ac].xcdapstdt) 
 
                WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald 
                 AND xcda003 = g_xcda_m.xcda003 
                 AND xcda004 = g_xcda_m.xcda004 
                 AND xcda005 = g_xcda_m.xcda005 
 
                 AND xcda001 = g_xcda_d_t.xcda001 #項次   
                 AND xcda002 = g_xcda_d_t.xcda002  
                 AND xcda006 = g_xcda_d_t.xcda006  
                 AND xcda007 = g_xcda_d_t.xcda007  
                 AND xcda008 = g_xcda_d_t.xcda008  
                 AND xcda009 = g_xcda_d_t.xcda009  
 
                 
               #add-point:單身修改中 name="input.body.m_update"
               LET l_amount = 0
               LET l_rate = 1
               IF g_glaa015 = 'Y' THEN
                  IF g_xcda_d[l_ac].xcda102<>0 THEN
                     CALL s_aooi160_get_exrate('2',g_xcda_m.xcdald,g_bdate,g_glaa001,g_glaa016,0,g_glaa018)
                          RETURNING l_rate
                     LET l_amount = l_rate * g_xcda_d[l_ac].xcda102
                  END IF
                  CALL s_curr_round('',g_glaa016,l_amount,2) RETURNING  l_amount
                  UPDATE xcda_t SET (xcda009,xcdamodid,xcdamoddt,xcda102) = 
                   (g_xcda_d[l_ac].xcda009,g_xcda2_d[l_ac].xcdamodid,g_xcda2_d[l_ac].xcdamoddt,l_amount)                                    
                   WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald 
                 AND xcda003 = g_xcda_m.xcda003 
                 AND xcda004 = g_xcda_m.xcda004 
                 AND xcda005 = g_xcda_m.xcda005 
 
                 AND xcda001 = '2' 
                 AND xcda002 = g_xcda_d_t.xcda002  
                 AND xcda006 = g_xcda_d_t.xcda006  
                 AND xcda007 = g_xcda_d_t.xcda007  
                 AND xcda008 = g_xcda_d_t.xcda008  
                 AND xcda009 = g_xcda_d_t.xcda009 
               END IF
               LET l_amount = 0
               LET l_rate = 1
               IF g_glaa019 = 'Y' THEN
                  IF g_xcda_d[l_ac].xcda102<>0 THEN
                     CALL s_aooi160_get_exrate('2',g_xcda_m.xcdald,g_bdate,g_glaa001,g_glaa020,0,g_glaa022)
                          RETURNING l_rate
                     LET l_amount = l_rate * g_xcda_d[l_ac].xcda102
                  END IF
                  CALL s_curr_round('',g_glaa020,l_amount,2) RETURNING  l_amount
                  UPDATE xcda_t SET (xcda009,xcdamodid,xcdamoddt,xcda102) = 
                   (g_xcda_d[l_ac].xcda009,g_xcda2_d[l_ac].xcdamodid,g_xcda2_d[l_ac].xcdamoddt,l_amount)                                    
                   WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald 
                 AND xcda003 = g_xcda_m.xcda003 
                 AND xcda004 = g_xcda_m.xcda004 
                 AND xcda005 = g_xcda_m.xcda005 
 
                 AND xcda001 = '3'  
                 AND xcda002 = g_xcda_d_t.xcda002  
                 AND xcda006 = g_xcda_d_t.xcda006  
                 AND xcda007 = g_xcda_d_t.xcda007  
                 AND xcda008 = g_xcda_d_t.xcda008  
                 AND xcda009 = g_xcda_d_t.xcda009
               END IF
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcda_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "xcda_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcda_m.xcdald
               LET gs_keys_bak[1] = g_xcdald_t
               LET gs_keys[2] = g_xcda_m.xcda003
               LET gs_keys_bak[2] = g_xcda003_t
               LET gs_keys[3] = g_xcda_m.xcda004
               LET gs_keys_bak[3] = g_xcda004_t
               LET gs_keys[4] = g_xcda_m.xcda005
               LET gs_keys_bak[4] = g_xcda005_t
               LET gs_keys[5] = g_xcda_d[g_detail_idx].xcda001
               LET gs_keys_bak[5] = g_xcda_d_t.xcda001
               LET gs_keys[6] = g_xcda_d[g_detail_idx].xcda002
               LET gs_keys_bak[6] = g_xcda_d_t.xcda002
               LET gs_keys[7] = g_xcda_d[g_detail_idx].xcda006
               LET gs_keys_bak[7] = g_xcda_d_t.xcda006
               LET gs_keys[8] = g_xcda_d[g_detail_idx].xcda007
               LET gs_keys_bak[8] = g_xcda_d_t.xcda007
               LET gs_keys[9] = g_xcda_d[g_detail_idx].xcda008
               LET gs_keys_bak[9] = g_xcda_d_t.xcda008
               LET gs_keys[10] = g_xcda_d[g_detail_idx].xcda009
               LET gs_keys_bak[10] = g_xcda_d_t.xcda009
               CALL axct304_update_b('xcda_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     #修改歷程記錄(單身修改)
                     LET g_log1 = util.JSON.stringify(g_xcda_m),util.JSON.stringify(g_xcda_d_t)
                     LET g_log2 = util.JSON.stringify(g_xcda_m),util.JSON.stringify(g_xcda_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axct304_xcda_t_mask_restore('restore_mask_n')
               
               #若Key欄位有變動
               LET ls_keys[01] = g_xcda_m.xcdald
               LET ls_keys[ls_keys.getLength()+1] = g_xcda_m.xcda003
               LET ls_keys[ls_keys.getLength()+1] = g_xcda_m.xcda004
               LET ls_keys[ls_keys.getLength()+1] = g_xcda_m.xcda005
 
               LET ls_keys[ls_keys.getLength()+1] = g_xcda_d_t.xcda001
               LET ls_keys[ls_keys.getLength()+1] = g_xcda_d_t.xcda002
               LET ls_keys[ls_keys.getLength()+1] = g_xcda_d_t.xcda006
               LET ls_keys[ls_keys.getLength()+1] = g_xcda_d_t.xcda007
               LET ls_keys[ls_keys.getLength()+1] = g_xcda_d_t.xcda008
               LET ls_keys[ls_keys.getLength()+1] = g_xcda_d_t.xcda009
 
               CALL axct304_key_update_b(ls_keys)
               
               #add-point:單身修改後 name="input.body.a_update"
               CALL s_transaction_end('Y','0') #140909 
               #end add-point
            END IF
 
         AFTER ROW
            #add-point:input段after row name="input.body.after_row"
            
            #end add-point  
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               CLOSE axct304_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xcda_d[l_ac].* = g_xcda_d_t.*
               END IF
               EXIT DIALOG 
            END IF
 
            CLOSE axct304_bcl
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xcda_d.getLength() = 0 THEN
               NEXT FIELD xcda001
            END IF
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point    
            
         ON ACTION controlo   
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xcda_d[li_reproduce_target].* = g_xcda_d[li_reproduce].*
               LET g_xcda2_d[li_reproduce_target].* = g_xcda2_d[li_reproduce].*
 
               LET g_xcda_d[li_reproduce_target].xcda001 = NULL
               LET g_xcda_d[li_reproduce_target].xcda002 = NULL
               LET g_xcda_d[li_reproduce_target].xcda006 = NULL
               LET g_xcda_d[li_reproduce_target].xcda007 = NULL
               LET g_xcda_d[li_reproduce_target].xcda008 = NULL
               LET g_xcda_d[li_reproduce_target].xcda009 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_xcda_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xcda_d.getLength()+1
            END IF
            
      END INPUT
 
 
      
      DISPLAY ARRAY g_xcda2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
      
         BEFORE ROW
            CALL axct304_b_fill(g_wc2) #test 
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_page = 2
            CALL axct304_idx_chk()
            CALL axct304_ui_detailshow()
        
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)      
         
         #add-point:page2自定義行為 name="input.body2.action"
         
         #end add-point
         
      END DISPLAY
 
      
 
      
 
    
      #add-point:input段more_input name="input.more_inputarray"
       INPUT ARRAY g_xcda3_d FROM s_detail3.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = 0)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcda3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axct304_b_fill_3() 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前

            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail3")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axct304_cl USING g_enterprise,
                                               g_xcda_m.xcdald
                                               ,g_xcda_m.xcda003
                                               ,g_xcda_m.xcda004
                                               ,g_xcda_m.xcda005
 
                                               
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct304_cl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CLOSE axct304_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_xcda3_d[l_ac].xcda001_3 IS NOT NULL
               AND g_xcda3_d[l_ac].xcda002_3 IS NOT NULL
               AND g_xcda3_d[l_ac].xcda006_3 IS NOT NULL
               AND g_xcda3_d[l_ac].xcda007_3 IS NOT NULL
               AND g_xcda3_d[l_ac].xcda008_3 IS NOT NULL
               AND g_xcda3_d[l_ac].xcda009_3 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xcda3_d_t.* = g_xcda3_d[l_ac].*  #BACKUP
               LET g_xcda3_d_o.* = g_xcda3_d[l_ac].*  #BACKUP
               CALL axct304_set_entry_b(l_cmd)
               #add-point:set_entry_b後

               #end add-point
               CALL axct304_set_no_entry_b(l_cmd)
               OPEN axct304_bcl USING g_enterprise,g_xcda_m.xcdald,
                                                g_xcda_m.xcda003,
                                                g_xcda_m.xcda004,
                                                g_xcda_m.xcda005,
 
                                                g_xcda3_d_t.xcda001_3
                                                ,g_xcda3_d_t.xcda002_3
                                                ,g_xcda3_d_t.xcda006_3
                                                ,g_xcda3_d_t.xcda007_3
                                                ,g_xcda3_d_t.xcda008_3
                                                ,g_xcda3_d_t.xcda009_3
 
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct304_bcl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axct304_bcl INTO g_xcda3_d[l_ac].xcda001_3,g_xcda3_d[l_ac].xcda002_3,g_xcda3_d[l_ac].xcda006_3, 
                      g_xcda3_d[l_ac].xcda007_3,g_xcda3_d[l_ac].xcda008_3,g_xcda3_d[l_ac].xcda009_3,g_xcda3_d[l_ac].xcda101_3, 
                      g_xcda3_d[l_ac].xcda102_3,g_xcda2_d[l_ac].xcda001,g_xcda2_d[l_ac].xcda002,g_xcda2_d[l_ac].xcda006, 
                      g_xcda2_d[l_ac].xcda007,g_xcda2_d[l_ac].xcda008,g_xcda2_d[l_ac].xcda009,g_xcda2_d[l_ac].xcdaownid, 
                      g_xcda2_d[l_ac].xcdaowndp,g_xcda2_d[l_ac].xcdacrtid,g_xcda2_d[l_ac].xcdacrtdp, 
                      g_xcda2_d[l_ac].xcdacrtdt,g_xcda2_d[l_ac].xcdamodid,g_xcda2_d[l_ac].xcdamoddt, 
                      g_xcda2_d[l_ac].xcdacnfid,g_xcda2_d[l_ac].xcdacnfdt,g_xcda2_d[l_ac].xcdapstid, 
                      g_xcda2_d[l_ac].xcdapstdt
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_xcda3_d_t.xcda001_3 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
 
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axct304_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            IF l_cmd='u' THEN
              #IF g_glaa015 = 'Y' THEN
                   OPEN axct304_bcl USING g_enterprise,g_xcda_m.xcdald,
                                                g_xcda_m.xcda003,
                                                g_xcda_m.xcda004,
                                                g_xcda_m.xcda005,
 
                                                '1'
                                                ,g_xcda3_d_t.xcda002_3
                                                ,g_xcda3_d_t.xcda006_3
                                                ,g_xcda3_d_t.xcda007_3
                                                ,g_xcda3_d_t.xcda008_3
                                                ,g_xcda3_d_t.xcda009_3
                  
                  IF STATUS THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "OPEN axct304_bcl:" 
                     LET g_errparam.code   =  STATUS 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                   
                     LET l_lock_sw='Y'
                  END IF
              #END IF
               IF g_glaa019 = 'Y' THEN                                 
                  OPEN axct304_bcl USING g_enterprise,g_xcda_m.xcdald,
                                                g_xcda_m.xcda003,
                                                g_xcda_m.xcda004,
                                                g_xcda_m.xcda005,
 
                                                '3'
                                                ,g_xcda3_d_t.xcda002_3
                                                ,g_xcda3_d_t.xcda006_3
                                                ,g_xcda3_d_t.xcda007_3
                                                ,g_xcda3_d_t.xcda008_3
                                                ,g_xcda3_d_t.xcda009_3
                  
                  IF STATUS THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "OPEN axct304_bcl" 
                     LET g_errparam.code   =  STATUS 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                  
                     LET l_lock_sw='Y'
                  END IF
               END IF
            END IF
            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_xcda3_d_t.* TO NULL
            INITIALIZE g_xcda3_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xcda3_d[l_ac].* TO NULL
            #公用欄位預設值
            #此段落由子樣板a14產生    
      #公用欄位新增給值
      LET g_xcda2_d[l_ac].xcdaownid = g_user
      LET g_xcda2_d[l_ac].xcdaowndp = g_dept
      LET g_xcda2_d[l_ac].xcdacrtid = g_user
      LET g_xcda2_d[l_ac].xcdacrtdp = g_dept 
      LET g_xcda2_d[l_ac].xcdacrtdt = cl_get_current()
      LET g_xcda2_d[l_ac].xcdamodid = ""
      LET g_xcda2_d[l_ac].xcdamoddt = ""
 
  
            #一般欄位預設值
                  LET g_xcda3_d[l_ac].xcda001_3 = "2"
 
            
            #add-point:modify段before備份

            #end add-point
            LET g_xcda3_d_t.* = g_xcda3_d[l_ac].*     #新輸入資料
            LET g_xcda3_d_o.* = g_xcda3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axct304_set_entry_b(l_cmd)
            #add-point:set_entry_b後

            #end add-point
            CALL axct304_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xcda3_d[li_reproduce_target].* = g_xcda3_d[li_reproduce].*
               LET g_xcda2_d[li_reproduce_target].* = g_xcda2_d[li_reproduce].*
 
               LET g_xcda3_d[g_xcda3_d.getLength()].xcda001_3 = NULL
               LET g_xcda3_d[g_xcda3_d.getLength()].xcda002_3 = NULL
               LET g_xcda3_d[g_xcda3_d.getLength()].xcda006_3 = NULL
               LET g_xcda3_d[g_xcda3_d.getLength()].xcda007_3 = NULL
               LET g_xcda3_d[g_xcda3_d.getLength()].xcda008_3 = NULL
               LET g_xcda3_d[g_xcda3_d.getLength()].xcda009_3 = NULL
 
            END IF
            
            #add-point:modify段before insert

            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xcda_t 
             WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald
               AND xcda003 = g_xcda_m.xcda003
               AND xcda004 = g_xcda_m.xcda004
               AND xcda005 = g_xcda_m.xcda005
 
               AND xcda001_3 = g_xcda3_d[l_ac].xcda001_3
               AND xcda002_3 = g_xcda3_d[l_ac].xcda002_3
               AND xcda006_3 = g_xcda3_d[l_ac].xcda006_3
               AND xcda007_3 = g_xcda3_d[l_ac].xcda007_3
               AND xcda008_3 = g_xcda3_d[l_ac].xcda008_3
               AND xcda009_3 = g_xcda3_d[l_ac].xcda009_3
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
               
               #end add-point
               INSERT INTO xcda_t
                           (xcdaent,
                            xcdacomp,xcda004,xcda005,xcdald,xcda003,
                            xcda001_3,xcda002_3,xcda006_3,xcda007_3,xcda008_3,xcda009_3
                            ,xcda101,xcda102,xcdaownid,xcdaowndp,xcdacrtid,xcdacrtdp,xcdacrtdt,xcdamodid,xcdamoddt,xcdacnfid,xcdacnfdt,xcdapstid,xcdapstdt) 
                     VALUES(g_enterprise,
                            g_xcda_m.xcdacomp,g_xcda_m.xcda004,g_xcda_m.xcda005,g_xcda_m.xcdald,g_xcda_m.xcda003,
                            g_xcda3_d[l_ac].xcda001_3,g_xcda3_d[l_ac].xcda002_3,g_xcda3_d[l_ac].xcda006_3,g_xcda3_d[l_ac].xcda007_3, 
                                g_xcda3_d[l_ac].xcda008_3,g_xcda3_d[l_ac].xcda009_3
                            ,g_xcda3_d[l_ac].xcda101_3,g_xcda3_d[l_ac].xcda102_3,g_xcda2_d[l_ac].xcdaownid, 
                                g_xcda2_d[l_ac].xcdaowndp,g_xcda2_d[l_ac].xcdacrtid,g_xcda2_d[l_ac].xcdacrtdp, 
                                g_xcda2_d[l_ac].xcdacrtdt,g_xcda2_d[l_ac].xcdamodid,g_xcda2_d[l_ac].xcdamoddt, 
                                g_xcda2_d[l_ac].xcdacnfid,g_xcda2_d[l_ac].xcdacnfdt,g_xcda2_d[l_ac].xcdapstid, 
                                g_xcda2_d[l_ac].xcdapstdt)
               #add-point:單身新增中
               
               #end add-point
               LET p_cmd = 'u'
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               INITIALIZE g_xcda3_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcda_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert

               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後

            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前

               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CANCEL DELETE
               END IF
               IF axct304_before_delete_3() THEN 
                  
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axct304_bcl
               LET l_count = g_xcda3_d.getLength()
            END IF 
            
            #add-point:單身刪除後

            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE 
               IF g_rec_b = 0 THEN
                  RETURN
               END IF 
               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_xcda3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #此段落由子樣板a01產生
         BEFORE FIELD xcda001_3
            #add-point:BEFORE FIELD xcda001_3

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcda001_3
            
            #add-point:AFTER FIELD xcda001_3
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcda_m.xcdald IS NOT NULL AND g_xcda_m.xcda003 IS NOT NULL AND g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda001_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda002_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda006_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda007_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda008_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda009_3 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t OR g_xcda3_d[g_detail_idx].xcda001_3 != g_xcda3_d_t.xcda001_3 OR g_xcda3_d[g_detail_idx].xcda002_3 != g_xcda3_d_t.xcda002_3 OR g_xcda3_d[g_detail_idx].xcda006_3 != g_xcda3_d_t.xcda006_3 OR g_xcda3_d[g_detail_idx].xcda007_3 != g_xcda3_d_t.xcda007_3 OR g_xcda3_d[g_detail_idx].xcda008_3 != g_xcda3_d_t.xcda008_3 OR g_xcda3_d[g_detail_idx].xcda009_3 != g_xcda3_d_t.xcda009_3)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"' AND "|| "xcda001 = '"||g_xcda3_d[g_detail_idx].xcda001_3 ||"' AND "|| "xcda002 = '"||g_xcda3_d[g_detail_idx].xcda002_3 ||"' AND "|| "xcda006 = '"||g_xcda3_d[g_detail_idx].xcda006_3 ||"' AND "|| "xcda007 = '"||g_xcda3_d[g_detail_idx].xcda007_3 ||"' AND "|| "xcda008 = '"||g_xcda3_d[g_detail_idx].xcda008_3 ||"' AND "|| "xcda009 = '"||g_xcda3_d[g_detail_idx].xcda009_3 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcda001_3
            #add-point:ON CHANGE xcda001_3

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcda002_3
            
            #add-point:AFTER FIELD xcda002_3
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcda_m.xcdald IS NOT NULL AND g_xcda_m.xcda003 IS NOT NULL AND g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda001_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda002_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda006_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda007_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda008_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda009_3 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t OR g_xcda3_d[g_detail_idx].xcda001_3 != g_xcda3_d_t.xcda001_3 OR g_xcda3_d[g_detail_idx].xcda002_3 != g_xcda3_d_t.xcda002_3 OR g_xcda3_d[g_detail_idx].xcda006_3 != g_xcda3_d_t.xcda006_3 OR g_xcda3_d[g_detail_idx].xcda007_3 != g_xcda3_d_t.xcda007_3 OR g_xcda3_d[g_detail_idx].xcda008_3 != g_xcda3_d_t.xcda008_3 OR g_xcda3_d[g_detail_idx].xcda009_3 != g_xcda3_d_t.xcda009_3)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"' AND "|| "xcda001 = '"||g_xcda3_d[g_detail_idx].xcda001_3 ||"' AND "|| "xcda002 = '"||g_xcda3_d[g_detail_idx].xcda002_3 ||"' AND "|| "xcda006 = '"||g_xcda3_d[g_detail_idx].xcda006_3 ||"' AND "|| "xcda007 = '"||g_xcda3_d[g_detail_idx].xcda007_3 ||"' AND "|| "xcda008 = '"||g_xcda3_d[g_detail_idx].xcda008_3 ||"' AND "|| "xcda009 = '"||g_xcda3_d[g_detail_idx].xcda009_3 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcda_m.xcdacomp
            LET g_ref_fields[2] = g_xcda3_d[l_ac].xcda002_3
            CALL ap_ref_array2(g_ref_fields,"SELECT xcbfl003 FROM xcbfl_t WHERE xcbflent='"||g_enterprise||"' AND xcbflcomp=? AND xcbfl001=? AND xcbfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcda3_d[l_ac].xcda002_3_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcda3_d[l_ac].xcda002_3_desc

            CALL axct304_detail_ref(g_xcda3_d[l_ac].xcda002_3,g_xcda3_d[l_ac].xcda006_3,g_xcda3_d[l_ac].xcda009_3)
                 RETURNING g_xcda3_d[l_ac].xcda002_3_desc,g_xcda3_d[l_ac].xcda006_3_desc,g_xcda3_d[l_ac].xcda006_3_desc_desc,
                           g_xcda3_d[l_ac].imag014_3,g_xcda3_d[l_ac].xcda009_3_desc
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcda002_3
            #add-point:BEFORE FIELD xcda002_3

            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcda002_3
            #add-point:ON CHANGE xcda002_3

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcda006_3
            
            #add-point:AFTER FIELD xcda006_3
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcda_m.xcdald IS NOT NULL AND g_xcda_m.xcda003 IS NOT NULL AND g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda001_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda002_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda006_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda007_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda008_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda009_3 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t OR g_xcda3_d[g_detail_idx].xcda001_3 != g_xcda3_d_t.xcda001_3 OR g_xcda3_d[g_detail_idx].xcda002_3 != g_xcda3_d_t.xcda002_3 OR g_xcda3_d[g_detail_idx].xcda006_3 != g_xcda3_d_t.xcda006_3 OR g_xcda3_d[g_detail_idx].xcda007_3 != g_xcda3_d_t.xcda007_3 OR g_xcda3_d[g_detail_idx].xcda008_3 != g_xcda3_d_t.xcda008_3 OR g_xcda3_d[g_detail_idx].xcda009_3 != g_xcda3_d_t.xcda009_3)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"' AND "|| "xcda001 = '"||g_xcda3_d[g_detail_idx].xcda001_3 ||"' AND "|| "xcda002 = '"||g_xcda3_d[g_detail_idx].xcda002_3 ||"' AND "|| "xcda006 = '"||g_xcda3_d[g_detail_idx].xcda006_3 ||"' AND "|| "xcda007 = '"||g_xcda3_d[g_detail_idx].xcda007_3 ||"' AND "|| "xcda008 = '"||g_xcda3_d[g_detail_idx].xcda008_3 ||"' AND "|| "xcda009 = '"||g_xcda3_d[g_detail_idx].xcda009_3 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcda3_d[l_ac].xcda006_3
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcda3_d[l_ac].xcda006_3_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcda3_d[l_ac].xcda006_3_desc

            CALL axct304_detail_ref(g_xcda3_d[l_ac].xcda002_3,g_xcda3_d[l_ac].xcda006_3,g_xcda3_d[l_ac].xcda009_3)
                 RETURNING g_xcda3_d[l_ac].xcda002_3_desc,g_xcda3_d[l_ac].xcda006_3_desc,g_xcda3_d[l_ac].xcda006_3_desc_desc,
                           g_xcda3_d[l_ac].imag014_3,g_xcda3_d[l_ac].xcda009_3_desc
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcda006_3
            #add-point:BEFORE FIELD xcda006_3

            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcda006_3
            #add-point:ON CHANGE xcda006_3

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcda007_3
            #add-point:BEFORE FIELD xcda007_3

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcda007_3
            
            #add-point:AFTER FIELD xcda007_3
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcda_m.xcdald IS NOT NULL AND g_xcda_m.xcda003 IS NOT NULL AND g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda001_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda002_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda006_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda007_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda008_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda009_3 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t OR g_xcda3_d[g_detail_idx].xcda001_3 != g_xcda3_d_t.xcda001_3 OR g_xcda3_d[g_detail_idx].xcda002_3 != g_xcda3_d_t.xcda002_3 OR g_xcda3_d[g_detail_idx].xcda006_3 != g_xcda3_d_t.xcda006_3 OR g_xcda3_d[g_detail_idx].xcda007_3 != g_xcda3_d_t.xcda007_3 OR g_xcda3_d[g_detail_idx].xcda008_3 != g_xcda3_d_t.xcda008_3 OR g_xcda3_d[g_detail_idx].xcda009_3 != g_xcda3_d_t.xcda009_3)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"' AND "|| "xcda001 = '"||g_xcda3_d[g_detail_idx].xcda001_3 ||"' AND "|| "xcda002 = '"||g_xcda3_d[g_detail_idx].xcda002_3 ||"' AND "|| "xcda006 = '"||g_xcda3_d[g_detail_idx].xcda006_3 ||"' AND "|| "xcda007 = '"||g_xcda3_d[g_detail_idx].xcda007_3 ||"' AND "|| "xcda008 = '"||g_xcda3_d[g_detail_idx].xcda008_3 ||"' AND "|| "xcda009 = '"||g_xcda3_d[g_detail_idx].xcda009_3 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcda007_3
            #add-point:ON CHANGE xcda007_3

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imag014_3
            
            #add-point:AFTER FIELD imag014
            IF NOT cl_null(g_xcda3_d[l_ac].imag014_3) THEN 
#此段落由子樣板a19產生
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcda3_d[l_ac].imag014_3
               #160318-00025#12--add--str
               LET g_errshow = TRUE 
               LET g_chkparam.err_str[1] = "aim-00005:sub-01302|aooi250|",cl_get_progname("aooi250",g_lang,"2"),"|:EXEPROGaooi250"
               #160318-00025#12--add--end
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 


            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imag014_3
            #add-point:BEFORE FIELD imag014

            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE imag014_3
            #add-point:ON CHANGE imag014

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcda008_3
            #add-point:BEFORE FIELD xcda008_3

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcda008_3
            
            #add-point:AFTER FIELD xcda008_3
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcda_m.xcdald IS NOT NULL AND g_xcda_m.xcda003 IS NOT NULL AND g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda001_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda002_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda006_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda007_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda008_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda009_3 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t OR g_xcda3_d[g_detail_idx].xcda001_3 != g_xcda3_d_t.xcda001_3 OR g_xcda3_d[g_detail_idx].xcda002_3 != g_xcda3_d_t.xcda002_3 OR g_xcda3_d[g_detail_idx].xcda006_3 != g_xcda3_d_t.xcda006_3 OR g_xcda3_d[g_detail_idx].xcda007_3 != g_xcda3_d_t.xcda007_3 OR g_xcda3_d[g_detail_idx].xcda008_3 != g_xcda3_d_t.xcda008_3 OR g_xcda3_d[g_detail_idx].xcda009_3 != g_xcda3_d_t.xcda009_3)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"' AND "|| "xcda001_3 = '"||g_xcda3_d[g_detail_idx].xcda001_3 ||"' AND "|| "xcda002_3 = '"||g_xcda3_d[g_detail_idx].xcda002_3 ||"' AND "|| "xcda006_3 = '"||g_xcda3_d[g_detail_idx].xcda006_3 ||"' AND "|| "xcda007_3 = '"||g_xcda3_d[g_detail_idx].xcda007_3 ||"' AND "|| "xcda008_3 = '"||g_xcda3_d[g_detail_idx].xcda008_3 ||"' AND "|| "xcda009_3 = '"||g_xcda3_d[g_detail_idx].xcda009_3 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcda008_3
            #add-point:ON CHANGE xcda008_3

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcda009_3
            
            #add-point:AFTER FIELD xcda009_3
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcda_m.xcdald IS NOT NULL AND g_xcda_m.xcda003 IS NOT NULL AND g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda001_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda002_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda006_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda007_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda008_3 IS NOT NULL AND g_xcda3_d[g_detail_idx].xcda009_3 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t OR g_xcda3_d[g_detail_idx].xcda001_3 != g_xcda3_d_t.xcda001_3 OR g_xcda3_d[g_detail_idx].xcda002_3 != g_xcda3_d_t.xcda002_3 OR g_xcda3_d[g_detail_idx].xcda006_3 != g_xcda3_d_t.xcda006_3 OR g_xcda3_d[g_detail_idx].xcda007_3 != g_xcda3_d_t.xcda007_3 OR g_xcda3_d[g_detail_idx].xcda008_3 != g_xcda3_d_t.xcda008_3 OR g_xcda3_d[g_detail_idx].xcda009_3 != g_xcda3_d_t.xcda009_3)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"' AND "|| "xcda001 = '"||g_xcda3_d[g_detail_idx].xcda001_3 ||"' AND "|| "xcda002 = '"||g_xcda3_d[g_detail_idx].xcda002_3 ||"' AND "|| "xcda006 = '"||g_xcda3_d[g_detail_idx].xcda006_3 ||"' AND "|| "xcda007 = '"||g_xcda3_d[g_detail_idx].xcda007_3 ||"' AND "|| "xcda008 = '"||g_xcda3_d[g_detail_idx].xcda008_3 ||"' AND "|| "xcda009 = '"||g_xcda3_d[g_detail_idx].xcda009_3 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            IF NOT cl_null(g_xcda3_d[l_ac].xcda009_3) THEN 
#此段落由子樣板a19產生
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcda3_d[l_ac].xcda009_3
               #160318-00025#12--add--str
               LET g_errshow = TRUE 
               LET g_chkparam.err_str[1] = "axc-00056:sub-01302|axci111|",cl_get_progname("axci111",g_lang,"2"),"|:EXEPROGaxci111"
               #160318-00025#12--add--end
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_xcau001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            
            ELSE
               NEXT FIELD CURRENT
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcda3_d[l_ac].xcda009_3
            CALL ap_ref_array2(g_ref_fields,"SELECT xcaul003 FROM xcaul_t WHERE xcaulent='"||g_enterprise||"' AND xcaul001=? AND xcaul002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcda3_d[l_ac].xcda009_3_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcda3_d[l_ac].xcda009_3_desc

            CALL axct304_detail_ref(g_xcda3_d[l_ac].xcda002_3,g_xcda3_d[l_ac].xcda006_3,g_xcda3_d[l_ac].xcda009_3)
                 RETURNING g_xcda3_d[l_ac].xcda002_3_desc,g_xcda3_d[l_ac].xcda006_3_desc,g_xcda3_d[l_ac].xcda006_3_desc_desc,
                           g_xcda3_d[l_ac].imag014_3,g_xcda3_d[l_ac].xcda009_3_desc
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcda009_3
            #add-point:BEFORE FIELD xcda009_3

            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcda009_3
            #add-point:ON CHANGE xcda009_3

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcda101
            #add-point:BEFORE FIELD xcda101

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcda101
            
            #add-point:AFTER FIELD xcda101

            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcda101
            #add-point:ON CHANGE xcda101

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcda102
            #add-point:BEFORE FIELD xcda102

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcda102
            
            #add-point:AFTER FIELD xcda102

            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcda102
            #add-point:ON CHANGE xcda102

            #END add-point
 
 
                  #Ctrlp:input.c.page1.xcda001_3
         ON ACTION controlp INFIELD xcda001_3
            #add-point:ON ACTION controlp INFIELD xcda001_3

            #END add-point
 
         #Ctrlp:input.c.page1.xcda002_3
         ON ACTION controlp INFIELD xcda002_3
            #add-point:ON ACTION controlp INFIELD xcda002_3
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda3_d[l_ac].xcda002_3             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_xcbf001()                                #呼叫開窗

            LET g_xcda3_d[l_ac].xcda002_3 = g_qryparam.return1              

            DISPLAY g_xcda3_d[l_ac].xcda002_3 TO xcda002_3              #
            CALL axct304_detail_ref(g_xcda3_d[l_ac].xcda002_3,g_xcda3_d[l_ac].xcda006_3,g_xcda3_d[l_ac].xcda009_3)
                 RETURNING g_xcda3_d[l_ac].xcda002_3_desc,g_xcda3_d[l_ac].xcda006_3_desc,g_xcda3_d[l_ac].xcda006_3_desc_desc,
                           g_xcda3_d[l_ac].imag014_3,g_xcda3_d[l_ac].xcda009_3_desc
            NEXT FIELD xcda002_3                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcda006_3
         ON ACTION controlp INFIELD xcda006_3
            #add-point:ON ACTION controlp INFIELD xcda006_3
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda3_d[l_ac].xcda006_3             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_imag001_2()                                #呼叫開窗

            LET g_xcda3_d[l_ac].xcda006_3 = g_qryparam.return1              

            DISPLAY g_xcda3_d[l_ac].xcda006_3 TO xcda006_3              #
            CALL axct304_detail_ref(g_xcda3_d[l_ac].xcda002_3,g_xcda3_d[l_ac].xcda006_3,g_xcda3_d[l_ac].xcda009_3)
                 RETURNING g_xcda3_d[l_ac].xcda002_3_desc,g_xcda3_d[l_ac].xcda006_3_desc,g_xcda3_d[l_ac].xcda006_3_desc_desc,
                           g_xcda3_d[l_ac].imag014_3,g_xcda3_d[l_ac].xcda009_3_desc
            NEXT FIELD xcda006_3                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcda007_3
         ON ACTION controlp INFIELD xcda007_3
            #add-point:ON ACTION controlp INFIELD xcda007_3
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda3_d[l_ac].xcda007_3             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_inag006_2()                                #呼叫開窗

            LET g_xcda3_d[l_ac].xcda007_3 = g_qryparam.return1              

            DISPLAY g_xcda3_d[l_ac].xcda007_3 TO xcda007_3              #

            NEXT FIELD xcda007_3                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.imag014
         ON ACTION controlp INFIELD imag014
            #add-point:ON ACTION controlp INFIELD imag014
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda3_d[l_ac].imag014_3             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_xcda3_d[l_ac].imag014_3 = g_qryparam.return1              

            DISPLAY g_xcda3_d[l_ac].imag014_3 TO imag014_3             #

            NEXT FIELD imag014                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcda008_3
         ON ACTION controlp INFIELD xcda008_3
            #add-point:ON ACTION controlp INFIELD xcda008_3
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda3_d[l_ac].xcda008_3             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_inaj010()                                #呼叫開窗

            LET g_xcda3_d[l_ac].xcda008_3 = g_qryparam.return1              

            DISPLAY g_xcda3_d[l_ac].xcda008_3 TO xcda008_3              #

            NEXT FIELD xcda008_3                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcda009_3
         ON ACTION controlp INFIELD xcda009_3
            #add-point:ON ACTION controlp INFIELD xcda009_3
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda3_d[l_ac].xcda009_3             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_xcau001()                                #呼叫開窗

            LET g_xcda3_d[l_ac].xcda009_3 = g_qryparam.return1              

            DISPLAY g_xcda3_d[l_ac].xcda009_3 TO xcda009_3              #
            CALL axct304_detail_ref(g_xcda3_d[l_ac].xcda002_3,g_xcda3_d[l_ac].xcda006_3,g_xcda3_d[l_ac].xcda009_3)
                 RETURNING g_xcda3_d[l_ac].xcda002_3_desc,g_xcda3_d[l_ac].xcda006_3_desc,g_xcda3_d[l_ac].xcda006_3_desc_desc,
                           g_xcda3_d[l_ac].imag014_3,g_xcda3_d[l_ac].xcda009_3_desc
            NEXT FIELD xcda009_3                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcda101
         ON ACTION controlp INFIELD xcda101
            #add-point:ON ACTION controlp INFIELD xcda101

            #END add-point
 
         #Ctrlp:input.c.page1.xcda102
         ON ACTION controlp INFIELD xcda102
            #add-point:ON ACTION controlp INFIELD xcda102

            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               LET g_xcda3_d[l_ac].* = g_xcda3_d_t.*
               CLOSE axct304_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xcda3_d[l_ac].xcda001_3 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               LET g_xcda3_d[l_ac].* = g_xcda3_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_xcda2_d[l_ac].xcdamodid = g_user 
LET g_xcda2_d[l_ac].xcdamoddt = cl_get_current()
 
            
               #add-point:單身修改前
               IF cl_null(g_xcda3_d[l_ac].xcda102_3) THEN LET g_xcda3_d[l_ac].xcda102_3 = 0 END IF
               CALL s_curr_round('',g_glaa016,g_xcda3_d[l_ac].xcda102_3,2) RETURNING  g_xcda3_d[l_ac].xcda102_3
               CALL s_transaction_begin()
               #end add-point
         
               UPDATE xcda_t SET (xcdald,xcda003,xcda004,xcda005,xcda001,xcda002,xcda006,xcda007,xcda008, 
                   xcda009,xcda101,xcda102,xcdaownid,xcdaowndp,xcdacrtid,xcdacrtdp,xcdacrtdt,xcdamodid, 
                   xcdamoddt,xcdacnfid,xcdacnfdt,xcdapstid,xcdapstdt) = (g_xcda_m.xcdald,g_xcda_m.xcda003, 
                   g_xcda_m.xcda004,g_xcda_m.xcda005,g_xcda3_d[l_ac].xcda001_3,g_xcda3_d[l_ac].xcda002_3,g_xcda3_d[l_ac].xcda006_3, 
                   g_xcda3_d[l_ac].xcda007_3,g_xcda3_d[l_ac].xcda008_3,g_xcda3_d[l_ac].xcda009_3,g_xcda3_d[l_ac].xcda101_3, 
                   g_xcda3_d[l_ac].xcda102_3,g_xcda2_d[l_ac].xcdaownid,g_xcda2_d[l_ac].xcdaowndp,g_xcda2_d[l_ac].xcdacrtid, 
                   g_xcda2_d[l_ac].xcdacrtdp,g_xcda2_d[l_ac].xcdacrtdt,g_xcda2_d[l_ac].xcdamodid,g_xcda2_d[l_ac].xcdamoddt, 
                   g_xcda2_d[l_ac].xcdacnfid,g_xcda2_d[l_ac].xcdacnfdt,g_xcda2_d[l_ac].xcdapstid,g_xcda2_d[l_ac].xcdapstdt) 

                WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald 
                 AND xcda003 = g_xcda_m.xcda003 
                 AND xcda004 = g_xcda_m.xcda004 
                 AND xcda005 = g_xcda_m.xcda005 
 
                 AND xcda001 = g_xcda3_d_t.xcda001_3 #項次   
                 AND xcda002 = g_xcda3_d_t.xcda002_3  
                 AND xcda006 = g_xcda3_d_t.xcda006_3  
                 AND xcda007 = g_xcda3_d_t.xcda007_3  
                 AND xcda008 = g_xcda3_d_t.xcda008_3  
                 AND xcda009 = g_xcda3_d_t.xcda009_3  
 
                 
               #add-point:單身修改中
               UPDATE xcda_t SET 
                   (xcda009,xcdamodid,xcdamoddt) = (g_xcda3_d[l_ac].xcda009_3,g_xcda2_d[l_ac].xcdamodid,g_xcda2_d[l_ac].xcdamoddt) 

                WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald 
                 AND xcda003 = g_xcda_m.xcda003 
                 AND xcda004 = g_xcda_m.xcda004 
                 AND xcda005 = g_xcda_m.xcda005 
 
                  
                 AND xcda002 = g_xcda3_d_t.xcda002_3  
                 AND xcda006 = g_xcda3_d_t.xcda006_3  
                 AND xcda007 = g_xcda3_d_t.xcda007_3  
                 AND xcda008 = g_xcda3_d_t.xcda008_3  
                 AND xcda009 = g_xcda3_d_t.xcda009_3 
 
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcda_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "xcda_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
 
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcda_m.xcdald
               LET gs_keys_bak[1] = g_xcdald_t
               LET gs_keys[2] = g_xcda_m.xcda003
               LET gs_keys_bak[2] = g_xcda003_t
               LET gs_keys[3] = g_xcda_m.xcda004
               LET gs_keys_bak[3] = g_xcda004_t
               LET gs_keys[4] = g_xcda_m.xcda005
               LET gs_keys_bak[4] = g_xcda005_t
               LET gs_keys[5] = g_xcda3_d[g_detail_idx].xcda001_3
               LET gs_keys_bak[5] = g_xcda3_d_t.xcda001_3
               LET gs_keys[6] = g_xcda3_d[g_detail_idx].xcda002_3
               LET gs_keys_bak[6] = g_xcda3_d_t.xcda002_3
               LET gs_keys[7] = g_xcda3_d[g_detail_idx].xcda006_3
               LET gs_keys_bak[7] = g_xcda3_d_t.xcda006_3
               LET gs_keys[8] = g_xcda3_d[g_detail_idx].xcda007_3
               LET gs_keys_bak[8] = g_xcda3_d_t.xcda007_3
               LET gs_keys[9] = g_xcda3_d[g_detail_idx].xcda008_3
               LET gs_keys_bak[9] = g_xcda3_d_t.xcda008_3
               LET gs_keys[10] = g_xcda3_d[g_detail_idx].xcda009_3
               LET gs_keys_bak[10] = g_xcda3_d_t.xcda009_3
               CALL axct304_update_b('xcda_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_xcda_m),util.JSON.stringify(g_xcda3_d_t)
                     LET g_log2 = util.JSON.stringify(g_xcda_m),util.JSON.stringify(g_xcda3_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後
                CALL s_transaction_end('Y','0') #140909 
               #end add-point
            END IF
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xcda3_d.getLength() = 0 THEN
               NEXT FIELD xcda001_3
            END IF
            #add-point:input段after input 

            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xcda3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xcda3_d.getLength()+1
            
      END INPUT
 
            INPUT ARRAY g_xcda4_d FROM s_detail4.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = 0)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcda4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axct304_b_fill_4() 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前

            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail4")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axct304_cl USING g_enterprise,
                                               g_xcda_m.xcdald
                                               ,g_xcda_m.xcda003
                                               ,g_xcda_m.xcda004
                                               ,g_xcda_m.xcda005
 
                                               
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct304_cl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CLOSE axct304_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_xcda4_d[l_ac].xcda001_4 IS NOT NULL
               AND g_xcda4_d[l_ac].xcda002_4 IS NOT NULL
               AND g_xcda4_d[l_ac].xcda006_4 IS NOT NULL
               AND g_xcda4_d[l_ac].xcda007_4 IS NOT NULL
               AND g_xcda4_d[l_ac].xcda008_4 IS NOT NULL
               AND g_xcda4_d[l_ac].xcda009_4 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xcda4_d_t.* = g_xcda4_d[l_ac].*  #BACKUP
               LET g_xcda4_d_o.* = g_xcda4_d[l_ac].*  #BACKUP
               CALL axct304_set_entry_b(l_cmd)
               #add-point:set_entry_b後

               #end add-point
               CALL axct304_set_no_entry_b(l_cmd)
               OPEN axct304_bcl USING g_enterprise,g_xcda_m.xcdald,
                                                g_xcda_m.xcda003,
                                                g_xcda_m.xcda004,
                                                g_xcda_m.xcda005,
 
                                                g_xcda4_d_t.xcda001_4
                                                ,g_xcda4_d_t.xcda002_4
                                                ,g_xcda4_d_t.xcda006_4
                                                ,g_xcda4_d_t.xcda007_4
                                                ,g_xcda4_d_t.xcda008_4
                                                ,g_xcda4_d_t.xcda009_4
 
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct304_bcl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axct304_bcl INTO g_xcda4_d[l_ac].xcda001_4,g_xcda4_d[l_ac].xcda002_4,g_xcda4_d[l_ac].xcda006_4, 
                      g_xcda4_d[l_ac].xcda007_4,g_xcda4_d[l_ac].xcda008_4,g_xcda4_d[l_ac].xcda009_4,g_xcda4_d[l_ac].xcda101_4, 
                      g_xcda4_d[l_ac].xcda102_4,g_xcda2_d[l_ac].xcda001,g_xcda2_d[l_ac].xcda002,g_xcda2_d[l_ac].xcda006, 
                      g_xcda2_d[l_ac].xcda007,g_xcda2_d[l_ac].xcda008,g_xcda2_d[l_ac].xcda009,g_xcda2_d[l_ac].xcdaownid, 
                      g_xcda2_d[l_ac].xcdaowndp,g_xcda2_d[l_ac].xcdacrtid,g_xcda2_d[l_ac].xcdacrtdp, 
                      g_xcda2_d[l_ac].xcdacrtdt,g_xcda2_d[l_ac].xcdamodid,g_xcda2_d[l_ac].xcdamoddt, 
                      g_xcda2_d[l_ac].xcdacnfid,g_xcda2_d[l_ac].xcdacnfdt,g_xcda2_d[l_ac].xcdapstid, 
                      g_xcda2_d[l_ac].xcdapstdt
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_xcda4_d_t.xcda001_4 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
 
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axct304_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            IF l_cmd='u' THEN
              #IF g_glaa015 = 'Y' THEN
                   OPEN axct304_bcl USING g_enterprise,g_xcda_m.xcdald,
                                                g_xcda_m.xcda003,
                                                g_xcda_m.xcda004,
                                                g_xcda_m.xcda005,
 
                                                '1'
                                                ,g_xcda4_d_t.xcda002_4
                                                ,g_xcda4_d_t.xcda006_4
                                                ,g_xcda4_d_t.xcda007_4
                                                ,g_xcda4_d_t.xcda008_4
                                                ,g_xcda4_d_t.xcda009_4
                  
                  IF STATUS THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "OPEN axct304_bcl:" 
                     LET g_errparam.code   =  STATUS 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                   
                     LET l_lock_sw='Y'
                  END IF
              #END IF
               IF g_glaa015 = 'Y' THEN                               
                  OPEN axct304_bcl USING g_enterprise,g_xcda_m.xcdald,
                                                g_xcda_m.xcda003,
                                                g_xcda_m.xcda004,
                                                g_xcda_m.xcda005,
 
                                                '2'
                                                ,g_xcda4_d_t.xcda002_4
                                                ,g_xcda4_d_t.xcda006_4
                                                ,g_xcda4_d_t.xcda007_4
                                                ,g_xcda4_d_t.xcda008_4
                                                ,g_xcda4_d_t.xcda009_4
                  
                  IF STATUS THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "OPEN axct304_bcl" 
                     LET g_errparam.code   =  STATUS 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                  
                     LET l_lock_sw='Y'
                  END IF
               END IF
            END IF
            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_xcda4_d_t.* TO NULL
            INITIALIZE g_xcda4_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xcda4_d[l_ac].* TO NULL
            #公用欄位預設值
            #此段落由子樣板a14產生    
      #公用欄位新增給值
      LET g_xcda2_d[l_ac].xcdaownid = g_user
      LET g_xcda2_d[l_ac].xcdaowndp = g_dept
      LET g_xcda2_d[l_ac].xcdacrtid = g_user
      LET g_xcda2_d[l_ac].xcdacrtdp = g_dept 
      LET g_xcda2_d[l_ac].xcdacrtdt = cl_get_current()
      LET g_xcda2_d[l_ac].xcdamodid = ""
      LET g_xcda2_d[l_ac].xcdamoddt = ""
 
  
            #一般欄位預設值
                  LET g_xcda4_d[l_ac].xcda001_4 = "2"
 
            
            #add-point:modify段before備份

            #end add-point
            LET g_xcda4_d_t.* = g_xcda4_d[l_ac].*     #新輸入資料
            LET g_xcda4_d_o.* = g_xcda4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axct304_set_entry_b(l_cmd)
            #add-point:set_entry_b後

            #end add-point
            CALL axct304_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xcda4_d[li_reproduce_target].* = g_xcda4_d[li_reproduce].*
               LET g_xcda2_d[li_reproduce_target].* = g_xcda2_d[li_reproduce].*
 
               LET g_xcda4_d[g_xcda4_d.getLength()].xcda001_4 = NULL
               LET g_xcda4_d[g_xcda4_d.getLength()].xcda002_4 = NULL
               LET g_xcda4_d[g_xcda4_d.getLength()].xcda006_4 = NULL
               LET g_xcda4_d[g_xcda4_d.getLength()].xcda007_4 = NULL
               LET g_xcda4_d[g_xcda4_d.getLength()].xcda008_4 = NULL
               LET g_xcda4_d[g_xcda4_d.getLength()].xcda009_4 = NULL
 
            END IF
            
            #add-point:modify段before insert

            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xcda_t 
             WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald
               AND xcda003 = g_xcda_m.xcda003
               AND xcda004 = g_xcda_m.xcda004
               AND xcda005 = g_xcda_m.xcda005
 
               AND xcda001_4 = g_xcda4_d[l_ac].xcda001_4
               AND xcda002_4 = g_xcda4_d[l_ac].xcda002_4
               AND xcda006_4 = g_xcda4_d[l_ac].xcda006_4
               AND xcda007_4 = g_xcda4_d[l_ac].xcda007_4
               AND xcda008_4 = g_xcda4_d[l_ac].xcda008_4
               AND xcda009_4 = g_xcda4_d[l_ac].xcda009_4
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
               
               #end add-point
               INSERT INTO xcda_t
                           (xcdaent,
                            xcdacomp,xcda004,xcda005,xcdald,xcda003,
                            xcda001_4,xcda002_4,xcda006_4,xcda007_4,xcda008_4,xcda009_4
                            ,xcda101,xcda102,xcdaownid,xcdaowndp,xcdacrtid,xcdacrtdp,xcdacrtdt,xcdamodid,xcdamoddt,xcdacnfid,xcdacnfdt,xcdapstid,xcdapstdt) 
                     VALUES(g_enterprise,
                            g_xcda_m.xcdacomp,g_xcda_m.xcda004,g_xcda_m.xcda005,g_xcda_m.xcdald,g_xcda_m.xcda003,
                            g_xcda4_d[l_ac].xcda001_4,g_xcda4_d[l_ac].xcda002_4,g_xcda4_d[l_ac].xcda006_4,g_xcda4_d[l_ac].xcda007_4, 
                                g_xcda4_d[l_ac].xcda008_4,g_xcda4_d[l_ac].xcda009_4
                            ,g_xcda4_d[l_ac].xcda101_4,g_xcda4_d[l_ac].xcda102_4,g_xcda2_d[l_ac].xcdaownid, 
                                g_xcda2_d[l_ac].xcdaowndp,g_xcda2_d[l_ac].xcdacrtid,g_xcda2_d[l_ac].xcdacrtdp, 
                                g_xcda2_d[l_ac].xcdacrtdt,g_xcda2_d[l_ac].xcdamodid,g_xcda2_d[l_ac].xcdamoddt, 
                                g_xcda2_d[l_ac].xcdacnfid,g_xcda2_d[l_ac].xcdacnfdt,g_xcda2_d[l_ac].xcdapstid, 
                                g_xcda2_d[l_ac].xcdapstdt)
               #add-point:單身新增中
               
               #end add-point
               LET p_cmd = 'u'
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               INITIALIZE g_xcda4_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcda_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert

               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後

            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前

               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CANCEL DELETE
               END IF
               IF axct304_before_delete_4() THEN 
                  
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axct304_bcl
               LET l_count = g_xcda4_d.getLength()
            END IF 
            
            #add-point:單身刪除後

            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE 
               IF g_rec_b = 0 THEN
                  RETURN
               END IF 
               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_xcda4_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #此段落由子樣板a01產生
         BEFORE FIELD xcda001_4
            #add-point:BEFORE FIELD xcda001_4

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcda001_4
            
            #add-point:AFTER FIELD xcda001_4
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcda_m.xcdald IS NOT NULL AND g_xcda_m.xcda003 IS NOT NULL AND g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda001_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda002_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda006_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda007_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda008_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda009_4 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t OR g_xcda4_d[g_detail_idx].xcda001_4 != g_xcda4_d_t.xcda001_4 OR g_xcda4_d[g_detail_idx].xcda002_4 != g_xcda4_d_t.xcda002_4 OR g_xcda4_d[g_detail_idx].xcda006_4 != g_xcda4_d_t.xcda006_4 OR g_xcda4_d[g_detail_idx].xcda007_4 != g_xcda4_d_t.xcda007_4 OR g_xcda4_d[g_detail_idx].xcda008_4 != g_xcda4_d_t.xcda008_4 OR g_xcda4_d[g_detail_idx].xcda009_4 != g_xcda4_d_t.xcda009_4)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"' AND "|| "xcda001 = '"||g_xcda4_d[g_detail_idx].xcda001_4 ||"' AND "|| "xcda002 = '"||g_xcda4_d[g_detail_idx].xcda002_4 ||"' AND "|| "xcda006 = '"||g_xcda4_d[g_detail_idx].xcda006_4 ||"' AND "|| "xcda007 = '"||g_xcda4_d[g_detail_idx].xcda007_4 ||"' AND "|| "xcda008 = '"||g_xcda4_d[g_detail_idx].xcda008_4 ||"' AND "|| "xcda009 = '"||g_xcda4_d[g_detail_idx].xcda009_4 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcda001_4
            #add-point:ON CHANGE xcda001_4

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcda002_4
            
            #add-point:AFTER FIELD xcda002_4
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcda_m.xcdald IS NOT NULL AND g_xcda_m.xcda003 IS NOT NULL AND g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda001_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda002_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda006_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda007_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda008_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda009_4 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t OR g_xcda4_d[g_detail_idx].xcda001_4 != g_xcda4_d_t.xcda001_4 OR g_xcda4_d[g_detail_idx].xcda002_4 != g_xcda4_d_t.xcda002_4 OR g_xcda4_d[g_detail_idx].xcda006_4 != g_xcda4_d_t.xcda006_4 OR g_xcda4_d[g_detail_idx].xcda007_4 != g_xcda4_d_t.xcda007_4 OR g_xcda4_d[g_detail_idx].xcda008_4 != g_xcda4_d_t.xcda008_4 OR g_xcda4_d[g_detail_idx].xcda009_4 != g_xcda4_d_t.xcda009_4)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"' AND "|| "xcda001 = '"||g_xcda4_d[g_detail_idx].xcda001_4 ||"' AND "|| "xcda002 = '"||g_xcda4_d[g_detail_idx].xcda002_4 ||"' AND "|| "xcda006 = '"||g_xcda4_d[g_detail_idx].xcda006_4 ||"' AND "|| "xcda007 = '"||g_xcda4_d[g_detail_idx].xcda007_4 ||"' AND "|| "xcda008 = '"||g_xcda4_d[g_detail_idx].xcda008_4 ||"' AND "|| "xcda009 = '"||g_xcda4_d[g_detail_idx].xcda009_4 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcda_m.xcdacomp
            LET g_ref_fields[2] = g_xcda4_d[l_ac].xcda002_4
            CALL ap_ref_array2(g_ref_fields,"SELECT xcbfl003 FROM xcbfl_t WHERE xcbflent='"||g_enterprise||"' AND xcbflcomp=? AND xcbfl001=? AND xcbfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcda4_d[l_ac].xcda002_4_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcda4_d[l_ac].xcda002_4_desc

            CALL axct304_detail_ref(g_xcda4_d[l_ac].xcda002_4,g_xcda4_d[l_ac].xcda006_4,g_xcda4_d[l_ac].xcda009_4)
                 RETURNING g_xcda4_d[l_ac].xcda002_4_desc,g_xcda4_d[l_ac].xcda006_4_desc,g_xcda4_d[l_ac].xcda006_4_desc_desc,
                           g_xcda4_d[l_ac].imag014_4,g_xcda4_d[l_ac].xcda009_4_desc
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcda002_4
            #add-point:BEFORE FIELD xcda002_4

            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcda002_4
            #add-point:ON CHANGE xcda002_4

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcda006_4
            
            #add-point:AFTER FIELD xcda006_4
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcda_m.xcdald IS NOT NULL AND g_xcda_m.xcda003 IS NOT NULL AND g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda001_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda002_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda006_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda007_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda008_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda009_4 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t OR g_xcda4_d[g_detail_idx].xcda001_4 != g_xcda4_d_t.xcda001_4 OR g_xcda4_d[g_detail_idx].xcda002_4 != g_xcda4_d_t.xcda002_4 OR g_xcda4_d[g_detail_idx].xcda006_4 != g_xcda4_d_t.xcda006_4 OR g_xcda4_d[g_detail_idx].xcda007_4 != g_xcda4_d_t.xcda007_4 OR g_xcda4_d[g_detail_idx].xcda008_4 != g_xcda4_d_t.xcda008_4 OR g_xcda4_d[g_detail_idx].xcda009_4 != g_xcda4_d_t.xcda009_4)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"' AND "|| "xcda001 = '"||g_xcda4_d[g_detail_idx].xcda001_4 ||"' AND "|| "xcda002 = '"||g_xcda4_d[g_detail_idx].xcda002_4 ||"' AND "|| "xcda006 = '"||g_xcda4_d[g_detail_idx].xcda006_4 ||"' AND "|| "xcda007 = '"||g_xcda4_d[g_detail_idx].xcda007_4 ||"' AND "|| "xcda008 = '"||g_xcda4_d[g_detail_idx].xcda008_4 ||"' AND "|| "xcda009 = '"||g_xcda4_d[g_detail_idx].xcda009_4 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcda4_d[l_ac].xcda006_4
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcda4_d[l_ac].xcda006_4_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcda4_d[l_ac].xcda006_4_desc

            CALL axct304_detail_ref(g_xcda4_d[l_ac].xcda002_4,g_xcda4_d[l_ac].xcda006_4,g_xcda4_d[l_ac].xcda009_4)
                 RETURNING g_xcda4_d[l_ac].xcda002_4_desc,g_xcda4_d[l_ac].xcda006_4_desc,g_xcda4_d[l_ac].xcda006_4_desc_desc,
                           g_xcda4_d[l_ac].imag014_4,g_xcda4_d[l_ac].xcda009_4_desc
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcda006_4
            #add-point:BEFORE FIELD xcda006_4

            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcda006_4
            #add-point:ON CHANGE xcda006_4

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcda007_4
            #add-point:BEFORE FIELD xcda007_4

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcda007_4
            
            #add-point:AFTER FIELD xcda007_4
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcda_m.xcdald IS NOT NULL AND g_xcda_m.xcda003 IS NOT NULL AND g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda001_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda002_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda006_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda007_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda008_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda009_4 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t OR g_xcda4_d[g_detail_idx].xcda001_4 != g_xcda4_d_t.xcda001_4 OR g_xcda4_d[g_detail_idx].xcda002_4 != g_xcda4_d_t.xcda002_4 OR g_xcda4_d[g_detail_idx].xcda006_4 != g_xcda4_d_t.xcda006_4 OR g_xcda4_d[g_detail_idx].xcda007_4 != g_xcda4_d_t.xcda007_4 OR g_xcda4_d[g_detail_idx].xcda008_4 != g_xcda4_d_t.xcda008_4 OR g_xcda4_d[g_detail_idx].xcda009_4 != g_xcda4_d_t.xcda009_4)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"' AND "|| "xcda001 = '"||g_xcda4_d[g_detail_idx].xcda001_4 ||"' AND "|| "xcda002 = '"||g_xcda4_d[g_detail_idx].xcda002_4 ||"' AND "|| "xcda006 = '"||g_xcda4_d[g_detail_idx].xcda006_4 ||"' AND "|| "xcda007 = '"||g_xcda4_d[g_detail_idx].xcda007_4 ||"' AND "|| "xcda008 = '"||g_xcda4_d[g_detail_idx].xcda008_4 ||"' AND "|| "xcda009 = '"||g_xcda4_d[g_detail_idx].xcda009_4 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcda007_4
            #add-point:ON CHANGE xcda007_4

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imag014_4
            
            #add-point:AFTER FIELD imag014
            IF NOT cl_null(g_xcda4_d[l_ac].imag014_4) THEN 
#此段落由子樣板a19產生
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcda4_d[l_ac].imag014_4
               #160318-00025#12--add--str
               LET g_errshow = TRUE 
               LET g_chkparam.err_str[1] = "aim-00005:sub-01302|aooi250|",cl_get_progname("aooi250",g_lang,"2"),"|:EXEPROGaooi250"
               #160318-00025#12--add--end
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 


            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imag014_4
            #add-point:BEFORE FIELD imag014

            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE imag014_4
            #add-point:ON CHANGE imag014

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcda008_4
            #add-point:BEFORE FIELD xcda008_4

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcda008_4
            
            #add-point:AFTER FIELD xcda008_4
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcda_m.xcdald IS NOT NULL AND g_xcda_m.xcda003 IS NOT NULL AND g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda001_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda002_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda006_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda007_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda008_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda009_4 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t OR g_xcda4_d[g_detail_idx].xcda001_4 != g_xcda4_d_t.xcda001_4 OR g_xcda4_d[g_detail_idx].xcda002_4 != g_xcda4_d_t.xcda002_4 OR g_xcda4_d[g_detail_idx].xcda006_4 != g_xcda4_d_t.xcda006_4 OR g_xcda4_d[g_detail_idx].xcda007_4 != g_xcda4_d_t.xcda007_4 OR g_xcda4_d[g_detail_idx].xcda008_4 != g_xcda4_d_t.xcda008_4 OR g_xcda4_d[g_detail_idx].xcda009_4 != g_xcda4_d_t.xcda009_4)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"' AND "|| "xcda001_4 = '"||g_xcda4_d[g_detail_idx].xcda001_4 ||"' AND "|| "xcda002_4 = '"||g_xcda4_d[g_detail_idx].xcda002_4 ||"' AND "|| "xcda006_4 = '"||g_xcda4_d[g_detail_idx].xcda006_4 ||"' AND "|| "xcda007_4 = '"||g_xcda4_d[g_detail_idx].xcda007_4 ||"' AND "|| "xcda008_4 = '"||g_xcda4_d[g_detail_idx].xcda008_4 ||"' AND "|| "xcda009_4 = '"||g_xcda4_d[g_detail_idx].xcda009_4 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcda008_4
            #add-point:ON CHANGE xcda008_4

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcda009_4
            
            #add-point:AFTER FIELD xcda009_4
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcda_m.xcdald IS NOT NULL AND g_xcda_m.xcda003 IS NOT NULL AND g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda001_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda002_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda006_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda007_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda008_4 IS NOT NULL AND g_xcda4_d[g_detail_idx].xcda009_4 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcda_m.xcdald != g_xcdald_t OR g_xcda_m.xcda003 != g_xcda003_t OR g_xcda_m.xcda004 != g_xcda004_t OR g_xcda_m.xcda005 != g_xcda005_t OR g_xcda4_d[g_detail_idx].xcda001_4 != g_xcda4_d_t.xcda001_4 OR g_xcda4_d[g_detail_idx].xcda002_4 != g_xcda4_d_t.xcda002_4 OR g_xcda4_d[g_detail_idx].xcda006_4 != g_xcda4_d_t.xcda006_4 OR g_xcda4_d[g_detail_idx].xcda007_4 != g_xcda4_d_t.xcda007_4 OR g_xcda4_d[g_detail_idx].xcda008_4 != g_xcda4_d_t.xcda008_4 OR g_xcda4_d[g_detail_idx].xcda009_4 != g_xcda4_d_t.xcda009_4)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcda_t WHERE "||"xcdaent = '" ||g_enterprise|| "' AND "||"xcdald = '"||g_xcda_m.xcdald ||"' AND "|| "xcda003 = '"||g_xcda_m.xcda003 ||"' AND "|| "xcda004 = '"||g_xcda_m.xcda004 ||"' AND "|| "xcda005 = '"||g_xcda_m.xcda005 ||"' AND "|| "xcda001 = '"||g_xcda4_d[g_detail_idx].xcda001_4 ||"' AND "|| "xcda002 = '"||g_xcda4_d[g_detail_idx].xcda002_4 ||"' AND "|| "xcda006 = '"||g_xcda4_d[g_detail_idx].xcda006_4 ||"' AND "|| "xcda007 = '"||g_xcda4_d[g_detail_idx].xcda007_4 ||"' AND "|| "xcda008 = '"||g_xcda4_d[g_detail_idx].xcda008_4 ||"' AND "|| "xcda009 = '"||g_xcda4_d[g_detail_idx].xcda009_4 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            IF NOT cl_null(g_xcda4_d[l_ac].xcda009_4) THEN 
#此段落由子樣板a19產生
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcda4_d[l_ac].xcda009_4
               #160318-00025#12--add--str
               LET g_errshow = TRUE 
               LET g_chkparam.err_str[1] = "axc-00056:sub-01302|axci111|",cl_get_progname("axci111",g_lang,"2"),"|:EXEPROGaxci111"
               #160318-00025#12--add--end
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_xcau001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            
            ELSE
               NEXT FIELD CURRENT
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcda4_d[l_ac].xcda009_4
            CALL ap_ref_array2(g_ref_fields,"SELECT xcaul003 FROM xcaul_t WHERE xcaulent='"||g_enterprise||"' AND xcaul001=? AND xcaul002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcda4_d[l_ac].xcda009_4_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcda4_d[l_ac].xcda009_4_desc

            CALL axct304_detail_ref(g_xcda4_d[l_ac].xcda002_4,g_xcda4_d[l_ac].xcda006_4,g_xcda4_d[l_ac].xcda009_4)
                 RETURNING g_xcda4_d[l_ac].xcda002_4_desc,g_xcda4_d[l_ac].xcda006_4_desc,g_xcda4_d[l_ac].xcda006_4_desc_desc,
                           g_xcda4_d[l_ac].imag014_4,g_xcda4_d[l_ac].xcda009_4_desc
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcda009_4
            #add-point:BEFORE FIELD xcda009_4

            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcda009_4
            #add-point:ON CHANGE xcda009_4

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcda101
            #add-point:BEFORE FIELD xcda101

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcda101
            
            #add-point:AFTER FIELD xcda101

            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcda101
            #add-point:ON CHANGE xcda101

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcda102
            #add-point:BEFORE FIELD xcda102

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcda102
            
            #add-point:AFTER FIELD xcda102

            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcda102
            #add-point:ON CHANGE xcda102

            #END add-point
 
 
                  #Ctrlp:input.c.page1.xcda001_4
         ON ACTION controlp INFIELD xcda001_4
            #add-point:ON ACTION controlp INFIELD xcda001_4

            #END add-point
 
         #Ctrlp:input.c.page1.xcda002_4
         ON ACTION controlp INFIELD xcda002_4
            #add-point:ON ACTION controlp INFIELD xcda002_4
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda4_d[l_ac].xcda002_4             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_xcbf001()                                #呼叫開窗

            LET g_xcda4_d[l_ac].xcda002_4 = g_qryparam.return1              

            DISPLAY g_xcda4_d[l_ac].xcda002_4 TO xcda002_4              #
            CALL axct304_detail_ref(g_xcda4_d[l_ac].xcda002_4,g_xcda4_d[l_ac].xcda006_4,g_xcda4_d[l_ac].xcda009_4)
                 RETURNING g_xcda4_d[l_ac].xcda002_4_desc,g_xcda4_d[l_ac].xcda006_4_desc,g_xcda4_d[l_ac].xcda006_4_desc_desc,
                           g_xcda4_d[l_ac].imag014_4,g_xcda4_d[l_ac].xcda009_4_desc
            NEXT FIELD xcda002_4                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcda006_4
         ON ACTION controlp INFIELD xcda006_4
            #add-point:ON ACTION controlp INFIELD xcda006_4
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda4_d[l_ac].xcda006_4             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_imag001_2()                                #呼叫開窗

            LET g_xcda4_d[l_ac].xcda006_4 = g_qryparam.return1              

            DISPLAY g_xcda4_d[l_ac].xcda006_4 TO xcda006_4              #
            CALL axct304_detail_ref(g_xcda4_d[l_ac].xcda002_4,g_xcda4_d[l_ac].xcda006_4,g_xcda4_d[l_ac].xcda009_4)
                 RETURNING g_xcda4_d[l_ac].xcda002_4_desc,g_xcda4_d[l_ac].xcda006_4_desc,g_xcda4_d[l_ac].xcda006_4_desc_desc,
                           g_xcda4_d[l_ac].imag014_4,g_xcda4_d[l_ac].xcda009_4_desc
            NEXT FIELD xcda006_4                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcda007_4
         ON ACTION controlp INFIELD xcda007_4
            #add-point:ON ACTION controlp INFIELD xcda007_4
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda4_d[l_ac].xcda007_4             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_inag006_2()                                #呼叫開窗

            LET g_xcda4_d[l_ac].xcda007_4 = g_qryparam.return1              

            DISPLAY g_xcda4_d[l_ac].xcda007_4 TO xcda007_4              #

            NEXT FIELD xcda007_4                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.imag014
         ON ACTION controlp INFIELD imag014
            #add-point:ON ACTION controlp INFIELD imag014
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda4_d[l_ac].imag014_4             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_xcda4_d[l_ac].imag014_4 = g_qryparam.return1              

            DISPLAY g_xcda4_d[l_ac].imag014_4 TO imag014_4             #

            NEXT FIELD imag014                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcda008_4
         ON ACTION controlp INFIELD xcda008_4
            #add-point:ON ACTION controlp INFIELD xcda008_4
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda4_d[l_ac].xcda008_4             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_inaj010()                                #呼叫開窗

            LET g_xcda4_d[l_ac].xcda008_4 = g_qryparam.return1              

            DISPLAY g_xcda4_d[l_ac].xcda008_4 TO xcda008_4              #

            NEXT FIELD xcda008_4                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcda009_4
         ON ACTION controlp INFIELD xcda009_4
            #add-point:ON ACTION controlp INFIELD xcda009_4
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda4_d[l_ac].xcda009_4             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_xcau001()                                #呼叫開窗

            LET g_xcda4_d[l_ac].xcda009_4 = g_qryparam.return1              

            DISPLAY g_xcda4_d[l_ac].xcda009_4 TO xcda009_4              #
            CALL axct304_detail_ref(g_xcda4_d[l_ac].xcda002_4,g_xcda4_d[l_ac].xcda006_4,g_xcda4_d[l_ac].xcda009_4)
                 RETURNING g_xcda4_d[l_ac].xcda002_4_desc,g_xcda4_d[l_ac].xcda006_4_desc,g_xcda4_d[l_ac].xcda006_4_desc_desc,
                           g_xcda4_d[l_ac].imag014_4,g_xcda4_d[l_ac].xcda009_4_desc
            NEXT FIELD xcda009_4                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.page1.xcda101
         ON ACTION controlp INFIELD xcda101
            #add-point:ON ACTION controlp INFIELD xcda101

            #END add-point
 
         #Ctrlp:input.c.page1.xcda102
         ON ACTION controlp INFIELD xcda102
            #add-point:ON ACTION controlp INFIELD xcda102

            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               LET g_xcda4_d[l_ac].* = g_xcda4_d_t.*
               CLOSE axct304_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xcda4_d[l_ac].xcda001_4 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               LET g_xcda4_d[l_ac].* = g_xcda4_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_xcda2_d[l_ac].xcdamodid = g_user 
LET g_xcda2_d[l_ac].xcdamoddt = cl_get_current()
 
            
               #add-point:單身修改前
               IF cl_null(g_xcda4_d[l_ac].xcda102_4) THEN LET g_xcda4_d[l_ac].xcda102_4 = 0 END IF
               CALL s_curr_round('',g_glaa020,g_xcda4_d[l_ac].xcda102_4,2) RETURNING  g_xcda4_d[l_ac].xcda102_4
               CALL s_transaction_begin()
               #end add-point
         
               UPDATE xcda_t SET (xcdald,xcda003,xcda004,xcda005,xcda001,xcda002,xcda006,xcda007,xcda008, 
                   xcda009,xcda101,xcda102,xcdaownid,xcdaowndp,xcdacrtid,xcdacrtdp,xcdacrtdt,xcdamodid, 
                   xcdamoddt,xcdacnfid,xcdacnfdt,xcdapstid,xcdapstdt) = (g_xcda_m.xcdald,g_xcda_m.xcda003, 
                   g_xcda_m.xcda004,g_xcda_m.xcda005,g_xcda4_d[l_ac].xcda001_4,g_xcda4_d[l_ac].xcda002_4,g_xcda4_d[l_ac].xcda006_4, 
                   g_xcda4_d[l_ac].xcda007_4,g_xcda4_d[l_ac].xcda008_4,g_xcda4_d[l_ac].xcda009_4,g_xcda4_d[l_ac].xcda101_4, 
                   g_xcda4_d[l_ac].xcda102_4,g_xcda2_d[l_ac].xcdaownid,g_xcda2_d[l_ac].xcdaowndp,g_xcda2_d[l_ac].xcdacrtid, 
                   g_xcda2_d[l_ac].xcdacrtdp,g_xcda2_d[l_ac].xcdacrtdt,g_xcda2_d[l_ac].xcdamodid,g_xcda2_d[l_ac].xcdamoddt, 
                   g_xcda2_d[l_ac].xcdacnfid,g_xcda2_d[l_ac].xcdacnfdt,g_xcda2_d[l_ac].xcdapstid,g_xcda2_d[l_ac].xcdapstdt) 

                WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald 
                 AND xcda003 = g_xcda_m.xcda003 
                 AND xcda004 = g_xcda_m.xcda004 
                 AND xcda005 = g_xcda_m.xcda005 
 
                 AND xcda001 = g_xcda4_d_t.xcda001_4 #項次   
                 AND xcda002 = g_xcda4_d_t.xcda002_4  
                 AND xcda006 = g_xcda4_d_t.xcda006_4  
                 AND xcda007 = g_xcda4_d_t.xcda007_4  
                 AND xcda008 = g_xcda4_d_t.xcda008_4  
                 AND xcda009 = g_xcda4_d_t.xcda009_4  
 
                 
               #add-point:單身修改中
               UPDATE xcda_t SET 
                   (xcda009,xcdamodid,xcdamoddt) = (g_xcda4_d[l_ac].xcda009_4,g_xcda2_d[l_ac].xcdamodid,g_xcda2_d[l_ac].xcdamoddt) 

                WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald 
                 AND xcda003 = g_xcda_m.xcda003 
                 AND xcda004 = g_xcda_m.xcda004 
                 AND xcda005 = g_xcda_m.xcda005 
 
                  
                 AND xcda002 = g_xcda4_d_t.xcda002_4  
                 AND xcda006 = g_xcda4_d_t.xcda006_4  
                 AND xcda007 = g_xcda4_d_t.xcda007_4  
                 AND xcda008 = g_xcda4_d_t.xcda008_4  
                 AND xcda009 = g_xcda4_d_t.xcda009_4 
 
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcda_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "xcda_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
 
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcda_m.xcdald
               LET gs_keys_bak[1] = g_xcdald_t
               LET gs_keys[2] = g_xcda_m.xcda003
               LET gs_keys_bak[2] = g_xcda003_t
               LET gs_keys[3] = g_xcda_m.xcda004
               LET gs_keys_bak[3] = g_xcda004_t
               LET gs_keys[4] = g_xcda_m.xcda005
               LET gs_keys_bak[4] = g_xcda005_t
               LET gs_keys[5] = g_xcda4_d[g_detail_idx].xcda001_4
               LET gs_keys_bak[5] = g_xcda4_d_t.xcda001_4
               LET gs_keys[6] = g_xcda4_d[g_detail_idx].xcda002_4
               LET gs_keys_bak[6] = g_xcda4_d_t.xcda002_4
               LET gs_keys[7] = g_xcda4_d[g_detail_idx].xcda006_4
               LET gs_keys_bak[7] = g_xcda4_d_t.xcda006_4
               LET gs_keys[8] = g_xcda4_d[g_detail_idx].xcda007_4
               LET gs_keys_bak[8] = g_xcda4_d_t.xcda007_4
               LET gs_keys[9] = g_xcda4_d[g_detail_idx].xcda008_4
               LET gs_keys_bak[9] = g_xcda4_d_t.xcda008_4
               LET gs_keys[10] = g_xcda4_d[g_detail_idx].xcda009_4
               LET gs_keys_bak[10] = g_xcda4_d_t.xcda009_4
               CALL axct304_update_b('xcda_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_xcda_m),util.JSON.stringify(g_xcda4_d_t)
                     LET g_log2 = util.JSON.stringify(g_xcda_m),util.JSON.stringify(g_xcda4_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後
                CALL s_transaction_end('Y','0') #140909 
               #end add-point
            END IF
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xcda4_d.getLength() = 0 THEN
               NEXT FIELD xcda001_4
            END IF
            #add-point:input段after input 

            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xcda4_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xcda4_d.getLength()+1
            
      END INPUT
      #end add-point    
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()    
         #add-point:input段before_dialog name="input.before_dialog"
         IF p_cmd = 'a' THEN
            NEXT FIELD xcdald
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xcda001
               WHEN "s_detail2"
                  NEXT FIELD xcda001_2
               WHEN "s_detail3"
                  NEXT FIELD xcda001_3
               WHEN "s_detail4"
                  NEXT FIELD xcda001_4
 
            END CASE
         END IF
         #end add-point 
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xcdald
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xcda001
               WHEN "s_detail2"
                  NEXT FIELD xcda001_2
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #將畫面指標同步到當下指定的位置上
   CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
 
   
   #add-point:input段after_input name="input.after_input"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axct304_show()
   #add-point:show段define name="show.define_customerization"
   
   #end add-point
   #add-point:show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="show.before"
   CALL axct304_page_visible()
   CALL axct304_get_date()
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL axct304_b_fill(g_wc2) #第一階單身填充
      CALL axct304_b_fill2('0')  #第二階單身填充
   END IF
   
   
 
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL axct304_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   DISPLAY BY NAME g_xcda_m.xcdacomp,g_xcda_m.xcdacomp_desc,g_xcda_m.xcda004,g_xcda_m.xcda005,g_xcda_m.xcdald, 
       g_xcda_m.xcdald_desc,g_xcda_m.xcda003,g_xcda_m.xcda003_desc
 
   CALL axct304_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後 name="show.after"
   
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.ref_show" >}
#+ 帶出reference資料
PRIVATE FUNCTION axct304_ref_show()
   #add-point:ref_show段define name="ref_show.define_customerization"
   
   #end add-point 
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ref_show.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ref_show.pre_function"
   
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference name="ref_show.head.reference"
   
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xcda_d.getLength()
      #add-point:ref_show段d_reference name="ref_show.body.reference"
      CALL axct304_detail_ref(g_xcda_d[l_ac].xcda002,g_xcda_d[l_ac].xcda006,g_xcda_d[l_ac].xcda009)
           RETURNING g_xcda_d[l_ac].xcda002_desc,g_xcda_d[l_ac].xcda006_desc,g_xcda_d[l_ac].xcda006_desc_desc,
                     g_xcda_d[l_ac].imag014,g_xcda_d[l_ac].xcda009_desc
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xcda2_d.getLength()
      #add-point:ref_show段d2_reference name="ref_show.body2.reference"
      
      #end add-point
   END FOR
 
   
   #add-point:ref_show段自訂 name="ref_show.other_reference"
   FOR l_ac = 1 TO g_xcda3_d.getLength()
       CALL axct304_detail_ref(g_xcda3_d[l_ac].xcda002_3,g_xcda3_d[l_ac].xcda006_3,g_xcda3_d[l_ac].xcda009_3)
                 RETURNING g_xcda3_d[l_ac].xcda002_3_desc,g_xcda3_d[l_ac].xcda006_3_desc,g_xcda3_d[l_ac].xcda006_3_desc_desc,
                           g_xcda3_d[l_ac].imag014_3,g_xcda3_d[l_ac].xcda009_3_desc
   END FOR
   FOR l_ac = 1 TO g_xcda3_d.getLength()
        CALL axct304_detail_ref(g_xcda4_d[l_ac].xcda002_4,g_xcda4_d[l_ac].xcda006_4,g_xcda4_d[l_ac].xcda009_4)
                 RETURNING g_xcda4_d[l_ac].xcda002_4_desc,g_xcda4_d[l_ac].xcda006_4_desc,g_xcda4_d[l_ac].xcda006_4_desc_desc,
                           g_xcda4_d[l_ac].imag014_4,g_xcda4_d[l_ac].xcda009_4_desc
   END FOR
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION
 
{</section>}
 
{<section id="axct304.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axct304_reproduce()
   #add-point:reproduce段define name="reproduce.define_customerization"
   
   #end add-point
   DEFINE l_newno     LIKE xcda_t.xcdald 
   DEFINE l_oldno     LIKE xcda_t.xcdald 
   DEFINE l_newno02     LIKE xcda_t.xcda003 
   DEFINE l_oldno02     LIKE xcda_t.xcda003 
   DEFINE l_newno03     LIKE xcda_t.xcda004 
   DEFINE l_oldno03     LIKE xcda_t.xcda004 
   DEFINE l_newno04     LIKE xcda_t.xcda005 
   DEFINE l_oldno04     LIKE xcda_t.xcda005 
 
   DEFINE l_master    RECORD LIKE xcda_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE xcda_t.* #此變數樣板目前無使用
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_xcda_m.xcdald IS NULL
      OR g_xcda_m.xcda003 IS NULL
      OR g_xcda_m.xcda004 IS NULL
      OR g_xcda_m.xcda005 IS NULL
 
      THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_xcdald_t = g_xcda_m.xcdald
   LET g_xcda003_t = g_xcda_m.xcda003
   LET g_xcda004_t = g_xcda_m.xcda004
   LET g_xcda005_t = g_xcda_m.xcda005
 
   
   LET g_xcda_m.xcdald = ""
   LET g_xcda_m.xcda003 = ""
   LET g_xcda_m.xcda004 = ""
   LET g_xcda_m.xcda005 = ""
 
   LET g_master_insert = FALSE
   CALL axct304_set_entry('a')
   CALL axct304_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   LET g_xcda_m.xcdacomp = ""
#   LET g_xcda_m.xcdastus = "N" 
   #end add-point
   
   #清空key欄位的desc
      LET g_xcda_m.xcdald_desc = ''
   DISPLAY BY NAME g_xcda_m.xcdald_desc
   LET g_xcda_m.xcda003_desc = ''
   DISPLAY BY NAME g_xcda_m.xcda003_desc
 
   
   CALL axct304_input("r")
    
   IF INT_FLAG AND NOT g_master_insert THEN
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      INITIALIZE g_xcda_m.* TO NULL
      INITIALIZE g_xcda_d TO NULL
      INITIALIZE g_xcda2_d TO NULL
 
      CALL axct304_show()
      LET INT_FLAG = 0
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN 
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axct304_set_act_visible()
   CALL axct304_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_xcdald_t = g_xcda_m.xcdald
   LET g_xcda003_t = g_xcda_m.xcda003
   LET g_xcda004_t = g_xcda_m.xcda004
   LET g_xcda005_t = g_xcda_m.xcda005
 
   
   #組合新增資料的條件
   LET g_add_browse = " xcdaent = " ||g_enterprise|| " AND",
                      " xcdald = '", g_xcda_m.xcdald, "' "
                      ," AND xcda003 = '", g_xcda_m.xcda003, "' "
                      ," AND xcda004 = '", g_xcda_m.xcda004, "' "
                      ," AND xcda005 = '", g_xcda_m.xcda005, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axct304_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   LET g_curr_diag = ui.DIALOG.getCurrent()
   CALL axct304_idx_chk()
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   #功能已完成,通報訊息中心
   CALL axct304_msgcentre_notify('reproduce')
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axct304_detail_reproduce()
   #add-point:delete段define name="detail_reproduce.define_customerization"
   
   #end add-point 
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xcda_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axct304_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xcda_t
    WHERE xcdaent = g_enterprise AND xcdald = g_xcdald_t
    AND xcda003 = g_xcda003_t
    AND xcda004 = g_xcda004_t
    AND xcda005 = g_xcda005_t
 
       INTO TEMP axct304_detail
   
   #將key修正為調整後   
   UPDATE axct304_detail 
      #更新key欄位
      SET xcdald = g_xcda_m.xcdald
          , xcda003 = g_xcda_m.xcda003
          , xcda004 = g_xcda_m.xcda004
          , xcda005 = g_xcda_m.xcda005
 
      #更新共用欄位
      #應用 a13 樣板自動產生(Version:4)
       , xcdaownid = g_user 
       , xcdaowndp = g_dept
       , xcdacrtid = g_user
       , xcdacrtdp = g_dept 
       , xcdacrtdt = ld_date
       , xcdamodid = g_user
       , xcdamoddt = ld_date
 
 
 
                                       
   #將資料塞回原table   
   INSERT INTO xcda_t SELECT * FROM axct304_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axct304_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
#   UPDATE xcda_t SET xcdastus = 'N'
#   WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald
#     AND xcda003 = g_xcda_m.xcda003
#     AND xcda004 = g_xcda_m.xcda004
#     AND xcda005 = g_xcda_m.xcda005
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xcdald_t = g_xcda_m.xcdald
   LET g_xcda003_t = g_xcda_m.xcda003
   LET g_xcda004_t = g_xcda_m.xcda004
   LET g_xcda005_t = g_xcda_m.xcda005
 
   
   DROP TABLE axct304_detail
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axct304_delete()
   #add-point:delete段define name="delete.define_customerization"
   
   #end add-point
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_xcda_m.xcdald IS NULL
   OR g_xcda_m.xcda003 IS NULL
   OR g_xcda_m.xcda004 IS NULL
   OR g_xcda_m.xcda005 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   
 
   OPEN axct304_cl USING g_enterprise,g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcda004,g_xcda_m.xcda005
   IF SQLCA.SQLCODE THEN   #(ver:49)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axct304_cl:" 
      LET g_errparam.code   = SQLCA.SQLCODE   #(ver:49)
      LET g_errparam.popup  = TRUE 
      CLOSE axct304_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axct304_master_referesh USING g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcda004,g_xcda_m.xcda005 INTO g_xcda_m.xcdacomp, 
       g_xcda_m.xcda004,g_xcda_m.xcda005,g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcdacomp_desc,g_xcda_m.xcdald_desc, 
       g_xcda_m.xcda003_desc
   
   #遮罩相關處理
   LET g_xcda_m_mask_o.* =  g_xcda_m.*
   CALL axct304_xcda_t_mask()
   LET g_xcda_m_mask_n.* =  g_xcda_m.*
   
   CALL axct304_show()
 
   #單頭多語言資料備份
   
   
   IF cl_ask_del_master() THEN              #確認一下
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL axct304_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
 
      #add-point:單身刪除前 name="delete.body.b_delete"
      #已确认资料不可修改
#      IF g_xcda_m.xcdastus <> 'N' THEN
#         INITIALIZE g_errparam TO NULL 
#         LET g_errparam.extend = ''         
#         LET g_errparam.code   = "apm-00035" 
#         LET g_errparam.popup  = TRUE 
#         CALL cl_err()
#         RETURN
#      END IF
      #end add-point
      
      DELETE FROM xcda_t WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald
                                                               AND xcda003 = g_xcda_m.xcda003
                                                               AND xcda004 = g_xcda_m.xcda004
                                                               AND xcda005 = g_xcda_m.xcda005
 
                                                               
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xcda_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
 
      
  
      #add-point:單身刪除後  name="delete.body.a_delete"
      
      #end add-point
      
 
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      #頭先不紀錄
      #IF NOT cl_log_modified_record('','') THEN 
      #   CLOSE axct304_cl
      #   CALL s_transaction_end('N','0')
      #   RETURN 
      #END IF
      
      CLEAR FORM
      CALL g_xcda_d.clear() 
      CALL g_xcda2_d.clear()       
 
     
      CALL axct304_ui_browser_refresh()  
      #CALL axct304_ui_headershow()  
      #CALL axct304_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axct304_fetch('P')
      ELSE
         #LET g_wc = " 1=1"
         #LET g_wc2 = " 1=1"
         #CALL axct304_browser_fill("F")
         CLEAR FORM
      END IF
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')   
   END IF
 
   CLOSE axct304_cl
 
   #功能已完成,通報訊息中心
   CALL axct304_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="axct304.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axct304_b_fill(p_wc2)
   #add-point:b_fill段define name="b_fill.define_customerization"
   
   #end add-point
   DEFINE p_wc2      STRING
   #add-point:b_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #先清空單身變數內容
   CALL g_xcda_d.clear()
   CALL g_xcda2_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   LET g_sql = "SELECT  DISTINCT xcda001,xcda002,xcda006,xcda007,xcda008,xcda009,xcda101,xcda102,xcda001, 
       xcda002,xcda006,xcda007,xcda008,xcda009,xcdaownid,xcdaowndp,xcdacrtid,xcdacrtdp,xcdacrtdt,xcdamodid, 
       xcdamoddt,xcdacnfid,xcdacnfdt,xcdapstid,xcdapstdt,t1.xcbfl003 ,t2.imaal003 ,t3.imaal004 ,t4.xcaul003 , 
       t5.ooag011 ,t6.ooefl003 ,t7.ooag011 ,t8.ooefl003 ,t9.ooag011 ,t10.ooag011 ,t11.ooag011 FROM xcda_t", 
          
               "",
               
                              " LEFT JOIN xcbfl_t t1 ON t1.xcbflent="||g_enterprise||" AND t1.xcbflcomp=xcdacomp AND t1.xcbfl001=xcda002 AND t1.xcbfl002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent="||g_enterprise||" AND t2.imaal001=xcda006 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t3 ON t3.imaalent="||g_enterprise||" AND t3.imaal001=xcda006 AND t3.imaal002='"||g_dlang||"' ",
               " LEFT JOIN xcaul_t t4 ON t4.xcaulent="||g_enterprise||" AND t4.xcaul001=xcda009 AND t4.xcaul002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=xcdaownid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent="||g_enterprise||" AND t6.ooefl001=xcdaowndp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent="||g_enterprise||" AND t7.ooag001=xcdacrtid  ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent="||g_enterprise||" AND t8.ooefl001=xcdacrtdp AND t8.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent="||g_enterprise||" AND t9.ooag001=xcdamodid  ",
               " LEFT JOIN ooag_t t10 ON t10.ooagent="||g_enterprise||" AND t10.ooag001=xcdacnfid  ",
               " LEFT JOIN ooag_t t11 ON t11.ooagent="||g_enterprise||" AND t11.ooag001=xcdapstid  ",
 
               " WHERE xcdaent= ? AND xcdald=? AND xcda003=? AND xcda004=? AND xcda005=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("xcda_t")
   END IF
   
   #add-point:b_fill段sql_after name="b_fill.sql_after"
   LET g_sql=g_sql CLIPPED," AND xcda001 = '1' " 
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axct304_fill_chk(1) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = g_sql, " ORDER BY xcda_t.xcda001,xcda_t.xcda002,xcda_t.xcda006,xcda_t.xcda007,xcda_t.xcda008,xcda_t.xcda009"
         #add-point:b_fill段fill_before name="b_fill.fill_before"
         
         #end add-point
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axct304_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axct304_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcda004,g_xcda_m.xcda005   #(ver:49)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcda004,g_xcda_m.xcda005 INTO g_xcda_d[l_ac].xcda001, 
          g_xcda_d[l_ac].xcda002,g_xcda_d[l_ac].xcda006,g_xcda_d[l_ac].xcda007,g_xcda_d[l_ac].xcda008, 
          g_xcda_d[l_ac].xcda009,g_xcda_d[l_ac].xcda101,g_xcda_d[l_ac].xcda102,g_xcda2_d[l_ac].xcda001, 
          g_xcda2_d[l_ac].xcda002,g_xcda2_d[l_ac].xcda006,g_xcda2_d[l_ac].xcda007,g_xcda2_d[l_ac].xcda008, 
          g_xcda2_d[l_ac].xcda009,g_xcda2_d[l_ac].xcdaownid,g_xcda2_d[l_ac].xcdaowndp,g_xcda2_d[l_ac].xcdacrtid, 
          g_xcda2_d[l_ac].xcdacrtdp,g_xcda2_d[l_ac].xcdacrtdt,g_xcda2_d[l_ac].xcdamodid,g_xcda2_d[l_ac].xcdamoddt, 
          g_xcda2_d[l_ac].xcdacnfid,g_xcda2_d[l_ac].xcdacnfdt,g_xcda2_d[l_ac].xcdapstid,g_xcda2_d[l_ac].xcdapstdt, 
          g_xcda_d[l_ac].xcda002_desc,g_xcda_d[l_ac].xcda006_desc,g_xcda_d[l_ac].xcda006_desc_desc,g_xcda_d[l_ac].xcda009_desc, 
          g_xcda2_d[l_ac].xcdaownid_desc,g_xcda2_d[l_ac].xcdaowndp_desc,g_xcda2_d[l_ac].xcdacrtid_desc, 
          g_xcda2_d[l_ac].xcdacrtdp_desc,g_xcda2_d[l_ac].xcdamodid_desc,g_xcda2_d[l_ac].xcdacnfid_desc, 
          g_xcda2_d[l_ac].xcdapstid_desc   #(ver:49)
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充 name="b_fill.fill"
         
         #end add-point
      
         #帶出公用欄位reference值
         
         
         #應用 a12 樣板自動產生(Version:4)
 
 
 
 
        
         #add-point:單身資料抓取 name="bfill.foreach"
         
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF 
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         
      END FOREACH
 
            CALL g_xcda_d.deleteElement(g_xcda_d.getLength())
      CALL g_xcda2_d.deleteElement(g_xcda2_d.getLength())
 
      
   END IF
   
   #add-point:b_fill段more name="b_fill.more"
   LET g_rec_b=l_ac-1
   LET l_ac = g_cnt
   LET g_cnt = 0
   FREE axct304_pb
   RETURN
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   #遮罩相關處理
   FOR l_ac = 1 TO g_xcda_d.getLength()
      LET g_xcda_d_mask_o[l_ac].* =  g_xcda_d[l_ac].*
      CALL axct304_xcda_t_mask()
      LET g_xcda_d_mask_n[l_ac].* =  g_xcda_d[l_ac].*
   END FOR
   
   LET g_xcda2_d_mask_o.* =  g_xcda2_d.*
   FOR l_ac = 1 TO g_xcda2_d.getLength()
      LET g_xcda2_d_mask_o[l_ac].* =  g_xcda2_d[l_ac].*
      CALL axct304_xcda_t_mask()
      LET g_xcda2_d_mask_n[l_ac].* =  g_xcda2_d[l_ac].*
   END FOR
 
 
   FREE axct304_pb   
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axct304_idx_chk()
   #add-point:idx_chk段define name="idx_chk.define_customerization"
   
   #end add-point
   #add-point:idx_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   #判定目前選擇的頁面
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      #確保當下指標的位置未超過上限
      IF g_detail_idx > g_xcda_d.getLength() THEN
         LET g_detail_idx = g_xcda_d.getLength()
      END IF
      #確保資料位置不小於1
      IF g_detail_idx = 0 AND g_xcda_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      #將筆數資料顯示到畫面上
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xcda_d.getLength() TO FORMONLY.cnt
      #將位置顯示到正確筆數上
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   END IF
    
   #同第一個page的做法進行其他頁面的處理
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_xcda2_d.getLength() THEN
         LET g_detail_idx = g_xcda2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xcda2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xcda2_d.getLength() TO FORMONLY.cnt
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_xcda3_d.getLength() THEN
         LET g_detail_idx = g_xcda3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xcda3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xcda3_d.getLength() TO FORMONLY.cnt
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_xcda4_d.getLength() THEN
         LET g_detail_idx = g_xcda4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xcda4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xcda4_d.getLength() TO FORMONLY.cnt
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
   END IF
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axct304_b_fill2(pi_idx)
   #add-point:b_fill2段define name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_xcda_d.getLength() <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   CALL axct304_b_fill_3()
   CALL axct304_b_fill_4()
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.before_delete" >}
#+ 單身db資料刪除
PRIVATE FUNCTION axct304_before_delete()
   #add-point:before_delete段define name="before_delete.define_customerization"
   
   #end add-point 
   #add-point:before_delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="before_delete.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="delete.body.b_single_delete"
   
   #end add-point
   
   DELETE FROM xcda_t
    WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald AND
                              xcda003 = g_xcda_m.xcda003 AND
                              xcda004 = g_xcda_m.xcda004 AND
                              xcda005 = g_xcda_m.xcda005 AND
 
          xcda001 = g_xcda_d_t.xcda001
      AND xcda002 = g_xcda_d_t.xcda002
      AND xcda006 = g_xcda_d_t.xcda006
      AND xcda007 = g_xcda_d_t.xcda007
      AND xcda008 = g_xcda_d_t.xcda008
      AND xcda009 = g_xcda_d_t.xcda009
 
      
   #add-point:單筆刪除中 name="delete.body.m_single_delete"
    IF g_glaa015 = 'Y' OR g_glaa019 = 'Y' THEN
      DELETE FROM xcda_t
       WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald AND
                              xcda003 = g_xcda_m.xcda003 AND
                              xcda004 = g_xcda_m.xcda004 AND
                              xcda005 = g_xcda_m.xcda005 AND
 
         
       xcda002 = g_xcda_d_t.xcda002
      AND xcda006 = g_xcda_d_t.xcda006
      AND xcda007 = g_xcda_d_t.xcda007
      AND xcda008 = g_xcda_d_t.xcda008
      AND xcda009 = g_xcda_d_t.xcda009
   END IF
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xcda_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後 name="delete.body.a_single_delete"
   
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
 
{</section>}
 
{<section id="axct304.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axct304_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define name="delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axct304_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define name="insert_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axct304_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define name="update_b.define_customerization"
   
   #end add-point 
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正其他單身key欄位
PRIVATE FUNCTION axct304_key_update_b(ps_keys_bak)
   #add-point:update_b段define name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變, 若無改變則返回
   IF g_xcda_d[l_ac].xcda001 = g_xcda_d_t.xcda001 
      AND g_xcda_d[l_ac].xcda002 = g_xcda_d_t.xcda002 
      AND g_xcda_d[l_ac].xcda006 = g_xcda_d_t.xcda006 
      AND g_xcda_d[l_ac].xcda007 = g_xcda_d_t.xcda007 
      AND g_xcda_d[l_ac].xcda008 = g_xcda_d_t.xcda008 
      AND g_xcda_d[l_ac].xcda009 = g_xcda_d_t.xcda009 
 
      THEN
      RETURN
   END IF
    
 
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION axct304_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axct304_lock_b(ps_table,ps_page)
   #add-point:lock_b段define name="lock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
   
   #先刷新資料
   #CALL axct304_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axct304.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axct304_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define name="unlock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
   
 
 
END FUNCTION
 
{</section>}
 
{<section id="axct304.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axct304_set_entry(p_cmd)
   #add-point:set_entry段define name="set_entry.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xcdald,xcda003,xcda004,xcda005",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("xcdacomp",TRUE)
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axct304.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axct304_set_no_entry(p_cmd)
   #add-point:set_no_entry段define name="set_no_entry.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xcdald,xcda003,xcda004,xcda005",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      CALL cl_set_comp_entry("xcdacomp",FALSE)
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axct304.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axct304_set_entry_b(p_cmd)
   #add-point:set_entry_b段define name="set_entry_b.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   IF p_cmd = 'a' THEN
   #140821 
      CALL cl_set_comp_entry("xcda001,xcda002,xcda006,xcda007,xcda008,xcda009,xcda102",TRUE)
#      CALL cl_set_comp_entry("imag014,xcda101",FALSE)
#      CALL cl_set_comp_required("xcda008,xcda007,imag014",FALSE)

      
    
   END IF
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axct304_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define name="set_no_entry_b.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b段"
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xcda001,xcda006,xcda007,xcda008,xcda002,xcda101,imag014",FALSE)
      CALL cl_set_comp_entry("xcda001_3,xcda006_3,xcda007_3,xcda008_3,xcda002_3,xcda101_3,imag014_3",FALSE)
      CALL cl_set_comp_entry("xcda001_4,xcda006_4,xcda007_4,xcda008_4,xcda002_4,xcda101_4,imag014_4",FALSE)

   END IF
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION axct304_set_act_visible()
   #add-point:set_act_visible段define name="set_act_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point
   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axct304.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION axct304_set_act_no_visible()
   #add-point:set_act_no_visible段define name="set_act_no_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point
   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axct304.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION axct304_set_act_visible_b()
   #add-point:set_act_visible_b段define name="set_act_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axct304.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION axct304_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define name="set_act_no_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axct304.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axct304_default_search()
   #add-point:default_search段define name="default_search.define_customerization"
   
   #end add-point    
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="default_search.pre_function"
   
   #end add-point
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   #add-point:default_search段開始前 name="default_search.before"
   
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xcdald = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xcda003 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xcda004 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " xcda005 = '", g_argv[04], "' AND "
   END IF
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
 
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axct304.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axct304_fill_chk(ps_idx)
   #add-point:fill_chk段define name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="fill_chk.pre_function"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
   
   #add-point:fill_chk段other name="fill_chk.other"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axct304.modify_detail_chk" >}
#+ 單身輸入判定
PRIVATE FUNCTION axct304_modify_detail_chk(ps_record)
   #add-point:modify_detail_chk段define name="modify_detail_chk.define_customerization"
   
   #end add-point
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify_detail_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="modify_detail_chk.before"
   
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "xcda001"
      WHEN "s_detail2"
         LET ls_return = "xcda001_2"
 
      #add-point:modify_detail_chk段自訂page控制 name="modify_detail_chk.page_control"
      WHEN "s_detail3" 
         LET ls_return = "xcda001_3"
      WHEN "s_detail4"
         LET ls_return = "xcda001_4"
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前 name="modify_detail_chk.after"
   
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
 
{</section>}
 
{<section id="axct304.mask_functions" >}
&include "erp/axc/axct304_mask.4gl"
 
{</section>}
 
{<section id="axct304.state_change" >}
    
 
{</section>}
 
{<section id="axct304.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION axct304_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xcda_m.xcdald
   LET g_pk_array[1].column = 'xcdald'
   LET g_pk_array[2].values = g_xcda_m.xcda003
   LET g_pk_array[2].column = 'xcda003'
   LET g_pk_array[3].values = g_xcda_m.xcda004
   LET g_pk_array[3].column = 'xcda004'
   LET g_pk_array[4].values = g_xcda_m.xcda005
   LET g_pk_array[4].column = 'xcda005'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axct304.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION axct304_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL axct304_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xcda_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axct304.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcda_m.xcdacomp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcda_m.xcdacomp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcda_m.xcdacomp_desc   
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcda_m.xcdald
   CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcda_m.xcdald_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcda_m.xcdald_desc   
   
   
   INITIALIZE g_ref_fields TO NULL                                                                                                                                                      
   LET g_ref_fields[1] = g_xcda_m.xcda003                                                                                                                                   
   CALL ap_ref_array2(g_ref_fields,"SELECT xcatl003 FROM xcatl_t WHERE xcatlent='"||g_enterprise||"' AND xcatl001=? AND xcatl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcda_m.xcda003_desc = '', g_rtn_fields[1] , ''                                                                                                                     
   DISPLAY BY NAME g_xcda_m.xcda003_desc 
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_page_visible()
   DEFINE l_date  DATE
   
   SELECT glaa001,glaa003,glaa015,glaa016,glaa018,glaa019,glaa020,glaa022,glaa025 
     INTO g_glaa001,g_glaa003,g_glaa015,g_glaa016,g_glaa018,g_glaa019,g_glaa020,g_glaa022,g_glaa025 
     FROM glaa_t
    WHERE glaaent = g_enterprise 
      AND glaald = g_xcda_m.xcdald
   #檢查年度期別>=關賬日期，則不可修改刪除
   IF cl_null(g_xcda_m.xcdacomp) THEN 
      CALL cl_get_para(g_enterprise,g_site,'S-FIN-6012') RETURNING l_date
   ELSE
      CALL cl_get_para(g_enterprise,g_xcda_m.xcdacomp,'S-FIN-6012') RETURNING l_date
   END IF
   IF g_xcda_m.xcda004 < YEAR(l_date) THEN
      CALL cl_set_act_visible("modify,modify_detail,delete", FALSE)
   ELSE
      IF g_xcda_m.xcda004 = YEAR(l_date) THEN
         IF g_xcda_m.xcda005 < MONTH(l_date) THEN
            CALL cl_set_act_visible("modify,modify_detail,delete", FALSE)
          ELSE
            CALL cl_set_act_visible("modify,modify_detail,delete", TRUE)
         END IF
      ELSE
         CALL cl_set_act_visible("modify,modify_detail,delete", TRUE)
      END IF
   END IF
#成本域顯示  
   IF cl_null(g_xcda_m.xcdacomp) THEN 
      CALL cl_get_para(g_enterprise,g_site,'S-FIN-6001') RETURNING g_para_data   #采用成本域否
   ELSE
      CALL cl_get_para(g_enterprise,g_xcda_m.xcdacomp,'S-FIN-6001') RETURNING g_para_data   #采用成本域否
   END IF
               
   IF g_para_data = 'Y' THEN
      CALL cl_set_comp_visible('xcda002,xcda002_desc,xcda002_3,xcda002_3_desc,xcda002_4,xcda002_4_desc',TRUE)                    
   ELSE
      CALL cl_set_comp_visible('xcda002,xcda002_desc,xcda002_3,xcda002_3_desc,xcda002_4,xcda002_4_desc',FALSE)                
   END IF
   IF g_glaa015 = 'Y' THEN
      CALL cl_set_comp_visible("page_2",TRUE)
   ELSE
      CALL cl_set_comp_visible("page_2",FALSE) 
   END IF
   IF g_glaa019 = 'Y' THEN
      CALL cl_set_comp_visible("page_3",TRUE)
   ELSE
      CALL cl_set_comp_visible("page_3",FALSE)
   END IF
#特征显示   
#   IF cl_get_para(g_enterprise,g_xcdo_m.xcdocomp,'S-FIN-6013') = 'N' THEN
#      CALL cl_set_comp_visible('xcdo008,xcdo008_2,xcdo008_3,xcdo008_4',FALSE)
#   END IF   
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_chk_ld_comp()
   DEFINE r_success        LIKE type_t.num5
   DEFINE l_success        LIKE type_t.num5
   
   LET r_success = TRUE

#只检查法人
   IF g_xcda_m.xcdald IS NULL AND g_xcda_m.xcdacomp IS NOT NULL THEN   
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
      
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_xcda_m.xcdacomp
         
      #呼叫檢查存在並帶值的library
      IF cl_chk_exist("v_ooef001_1") THEN
         #檢查成功時後續處理
         #LET  = g_chkparam.return1
         #DISPLAY BY NAME 
      ELSE
         #檢查失敗時後續處理
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF

#只检查账套
   IF g_xcda_m.xcdald IS NOT NULL AND g_xcda_m.xcdacomp IS NULL THEN
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
      
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_xcda_m.xcdald
      #160318-00025#12--add--str
      LET g_errshow = TRUE 
      LET g_chkparam.err_str[1] = "agl-00051:sub-01302|agli010|",cl_get_progname("agli010",g_lang,"2"),"|:EXEPROGagli010"
      #160318-00025#12--add--end   
      #呼叫檢查存在並帶值的library
      IF cl_chk_exist("v_glaald") THEN
         #檢查成功時後續處理
         #LET  = g_chkparam.return1
         #DISPLAY BY NAME 
         CALL s_ld_chk_authorization(g_user,g_xcda_m.xcdald) RETURNING l_success
         IF l_success = FALSE THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'axr-00022'
            LET g_errparam.extend = g_xcda_m.xcdald
            LET g_errparam.popup = TRUE
            CALL cl_err()
            LET r_success = FALSE
            RETURN r_success
         END IF 
      ELSE
         #檢查失敗時後續處理
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF

#法人账套都存在，检查他们的关系
   IF NOT s_ld_chk_comp(g_xcda_m.xcdald,g_xcda_m.xcdacomp) THEN  #v_glaald_5 
      LET g_xcda_m.xcdacomp = g_xcda_m_t.xcdacomp
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_chk_year_period()
   DEFINE r_success        LIKE type_t.num5
   DEFINE l_bdate          LIKE type_t.dat    #起始年度+期別對應的起始截止日期
   DEFINE l_edate          LIKE type_t.dat
   DEFINE l_glaa003        LIKE glaa_t.glaa003
   DEFINE l_date  DATE
   
   LET r_success = TRUE
#有年度没期别，检查年度不得小于成本截止日期所在的年度
   IF cl_null(g_xcda_m.xcdacomp) THEN
      CALL cl_get_para(g_enterprise,g_site,'S-FIN-6012') RETURNING l_date 
   ELSE
      CALL cl_get_para(g_enterprise,g_xcda_m.xcdacomp,'S-FIN-6012') RETURNING l_date 
   END IF
   
   IF g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NULL THEN
      IF g_xcda_m.xcda004 < YEAR(l_date) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'afa-00060'
         LET g_errparam.extend = g_xcda_m.xcda004
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success      
      END IF
   END IF
   
#有年度有期别，年度期别所属的结束日期，不得小于等于关账日期
   IF g_xcda_m.xcda004 IS NOT NULL AND g_xcda_m.xcda005 IS NOT NULL THEN
#抓出会计周期参考表号  glaa003
      SELECT glaa003 INTO l_glaa003
        FROM glaa_t
       WHERE glaaent  = g_enterprise
         AND glaacomp = g_xcda_m.xcdacomp
         AND glaa014  = 'Y' 

      CALL s_fin_date_get_period_range(l_glaa003,g_xcda_m.xcda004,g_xcda_m.xcda005) RETURNING l_bdate,l_edate
      
      IF NOT s_date_chk_close(l_edate,'2') THEN
         LET r_success = FALSE
         RETURN r_success      
      END IF
   END IF
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_get_date()
IF NOT cl_null(g_glaa003) AND NOT cl_null(g_xcda_m.xcda004) AND NOT cl_null(g_xcda_m.xcda005) THEN
   CALL s_fin_date_get_period_range(g_glaa003,g_xcda_m.xcda004,g_xcda_m.xcda005)
    RETURNING g_bdate,g_edate
END IF 
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_b_fill_3()
   
   #add-point:b_fill段define

   #end add-point     
 
   #先清空單身變數內容
   CALL g_xcda3_d.clear()
   
 
   #add-point:b_fill段sql_before

   #end add-point
   
   LET g_sql = "SELECT  UNIQUE xcda001,xcda002,xcda006,xcda007,xcda008,xcda009,xcda101,xcda102,
                 t1.xcbfl003 ,t2.imaal003 ,t3.imaal004 ,t4.xcaul003 
                 FROM xcda_t", 
          
               "",
               
                              " LEFT JOIN xcbfl_t t1 ON t1.xcbflent='"||g_enterprise||"' AND t1.xcbflcomp=xcdacomp AND t1.xcbfl001=xcda002 AND t1.xcbfl002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=xcda006 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t3 ON t3.imaalent='"||g_enterprise||"' AND t3.imaal001=xcda006 AND t3.imaal002='"||g_dlang||"' ",
               " LEFT JOIN xcaul_t t4 ON t4.xcaulent='"||g_enterprise||"' AND t4.xcaul001=xcda009 AND t4.xcaul002='"||g_dlang||"' ",
               
 
               " WHERE xcdaent= ? AND xcdald=? AND xcda003=? AND xcda004=? AND xcda005=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("xcda_t")
   END IF
   
   #add-point:b_fill段sql_after
   LET g_sql=g_sql CLIPPED," AND xcda001 = '2' " 
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axct304_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY xcda_t.xcda001,xcda_t.xcda002,xcda_t.xcda006,xcda_t.xcda007,xcda_t.xcda008,xcda_t.xcda009"
      
      #add-point:b_fill段fill_before

      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE axct304_pb3 FROM g_sql
      DECLARE b_fill_cs3 CURSOR FOR axct304_pb3
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcda004,g_xcda_m.xcda005
                                               
      FOREACH b_fill_cs3 INTO g_xcda3_d[l_ac].xcda001_3,g_xcda3_d[l_ac].xcda002_3,g_xcda3_d[l_ac].xcda006_3,g_xcda3_d[l_ac].xcda007_3, 
          g_xcda3_d[l_ac].xcda008_3,g_xcda3_d[l_ac].xcda009_3,g_xcda3_d[l_ac].xcda101_3,g_xcda3_d[l_ac].xcda102_3,
          g_xcda3_d[l_ac].xcda002_3_desc,g_xcda3_d[l_ac].xcda006_3_desc,g_xcda3_d[l_ac].xcda006_3_desc_desc, 
          g_xcda3_d[l_ac].xcda009_3_desc
          
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充

         #end add-point
      
         #帶出公用欄位reference值
         
         
         
 
 
        
         #add-point:單身資料抓取

         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF 
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         
      END FOREACH
 
            CALL g_xcda3_d.deleteElement(g_xcda3_d.getLength())
     
 
      
   END IF
   
   #add-point:b_fill段more

   #end add-point
   
   
 
   FREE axct304_pb3   
   

END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_b_fill_4()
#先清空單身變數內容
   CALL g_xcda4_d.clear()
   
 
   #add-point:b_fill段sql_before

   #end add-point
   
   LET g_sql = "SELECT  UNIQUE xcda001,xcda002,xcda006,xcda007,xcda008,xcda009,xcda101,xcda102,
                 t1.xcbfl003 ,t2.imaal003 ,t3.imaal004 ,t4.xcaul003 
                 FROM xcda_t", 
          
               "",
               
                              " LEFT JOIN xcbfl_t t1 ON t1.xcbflent='"||g_enterprise||"' AND t1.xcbflcomp=xcdacomp AND t1.xcbfl001=xcda002 AND t1.xcbfl002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=xcda006 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t3 ON t3.imaalent='"||g_enterprise||"' AND t3.imaal001=xcda006 AND t3.imaal002='"||g_dlang||"' ",
               " LEFT JOIN xcaul_t t4 ON t4.xcaulent='"||g_enterprise||"' AND t4.xcaul001=xcda009 AND t4.xcaul002='"||g_dlang||"' ",
               
 
               " WHERE xcdaent= ? AND xcdald=? AND xcda003=? AND xcda004=? AND xcda005=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("xcda_t")
   END IF
   
   #add-point:b_fill段sql_after
   LET g_sql=g_sql CLIPPED," AND xcda001 = '3' " 
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axct304_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY xcda_t.xcda001,xcda_t.xcda002,xcda_t.xcda006,xcda_t.xcda007,xcda_t.xcda008,xcda_t.xcda009"
      
      #add-point:b_fill段fill_before

      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE axct304_pb4 FROM g_sql
      DECLARE b_fill_cs4 CURSOR FOR axct304_pb4
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs4 USING g_enterprise,g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcda004,g_xcda_m.xcda005
                                               
      FOREACH b_fill_cs4 INTO g_xcda4_d[l_ac].xcda001_4,g_xcda4_d[l_ac].xcda002_4,g_xcda4_d[l_ac].xcda006_4,g_xcda4_d[l_ac].xcda007_4, 
          g_xcda4_d[l_ac].xcda008_4,g_xcda4_d[l_ac].xcda009_4,g_xcda4_d[l_ac].xcda101_4,g_xcda4_d[l_ac].xcda102_4,
          g_xcda4_d[l_ac].xcda002_4_desc,g_xcda4_d[l_ac].xcda006_4_desc,g_xcda4_d[l_ac].xcda006_4_desc_desc, 
          g_xcda4_d[l_ac].xcda009_4_desc
          
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充

         #end add-point
      
         #帶出公用欄位reference值
         
         
         
 
 
        
         #add-point:單身資料抓取

         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF 
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         
      END FOREACH
 
            CALL g_xcda4_d.deleteElement(g_xcda4_d.getLength())
     
 
      
   END IF
   
   #add-point:b_fill段more

   #end add-point
   
   
 
   FREE axct304_pb4   
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_detail_ref(p_xcda002,p_xcda006,p_xcda009)
DEFINE p_xcda002 LIKE xcda_t.xcda002
DEFINE p_xcda009 LIKE xcda_t.xcda009
DEFINE p_xcda006 LIKE xcda_t.xcda006
DEFINE l_xcda002_desc LIKE type_t.chr1000
DEFINE l_xcda009_desc LIKE type_t.chr1000
DEFINE l_xcda006_desc LIKE type_t.chr1000
DEFINE l_xcda006_desc_desc LIKE type_t.chr1000
DEFINE l_imag014      LIKE imag_t.imag014

#成本域
   INITIALIZE g_ref_fields TO NULL                                                                                                                                                                                                                                                                                                
   LET g_ref_fields[1] = g_xcda_m.xcdacomp                                                                                                                                                 
   LET g_ref_fields[2] = p_xcda002                                                                                                                                            
   CALL ap_ref_array2(g_ref_fields,"SELECT xcbfl003 FROM xcbfl_t WHERE xcbflent='"||g_enterprise||"' AND xcbflcomp=? AND xcbfl001=? AND xcbfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET l_xcda002_desc = '', g_rtn_fields[1] , ''
#品名規格
   INITIALIZE g_ref_fields TO NULL                                                                                                                                                                                                                                                                                     
   LET g_ref_fields[1] = p_xcda006                                                                                                                            
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET l_xcda006_desc = '', g_rtn_fields[1] , '' 
   LET l_xcda006_desc_desc = '', g_rtn_fields[2] , ''
#成本單位
SELECT xcbb005 INTO l_imag014 FROM xcbb_t
 WHERE xcbbent  = g_enterprise
   AND xcbbcomp = g_xcda_m.xcdacomp
   AND xcbb001  = g_xcda_m.xcda004
   AND xcbb002  = g_xcda_m.xcda005
   AND xcbb003  = p_xcda006

#成本次要素
   INITIALIZE g_ref_fields TO NULL                                                                                                                                                                                                                                                                                     
   LET g_ref_fields[1] = p_xcda009                                                                                                                         
   CALL ap_ref_array2(g_ref_fields,"SELECT xcaul003 FROM xcaul_t WHERE xcaulent='"||g_enterprise||"' AND xcaul001=? AND xcaul002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET l_xcda009_desc = '', g_rtn_fields[1] , '' 
   
   RETURN l_xcda002_desc,l_xcda006_desc,l_xcda006_desc_desc,l_imag014,l_xcda009_desc

END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_sum_chk()
DEFINE l_xcda001 LIKE xcda_t.xcda001
DEFINE l_xcda002 LIKE xcda_t.xcda002
DEFINE l_xcda006 LIKE xcda_t.xcda006
DEFINE l_xcda007 LIKE xcda_t.xcda007
DEFINE l_xcda008 LIKE xcda_t.xcda008

DEFINE l_xcda001_t LIKE xcda_t.xcda001
DEFINE l_xcda002_t LIKE xcda_t.xcda002
DEFINE l_xcda006_t LIKE xcda_t.xcda006
DEFINE l_xcda007_t LIKE xcda_t.xcda007
DEFINE l_xcda008_t LIKE xcda_t.xcda008

DEFINE l_str     STRING
DEFINE l_success LIKE type_t.chr1
DEFINE l_sumxcda LIKE xcda_t.xcda102
DEFINE l_sumxcca LIKE xcda_t.xcda102
   LET l_success = 'Y'    

  CALL cl_err_collect_init()
   LET g_coll_title[1] = cl_getmsg("axc-00547",g_lang) #賬套本位幣順序
   LET g_coll_title[2] = cl_getmsg("axc-00548",g_lang) #成本域
   LET g_coll_title[3] = cl_getmsg("axc-00552",g_lang) #料號
   LET g_coll_title[4] = cl_getmsg("axc-00553",g_lang) #特性
   LET g_coll_title[5] = cl_getmsg("axc-00554",g_lang) #批號

   FOREACH axct304_sum_cs USING g_enterprise,g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcda004,g_xcda_m.xcda005
          INTO l_xcda001,l_xcda002,l_xcda006,l_xcda007,l_xcda008 
      IF  (l_xcda001_t = l_xcda001) AND (l_xcda002_t = l_xcda002) AND (l_xcda006_t = l_xcda006) AND (l_xcda007_t = l_xcda007) AND (l_xcda008_t = l_xcda008) THEN
          CONTINUE FOREACH
      END IF             

      IF cl_null(l_xcda002) THEN
         LET l_xcda002 = ' '
      END IF
      IF cl_null(l_xcda008) THEN
         LET l_xcda008 = ' '
      END IF
      IF cl_null(l_xcda007) THEN
         LET l_xcda007 = ' '
      END IF 
      IF cl_null(l_xcda006) THEN
         LET l_xcda006 = ' '
      END IF 
      LET l_sumxcda= 0
      LET l_sumxcca= 0
      SELECT SUM(xcda102) INTO l_sumxcda FROM xcda_t 
       WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald
         AND xcda003 = g_xcda_m.xcda003
         AND xcda004 = g_xcda_m.xcda004
         AND xcda005 = g_xcda_m.xcda005            
         AND xcda001 = l_xcda001
         AND xcda002 = l_xcda002 
         AND xcda006 = l_xcda006             
         AND xcda007 = l_xcda007
         AND xcda008 = l_xcda008
         
         
         
      SELECT xcca102 INTO l_sumxcca FROM xcca_t 
      WHERE xccaent = g_enterprise AND xccald = g_xcda_m.xcdald
        AND xcca003 = g_xcda_m.xcda003
        AND xcca004 = g_xcda_m.xcda004
        AND xcca005 = g_xcda_m.xcda005            
        AND xcca001 = l_xcda001
        AND xcca002 = l_xcda002
        AND xcca006 = l_xcda006               
        AND xcca007 = l_xcda007
        AND xcca008 = l_xcda008
        
      IF cl_null(l_sumxcda) THEN
         LET l_sumxcda = 0
      END IF
      IF cl_null(l_sumxcca) THEN
         LET l_sumxcca = 0 
      END IF      
      IF l_sumxcda <> l_sumxcca THEN             
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = 'axc-00529'
        LET g_errparam.extend = ''
        LET g_errparam.popup = TRUE
        LET g_errparam.coll_vals[1] = l_xcda001
        LET g_errparam.coll_vals[2] = l_xcda002
        LET g_errparam.coll_vals[3] = l_xcda006
        LET g_errparam.coll_vals[4] = l_xcda007
        LET g_errparam.coll_vals[5] = l_xcda008

        LET g_errparam.sqlerr = 0
        CALL cl_err()     

         LET l_success = 'N'
      END IF  
      LET l_xcda001_t = l_xcda001
      LET l_xcda002_t = l_xcda002
      LET l_xcda006_t = l_xcda006
      LET l_xcda007_t = l_xcda007
      LET l_xcda008_t = l_xcda008
                 
   END FOREACH
   CALL cl_err_collect_show()

   RETURN l_success
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_statechange()
#DEFINE lc_state LIKE type_t.chr5
#   #add-point:statechange段define
#DEFINE l_success LIKE  type_t.chr1        
#   #end add-point  
#   
#   #add-point:statechange段開始前
#
#   #end add-point  
#   
#   ERROR ""     #清空畫面右下側ERROR區塊
# 
#   
# 
#   MENU "" ATTRIBUTES (STYLE="popup")
#      BEFORE MENU
#         HIDE OPTION "approved"
#         HIDE OPTION "rejection"
#         CASE g_xcda_m.xcdastus
#            WHEN "N"
#               HIDE OPTION "unconfirmed"
#            WHEN "X"
#               HIDE OPTION "invalid"
#            WHEN "Y"
#               HIDE OPTION "confirmed"
#            
#         END CASE
#     
#      #add-point:menu前
##将一些不能切换的状态给隐藏掉，比如post时只能切confimed，不可切unconfirmed和invalid 
#         IF g_xcda_m.xcdastus = 'X' THEN
#            RETURN
#         END IF
#         
#         HIDE OPTION "signing"
#         HIDE OPTION "withdraw"
#         HIDE OPTION "closed"
#         HIDE OPTION "hold"
#         
#         CASE g_xcda_m.xcdastus
#            WHEN "N"
#               HIDE OPTION "unconfirmed"
#               HIDE OPTION "posted"
#               HIDE OPTION "unposted"
#            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
##               IF cl_bpm_chk() THEN
##                  SHOW OPTION "signing"
##                  HIDE OPTION "confirmed"
##               END IF
#            WHEN "X"
#               HIDE OPTION "invalid"
#               HIDE OPTION "confirmed"
#               HIDE OPTION "posted"
#               HIDE OPTION "unposted"               
#               HIDE OPTION "hold"
#            WHEN "Y"
#               HIDE OPTION "confirmed"
#               HIDE OPTION "invalid"
#               HIDE OPTION "hold"
#               HIDE OPTION "unposted"
#             
#         END CASE                   
#      #end add-point
#      
#      ON ACTION unconfirmed
#         IF cl_auth_chk_act("unconfirmed") THEN
#            LET lc_state = "N"
#            #add-point:action控制
#            IF NOT cl_ask_confirm('aim-00110') THEN
#               RETURN
#            END IF
#            
#            #end add-point
#         END IF
#         EXIT MENU
#      ON ACTION invalid
#         IF cl_auth_chk_act("invalid") THEN
#            LET lc_state = "X"
#            #add-point:action控制
#            IF NOT cl_ask_confirm('aim-00109') THEN
#               RETURN
#            END IF                           
#            #end add-point
#         END IF
#         EXIT MENU
#      ON ACTION confirmed
#         IF cl_auth_chk_act("confirmed") THEN
#            LET lc_state = "Y"
#            #add-point:action控制
#            IF NOT cl_ask_confirm('aim-00108') THEN
#               
#               RETURN
#            END IF     
#            CALL axct304_xcca_chk() RETURNING l_success
#            IF l_success = 'N' THEN
#               RETURN
#            END IF 
#            CALL axct304_xcda009_chk() RETURNING l_success
#            IF l_success = 'N' THEN
#               RETURN
#            END IF 
#            CALL axct304_sum_chk() RETURNING l_success
#            IF l_success = 'N' THEN
#               RETURN
#            END IF 
#            #end add-point
#         END IF
#         EXIT MENU
#      
#   END MENU
#   
#   IF (lc_state <> "N" 
#      AND lc_state <> "X"
#      AND lc_state <> "Y"      
#      ) OR 
#      cl_null(lc_state) THEN
#      RETURN
#   END IF
#   
#   #add-point:stus修改前
#         
#   #end add-point
#      
#   UPDATE xcda_t SET xcdastus = lc_state 
#    WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald
#         AND xcda003 = g_xcda_m.xcda003
#         AND xcda004 = g_xcda_m.xcda004
#         AND xcda005 = g_xcda_m.xcda005
#        
#         
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL 
#      LET g_errparam.extend = "" 
#      LET g_errparam.code   = SQLCA.sqlcode 
#      LET g_errparam.popup  = FALSE 
#      CALL cl_err()
# 
#   ELSE
#      CASE lc_state
#         WHEN "N"
#            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
#         WHEN "X"
#            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
#         WHEN "Y"
#            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
#         
#         
#      END CASE
#      LET g_xcda_m.xcdastus = lc_state
#      DISPLAY BY NAME g_xcda_m.xcdastus
#   END IF
# 
#   #add-point:stus修改後
#         
#   #end add-point
# 
#   #add-point:statechange段結束前
#         
#   #end add-point  
 
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_s01()
DEFINE p_xrad001      LIKE xrad_t.xrad001
DEFINE l_xradl003     LIKE type_t.chr80
DEFINE ls_str          STRING
DEFINE l_chr           LIKE type_t.chr1   
DEFINE l_chr1          LIKE type_t.chr1  
DEFINE l_num           LIKE type_t.num5
   
   OPEN WINDOW w_axct304_s01 WITH FORM cl_ap_formpath("axc","axct304_s01")
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #輸入開始
      INPUT BY NAME g_xcda_s.name,g_xcda_s.dir
         BEFORE INPUT
           


         AFTER INPUT
            

      END INPUT

      DISPLAY ARRAY g_xcda5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  

            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail5")
               LET l_ac = g_detail_idx
               
               #add-point:page1自定義行為

               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               
               LET g_current_page = 5
               
         
         END DISPLAY  
         
      ON ACTION close
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION exit
         LET INT_FLAG = TRUE
         EXIT DIALOG
      
      
      ON ACTION browser1
         CALL cl_client_browse_dir() RETURNING g_xcda_s.dir
         LET ls_str = g_xcda_s.dir
         #抓取目录斜杆
         LET l_num =ls_str.getIndexOf(':',1)                                    #抓取：后的字符位置
         LET l_chr = ls_str.substring(l_num+1,l_num+1)                          #截取冒号后的字符 
         LET l_chr1 = ls_str.substring(ls_str.getLength(),ls_str.getLength())   #判断是否为根目录
         IF l_chr <> l_chr1  THEN         
            LET g_xcda_s.dir = g_xcda_s.dir||l_chr 
         ELSE
            LET g_xcda_s.dir = g_xcda_s.dir 
         END IF 
         DISPLAY BY NAME g_xcda_s.dir
         
      ON ACTION produce
#         CALL axct304_show_1()
         LET w = ui.Window.getCurrent()
         LET f = w.getForm()
         LET page = f.FindNode("Page","page_5")
         CALL axct304_excelexample(page,base.TypeInfo.create(g_xcda5_d),'Y')
         ACCEPT DIALOG 

      ON ACTION off
         LET INT_FLAG = TRUE
         EXIT DIALOG


   END DIALOG

   



      #畫面關閉
      CLOSE WINDOW w_axct304_s01
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_excelexample(n,t,p_show_hidden)
DEFINE  t,t1,t2,n1_text,n3_text         om.DomNode,
         n,n2,n_child                    om.DomNode,
         p_show_hidden                   LIKE type_t.chr1,    #隱藏欄位是否顯示
         n1,n_table,n3                   om.NodeList,
         i,res,p,q,k                     LIKE type_t.num10,
         h                               LIKE type_t.num10,
         cnt_combo_data,cnt_combo_tot    LIKE type_t.num10,
         cells,values,j,l,sheet,cc       STRING,
         table_name,l_length             STRING,
         l_table_name                    LIKE type_t.chr20,
         l_datatype                      LIKE type_t.chr20,
         l_bufstr                        base.StringBuffer,
         lwin_curr                       ui.Window,
         l_show                          LIKE type_t.chr1,
         l_time                          LIKE type_t.chr8

 DEFINE  combo_arr        DYNAMIC ARRAY OF RECORD
           sheet          LIKE type_t.num10,
           seq            LIKE type_t.num10,
           name           LIKE type_t.chr2,
           text           LIKE type_t.chr50
                          END RECORD
 DEFINE  customize_table  LIKE type_t.chr1
 DEFINE  l_str            STRING
 DEFINE  l_i              LIKE type_t.num5
 DEFINE  buf              base.StringBuffer
 DEFINE  l_dec_point      STRING,
         l_qry_name       LIKE type_t.chr20,
         l_cust           LIKE type_t.chr1
 DEFINE  l_tabIndex       LIKE type_t.num10
 DEFINE  l_seq            DYNAMIC ARRAY OF LIKE type_t.num10
 DEFINE  l_seq2           DYNAMIC ARRAY OF LIKE type_t.num10
 DEFINE  l_j              LIKE type_t.num5
 DEFINE  bFound           LIKE type_t.num5
 DEFINE  l_dbname         STRING
 DEFINE  l_zal09          LIKE type_t.chr1
 DEFINE  l_desc           STRING


   
   WHENEVER ERROR CALL cl_err_msg_log

   LET cnt_table = 1

   LET l_bufstr = base.StringBuffer.create()
#   WHENEVER ERROR CALL cl_err_msg_log
   LET lwin_curr = ui.window.getCurrent()

   LET l_channel = base.Channel.create()
   LET l_time = TIME(CURRENT)
  #LET xls_name = g_prog CLIPPED,l_time CLIPPED,".xls"
   LET xls_name = g_xcda_s.name CLIPPED,".xls"

   LET buf = base.StringBuffer.create()
   CALL buf.append(xls_name)
   CALL buf.replace( ":","-", 0)
   LET xls_name = buf.toString()

   # 個資會記錄使用者的行為模式，在此說明excel的檔名及匯出excel的方式
   LET l_desc = xls_name CLIPPED," Using HTML to export the Table to excel."

   IF os.Path.delete(xls_name CLIPPED) THEN END IF
   CALL l_channel.openFile( xls_name CLIPPED, "a" )
   CALL l_channel.setDelimiter("")

   IF ms_codeset.getIndexOf("BIG5", 1) OR
      ( ms_codeset.getIndexOf("GB2312", 1) OR ms_codeset.getIndexOf("GBK", 1) OR ms_codeset.getIndexOf("GB18030", 1) ) THEN
      IF ms_locale = "ZH_TW" AND g_lang = '2' THEN
         LET tsconv_cmd = "big5_to_gb2312"
         LET ms_codeset = "GB2312"
      END IF
      IF ms_locale = "ZH_CN" AND g_lang = '0' THEN
         LET tsconv_cmd = "gb2312_to_big5"
         LET ms_codeset = "BIG5"
      END IF
   END IF

   LET l_str = "<html xmlns:o=",g_quote,"urn:schemas-microsoft-com:office:office",g_quote
   CALL l_channel.write(l_str CLIPPED)
   LET l_str = "<meta http-equiv=Content-Type content=",g_quote,"text/html; charset=",ms_codeset,g_quote,">"
   CALL l_channel.write(l_str CLIPPED)
   LET l_str = "xmlns:x=",g_quote,"urn:schemas-microsoft-com:office:excel",g_quote
   CALL l_channel.write(l_str CLIPPED)
   LET l_str = "xmlns=",g_quote,"http://www.w3.org/TR/REC-html40",g_quote,">"
   CALL l_channel.write(l_str CLIPPED)
   CALL l_channel.write("<head><style><!--")

   IF not ms_codeset.getIndexOf("UTF-8", 1) THEN
      IF g_lang = "0" THEN  #繁體中文
         CALL l_channel.write("td  {font-family:細明體, serif;}")
      ELSE
         IF g_lang = "2" THEN  #簡體中文
            CALL l_channel.write("td  {font-family:新宋体, serif;}")
         ELSE
            CALL l_channel.write("td  {font-family:細明體, serif;}")
         END IF
      END IF
   ELSE
      CALL l_channel.write("td  {font-family:Courier New, serif;}")
   END IF

   LET l_str = ".xl24  {mso-number-format:",g_quote,"\@",g_quote,";}",
               ".xl30 {mso-style-parent:style0; mso-number-format:\"0_ \";} ",
               ".xl31 {mso-style-parent:style0; mso-number-format:\"0\.0_ \";} ",
               ".xl32 {mso-style-parent:style0; mso-number-format:\"0\.00_ \";} ",
               ".xl33 {mso-style-parent:style0; mso-number-format:\"0\.000_ \";} ",
               ".xl34 {mso-style-parent:style0; mso-number-format:\"0\.0000_ \";} ",
               ".xl35 {mso-style-parent:style0; mso-number-format:\"0\.00000_ \";} ",
               ".xl36 {mso-style-parent:style0; mso-number-format:\"0\.000000_ \";} ",
               ".xl37 {mso-style-parent:style0; mso-number-format:\"0\.0000000_ \";} ",
               ".xl38 {mso-style-parent:style0; mso-number-format:\"0\.00000000_ \";} ",
               ".xl39 {mso-style-parent:style0; mso-number-format:\"0\.000000000_ \";} ",
               ".xl40 {mso-style-parent:style0; mso-number-format:\"0\.0000000000_ \";} "
   CALL l_channel.write(l_str CLIPPED)
   CALL l_channel.write("--></style>")
   CALL l_channel.write("<!--[if gte mso 9]><xml>")
   CALL l_channel.write("<x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet>")
   CALL l_channel.write("<x:DefaultRowHeight>330</x:DefaultRowHeight>")
   CALL l_channel.write("</xml><![endif]--></head>")
   CALL l_channel.write("<body><table border=1 cellpadding=0 cellspacing=0 width=432 style='border-collapse: collapse;table-layout:fixed;width:324pt'>")
   CALL l_channel.write("<tr height=22>")

   LET l_win_name = NULL
   LET l_win_name = n.getAttribute("name")

   LET n_table = n.selectByTagName("Table")
   CALL combo_arr.clear()
   FOR h=1 to cnt_table
      CALL g_hidden.clear()
      CALL g_ifchar.clear()
      CALL g_mask.clear()
      LET n2 = n_table.item(h)

      IF l_win_name = "p_dbqry_table" THEN
         LET n1 = n2.selectByPath("//TableColumn[@hidden=\"0\"]")
      ELSE
         LET n1 = n2.selectByTagName("TableColumn")
      END IF

      #抓取 table 是否有進行欄位排序
      INITIALIZE g_sort.* TO NULL
      LET g_sort.column = n2.getAttribute("sortColumn")
      IF g_sort.column >=0 AND g_sort.column IS NOT NULL  THEN
         LET g_sort.column = g_sort.column + 1    #屬性 sortColumn 為 0 開始
         LET g_sort.type = n2.getAttribute("sortType")
      END IF

      LET cnt_header = n1.getLength()
      LET l = h
      LET sheet=g_sheet  CLIPPED,l
      LET k = 0

      CALL l_seq.clear()
      CALL l_seq2.clear()

     #循環Table中的每一個列
     FOR i=1 TO cnt_header
       #得到對應的DomNode節點
       LET n1_text = n1.item(i)
       #得到該列的TabIndex屬性
       LET l_tabIndex = n1_text.getAttribute("tabIndex")

       #如果TabIndex屬性不為空
       IF NOT cl_null(l_tabIndex) THEN
          #初始化一個標志變量（表明是否在數組中找到比當前TabIndex更大的節點）
          LET bFound = FALSE
          #開始在已有的數組中定位比當前tabIndex大的成員
          FOR l_j=1 TO l_seq2.getLength()
              #如果有找到
              IF l_seq2[l_j] > l_tabIndex THEN
                 #設置標志變量
                 LET bFound = TRUE
                 #退出搜尋過程（此時下標j保存的該成員變量的位置）
                 EXIT FOR
              END IF
          END FOR
          #如果始終沒有找到（比如數組根本就是空的）那麼j里面保存的就是當前數組最大下標+1
          #判斷有沒有找到
          IF bFound THEN
             #如果找到則向該數組中插入一個元素（在這個tabIndex比它大的元素前面插入)
             CALL l_seq2.InsertElement(l_j)
             CALL l_seq.InsertElement(l_j)
          END IF
          #把當前的下標（列的位置）和tabIndex填充到這個位置上
          #如果沒有找到，則填充的位置會是整個數組的末尾
          LET l_seq[l_j] = i
          LET l_seq2[l_j] = l_tabIndex
       END IF
     END FOR

      FOR i=1 to cnt_header
         LET n1_text = n1.item(l_seq[i])
         LET k = k + 1
         LET j = k
         LET cells = "R1C" CLIPPED,j
         LET l_field_name = NULL
         LET l_show = n1_text.getAttribute("hidden")
         IF ((p_show_hidden = 'N' OR p_show_hidden IS NULL) AND (l_show = "0" OR l_show IS NULL)) OR p_show_hidden = 'Y' THEN
            LET l_field_name = n1_text.getAttribute("name")
            IF l_field_name = 'xcda_t.xcdaent' OR l_field_name = 'xcda_t.xcdald' OR
               l_field_name = 'xcda_t.xcdacomp' OR l_field_name = 'xcda_t.xcda001' OR
               l_field_name = 'xcda_t.xcda002' OR l_field_name = 'xcda_t.xcda003' OR
               l_field_name = 'xcda_t.xcda004' OR l_field_name = 'xcda_t.xcda005' OR
               l_field_name = 'xcda_t.xcda006' OR l_field_name = 'xcda_t.xcda007' OR
               l_field_name = 'xcda_t.xcda008' OR l_field_name = 'xcda_t.xcda009' OR
               l_field_name = 'xcda_t.xcda101' OR l_field_name = 'xcda_t.xcda102' OR
               l_field_name = 'formonly.xcda102_1' OR l_field_name = 'formonly.xcda102_2'
                 
               THEN
               LET values = n1_text.getAttribute("text")
               LET l_str = "<td>",axct304_add_span(values),"</td>"
               CALL l_channel.write(l_str CLIPPED)
            END IF
         ELSE
            LET g_hidden[i] = "1"
            LET k = k -1
         END IF
      END FOR
      IF h=1 THEN CALL axct304_get_boday(h,cnt_header,t,combo_arr,l_seq) END IF

   END FOR

   # 使用者的行為模式改到前面判斷，在此僅將前面判斷的結果說明傳至syslog中做紀錄
   IF cl_log_sys_operation("A","G",l_desc) THEN
   END IF
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_s02()
DEFINE l_excel         STRING 
DEFINE ls_str          STRING
DEFINE l_chr           LIKE type_t.chr1   
DEFINE l_chr1          LIKE type_t.chr1   
DEFINE l_num           LIKE type_t.num5
DEFINE l_n             LIKE type_t.num5
DEFINE l_success       LIKE type_t.num5
   #畫面開啟 (identifier)

   OPEN WINDOW w_axct304_s02 WITH FORM cl_ap_formpath("axc","axct304_s02")

   INITIALIZE g_xcda_f.* LIKE xcda_t.*
   
   LET g_xcda_f_t.xcdacomp = NULL
   LET g_xcda_f_t.xcdald = NULL
   LET g_xcda_f_t.format = NULL
   LET g_xcda_f_t.char = NULL
   LET g_xcda_f_t.dir = NULL
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #輸入開始
      INPUT BY NAME g_xcda_f.xcdacomp,g_xcda_f.xcdald,g_xcda_f.format,g_xcda_f.char,g_xcda_f.dir ATTRIBUTE(WITHOUT  DEFAULTS)

         BEFORE INPUT
            CALL cl_set_combo_scc('format','8915')
 
         AFTER FIELD xcdacomp
            IF NOT cl_null(g_xcda_f.xcdacomp) THEN               
                  IF NOT axct304_s02_chk_ld_comp() THEN
                     LET g_xcda_f.xcdacomp = g_xcda_f_t.xcdacomp
                     NEXT FIELD CURRENT
                  END IF
               END IF
            
             CALL axct304_s02_ref()
            
 

         AFTER FIELD xcdald
            IF NOT cl_null(g_xcda_f.xcdald) THEN
               
                  IF NOT axct304_s02_chk_ld_comp() THEN
                     LET g_xcda_f.xcdald = g_xcda_f_t.xcdald
                     NEXT FIELD CURRENT
                  END IF
               
            END IF
                      
            
            
          CALL axct304_s02_ref()
 
         ON ACTION controlp INFIELD xcdacomp
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda_f.xcdacomp             #給予default值
           
            #帳套不為空時，法人組織開窗開帳套歸屬法人的法人組織
            IF NOT cl_null(g_xcda_f.xcdald) THEN
               LET g_qryparam.where = " ooef017 = (SELECT glaacomp FROM glaa_t",
                                      "  WHERE glaaent = '",g_enterprise,"' AND glaald = '",g_xcda_f.xcdald,"' )"
            END IF

            #mod--161013-00051#1 By shiun--(S)
#            CALL q_ooef001_8()                                #呼叫開窗
            CALL q_ooef001_2()
            #mod--161013-00051#1 By shiun--(E)

            LET g_xcda_f.xcdacomp = g_qryparam.return1              
 
            CALL axct304_s02_ref()
 
            DISPLAY g_xcda_f.xcdacomp TO xcdacomp 
            DISPLAY g_xcda_f.xcdacomp_desc TO xcdacomp_desc              #
 
            LET g_qryparam.where = "" 
   
            NEXT FIELD xcdacomp                          #返回原欄位

 
         ON ACTION controlp INFIELD xcdald
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcda_f.xcdald             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            
            #法人不為空時，帳套開窗開此法人的下屬帳套
            IF NOT cl_null(g_xcda_f.xcdacomp) THEN
               LET g_qryparam.where = " glaacomp = '",g_xcda_f.xcdacomp,"'"
            END IF
            
            CALL q_authorised_ld()                                #呼叫開窗

            LET g_xcda_f.xcdald = g_qryparam.return1              

            CALL axct304_s02_ref()
            
            DISPLAY g_xcda_f.xcdald TO xcdald
            DISPLAY g_xcda_f.xcdald_desc TO xcdald_desc              #

            NEXT FIELD xcdald                          #返回原欄位
 
 
 
         AFTER INPUT
         
            
      END INPUT
    
    
      ON ACTION browser
         CALL cl_client_browse_file() RETURNING g_xcda_f.dir
         LET ls_str = g_xcda_f.dir
         #抓取目录斜杆
         LET l_num =ls_str.getIndexOf(':',1)                                    #抓取：后的字符位置
         LET l_chr = ls_str.substring(l_num+1,l_num+1)                          #截取冒号后的字符 
         LET l_chr1 = ls_str.substring(ls_str.getLength(),ls_str.getLength())   #判断是否为根目录

         LET g_xcda_f.dir = g_xcda_f.dir

         DISPLAY BY NAME g_xcda_f.dir

 
      ON ACTION close
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit
         LET INT_FLAG = TRUE 
         EXIT DIALOG
         
      ON ACTION produce
         ACCEPT DIALOG 

      ON ACTION off
         LET INT_FLAG = TRUE
         EXIT DIALOG   
         
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
 
   
   #畫面關閉
   CLOSE WINDOW w_axct304_s02 
   
   CALL axct304_s02_ins_excel(g_xcda_f.dir) RETURNING l_success
   RETURN l_success
 


END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_s02_ins_excel(p_excelname)
DEFINE p_excelname LIKE type_t.chr1000  #excel档名
DEFINE r_success   LIKE type_t.num5
DEFINE l_excelname STRING               #excel档名
DEFINE l_count     LIKE type_t.num10
DEFINE li_i        LIKE type_t.num10
DEFINE li_j        LIKE type_t.num10
DEFINE xlapp,iRes,iRow    LIKE type_t.num5
#161109-00085#22-s mod
#DEFINE l_xcda      RECORD LIKE xcda_t.*   #161109-00085#22-s mark
DEFINE l_xcda      RECORD  #期初庫存數量成本要素成本開帳檔
       xcdaent LIKE xcda_t.xcdaent, #企業編號
       xcdald LIKE xcda_t.xcdald, #帳套
       xcdacomp LIKE xcda_t.xcdacomp, #法人組織
       xcda001 LIKE xcda_t.xcda001, #帳套本位幣順序
       xcda002 LIKE xcda_t.xcda002, #成本域
       xcda003 LIKE xcda_t.xcda003, #成本計算類型
       xcda004 LIKE xcda_t.xcda004, #年度
       xcda005 LIKE xcda_t.xcda005, #期別
       xcda006 LIKE xcda_t.xcda006, #料號
       xcda007 LIKE xcda_t.xcda007, #特性
       xcda008 LIKE xcda_t.xcda008, #批號
       xcda009 LIKE xcda_t.xcda009, #成本次要素
       xcda101 LIKE xcda_t.xcda101, #當月期末數量
       xcda102 LIKE xcda_t.xcda102, #當月期末金額-金額合計
       xcdaownid LIKE xcda_t.xcdaownid, #資料所有者
       xcdaowndp LIKE xcda_t.xcdaowndp, #資料所屬部門
       xcdacrtid LIKE xcda_t.xcdacrtid, #資料建立者
       xcdacrtdp LIKE xcda_t.xcdacrtdp, #資料建立部門
       xcdacrtdt LIKE xcda_t.xcdacrtdt, #資料創建日
       xcdamodid LIKE xcda_t.xcdamodid, #資料修改者
       xcdamoddt LIKE xcda_t.xcdamoddt, #最近修改日
       xcdacnfid LIKE xcda_t.xcdacnfid, #資料確認者
       xcdacnfdt LIKE xcda_t.xcdacnfdt, #資料確認日
       xcdapstid LIKE xcda_t.xcdapstid, #資料過帳者
       xcdapstdt LIKE xcda_t.xcdapstdt, #資料過帳日
       xcdastus LIKE xcda_t.xcdastus, #狀態碼
       xcdaud001 LIKE xcda_t.xcdaud001, #自定義欄位(文字)001
       xcdaud002 LIKE xcda_t.xcdaud002, #自定義欄位(文字)002
       xcdaud003 LIKE xcda_t.xcdaud003, #自定義欄位(文字)003
       xcdaud004 LIKE xcda_t.xcdaud004, #自定義欄位(文字)004
       xcdaud005 LIKE xcda_t.xcdaud005, #自定義欄位(文字)005
       xcdaud006 LIKE xcda_t.xcdaud006, #自定義欄位(文字)006
       xcdaud007 LIKE xcda_t.xcdaud007, #自定義欄位(文字)007
       xcdaud008 LIKE xcda_t.xcdaud008, #自定義欄位(文字)008
       xcdaud009 LIKE xcda_t.xcdaud009, #自定義欄位(文字)009
       xcdaud010 LIKE xcda_t.xcdaud010, #自定義欄位(文字)010
       xcdaud011 LIKE xcda_t.xcdaud011, #自定義欄位(數字)011
       xcdaud012 LIKE xcda_t.xcdaud012, #自定義欄位(數字)012
       xcdaud013 LIKE xcda_t.xcdaud013, #自定義欄位(數字)013
       xcdaud014 LIKE xcda_t.xcdaud014, #自定義欄位(數字)014
       xcdaud015 LIKE xcda_t.xcdaud015, #自定義欄位(數字)015
       xcdaud016 LIKE xcda_t.xcdaud016, #自定義欄位(數字)016
       xcdaud017 LIKE xcda_t.xcdaud017, #自定義欄位(數字)017
       xcdaud018 LIKE xcda_t.xcdaud018, #自定義欄位(數字)018
       xcdaud019 LIKE xcda_t.xcdaud019, #自定義欄位(數字)019
       xcdaud020 LIKE xcda_t.xcdaud020, #自定義欄位(數字)020
       xcdaud021 LIKE xcda_t.xcdaud021, #自定義欄位(日期時間)021
       xcdaud022 LIKE xcda_t.xcdaud022, #自定義欄位(日期時間)022
       xcdaud023 LIKE xcda_t.xcdaud023, #自定義欄位(日期時間)023
       xcdaud024 LIKE xcda_t.xcdaud024, #自定義欄位(日期時間)024
       xcdaud025 LIKE xcda_t.xcdaud025, #自定義欄位(日期時間)025
       xcdaud026 LIKE xcda_t.xcdaud026, #自定義欄位(日期時間)026
       xcdaud027 LIKE xcda_t.xcdaud027, #自定義欄位(日期時間)027
       xcdaud028 LIKE xcda_t.xcdaud028, #自定義欄位(日期時間)028
       xcdaud029 LIKE xcda_t.xcdaud029, #自定義欄位(日期時間)029
       xcdaud030 LIKE xcda_t.xcdaud030  #自定義欄位(日期時間)030
                 END RECORD
#161109-00085#22-e mod
DEFINE l_today     LIKE type_t.dat       #zll g_today 没有了
DEFINE l_n         LIKE type_t.num5
DEFINE l_xcdastus  LIKE xcda_t.xcdastus
DEFINE l_xcdacrtdt    DATETIME YEAR TO SECOND
#161109-00085#22-s mod
#DEFINE l_xcda1      RECORD LIKE xcda_t.*   #161109-00085#22-s mark
DEFINE l_xcda1      RECORD  #期初庫存數量成本要素成本開帳檔
       xcdaent LIKE xcda_t.xcdaent, #企業編號
       xcdald LIKE xcda_t.xcdald, #帳套
       xcdacomp LIKE xcda_t.xcdacomp, #法人組織
       xcda001 LIKE xcda_t.xcda001, #帳套本位幣順序
       xcda002 LIKE xcda_t.xcda002, #成本域
       xcda003 LIKE xcda_t.xcda003, #成本計算類型
       xcda004 LIKE xcda_t.xcda004, #年度
       xcda005 LIKE xcda_t.xcda005, #期別
       xcda006 LIKE xcda_t.xcda006, #料號
       xcda007 LIKE xcda_t.xcda007, #特性
       xcda008 LIKE xcda_t.xcda008, #批號
       xcda009 LIKE xcda_t.xcda009, #成本次要素
       xcda101 LIKE xcda_t.xcda101, #當月期末數量
       xcda102 LIKE xcda_t.xcda102, #當月期末金額-金額合計
       xcdaownid LIKE xcda_t.xcdaownid, #資料所有者
       xcdaowndp LIKE xcda_t.xcdaowndp, #資料所屬部門
       xcdacrtid LIKE xcda_t.xcdacrtid, #資料建立者
       xcdacrtdp LIKE xcda_t.xcdacrtdp, #資料建立部門
       xcdacrtdt LIKE xcda_t.xcdacrtdt, #資料創建日
       xcdamodid LIKE xcda_t.xcdamodid, #資料修改者
       xcdamoddt LIKE xcda_t.xcdamoddt, #最近修改日
       xcdacnfid LIKE xcda_t.xcdacnfid, #資料確認者
       xcdacnfdt LIKE xcda_t.xcdacnfdt, #資料確認日
       xcdapstid LIKE xcda_t.xcdapstid, #資料過帳者
       xcdapstdt LIKE xcda_t.xcdapstdt, #資料過帳日
       xcdastus LIKE xcda_t.xcdastus  #狀態碼
          END RECORD
#161109-00085#22-e mod
#161109-00085#22-s mod
#DEFINE l_xcda2      RECORD LIKE xcda_t.*   #161109-00085#22-s mark
DEFINE l_xcda2      RECORD  #期初庫存數量成本要素成本開帳檔
       xcdaent LIKE xcda_t.xcdaent, #企業編號
       xcdald LIKE xcda_t.xcdald, #帳套
       xcdacomp LIKE xcda_t.xcdacomp, #法人組織
       xcda001 LIKE xcda_t.xcda001, #帳套本位幣順序
       xcda002 LIKE xcda_t.xcda002, #成本域
       xcda003 LIKE xcda_t.xcda003, #成本計算類型
       xcda004 LIKE xcda_t.xcda004, #年度
       xcda005 LIKE xcda_t.xcda005, #期別
       xcda006 LIKE xcda_t.xcda006, #料號
       xcda007 LIKE xcda_t.xcda007, #特性
       xcda008 LIKE xcda_t.xcda008, #批號
       xcda009 LIKE xcda_t.xcda009, #成本次要素
       xcda101 LIKE xcda_t.xcda101, #當月期末數量
       xcda102 LIKE xcda_t.xcda102, #當月期末金額-金額合計
       xcdaownid LIKE xcda_t.xcdaownid, #資料所有者
       xcdaowndp LIKE xcda_t.xcdaowndp, #資料所屬部門
       xcdacrtid LIKE xcda_t.xcdacrtid, #資料建立者
       xcdacrtdp LIKE xcda_t.xcdacrtdp, #資料建立部門
       xcdacrtdt LIKE xcda_t.xcdacrtdt, #資料創建日
       xcdamodid LIKE xcda_t.xcdamodid, #資料修改者
       xcdamoddt LIKE xcda_t.xcdamoddt, #最近修改日
       xcdacnfid LIKE xcda_t.xcdacnfid, #資料確認者
       xcdacnfdt LIKE xcda_t.xcdacnfdt, #資料確認日
       xcdapstid LIKE xcda_t.xcdapstid, #資料過帳者
       xcdapstdt LIKE xcda_t.xcdapstdt, #資料過帳日
       xcdastus LIKE xcda_t.xcdastus  #狀態碼
          END RECORD
#161109-00085#22-e mod

   WHENEVER ERROR CONTINUE
   LET r_success = TRUE

   LET l_today= cl_get_current()
   LET l_count = LENGTH(p_excelname CLIPPED)
   #转换路径分隔符
   FOR li_i = 1 TO l_count
       IF p_excelname[li_i,li_i] ="/" THEN
          LET l_excelname = l_excelname CLIPPED,'\\'
       ELSE
          LET l_excelname = l_excelname CLIPPED,p_excelname[li_i,li_i]
       END IF
   END FOR

   CALL ui.interface.frontCall('WinCOM','CreateInstance',
                               ['Excel.Application'],[xlApp])
   IF xlApp <> -1 THEN
      CALL ui.interface.frontCall('WinCOM','CallMethod',
                                  [xlApp,'WorkBooks.Open',l_excelname],[iRes])
      IF iRes <> -1 THEN
         CALL ui.interface.frontCall('WinCOM','GetProperty',
              [xlApp,'ActiveSheet.UsedRange.Rows.Count'],[iRow])
         IF iRow > 1 THEN
            FOR li_i = 2 TO iRow
                INITIALIZE l_xcda.* TO NULL
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',1).Value'],[l_xcda.xcdaent])
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',2).Value'],[l_xcda.xcdald])
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',3).Value'],[l_xcda.xcdacomp])
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',4).Value'],[l_xcda.xcda001])
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',5).Value'],[l_xcda.xcda002])
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',6).Value'],[l_xcda.xcda003])
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',7).Value'],[l_xcda.xcda004])
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',8).Value'],[l_xcda.xcda005])
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',9).Value'],[l_xcda.xcda006])
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',10).Value'],[l_xcda.xcda007])
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',11).Value'],[l_xcda.xcda008])
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',12).Value'],[l_xcda.xcda009])               
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',13).Value'],[l_xcda.xcda101])                
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',14).Value'],[l_xcda.xcda102])                
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',15).Value'],[l_xcda1.xcda102])                
                CALL ui.interface.frontCall('WinCOM','GetProperty',[xlApp,'ActiveSheet.Cells('||li_i||',16).Value'],[l_xcda2.xcda102])                
                
                #如果excel中存在不在畫面上的法人或者帳套CONTINUE
                IF l_xcda.xcdald != g_xcda_f.xcdald OR l_xcda.xcdacomp != g_xcda_f.xcdacomp THEN
                  #CONTINUE FOR
                  #匯出畫面中帳套不一致的，提示檢核訊息，不予新增
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = 'axc-00514'
                   LET g_errparam.extend = ''
                   LET g_errparam.popup = TRUE
                   CALL cl_err()

                   LET r_success = FALSE
                   EXIT FOR
                END IF
                

                #赋默认值
                LET l_xcda.xcda001 = '1'  #本位幣                
                LET l_xcda.xcdaownid = g_user
                LET l_xcda.xcdaowndp = g_dept
                LET l_xcda.xcdacrtid = g_user
                LET l_xcda.xcdacrtdp = g_dept 
                LET l_xcda.xcdacrtdt = cl_get_current()
                LET l_xcda.xcdamodid = ""
                LET l_xcda.xcdamoddt = ""
                LET l_xcda.xcdacnfid = ""
                LET l_xcda.xcdacnfdt = "" 
                LET l_xcda.xcdapstid = ""
                LET l_xcda.xcdapstdt = "" 
                LET l_xcda.xcdastus = "Y"

                IF l_xcda.xcda008 IS NULL THEN  #key值批号可录入为空
                   LET l_xcda.xcda008 = ' '
                END IF
                IF l_xcda.xcda007 IS NULL THEN  #key值特性可录入为空
                   LET l_xcda.xcda007 = ' '
                END IF                
                #本位幣一 
                #161109-00085#22-s mod                
#                INSERT INTO xcda_t VALUES l_xcda.*   #161109-00085#22-s mark
                INSERT INTO xcda_t (xcdaent,xcdald,xcdacomp,xcda001,xcda002,xcda003,xcda004,xcda005,xcda006,xcda007,
                                    xcda008,xcda009,xcda101,xcda102,xcdaownid,xcdaowndp,xcdacrtid,xcdacrtdp,xcdacrtdt,xcdamodid,
                                    xcdamoddt,xcdacnfid,xcdacnfdt,xcdapstid,xcdapstdt,xcdastus,xcdaud001,xcdaud002,xcdaud003,xcdaud004,
                                    xcdaud005,xcdaud006,xcdaud007,xcdaud008,xcdaud009,xcdaud010,xcdaud011,xcdaud012,xcdaud013,xcdaud014,
                                    xcdaud015,xcdaud016,xcdaud017,xcdaud018,xcdaud019,xcdaud020,xcdaud021,xcdaud022,xcdaud023,xcdaud024,
                                    xcdaud025,xcdaud026,xcdaud027,xcdaud028,xcdaud029,xcdaud030)
                            VALUES (l_xcda.xcdaent,l_xcda.xcdald,l_xcda.xcdacomp,l_xcda.xcda001,l_xcda.xcda002,
                                    l_xcda.xcda003,l_xcda.xcda004,l_xcda.xcda005,l_xcda.xcda006,l_xcda.xcda007,
                                    l_xcda.xcda008,l_xcda.xcda009,l_xcda.xcda101,l_xcda.xcda102,l_xcda.xcdaownid,
                                    l_xcda.xcdaowndp,l_xcda.xcdacrtid,l_xcda.xcdacrtdp,l_xcda.xcdacrtdt,l_xcda.xcdamodid,
                                    l_xcda.xcdamoddt,l_xcda.xcdacnfid,l_xcda.xcdacnfdt,l_xcda.xcdapstid,l_xcda.xcdapstdt,
                                    l_xcda.xcdastus,l_xcda.xcdaud001,l_xcda.xcdaud002,l_xcda.xcdaud003,l_xcda.xcdaud004,
                                    l_xcda.xcdaud005,l_xcda.xcdaud006,l_xcda.xcdaud007,l_xcda.xcdaud008,l_xcda.xcdaud009,
                                    l_xcda.xcdaud010,l_xcda.xcdaud011,l_xcda.xcdaud012,l_xcda.xcdaud013,l_xcda.xcdaud014,
                                    l_xcda.xcdaud015,l_xcda.xcdaud016,l_xcda.xcdaud017,l_xcda.xcdaud018,l_xcda.xcdaud019,
                                    l_xcda.xcdaud020,l_xcda.xcdaud021,l_xcda.xcdaud022,l_xcda.xcdaud023,l_xcda.xcdaud024,
                                    l_xcda.xcdaud025,l_xcda.xcdaud026,l_xcda.xcdaud027,l_xcda.xcdaud028,l_xcda.xcdaud029,l_xcda.xcdaud030)
                #161109-00085#22-e mod
                IF SQLCA.sqlcode THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = SQLCA.sqlcode
                   LET g_errparam.extend = 'ins xcda'
                   LET g_errparam.popup = FALSE
                   CALL cl_err()

                   LET r_success = FALSE
                   EXIT FOR
                END IF

                SELECT glaa015,glaa019
                  INTO g_glaa015,g_glaa019
                  FROM glaa_t
                 WHERE glaaent = g_enterprise
                   AND glaald = l_xcda.xcdald
                #本位幣二
                IF g_glaa015 = 'Y' THEN                   
                   IF cl_null(l_xcda1.xcda102)  THEN LET l_xcda1.xcda102  = 0 END IF                    
                  
                   INSERT INTO xcda_t(xcdaent,xcdald,xcdacomp,xcda001,xcda002,xcda003,xcda004,xcda005,xcda006,xcda007,xcda008,xcda009,xcda101,xcda102,
                                      xcdaownid,xcdaowndp,xcdacrtid,xcdacrtdp,xcdacrtdt,xcdamodid,xcdamoddt,xcdacnfid,xcdacnfdt,xcdapstid,xcdapstdt,xcdastus) 
                               VALUES(l_xcda.xcdaent,l_xcda.xcdald,l_xcda.xcdacomp,'2',l_xcda.xcda002,l_xcda.xcda003,l_xcda.xcda004,l_xcda.xcda005,
                                      l_xcda.xcda006,l_xcda.xcda007,l_xcda.xcda008,l_xcda.xcda009,l_xcda.xcda101,l_xcda1.xcda102,
                                      l_xcda.xcdaownid,l_xcda.xcdaowndp,l_xcda.xcdacrtid,l_xcda.xcdacrtdp,l_xcda.xcdacrtdt,"","","","","","",'Y')  
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = 'ins xcda 2'
                     LET g_errparam.popup = FALSE
                     CALL cl_err()

                     LET r_success = FALSE
                     EXIT FOR
                  END IF                                      
                END IF
                #本位幣三
                IF g_glaa019 = 'Y' THEN                     
                   IF cl_null(l_xcda2.xcda102)  THEN LET l_xcda2.xcda102  = 0 END IF  
                   INSERT INTO xcda_t(xcdaent,xcdald,xcdacomp,xcda001,xcda002,xcda003,xcda004,xcda005,xcda006,xcda007,xcda008,xcda009,xcda101,xcda102,
                                      xcdaownid,xcdaowndp,xcdacrtid,xcdacrtdp,xcdacrtdt,xcdamodid,xcdamoddt,xcdacnfid,xcdacnfdt,xcdapstid,xcdapstdt,xcdastus) 
                               VALUES(l_xcda.xcdaent,l_xcda.xcdald,l_xcda.xcdacomp,'3',l_xcda.xcda002,l_xcda.xcda003,l_xcda.xcda004,l_xcda.xcda005,
                                      l_xcda.xcda006,l_xcda.xcda007,l_xcda.xcda008,l_xcda.xcda009,l_xcda.xcda101,l_xcda2.xcda102,
                                      l_xcda.xcdaownid,l_xcda.xcdaowndp,l_xcda.xcdacrtid,l_xcda.xcdacrtdp,l_xcda.xcdacrtdt,"","","","","","",'Y')  
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = 'ins xcda 3'
                     LET g_errparam.popup = FALSE
                     CALL cl_err()

                     LET r_success = FALSE
                     EXIT FOR
                  END IF                  
                END IF
            END FOR
         END IF
      ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axc-00387'
         LET g_errparam.extend = ''   #NO FILE
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
      END IF
   ELSE
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axc-00387'
      LET g_errparam.extend = ''  #NO EXCEL
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
   END IF

   CALL ui.interface.frontCall('WinCOM','CallMethod',[xlApp,'Quit'],[iRes])
   CALL ui.interface.frontCall('WinCOM','ReleaseInstance',[xlApp],[iRes])

   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_add_span(p_str)
DEFINE p_str    STRING
DEFINe l_str    STRING


   LET p_str = p_str.trimRight()

   #若字串有空白就必須加上 <span> 屬性，並將空白轉換為 &nbsp;
   IF p_str.getIndexOf(" ",1) > 0 THEN
      LET g_bufstr = base.StringBuffer.create()              
      CALL g_bufstr.clear()
      CALL g_bufstr.append(p_str)
      CALL g_bufstr.replace(" ","&nbsp;",0)
      CALL g_bufstr.replace("<","&lt;",0)    
      LET l_str = g_bufstr.tostring()
      LET l_str = "<span style='mso-spacerun:yes'>", l_str, "</span>"
   ELSE
      LET g_bufstr = base.StringBuffer.create()
      CALL g_bufstr.clear()
      CALL g_bufstr.append(p_str)
      CALL g_bufstr.replace("<","&lt;",0)
      LET l_str = g_bufstr.tostring()
      #LET l_str = p_str    

   END IF

   RETURN l_str
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_get_boday(p_h,p_cnt_header,s,s_combo_arr,p_seq)
DEFINE  s,n1_text                          om.DomNode,
         n1                                 om.NodeList,
         i,m,k,cnt_body,res,p               LIKE type_t.num10,
         l_hidden_cnt,n,l_last_hidden       LIKE type_t.num10,
         p_h,p_cnt_header,arr_len           LIKE type_t.num10,
         p_null                             LIKE type_t.num10,
         cells,values,j,l,sheet             STRING,
         l_bufstr                           base.StringBuffer

 DEFINE  s_combo_arr    DYNAMIC ARRAY OF RECORD
          sheet         LIKE type_t.num10,       #sheet
          seq           LIKE type_t.num10,       #項次
          name          LIKE type_t.chr2,        #代號
          text          LIKE type_t.chr50        #說明
                        END RECORD
 DEFINE  p_seq          DYNAMIC ARRAY OF LIKE type_t.num10
 DEFINE  l_item         LIKE type_t.num10

 DEFINE  unix_path      STRING,
         window_path    STRING
 DEFINE  l_dom_doc      om.DomDocument,
         r,n_node       om.DomNode
 DEFINE  l_status       LIKE type_t.num5

   LET l_hidden_cnt = 0
   LET l = p_h
   LET sheet=g_sheet CLIPPED,l
   LET l_bufstr = base.StringBuffer.create()
   LET l = 0
   LET i = 0
   LET m = 0

   CALL l_channel.write("</tr></table></body></html>")
   CALL l_channel.close()
  #CALL cl_prt_convert(xls_name)

   LET unix_path = os.Path.join(FGL_GETENV("TEMPDIR"),xls_name CLIPPED)

  #LET window_path = "c:\\TT\\",xls_name CLIPPED
   LET window_path = g_xcda_s.dir,"\\",xls_name CLIPPED
   LET status = cl_client_download_file(unix_path, window_path)
   IF status then
      DISPLAY "Download OK!!"
   ELSE
      DISPLAY "Download fail!!"
   END IF

   LET status = cl_client_open_prog("excel",window_path)
   IF status then
      DISPLAY "Open OK!!"
   ELSE
      DISPLAY "Open fail!!"
   END IF
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_s02_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcda_f.xcdacomp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcda_f.xcdacomp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcda_f.xcdacomp_desc   
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcda_f.xcdald
   CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcda_f.xcdald_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcda_f.xcdald_desc   
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_s02_chk_ld_comp()
 DEFINE r_success        LIKE type_t.num5
   DEFINE l_success        LIKE type_t.num5
   
   LET r_success = TRUE

#只检查法人
   IF g_xcda_f.xcdald IS NULL AND g_xcda_f.xcdacomp IS NOT NULL THEN   
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
      
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_xcda_f.xcdacomp
         
      #呼叫檢查存在並帶值的library
      IF cl_chk_exist("v_ooef001_1") THEN
         #檢查成功時後續處理
         #LET  = g_chkparam.return1
         #DISPLAY BY NAME 
      ELSE
         #檢查失敗時後續處理
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF

#只检查账套
   IF g_xcda_f.xcdald IS NOT NULL AND g_xcda_f.xcdacomp IS NULL THEN
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
      
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_xcda_f.xcdald
      #160318-00025#12--add--str
      LET g_errshow = TRUE 
      LET g_chkparam.err_str[1] = "agl-00051:sub-01302|agli010|",cl_get_progname("agli010",g_lang,"2"),"|:EXEPROGagli010"
      #160318-00025#12--add--end  
      #呼叫檢查存在並帶值的library
      IF cl_chk_exist("v_glaald") THEN
         #檢查成功時後續處理
         #LET  = g_chkparam.return1
         #DISPLAY BY NAME 
         CALL s_ld_chk_authorization(g_user,g_xcda_f.xcdald) RETURNING l_success
         IF l_success = FALSE THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'axr-00022'
            LET g_errparam.extend = g_xcda_f.xcdald
            LET g_errparam.popup = TRUE
            CALL cl_err()
            LET r_success = FALSE
            RETURN r_success
         END IF 
      ELSE
         #檢查失敗時後續處理
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF

#法人账套都存在，检查他们的关系
   IF NOT s_ld_chk_comp(g_xcda_f.xcdald,g_xcda_f.xcdacomp) THEN  #v_glaald_5 
      LET g_xcda_f.xcdacomp = g_xcda_f_t.xcdacomp
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_before_delete_3()
    DELETE FROM xcda_t
    WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald AND
                              xcda003 = g_xcda_m.xcda003 AND
                              xcda004 = g_xcda_m.xcda004 AND
                              xcda005 = g_xcda_m.xcda005 AND
 
          xcda001 = g_xcda3_d_t.xcda001_3
      AND xcda002 = g_xcda3_d_t.xcda002_3
      AND xcda006 = g_xcda3_d_t.xcda006_3
      AND xcda007 = g_xcda3_d_t.xcda007_3
      AND xcda008 = g_xcda3_d_t.xcda008_3
      AND xcda009 = g_xcda3_d_t.xcda009_3
 
      
   #add-point:單筆刪除中
    
      DELETE FROM xcda_t
       WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald AND
                              xcda003 = g_xcda_m.xcda003 AND
                              xcda004 = g_xcda_m.xcda004 AND
                              xcda005 = g_xcda_m.xcda005 AND
 
         
       xcda002 = g_xcda3_d_t.xcda002_3
      AND xcda006 = g_xcda3_d_t.xcda006_3
      AND xcda007 = g_xcda3_d_t.xcda007_3
      AND xcda008 = g_xcda3_d_t.xcda008_3
      AND xcda009 = g_xcda3_d_t.xcda009_3
   
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xcda_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後

   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_before_delete_4()
 DELETE FROM xcda_t
    WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald AND
                              xcda003 = g_xcda_m.xcda003 AND
                              xcda004 = g_xcda_m.xcda004 AND
                              xcda005 = g_xcda_m.xcda005 AND
 
          xcda001 = g_xcda4_d_t.xcda001_4
      AND xcda002 = g_xcda4_d_t.xcda002_4
      AND xcda006 = g_xcda4_d_t.xcda006_4
      AND xcda007 = g_xcda4_d_t.xcda007_4
      AND xcda008 = g_xcda4_d_t.xcda008_4
      AND xcda009 = g_xcda4_d_t.xcda009_4
 
      
   #add-point:單筆刪除中
    
      DELETE FROM xcda_t
       WHERE xcdaent = g_enterprise AND xcdald = g_xcda_m.xcdald AND
                              xcda003 = g_xcda_m.xcda003 AND
                              xcda004 = g_xcda_m.xcda004 AND
                              xcda005 = g_xcda_m.xcda005 AND
 
         
       xcda002 = g_xcda4_d_t.xcda002_4
      AND xcda006 = g_xcda4_d_t.xcda006_4
      AND xcda007 = g_xcda4_d_t.xcda007_4
      AND xcda008 = g_xcda4_d_t.xcda008_4
      AND xcda009 = g_xcda4_d_t.xcda009_4
   
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xcda_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後

   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL axct304_insert_default()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_insert_default()

   IF cl_null(g_xcda_d[l_ac].xcda008) THEN LET g_xcda_d[l_ac].xcda008 = ' ' END IF
   IF cl_null(g_xcda_d[l_ac].xcda007) THEN LET g_xcda_d[l_ac].xcda007 = ' ' END IF
   LET g_sql = "SELECT xcca101  FROM xcca_t ",
               " WHERE xccaent = '",g_enterprise,"' AND xccald = '",g_xcda_m.xcdald,"'",
               "  AND xcca001 = '1' ",
               "  AND xcca003 = '",g_xcda_m.xcda003,"' AND xcca004 = '",g_xcda_m.xcda004,"'",
               "  AND xcca005 = '",g_xcda_m.xcda005,"' AND xcca006 = '",g_xcda_d[l_ac].xcda006,"'"
               
   IF cl_null(g_xcda_d[l_ac].xcda002) THEN 
      LET g_sql = g_sql CLIPPED," AND xcca002 = '",g_xcda_d[l_ac].xcda002,"'"
   END IF
   IF cl_null(g_xcda_d[l_ac].xcda007) THEN 
      LET g_sql = g_sql CLIPPED," AND xcca007 = '",g_xcda_d[l_ac].xcda007,"'"
   END IF
   IF cl_null(g_xcda_d[l_ac].xcda008) THEN 
      LET g_sql = g_sql CLIPPED," AND xcca008 = '",g_xcda_d[l_ac].xcda008,"'"
   END IF
   PREPARE default_pre FROM g_sql
   EXECUTE default_pre INTO g_xcda_d[l_ac].xcda101 #總筆數
   
   DISPLAY BY NAME g_xcda_d[l_ac].xcda101

   #160824-00007#222 161202 by lori add---(S)
   LET g_xcda_d_o.xcda008 = g_xcda_d[l_ac].xcda008 
   LET g_xcda_d_o.xcda007 = g_xcda_d[l_ac].xcda007 
   LET g_xcda_d_o.xcda101 = g_xcda_d[l_ac].xcda101
   #160824-00007#222 161202 by lori add---(E)

END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_xcda009_chk()
DEFINE l_success LIKE type_t.chr1
DEFINE l_xcda009 LIKE xcda_t.xcda009

   LET l_success = 'Y'
FOREACH axct304_xcda009_cs USING g_enterprise,g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcda004,g_xcda_m.xcda005,'1'
          INTO l_xcda009
    IF cl_null(l_xcda009) THEN
       LET l_success = 'N'
       INITIALIZE g_errparam TO NULL
       LET g_errparam.extend = ""
       LET g_errparam.code   = "axc-00556"
       LET g_errparam.popup  = TRUE
       CALL cl_err()
       EXIT FOREACH
    END IF
END FOREACH
IF g_glaa015  = 'Y' THEN
   FOREACH axct304_xcda009_cs USING g_enterprise,g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcda004,g_xcda_m.xcda005,'2'
             INTO l_xcda009
       IF cl_null(l_xcda009) THEN
          LET l_success = 'N'
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = ""
          LET g_errparam.code   = "axc-00556"
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          EXIT FOREACH
       END IF
   END FOREACH
END IF
IF g_glaa019  = 'Y' THEN
   FOREACH axct304_xcda009_cs USING g_enterprise,g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcda004,g_xcda_m.xcda005,'3'
             INTO l_xcda009
       IF cl_null(l_xcda009) THEN
          LET l_success = 'N'
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = ""
          LET g_errparam.code   = "axc-00556"
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          EXIT FOREACH
       END IF
   END FOREACH
END IF
RETURN l_success
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct304_xcca_chk()
DEFINE l_xcda001 LIKE xcda_t.xcda001
DEFINE l_xcda002 LIKE xcda_t.xcda002
DEFINE l_xcda006 LIKE xcda_t.xcda006
DEFINE l_xcda007 LIKE xcda_t.xcda007
DEFINE l_xcda008 LIKE xcda_t.xcda008

DEFINE l_xcda001_t LIKE xcda_t.xcda001
DEFINE l_xcda002_t LIKE xcda_t.xcda002
DEFINE l_xcda006_t LIKE xcda_t.xcda006
DEFINE l_xcda007_t LIKE xcda_t.xcda007
DEFINE l_xcda008_t LIKE xcda_t.xcda008

DEFINE l_str     STRING
DEFINE l_success LIKE type_t.chr1
DEFINE l_count1  LIKE type_t.num5

   LET l_success = 'Y'    
   LET l_count1 = 0 
   
  CALL cl_err_collect_init()
   LET g_coll_title[1] = cl_getmsg("axc-00547",g_lang) #賬套本位幣順序
   LET g_coll_title[2] = cl_getmsg("axc-00548",g_lang) #成本域
   LET g_coll_title[3] = cl_getmsg("axc-00552",g_lang) #料號
   LET g_coll_title[4] = cl_getmsg("axc-00553",g_lang) #特性
   LET g_coll_title[5] = cl_getmsg("axc-00554",g_lang) #批號 

   FOREACH axct304_sum_cs USING g_enterprise,g_xcda_m.xcdald,g_xcda_m.xcda003,g_xcda_m.xcda004,g_xcda_m.xcda005
          INTO l_xcda001,l_xcda002,l_xcda006,l_xcda007,l_xcda008
      LET g_sql = "SELECT COUNT(*)  FROM xcca_t ",
               " WHERE xccaent = '",g_enterprise,"' AND xccald = '",g_xcda_m.xcdald,"'",
               "   AND xcca003 = '",g_xcda_m.xcda003,"'",
               "   AND xcca004 = '",g_xcda_m.xcda004,"'",
               "   AND xcca005 = '",g_xcda_m.xcda005,"'",                      
               "   AND xcca001 = '",l_xcda001,"'",                                
               "   AND xcca006 = '",l_xcda006,"'"
               
      IF cl_null(l_xcda002) THEN
         LET g_sql = g_sql,"   AND xcca002 = '",l_xcda002,"'"
      END IF
      IF cl_null(l_xcda008) THEN
         LET g_sql = g_sql,"   AND xcca008 = '",l_xcda008,"'"
      END IF
      IF cl_null(l_xcda007) THEN
         LET g_sql = g_sql,"   AND xcca007 = '",l_xcda007,"'"
      END IF 
      PREPARE count_pre FROM g_sql
      EXECUTE count_pre INTO l_count1 #總筆數  
      
       IF l_count1 = 0 THEN                      
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = 'axc-00528'
          LET g_errparam.extend = ''
          LET g_errparam.popup = TRUE
          LET g_errparam.coll_vals[1] = l_xcda001
          LET g_errparam.coll_vals[2] = l_xcda002
          LET g_errparam.coll_vals[3] = l_xcda006
          LET g_errparam.coll_vals[4] = l_xcda007
          LET g_errparam.coll_vals[5] = l_xcda008          
          LET g_errparam.sqlerr = 0
          CALL cl_err()     
          
           LET l_success = 'N'
      END IF  
      LET l_xcda001_t = l_xcda001
      LET l_xcda002_t = l_xcda002
      LET l_xcda006_t = l_xcda006
      LET l_xcda007_t = l_xcda007
      LET l_xcda008_t = l_xcda008
                 
   END FOREACH
   CALL cl_err_collect_show()
   FREE count_pre
   RETURN l_success


END FUNCTION

 
{</section>}
 
