#該程式未解開Section, 採用最新樣板產出!
{<section id="axct301.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0009(2016-07-04 15:18:17), PR版次:0009(1900-01-01 00:00:00)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000231
#+ Filename...: axct301
#+ Description: 期初在製數量成本開帳作業
#+ Creator....: 02291(2014-04-11 00:00:00)
#+ Modifier...: 08108 -SD/PR- 00000
 
{</section>}
 
{<section id="axct301.global" >}
#應用 i07 樣板自動產生(Version:46)
#add-point:填寫註解說明
#160318-00025#11   2016/04/25 By 07675       將重複內容的錯誤訊息置換為公用錯誤訊息(r.v）
#160510-00036#1  16/05/11 By xianghui 金额栏位和数量栏位不能小于零
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xccb_m        RECORD
       xccbcomp LIKE xccb_t.xccbcomp, 
   xccbcomp_desc LIKE type_t.chr80, 
   xccbld LIKE xccb_t.xccbld, 
   xccbld_desc LIKE type_t.chr80, 
   xccb004 LIKE xccb_t.xccb004, 
   xccb005 LIKE xccb_t.xccb005, 
   xccb003 LIKE xccb_t.xccb003, 
   xccb003_desc LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xccb_d        RECORD
       xccb001 LIKE xccb_t.xccb001, 
   xccb006 LIKE xccb_t.xccb006, 
   xccb007 LIKE xccb_t.xccb007, 
   xccb008 LIKE xccb_t.xccb008, 
   xccb007_desc LIKE type_t.chr500, 
   xccb007_1_desc LIKE type_t.chr500, 
   xccb009 LIKE xccb_t.xccb009, 
   xccb010 LIKE xccb_t.xccb010, 
   xccb002 LIKE xccb_t.xccb002, 
   xccb101 LIKE xccb_t.xccb101, 
   xccb102 LIKE xccb_t.xccb102, 
   xccb102a LIKE xccb_t.xccb102a, 
   xccb102b LIKE xccb_t.xccb102b, 
   xccb102c LIKE xccb_t.xccb102c, 
   xccb102d LIKE xccb_t.xccb102d, 
   xccb102e LIKE xccb_t.xccb102e, 
   xccb102f LIKE xccb_t.xccb102f, 
   xccb102g LIKE xccb_t.xccb102g, 
   xccb102h LIKE xccb_t.xccb102h
       END RECORD
PRIVATE TYPE type_g_xccb2_d RECORD
       xccb001 LIKE xccb_t.xccb001, 
   xccb002 LIKE xccb_t.xccb002, 
   xccb007 LIKE xccb_t.xccb007, 
   xccb008 LIKE xccb_t.xccb008, 
   xccb009 LIKE xccb_t.xccb009, 
   xccbownid LIKE xccb_t.xccbownid, 
   xccbownid_desc LIKE type_t.chr500, 
   xccbowndp LIKE xccb_t.xccbowndp, 
   xccbowndp_desc LIKE type_t.chr500, 
   xccbcrtid LIKE xccb_t.xccbcrtid, 
   xccbcrtid_desc LIKE type_t.chr500, 
   xccbcrtdp LIKE xccb_t.xccbcrtdp, 
   xccbcrtdp_desc LIKE type_t.chr500, 
   xccbcrtdt DATETIME YEAR TO SECOND, 
   xccbmodid LIKE xccb_t.xccbmodid, 
   xccbmodid_desc LIKE type_t.chr500, 
   xccbmoddt DATETIME YEAR TO SECOND, 
   xccbcnfid LIKE xccb_t.xccbcnfid, 
   xccbcnfid_desc LIKE type_t.chr500, 
   xccbcnfdt DATETIME YEAR TO SECOND, 
   xccbpstid LIKE xccb_t.xccbpstid, 
   xccbpstid_desc LIKE type_t.chr500, 
   xccbpstdt LIKE xccb_t.xccbpstdt
       END RECORD
 
 
#add-point:自定義模組變數(Module Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE l_bdate      LIKE glav_t.glav004 #起始年度+期別對應的起始截止日期
DEFINE l_edate      LIKE glav_t.glav004
DEFINE g_glaa003    LIKE glaa_t.glaa003
DEFINE  g_hidden        DYNAMIC ARRAY OF LIKE type_t.chr1,
        g_ifchar        DYNAMIC ARRAY OF LIKE type_t.chr1,
        g_mask          DYNAMIC ARRAY OF LIKE type_t.chr1,
        g_quote         STRING
DEFINE xls_name        STRING 
DEFINE  l_channel       base.Channel,
        l_str           STRING,
        l_cmd           STRING,
        l_field_name    STRING,
        cnt_table       LIKE type_t.num10
DEFINE  g_sheet         STRING 
DEFINE  ms_codeset      STRING
DEFINE  ms_locale       STRING
DEFINE  tsconv_cmd      STRING
DEFINE  l_win_name      STRING,              
        cnt_header      LIKE type_t.num10
DEFINE  g_sort          RECORD
         column         LIKE type_t.num5,    #sortColumn
         type           STRING,                 #sortType:排序方式:asc/desc
         name           STRING                  #欄位代號
                        END RECORD
DEFINE g_bufstr                base.StringBuffer 
DEFINE g_glaa001       LIKE glaa_t.glaa001
DEFINE g_glaa015       LIKE glaa_t.glaa015
DEFINE g_glaa016       LIKE glaa_t.glaa016
DEFINE g_glaa018       LIKE glaa_t.glaa018
DEFINE g_glaa019       LIKE glaa_t.glaa019
DEFINE g_glaa020       LIKE glaa_t.glaa020
DEFINE g_glaa022       LIKE glaa_t.glaa022
#單身 type 宣告
 TYPE type_g_xccb1_d        RECORD
   xccb001_1 LIKE xccb_t.xccb001, 
   xccb006_1 LIKE xccb_t.xccb006, 
   xccb007_1 LIKE xccb_t.xccb007, 
   xccb008_1 LIKE xccb_t.xccb008, 
   xccb007_desc1 LIKE type_t.chr500, 
   xccb007_1_desc1 LIKE type_t.chr500, 
   xccb009_1 LIKE xccb_t.xccb009, 
   xccb010_1 LIKE xccb_t.xccb010, 
   xccb002_1 LIKE xccb_t.xccb002,
   xccb101_1 LIKE xccb_t.xccb101, 
   xccb102_1 LIKE xccb_t.xccb102,   #fengmy 150106 add
   xccb102a_1 LIKE xccb_t.xccb102a, 
   xccb102b_1 LIKE xccb_t.xccb102b, 
   xccb102c_1 LIKE xccb_t.xccb102c, 
   xccb102d_1 LIKE xccb_t.xccb102d, 
   xccb102e_1 LIKE xccb_t.xccb102e, 
   xccb102f_1 LIKE xccb_t.xccb102f, 
   xccb102g_1 LIKE xccb_t.xccb102g, 
   xccb102h_1 LIKE xccb_t.xccb102h
       END RECORD
#單身 type 宣告
 TYPE type_g_xccb3_d        RECORD
   xccb001_3 LIKE xccb_t.xccb001, 
   xccb006_3 LIKE xccb_t.xccb006, 
   xccb007_3 LIKE xccb_t.xccb007, 
   xccb008_3 LIKE xccb_t.xccb008,
   xccb007_3_desc LIKE type_t.chr500, 
   xccb007_1_3_desc LIKE type_t.chr500, 
   xccb009_3 LIKE xccb_t.xccb009, 
   xccb010_3 LIKE xccb_t.xccb010,
   xccb002_3 LIKE xccb_t.xccb002,    
   xccb101_3 LIKE xccb_t.xccb101,
   xccb102_3 LIKE xccb_t.xccb102,   #fengmy 150106 add   
   xccb102a_3 LIKE xccb_t.xccb102a, 
   xccb102b_3 LIKE xccb_t.xccb102b, 
   xccb102c_3 LIKE xccb_t.xccb102c, 
   xccb102d_3 LIKE xccb_t.xccb102d, 
   xccb102e_3 LIKE xccb_t.xccb102e, 
   xccb102f_3 LIKE xccb_t.xccb102f, 
   xccb102g_3 LIKE xccb_t.xccb102g, 
   xccb102h_3 LIKE xccb_t.xccb102h
       END RECORD
DEFINE g_xccb1_d          DYNAMIC ARRAY OF type_g_xccb1_d
DEFINE g_xccb1_d_t        type_g_xccb1_d
DEFINE g_xccb3_d          DYNAMIC ARRAY OF type_g_xccb3_d
DEFINE g_xccb3_d_t        type_g_xccb3_d
DEFINE g_current_idx1        LIKE type_t.num10          
DEFINE g_rec_b1              LIKE type_t.num5           
DEFINE l_ac1                 LIKE type_t.num5 
DEFINE g_current_idx3        LIKE type_t.num10          
DEFINE g_rec_b3              LIKE type_t.num5           
DEFINE l_ac3                 LIKE type_t.num5  
DEFINE g_detail_cnt1         LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx1         LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_cnt3         LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx3         LIKE type_t.num5              #單身目前所在筆數
DEFINE g_cnt1                LIKE type_t.num10
DEFINE g_cnt3                LIKE type_t.num10
DEFINE g_max_rec1            LIKE type_t.num10
DEFINE g_max_rec3            LIKE type_t.num10
DEFINE g_wc3                 STRING
type type_g_xccb_s        RECORD
       name LIKE type_t.chr80, 
   dir LIKE type_t.chr80
       END RECORD
DEFINE g_xccb_s        type_g_xccb_s
#單身 type 宣告
 TYPE type_g_xccb4_d        RECORD
   xccbent LIKE xccb_t.xccbent,
   xccbld LIKE xccb_t.xccbld,
   xccbcomp LIKE xccb_t.xccbcomp,
   xccb001 LIKE xccb_t.xccb001, 
   xccb002 LIKE xccb_t.xccb002, 
   xccb003 LIKE xccb_t.xccb003,
   xccb004 LIKE xccb_t.xccb004,
   xccb005 LIKE xccb_t.xccb005,
   xccb006 LIKE xccb_t.xccb006, 
   xccb007 LIKE xccb_t.xccb007, 
   xccb008 LIKE xccb_t.xccb008, 
   xccb009 LIKE xccb_t.xccb009,
   xccb010 LIKE xccb_t.xccb010,
   xccb101 LIKE xccb_t.xccb101, 
   xccb102a LIKE xccb_t.xccb102a, 
   xccb102b LIKE xccb_t.xccb102b, 
   xccb102c LIKE xccb_t.xccb102c, 
   xccb102d LIKE xccb_t.xccb102d, 
   xccb102e LIKE xccb_t.xccb102e, 
   xccb102f LIKE xccb_t.xccb102f, 
   xccb102g LIKE xccb_t.xccb102g, 
   xccb102h LIKE xccb_t.xccb102h,
   xccb102 LIKE xccb_t.xccb102,
   xccb102a_1 LIKE xccb_t.xccb102a,
   xccb102b_1 LIKE xccb_t.xccb102b, 
   xccb102c_1 LIKE xccb_t.xccb102c, 
   xccb102d_1 LIKE xccb_t.xccb102d, 
   xccb102e_1 LIKE xccb_t.xccb102e, 
   xccb102f_1 LIKE xccb_t.xccb102f, 
   xccb102g_1 LIKE xccb_t.xccb102g, 
   xccb102h_1 LIKE xccb_t.xccb102h,
   xccb102_1 LIKE xccb_t.xccb102,
   xccb102a_2 LIKE xccb_t.xccb102a,
   xccb102b_2 LIKE xccb_t.xccb102b, 
   xccb102c_2 LIKE xccb_t.xccb102c, 
   xccb102d_2 LIKE xccb_t.xccb102d, 
   xccb102e_2 LIKE xccb_t.xccb102e, 
   xccb102f_2 LIKE xccb_t.xccb102f, 
   xccb102g_2 LIKE xccb_t.xccb102g, 
   xccb102h_2 LIKE xccb_t.xccb102h,
   xccb102_2 LIKE xccb_t.xccb102
       END RECORD
DEFINE g_xccb4_d          DYNAMIC ARRAY OF type_g_xccb4_d
DEFINE w        ui.Window
DEFINE f        ui.Form
DEFINE page     om.DomNode
DEFINE l_success       LIKE type_t.num5
DEFINE g_para_data           LIKE type_t.chr80     #采用成本域否  #fengmy150119
DEFINE g_para_data1          LIKE type_t.chr80     #采用特性否    #fengmy150119
#end add-point
 
 
#模組變數(Module Variables)
DEFINE g_xccb_m          type_g_xccb_m
DEFINE g_xccb_m_t        type_g_xccb_m
DEFINE g_xccb_m_o        type_g_xccb_m
DEFINE g_xccb_m_mask_o   type_g_xccb_m #轉換遮罩前資料
DEFINE g_xccb_m_mask_n   type_g_xccb_m #轉換遮罩後資料
 
   DEFINE g_xccbld_t LIKE xccb_t.xccbld
DEFINE g_xccb004_t LIKE xccb_t.xccb004
DEFINE g_xccb005_t LIKE xccb_t.xccb005
DEFINE g_xccb003_t LIKE xccb_t.xccb003
 
 
DEFINE g_xccb_d          DYNAMIC ARRAY OF type_g_xccb_d
DEFINE g_xccb_d_t        type_g_xccb_d
DEFINE g_xccb_d_o        type_g_xccb_d
DEFINE g_xccb_d_mask_o   DYNAMIC ARRAY OF type_g_xccb_d #轉換遮罩前資料
DEFINE g_xccb_d_mask_n   DYNAMIC ARRAY OF type_g_xccb_d #轉換遮罩後資料
DEFINE g_xccb2_d   DYNAMIC ARRAY OF type_g_xccb2_d
DEFINE g_xccb2_d_t type_g_xccb2_d
DEFINE g_xccb2_d_o type_g_xccb2_d
DEFINE g_xccb2_d_mask_o   DYNAMIC ARRAY OF type_g_xccb2_d #轉換遮罩前資料
DEFINE g_xccb2_d_mask_n   DYNAMIC ARRAY OF type_g_xccb2_d #轉換遮罩後資料
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_xccbld LIKE xccb_t.xccbld,
      b_xccb003 LIKE xccb_t.xccb003,
      b_xccb004 LIKE xccb_t.xccb004,
      b_xccb005 LIKE xccb_t.xccb005
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num10             #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10             #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10             #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10             #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10             #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10             #Browser目前所在筆數(暫存用)
DEFINE g_current_page        LIKE type_t.num10             #目前所在頁數
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num10             #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入(僅用於三階)
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="axct301.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT xccbcomp,'',xccbld,'',xccb004,xccb005,xccb003,''", 
                      " FROM xccb_t",
                      " WHERE xccbent= ? AND xccbld=? AND xccb003=? AND xccb004=? AND xccb005=? FOR  
                          UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axct301_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.xccbcomp,t0.xccbld,t0.xccb004,t0.xccb005,t0.xccb003,t1.ooefl003 , 
       t2.glaal002 ,t3.xcatl003",
               " FROM xccb_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.xccbcomp AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN glaal_t t2 ON t2.glaalent="||g_enterprise||" AND t2.glaalld=t0.xccbld AND t2.glaal001='"||g_dlang||"' ",
               " LEFT JOIN xcatl_t t3 ON t3.xcatlent="||g_enterprise||" AND t3.xcatl001=t0.xccb003 AND t3.xcatl002='"||g_dlang||"' ",
 
               " WHERE t0.xccbent = " ||g_enterprise|| " AND t0.xccbld = ? AND t0.xccb003 = ? AND t0.xccb004 = ? AND t0.xccb005 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE axct301_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axct301 WITH FORM cl_ap_formpath("axc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axct301_init()   
 
      #進入選單 Menu (="N")
      CALL axct301_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axct301
      
   END IF 
   
   CLOSE axct301_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="axct301.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axct301_init()
   #add-point:init段define name="init.define_customerization"
   
   #end add-point   
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
      CALL cl_set_combo_scc('xccb001','8914') 
   CALL cl_set_combo_scc('xccb010','8918') 
 
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化 name="init.init"
   CALL cl_set_combo_scc('xccb010_1','8918') 
   CALL cl_set_combo_scc('xccb010_3','8918') 
   #fengmy 150119----begin
   #根據參數顯示隱藏成本域 和 料件特性
   CALL cl_get_para(g_enterprise,g_site,'S-FIN-6001') RETURNING g_para_data   #采用成本域否            
   IF g_para_data = 'Y' THEN
      CALL cl_set_comp_visible('xccb002,xccb002_desc,xccb002_1,xccb002_1_desc,xccb002_3,xccb002_3_desc',TRUE)                    
   ELSE
      CALL cl_set_comp_visible('xccb002,xccb002_desc,xccb002_1,xccb002_1_desc,xccb002_3,xccb002_3_desc',FALSE)                
   END IF 
   CALL cl_get_para(g_enterprise,g_site,'S-FIN-6013') RETURNING g_para_data1   #采用成本域否            
   IF g_para_data1 = 'Y' THEN
      CALL cl_set_comp_visible('xccb008,xccb008_1,xccb008_3',TRUE)                    
   ELSE
      CALL cl_set_comp_visible('xccb008,xccb008_1,xccb008_3',FALSE)                
   END IF   
   #fengmy 150119----end
   #end add-point
   
   CALL axct301_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="axct301.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axct301_ui_dialog()
   #add-point:ui_dialog段define name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE la_param  RECORD
          prog                  STRING,
          actionid              STRING,
          background            LIKE type_t.chr1,
          param                 DYNAMIC ARRAY OF STRING
                                END RECORD
   DEFINE ls_js                 STRING
   DEFINE li_idx                LIKE type_t.num10
   DEFINE ls_wc                 STRING
   DEFINE lb_first              BOOLEAN
   DEFINE l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   CALL cl_set_comp_visible("bpage_2,bpage_3",TRUE)
   #end add-point
   
   WHILE TRUE
      
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xccb_m.* TO NULL
         CALL g_xccb_d.clear()
         CALL g_xccb2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axct301_init()
      END IF
 
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_xccb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               #顯示單身筆數
               CALL axct301_idx_chk()
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               CALL axct301_ui_detailshow()
               
               #add-point:page1自定義行為 name="ui_dialog.body.before_row"
               CALL axct301_b_fill1(g_wc3)
               CALL axct301_b_fill3(g_wc3)
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
    
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            LET g_current_page = 1
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_xccb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_curr_diag = ui.DIALOG.getCurrent()
               CALL axct301_idx_chk()
               CALL axct301_ui_detailshow()
               
               #add-point:page1自定義行為 name="ui_dialog.body2.before_row"
               
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'     
               LET g_current_page = 2
            
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
           
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         DISPLAY ARRAY g_xccb1_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail3")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               
               #add-point:page1自定義行為

               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               
               LET g_current_page = 2
               
               
            
         END DISPLAY
         DISPLAY ARRAY g_xccb3_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail4")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               
               #add-point:page1自定義行為

               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 3
               
         END DISPLAY
         #end add-point
         
         
         BEFORE DIALOG
            #先填充browser資料
            CALL axct301_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axct301_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axct301_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         
    
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axct301_fetch('F')
            LET g_current_row = g_current_idx         
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct301_idx_chk()
            LET g_action_choice = ""
          
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axct301_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct301_idx_chk()
            LET g_action_choice = ""
          
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axct301_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct301_idx_chk()
            LET g_action_choice = ""
        
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axct301_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct301_idx_chk()
            LET g_action_choice = ""
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axct301_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct301_idx_chk()
            LET g_action_choice = ""
            
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xccb_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_xccb2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xccb001
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axct301_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axct301_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLEAR FORM
               ELSE
                  CALL axct301_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axct301_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axct301_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_axct301_01
            LET g_action_choice="open_axct301_01"
            IF cl_auth_chk_act("open_axct301_01") THEN
               
               #add-point:ON ACTION open_axct301_01 name="menu.open_axct301_01"
               CALL axct301_01() RETURNING l_success
               IF l_success = TRUE THEN
                  CALL s_transaction_end('Y','1')
                  ERROR "INSERT O.K"
               ELSE
                  CALL s_transaction_end('N','1')
               END IF
               CALL axct301_show()
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axct305
            LET g_action_choice="axct305"
            IF cl_auth_chk_act("axct305") THEN
               
               #add-point:ON ACTION axct305 name="menu.axct305"
               CALL axct301_generate_xcdb()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axct301_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axct301_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION axcp301
            LET g_action_choice="axcp301"
            IF cl_auth_chk_act("axcp301") THEN
               
               #add-point:ON ACTION axcp301 name="menu.axcp301"
            LET la_param.prog = "axcp301"   -- zhouhuaa 1606 
            LET ls_js=la_param.prog         -- zhouhuaa 1606 
            CALL cl_cmdrun(ls_js)           -- zhouhuaa 1606
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               &include "erp/axc/axct301_rep.4gl"
               #add-point:ON ACTION output.after
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axct301_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axct301_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_axct301_s01
            LET g_action_choice="open_axct301_s01"
            IF cl_auth_chk_act("open_axct301_s01") THEN
               
               #add-point:ON ACTION open_axct301_s01 name="menu.open_axct301_s01"
               CALL axct301_s01()
               #END add-point
               
            END IF
 
 
 
 
         
         
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL axct301_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axct301_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axct301_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
         CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.browser_search" >}
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axct301_browser_search(p_type)
   #add-point:browser_search段define name="browser_search.define_customerization"
   
   #end add-point   
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_search.define"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axct301.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axct301_browser_fill(ps_page_action)
   #add-point:browser_fill段define name="browser_fill.define_customerization"
   
   #end add-point   
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="browser_fill.before_browser_fill"
   
   #end add-point    
 
   LET l_searchcol = "xccbld,xccb003,xccb004,xccb005"
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT xccbld ",
                      ", xccb003 ",
                      ", xccb004 ",
                      ", xccb005 ",
 
                      " FROM xccb_t ",
                      " ",
                      " ", 
 
 
 
                      " WHERE xccbent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xccb_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT xccbld ",
                      ", xccb003 ",
                      ", xccb004 ",
                      ", xccb005 ",
 
                      " FROM xccb_t ",
                      " ",
                      " ", 
 
 
                      " WHERE xccbent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("xccb_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt 
         LET g_errparam.code   = 9035
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   LET g_error_show = 0
 
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xccb_m.* TO NULL
      CALL g_xccb_d.clear()        
      CALL g_xccb2_d.clear() 
 
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xccbld,t0.xccb003,t0.xccb004,t0.xccb005 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT t0.xccbld,t0.xccb003,t0.xccb004,t0.xccb005",
                " FROM xccb_t t0",
                #" ",
                " ",
 
 
 
                
                " WHERE t0.xccbent = " ||g_enterprise|| " AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("xccb_t")
 
   #add-point:browser_fill,sql_rank前 name="browser_fill.before_sql_rank"
   
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前 name="browser_fill.before_pre"
   
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"xccb_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_xccbld,g_browser[g_cnt].b_xccb003,g_browser[g_cnt].b_xccb004, 
          g_browser[g_cnt].b_xccb005 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
         
         
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point  
      
         
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
      END FOREACH
      FREE browse_pre
   END IF
 
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xccbld) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_xccb_m.* TO NULL
      CALL g_xccb_d.clear()
      CALL g_xccb2_d.clear()
 
      #add-point:browser_fill段after_clear name="browser_fill.after_clear"
      
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   LET g_browser_cnt = g_browser.getLength()
   CALL axct301_fetch('')
   
   #筆數顯示
   LET g_browser_idx = g_current_idx 
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axct301_ui_headershow()
   #add-point:ui_headershow段define name="ui_headershow.define_customerization"
   
   #end add-point    
   #add-point:ui_headershow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_xccb_m.xccbld = g_browser[g_current_idx].b_xccbld   
   LET g_xccb_m.xccb003 = g_browser[g_current_idx].b_xccb003   
   LET g_xccb_m.xccb004 = g_browser[g_current_idx].b_xccb004   
   LET g_xccb_m.xccb005 = g_browser[g_current_idx].b_xccb005   
 
   EXECUTE axct301_master_referesh USING g_xccb_m.xccbld,g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005 INTO g_xccb_m.xccbcomp, 
       g_xccb_m.xccbld,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb_m.xccb003,g_xccb_m.xccbcomp_desc,g_xccb_m.xccbld_desc, 
       g_xccb_m.xccb003_desc
   CALL axct301_show()
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axct301_ui_detailshow()
   #add-point:ui_detailshow段define name="ui_detailshow.define_customerization"
   
   #end add-point
   #add-point:ui_detailshow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_detailshow.before"
   
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
      #add-point:ui_detailshow段more name="ui_detailshow.more"
#      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)      
#      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axct301_ui_browser_refresh()
   #add-point:ui_browser_refresh段define name="ui_browser_refresh.define_customerization"
   
   #end add-point   
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xccbld = g_xccb_m.xccbld 
         AND g_browser[l_i].b_xccb003 = g_xccb_m.xccb003 
         AND g_browser[l_i].b_xccb004 = g_xccb_m.xccb004 
         AND g_browser[l_i].b_xccb005 = g_xccb_m.xccb005 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axct301_construct()
   #add-point:cs段define name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
   
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_xccb_m.* TO NULL
   CALL g_xccb_d.clear()
   CALL g_xccb2_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外 name="cs.head.before"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xccbcomp,xccbld,xccb004,xccb005,xccb003
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.head.before_construct"
            
            #end add-point 
            
                 #Ctrlp:construct.c.xccbcomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccbcomp
            #add-point:ON ACTION controlp INFIELD xccbcomp name="construct.c.xccbcomp"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccbcomp  #顯示到畫面上
            NEXT FIELD xccbcomp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccbcomp
            #add-point:BEFORE FIELD xccbcomp name="construct.b.xccbcomp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccbcomp
            
            #add-point:AFTER FIELD xccbcomp name="construct.a.xccbcomp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xccbld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccbld
            #add-point:ON ACTION controlp INFIELD xccbld name="construct.c.xccbld"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            CALL q_authorised_ld()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccbld  #顯示到畫面上
            NEXT FIELD xccbld                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccbld
            #add-point:BEFORE FIELD xccbld name="construct.b.xccbld"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccbld
            
            #add-point:AFTER FIELD xccbld name="construct.a.xccbld"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb004
            #add-point:BEFORE FIELD xccb004 name="construct.b.xccb004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb004
            
            #add-point:AFTER FIELD xccb004 name="construct.a.xccb004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xccb004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb004
            #add-point:ON ACTION controlp INFIELD xccb004 name="construct.c.xccb004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb005
            #add-point:BEFORE FIELD xccb005 name="construct.b.xccb005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb005
            
            #add-point:AFTER FIELD xccb005 name="construct.a.xccb005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xccb005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb005
            #add-point:ON ACTION controlp INFIELD xccb005 name="construct.c.xccb005"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xccb003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb003
            #add-point:ON ACTION controlp INFIELD xccb003 name="construct.c.xccb003"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xcat001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccb003  #顯示到畫面上
            NEXT FIELD xccb003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb003
            #add-point:BEFORE FIELD xccb003 name="construct.b.xccb003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb003
            
            #add-point:AFTER FIELD xccb003 name="construct.a.xccb003"
            
            #END add-point
            
 
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON xccb001,xccb006,xccb007,xccb008,xccb007_1_desc,xccb009,xccb010,xccb002, 
          xccb101,xccb102,xccb102a,xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h,xccbownid, 
          xccbowndp,xccbcrtid,xccbcrtdp,xccbcrtdt,xccbmodid,xccbmoddt,xccbcnfid,xccbcnfdt,xccbpstid, 
          xccbpstdt
           FROM s_detail1[1].xccb001,s_detail1[1].xccb006,s_detail1[1].xccb007,s_detail1[1].xccb008, 
               s_detail1[1].xccb007_1_desc,s_detail1[1].xccb009,s_detail1[1].xccb010,s_detail1[1].xccb002, 
               s_detail1[1].xccb101,s_detail1[1].xccb102,s_detail1[1].xccb102a,s_detail1[1].xccb102b, 
               s_detail1[1].xccb102c,s_detail1[1].xccb102d,s_detail1[1].xccb102e,s_detail1[1].xccb102f, 
               s_detail1[1].xccb102g,s_detail1[1].xccb102h,s_detail2[1].xccbownid,s_detail2[1].xccbowndp, 
               s_detail2[1].xccbcrtid,s_detail2[1].xccbcrtdp,s_detail2[1].xccbcrtdt,s_detail2[1].xccbmodid, 
               s_detail2[1].xccbmoddt,s_detail2[1].xccbcnfid,s_detail2[1].xccbcnfdt,s_detail2[1].xccbpstid, 
               s_detail2[1].xccbpstdt
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.body.before_construct"
            
            #end add-point 
            
         #單身公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<xccbcrtdt>>----
         AFTER FIELD xccbcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<xccbmoddt>>----
         AFTER FIELD xccbmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xccbcnfdt>>----
         AFTER FIELD xccbcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xccbpstdt>>----
         AFTER FIELD xccbpstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
 
           
         #單身一般欄位開窗相關處理
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb001
            #add-point:BEFORE FIELD xccb001 name="construct.b.page1.xccb001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb001
            
            #add-point:AFTER FIELD xccb001 name="construct.a.page1.xccb001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xccb001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb001
            #add-point:ON ACTION controlp INFIELD xccb001 name="construct.c.page1.xccb001"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xccb006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb006
            #add-point:ON ACTION controlp INFIELD xccb006 name="construct.c.page1.xccb006"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_sfaadocno_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccb006  #顯示到畫面上
            NEXT FIELD xccb006                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb006
            #add-point:BEFORE FIELD xccb006 name="construct.b.page1.xccb006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb006
            
            #add-point:AFTER FIELD xccb006 name="construct.a.page1.xccb006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xccb007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb007
            #add-point:ON ACTION controlp INFIELD xccb007 name="construct.c.page1.xccb007"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imag001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccb007  #顯示到畫面上
            NEXT FIELD xccb007                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb007
            #add-point:BEFORE FIELD xccb007 name="construct.b.page1.xccb007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb007
            
            #add-point:AFTER FIELD xccb007 name="construct.a.page1.xccb007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xccb008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb008
            #add-point:ON ACTION controlp INFIELD xccb008 name="construct.c.page1.xccb008"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xccb008()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccb008  #顯示到畫面上
            NEXT FIELD xccb008                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb008
            #add-point:BEFORE FIELD xccb008 name="construct.b.page1.xccb008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb008
            
            #add-point:AFTER FIELD xccb008 name="construct.a.page1.xccb008"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb007_1_desc
            #add-point:BEFORE FIELD xccb007_1_desc name="construct.b.page1.xccb007_1_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb007_1_desc
            
            #add-point:AFTER FIELD xccb007_1_desc name="construct.a.page1.xccb007_1_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xccb007_1_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb007_1_desc
            #add-point:ON ACTION controlp INFIELD xccb007_1_desc name="construct.c.page1.xccb007_1_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xccb009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb009
            #add-point:ON ACTION controlp INFIELD xccb009 name="construct.c.page1.xccb009"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaj010()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccb009  #顯示到畫面上
            NEXT FIELD xccb009                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb009
            #add-point:BEFORE FIELD xccb009 name="construct.b.page1.xccb009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb009
            
            #add-point:AFTER FIELD xccb009 name="construct.a.page1.xccb009"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb010
            #add-point:BEFORE FIELD xccb010 name="construct.b.page1.xccb010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb010
            
            #add-point:AFTER FIELD xccb010 name="construct.a.page1.xccb010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xccb010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb010
            #add-point:ON ACTION controlp INFIELD xccb010 name="construct.c.page1.xccb010"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xccb002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb002
            #add-point:ON ACTION controlp INFIELD xccb002 name="construct.c.page1.xccb002"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xcbf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccb002  #顯示到畫面上
            NEXT FIELD xccb002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb002
            #add-point:BEFORE FIELD xccb002 name="construct.b.page1.xccb002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb002
            
            #add-point:AFTER FIELD xccb002 name="construct.a.page1.xccb002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb101
            #add-point:BEFORE FIELD xccb101 name="construct.b.page1.xccb101"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb101
            
            #add-point:AFTER FIELD xccb101 name="construct.a.page1.xccb101"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xccb101
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb101
            #add-point:ON ACTION controlp INFIELD xccb101 name="construct.c.page1.xccb101"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb102
            #add-point:BEFORE FIELD xccb102 name="construct.b.page1.xccb102"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb102
            
            #add-point:AFTER FIELD xccb102 name="construct.a.page1.xccb102"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xccb102
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb102
            #add-point:ON ACTION controlp INFIELD xccb102 name="construct.c.page1.xccb102"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb102a
            #add-point:BEFORE FIELD xccb102a name="construct.b.page1.xccb102a"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb102a
            
            #add-point:AFTER FIELD xccb102a name="construct.a.page1.xccb102a"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xccb102a
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb102a
            #add-point:ON ACTION controlp INFIELD xccb102a name="construct.c.page1.xccb102a"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb102b
            #add-point:BEFORE FIELD xccb102b name="construct.b.page1.xccb102b"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb102b
            
            #add-point:AFTER FIELD xccb102b name="construct.a.page1.xccb102b"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xccb102b
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb102b
            #add-point:ON ACTION controlp INFIELD xccb102b name="construct.c.page1.xccb102b"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb102c
            #add-point:BEFORE FIELD xccb102c name="construct.b.page1.xccb102c"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb102c
            
            #add-point:AFTER FIELD xccb102c name="construct.a.page1.xccb102c"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xccb102c
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb102c
            #add-point:ON ACTION controlp INFIELD xccb102c name="construct.c.page1.xccb102c"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb102d
            #add-point:BEFORE FIELD xccb102d name="construct.b.page1.xccb102d"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb102d
            
            #add-point:AFTER FIELD xccb102d name="construct.a.page1.xccb102d"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xccb102d
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb102d
            #add-point:ON ACTION controlp INFIELD xccb102d name="construct.c.page1.xccb102d"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb102e
            #add-point:BEFORE FIELD xccb102e name="construct.b.page1.xccb102e"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb102e
            
            #add-point:AFTER FIELD xccb102e name="construct.a.page1.xccb102e"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xccb102e
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb102e
            #add-point:ON ACTION controlp INFIELD xccb102e name="construct.c.page1.xccb102e"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb102f
            #add-point:BEFORE FIELD xccb102f name="construct.b.page1.xccb102f"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb102f
            
            #add-point:AFTER FIELD xccb102f name="construct.a.page1.xccb102f"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xccb102f
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb102f
            #add-point:ON ACTION controlp INFIELD xccb102f name="construct.c.page1.xccb102f"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb102g
            #add-point:BEFORE FIELD xccb102g name="construct.b.page1.xccb102g"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb102g
            
            #add-point:AFTER FIELD xccb102g name="construct.a.page1.xccb102g"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xccb102g
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb102g
            #add-point:ON ACTION controlp INFIELD xccb102g name="construct.c.page1.xccb102g"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb102h
            #add-point:BEFORE FIELD xccb102h name="construct.b.page1.xccb102h"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb102h
            
            #add-point:AFTER FIELD xccb102h name="construct.a.page1.xccb102h"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xccb102h
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb102h
            #add-point:ON ACTION controlp INFIELD xccb102h name="construct.c.page1.xccb102h"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xccbownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccbownid
            #add-point:ON ACTION controlp INFIELD xccbownid name="construct.c.page2.xccbownid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccbownid  #顯示到畫面上
            NEXT FIELD xccbownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccbownid
            #add-point:BEFORE FIELD xccbownid name="construct.b.page2.xccbownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccbownid
            
            #add-point:AFTER FIELD xccbownid name="construct.a.page2.xccbownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xccbowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccbowndp
            #add-point:ON ACTION controlp INFIELD xccbowndp name="construct.c.page2.xccbowndp"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccbowndp  #顯示到畫面上
            NEXT FIELD xccbowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccbowndp
            #add-point:BEFORE FIELD xccbowndp name="construct.b.page2.xccbowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccbowndp
            
            #add-point:AFTER FIELD xccbowndp name="construct.a.page2.xccbowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xccbcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccbcrtid
            #add-point:ON ACTION controlp INFIELD xccbcrtid name="construct.c.page2.xccbcrtid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccbcrtid  #顯示到畫面上
            NEXT FIELD xccbcrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccbcrtid
            #add-point:BEFORE FIELD xccbcrtid name="construct.b.page2.xccbcrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccbcrtid
            
            #add-point:AFTER FIELD xccbcrtid name="construct.a.page2.xccbcrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xccbcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccbcrtdp
            #add-point:ON ACTION controlp INFIELD xccbcrtdp name="construct.c.page2.xccbcrtdp"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccbcrtdp  #顯示到畫面上
            NEXT FIELD xccbcrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccbcrtdp
            #add-point:BEFORE FIELD xccbcrtdp name="construct.b.page2.xccbcrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccbcrtdp
            
            #add-point:AFTER FIELD xccbcrtdp name="construct.a.page2.xccbcrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccbcrtdt
            #add-point:BEFORE FIELD xccbcrtdt name="construct.b.page2.xccbcrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xccbmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccbmodid
            #add-point:ON ACTION controlp INFIELD xccbmodid name="construct.c.page2.xccbmodid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccbmodid  #顯示到畫面上
            NEXT FIELD xccbmodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccbmodid
            #add-point:BEFORE FIELD xccbmodid name="construct.b.page2.xccbmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccbmodid
            
            #add-point:AFTER FIELD xccbmodid name="construct.a.page2.xccbmodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccbmoddt
            #add-point:BEFORE FIELD xccbmoddt name="construct.b.page2.xccbmoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xccbcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccbcnfid
            #add-point:ON ACTION controlp INFIELD xccbcnfid name="construct.c.page2.xccbcnfid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccbcnfid  #顯示到畫面上
            NEXT FIELD xccbcnfid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccbcnfid
            #add-point:BEFORE FIELD xccbcnfid name="construct.b.page2.xccbcnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccbcnfid
            
            #add-point:AFTER FIELD xccbcnfid name="construct.a.page2.xccbcnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccbcnfdt
            #add-point:BEFORE FIELD xccbcnfdt name="construct.b.page2.xccbcnfdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.xccbpstid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccbpstid
            #add-point:ON ACTION controlp INFIELD xccbpstid name="construct.c.page2.xccbpstid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccbpstid  #顯示到畫面上
            NEXT FIELD xccbpstid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccbpstid
            #add-point:BEFORE FIELD xccbpstid name="construct.b.page2.xccbpstid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccbpstid
            
            #add-point:AFTER FIELD xccbpstid name="construct.a.page2.xccbpstid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccbpstdt
            #add-point:BEFORE FIELD xccbpstdt name="construct.b.page2.xccbpstdt"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct name="cs.more_construct"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog name="cs.before_dialog"
         
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct name="cs.after_construct"
   
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
 
{</section>}
 
{<section id="axct301.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axct301_query()
   #add-point:query段define name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="query.befroe_query"
   
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xccb_d.clear()
   CALL g_xccb2_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axct301_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL axct301_browser_fill(g_wc)
      CALL axct301_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL axct301_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL axct301_fetch("F") 
   END IF
   
   CALL axct301_idx_chk()
   
   LET g_wc_filter = ""
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axct301_fetch(p_flag)
   #add-point:fetch段define name="fetch.define_customerization"
   
   #end add-point   
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="fetch.before_fetch"
   CALL cl_set_act_visible("modify,modify_detail,delete", TRUE)
   #end add-point    
 
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L' 
         LET g_current_idx = g_header_cnt
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   #CALL axct301_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart + g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting(g_current_idx,g_detail_cnt)
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xccb_m.xccbld = g_browser[g_current_idx].b_xccbld
   LET g_xccb_m.xccb003 = g_browser[g_current_idx].b_xccb003
   LET g_xccb_m.xccb004 = g_browser[g_current_idx].b_xccb004
   LET g_xccb_m.xccb005 = g_browser[g_current_idx].b_xccb005
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axct301_master_referesh USING g_xccb_m.xccbld,g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005 INTO g_xccb_m.xccbcomp, 
       g_xccb_m.xccbld,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb_m.xccb003,g_xccb_m.xccbcomp_desc,g_xccb_m.xccbld_desc, 
       g_xccb_m.xccb003_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xccb_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      INITIALIZE g_xccb_m.* TO NULL
      RETURN
   END IF
 
   #遮罩相關處理
   LET g_xccb_m_mask_o.* =  g_xccb_m.*
   CALL axct301_xccb_t_mask()
   LET g_xccb_m_mask_n.* =  g_xccb_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axct301_set_act_visible()
   CALL axct301_set_act_no_visible()
 
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
 
   #保存單頭舊值
   LET g_xccb_m_t.* = g_xccb_m.*
   LET g_xccb_m_o.* = g_xccb_m.*
   
   #重新顯示   
   CALL axct301_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="axct301.insert" >}
#+ 資料新增
PRIVATE FUNCTION axct301_insert()
   #add-point:insert段define name="insert.define_customerization"
   
   #end add-point   
   #add-point:insert段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="insert.before"
   CALL g_xccb1_d.clear()
   CALL g_xccb3_d.clear()
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_xccb_d.clear()
   CALL g_xccb2_d.clear()
 
 
   INITIALIZE g_xccb_m.* LIKE xccb_t.*             #DEFAULT 設定
   LET g_xccbld_t = NULL
   LET g_xccb003_t = NULL
   LET g_xccb004_t = NULL
   LET g_xccb005_t = NULL
 
   LET g_master_insert = FALSE
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
            LET g_xccb_m.xccb003 = "1"
 
     
      #add-point:單頭預設值 name="insert.default"
#      CALL cl_get_para(g_enterprise,g_xccb_m.xccbcomp,'S-FIN-6010') RETURNING g_xccb_m.xccb004
#      CALL cl_get_para(g_enterprise,g_xccb_m.xccbcomp,'S-FIN-6011') RETURNING g_xccb_m.xccb005
      #end add-point 
 
      CALL axct301_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xccb_m.* TO NULL
         INITIALIZE g_xccb_d TO NULL
         INITIALIZE g_xccb2_d TO NULL
 
         CALL axct301_show()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         LET g_xccb_m.* = g_xccb_m_t.*
         CALL axct301_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF
    
      #CALL g_xccb_d.clear()
      #CALL g_xccb2_d.clear()
 
      
      #add-point:單頭輸入後2 name="insert.after_insert2"
      
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axct301_set_act_visible()
   CALL axct301_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_xccbld_t = g_xccb_m.xccbld
   LET g_xccb003_t = g_xccb_m.xccb003
   LET g_xccb004_t = g_xccb_m.xccb004
   LET g_xccb005_t = g_xccb_m.xccb005
 
   
   #組合新增資料的條件
   LET g_add_browse = " xccbent = " ||g_enterprise|| " AND",
                      " xccbld = '", g_xccb_m.xccbld, "' "
                      ," AND xccb003 = '", g_xccb_m.xccb003, "' "
                      ," AND xccb004 = '", g_xccb_m.xccb004, "' "
                      ," AND xccb005 = '", g_xccb_m.xccb005, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axct301_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CALL axct301_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axct301_master_referesh USING g_xccb_m.xccbld,g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005 INTO g_xccb_m.xccbcomp, 
       g_xccb_m.xccbld,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb_m.xccb003,g_xccb_m.xccbcomp_desc,g_xccb_m.xccbld_desc, 
       g_xccb_m.xccb003_desc
   
   #遮罩相關處理
   LET g_xccb_m_mask_o.* =  g_xccb_m.*
   CALL axct301_xccb_t_mask()
   LET g_xccb_m_mask_n.* =  g_xccb_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xccb_m.xccbcomp,g_xccb_m.xccbcomp_desc,g_xccb_m.xccbld,g_xccb_m.xccbld_desc,g_xccb_m.xccb004, 
       g_xccb_m.xccb005,g_xccb_m.xccb003,g_xccb_m.xccb003_desc
   
   #功能已完成,通報訊息中心
   CALL axct301_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.modify" >}
#+ 資料修改
PRIVATE FUNCTION axct301_modify()
   #add-point:modify段define name="modify.define_customerization"
   
   #end add-point    
   #add-point:modify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   IF g_xccb_m.xccbld IS NULL
   OR g_xccb_m.xccb003 IS NULL
   OR g_xccb_m.xccb004 IS NULL
   OR g_xccb_m.xccb005 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL  
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
   LET g_xccbld_t = g_xccb_m.xccbld
   LET g_xccb003_t = g_xccb_m.xccb003
   LET g_xccb004_t = g_xccb_m.xccb004
   LET g_xccb005_t = g_xccb_m.xccb005
 
   CALL s_transaction_begin()
   
   OPEN axct301_cl USING g_enterprise,g_xccb_m.xccbld,g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axct301_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE axct301_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axct301_master_referesh USING g_xccb_m.xccbld,g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005 INTO g_xccb_m.xccbcomp, 
       g_xccb_m.xccbld,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb_m.xccb003,g_xccb_m.xccbcomp_desc,g_xccb_m.xccbld_desc, 
       g_xccb_m.xccb003_desc
   
   #遮罩相關處理
   LET g_xccb_m_mask_o.* =  g_xccb_m.*
   CALL axct301_xccb_t_mask()
   LET g_xccb_m_mask_n.* =  g_xccb_m.*
   
   CALL s_transaction_end('Y','0')
 
   CALL axct301_show()
   WHILE TRUE
      LET g_xccbld_t = g_xccb_m.xccbld
      LET g_xccb003_t = g_xccb_m.xccb003
      LET g_xccb004_t = g_xccb_m.xccb004
      LET g_xccb005_t = g_xccb_m.xccb005
 
 
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      CALL axct301_input("u")     #欄位更改
      
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         LET g_xccb_m.* = g_xccb_m_t.*
         CALL axct301_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更(更新單身table的key欄位值)
      IF g_xccb_m.xccbld != g_xccbld_t 
      OR g_xccb_m.xccb003 != g_xccb003_t 
      OR g_xccb_m.xccb004 != g_xccb004_t 
      OR g_xccb_m.xccb005 != g_xccb005_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前 name="modify.b_key_update"
         
         #end add-point
         
         #add-point:單頭(偽)修改中 name="modify.m_key_update"
         
         #end add-point
         
 
         
         #add-point:單頭(偽)修改後 name="modify.a_key_update"
         
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axct301_set_act_visible()
   CALL axct301_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xccbent = " ||g_enterprise|| " AND",
                      " xccbld = '", g_xccb_m.xccbld, "' "
                      ," AND xccb003 = '", g_xccb_m.xccb003, "' "
                      ," AND xccb004 = '", g_xccb_m.xccb004, "' "
                      ," AND xccb005 = '", g_xccb_m.xccb005, "' "
 
   #填到對應位置
   CALL axct301_browser_fill("")
 
   CALL axct301_idx_chk()
 
   CLOSE axct301_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axct301_msgcentre_notify('modify')
   
END FUNCTION   
 
{</section>}
 
{<section id="axct301.input" >}
#+ 資料輸入
PRIVATE FUNCTION axct301_input(p_cmd)
   #add-point:input段define name="input.define_customerization"
   
   #end add-point   
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num10               #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num10               #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10               #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE l_ooab002          LIKE ooab_t.ooab002
   DEFINE l_rate             LIKE type_t.num26_10
   DEFINE l_success              LIKE type_t.num5
   DEFINE l_errno                LIKE gzze_t.gzze001
   DEFINE  l_date                DATE
   #end add-point
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xccb_m.xccbcomp,g_xccb_m.xccbcomp_desc,g_xccb_m.xccbld,g_xccb_m.xccbld_desc,g_xccb_m.xccb004, 
       g_xccb_m.xccb005,g_xccb_m.xccb003,g_xccb_m.xccb003_desc
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT xccb001,xccb006,xccb007,xccb008,xccb009,xccb010,xccb002,xccb101,xccb102, 
       xccb102a,xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h,xccb001,xccb002,xccb007, 
       xccb008,xccb009,xccbownid,xccbowndp,xccbcrtid,xccbcrtdp,xccbcrtdt,xccbmodid,xccbmoddt,xccbcnfid, 
       xccbcnfdt,xccbpstid,xccbpstdt FROM xccb_t WHERE xccbent=? AND xccbld=? AND xccb003=? AND xccb004=?  
       AND xccb005=? AND xccb001=? AND xccb002=? AND xccb006=? AND xccb007=? AND xccb008=? AND xccb009=?  
       FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axct301_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axct301_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL axct301_set_no_entry(p_cmd)
   #add-point:set_no_entry後 name="input.after_set_no_entry"
   
   #end add-point
 
   DISPLAY BY NAME g_xccb_m.xccbcomp,g_xccb_m.xccbld,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb_m.xccb003 
 
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:進入修改段前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="axct301.input.head" >}
   
      #單頭段
      INPUT BY NAME g_xccb_m.xccbcomp,g_xccb_m.xccbld,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb_m.xccb003  
 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前 name="input.head.b_input"
            IF l_cmd_t = 'r' THEN
               LET g_xccb_m.xccbld_desc = " "
               LET g_xccb_m.xccb003_desc = " "
               DISPLAY BY NAME g_xccb_m.xccbld_desc,g_xccb_m.xccb003_desc
            END IF
            IF p_cmd = 'a' THEN
              
               LET g_xccb_m.xccbcomp = g_site
               CALL s_fin_ld_carry('',g_user) 
                RETURNING l_success,g_xccb_m.xccbld,g_xccb_m.xccbcomp,l_errno
               #150106---fengmy--begin
               #预设当前site的法人，主账套，年度期别，成本计算类型
               CALL s_axc_set_site_default() RETURNING g_xccb_m.xccbcomp,g_xccb_m.xccbld,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb_m.xccb003
               DISPLAY BY NAME g_xccb_m.xccbcomp,g_xccb_m.xccbld,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb_m.xccb003
               CALL axct301_xccb003_desc()
               #150106---fengmy--begin
               CALL axct301_xccbld_desc()
               CALL axct301_xccbcomp_desc()

               SELECT glaa001,glaa003,glaa015,glaa016,glaa018,glaa019,glaa020,glaa022 
                 INTO g_glaa001,g_glaa003,g_glaa015,g_glaa016,g_glaa018,g_glaa019,g_glaa020,g_glaa022 
                 FROM glaa_t
                WHERE glaaent = g_enterprise AND glaald = g_xccb_m.xccbld
               IF g_glaa015 = 'N' THEN
                  CALL cl_set_comp_visible('bpage_2',FALSE)
               ELSE
                  CALL cl_set_comp_visible('bpage_2',TRUE)
               END IF
               IF g_glaa019 = 'N' THEN
                  CALL cl_set_comp_visible('bpage_3',FALSE)
               ELSE
                  CALL cl_set_comp_visible('bpage_3',TRUE)
               END IF
            END IF
            #end add-point
          
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccbcomp
            
            #add-point:AFTER FIELD xccbcomp name="input.a.xccbcomp"
            IF NOT cl_null(g_xccb_m.xccbcomp) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xccb_m.xccbcomp
               #160318-00025#11--add--str
               LET g_errshow = TRUE 
               LET g_chkparam.err_str[1] = "aoo-00095:sub-01302|aooi125|",cl_get_progname("aooi125",g_lang,"2"),"|:EXEPROGaooi125"
               #160318-00025#11--add--end
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist('v_ooef001_15') THEN
                  #檢查失敗時後續處理
                  LET g_xccb_m.xccbcomp = g_xccb_m_t.xccbcomp
                  CALL axct301_xccbcomp_desc() 
                  NEXT FIELD xccbcomp
               END IF
               IF NOT cl_null(g_xccb_m.xccbld) THEN
                  LET l_n = 0
                  SELECT COUNT(*) INTO l_n FROM glaa_t 
                   WHERE glaaent = g_enterprise AND glaald = g_xccb_m.xccbld
                     AND glaacomp = g_xccb_m.xccbcomp
                  IF l_n = 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'axc-00224'
                     LET g_errparam.extend = g_xccb_m_t.xccbcomp
                     LET g_errparam.popup = FALSE
                     CALL cl_err()

                     CALL axct301_xccbcomp_desc() 
                     NEXT FIELD xccbld
                  END IF
               END IF
#               IF p_cmd = 'a' THEN
#                  CALL cl_get_para(g_enterprise,g_xccb_m.xccbcomp,'S-FIN-6010') RETURNING g_xccb_m.xccb004
#                  CALL cl_get_para(g_enterprise,g_xccb_m.xccbcomp,'S-FIN-6011') RETURNING g_xccb_m.xccb005
#               END IF
                  DISPLAY BY NAME g_xccb_m.xccb004,g_xccb_m.xccb005
               CALL axct301_xccbcomp_desc()        {#ADP版次:1#}
               
               
                                                    
            END IF 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccbcomp
            #add-point:BEFORE FIELD xccbcomp name="input.b.xccbcomp"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccbcomp
            #add-point:ON CHANGE xccbcomp name="input.g.xccbcomp"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccbld
            
            #add-point:AFTER FIELD xccbld name="input.a.xccbld"
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xccb_m.xccbld)  AND NOT cl_null(g_xccb_m.xccb003) AND NOT cl_null(g_xccb_m.xccb004) AND NOT cl_null(g_xccb_m.xccb005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xccb_m.xccbld != g_xccbld_t  OR g_xccb_m.xccb003 != g_xccb003_t  OR g_xccb_m.xccb004 != g_xccb004_t  OR g_xccb_m.xccb005 != g_xccb005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xccb_t WHERE "||"xccbent = '" ||g_enterprise|| "' AND "||"xccbld = '"||g_xccb_m.xccbld ||"' AND "|| "xccb003 = '"||g_xccb_m.xccb003 ||"' AND "|| "xccb004 = '"||g_xccb_m.xccb004 ||"' AND "|| "xccb005 = '"||g_xccb_m.xccb005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

           IF NOT cl_null(g_xccb_m.xccbld) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xccb_m.xccbld
               #160318-00025#11--add--str
               LET g_errshow = TRUE 
               LET g_chkparam.err_str[1] = "agl-00051:sub-01302|agli010|",cl_get_progname("agli010",g_lang,"2"),"|:EXEPROGagli010"
               #160318-00025#11--add--end
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist('v_glaald') THEN
                  #檢查失敗時後續處理
                  LET g_xccb_m.xccbld = g_xccb_m_t.xccbld
                  CALL axct301_xccbld_desc()
                  NEXT FIELD xccbld
               END IF
               
               IF NOT cl_null(g_xccb_m.xccbcomp) THEN
                  LET l_n = 0
                  SELECT COUNT(*) INTO l_n FROM glaa_t 
                   WHERE glaaent = g_enterprise AND glaacomp = g_xccb_m.xccbcomp
                     AND glaald = g_xccb_m.xccbld
                  IF l_n = 0 THEN
                     CALL axct301_xccbld_desc()
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'axc-00225'
                     LET g_errparam.extend = g_xccb_m.xccbld
                     LET g_errparam.popup = FALSE
                     CALL cl_err()

                     NEXT FIELD xccbld
                  END IF
               END IF
               
               IF NOT s_ld_chk_authorization(g_user,g_xccb_m.xccbld) THEN
                  CALL axct301_xccbld_desc()
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00165'
                  LET g_errparam.extend = g_xccb_m.xccbcomp
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  NEXT FIELD xccbcomp
               END IF
               CALL axct301_xccbld_desc()
               SELECT glaa001,glaa003,glaa015,glaa016,glaa018,glaa019,glaa020,glaa022 
                 INTO g_glaa001,g_glaa003,g_glaa015,g_glaa016,g_glaa018,g_glaa019,g_glaa020,g_glaa022 
                 FROM glaa_t
                WHERE glaaent = g_enterprise 
                  AND glaald = g_xccb_m.xccbld  
               IF g_glaa015 = 'N' THEN
                  CALL cl_set_comp_visible('bpage_2',FALSE)
               ELSE
                  CALL cl_set_comp_visible('bpage_2',TRUE)
               END IF
               IF g_glaa019 = 'N' THEN
                  CALL cl_set_comp_visible('bpage_3',FALSE)
               ELSE
                  CALL cl_set_comp_visible('bpage_3',TRUE)
               END IF                  
            END IF

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccbld
            #add-point:BEFORE FIELD xccbld name="input.b.xccbld"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccbld
            #add-point:ON CHANGE xccbld name="input.g.xccbld"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb004
            #add-point:BEFORE FIELD xccb004 name="input.b.xccb004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb004
            
            #add-point:AFTER FIELD xccb004 name="input.a.xccb004"
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xccb_m.xccbld)  AND NOT cl_null(g_xccb_m.xccb003) AND NOT cl_null(g_xccb_m.xccb004) AND NOT cl_null(g_xccb_m.xccb005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xccb_m.xccbld != g_xccbld_t   OR g_xccb_m.xccb003 != g_xccb003_t  OR g_xccb_m.xccb004 != g_xccb004_t  OR g_xccb_m.xccb005 != g_xccb005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xccb_t WHERE "||"xccbent = '" ||g_enterprise|| "' AND "||"xccbld = '"||g_xccb_m.xccbld ||"' AND "|| "xccb003 = '"||g_xccb_m.xccb003 ||"' AND "|| "xccb004 = '"||g_xccb_m.xccb004 ||"' AND "|| "xccb005 = '"||g_xccb_m.xccb005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_xccb_m.xccb004) THEN
               IF NOT s_fin_date_chk_year(g_xccb_m.xccb004) THEN
                  LET g_xccb_m.xccb004 = g_xccb_m_t.xccb004
                  DISPLAY BY NAME g_xccb_m.xccb004
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'aoo-00113'
                  LET g_errparam.extend = g_xccb_m.xccb004
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD CURRENT
               END IF
                                                    
            END IF  
            IF NOT cl_null(g_xccb_m.xccb004) AND NOT cl_null(g_xccb_m.xccbcomp) THEN
               #檢查年度不小於成本關賬日期的年度
               CALL cl_get_para(g_enterprise,g_xccb_m.xccbcomp,'S-FIN-6012') RETURNING l_date
               IF g_xccb_m.xccb004 < YEAR(l_date) THEN
                  LET g_xccb_m.xccb004 = g_xccb004_t
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axc-00226'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD CURRENT
               END IF
            END IF
            IF NOT cl_null(g_xccb_m.xccb004) AND NOT cl_null(g_xccb_m.xccb005) THEN
               CALL s_fin_date_get_period_range(g_glaa003,g_xccb_m.xccb004,g_xccb_m.xccb005)
                   RETURNING l_bdate,l_edate               
            END IF

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb004
            #add-point:ON CHANGE xccb004 name="input.g.xccb004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb005
            #add-point:BEFORE FIELD xccb005 name="input.b.xccb005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb005
            
            #add-point:AFTER FIELD xccb005 name="input.a.xccb005"
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xccb_m.xccbld) AND NOT cl_null(g_xccb_m.xccb003) AND NOT cl_null(g_xccb_m.xccb004) AND NOT cl_null(g_xccb_m.xccb005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xccb_m.xccbld != g_xccbld_t  OR g_xccb_m.xccb003 != g_xccb003_t  OR g_xccb_m.xccb004 != g_xccb004_t  OR g_xccb_m.xccb005 != g_xccb005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xccb_t WHERE "||"xccbent = '" ||g_enterprise|| "' AND "||"xccbld = '"||g_xccb_m.xccbld ||"' AND "|| "xccb003 = '"||g_xccb_m.xccb003 ||"' AND "|| "xccb004 = '"||g_xccb_m.xccb004 ||"' AND "|| "xccb005 = '"||g_xccb_m.xccb005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_xccb_m.xccb005) THEN                      
               IF NOT s_fin_date_chk_period(g_glaa003,g_xccb_m.xccb004,g_xccb_m.xccb005) THEN
                  LET g_xccb_m.xccb005 = g_xccb_m_t.xccb005
                  DISPLAY BY NAME g_xccb_m.xccb005
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00106'
                  LET g_errparam.extend = g_xccb_m.xccb005
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD CURRENT
               END IF
            END IF
            IF NOT cl_null(g_xccb_m.xccb005) AND NOT cl_null(g_xccb_m.xccbcomp) THEN
               #檢查期別不小於成本關賬日期的月份
               CALL cl_get_para(g_enterprise,g_xccb_m.xccbcomp,'S-FIN-6012') RETURNING l_date
               IF g_xccb_m.xccb004 = YEAR(l_date)  THEN   #fengmy150119
               IF g_xccb_m.xccb005 <= MONTH(l_date) THEN
                  LET g_xccb_m.xccb005 = g_xccb005_t
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axc-00226'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD CURRENT
               END IF
               END IF    #fengmy150119 
            END IF
            IF NOT cl_null(g_xccb_m.xccb004) AND NOT cl_null(g_xccb_m.xccb005) THEN
               CALL s_fin_date_get_period_range(g_glaa003,g_xccb_m.xccb004,g_xccb_m.xccb005)
                   RETURNING l_bdate,l_edate               
            END IF 

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb005
            #add-point:ON CHANGE xccb005 name="input.g.xccb005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb003
            
            #add-point:AFTER FIELD xccb003 name="input.a.xccb003"
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xccb_m.xccbld) AND NOT cl_null(g_xccb_m.xccb003) AND NOT cl_null(g_xccb_m.xccb004) AND NOT cl_null(g_xccb_m.xccb005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xccb_m.xccbld != g_xccbld_t  OR g_xccb_m.xccb003 != g_xccb003_t  OR g_xccb_m.xccb004 != g_xccb004_t  OR g_xccb_m.xccb005 != g_xccb005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xccb_t WHERE "||"xccbent = '" ||g_enterprise|| "' AND "||"xccbld = '"||g_xccb_m.xccbld ||"' AND "|| "xccb003 = '"||g_xccb_m.xccb003 ||"' AND "|| "xccb004 = '"||g_xccb_m.xccb004 ||"' AND "|| "xccb005 = '"||g_xccb_m.xccb005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_xccb_m.xccb003) THEN
#此段落由子樣板a19產生
              #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
              INITIALIZE g_chkparam.* TO NULL

              #設定g_chkparam.*的參數
              LET g_chkparam.arg1 = g_xccb_m.xccb003
              #160318-00025#11--add--str
              LET g_errshow = TRUE 
              LET g_chkparam.err_str[1] = "agl-00195:sub-01302|axci100|",cl_get_progname("axci100",g_lang,"2"),"|:EXEPROGaxci100"
              #160318-00025#11--add--end
              #呼叫檢查存在並帶值的library
              IF cl_chk_exist("v_xcat001") THEN
                 #檢查成功時後續處理
                 #LET  = g_chkparam.return1
                 #DISPLAY BY NAME 
              ELSE
                 #檢查失敗時後續處理
                 LET g_xccb_m.xccb003 = g_xccb_m_t.xccb003
                 CALL axct301_xccb003_desc()
                 NEXT FIELD CURRENT
              END IF

           END IF

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb003
            #add-point:BEFORE FIELD xccb003 name="input.b.xccb003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb003
            #add-point:ON CHANGE xccb003 name="input.g.xccb003"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.xccbcomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccbcomp
            #add-point:ON ACTION controlp INFIELD xccbcomp name="input.c.xccbcomp"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xccb_m.xccbcomp             #給予default值
            LET g_qryparam.default2 = "" #g_xccb_m.ooefl003 #說明(簡稱)
            #給予arg
           #LET g_qryparam.arg1 = "" #
            IF NOT cl_null(g_xccb_m.xccbld) THEN
              LET g_qryparam.where = " ooef003 = 'Y' AND ooef017 = (SELECT glaacomp FROM glaa_t",
                      "  WHERE glaaent = '",g_enterprise,"' AND glaald = '",g_xccb_m.xccbld,"' )"
            END IF

            
            CALL q_ooef001()                                #呼叫開窗

            LET g_xccb_m.xccbcomp = g_qryparam.return1              
            #LET g_xccb_m.ooefl003 = g_qryparam.return2 
            DISPLAY g_xccb_m.xccbcomp TO xccbcomp              #
#            IF p_cmd = 'a' THEN
#               CALL cl_get_para(g_enterprise,g_xccb_m.xccbcomp,'S-FIN-6010') RETURNING g_xccb_m.xccb004
#               CALL cl_get_para(g_enterprise,g_xccb_m.xccbcomp,'S-FIN-6011') RETURNING g_xccb_m.xccb005
#               DISPLAY BY NAME g_xccb_m.xccb004,g_xccb_m.xccb005
#            END IF
            LET g_qryparam.where = NULL
            #DISPLAY g_xccb_m.ooefl003 TO ooefl003 #說明(簡稱)
            NEXT FIELD xccbcomp                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xccbld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccbld
            #add-point:ON ACTION controlp INFIELD xccbld name="input.c.xccbld"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xccb_m.xccbld             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            IF NOT cl_null(g_xccb_m.xccbcomp) THEN
               LET g_qryparam.where = " glaacomp = '",g_xccb_m.xccbcomp,"'"
            END IF
            
            CALL q_authorised_ld()                                #呼叫開窗

            LET g_xccb_m.xccbld = g_qryparam.return1     
            CALL axct301_xccbld_desc()            

            DISPLAY g_xccb_m.xccbld TO xccbld              #
            LET g_qryparam.where = NULL

            NEXT FIELD xccbld                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xccb004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb004
            #add-point:ON ACTION controlp INFIELD xccb004 name="input.c.xccb004"
            
            #END add-point
 
 
         #Ctrlp:input.c.xccb005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb005
            #add-point:ON ACTION controlp INFIELD xccb005 name="input.c.xccb005"
            
            #END add-point
 
 
         #Ctrlp:input.c.xccb003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb003
            #add-point:ON ACTION controlp INFIELD xccb003 name="input.c.xccb003"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xccb_m.xccb003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_xcat001()                                #呼叫開窗

            LET g_xccb_m.xccb003 = g_qryparam.return1              

            DISPLAY g_xccb_m.xccb003 TO xccb003              #
            CALL axct301_xccb003_desc()

            NEXT FIELD xccb003                          #返回原欄位


            #END add-point
 
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
            
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xccb_m.xccbld             
                            ,g_xccb_m.xccb003   
                            ,g_xccb_m.xccb004   
                            ,g_xccb_m.xccb005   
 
 
            #add-point:單頭修改前 name="input.head.b_after_input"
            
            #end add-point
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前 name="input.head.b_update"
               #fengmy150119--begin
               IF NOT cl_null(g_xccb_m.xccb004) AND NOT cl_null(g_xccb_m.xccbcomp) AND NOT cl_null(g_xccb_m.xccb005) THEN
                  #檢查年度不小於成本關賬日期的年度
                  CALL cl_get_para(g_enterprise,g_xccb_m.xccbcomp,'S-FIN-6012') RETURNING l_date
                  IF g_xccb_m.xccb004 < YEAR(l_date) THEN
                     LET g_xccb_m.xccb004 = g_xccb004_t
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'axc-00226'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                  
                     NEXT FIELD xccb004
                  ELSE
                     IF g_xccb_m.xccb004 = YEAR(l_date)  THEN   
                        IF g_xccb_m.xccb005 <= MONTH(l_date) THEN
                           LET g_xccb_m.xccb005 = g_xccb005_t
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = 'axc-00226'
                           LET g_errparam.extend = ''
                           LET g_errparam.popup = TRUE
                           CALL cl_err()
                     
                           NEXT FIELD xccb005
                        END IF
                     END IF   
                  END IF
               END IF
               #fengmy150119--end
               #end add-point
            
               #將遮罩欄位還原
               CALL axct301_xccb_t_mask_restore('restore_mask_o')
            
               UPDATE xccb_t SET (xccbcomp,xccbld,xccb004,xccb005,xccb003) = (g_xccb_m.xccbcomp,g_xccb_m.xccbld, 
                   g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb_m.xccb003)
                WHERE xccbent = g_enterprise AND xccbld = g_xccbld_t
                  AND xccb003 = g_xccb003_t
                  AND xccb004 = g_xccb004_t
                  AND xccb005 = g_xccb005_t
 
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xccb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xccb_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xccb_m.xccbld
               LET gs_keys_bak[1] = g_xccbld_t
               LET gs_keys[2] = g_xccb_m.xccb003
               LET gs_keys_bak[2] = g_xccb003_t
               LET gs_keys[3] = g_xccb_m.xccb004
               LET gs_keys_bak[3] = g_xccb004_t
               LET gs_keys[4] = g_xccb_m.xccb005
               LET gs_keys_bak[4] = g_xccb005_t
               LET gs_keys[5] = g_xccb_d[g_detail_idx].xccb001
               LET gs_keys_bak[5] = g_xccb_d_t.xccb001
               LET gs_keys[6] = g_xccb_d[g_detail_idx].xccb002
               LET gs_keys_bak[6] = g_xccb_d_t.xccb002
               LET gs_keys[7] = g_xccb_d[g_detail_idx].xccb006
               LET gs_keys_bak[7] = g_xccb_d_t.xccb006
               LET gs_keys[8] = g_xccb_d[g_detail_idx].xccb007
               LET gs_keys_bak[8] = g_xccb_d_t.xccb007
               LET gs_keys[9] = g_xccb_d[g_detail_idx].xccb008
               LET gs_keys_bak[9] = g_xccb_d_t.xccb008
               LET gs_keys[10] = g_xccb_d[g_detail_idx].xccb009
               LET gs_keys_bak[10] = g_xccb_d_t.xccb009
               CALL axct301_update_b('xccb_t',gs_keys,gs_keys_bak,"'1'")
                     
 
                     #add-point:單頭修改後 name="input.head.a_update"
                     
                     #end add-point
    
                     #頭先不紀錄
                     #LET g_log1 = util.JSON.stringify(g_xccb_m_t)
                     #LET g_log2 = util.JSON.stringify(g_xccb_m)
                     #IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                     #   CALL s_transaction_end('N','0')
                     #ELSE
                        CALL s_transaction_end('Y','0')
                     #END IF
               END CASE
            
               #將遮罩欄位進行遮蔽
               CALL axct301_xccb_t_mask_restore('restore_mask_n')
            
            ELSE    
               #add-point:單頭新增 name="input.head.a_insert"
               #fengmy150119--begin
               IF NOT cl_null(g_xccb_m.xccb004) AND NOT cl_null(g_xccb_m.xccbcomp) AND NOT cl_null(g_xccb_m.xccb005) THEN
                  #檢查年度不小於成本關賬日期的年度
                  CALL cl_get_para(g_enterprise,g_xccb_m.xccbcomp,'S-FIN-6012') RETURNING l_date
                  IF g_xccb_m.xccb004 < YEAR(l_date) THEN
                     LET g_xccb_m.xccb004 = g_xccb004_t
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'axc-00226'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                  
                     NEXT FIELD xccb004
                  ELSE
                     IF g_xccb_m.xccb004 = YEAR(l_date)  THEN   
                        IF g_xccb_m.xccb005 <= MONTH(l_date) THEN
                           LET g_xccb_m.xccb005 = g_xccb005_t
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = 'axc-00226'
                           LET g_errparam.extend = ''
                           LET g_errparam.popup = TRUE
                           CALL cl_err()
                     
                           NEXT FIELD xccb005
                        END IF
                     END IF   
                  END IF
               END IF
               #fengmy150119--end
               #end add-point
               
               #多語言處理
               
                         
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axct301_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            END IF
 
           LET g_xccbld_t = g_xccb_m.xccbld
           LET g_xccb003_t = g_xccb_m.xccb003
           LET g_xccb004_t = g_xccb_m.xccb004
           LET g_xccb005_t = g_xccb_m.xccb005
 
           
           IF g_xccb_d.getLength() = 0 THEN
              NEXT FIELD xccb001
           END IF
 
      END INPUT
 
{</section>}
 
{<section id="axct301.input.body" >}
      #Page1 預設值產生於此處
      INPUT ARRAY g_xccb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xccb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axct301_b_fill(g_wc2) #test 
            #如果一直都在單頭則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm' 
            #add-point:資料輸入前 name="input.body.before_input"
            LET g_current_page = 1    #fengmy150121
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axct301_idx_chk()
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axct301_cl USING g_enterprise,g_xccb_m.xccbld,g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005                          
               IF STATUS THEN
                  CLOSE axct301_cl
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct301_cl:" 
                  LET g_errparam.code   = STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            IF g_rec_b >= l_ac 
               AND g_xccb_d[l_ac].xccb001 IS NOT NULL
               AND g_xccb_d[l_ac].xccb002 IS NOT NULL
               AND g_xccb_d[l_ac].xccb006 IS NOT NULL
               AND g_xccb_d[l_ac].xccb007 IS NOT NULL
               AND g_xccb_d[l_ac].xccb008 IS NOT NULL
               AND g_xccb_d[l_ac].xccb009 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xccb_d_t.* = g_xccb_d[l_ac].*  #BACKUP
               LET g_xccb_d_o.* = g_xccb_d[l_ac].*  #BACKUP
               CALL axct301_set_entry_b(l_cmd)
               #add-point:set_entry_b後 name="input.body.before_row.set_entry_b"
               
               #end add-point
               CALL axct301_set_no_entry_b(l_cmd)
               OPEN axct301_bcl USING g_enterprise,g_xccb_m.xccbld,
                                                g_xccb_m.xccb003,
                                                g_xccb_m.xccb004,
                                                g_xccb_m.xccb005,
 
                                                g_xccb_d_t.xccb001
                                                ,g_xccb_d_t.xccb002
                                                ,g_xccb_d_t.xccb006
                                                ,g_xccb_d_t.xccb007
                                                ,g_xccb_d_t.xccb008
                                                ,g_xccb_d_t.xccb009
 
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct301_bcl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axct301_bcl INTO g_xccb_d[l_ac].xccb001,g_xccb_d[l_ac].xccb006,g_xccb_d[l_ac].xccb007, 
                      g_xccb_d[l_ac].xccb008,g_xccb_d[l_ac].xccb009,g_xccb_d[l_ac].xccb010,g_xccb_d[l_ac].xccb002, 
                      g_xccb_d[l_ac].xccb101,g_xccb_d[l_ac].xccb102,g_xccb_d[l_ac].xccb102a,g_xccb_d[l_ac].xccb102b, 
                      g_xccb_d[l_ac].xccb102c,g_xccb_d[l_ac].xccb102d,g_xccb_d[l_ac].xccb102e,g_xccb_d[l_ac].xccb102f, 
                      g_xccb_d[l_ac].xccb102g,g_xccb_d[l_ac].xccb102h,g_xccb2_d[l_ac].xccb001,g_xccb2_d[l_ac].xccb002, 
                      g_xccb2_d[l_ac].xccb007,g_xccb2_d[l_ac].xccb008,g_xccb2_d[l_ac].xccb009,g_xccb2_d[l_ac].xccbownid, 
                      g_xccb2_d[l_ac].xccbowndp,g_xccb2_d[l_ac].xccbcrtid,g_xccb2_d[l_ac].xccbcrtdp, 
                      g_xccb2_d[l_ac].xccbcrtdt,g_xccb2_d[l_ac].xccbmodid,g_xccb2_d[l_ac].xccbmoddt, 
                      g_xccb2_d[l_ac].xccbcnfid,g_xccb2_d[l_ac].xccbcnfdt,g_xccb2_d[l_ac].xccbpstid, 
                      g_xccb2_d[l_ac].xccbpstdt
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_xccb_d_t.xccb001,":",SQLERRMESSAGE 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
                      LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xccb_d_mask_o[l_ac].* =  g_xccb_d[l_ac].*
                  CALL axct301_xccb_t_mask()
                  LET g_xccb_d_mask_n[l_ac].* =  g_xccb_d[l_ac].*
                  
                  CALL axct301_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            LET g_xccb_d[l_ac].xccb001 = '1'
            #end add-point  
            
 
 
        
         BEFORE INSERT
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            INITIALIZE g_xccb_d_t.* TO NULL
            INITIALIZE g_xccb_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xccb_d[l_ac].* TO NULL
            #公用欄位預設值
            #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xccb2_d[l_ac].xccbownid = g_user
      LET g_xccb2_d[l_ac].xccbowndp = g_dept
      LET g_xccb2_d[l_ac].xccbcrtid = g_user
      LET g_xccb2_d[l_ac].xccbcrtdp = g_dept 
      LET g_xccb2_d[l_ac].xccbcrtdt = cl_get_current()
      LET g_xccb2_d[l_ac].xccbmodid = g_user
      LET g_xccb2_d[l_ac].xccbmoddt = cl_get_current()
 
 
  
            #一般欄位預設值
                  LET g_xccb_d[l_ac].xccb001 = "1"
 
            
            #add-point:modify段before備份 name="input.body.before_insert.before_bak"
            
            #end add-point
            LET g_xccb_d_t.* = g_xccb_d[l_ac].*     #新輸入資料
            LET g_xccb_d_o.* = g_xccb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axct301_set_entry_b(l_cmd)
            #add-point:set_entry_b後 name="input.body.before_insert.set_entry_b"
            
            #end add-point
            CALL axct301_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xccb_d[li_reproduce_target].* = g_xccb_d[li_reproduce].*
               LET g_xccb2_d[li_reproduce_target].* = g_xccb2_d[li_reproduce].*
 
               LET g_xccb_d[g_xccb_d.getLength()].xccb001 = NULL
               LET g_xccb_d[g_xccb_d.getLength()].xccb002 = NULL
               LET g_xccb_d[g_xccb_d.getLength()].xccb006 = NULL
               LET g_xccb_d[g_xccb_d.getLength()].xccb007 = NULL
               LET g_xccb_d[g_xccb_d.getLength()].xccb008 = NULL
               LET g_xccb_d[g_xccb_d.getLength()].xccb009 = NULL
 
            END IF
            
 
 
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xccb_t 
             WHERE xccbent = g_enterprise AND xccbld = g_xccb_m.xccbld
               AND xccb003 = g_xccb_m.xccb003
               AND xccb004 = g_xccb_m.xccb004
               AND xccb005 = g_xccb_m.xccb005
 
               AND xccb001 = g_xccb_d[l_ac].xccb001
               AND xccb002 = g_xccb_d[l_ac].xccb002
               AND xccb006 = g_xccb_d[l_ac].xccb006
               AND xccb007 = g_xccb_d[l_ac].xccb007
               AND xccb008 = g_xccb_d[l_ac].xccb008
               AND xccb009 = g_xccb_d[l_ac].xccb009
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前 name="input.body.b_insert"
               IF cl_null(g_xccb_d[l_ac].xccb002) THEN LET g_xccb_d[l_ac].xccb002 = ' ' END IF  #fengmy150119 add
               IF cl_null(g_xccb_d[l_ac].xccb008) THEN LET g_xccb_d[l_ac].xccb008 = ' ' END IF  #fengmy150119 add
               IF cl_null(g_xccb_d[l_ac].xccb009) THEN LET g_xccb_d[l_ac].xccb009 = ' ' END IF  #fengmy150119 add
               #end add-point
               INSERT INTO xccb_t
                           (xccbent,
                            xccbcomp,xccbld,xccb004,xccb005,xccb003,
                            xccb001,xccb002,xccb006,xccb007,xccb008,xccb009
                            ,xccb010,xccb101,xccb102,xccb102a,xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h,xccbownid,xccbowndp,xccbcrtid,xccbcrtdp,xccbcrtdt,xccbmodid,xccbmoddt,xccbcnfid,xccbcnfdt,xccbpstid,xccbpstdt) 
                     VALUES(g_enterprise,
                            g_xccb_m.xccbcomp,g_xccb_m.xccbld,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb_m.xccb003,
                            g_xccb_d[l_ac].xccb001,g_xccb_d[l_ac].xccb002,g_xccb_d[l_ac].xccb006,g_xccb_d[l_ac].xccb007, 
                                g_xccb_d[l_ac].xccb008,g_xccb_d[l_ac].xccb009
                            ,g_xccb_d[l_ac].xccb010,g_xccb_d[l_ac].xccb101,g_xccb_d[l_ac].xccb102,g_xccb_d[l_ac].xccb102a, 
                                g_xccb_d[l_ac].xccb102b,g_xccb_d[l_ac].xccb102c,g_xccb_d[l_ac].xccb102d, 
                                g_xccb_d[l_ac].xccb102e,g_xccb_d[l_ac].xccb102f,g_xccb_d[l_ac].xccb102g, 
                                g_xccb_d[l_ac].xccb102h,g_xccb2_d[l_ac].xccbownid,g_xccb2_d[l_ac].xccbowndp, 
                                g_xccb2_d[l_ac].xccbcrtid,g_xccb2_d[l_ac].xccbcrtdp,g_xccb2_d[l_ac].xccbcrtdt, 
                                g_xccb2_d[l_ac].xccbmodid,g_xccb2_d[l_ac].xccbmoddt,g_xccb2_d[l_ac].xccbcnfid, 
                                g_xccb2_d[l_ac].xccbcnfdt,g_xccb2_d[l_ac].xccbpstid,g_xccb2_d[l_ac].xccbpstdt) 
 
               #add-point:單身新增中 name="input.body.m_insert"
               CALL axct301_ins_xccb()
               #end add-point
               LET p_cmd = 'u'
               LET g_master_insert = TRUE
            ELSE    
               INITIALIZE g_xccb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xccb_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後 name="input.body.after_insert"
            
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               IF axct301_before_delete() THEN 
                  
 
 
 
                  #取得該筆資料key值
                  INITIALIZE gs_keys TO NULL
                  LET gs_keys[01] = g_xccb_m.xccbld
                  LET gs_keys[gs_keys.getLength()+1] = g_xccb_m.xccb003
                  LET gs_keys[gs_keys.getLength()+1] = g_xccb_m.xccb004
                  LET gs_keys[gs_keys.getLength()+1] = g_xccb_m.xccb005
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xccb_d_t.xccb001
                  LET gs_keys[gs_keys.getLength()+1] = g_xccb_d_t.xccb002
                  LET gs_keys[gs_keys.getLength()+1] = g_xccb_d_t.xccb006
                  LET gs_keys[gs_keys.getLength()+1] = g_xccb_d_t.xccb007
                  LET gs_keys[gs_keys.getLength()+1] = g_xccb_d_t.xccb008
                  LET gs_keys[gs_keys.getLength()+1] = g_xccb_d_t.xccb009
 
 
                  #刪除下層單身
                  IF NOT axct301_key_delete_b(gs_keys,'xccb_t') THEN
                     CALL s_transaction_end('N','0')
                     CLOSE axct301_bcl
                     CANCEL DELETE
                  END IF
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axct301_bcl
               LET l_count = g_xccb_d.getLength()
            END IF 
            
            #add-point:單身刪除後 name="input.body.a_delete"
            
            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE  name="input.body.after_delete"
               
               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_xccb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb001
            #add-point:BEFORE FIELD xccb001 name="input.b.page1.xccb001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb001
            
            #add-point:AFTER FIELD xccb001 name="input.a.page1.xccb001"
            #此段落由子樣板a05產生
            IF  g_xccb_m.xccbld IS NOT NULL AND g_xccb_m.xccb003 IS NOT NULL AND g_xccb_m.xccb004 IS NOT NULL AND g_xccb_m.xccb005 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb001 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb002 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb007 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xccb_m.xccbld != g_xccbld_t OR g_xccb_m.xccb003 != g_xccb003_t OR g_xccb_m.xccb004 != g_xccb004_t OR g_xccb_m.xccb005 != g_xccb005_t OR g_xccb_d[g_detail_idx].xccb001 != g_xccb_d_t.xccb001 OR g_xccb_d[g_detail_idx].xccb002 != g_xccb_d_t.xccb002 OR g_xccb_d[g_detail_idx].xccb007 != g_xccb_d_t.xccb007 OR g_xccb_d[g_detail_idx].xccb008 != g_xccb_d_t.xccb008 )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xccb_t WHERE "||"xccbent = '" ||g_enterprise|| "' AND "||"xccbld = '"||g_xccb_m.xccbld ||"' AND "|| "xccb003 = '"||g_xccb_m.xccb003 ||"' AND "|| "xccb004 = '"||g_xccb_m.xccb004 ||"' AND "|| "xccb005 = '"||g_xccb_m.xccb005 ||"' AND "|| "xccb001 = '"||g_xccb_d[g_detail_idx].xccb001 ||"' AND "|| "xccb002 = '"||g_xccb_d[g_detail_idx].xccb002 ||"' AND "|| "xccb007 = '"||g_xccb_d[g_detail_idx].xccb007 ||"' AND "|| "xccb008 = '"||g_xccb_d[g_detail_idx].xccb008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb001
            #add-point:ON CHANGE xccb001 name="input.g.page1.xccb001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb006
            #add-point:BEFORE FIELD xccb006 name="input.b.page1.xccb006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb006
            
            #add-point:AFTER FIELD xccb006 name="input.a.page1.xccb006"
            #此段落由子樣板a05產生
            IF  g_xccb_m.xccbld IS NOT NULL AND g_xccb_m.xccb003 IS NOT NULL AND g_xccb_m.xccb004 IS NOT NULL AND g_xccb_m.xccb005 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb001 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb002 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb006 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb007 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xccb_m.xccbld != g_xccbld_t OR g_xccb_m.xccb003 != g_xccb003_t OR g_xccb_m.xccb004 != g_xccb004_t OR g_xccb_m.xccb005 != g_xccb005_t OR g_xccb_d[g_detail_idx].xccb001 != g_xccb_d_t.xccb001 OR g_xccb_d[g_detail_idx].xccb002 != g_xccb_d_t.xccb002 OR g_xccb_d[g_detail_idx].xccb006 != g_xccb_d_t.xccb006 OR g_xccb_d[g_detail_idx].xccb007 != g_xccb_d_t.xccb007 OR g_xccb_d[g_detail_idx].xccb008 != g_xccb_d_t.xccb008 )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xccb_t WHERE "||"xccbent = '" ||g_enterprise|| "' AND "||"xccbld = '"||g_xccb_m.xccbld ||"' AND "|| "xccb003 = '"||g_xccb_m.xccb003 ||"' AND "|| "xccb004 = '"||g_xccb_m.xccb004 ||"' AND "|| "xccb005 = '"||g_xccb_m.xccb005 ||"' AND "|| "xccb001 = '"||g_xccb_d[g_detail_idx].xccb001 ||"' AND "|| "xccb002 = '"||g_xccb_d[g_detail_idx].xccb002 ||"' AND "|| "xccb006 = '"||g_xccb_d[g_detail_idx].xccb006 ||"' AND "|| "xccb007 = '"||g_xccb_d[g_detail_idx].xccb007 ||"' AND "|| "xccb008 = '"||g_xccb_d[g_detail_idx].xccb008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_xccb_d[g_detail_idx].xccb006) THEN
               LET l_n = 0 
               SELECT COUNT(*) INTO l_n FROM sfba_t
                WHERE sfbaent = g_enterprise  
                  AND sfbadocno = g_xccb_d[g_detail_idx].xccb006 
               IF l_n = 0 THEN
                  LET g_xccb_d[g_detail_idx].xccb006 = g_xccb_d_t.xccb006
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axc-00232'
                  LET g_errparam.extend = g_xccb_d[g_detail_idx].xccb006
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  NEXT FIELD xccb006
               END IF
               LET l_n = 0 
               SELECT COUNT(*) INTO l_n FROM sfaa_t
                WHERE sfaaent = g_enterprise  
                  AND sfaadocno = g_xccb_d[g_detail_idx].xccb006  AND sfaastus NOT IN('C','E','M','X')
               IF l_n = 0 THEN
                  LET g_xccb_d[g_detail_idx].xccb006 = g_xccb_d_t.xccb006
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axc-00233'
                  LET g_errparam.extend = g_xccb_d[g_detail_idx].xccb006
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  NEXT FIELD xccb006
               END IF
               IF NOT cl_null(g_xccb_d[g_detail_idx].xccb007) THEN
                 LET l_n = 0 
               SELECT COUNT(*) INTO l_n FROM sfba_t,sfaa_t
                WHERE sfaaent = sfbaent AND sfbadocno = sfaadocno 
                  AND sfbaent = g_enterprise AND sfba006 = g_xccb_d[g_detail_idx].xccb007 
                  AND sfaastus NOT IN('C','E','M','X')
                  AND sfbadocno = g_xccb_d[g_detail_idx].xccb006
               IF l_n = 0 THEN
                  LET g_xccb_d[g_detail_idx].xccb006 = g_xccb_d_t.xccb006
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axc-00234'
                  LET g_errparam.extend = g_xccb_d[g_detail_idx].xccb006
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  NEXT FIELD xccb006
               END IF
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb006
            #add-point:ON CHANGE xccb006 name="input.g.page1.xccb006"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb007
            
            #add-point:AFTER FIELD xccb007 name="input.a.page1.xccb007"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xccb_d[l_ac].xccb007
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaalent.imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xccb_d[l_ac].xccb007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xccb_d[l_ac].xccb007_desc


            #此段落由子樣板a05產生
            IF  g_xccb_m.xccbld IS NOT NULL AND g_xccb_m.xccb003 IS NOT NULL AND g_xccb_m.xccb004 IS NOT NULL AND g_xccb_m.xccb005 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb002 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb007 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xccb_m.xccbld != g_xccbld_t OR g_xccb_m.xccb003 != g_xccb003_t OR g_xccb_m.xccb004 != g_xccb004_t OR g_xccb_m.xccb005 != g_xccb005_t OR g_xccb_d[g_detail_idx].xccb002 != g_xccb_d_t.xccb002 OR g_xccb_d[g_detail_idx].xccb007 != g_xccb_d_t.xccb007 OR g_xccb_d[g_detail_idx].xccb008 != g_xccb_d_t.xccb008 )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xccb_t WHERE "||"xccbent = '" ||g_enterprise|| "' AND "||"xccbld = '"||g_xccb_m.xccbld ||"' AND "|| "xccb003 = '"||g_xccb_m.xccb003 ||"' AND "|| "xccb004 = '"||g_xccb_m.xccb004 ||"' AND "|| "xccb005 = '"||g_xccb_m.xccb005 ||"' AND "|| "xccb002 = '"||g_xccb_d[g_detail_idx].xccb002 ||"' AND "|| "xccb007 = '"||g_xccb_d[g_detail_idx].xccb007 ||"' AND "|| "xccb008 = '"||g_xccb_d[g_detail_idx].xccb008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_xccb_d[g_detail_idx].xccb007) THEN
               LET l_n = 0 
               SELECT COUNT(*) INTO l_n FROM sfba_t,imaa_t
                WHERE sfbaent = imaaent AND sfba006 = imaa001 AND sfbaent = g_enterprise  
                  AND sfba006 = g_xccb_d[g_detail_idx].xccb007 AND imaastus = 'Y'
               IF l_n = 0 THEN
                  LET g_xccb_d[g_detail_idx].xccb007 = g_xccb_d_t.xccb007
                  CALL axct301_xccb007_desc(g_xccb_d[g_detail_idx].xccb007) 
                    RETURNING g_xccb_d[g_detail_idx].xccb007_desc,g_xccb_d[g_detail_idx].xccb007_1_desc,g_xccb_d[g_detail_idx].xccb010
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'aim-00101'
                  LET g_errparam.extend = g_xccb_d[g_detail_idx].xccb007
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  NEXT FIELD xccb007
               END IF
               
               IF NOT cl_null(g_xccb_d[g_detail_idx].xccb006) THEN
                  LET l_n = 0 
                  SELECT COUNT(*) INTO l_n FROM sfba_t,sfaa_t
                   WHERE sfaaent = sfbaent AND sfbadocno = sfaadocno 
                     AND sfbaent = g_enterprise AND sfba006 = g_xccb_d[g_detail_idx].xccb007 
                     AND sfaastus NOT IN('C','E','M','X')
                     AND sfbadocno = g_xccb_d[g_detail_idx].xccb006
                  IF l_n = 0 THEN
                     LET g_xccb_d[g_detail_idx].xccb007 = g_xccb_d_t.xccb007
                     CALL axct301_xccb007_desc(g_xccb_d[g_detail_idx].xccb007) 
                       RETURNING g_xccb_d[g_detail_idx].xccb007_desc,g_xccb_d[g_detail_idx].xccb007_1_desc,g_xccb_d[g_detail_idx].xccb010
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'axc-00231'
                     LET g_errparam.extend = g_xccb_d[g_detail_idx].xccb007
                     LET g_errparam.popup = FALSE
                     CALL cl_err()

                     NEXT FIELD xccb007
                  END IF
               END IF
            END IF
            IF g_xccb_d[g_detail_idx].xccb008 IS NULL THEN
               LET g_xccb_d[g_detail_idx].xccb008 = ' '
            END IF
            CALL axct301_xccb007_desc(g_xccb_d[g_detail_idx].xccb007)
              RETURNING g_xccb_d[g_detail_idx].xccb007_desc,g_xccb_d[g_detail_idx].xccb007_1_desc,g_xccb_d[g_detail_idx].xccb010
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb007
            #add-point:BEFORE FIELD xccb007 name="input.b.page1.xccb007"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb007
            #add-point:ON CHANGE xccb007 name="input.g.page1.xccb007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb008
            #add-point:BEFORE FIELD xccb008 name="input.b.page1.xccb008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb008
            
            #add-point:AFTER FIELD xccb008 name="input.a.page1.xccb008"
            #此段落由子樣板a05產生
            IF  g_xccb_m.xccbld IS NOT NULL AND g_xccb_m.xccb003 IS NOT NULL AND g_xccb_m.xccb004 IS NOT NULL AND g_xccb_m.xccb005 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb002 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb007 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xccb_m.xccbld != g_xccbld_t OR g_xccb_m.xccb003 != g_xccb003_t OR g_xccb_m.xccb004 != g_xccb004_t OR g_xccb_m.xccb005 != g_xccb005_t OR g_xccb_d[g_detail_idx].xccb002 != g_xccb_d_t.xccb002 OR g_xccb_d[g_detail_idx].xccb007 != g_xccb_d_t.xccb007 OR g_xccb_d[g_detail_idx].xccb008 != g_xccb_d_t.xccb008 )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xccb_t WHERE "||"xccbent = '" ||g_enterprise|| "' AND "||"xccbld = '"||g_xccb_m.xccbld ||"' AND "|| "xccb003 = '"||g_xccb_m.xccb003 ||"' AND "|| "xccb004 = '"||g_xccb_m.xccb004 ||"' AND "|| "xccb005 = '"||g_xccb_m.xccb005 ||"' AND "|| "xccb002 = '"||g_xccb_d[g_detail_idx].xccb002 ||"' AND "|| "xccb007 = '"||g_xccb_d[g_detail_idx].xccb007 ||"' AND "|| "xccb008 = '"||g_xccb_d[g_detail_idx].xccb008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            IF g_xccb_d[g_detail_idx].xccb008 IS NULL THEN LET g_xccb_d[g_detail_idx].xccb008 = ' ' END IF  #fengmy150804
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb008
            #add-point:ON CHANGE xccb008 name="input.g.page1.xccb008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb007_1_desc
            #add-point:BEFORE FIELD xccb007_1_desc name="input.b.page1.xccb007_1_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb007_1_desc
            
            #add-point:AFTER FIELD xccb007_1_desc name="input.a.page1.xccb007_1_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb007_1_desc
            #add-point:ON CHANGE xccb007_1_desc name="input.g.page1.xccb007_1_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb009
            #add-point:BEFORE FIELD xccb009 name="input.b.page1.xccb009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb009
            
            #add-point:AFTER FIELD xccb009 name="input.a.page1.xccb009"
            #此段落由子樣板a05產生
            IF  g_xccb_m.xccbld IS NOT NULL AND g_xccb_m.xccb003 IS NOT NULL AND g_xccb_m.xccb004 IS NOT NULL AND g_xccb_m.xccb005 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb002 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb007 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb008 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb009 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xccb_m.xccbld != g_xccbld_t OR g_xccb_m.xccb003 != g_xccb003_t OR g_xccb_m.xccb004 != g_xccb004_t OR g_xccb_m.xccb005 != g_xccb005_t OR g_xccb_d[g_detail_idx].xccb002 != g_xccb_d_t.xccb002 OR g_xccb_d[g_detail_idx].xccb007 != g_xccb_d_t.xccb007 OR g_xccb_d[g_detail_idx].xccb008 != g_xccb_d_t.xccb008 OR g_xccb_d[g_detail_idx].xccb009 != g_xccb_d_t.xccb009)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xccb_t WHERE "||"xccbent = '" ||g_enterprise|| "' AND "||"xccbld = '"||g_xccb_m.xccbld ||"' AND "|| "xccb003 = '"||g_xccb_m.xccb003 ||"' AND "|| "xccb004 = '"||g_xccb_m.xccb004 ||"' AND "|| "xccb005 = '"||g_xccb_m.xccb005 ||"' AND "|| "xccb002 = '"||g_xccb_d[g_detail_idx].xccb002 ||"' AND "|| "xccb007 = '"||g_xccb_d[g_detail_idx].xccb007 ||"' AND "|| "xccb008 = '"||g_xccb_d[g_detail_idx].xccb008 ||"' AND "|| "xccb009 = '"||g_xccb_d[g_detail_idx].xccb009 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_xccb_d[g_detail_idx].xccb009) THEN
               LET l_n = 0 
               SELECT COUNT(*) INTO l_n FROM inag_t
                WHERE inagent = g_enterprise AND inag006 = g_xccb_d[g_detail_idx].xccb009
                  AND inag001 = g_xccb_d[g_detail_idx].xccb007
                  AND inagsite IN( SELECT ooef001 FROM ooef_t WHERE ooefent = g_enterprise
                  AND ooef201 = 'Y'
                  AND ooef003 = 'Y' AND ooef017 = g_xccb_m.xccbcomp)
               IF l_n = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axc-00223'
                  LET g_errparam.extend = g_xccb_d[g_detail_idx].xccb009
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET g_xccb_d[g_detail_idx].xccb009 = ' '
               LET g_xccb1_d[g_detail_idx].xccb009_1 = ' '
               LET g_xccb3_d[g_detail_idx].xccb009_3 = ' '
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb009
            #add-point:ON CHANGE xccb009 name="input.g.page1.xccb009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb010
            #add-point:BEFORE FIELD xccb010 name="input.b.page1.xccb010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb010
            
            #add-point:AFTER FIELD xccb010 name="input.a.page1.xccb010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb010
            #add-point:ON CHANGE xccb010 name="input.g.page1.xccb010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb002
            #add-point:BEFORE FIELD xccb002 name="input.b.page1.xccb002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb002
            
            #add-point:AFTER FIELD xccb002 name="input.a.page1.xccb002"
            #此段落由子樣板a05產生
            IF  g_xccb_m.xccbld IS NOT NULL AND g_xccb_m.xccb003 IS NOT NULL AND g_xccb_m.xccb004 IS NOT NULL AND g_xccb_m.xccb005 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb002 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb007 IS NOT NULL AND g_xccb_d[g_detail_idx].xccb008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xccb_m.xccbld != g_xccbld_t OR g_xccb_m.xccb003 != g_xccb003_t OR g_xccb_m.xccb004 != g_xccb004_t OR g_xccb_m.xccb005 != g_xccb005_t OR g_xccb_d[g_detail_idx].xccb002 != g_xccb_d_t.xccb002 OR g_xccb_d[g_detail_idx].xccb007 != g_xccb_d_t.xccb007 OR g_xccb_d[g_detail_idx].xccb008 != g_xccb_d_t.xccb008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xccb_t WHERE "||"xccbent = '" ||g_enterprise|| "' AND "||"xccbld = '"||g_xccb_m.xccbld ||"' AND "|| "xccb003 = '"||g_xccb_m.xccb003 ||"' AND "|| "xccb004 = '"||g_xccb_m.xccb004 ||"' AND "|| "xccb005 = '"||g_xccb_m.xccb005 ||"' AND "|| "xccb002 = '"||g_xccb_d[g_detail_idx].xccb002 ||"' AND "|| "xccb007 = '"||g_xccb_d[g_detail_idx].xccb007 ||"' AND "|| "xccb008 = '"||g_xccb_d[g_detail_idx].xccb008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_xccb_d[g_detail_idx].xccb002) THEN
               LET l_n = 0 
               SELECT COUNT(*) INTO l_n FROM xcbf_t
                WHERE xcbfent = g_enterprise AND xcbf001 = g_xccb_d[g_detail_idx].xccb002
                  AND xcbfcomp = g_xccb_m.xccbcomp
               IF l_n = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axc-00222'
                  LET g_errparam.extend = g_xccb_d[g_detail_idx].xccb002
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  NEXT FIELD CURRENT
               END IF
            END IF

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb002
            #add-point:ON CHANGE xccb002 name="input.g.page1.xccb002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb101
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xccb_d[l_ac].xccb101,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb101
            END IF 
 
 
 
            #add-point:AFTER FIELD xccb101 name="input.a.page1.xccb101"
            IF NOT cl_null(g_xccb_d[l_ac].xccb101) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb101
            #add-point:BEFORE FIELD xccb101 name="input.b.page1.xccb101"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb101
            #add-point:ON CHANGE xccb101 name="input.g.page1.xccb101"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb102
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xccb_d[l_ac].xccb102,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102
            END IF 
 
 
 
            #add-point:AFTER FIELD xccb102 name="input.a.page1.xccb102"
            IF NOT cl_null(g_xccb_d[l_ac].xccb102) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb102
            #add-point:BEFORE FIELD xccb102 name="input.b.page1.xccb102"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb102
            #add-point:ON CHANGE xccb102 name="input.g.page1.xccb102"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb102a
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xccb_d[l_ac].xccb102a,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102a
            END IF 
 
 
 
            #add-point:AFTER FIELD xccb102a name="input.a.page1.xccb102a"
            LET g_xccb_d[l_ac].xccb102a = s_curr_round(g_xccb_m.xccbcomp,g_glaa001,g_xccb_d[l_ac].xccb102a,2)
            CALL axct301_xccb102_sum()      #fengmy 150106 add
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb102a
            #add-point:BEFORE FIELD xccb102a name="input.b.page1.xccb102a"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb102a
            #add-point:ON CHANGE xccb102a name="input.g.page1.xccb102a"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb102b
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xccb_d[l_ac].xccb102b,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102b
            END IF 
 
 
 
            #add-point:AFTER FIELD xccb102b name="input.a.page1.xccb102b"

            LET g_xccb_d[l_ac].xccb102b = s_curr_round(g_xccb_m.xccbcomp,g_glaa001,g_xccb_d[l_ac].xccb102b,2)
            CALL axct301_xccb102_sum()      #fengmy 150106 add
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb102b
            #add-point:BEFORE FIELD xccb102b name="input.b.page1.xccb102b"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb102b
            #add-point:ON CHANGE xccb102b name="input.g.page1.xccb102b"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb102c
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xccb_d[l_ac].xccb102c,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102c
            END IF 
 
 
 
            #add-point:AFTER FIELD xccb102c name="input.a.page1.xccb102c"

            LET g_xccb_d[l_ac].xccb102c = s_curr_round(g_xccb_m.xccbcomp,g_glaa001,g_xccb_d[l_ac].xccb102c,2)
            CALL axct301_xccb102_sum()      #fengmy 150106 add
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb102c
            #add-point:BEFORE FIELD xccb102c name="input.b.page1.xccb102c"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb102c
            #add-point:ON CHANGE xccb102c name="input.g.page1.xccb102c"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb102d
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xccb_d[l_ac].xccb102d,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102d
            END IF 
 
 
 
            #add-point:AFTER FIELD xccb102d name="input.a.page1.xccb102d"

            LET g_xccb_d[l_ac].xccb102d = s_curr_round(g_xccb_m.xccbcomp,g_glaa001,g_xccb_d[l_ac].xccb102d,2)
            CALL axct301_xccb102_sum()      #fengmy 150106 add
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb102d
            #add-point:BEFORE FIELD xccb102d name="input.b.page1.xccb102d"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb102d
            #add-point:ON CHANGE xccb102d name="input.g.page1.xccb102d"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb102e
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xccb_d[l_ac].xccb102e,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102e
            END IF 
 
 
 
            #add-point:AFTER FIELD xccb102e name="input.a.page1.xccb102e"

            LET g_xccb_d[l_ac].xccb102e = s_curr_round(g_xccb_m.xccbcomp,g_glaa001,g_xccb_d[l_ac].xccb102e,2)
            CALL axct301_xccb102_sum()      #fengmy 150106 add
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb102e
            #add-point:BEFORE FIELD xccb102e name="input.b.page1.xccb102e"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb102e
            #add-point:ON CHANGE xccb102e name="input.g.page1.xccb102e"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb102f
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xccb_d[l_ac].xccb102f,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102f
            END IF 
 
 
 
            #add-point:AFTER FIELD xccb102f name="input.a.page1.xccb102f"

            LET g_xccb_d[l_ac].xccb102f = s_curr_round(g_xccb_m.xccbcomp,g_glaa001,g_xccb_d[l_ac].xccb102f,2)
            CALL axct301_xccb102_sum()      #fengmy 150106 add
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb102f
            #add-point:BEFORE FIELD xccb102f name="input.b.page1.xccb102f"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb102f
            #add-point:ON CHANGE xccb102f name="input.g.page1.xccb102f"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb102g
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xccb_d[l_ac].xccb102g,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102g
            END IF 
 
 
 
            #add-point:AFTER FIELD xccb102g name="input.a.page1.xccb102g"

            LET g_xccb_d[l_ac].xccb102g = s_curr_round(g_xccb_m.xccbcomp,g_glaa001,g_xccb_d[l_ac].xccb102g,2)
            CALL axct301_xccb102_sum()      #fengmy 150106 add
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb102g
            #add-point:BEFORE FIELD xccb102g name="input.b.page1.xccb102g"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb102g
            #add-point:ON CHANGE xccb102g name="input.g.page1.xccb102g"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccb102h
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xccb_d[l_ac].xccb102h,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102h
            END IF 
 
 
 
            #add-point:AFTER FIELD xccb102h name="input.a.page1.xccb102h"

            LET g_xccb_d[l_ac].xccb102h = s_curr_round(g_xccb_m.xccbcomp,g_glaa001,g_xccb_d[l_ac].xccb102h,2)
            CALL axct301_xccb102_sum()      #fengmy 150106 add
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccb102h
            #add-point:BEFORE FIELD xccb102h name="input.b.page1.xccb102h"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccb102h
            #add-point:ON CHANGE xccb102h name="input.g.page1.xccb102h"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.xccb001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb001
            #add-point:ON ACTION controlp INFIELD xccb001 name="input.c.page1.xccb001"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xccb006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb006
            #add-point:ON ACTION controlp INFIELD xccb006 name="input.c.page1.xccb006"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xccb_d[l_ac].xccb006             #給予default值
            
            IF NOT cl_null(g_xccb_d[l_ac].xccb007) THEN
               LET g_qryparam.where = " sfaastus NOT IN('C','E','M') AND sfba006 = '",g_xccb_d[l_ac].xccb007,"'"
            ELSE
               LET g_qryparam.where = " sfaastus NOT IN('C','E','M') "            
            END IF

            #給予arg

            
            CALL q_sfaadocno_4()                                #呼叫開窗

            LET g_xccb_d[l_ac].xccb006 = g_qryparam.return1       
            LET g_qryparam.where = " "            

            DISPLAY g_xccb_d[l_ac].xccb006 TO xccb006              #

            NEXT FIELD xccb006                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xccb007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb007
            #add-point:ON ACTION controlp INFIELD xccb007 name="input.c.page1.xccb007"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xccb_d[l_ac].xccb007             #給予default值
            
            IF NOT cl_null(g_xccb_d[l_ac].xccb006) THEN
               LET g_qryparam.where = " sfbadocno = '",g_xccb_d[l_ac].xccb006,"'"  
            END IF               

            #給予arg

            
            CALL q_sfba006_1()                                #呼叫開窗

            LET g_xccb_d[l_ac].xccb007 = g_qryparam.return1 
            LET g_xccb_d[l_ac].xccb008 = g_qryparam.return2            
  
            CALL axct301_xccb007_desc(g_xccb_d[l_ac].xccb007) 
              RETURNING g_xccb_d[l_ac].xccb007_desc,g_xccb_d[l_ac].xccb007_1_desc,g_xccb_d[l_ac].xccb010 
            LET g_qryparam.where = " "              

            DISPLAY g_xccb_d[l_ac].xccb007 TO xccb007              #

            NEXT FIELD xccb007                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xccb008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb008
            #add-point:ON ACTION controlp INFIELD xccb008 name="input.c.page1.xccb008"
            


            #END add-point
 
 
         #Ctrlp:input.c.page1.xccb007_1_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb007_1_desc
            #add-point:ON ACTION controlp INFIELD xccb007_1_desc name="input.c.page1.xccb007_1_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xccb009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb009
            #add-point:ON ACTION controlp INFIELD xccb009 name="input.c.page1.xccb009"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xccb_d[l_ac].xccb009             #給予default值

            #給予arg
            LET g_qryparam.where = " inajsite IN( SELECT ooef001 FROM ooef_t WHERE ", 
                  " ooefent = '",g_enterprise,"' AND ooef201 = 'Y' ",
                  " AND ooef003 = 'Y' AND ooef017 = '",g_xccb_m.xccbcomp,"' ) "
            IF NOT cl_null(g_xccb_d[l_ac].xccb007) THEN
               LET g_qryparam.where =  g_qryparam.where," AND inaj005 = '",g_xccb_d[l_ac].xccb007,"'"
            END IF

            
            CALL q_inaj010()                                #呼叫開窗

            LET g_xccb_d[l_ac].xccb009 = g_qryparam.return1     
            LET g_qryparam.where = NULL           

            DISPLAY g_xccb_d[l_ac].xccb009 TO xccb009              #

            NEXT FIELD xccb009                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xccb010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb010
            #add-point:ON ACTION controlp INFIELD xccb010 name="input.c.page1.xccb010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xccb002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb002
            #add-point:ON ACTION controlp INFIELD xccb002 name="input.c.page1.xccb002"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xccb_d[l_ac].xccb002             #給予default值
            LET g_qryparam.where = " xcbfcomp = '",g_xccb_m.xccbcomp,"'"

            #給予arg

            
            CALL q_xcbf001()                                #呼叫開窗

            LET g_xccb_d[l_ac].xccb002 = g_qryparam.return1              

            DISPLAY g_xccb_d[l_ac].xccb002 TO xccb002              #

            NEXT FIELD xccb002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.xccb101
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb101
            #add-point:ON ACTION controlp INFIELD xccb101 name="input.c.page1.xccb101"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xccb102
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb102
            #add-point:ON ACTION controlp INFIELD xccb102 name="input.c.page1.xccb102"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xccb102a
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb102a
            #add-point:ON ACTION controlp INFIELD xccb102a name="input.c.page1.xccb102a"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xccb102b
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb102b
            #add-point:ON ACTION controlp INFIELD xccb102b name="input.c.page1.xccb102b"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xccb102c
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb102c
            #add-point:ON ACTION controlp INFIELD xccb102c name="input.c.page1.xccb102c"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xccb102d
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb102d
            #add-point:ON ACTION controlp INFIELD xccb102d name="input.c.page1.xccb102d"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xccb102e
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb102e
            #add-point:ON ACTION controlp INFIELD xccb102e name="input.c.page1.xccb102e"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xccb102f
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb102f
            #add-point:ON ACTION controlp INFIELD xccb102f name="input.c.page1.xccb102f"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xccb102g
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb102g
            #add-point:ON ACTION controlp INFIELD xccb102g name="input.c.page1.xccb102g"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.xccb102h
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccb102h
            #add-point:ON ACTION controlp INFIELD xccb102h name="input.c.page1.xccb102h"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xccb_d[l_ac].* = g_xccb_d_t.*
               CLOSE axct301_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xccb_d[l_ac].xccb001 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xccb_d[l_ac].* = g_xccb_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_xccb2_d[l_ac].xccbmodid = g_user 
LET g_xccb2_d[l_ac].xccbmoddt = cl_get_current()
LET g_xccb2_d[l_ac].xccbmodid_desc = cl_get_username(g_xccb2_d[l_ac].xccbmodid)
            
               #add-point:單身修改前 name="input.body.b_update"
               IF cl_null(g_xccb_d[l_ac].xccb002) THEN LET g_xccb_d[l_ac].xccb002 = ' ' END IF  #fengmy150119 add
               IF cl_null(g_xccb_d[l_ac].xccb008) THEN LET g_xccb_d[l_ac].xccb008 = ' ' END IF  #fengmy150119 add
               IF cl_null(g_xccb_d[l_ac].xccb009) THEN LET g_xccb_d[l_ac].xccb009 = ' ' END IF  #fengmy150119 add
               #end add-point
         
               #將遮罩欄位還原
               CALL axct301_xccb_t_mask_restore('restore_mask_o')
         
               UPDATE xccb_t SET (xccbld,xccb003,xccb004,xccb005,xccb001,xccb006,xccb007,xccb008,xccb009, 
                   xccb010,xccb002,xccb101,xccb102,xccb102a,xccb102b,xccb102c,xccb102d,xccb102e,xccb102f, 
                   xccb102g,xccb102h,xccbownid,xccbowndp,xccbcrtid,xccbcrtdp,xccbcrtdt,xccbmodid,xccbmoddt, 
                   xccbcnfid,xccbcnfdt,xccbpstid,xccbpstdt) = (g_xccb_m.xccbld,g_xccb_m.xccb003,g_xccb_m.xccb004, 
                   g_xccb_m.xccb005,g_xccb_d[l_ac].xccb001,g_xccb_d[l_ac].xccb006,g_xccb_d[l_ac].xccb007, 
                   g_xccb_d[l_ac].xccb008,g_xccb_d[l_ac].xccb009,g_xccb_d[l_ac].xccb010,g_xccb_d[l_ac].xccb002, 
                   g_xccb_d[l_ac].xccb101,g_xccb_d[l_ac].xccb102,g_xccb_d[l_ac].xccb102a,g_xccb_d[l_ac].xccb102b, 
                   g_xccb_d[l_ac].xccb102c,g_xccb_d[l_ac].xccb102d,g_xccb_d[l_ac].xccb102e,g_xccb_d[l_ac].xccb102f, 
                   g_xccb_d[l_ac].xccb102g,g_xccb_d[l_ac].xccb102h,g_xccb2_d[l_ac].xccbownid,g_xccb2_d[l_ac].xccbowndp, 
                   g_xccb2_d[l_ac].xccbcrtid,g_xccb2_d[l_ac].xccbcrtdp,g_xccb2_d[l_ac].xccbcrtdt,g_xccb2_d[l_ac].xccbmodid, 
                   g_xccb2_d[l_ac].xccbmoddt,g_xccb2_d[l_ac].xccbcnfid,g_xccb2_d[l_ac].xccbcnfdt,g_xccb2_d[l_ac].xccbpstid, 
                   g_xccb2_d[l_ac].xccbpstdt)
                WHERE xccbent = g_enterprise AND xccbld = g_xccb_m.xccbld 
                 AND xccb003 = g_xccb_m.xccb003 
                 AND xccb004 = g_xccb_m.xccb004 
                 AND xccb005 = g_xccb_m.xccb005 
 
                 AND xccb001 = g_xccb_d_t.xccb001 #項次   
                 AND xccb002 = g_xccb_d_t.xccb002  
                 AND xccb006 = g_xccb_d_t.xccb006  
                 AND xccb007 = g_xccb_d_t.xccb007  
                 AND xccb008 = g_xccb_d_t.xccb008  
                 AND xccb009 = g_xccb_d_t.xccb009  
 
                 
               #add-point:單身修改中 name="input.body.m_update"

                                IF g_glaa015 = 'Y' THEN
#                  CALL s_aooi160_get_exrate('1',g_xccb_m.xccbcomp,l_bdate,g_glaa001,   #fengmy150119 mark
                    CALL s_aooi160_get_exrate('2',g_xccb_m.xccbld,g_today,g_glaa001,    #fengmy150119
                                                    #目的幣別;  交易金額;              匯類類型
                                                     g_glaa016,0,g_glaa018)
                              RETURNING l_rate
                  LET g_xccb1_d[l_ac].xccb002_1 = g_xccb_d[l_ac].xccb002
                  LET g_xccb1_d[l_ac].xccb006_1 = g_xccb_d[l_ac].xccb006
                  LET g_xccb1_d[l_ac].xccb007_1 = g_xccb_d[l_ac].xccb007
                  LET g_xccb1_d[l_ac].xccb008_1 = g_xccb_d[l_ac].xccb008
                  LET g_xccb1_d[l_ac].xccb010_1 = g_xccb_d[l_ac].xccb010
                  LET g_xccb1_d[l_ac].xccb101_1 = g_xccb_d[l_ac].xccb101
                  LET g_xccb1_d[l_ac].xccb102a_1 = g_xccb_d[l_ac].xccb102a * l_rate 
                  LET g_xccb1_d[l_ac].xccb102b_1 = g_xccb_d[l_ac].xccb102b * l_rate 
                  LET g_xccb1_d[l_ac].xccb102c_1 = g_xccb_d[l_ac].xccb102c * l_rate 
                  LET g_xccb1_d[l_ac].xccb102d_1 = g_xccb_d[l_ac].xccb102d * l_rate 
                  LET g_xccb1_d[l_ac].xccb102e_1 = g_xccb_d[l_ac].xccb102e * l_rate 
                  LET g_xccb1_d[l_ac].xccb102f_1 = g_xccb_d[l_ac].xccb102f * l_rate 
                  LET g_xccb1_d[l_ac].xccb102g_1 = g_xccb_d[l_ac].xccb102g * l_rate 
                  LET g_xccb1_d[l_ac].xccb102h_1 = g_xccb_d[l_ac].xccb102h * l_rate 
                  # fengmy 150106 add xccb102--begin
                  CALL axct301_xccb102_sum1()
                  LET g_xccb1_d[l_ac].xccb102a_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102a_1,2)
                  LET g_xccb1_d[l_ac].xccb102b_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102b_1,2)
                  LET g_xccb1_d[l_ac].xccb102c_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102c_1,2)
                  LET g_xccb1_d[l_ac].xccb102d_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102d_1,2)
                  LET g_xccb1_d[l_ac].xccb102e_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102e_1,2)
                  LET g_xccb1_d[l_ac].xccb102f_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102f_1,2)
                  LET g_xccb1_d[l_ac].xccb102g_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102g_1,2)
                  LET g_xccb1_d[l_ac].xccb102h_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102h_1,2)
                  UPDATE xccb_t SET (xccbld,xccb003,xccb004,xccb005,xccb001,xccb006,xccb007,xccb008,
                   xccb010,xccb002,xccb101,xccb102,xccb102a, 
                   xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h,xccbownid,xccbowndp, 
                   xccbcrtid,xccbcrtdp,xccbcrtdt,xccbmodid,xccbmoddt,xccbcnfid,xccbcnfdt,xccbpstid,xccbpstdt) = (g_xccb_m.xccbld, 
                   g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb1_d[l_ac].xccb001_1,g_xccb1_d[l_ac].xccb006_1, 
                   g_xccb1_d[l_ac].xccb007_1,g_xccb1_d[l_ac].xccb008_1,g_xccb1_d[l_ac].xccb010_1,
                   g_xccb1_d[l_ac].xccb002_1,g_xccb1_d[l_ac].xccb101_1,g_xccb1_d[l_ac].xccb102_1,                     
                   g_xccb1_d[l_ac].xccb102a_1,g_xccb1_d[l_ac].xccb102b_1,g_xccb1_d[l_ac].xccb102c_1,g_xccb1_d[l_ac].xccb102d_1, 
                   g_xccb1_d[l_ac].xccb102e_1,g_xccb1_d[l_ac].xccb102f_1,g_xccb1_d[l_ac].xccb102g_1,g_xccb1_d[l_ac].xccb102h_1, 
                   g_xccb2_d[l_ac].xccbownid,g_xccb2_d[l_ac].xccbowndp,g_xccb2_d[l_ac].xccbcrtid,g_xccb2_d[l_ac].xccbcrtdp, 
                   g_xccb2_d[l_ac].xccbcrtdt,g_xccb2_d[l_ac].xccbmodid,g_xccb2_d[l_ac].xccbmoddt,g_xccb2_d[l_ac].xccbcnfid, 
                   g_xccb2_d[l_ac].xccbcnfdt,g_xccb2_d[l_ac].xccbpstid,g_xccb2_d[l_ac].xccbpstdt)
                WHERE xccbent = g_enterprise AND xccbld = g_xccb_m.xccbld 
                 AND xccb003 = g_xccb_m.xccb003 
                 AND xccb004 = g_xccb_m.xccb004 
                 AND xccb005 = g_xccb_m.xccb005 
 
                 AND xccb001 = '2' #項次   
                 AND xccb002 = g_xccb_d_t.xccb002  
                 AND xccb006 = g_xccb_d_t.xccb006 
                 AND xccb007 = g_xccb_d_t.xccb007  
                 AND xccb008 = g_xccb_d_t.xccb008 
                 # fengmy 150106 add xccb102--end                 
               END IF
               
               IF g_glaa019 = 'Y' THEN
#                  CALL s_aooi160_get_exrate('1',g_xccb_m.xccbcomp,l_bdate,g_glaa001,   #fengmy150119 mark

                                                    #目的幣別;  交易金額;              匯類類型
#                                                     g_glaa016,0,g_glaa022)           #fengmy150119 mark
                    CALL s_aooi160_get_exrate('2',g_xccb_m.xccbld,g_today,g_glaa001,   #fengmy150119
                                        #目的幣別;  交易金額;              匯類類型
                                     g_glaa020,0,g_glaa022)                          #fengmy150119
                      RETURNING l_rate
                  LET g_xccb3_d[l_ac].xccb002_3 = g_xccb_d[l_ac].xccb002
                  LET g_xccb3_d[l_ac].xccb006_3 = g_xccb_d[l_ac].xccb006
                  LET g_xccb3_d[l_ac].xccb007_3 = g_xccb_d[l_ac].xccb007
                  LET g_xccb3_d[l_ac].xccb008_3 = g_xccb_d[l_ac].xccb008
                  LET g_xccb3_d[l_ac].xccb010_3 = g_xccb_d[l_ac].xccb010
                  LET g_xccb3_d[l_ac].xccb101_3 = g_xccb_d[l_ac].xccb101
                  LET g_xccb3_d[l_ac].xccb102a_3 = g_xccb_d[l_ac].xccb102a * l_rate 
                  LET g_xccb3_d[l_ac].xccb102b_3 = g_xccb_d[l_ac].xccb102b * l_rate 
                  LET g_xccb3_d[l_ac].xccb102c_3 = g_xccb_d[l_ac].xccb102c * l_rate 
                  LET g_xccb3_d[l_ac].xccb102d_3 = g_xccb_d[l_ac].xccb102d * l_rate 
                  LET g_xccb3_d[l_ac].xccb102e_3 = g_xccb_d[l_ac].xccb102e * l_rate 
                  LET g_xccb3_d[l_ac].xccb102f_3 = g_xccb_d[l_ac].xccb102f * l_rate 
                  LET g_xccb3_d[l_ac].xccb102g_3 = g_xccb_d[l_ac].xccb102g * l_rate 
                  LET g_xccb3_d[l_ac].xccb102h_3 = g_xccb_d[l_ac].xccb102h * l_rate
                  # fengmy 150106 add xccb102--begin
                  CALL axct301_xccb102_sum3()
                  LET g_xccb3_d[l_ac].xccb102a_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102a_3,2)
                  LET g_xccb3_d[l_ac].xccb102b_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102b_3,2)
                  LET g_xccb3_d[l_ac].xccb102c_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102c_3,2)
                  LET g_xccb3_d[l_ac].xccb102d_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102d_3,2)
                  LET g_xccb3_d[l_ac].xccb102e_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102e_3,2)
                  LET g_xccb3_d[l_ac].xccb102f_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102f_3,2)
                  LET g_xccb3_d[l_ac].xccb102g_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102g_3,2)
                  LET g_xccb3_d[l_ac].xccb102h_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102h_3,2)                  
                  UPDATE xccb_t SET (xccbld,xccb003,xccb004,xccb005,xccb001,xccb006,xccb007,xccb008,
                   xccb010,xccb002,xccb101,xccb102,xccb102a, 
                   xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h,xccbownid,xccbowndp, 
                   xccbcrtid,xccbcrtdp,xccbcrtdt,xccbmodid,xccbmoddt,xccbcnfid,xccbcnfdt,xccbpstid,xccbpstdt) = (g_xccb_m.xccbld, 
                   g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb3_d[l_ac].xccb001_3,g_xccb3_d[l_ac].xccb006_3, 
                   g_xccb3_d[l_ac].xccb007_3,g_xccb3_d[l_ac].xccb008_3,g_xccb3_d[l_ac].xccb010_3,
                   g_xccb3_d[l_ac].xccb002_3,g_xccb3_d[l_ac].xccb101_3,g_xccb3_d[l_ac].xccb102_3,  
                   g_xccb3_d[l_ac].xccb102a_3,g_xccb3_d[l_ac].xccb102b_3,g_xccb3_d[l_ac].xccb102c_3,g_xccb3_d[l_ac].xccb102d_3, 
                   g_xccb3_d[l_ac].xccb102e_3,g_xccb3_d[l_ac].xccb102f_3,g_xccb3_d[l_ac].xccb102g_3,g_xccb3_d[l_ac].xccb102h_3, 
                   g_xccb2_d[l_ac].xccbownid,g_xccb2_d[l_ac].xccbowndp,g_xccb2_d[l_ac].xccbcrtid,g_xccb2_d[l_ac].xccbcrtdp, 
                   g_xccb2_d[l_ac].xccbcrtdt,g_xccb2_d[l_ac].xccbmodid,g_xccb2_d[l_ac].xccbmoddt,g_xccb2_d[l_ac].xccbcnfid, 
                   g_xccb2_d[l_ac].xccbcnfdt,g_xccb2_d[l_ac].xccbpstid,g_xccb2_d[l_ac].xccbpstdt)
                WHERE xccbent = g_enterprise AND xccbld = g_xccb_m.xccbld 
                 AND xccb003 = g_xccb_m.xccb003 
                 AND xccb004 = g_xccb_m.xccb004 
                 AND xccb005 = g_xccb_m.xccb005 
 
                 AND xccb001 = '3' #項次   
                 AND xccb002 = g_xccb_d_t.xccb002  
                 AND xccb006 = g_xccb_d_t.xccb006 
                 AND xccb007 = g_xccb_d_t.xccb007  
                 AND xccb008 = g_xccb_d_t.xccb008
                 # fengmy 150106 add xccb102--end                 
              END IF
         
                
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xccb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "xccb_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xccb_m.xccbld
               LET gs_keys_bak[1] = g_xccbld_t
               LET gs_keys[2] = g_xccb_m.xccb003
               LET gs_keys_bak[2] = g_xccb003_t
               LET gs_keys[3] = g_xccb_m.xccb004
               LET gs_keys_bak[3] = g_xccb004_t
               LET gs_keys[4] = g_xccb_m.xccb005
               LET gs_keys_bak[4] = g_xccb005_t
               LET gs_keys[5] = g_xccb_d[g_detail_idx].xccb001
               LET gs_keys_bak[5] = g_xccb_d_t.xccb001
               LET gs_keys[6] = g_xccb_d[g_detail_idx].xccb002
               LET gs_keys_bak[6] = g_xccb_d_t.xccb002
               LET gs_keys[7] = g_xccb_d[g_detail_idx].xccb006
               LET gs_keys_bak[7] = g_xccb_d_t.xccb006
               LET gs_keys[8] = g_xccb_d[g_detail_idx].xccb007
               LET gs_keys_bak[8] = g_xccb_d_t.xccb007
               LET gs_keys[9] = g_xccb_d[g_detail_idx].xccb008
               LET gs_keys_bak[9] = g_xccb_d_t.xccb008
               LET gs_keys[10] = g_xccb_d[g_detail_idx].xccb009
               LET gs_keys_bak[10] = g_xccb_d_t.xccb009
               CALL axct301_update_b('xccb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     #修改歷程記錄(單身修改)
                     LET g_log1 = util.JSON.stringify(g_xccb_m),util.JSON.stringify(g_xccb_d_t)
                     LET g_log2 = util.JSON.stringify(g_xccb_m),util.JSON.stringify(g_xccb_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axct301_xccb_t_mask_restore('restore_mask_n')
               
               #若Key欄位有變動
               LET ls_keys[01] = g_xccb_m.xccbld
               LET ls_keys[ls_keys.getLength()+1] = g_xccb_m.xccb003
               LET ls_keys[ls_keys.getLength()+1] = g_xccb_m.xccb004
               LET ls_keys[ls_keys.getLength()+1] = g_xccb_m.xccb005
 
               LET ls_keys[ls_keys.getLength()+1] = g_xccb_d_t.xccb001
               LET ls_keys[ls_keys.getLength()+1] = g_xccb_d_t.xccb002
               LET ls_keys[ls_keys.getLength()+1] = g_xccb_d_t.xccb006
               LET ls_keys[ls_keys.getLength()+1] = g_xccb_d_t.xccb007
               LET ls_keys[ls_keys.getLength()+1] = g_xccb_d_t.xccb008
               LET ls_keys[ls_keys.getLength()+1] = g_xccb_d_t.xccb009
 
               CALL axct301_key_update_b(ls_keys)
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
            END IF
 
         AFTER ROW
            #add-point:input段after row name="input.body.after_row"
            
            #end add-point  
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               CLOSE axct301_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xccb_d[l_ac].* = g_xccb_d_t.*
               END IF
               EXIT DIALOG 
            END IF
 
            CLOSE axct301_bcl
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xccb_d.getLength() = 0 THEN
               NEXT FIELD xccb001
            END IF
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point    
            
         ON ACTION controlo   
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xccb_d[li_reproduce_target].* = g_xccb_d[li_reproduce].*
               LET g_xccb2_d[li_reproduce_target].* = g_xccb2_d[li_reproduce].*
 
               LET g_xccb_d[li_reproduce_target].xccb001 = NULL
               LET g_xccb_d[li_reproduce_target].xccb002 = NULL
               LET g_xccb_d[li_reproduce_target].xccb006 = NULL
               LET g_xccb_d[li_reproduce_target].xccb007 = NULL
               LET g_xccb_d[li_reproduce_target].xccb008 = NULL
               LET g_xccb_d[li_reproduce_target].xccb009 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_xccb_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xccb_d.getLength()+1
            END IF
            
      END INPUT
 
 
      
      DISPLAY ARRAY g_xccb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
      
         BEFORE ROW
            CALL axct301_b_fill(g_wc2) #test 
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_page = 2
            CALL axct301_idx_chk()
            CALL axct301_ui_detailshow()
        
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)      
         
         #add-point:page2自定義行為 name="input.body2.action"
         
         #end add-point
         
      END DISPLAY
 
      
 
      
 
    
      #add-point:input段more_input name="input.more_inputarray"
       #Page1 預設值產生於此處
      INPUT ARRAY g_xccb1_d FROM s_detail3.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = FALSE,
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xccb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axct301_b_fill1(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前
            LET g_current_page = 3    #fengmy150121
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail3")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axct301_cl USING g_enterprise,
                                               g_xccb_m.xccbld
                                               ,g_xccb_m.xccb003
                                               ,g_xccb_m.xccb004
                                               ,g_xccb_m.xccb005
 
                                               
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN axct301_cl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CLOSE axct301_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_xccb1_d[l_ac].xccb001_1 IS NOT NULL
               AND g_xccb1_d[l_ac].xccb002_1 IS NOT NULL
               AND g_xccb1_d[l_ac].xccb007_1 IS NOT NULL
               AND g_xccb1_d[l_ac].xccb008_1 IS NOT NULL
               AND g_xccb1_d[l_ac].xccb009_1 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xccb1_d_t.* = g_xccb1_d[l_ac].*  #BACKUP
               CALL axct301_set_entry_b(l_cmd)
               CALL axct301_set_no_entry_b(l_cmd)
               OPEN axct301_bcl USING g_enterprise,g_xccb_m.xccbld,
                                                g_xccb_m.xccb003,
                                                g_xccb_m.xccb004,
                                                g_xccb_m.xccb005,
 
                                                g_xccb1_d_t.xccb001_1
                                                ,g_xccb1_d_t.xccb002_1
                                                ,g_xccb1_d_t.xccb006_1
                                                ,g_xccb1_d_t.xccb007_1
                                                ,g_xccb1_d_t.xccb008_1
                                                ,g_xccb1_d_t.xccb009_1
 
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN axct301_bcl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET l_lock_sw='Y'
               ELSE
                 #add xccb102  150106 fengmy
                  FETCH axct301_bcl INTO g_xccb1_d[l_ac].xccb001_1,g_xccb1_d[l_ac].xccb006_1,g_xccb1_d[l_ac].xccb007_1, 
                      g_xccb1_d[l_ac].xccb008_1,g_xccb1_d[l_ac].xccb009_1, 
                      g_xccb1_d[l_ac].xccb010_1,g_xccb1_d[l_ac].xccb002_1,g_xccb1_d[l_ac].xccb101_1,g_xccb1_d[l_ac].xccb102_1,g_xccb1_d[l_ac].xccb102a_1, 
                      g_xccb1_d[l_ac].xccb102b_1,g_xccb1_d[l_ac].xccb102c_1,g_xccb1_d[l_ac].xccb102d_1,g_xccb1_d[l_ac].xccb102e_1, 
                      g_xccb1_d[l_ac].xccb102f_1,g_xccb1_d[l_ac].xccb102g_1,g_xccb1_d[l_ac].xccb102h_1,g_xccb2_d[l_ac].xccb001, 
                      g_xccb2_d[l_ac].xccb002,g_xccb2_d[l_ac].xccb007,g_xccb2_d[l_ac].xccb008,g_xccb2_d[l_ac].xccb009, 
                      g_xccb2_d[l_ac].xccbownid,g_xccb2_d[l_ac].xccbownid_desc,g_xccb2_d[l_ac].xccbowndp, 
                      g_xccb2_d[l_ac].xccbowndp_desc,g_xccb2_d[l_ac].xccbcrtid,g_xccb2_d[l_ac].xccbcrtid_desc, 
                      g_xccb2_d[l_ac].xccbcrtdp,g_xccb2_d[l_ac].xccbcrtdp_desc,g_xccb2_d[l_ac].xccbcrtdt, 
                      g_xccb2_d[l_ac].xccbmodid,g_xccb2_d[l_ac].xccbmodid_desc,g_xccb2_d[l_ac].xccbmoddt, 
                      g_xccb2_d[l_ac].xccbcnfid,g_xccb2_d[l_ac].xccbcnfid_desc,g_xccb2_d[l_ac].xccbcnfdt, 
                      g_xccb2_d[l_ac].xccbpstid,g_xccb2_d[l_ac].xccbpstid_desc,g_xccb2_d[l_ac].xccbpstdt 

                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL
                      LET g_errparam.code = SQLCA.sqlcode
                      LET g_errparam.extend = g_xccb1_d_t.xccb001_1
                      LET g_errparam.popup = TRUE
                      CALL cl_err()

                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axct301_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            LET g_xccb1_d[l_ac].xccb001_1 = '2'
            #end add-point  
            

         #此段落由子樣板a02產生
         AFTER FIELD xccb102a_1
            #160510-00036#1 
            IF NOT cl_ap_chk_range(g_xccb1_d[l_ac].xccb102a_1,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102a_1
            END IF
            #160510-00036#1             
            #add-point:AFTER FIELD xccb102a
            LET g_xccb1_d[l_ac].xccb102a_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102a_1,2)
            CALL axct301_xccb102_sum1()      #fengmy 150106 add
            #END add-point
            
         #此段落由子樣板a02產生
         AFTER FIELD xccb102b_1
            #160510-00036#1 
            IF NOT cl_ap_chk_range(g_xccb1_d[l_ac].xccb102b_1,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102b_1
            END IF
            #160510-00036#1             
            #add-point:AFTER FIELD xccb102b
            LET g_xccb1_d[l_ac].xccb102b_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102b_1,2)
            #END add-point
            
         #此段落由子樣板a02產生
         AFTER FIELD xccb102c_1
            #160510-00036#1 
            IF NOT cl_ap_chk_range(g_xccb1_d[l_ac].xccb102c_1,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102c_1
            END IF
            #160510-00036#1             
            #add-point:AFTER FIELD xccb102c
            LET g_xccb1_d[l_ac].xccb102c_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102c_1,2)
            CALL axct301_xccb102_sum1()      #fengmy 150106 add
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccb102d_1
            #160510-00036#1 
            IF NOT cl_ap_chk_range(g_xccb1_d[l_ac].xccb102d_1,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102d_1
            END IF
            #160510-00036#1             
            LET g_xccb1_d[l_ac].xccb102d_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102d_1,2)
            CALL axct301_xccb102_sum1()      #fengmy 150106 add
         #此段落由子樣板a02產生
         AFTER FIELD xccb102e_1
            #160510-00036#1 
            IF NOT cl_ap_chk_range(g_xccb1_d[l_ac].xccb102e_1,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102e_1
            END IF
            #160510-00036#1             
            LET g_xccb1_d[l_ac].xccb102e_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102e_1,2)
            CALL axct301_xccb102_sum1()      #fengmy 150106 add
 
         #此段落由子樣板a02產生
         AFTER FIELD xccb102f_1
            #160510-00036#1 
            IF NOT cl_ap_chk_range(g_xccb1_d[l_ac].xccb102f_1,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102f_1
            END IF
            #160510-00036#1             
            LET g_xccb1_d[l_ac].xccb102f_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102f_1,2)
            CALL axct301_xccb102_sum1()      #fengmy 150106 add
 
         #此段落由子樣板a02產生
         AFTER FIELD xccb102g_1
            #160510-00036#1 
            IF NOT cl_ap_chk_range(g_xccb1_d[l_ac].xccb102g_1,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102g_1
            END IF
            #160510-00036#1             
            LET g_xccb1_d[l_ac].xccb102g_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102g_1,2)
            CALL axct301_xccb102_sum1()      #fengmy 150106 add
 
         #此段落由子樣板a02產生
         AFTER FIELD xccb102h_1
            #160510-00036#1 
            IF NOT cl_ap_chk_range(g_xccb1_d[l_ac].xccb102h_1,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102h_1
            END IF
            #160510-00036#1            
            LET g_xccb1_d[l_ac].xccb102h_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102h_1,2)
            CALL axct301_xccb102_sum1()      #fengmy 150106 add
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_xccb1_d[l_ac].* = g_xccb1_d_t.*
               CLOSE axct301_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = g_xccb1_d[l_ac].xccb001_1
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_xccb1_d[l_ac].* = g_xccb1_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_xccb2_d[l_ac].xccbmodid = g_user 
               LET g_xccb2_d[l_ac].xccbmoddt = cl_get_current()
 
            
               #add-point:單身修改前
               LET g_xccb1_d_t.xccb001_1 = '2'
               #end add-point
               #add xccb102  150106 fengmy
               UPDATE xccb_t SET (xccbld,xccb003,xccb004,xccb005,xccb001,xccb006,xccb007,xccb008,xccb009,
                   xccb010,xccb002,xccb101,xccb102,xccb102a, 
                   xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h,xccbownid,xccbowndp, 
                   xccbcrtid,xccbcrtdp,xccbcrtdt,xccbmodid,xccbmoddt,xccbcnfid,xccbcnfdt,xccbpstid,xccbpstdt) = (g_xccb_m.xccbld, 
                   g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb1_d[l_ac].xccb001_1,g_xccb1_d[l_ac].xccb006_1, 
                   g_xccb1_d[l_ac].xccb007_1,g_xccb1_d[l_ac].xccb008_1,g_xccb1_d[l_ac].xccb009_1,g_xccb1_d[l_ac].xccb010_1,g_xccb1_d[l_ac].xccb002_1,g_xccb1_d[l_ac].xccb101_1, 
                   g_xccb1_d[l_ac].xccb102_1, g_xccb1_d[l_ac].xccb102a_1,g_xccb1_d[l_ac].xccb102b_1,g_xccb1_d[l_ac].xccb102c_1,g_xccb1_d[l_ac].xccb102d_1, 
                   g_xccb1_d[l_ac].xccb102e_1,g_xccb1_d[l_ac].xccb102f_1,g_xccb1_d[l_ac].xccb102g_1,g_xccb1_d[l_ac].xccb102h_1, 
                   g_xccb2_d[l_ac].xccbownid,g_xccb2_d[l_ac].xccbowndp,g_xccb2_d[l_ac].xccbcrtid,g_xccb2_d[l_ac].xccbcrtdp, 
                   g_xccb2_d[l_ac].xccbcrtdt,g_xccb2_d[l_ac].xccbmodid,g_xccb2_d[l_ac].xccbmoddt,g_xccb2_d[l_ac].xccbcnfid, 
                   g_xccb2_d[l_ac].xccbcnfdt,g_xccb2_d[l_ac].xccbpstid,g_xccb2_d[l_ac].xccbpstdt)
                WHERE xccbent = g_enterprise AND xccbld = g_xccb_m.xccbld 
                 AND xccb003 = g_xccb_m.xccb003 
                 AND xccb004 = g_xccb_m.xccb004 
                 AND xccb005 = g_xccb_m.xccb005 
 
                 AND xccb001 = g_xccb1_d_t.xccb001_1 #項次   
                 AND xccb002 = g_xccb1_d_t.xccb002_1  
                 AND xccb006 = g_xccb1_d_t.xccb006_1 
                 AND xccb007 = g_xccb1_d_t.xccb007_1  
                 AND xccb008 = g_xccb1_d_t.xccb008_1
                 AND xccb009 = g_xccb1_d_t.xccb009_1                  
 
                 
               #add-point:單身修改中
               #fengmy mark 150106---begin  幣二的改變不影響幣一
#               CALL s_aooi160_get_exrate('1',g_xccb_m.xccbcomp,l_bdate,g_glaa001,
#                                                 #目的幣別;  交易金額;              匯類類型
#                                                  g_glaa016,0,g_glaa018)
#                           RETURNING l_rate
#               LET g_xccb_d[l_ac].xccb102a = g_xccb1_d[l_ac].xccb102a_1 / l_rate 
#               LET g_xccb_d[l_ac].xccb102b = g_xccb1_d[l_ac].xccb102b_1 / l_rate 
#               LET g_xccb_d[l_ac].xccb102c = g_xccb1_d[l_ac].xccb102c_1 / l_rate 
#               LET g_xccb_d[l_ac].xccb102d = g_xccb1_d[l_ac].xccb102d_1 / l_rate 
#               LET g_xccb_d[l_ac].xccb102e = g_xccb1_d[l_ac].xccb102e_1 / l_rate 
#               LET g_xccb_d[l_ac].xccb102f = g_xccb1_d[l_ac].xccb102f_1 / l_rate 
#               LET g_xccb_d[l_ac].xccb102g = g_xccb1_d[l_ac].xccb102g_1 / l_rate 
#               LET g_xccb_d[l_ac].xccb102h = g_xccb1_d[l_ac].xccb102h_1 / l_rate 
#               UPDATE xccb_t SET (xccbld,xccb003,xccb004,xccb005,xccb001,xccb006,xccb007,xccb008,xccb009,
#                   xccb010,xccb002,xccb101,xccb102a, 
#                   xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h,xccbownid,xccbowndp, 
#                   xccbcrtid,xccbcrtdp,xccbcrtdt,xccbmodid,xccbmoddt,xccbcnfid,xccbcnfdt,xccbpstid,xccbpstdt) = (g_xccb_m.xccbld, 
#                   g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb_d[l_ac].xccb001,g_xccb_d[l_ac].xccb006, 
#                   g_xccb_d[l_ac].xccb007,g_xccb_d[l_ac].xccb008,g_xccb_d[l_ac].xccb009,g_xccb_d[l_ac].xccb010,g_xccb_d[l_ac].xccb002,g_xccb_d[l_ac].xccb101,                  
#                   g_xccb_d[l_ac].xccb102a,g_xccb_d[l_ac].xccb102b,g_xccb_d[l_ac].xccb102c,g_xccb_d[l_ac].xccb102d, 
#                   g_xccb_d[l_ac].xccb102e,g_xccb_d[l_ac].xccb102f,g_xccb_d[l_ac].xccb102g,g_xccb_d[l_ac].xccb102h, 
#                   g_xccb2_d[l_ac].xccbownid,g_xccb2_d[l_ac].xccbowndp,g_xccb2_d[l_ac].xccbcrtid,g_xccb2_d[l_ac].xccbcrtdp, 
#                   g_xccb2_d[l_ac].xccbcrtdt,g_xccb2_d[l_ac].xccbmodid,g_xccb2_d[l_ac].xccbmoddt,g_xccb2_d[l_ac].xccbcnfid, 
#                   g_xccb2_d[l_ac].xccbcnfdt,g_xccb2_d[l_ac].xccbpstid,g_xccb2_d[l_ac].xccbpstdt)
#                WHERE xccbent = g_enterprise AND xccbld = g_xccb_m.xccbld 
#                 AND xccb003 = g_xccb_m.xccb003 
#                 AND xccb004 = g_xccb_m.xccb004 
#                 AND xccb005 = g_xccb_m.xccb005 
# 
#                 AND xccb001 = '1' #項次   
#                 AND xccb002 = g_xccb1_d_t.xccb002_1  
#                 AND xccb006 = g_xccb1_d_t.xccb006_1 
#                 AND xccb007 = g_xccb1_d_t.xccb007_1  
#                 AND xccb008 = g_xccb1_d_t.xccb008_1 
#                 AND xccb009 = g_xccb1_d_t.xccb009_1                 
#               
#               IF g_glaa019 = 'Y' THEN
#                  CALL s_aooi160_get_exrate('1',g_xccb_m.xccbcomp,l_bdate,g_glaa001,
#                                                    #目的幣別;  交易金額;              匯類類型
#                                                     g_glaa016,0,g_glaa022)
#                      RETURNING l_rate
#                  LET g_xccb3_d[l_ac].xccb102a_3 = g_xccb_d[l_ac].xccb102a * l_rate 
#                  LET g_xccb3_d[l_ac].xccb102b_3 = g_xccb_d[l_ac].xccb102b * l_rate 
#                  LET g_xccb3_d[l_ac].xccb102c_3 = g_xccb_d[l_ac].xccb102c * l_rate 
#                  LET g_xccb3_d[l_ac].xccb102d_3 = g_xccb_d[l_ac].xccb102d * l_rate 
#                  LET g_xccb3_d[l_ac].xccb102e_3 = g_xccb_d[l_ac].xccb102e * l_rate 
#                  LET g_xccb3_d[l_ac].xccb102f_3 = g_xccb_d[l_ac].xccb102f * l_rate 
#                  LET g_xccb3_d[l_ac].xccb102g_3 = g_xccb_d[l_ac].xccb102g * l_rate 
#                  LET g_xccb3_d[l_ac].xccb102h_3 = g_xccb_d[l_ac].xccb102h * l_rate 
#                  UPDATE xccb_t SET (xccbld,xccb003,xccb004,xccb005,xccb001,xccb006,xccb007,xccb008,xccb009,
#                   xccb010,xccb002,xccb101,xccb102a, 
#                   xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h,xccbownid,xccbowndp, 
#                   xccbcrtid,xccbcrtdp,xccbcrtdt,xccbmodid,xccbmoddt,xccbcnfid,xccbcnfdt,xccbpstid,xccbpstdt) = (g_xccb_m.xccbld, 
#                   g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb3_d[l_ac].xccb001_3,g_xccb3_d[l_ac].xccb006_3, 
#                   g_xccb3_d[l_ac].xccb007_3,g_xccb3_d[l_ac].xccb008_3,g_xccb3_d[l_ac].xccb009_3,g_xccb3_d[l_ac].xccb010_3,g_xccb3_d[l_ac].xccb002_3,g_xccb3_d[l_ac].xccb101_3, 
#                   g_xccb3_d[l_ac].xccb102a_3,g_xccb3_d[l_ac].xccb102b_3,g_xccb3_d[l_ac].xccb102c_3,g_xccb3_d[l_ac].xccb102d_3, 
#                   g_xccb3_d[l_ac].xccb102e_3,g_xccb3_d[l_ac].xccb102f_3,g_xccb3_d[l_ac].xccb102g_3,g_xccb3_d[l_ac].xccb102h_3, 
#                   g_xccb2_d[l_ac].xccbownid,g_xccb2_d[l_ac].xccbowndp,g_xccb2_d[l_ac].xccbcrtid,g_xccb2_d[l_ac].xccbcrtdp, 
#                   g_xccb2_d[l_ac].xccbcrtdt,g_xccb2_d[l_ac].xccbmodid,g_xccb2_d[l_ac].xccbmoddt,g_xccb2_d[l_ac].xccbcnfid, 
#                   g_xccb2_d[l_ac].xccbcnfdt,g_xccb2_d[l_ac].xccbpstid,g_xccb2_d[l_ac].xccbpstdt)
#                WHERE xccbent = g_enterprise AND xccbld = g_xccb_m.xccbld 
#                 AND xccb003 = g_xccb_m.xccb003 
#                 AND xccb004 = g_xccb_m.xccb004 
#                 AND xccb005 = g_xccb_m.xccb005 
# 
#                 AND xccb001 = '3' #項次   
#                 AND xccb002 = g_xccb1_d_t.xccb002_1  
#                 AND xccb006 = g_xccb1_d_t.xccb006_1 
#                 AND xccb007 = g_xccb1_d_t.xccb007_1  
#                 AND xccb008 = g_xccb1_d_t.xccb008_1
#                 AND xccb009 = g_xccb1_d_t.xccb009_1                  
#              END IF
              #fengmy mark 150106---end  幣二的改變不影響幣一
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "xccb_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   CALL cl_err("xccb_t",SQLCA.sqlcode,1)  
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xccb_m.xccbld
               LET gs_keys_bak[1] = g_xccbld_t
               LET gs_keys[2] = g_xccb_m.xccb003
               LET gs_keys_bak[2] = g_xccb003_t
               LET gs_keys[3] = g_xccb_m.xccb004
               LET gs_keys_bak[3] = g_xccb004_t
               LET gs_keys[4] = g_xccb_m.xccb005
               LET gs_keys_bak[4] = g_xccb005_t
               LET gs_keys[5] = g_xccb1_d[g_detail_idx].xccb001_1
               LET gs_keys_bak[5] = g_xccb1_d_t.xccb001_1
               LET gs_keys[6] = g_xccb1_d[g_detail_idx].xccb002_1
               LET gs_keys_bak[6] = g_xccb1_d_t.xccb002_1
               LET gs_keys[7] = g_xccb1_d[g_detail_idx].xccb007_1
               LET gs_keys_bak[7] = g_xccb1_d_t.xccb007_1
               LET gs_keys[8] = g_xccb1_d[g_detail_idx].xccb008_1
               LET gs_keys_bak[8] = g_xccb1_d_t.xccb008_1
               LET gs_keys[9] = g_xccb1_d[g_detail_idx].xccb009_1
               LET gs_keys_bak[9] = g_xccb1_d_t.xccb009_1
               CALL axct301_update_b('xccb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後

               #end add-point
            END IF
 
         AFTER INPUT   
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xccb1_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xccb1_d.getLength()+1
            
      END INPUT
      
      #Page1 預設值產生於此處
      INPUT ARRAY g_xccb3_d FROM s_detail4.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = FALSE,
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xccb3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axct301_b_fill3(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前
            LET g_current_page = 4    #fengmy150119
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail3")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axct301_cl USING g_enterprise,
                                               g_xccb_m.xccbld
                                               ,g_xccb_m.xccb003
                                               ,g_xccb_m.xccb004
                                               ,g_xccb_m.xccb005
 
                                               
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN axct301_cl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CLOSE axct301_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_xccb3_d[l_ac].xccb001_3 IS NOT NULL
               AND g_xccb3_d[l_ac].xccb002_3 IS NOT NULL
               AND g_xccb3_d[l_ac].xccb007_3 IS NOT NULL
               AND g_xccb3_d[l_ac].xccb008_3 IS NOT NULL
               AND g_xccb3_d[l_ac].xccb009_3 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xccb3_d_t.* = g_xccb3_d[l_ac].*  #BACKUP
               CALL axct301_set_entry_b(l_cmd)
               CALL axct301_set_no_entry_b(l_cmd)
               OPEN axct301_bcl USING g_enterprise,g_xccb_m.xccbld,
                                                g_xccb_m.xccb003,
                                                g_xccb_m.xccb004,
                                                g_xccb_m.xccb005,
 
                                                g_xccb3_d_t.xccb001_3
                                                ,g_xccb3_d_t.xccb002_3
                                                ,g_xccb3_d_t.xccb006_3
                                                ,g_xccb3_d_t.xccb007_3
                                                ,g_xccb3_d_t.xccb008_3
                                                ,g_xccb3_d_t.xccb009_3
 
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN axct301_bcl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET l_lock_sw='Y'
               ELSE
               #fengmy add xcca102 150106---begin  
                  FETCH axct301_bcl INTO g_xccb3_d[l_ac].xccb001_3,g_xccb3_d[l_ac].xccb006_3,g_xccb3_d[l_ac].xccb007_3, 
                      g_xccb3_d[l_ac].xccb008_3,g_xccb3_d[l_ac].xccb009_3, 
                      g_xccb3_d[l_ac].xccb010_3,g_xccb3_d[l_ac].xccb002_3,g_xccb3_d[l_ac].xccb101_3,g_xccb3_d[l_ac].xccb102_3,g_xccb3_d[l_ac].xccb102a_3, 
                      g_xccb3_d[l_ac].xccb102b_3,g_xccb3_d[l_ac].xccb102c_3,g_xccb3_d[l_ac].xccb102d_3,g_xccb3_d[l_ac].xccb102e_3, 
                      g_xccb3_d[l_ac].xccb102f_3,g_xccb3_d[l_ac].xccb102g_3,g_xccb3_d[l_ac].xccb102h_3,g_xccb2_d[l_ac].xccb001, 
                      g_xccb2_d[l_ac].xccb002,g_xccb2_d[l_ac].xccb007,g_xccb2_d[l_ac].xccb008,g_xccb2_d[l_ac].xccb009,
                      g_xccb2_d[l_ac].xccbownid,g_xccb2_d[l_ac].xccbownid_desc,g_xccb2_d[l_ac].xccbowndp, 
                      g_xccb2_d[l_ac].xccbowndp_desc,g_xccb2_d[l_ac].xccbcrtid,g_xccb2_d[l_ac].xccbcrtid_desc, 
                      g_xccb2_d[l_ac].xccbcrtdp,g_xccb2_d[l_ac].xccbcrtdp_desc,g_xccb2_d[l_ac].xccbcrtdt, 
                      g_xccb2_d[l_ac].xccbmodid,g_xccb2_d[l_ac].xccbmodid_desc,g_xccb2_d[l_ac].xccbmoddt, 
                      g_xccb2_d[l_ac].xccbcnfid,g_xccb2_d[l_ac].xccbcnfid_desc,g_xccb2_d[l_ac].xccbcnfdt, 
                      g_xccb2_d[l_ac].xccbpstid,g_xccb2_d[l_ac].xccbpstid_desc,g_xccb2_d[l_ac].xccbpstdt 

                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL
                      LET g_errparam.code = SQLCA.sqlcode
                      LET g_errparam.extend = g_xccb1_d_t.xccb001_1
                      LET g_errparam.popup = TRUE
                      CALL cl_err()

                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axct301_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            LET g_xccb3_d[l_ac].xccb001_3 = '3'
            #end add-point  
           
        
 
         #此段落由子樣板a02產生
         AFTER FIELD xccb102a_3
            #160510-00036#1 
            IF NOT cl_ap_chk_range(g_xccb3_d[l_ac].xccb102a_3,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102a_3
            END IF
            #160510-00036#1            
            #add-point:AFTER FIELD xccb102a
            LET g_xccb3_d[l_ac].xccb102a_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102a_3,2)
            CALL axct301_xccb102_sum3()      #fengmy 150106 add
            #END add-point
            
         #此段落由子樣板a02產生
         AFTER FIELD xccb102b_3
            #160510-00036#1 
            IF NOT cl_ap_chk_range(g_xccb3_d[l_ac].xccb102b_3,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102b_3
            END IF
            #160510-00036#1            
            #add-point:AFTER FIELD xccb102b
            LET g_xccb3_d[l_ac].xccb102b_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102b_3,2)
            CALL axct301_xccb102_sum3()      #fengmy 150106 add
            #END add-point
            
         #此段落由子樣板a02產生
         AFTER FIELD xccb102c_3
            #160510-00036#1 
            IF NOT cl_ap_chk_range(g_xccb3_d[l_ac].xccb102c_3,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102c_3
            END IF
            #160510-00036#1            
            #add-point:AFTER FIELD xccb102c
            LET g_xccb3_d[l_ac].xccb102c_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102c_3,2)
            CALL axct301_xccb102_sum3()      #fengmy 150106 add
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccb102d_3
            #160510-00036#1 
            IF NOT cl_ap_chk_range(g_xccb3_d[l_ac].xccb102d_3,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102d_3
            END IF
            #160510-00036#1             
            LET g_xccb3_d[l_ac].xccb102d_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102d_3,2)
            CALL axct301_xccb102_sum3()      #fengmy 150106 add
           
         #此段落由子樣板a02產生
         AFTER FIELD xccb102e_3
            #160510-00036#1 
            IF NOT cl_ap_chk_range(g_xccb3_d[l_ac].xccb102e_3,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102e_3
            END IF
            #160510-00036#1            
            LET g_xccb3_d[l_ac].xccb102e_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102e_3,2)
            CALL axct301_xccb102_sum3()      #fengmy 150106 add
 
         #此段落由子樣板a02產生
         AFTER FIELD xccb102f_3
            #160510-00036#1 
            IF NOT cl_ap_chk_range(g_xccb3_d[l_ac].xccb102f_3,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102f_3
            END IF
            #160510-00036#1            
            LET g_xccb3_d[l_ac].xccb102f_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102f_3,2)
            CALL axct301_xccb102_sum3()      #fengmy 150106 add
 
         #此段落由子樣板a02產生
         AFTER FIELD xccb102g_3
            #160510-00036#1 
            IF NOT cl_ap_chk_range(g_xccb3_d[l_ac].xccb102g_3,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102g_3
            END IF
            #160510-00036#1            
            LET g_xccb3_d[l_ac].xccb102g_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102g_3,2)
            CALL axct301_xccb102_sum3()      #fengmy 150106 add
 
         #此段落由子樣板a02產生
         AFTER FIELD xccb102h_3
            #160510-00036#1 
            IF NOT cl_ap_chk_range(g_xccb3_d[l_ac].xccb102h_3,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xccb102h_3
            END IF
            #160510-00036#1            
            LET g_xccb3_d[l_ac].xccb102h_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102h_3,2)
            CALL axct301_xccb102_sum3()      #fengmy 150106 add
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_xccb3_d[l_ac].* = g_xccb3_d_t.*
               CLOSE axct301_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = g_xccb3_d[l_ac].xccb001_3
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_xccb3_d[l_ac].* = g_xccb3_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_xccb2_d[l_ac].xccbmodid = g_user 
               LET g_xccb2_d[l_ac].xccbmoddt = cl_get_current()
 
            
               #add-point:單身修改前
               LET g_xccb3_d_t.xccb001_3 = '3'
               #end add-point
               #fengmy 150106 add xccb102 
               UPDATE xccb_t SET (xccbld,xccb003,xccb004,xccb005,xccb001,xccb006,xccb007,xccb008,xccb009, 
                   xccb010,xccb002,xccb101,xccb102,xxccb102a, 
                   xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h,xccbownid,xccbowndp, 
                   xccbcrtid,xccbcrtdp,xccbcrtdt,xccbmodid,xccbmoddt,xccbcnfid,xccbcnfdt,xccbpstid,xccbpstdt) = (g_xccb_m.xccbld, 
                   g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb3_d[l_ac].xccb001_3,g_xccb3_d[l_ac].xccb006_3, 
                   g_xccb3_d[l_ac].xccb007_3,g_xccb3_d[l_ac].xccb008_3,g_xccb3_d[l_ac].xccb009_3,g_xccb3_d[l_ac].xccb010_3,g_xccb3_d[l_ac].xccb002_3,g_xccb3_d[l_ac].xccb101_3,                 
                   g_xccb3_d[l_ac].xccb102_3,g_xccb3_d[l_ac].xccb102a_3,g_xccb3_d[l_ac].xccb102b_3,g_xccb3_d[l_ac].xccb102c_3,g_xccb3_d[l_ac].xccb102d_3, 
                   g_xccb3_d[l_ac].xccb102e_3,g_xccb3_d[l_ac].xccb102f_3,g_xccb3_d[l_ac].xccb102g_3,g_xccb3_d[l_ac].xccb102h_3, 
                   g_xccb2_d[l_ac].xccbownid,g_xccb2_d[l_ac].xccbowndp,g_xccb2_d[l_ac].xccbcrtid,g_xccb2_d[l_ac].xccbcrtdp, 
                   g_xccb2_d[l_ac].xccbcrtdt,g_xccb2_d[l_ac].xccbmodid,g_xccb2_d[l_ac].xccbmoddt,g_xccb2_d[l_ac].xccbcnfid, 
                   g_xccb2_d[l_ac].xccbcnfdt,g_xccb2_d[l_ac].xccbpstid,g_xccb2_d[l_ac].xccbpstdt)
                WHERE xccbent = g_enterprise AND xccbld = g_xccb_m.xccbld 
                 AND xccb003 = g_xccb_m.xccb003 
                 AND xccb004 = g_xccb_m.xccb004 
                 AND xccb005 = g_xccb_m.xccb005 
 
                 AND xccb001 = g_xccb3_d_t.xccb001_3 #項次   
                 AND xccb002 = g_xccb3_d_t.xccb002_3  
                 AND xccb006 = g_xccb3_d_t.xccb006_3 
                 AND xccb007 = g_xccb3_d_t.xccb007_3  
                 AND xccb008 = g_xccb3_d_t.xccb008_3
                 AND xccb009 = g_xccb3_d_t.xccb009_3                  
 
                 
               #add-point:單身修改中
               #幣三的改變不影響幣一 fengmy mark 150106---begin  
#                  CALL s_aooi160_get_exrate('1',g_xccb_m.xccbcomp,l_bdate,g_glaa001,
#                                                    #目的幣別;  交易金額;              匯類類型
#                                                     g_glaa016,0,g_glaa022)
#                              RETURNING l_rate
#                  LET g_xccb_d[l_ac].xccb102a = g_xccb3_d[l_ac].xccb102a_3 / l_rate 
#                  LET g_xccb_d[l_ac].xccb102b = g_xccb3_d[l_ac].xccb102b_3 / l_rate 
#                  LET g_xccb_d[l_ac].xccb102c = g_xccb3_d[l_ac].xccb102c_3 / l_rate 
#                  LET g_xccb_d[l_ac].xccb102d = g_xccb3_d[l_ac].xccb102d_3 / l_rate 
#                  LET g_xccb_d[l_ac].xccb102e = g_xccb3_d[l_ac].xccb102e_3 / l_rate 
#                  LET g_xccb_d[l_ac].xccb102f = g_xccb3_d[l_ac].xccb102f_3 / l_rate 
#                  LET g_xccb_d[l_ac].xccb102g = g_xccb3_d[l_ac].xccb102g_3 / l_rate 
#                  LET g_xccb_d[l_ac].xccb102h = g_xccb3_d[l_ac].xccb102h_3 / l_rate 
#                  UPDATE xccb_t SET (xccbld,xccb003,xccb004,xccb005,xccb001,xccb006,xccb007,xccb008,xccb009,
#                   xccb010,xccb002,xccb101,xccb102a, 
#                   xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h,xccbownid,xccbowndp, 
#                   xccbcrtid,xccbcrtdp,xccbcrtdt,xccbmodid,xccbmoddt,xccbcnfid,xccbcnfdt,xccbpstid,xccbpstdt) = (g_xccb_m.xccbld, 
#                   g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb_d[l_ac].xccb001,g_xccb_d[l_ac].xccb006, 
#                   g_xccb_d[l_ac].xccb007,g_xccb_d[l_ac].xccb008,g_xccb_d[l_ac].xccb009,g_xccb_d[l_ac].xccb010,g_xccb_d[l_ac].xccb002,g_xccb_d[l_ac].xccb101, 
#                   g_xccb_d[l_ac].xccb102a,g_xccb_d[l_ac].xccb102b,g_xccb_d[l_ac].xccb102c,g_xccb_d[l_ac].xccb102d, 
#                   g_xccb_d[l_ac].xccb102e,g_xccb_d[l_ac].xccb102f,g_xccb_d[l_ac].xccb102g,g_xccb_d[l_ac].xccb102h, 
#                   g_xccb2_d[l_ac].xccbownid,g_xccb2_d[l_ac].xccbowndp,g_xccb2_d[l_ac].xccbcrtid,g_xccb2_d[l_ac].xccbcrtdp, 
#                   g_xccb2_d[l_ac].xccbcrtdt,g_xccb2_d[l_ac].xccbmodid,g_xccb2_d[l_ac].xccbmoddt,g_xccb2_d[l_ac].xccbcnfid, 
#                   g_xccb2_d[l_ac].xccbcnfdt,g_xccb2_d[l_ac].xccbpstid,g_xccb2_d[l_ac].xccbpstdt)
#                WHERE xccbent = g_enterprise AND xccbld = g_xccb_m.xccbld 
#                 AND xccb003 = g_xccb_m.xccb003 
#                 AND xccb004 = g_xccb_m.xccb004 
#                 AND xccb005 = g_xccb_m.xccb005 
# 
#                 AND xccb001 = '1' #項次   
#                 AND xccb002 = g_xccb3_d_t.xccb002_3  
#                 AND xccb006 = g_xccb3_d_t.xccb006_3 
#                 AND xccb007 = g_xccb3_d_t.xccb007_3  
#                 AND xccb008 = g_xccb3_d_t.xccb008_3
#                 AND xccb009 = g_xccb3_d_t.xccb009_3                 
#               
#               IF g_glaa015 = 'Y' THEN
#                  CALL s_aooi160_get_exrate('1',g_xccb_m.xccbcomp,l_bdate,g_glaa001,
#                                                    #目的幣別;  交易金額;              匯類類型
#                                                     g_glaa016,0,g_glaa018)
#                      RETURNING l_rate
#                  LET g_xccb1_d[l_ac].xccb102a_1 = g_xccb_d[l_ac].xccb102a * l_rate
#                  LET g_xccb1_d[l_ac].xccb102b_1 = g_xccb_d[l_ac].xccb102b * l_rate
#                  LET g_xccb1_d[l_ac].xccb102c_1 = g_xccb_d[l_ac].xccb102c * l_rate
#                  LET g_xccb1_d[l_ac].xccb102d_1 = g_xccb_d[l_ac].xccb102d * l_rate
#                  LET g_xccb1_d[l_ac].xccb102e_1 = g_xccb_d[l_ac].xccb102e * l_rate
#                  LET g_xccb1_d[l_ac].xccb102f_1 = g_xccb_d[l_ac].xccb102f * l_rate
#                  LET g_xccb1_d[l_ac].xccb102g_1 = g_xccb_d[l_ac].xccb102g * l_rate
#                  LET g_xccb1_d[l_ac].xccb102h_1 = g_xccb_d[l_ac].xccb102h * l_rate
#                  
#                  UPDATE xccb_t SET (xccbld,xccb003,xccb004,xccb005,xccb001,xccb006,xccb007,xccb008,xccb009,
#                   xccb010,xccb002,xccb101,xccb102a, 
#                   xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h,xccbownid,xccbowndp, 
#                   xccbcrtid,xccbcrtdp,xccbcrtdt,xccbmodid,xccbmoddt,xccbcnfid,xccbcnfdt,xccbpstid,xccbpstdt) = (g_xccb_m.xccbld, 
#                   g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb1_d[l_ac].xccb001_1,g_xccb1_d[l_ac].xccb006_1, 
#                   g_xccb1_d[l_ac].xccb007_1,g_xccb1_d[l_ac].xccb008_1,g_xccb1_d[l_ac].xccb009_1,g_xccb1_d[l_ac].xccb010_1,g_xccb1_d[l_ac].xccb002_1,g_xccb1_d[l_ac].xccb101_1,
#                   g_xccb1_d[l_ac].xccb102a_1,g_xccb1_d[l_ac].xccb102b_1,g_xccb1_d[l_ac].xccb102c_1,g_xccb1_d[l_ac].xccb102d_1, 
#                   g_xccb1_d[l_ac].xccb102e_1,g_xccb1_d[l_ac].xccb102f_1,g_xccb1_d[l_ac].xccb102g_1,g_xccb1_d[l_ac].xccb102h_1, 
#                   g_xccb2_d[l_ac].xccbownid,g_xccb2_d[l_ac].xccbowndp,g_xccb2_d[l_ac].xccbcrtid,g_xccb2_d[l_ac].xccbcrtdp, 
#                   g_xccb2_d[l_ac].xccbcrtdt,g_xccb2_d[l_ac].xccbmodid,g_xccb2_d[l_ac].xccbmoddt,g_xccb2_d[l_ac].xccbcnfid, 
#                   g_xccb2_d[l_ac].xccbcnfdt,g_xccb2_d[l_ac].xccbpstid,g_xccb2_d[l_ac].xccbpstdt)
#                WHERE xccbent = g_enterprise AND xccbld = g_xccb_m.xccbld 
#                 AND xccb003 = g_xccb_m.xccb003 
#                 AND xccb004 = g_xccb_m.xccb004 
#                 AND xccb005 = g_xccb_m.xccb005 
# 
#                 AND xccb001 = '2' #項次   
#                 AND xccb002 = g_xccb3_d_t.xccb002_3  
#                 AND xccb006 = g_xccb3_d_t.xccb006_3 
#                 AND xccb007 = g_xccb3_d_t.xccb007_3  
#                 AND xccb008 = g_xccb3_d_t.xccb008_3 
#                 AND xccb009 = g_xccb3_d_t.xccb009_3                 
#               END IF
               #幣三的改變不影響幣一 fengmy mark 150106---end  
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "xccb_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   CALL cl_err("xccb_t",SQLCA.sqlcode,1)  
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xccb_m.xccbld
               LET gs_keys_bak[1] = g_xccbld_t
               LET gs_keys[2] = g_xccb_m.xccb003
               LET gs_keys_bak[2] = g_xccb003_t
               LET gs_keys[3] = g_xccb_m.xccb004
               LET gs_keys_bak[3] = g_xccb004_t
               LET gs_keys[4] = g_xccb_m.xccb005
               LET gs_keys_bak[4] = g_xccb005_t
               LET gs_keys[5] = g_xccb3_d[g_detail_idx].xccb001_3
               LET gs_keys_bak[5] = g_xccb3_d_t.xccb001_3
               LET gs_keys[6] = g_xccb3_d[g_detail_idx].xccb002_3
               LET gs_keys_bak[6] = g_xccb3_d_t.xccb002_3
               LET gs_keys[7] = g_xccb3_d[g_detail_idx].xccb007_3
               LET gs_keys_bak[7] = g_xccb3_d_t.xccb007_3
               LET gs_keys[8] = g_xccb3_d[g_detail_idx].xccb008_3
               LET gs_keys_bak[8] = g_xccb3_d_t.xccb008_3
               LET gs_keys[9] = g_xccb3_d[g_detail_idx].xccb009_3
               LET gs_keys_bak[9] = g_xccb3_d_t.xccb009_3
               CALL axct301_update_b('xccb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後

               #end add-point
            END IF
 
         AFTER INPUT   
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xccb3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xccb3_d.getLength()+1
            
      END INPUT
      #end add-point    
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()    
         #add-point:input段before_dialog name="input.before_dialog"
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xccbcomp
        ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xccb002
               WHEN "s_detail2"
                  NEXT FIELD xccb002_2
 
            END CASE
         END IF
         #end add-point 
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xccbld
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xccb001
               WHEN "s_detail2"
                  NEXT FIELD xccb001_2
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #將畫面指標同步到當下指定的位置上
   CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
 
   
   #add-point:input段after_input name="input.after_input"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axct301_show()
   #add-point:show段define name="show.define_customerization"
   
   #end add-point
   #add-point:show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE l_date  DATE
   #end add-point
   
   #add-point:Function前置處理  name="show.before"
   #fengmy 150119----begin
   #根據參數顯示隱藏成本域 和 料件特性
   IF cl_null(g_xccb_m.xccbcomp) THEN
      CALL cl_get_para(g_enterprise,g_site,'S-FIN-6001') RETURNING g_para_data   #采用成本域否
      CALL cl_get_para(g_enterprise,g_site,'S-FIN-6013') RETURNING g_para_data1   #采用成本域否       
   ELSE
      CALL cl_get_para(g_enterprise,g_xccb_m.xccbcomp,'S-FIN-6001') RETURNING g_para_data   #采用成本域否
      CALL cl_get_para(g_enterprise,g_xccb_m.xccbcomp,'S-FIN-6013') RETURNING g_para_data1   #采用成本域否       
   END IF              
   IF g_para_data = 'Y' THEN
      CALL cl_set_comp_visible('xccb002,xccb002_desc,xccb002_1,xccb002_1_desc,xccb002_3,xccb002_3_desc',TRUE)                    
   ELSE
      CALL cl_set_comp_visible('xccb002,xccb002_desc,xccb002_1,xccb002_1_desc,xccb002_3,xccb002_3_desc',FALSE)                
   END IF   
   IF g_para_data1 = 'Y' THEN
      CALL cl_set_comp_visible('xccb008,xccb008_1,xccb008_3',TRUE)                    
   ELSE
      CALL cl_set_comp_visible('xccb008,xccb008_1,xccb008_3',FALSE)                
   END IF   
   #fengmy 150119----end
   SELECT glaa001,glaa003,glaa015,glaa016,glaa018,glaa019,glaa020,glaa022 
     INTO g_glaa001,g_glaa003,g_glaa015,g_glaa016,g_glaa018,g_glaa019,g_glaa020,g_glaa022 
     FROM glaa_t
    WHERE glaaent = g_enterprise AND glaald = g_xccb_m.xccbld
   #檢查年度期別>=關賬日期，則不可修改刪除
   CALL cl_get_para(g_enterprise,g_xccb_m.xccbcomp,'S-FIN-6012') RETURNING l_date
   IF g_xccb_m.xccb004 < YEAR(l_date) THEN
      CALL cl_set_act_visible("modify,modify_detail,delete", FALSE)
   ELSE
      IF g_xccb_m.xccb004 =  YEAR(l_date) THEN
         IF g_xccb_m.xccb005 < MONTH(l_date) THEN
            CALL cl_set_act_visible("modify,modify_detail,delete", FALSE)
          ELSE
            CALL cl_set_act_visible("modify,modify_detail,delete", TRUE)
         END IF
      ELSE
         CALL cl_set_act_visible("modify,modify_detail,delete", TRUE)
      END IF
   END IF
   IF g_glaa015 = 'N' THEN
      CALL cl_set_comp_visible('bpage_2',FALSE)
   ELSE
      CALL cl_set_comp_visible('bpage_2',TRUE)
   END IF
   IF g_glaa019 = 'N' THEN
      CALL cl_set_comp_visible('bpage_3',FALSE)
   ELSE
      CALL cl_set_comp_visible('bpage_3',TRUE)
   END IF
   IF g_bfill = "Y" THEN
      CALL axct301_b_fill1(g_wc2) #單身填充
      CALL axct301_b_fill3(g_wc2) #單身填充
   END IF
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL axct301_b_fill(g_wc2) #第一階單身填充
      CALL axct301_b_fill2('0')  #第二階單身填充
   END IF
   
   
 
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL axct301_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   DISPLAY BY NAME g_xccb_m.xccbcomp,g_xccb_m.xccbcomp_desc,g_xccb_m.xccbld,g_xccb_m.xccbld_desc,g_xccb_m.xccb004, 
       g_xccb_m.xccb005,g_xccb_m.xccb003,g_xccb_m.xccb003_desc
 
   CALL axct301_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後 name="show.after"
   CALL axct301_b_fill1(g_wc3) #單身填充
   CALL axct301_b_fill3(g_wc3) #單身填充
   CALL cl_show_fld_cont() 
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.ref_show" >}
#+ 帶出reference資料
PRIVATE FUNCTION axct301_ref_show()
   #add-point:ref_show段define name="ref_show.define_customerization"
   
   #end add-point 
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ref_show.define"
   DEFINE l_xccb010  LIKE xccb_t.xccb010  #fengmy150121
   #end add-point
   
   #add-point:Function前置處理  name="ref_show.pre_function"
   
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference name="ref_show.head.reference"

#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xccb_m.xccbcomp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_xccb_m.xccbcomp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xccb_m.xccbcomp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xccb_m.xccbld
#            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_xccb_m.xccbld_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xccb_m.xccbld_desc
            
            CALL axct301_xccb001_ref()
#            CALL axct301_xccb003_desc()

   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xccb_d.getLength()
      #add-point:ref_show段d_reference name="ref_show.body.reference"
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xccb_d[l_ac].xccb007
#            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaalent.imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_xccb_d[l_ac].xccb007_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xccb_d[l_ac].xccb007_desc
      IF  cl_null(g_xccb_d[l_ac].xccb010) THEN   #fengmy150121    
            CALL axct301_xccb007_desc(g_xccb_d[l_ac].xccb007) 
              RETURNING g_xccb_d[l_ac].xccb007_desc,g_xccb_d[l_ac].xccb007_1_desc,g_xccb_d[l_ac].xccb010  
      ELSE
           CALL axct301_xccb007_desc(g_xccb_d[l_ac].xccb007) 
              RETURNING g_xccb_d[l_ac].xccb007_desc,g_xccb_d[l_ac].xccb007_1_desc,l_xccb010  
      END IF  #fengmy150121
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xccb2_d.getLength()
      #add-point:ref_show段d2_reference name="ref_show.body2.reference"

#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xccb2_d[l_ac].xccbownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_xccb2_d[l_ac].xccbownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xccb2_d[l_ac].xccbownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xccb2_d[l_ac].xccbowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_xccb2_d[l_ac].xccbowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xccb2_d[l_ac].xccbowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xccb2_d[l_ac].xccbcrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_xccb2_d[l_ac].xccbcrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xccb2_d[l_ac].xccbcrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xccb2_d[l_ac].xccbcrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_xccb2_d[l_ac].xccbcrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xccb2_d[l_ac].xccbcrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xccb2_d[l_ac].xccbmodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_xccb2_d[l_ac].xccbmodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xccb2_d[l_ac].xccbmodid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xccb2_d[l_ac].xccbcnfid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_xccb2_d[l_ac].xccbcnfid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xccb2_d[l_ac].xccbcnfid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xccb2_d[l_ac].xccbpstid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_xccb2_d[l_ac].xccbpstid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xccb2_d[l_ac].xccbpstid_desc

      #end add-point
   END FOR
 
   
   #add-point:ref_show段自訂 name="ref_show.other_reference"
   
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION
 
{</section>}
 
{<section id="axct301.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axct301_reproduce()
   #add-point:reproduce段define name="reproduce.define_customerization"
   
   #end add-point
   DEFINE l_newno     LIKE xccb_t.xccbld 
   DEFINE l_oldno     LIKE xccb_t.xccbld 
   DEFINE l_newno02     LIKE xccb_t.xccb003 
   DEFINE l_oldno02     LIKE xccb_t.xccb003 
   DEFINE l_newno03     LIKE xccb_t.xccb004 
   DEFINE l_oldno03     LIKE xccb_t.xccb004 
   DEFINE l_newno04     LIKE xccb_t.xccb005 
   DEFINE l_oldno04     LIKE xccb_t.xccb005 
 
   DEFINE l_master    RECORD LIKE xccb_t.*
   DEFINE l_detail    RECORD LIKE xccb_t.*
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_xccb_m.xccbld IS NULL
      OR g_xccb_m.xccb003 IS NULL
      OR g_xccb_m.xccb004 IS NULL
      OR g_xccb_m.xccb005 IS NULL
 
      THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_xccbld_t = g_xccb_m.xccbld
   LET g_xccb003_t = g_xccb_m.xccb003
   LET g_xccb004_t = g_xccb_m.xccb004
   LET g_xccb005_t = g_xccb_m.xccb005
 
   
   LET g_xccb_m.xccbld = ""
   LET g_xccb_m.xccb003 = ""
   LET g_xccb_m.xccb004 = ""
   LET g_xccb_m.xccb005 = ""
 
   LET g_master_insert = FALSE
   CALL axct301_set_entry('a')
   CALL axct301_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #清空key欄位的desc
      LET g_xccb_m.xccbld_desc = ''
   DISPLAY BY NAME g_xccb_m.xccbld_desc
   LET g_xccb_m.xccb003_desc = ''
   DISPLAY BY NAME g_xccb_m.xccb003_desc
 
   
   CALL axct301_input("r")
    
   IF INT_FLAG AND NOT g_master_insert THEN
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      INITIALIZE g_xccb_m.* TO NULL
      INITIALIZE g_xccb_d TO NULL
      INITIALIZE g_xccb2_d TO NULL
 
      CALL axct301_show()
      LET INT_FLAG = 0
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN 
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axct301_set_act_visible()
   CALL axct301_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_xccbld_t = g_xccb_m.xccbld
   LET g_xccb003_t = g_xccb_m.xccb003
   LET g_xccb004_t = g_xccb_m.xccb004
   LET g_xccb005_t = g_xccb_m.xccb005
 
   
   #組合新增資料的條件
   LET g_add_browse = " xccbent = " ||g_enterprise|| " AND",
                      " xccbld = '", g_xccb_m.xccbld, "' "
                      ," AND xccb003 = '", g_xccb_m.xccb003, "' "
                      ," AND xccb004 = '", g_xccb_m.xccb004, "' "
                      ," AND xccb005 = '", g_xccb_m.xccb005, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axct301_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   LET g_curr_diag = ui.DIALOG.getCurrent()
   CALL axct301_idx_chk()
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   #功能已完成,通報訊息中心
   CALL axct301_msgcentre_notify('reproduce')
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axct301_detail_reproduce()
   #add-point:delete段define name="detail_reproduce.define_customerization"
   
   #end add-point 
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xccb_t.*
 
 
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axct301_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xccb_t
    WHERE xccbent = g_enterprise AND xccbld = g_xccbld_t
    AND xccb003 = g_xccb003_t
    AND xccb004 = g_xccb004_t
    AND xccb005 = g_xccb005_t
 
       INTO TEMP axct301_detail
   
   #將key修正為調整後   
   UPDATE axct301_detail 
      #更新key欄位
      SET xccbld = g_xccb_m.xccbld
          , xccb003 = g_xccb_m.xccb003
          , xccb004 = g_xccb_m.xccb004
          , xccb005 = g_xccb_m.xccb005
 
      #更新共用欄位
      #應用 a13 樣板自動產生(Version:4)
       , xccbownid = g_user 
       , xccbowndp = g_dept
       , xccbcrtid = g_user
       , xccbcrtdp = g_dept 
       , xccbcrtdt = ld_date
       , xccbmodid = g_user
       , xccbmoddt = ld_date
 
 
 
                                       
   #將資料塞回原table   
   INSERT INTO xccb_t SELECT * FROM axct301_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axct301_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xccbld_t = g_xccb_m.xccbld
   LET g_xccb003_t = g_xccb_m.xccb003
   LET g_xccb004_t = g_xccb_m.xccb004
   LET g_xccb005_t = g_xccb_m.xccb005
 
   
   DROP TABLE axct301_detail
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axct301_delete()
   #add-point:delete段define name="delete.define_customerization"
   
   #end add-point
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_xccb_m.xccbld IS NULL
   OR g_xccb_m.xccb003 IS NULL
   OR g_xccb_m.xccb004 IS NULL
   OR g_xccb_m.xccb005 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   
 
   OPEN axct301_cl USING g_enterprise,g_xccb_m.xccbld,g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axct301_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE axct301_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axct301_master_referesh USING g_xccb_m.xccbld,g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005 INTO g_xccb_m.xccbcomp, 
       g_xccb_m.xccbld,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb_m.xccb003,g_xccb_m.xccbcomp_desc,g_xccb_m.xccbld_desc, 
       g_xccb_m.xccb003_desc
   
   #遮罩相關處理
   LET g_xccb_m_mask_o.* =  g_xccb_m.*
   CALL axct301_xccb_t_mask()
   LET g_xccb_m_mask_n.* =  g_xccb_m.*
   
   CALL axct301_show()
 
   #單頭多語言資料備份
   
   
   IF cl_ask_del_master() THEN              #確認一下
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL axct301_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
 
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM xccb_t WHERE xccbent = g_enterprise AND xccbld = g_xccb_m.xccbld
                                                               AND xccb003 = g_xccb_m.xccb003
                                                               AND xccb004 = g_xccb_m.xccb004
                                                               AND xccb005 = g_xccb_m.xccb005
 
                                                               
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xccb_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
 
      
  
      #add-point:單身刪除後  name="delete.body.a_delete"
      
      #end add-point
      
 
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      #頭先不紀錄
      #IF NOT cl_log_modified_record('','') THEN 
      #   CLOSE axct301_cl
      #   CALL s_transaction_end('N','0')
      #   RETURN 
      #END IF
      
      CLEAR FORM
      CALL g_xccb_d.clear() 
      CALL g_xccb2_d.clear()       
 
     
      CALL axct301_ui_browser_refresh()  
      #CALL axct301_ui_headershow()  
      #CALL axct301_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axct301_fetch('P')
      ELSE
         #LET g_wc = " 1=1"
         #LET g_wc2 = " 1=1"
         #CALL axct301_browser_fill("F")
         CLEAR FORM
      END IF
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')   
   END IF
 
   CLOSE axct301_cl
 
   #功能已完成,通報訊息中心
   CALL axct301_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="axct301.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axct301_b_fill(p_wc2)
   #add-point:b_fill段define name="b_fill.define_customerization"
   
   #end add-point
   DEFINE p_wc2      STRING
   #add-point:b_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #先清空單身變數內容
   CALL g_xccb_d.clear()
   CALL g_xccb2_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   LET g_wc3 = g_wc2_table1 
#   IF cl_null(g_wc2_table1) THEN
#      LET g_wc2_table1 = " 1=1 AND xccb001 = '1' "
#   ELSE
#      LET g_wc2_table1 = g_wc2_table1 CLIPPED," AND xccb001 = '1' "
#   END IF
   #end add-point
   
   LET g_sql = "SELECT  DISTINCT xccb001,xccb006,xccb007,xccb008,xccb009,xccb010,xccb002,xccb101,xccb102, 
       xccb102a,xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h,xccb001,xccb002,xccb007, 
       xccb008,xccb009,xccbownid,xccbowndp,xccbcrtid,xccbcrtdp,xccbcrtdt,xccbmodid,xccbmoddt,xccbcnfid, 
       xccbcnfdt,xccbpstid,xccbpstdt,t1.imaal003 ,t2.ooag011 ,t3.ooefl003 ,t4.ooag011 ,t5.ooefl003 , 
       t6.ooag011 ,t7.ooag011 ,t8.ooag011 FROM xccb_t",   
               "",
               
                              " LEFT JOIN imaal_t t1 ON t1.imaalent="||g_enterprise||" AND t1.imaal001=xccb007 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=xccbownid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=xccbowndp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent="||g_enterprise||" AND t4.ooag001=xccbcrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent="||g_enterprise||" AND t5.ooefl001=xccbcrtdp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=xccbmodid  ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent="||g_enterprise||" AND t7.ooag001=xccbcnfid  ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent="||g_enterprise||" AND t8.ooag001=xccbpstid  ",
 
               " WHERE xccbent= ? AND xccbld=? AND xccb003=? AND xccb004=? AND xccb005=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("xccb_t")
   END IF
   
   #add-point:b_fill段sql_after name="b_fill.sql_after"
   LET g_sql = g_sql CLIPPED," AND xccb001 = '1' "
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axct301_fill_chk(1) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = g_sql, " ORDER BY xccb_t.xccb001,xccb_t.xccb002,xccb_t.xccb006,xccb_t.xccb007,xccb_t.xccb008,xccb_t.xccb009"
         #add-point:b_fill段fill_before name="b_fill.fill_before"
         
         #end add-point
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axct301_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axct301_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xccb_m.xccbld,g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005
                                               
      FOREACH b_fill_cs INTO g_xccb_d[l_ac].xccb001,g_xccb_d[l_ac].xccb006,g_xccb_d[l_ac].xccb007,g_xccb_d[l_ac].xccb008, 
          g_xccb_d[l_ac].xccb009,g_xccb_d[l_ac].xccb010,g_xccb_d[l_ac].xccb002,g_xccb_d[l_ac].xccb101, 
          g_xccb_d[l_ac].xccb102,g_xccb_d[l_ac].xccb102a,g_xccb_d[l_ac].xccb102b,g_xccb_d[l_ac].xccb102c, 
          g_xccb_d[l_ac].xccb102d,g_xccb_d[l_ac].xccb102e,g_xccb_d[l_ac].xccb102f,g_xccb_d[l_ac].xccb102g, 
          g_xccb_d[l_ac].xccb102h,g_xccb2_d[l_ac].xccb001,g_xccb2_d[l_ac].xccb002,g_xccb2_d[l_ac].xccb007, 
          g_xccb2_d[l_ac].xccb008,g_xccb2_d[l_ac].xccb009,g_xccb2_d[l_ac].xccbownid,g_xccb2_d[l_ac].xccbowndp, 
          g_xccb2_d[l_ac].xccbcrtid,g_xccb2_d[l_ac].xccbcrtdp,g_xccb2_d[l_ac].xccbcrtdt,g_xccb2_d[l_ac].xccbmodid, 
          g_xccb2_d[l_ac].xccbmoddt,g_xccb2_d[l_ac].xccbcnfid,g_xccb2_d[l_ac].xccbcnfdt,g_xccb2_d[l_ac].xccbpstid, 
          g_xccb2_d[l_ac].xccbpstdt,g_xccb_d[l_ac].xccb007_desc,g_xccb2_d[l_ac].xccbownid_desc,g_xccb2_d[l_ac].xccbowndp_desc, 
          g_xccb2_d[l_ac].xccbcrtid_desc,g_xccb2_d[l_ac].xccbcrtdp_desc,g_xccb2_d[l_ac].xccbmodid_desc, 
          g_xccb2_d[l_ac].xccbcnfid_desc,g_xccb2_d[l_ac].xccbpstid_desc
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充 name="b_fill.fill"
         
         #end add-point
      
         #帶出公用欄位reference值
         
         
         #應用 a12 樣板自動產生(Version:4)
 
 
 
 
        
         #add-point:單身資料抓取 name="bfill.foreach"
         
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF 
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         
      END FOREACH
 
            CALL g_xccb_d.deleteElement(g_xccb_d.getLength())
      CALL g_xccb2_d.deleteElement(g_xccb2_d.getLength())
 
      
   END IF
   
   #add-point:b_fill段more name="b_fill.more"
   
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   #遮罩相關處理
   FOR l_ac = 1 TO g_xccb_d.getLength()
      LET g_xccb_d_mask_o[l_ac].* =  g_xccb_d[l_ac].*
      CALL axct301_xccb_t_mask()
      LET g_xccb_d_mask_n[l_ac].* =  g_xccb_d[l_ac].*
   END FOR
   
   LET g_xccb2_d_mask_o.* =  g_xccb2_d.*
   FOR l_ac = 1 TO g_xccb2_d.getLength()
      LET g_xccb2_d_mask_o[l_ac].* =  g_xccb2_d[l_ac].*
      CALL axct301_xccb_t_mask()
      LET g_xccb2_d_mask_n[l_ac].* =  g_xccb2_d[l_ac].*
   END FOR
 
 
   FREE axct301_pb   
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axct301_idx_chk()
   #add-point:idx_chk段define name="idx_chk.define_customerization"
   
   #end add-point
   #add-point:idx_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   #判定目前選擇的頁面
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      #確保當下指標的位置未超過上限
      IF g_detail_idx > g_xccb_d.getLength() THEN
         LET g_detail_idx = g_xccb_d.getLength()
      END IF
      #確保資料位置不小於1
      IF g_detail_idx = 0 AND g_xccb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      #將筆數資料顯示到畫面上
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xccb_d.getLength() TO FORMONLY.cnt
      #將位置顯示到正確筆數上
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   END IF
    
   #同第一個page的做法進行其他頁面的處理
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_xccb2_d.getLength() THEN
         LET g_detail_idx = g_xccb2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xccb2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xccb2_d.getLength() TO FORMONLY.cnt
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
#fengmy150121----begin
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_xccb1_d.getLength() THEN
         LET g_detail_idx = g_xccb1_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xccb1_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xccb1_d.getLength() TO FORMONLY.cnt
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_xccb3_d.getLength() THEN
         LET g_detail_idx = g_xccb3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xccb3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xccb3_d.getLength() TO FORMONLY.cnt
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
   END IF
#fengmy150121----end
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axct301_b_fill2(pi_idx)
   #add-point:b_fill2段define name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_xccb_d.getLength() <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.before_delete" >}
#+ 單身db資料刪除
PRIVATE FUNCTION axct301_before_delete()
   #add-point:before_delete段define name="before_delete.define_customerization"
   
   #end add-point 
   #add-point:before_delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="before_delete.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="delete.body.b_single_delete"
   
   #end add-point
   
   DELETE FROM xccb_t
    WHERE xccbent = g_enterprise AND xccbld = g_xccb_m.xccbld AND
                              xccb003 = g_xccb_m.xccb003 AND
                              xccb004 = g_xccb_m.xccb004 AND
                              xccb005 = g_xccb_m.xccb005 AND
 
          xccb001 = g_xccb_d_t.xccb001
      AND xccb002 = g_xccb_d_t.xccb002
      AND xccb006 = g_xccb_d_t.xccb006
      AND xccb007 = g_xccb_d_t.xccb007
      AND xccb008 = g_xccb_d_t.xccb008
      AND xccb009 = g_xccb_d_t.xccb009
 
      
   #add-point:單筆刪除中 name="delete.body.m_single_delete"
   DELETE FROM xccb_t
    WHERE xccbent = g_enterprise AND xccbld = g_xccb_m.xccbld AND
                              xccb003 = g_xccb_m.xccb003 AND
                              xccb004 = g_xccb_m.xccb004 AND
                              xccb005 = g_xccb_m.xccb005 AND
 
          xccb001 = '2'
      AND xccb002 = g_xccb_d_t.xccb002
      AND xccb006 = g_xccb_d_t.xccb006
      AND xccb007 = g_xccb_d_t.xccb007
      AND xccb008 = g_xccb_d_t.xccb008
      
   DELETE FROM xccb_t
    WHERE xccbent = g_enterprise AND xccbld = g_xccb_m.xccbld AND
                              xccb003 = g_xccb_m.xccb003 AND
                              xccb004 = g_xccb_m.xccb004 AND
                              xccb005 = g_xccb_m.xccb005 AND
 
          xccb001 = '3'
      AND xccb002 = g_xccb_d_t.xccb002
      AND xccb006 = g_xccb_d_t.xccb006
      AND xccb007 = g_xccb_d_t.xccb007
      AND xccb008 = g_xccb_d_t.xccb008
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xccb_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後 name="delete.body.a_single_delete"
   
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
 
{</section>}
 
{<section id="axct301.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axct301_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define name="delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axct301_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define name="insert_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axct301_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define name="update_b.define_customerization"
   
   #end add-point 
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正其他單身key欄位
PRIVATE FUNCTION axct301_key_update_b(ps_keys_bak)
   #add-point:update_b段define name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變, 若無改變則返回
   IF g_xccb_d[l_ac].xccb001 = g_xccb_d_t.xccb001 
      AND g_xccb_d[l_ac].xccb002 = g_xccb_d_t.xccb002 
      AND g_xccb_d[l_ac].xccb006 = g_xccb_d_t.xccb006 
      AND g_xccb_d[l_ac].xccb007 = g_xccb_d_t.xccb007 
      AND g_xccb_d[l_ac].xccb008 = g_xccb_d_t.xccb008 
      AND g_xccb_d[l_ac].xccb009 = g_xccb_d_t.xccb009 
 
      THEN
      RETURN
   END IF
    
 
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION axct301_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axct301_lock_b(ps_table,ps_page)
   #add-point:lock_b段define name="lock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
   
   #先刷新資料
   #CALL axct301_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axct301.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axct301_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define name="unlock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
   
 
 
END FUNCTION
 
{</section>}
 
{<section id="axct301.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axct301_set_entry(p_cmd)
   #add-point:set_entry段define name="set_entry.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xccbld,xccb003,xccb004,xccb005",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("xccbcomp",TRUE)   #fengmy 150106 add
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axct301.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axct301_set_no_entry(p_cmd)
   #add-point:set_no_entry段define name="set_no_entry.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xccbld,xccb003,xccb004,xccb005",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      CALL cl_set_comp_entry("xccbcomp",FALSE)   #fengmy 150106 add
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axct301.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axct301_set_entry_b(p_cmd)
   #add-point:set_entry_b段define name="set_entry_b.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axct301_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define name="set_no_entry_b.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b段"
   CALL cl_set_comp_required('xccb009',FALSE)   #fengmy150119
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION axct301_set_act_visible()
   #add-point:set_act_visible段define name="set_act_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point
   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axct301.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION axct301_set_act_no_visible()
   #add-point:set_act_no_visible段define name="set_act_no_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point
   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axct301.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION axct301_set_act_visible_b()
   #add-point:set_act_visible_b段define name="set_act_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axct301.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION axct301_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define name="set_act_no_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axct301.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axct301_default_search()
   #add-point:default_search段define name="default_search.define_customerization"
   
   #end add-point    
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="default_search.pre_function"
   
   #end add-point
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   #add-point:default_search段開始前 name="default_search.before"
   
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xccbld = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xccb003 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xccb004 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " xccb005 = '", g_argv[04], "' AND "
   END IF
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axct301.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axct301_fill_chk(ps_idx)
   #add-point:fill_chk段define name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="fill_chk.pre_function"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
   
   #add-point:fill_chk段other name="fill_chk.other"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axct301.modify_detail_chk" >}
#+ 單身輸入判定
PRIVATE FUNCTION axct301_modify_detail_chk(ps_record)
   #add-point:modify_detail_chk段define name="modify_detail_chk.define_customerization"
   
   #end add-point
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify_detail_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="modify_detail_chk.before"
   
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "xccb001"
      WHEN "s_detail2"
         LET ls_return = "xccb001_2"
 
      #add-point:modify_detail_chk段自訂page控制 name="modify_detail_chk.page_control"
      
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前 name="modify_detail_chk.after"
   
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
 
{</section>}
 
{<section id="axct301.mask_functions" >}
&include "erp/axc/axct301_mask.4gl"
 
{</section>}
 
{<section id="axct301.state_change" >}
    
 
{</section>}
 
{<section id="axct301.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION axct301_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xccb_m.xccbld
   LET g_pk_array[1].column = 'xccbld'
   LET g_pk_array[2].values = g_xccb_m.xccb003
   LET g_pk_array[2].column = 'xccb003'
   LET g_pk_array[3].values = g_xccb_m.xccb004
   LET g_pk_array[3].column = 'xccb004'
   LET g_pk_array[4].values = g_xccb_m.xccb005
   LET g_pk_array[4].column = 'xccb005'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axct301.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION axct301_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL axct301_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xccb_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axct301.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct301_xccb007_desc(p_xccb007)
DEFINE p_xccb007       LIKE xccb_t.xccb007
DEFINE r_imaal003      LIKE imaal_t.imaal003
DEFINE r_imaal004      LIKE imaal_t.imaal004
DEFINE r_imaa004       LIKE imaa_t.imaa004

   SELECT imaa004 INTO r_imaa004 FROM imaa_t
    WHERE imaaent = g_enterprise AND imaa001 = p_xccb007
    
   SELECT imaal003,imaal004 INTO r_imaal003,r_imaal004 FROM imaal_t
    WHERE imaalent = g_enterprise AND imaal001 = p_xccb007 AND imaal002 = g_dlang
 
   RETURN r_imaal003,r_imaal004,r_imaa004

END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct301_xccbld_desc()
   SELECT glaal002 INTO g_xccb_m.xccbld_desc FROM glaal_t 
    WHERE glaalent=g_enterprise AND glaalld=g_xccb_m.xccbld AND glaal001=g_dlang

   DISPLAY BY NAME g_xccb_m.xccbld_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct301_xccbcomp_desc()
   SELECT ooefl003 INTO g_xccb_m.xccbcomp_desc FROM ooefl_t 
    WHERE ooeflent=g_enterprise AND ooefl001=g_xccb_m.xccbcomp AND ooefl002=g_dlang

   DISPLAY BY NAME g_xccb_m.xccbcomp_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct301_xccb001_ref()
   SELECT glaa001,glaa003,glaa015,glaa016,glaa018,glaa019,glaa020,glaa022 
     INTO g_glaa001,g_glaa003,g_glaa015,g_glaa016,g_glaa018,g_glaa019,g_glaa020,g_glaa022 
     FROM glaa_t
    WHERE glaaent = g_enterprise AND glaald = g_xccb_m.xccbld
    
   IF g_glaa015 = ' Y' THEN
      CALL cl_set_comp_visible("bpage_2",FALSE)
   END IF
   IF g_glaa019 = ' Y' THEN
      CALL cl_set_comp_visible("bpage_3",FALSE)
   END IF
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct301_excelexample(n,t,p_show_hidden)
DEFINE  t,t1,t2,n1_text,n3_text         om.DomNode,
         n,n2,n_child                    om.DomNode,
         p_show_hidden                   LIKE type_t.chr1,    #隱藏欄位是否顯示
         n1,n_table,n3                   om.NodeList,
         i,res,p,q,k                     LIKE type_t.num10,
         h                               LIKE type_t.num10,
         cnt_combo_data,cnt_combo_tot    LIKE type_t.num10,
         cells,values,j,l,sheet,cc       STRING,
         table_name,l_length             STRING,
         l_table_name                    LIKE type_t.chr20,
         l_datatype                      LIKE type_t.chr20,
         l_bufstr                        base.StringBuffer,
         lwin_curr                       ui.Window,
         l_show                          LIKE type_t.chr1,
         l_time                          LIKE type_t.chr8

 DEFINE  combo_arr        DYNAMIC ARRAY OF RECORD
           sheet          LIKE type_t.num10,
           seq            LIKE type_t.num10,
           name           LIKE type_t.chr2,
           text           LIKE type_t.chr50
                          END RECORD
 DEFINE  customize_table  LIKE type_t.chr1
 DEFINE  l_str            STRING
 DEFINE  l_i              LIKE type_t.num5
 DEFINE  buf              base.StringBuffer
 DEFINE  l_dec_point      STRING,
         l_qry_name       LIKE type_t.chr20,
         l_cust           LIKE type_t.chr1
 DEFINE  l_tabIndex       LIKE type_t.num10
 DEFINE  l_seq            DYNAMIC ARRAY OF LIKE type_t.num10
 DEFINE  l_seq2           DYNAMIC ARRAY OF LIKE type_t.num10
 DEFINE  l_j              LIKE type_t.num5
 DEFINE  bFound           LIKE type_t.num5
 DEFINE  l_dbname         STRING
 DEFINE  l_zal09          LIKE type_t.chr1
 DEFINE  l_desc           STRING

   WHENEVER ERROR CALL cl_err_msg_log

   LET cnt_table = 1

   LET l_bufstr = base.StringBuffer.create()
   WHENEVER ERROR CALL cl_err_msg_log
   LET lwin_curr = ui.window.getCurrent()

   LET l_channel = base.Channel.create()
   LET l_time = TIME(CURRENT)
  #LET xls_name = g_prog CLIPPED,l_time CLIPPED,".xls"
   LET xls_name = g_xccb_s.name CLIPPED,".xls"

   LET buf = base.StringBuffer.create()
   CALL buf.append(xls_name)
   CALL buf.replace( ":","-", 0)
   LET xls_name = buf.toString()

   # 個資會記錄使用者的行為模式，在此說明excel的檔名及匯出excel的方式
   LET l_desc = xls_name CLIPPED," Using HTML to export the Table to excel."

   IF os.Path.delete(xls_name CLIPPED) THEN END IF
   CALL l_channel.openFile( xls_name CLIPPED, "a" )
   CALL l_channel.setDelimiter("")

   IF ms_codeset.getIndexOf("BIG5", 1) OR
      ( ms_codeset.getIndexOf("GB2312", 1) OR ms_codeset.getIndexOf("GBK", 1) OR ms_codeset.getIndexOf("GB18030", 1) ) THEN
      IF ms_locale = "ZH_TW" AND g_lang = 'ZH_TW' THEN
         LET tsconv_cmd = "big5_to_gb2312"
         LET ms_codeset = "GB2312"
      END IF
      IF ms_locale = "ZH_CN" AND g_lang = 'ZH_CN' THEN
         LET tsconv_cmd = "gb2312_to_big5"
         LET ms_codeset = "BIG5"
      END IF
   END IF

   LET l_str = "<html xmlns:o=",g_quote,"urn:schemas-microsoft-com:office:office",g_quote
   CALL l_channel.write(l_str CLIPPED)
   LET l_str = "<meta http-equiv=Content-Type content=",g_quote,"text/html; charset=",ms_codeset,g_quote,">"
   CALL l_channel.write(l_str CLIPPED)
   LET l_str = "xmlns:x=",g_quote,"urn:schemas-microsoft-com:office:excel",g_quote
   CALL l_channel.write(l_str CLIPPED)
   LET l_str = "xmlns=",g_quote,"http://www.w3.org/TR/REC-html40",g_quote,">"
   CALL l_channel.write(l_str CLIPPED)
   CALL l_channel.write("<head><style><!--")

   IF not ms_codeset.getIndexOf("UTF-8", 1) THEN
      IF g_lang = "0" THEN  #繁體中文
         CALL l_channel.write("td  {font-family:細明體, serif;}")
      ELSE
         IF g_lang = "2" THEN  #簡體中文
            CALL l_channel.write("td  {font-family:新宋体, serif;}")
         ELSE
            CALL l_channel.write("td  {font-family:細明體, serif;}")
         END IF
      END IF
   ELSE
      CALL l_channel.write("td  {font-family:Courier New, serif;}")
   END IF

   LET l_str = ".xl24  {mso-number-format:",g_quote,"\@",g_quote,";}",
               ".xl30 {mso-style-parent:style0; mso-number-format:\"0_ \";} ",
               ".xl31 {mso-style-parent:style0; mso-number-format:\"0\.0_ \";} ",
               ".xl32 {mso-style-parent:style0; mso-number-format:\"0\.00_ \";} ",
               ".xl33 {mso-style-parent:style0; mso-number-format:\"0\.000_ \";} ",
               ".xl34 {mso-style-parent:style0; mso-number-format:\"0\.0000_ \";} ",
               ".xl35 {mso-style-parent:style0; mso-number-format:\"0\.00000_ \";} ",
               ".xl36 {mso-style-parent:style0; mso-number-format:\"0\.000000_ \";} ",
               ".xl37 {mso-style-parent:style0; mso-number-format:\"0\.0000000_ \";} ",
               ".xl38 {mso-style-parent:style0; mso-number-format:\"0\.00000000_ \";} ",
               ".xl39 {mso-style-parent:style0; mso-number-format:\"0\.000000000_ \";} ",
               ".xl40 {mso-style-parent:style0; mso-number-format:\"0\.0000000000_ \";} "
   CALL l_channel.write(l_str CLIPPED)
   CALL l_channel.write("--></style>")
   CALL l_channel.write("<!--[if gte mso 9]><xml>")
   CALL l_channel.write("<x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet>")
   CALL l_channel.write("<x:DefaultRowHeight>330</x:DefaultRowHeight>")
   CALL l_channel.write("</xml><![endif]--></head>")
   CALL l_channel.write("<body><table border=1 cellpadding=0 cellspacing=0 width=432 style='border-collapse: collapse;table-layout:fixed;width:324pt'>")
   CALL l_channel.write("<tr height=22>")

   LET l_win_name = NULL
   LET l_win_name = n.getAttribute("name")

   LET n_table = n.selectByTagName("Table")
   CALL combo_arr.clear()
   FOR h=1 to cnt_table
      CALL g_hidden.clear()
      CALL g_ifchar.clear()
      CALL g_mask.clear()
      LET n2 = n_table.item(h)

      IF l_win_name = "p_dbqry_table" THEN
         LET n1 = n2.selectByPath("//TableColumn[@hidden=\"0\"]")
      ELSE
         LET n1 = n2.selectByTagName("TableColumn")
      END IF

      #抓取 table 是否有進行欄位排序
      INITIALIZE g_sort.* TO NULL
      LET g_sort.column = n2.getAttribute("sortColumn")
      IF g_sort.column >=0 AND g_sort.column IS NOT NULL  THEN
         LET g_sort.column = g_sort.column + 1    #屬性 sortColumn 為 0 開始
         LET g_sort.type = n2.getAttribute("sortType")
      END IF

      LET cnt_header = n1.getLength()
      LET l = h
      LET sheet=g_sheet  CLIPPED,l
      LET k = 0

      CALL l_seq.clear()
      CALL l_seq2.clear()

     #循環Table中的每一個列
     FOR i=1 TO cnt_header
       #得到對應的DomNode節點
       LET n1_text = n1.item(i)
       #得到該列的TabIndex屬性
       LET l_tabIndex = n1_text.getAttribute("tabIndex")

       #如果TabIndex屬性不為空
       IF NOT cl_null(l_tabIndex) THEN
          #初始化一個標志變量（表明是否在數組中找到比當前TabIndex更大的節點）
          LET bFound = FALSE
          #開始在已有的數組中定位比當前tabIndex大的成員
          FOR l_j=1 TO l_seq2.getLength()
              #如果有找到
              IF l_seq2[l_j] > l_tabIndex THEN
                 #設置標志變量
                 LET bFound = TRUE
                 #退出搜尋過程（此時下標j保存的該成員變量的位置）
                 EXIT FOR
              END IF
          END FOR
          #如果始終沒有找到（比如數組根本就是空的）那麼j里面保存的就是當前數組最大下標+1
          #判斷有沒有找到
          IF bFound THEN
             #如果找到則向該數組中插入一個元素（在這個tabIndex比它大的元素前面插入)
             CALL l_seq2.InsertElement(l_j)
             CALL l_seq.InsertElement(l_j)
          END IF
          #把當前的下標（列的位置）和tabIndex填充到這個位置上
          #如果沒有找到，則填充的位置會是整個數組的末尾
          LET l_seq[l_j] = i
          LET l_seq2[l_j] = l_tabIndex
       END IF
     END FOR

      FOR i=1 to cnt_header
         LET n1_text = n1.item(l_seq[i])
         LET k = k + 1
         LET j = k
         LET cells = "R1C" CLIPPED,j
         LET l_field_name = NULL
         LET l_show = n1_text.getAttribute("hidden")
         IF ((p_show_hidden = 'N' OR p_show_hidden IS NULL) AND (l_show = "0" OR l_show IS NULL)) OR p_show_hidden = 'Y' THEN
            LET l_field_name = n1_text.getAttribute("name")
            IF l_field_name = 'xccb_t.xccbent' OR l_field_name = 'xccb_t.xccbld' OR
               l_field_name = 'xccb_t.xccbcomp' OR l_field_name = 'xccb_t.xccb001' OR
               l_field_name = 'xccb_t.xccb002' OR l_field_name = 'xccb_t.xccb003' OR
               l_field_name = 'xccb_t.xccb004' OR l_field_name = 'xccb_t.xccb005' OR 
               l_field_name = 'xccb_t.xccb006' OR
               l_field_name = 'xccb_t.xccb007' OR l_field_name = 'xccb_t.xccb008' OR
               l_field_name = 'xccb_t.xccb009' OR l_field_name = 'xccb_t.xccb010' OR 
               l_field_name = 'xccb_t.xccb101' OR l_field_name = 'xccb_t.xccb102a' OR
               l_field_name = 'xccb_t.xccb102b' OR l_field_name = 'xccb_t.xccb102c' OR
               l_field_name = 'xccb_t.xccb102d' OR l_field_name = 'xccb_t.xccb102e' OR
               l_field_name = 'xccb_t.xccb102f' OR l_field_name = 'xccb_t.xccb102g' OR
               l_field_name = 'xccb_t.xccb102h' OR l_field_name = 'xccb_t.xccb102' OR
               l_field_name = 'formonly.xccb102a_1' OR l_field_name = 'formonly.xccb102b_1' OR
               l_field_name = 'formonly.xccb102c_1' OR l_field_name = 'formonly.xccb102d_1' OR
               l_field_name = 'formonly.xccb102e_1' OR l_field_name = 'formonly.xccb102f_1' OR
               l_field_name = 'formonly.xccb102g_1' OR l_field_name = 'formonly.xccb102h_1' OR
               l_field_name = 'formonly.xccb102_1' OR
               l_field_name = 'formonly.xccb102a_2' OR l_field_name = 'formonly.xccb102b_2' OR
               l_field_name = 'formonly.xccb102c_2' OR l_field_name = 'formonly.xccb102d_2' OR
               l_field_name = 'formonly.xccb102e_2' OR l_field_name = 'formonly.xccb102f_2' OR
               l_field_name = 'formonly.xccb102g_2' OR l_field_name = 'formonly.xccb102h_2' OR
               l_field_name = 'formonly.xccb102_2' 
               THEN
               LET values = n1_text.getAttribute("text")
               LET l_str = "<td>",axct301_add_span(values),"</td>"
               CALL l_channel.write(l_str CLIPPED)
            END IF
         ELSE
            LET g_hidden[i] = "1"
            LET k = k -1
         END IF
      END FOR
      IF h=1 THEN CALL axct301_get_boday(h,cnt_header,t,combo_arr,l_seq) END IF

   END FOR

   # 使用者的行為模式改到前面判斷，在此僅將前面判斷的結果說明傳至syslog中做紀錄
   IF cl_log_sys_operation("A","G",l_desc) THEN
   END IF
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct301_b_fill1(p_wc2)
DEFINE p_wc2      STRING
   #add-point:b_fill段define
DEFINE l_xccb010  LIKE xccb_t.xccb010   #fengmy150121 
   #end add-point     
 
   #先清空單身變數內容
   CALL g_xccb1_d.clear()
 
   #,xccb001,xccb002,xccb007,xccb008,xccbownid,'',xccbowndp, 
          #'',xccbcrtid,'',xccbcrtdp,'',xccbcrtdt,xccbmodid,'',xccbmoddt,xccbcnfid,'',xccbcnfdt,xccbpstid, 
          #'',xccbpstdt 
#fengmy 150106 add xccb102
LET g_sql = "SELECT  UNIQUE xccb001,xccb006,xccb007,xccb008,'','',xccb009,xccb010,xccb002,xccb101,xccb102, 
          xccb102a,xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h
          FROM xccb_t",   
                  "",
                  
                  " WHERE xccbent= ? AND xccbld=? AND xccb003=? AND xccb004=? AND xccb005=? AND xccb001 = '2'"  
                  
   IF NOT cl_null(g_wc3) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc3 CLIPPED
   END IF
   
   #add-point:b_fill段sql_after

   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axct301_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY xccb_t.xccb001,xccb_t.xccb002,xccb_t.xccb007,xccb_t.xccb008"
      
      #add-point:b_fill段fill_before

      #end add-point
      
      PREPARE axct301_pb1 FROM g_sql
      DECLARE b_fill_cs1 CURSOR FOR axct301_pb1
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs1 USING g_enterprise,g_xccb_m.xccbld
                                               ,g_xccb_m.xccb003
                                               ,g_xccb_m.xccb004
                                               ,g_xccb_m.xccb005
 
                                               
      FOREACH b_fill_cs1 INTO g_xccb1_d[l_ac].*#,g_xccb2_d[l_ac].*
 
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "FOREACH:"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            EXIT FOREACH
         END IF
         IF cl_null(g_xccb1_d[l_ac].xccb010_1) THEN     #fengmy150121  导入数据             
         CALL axct301_xccb007_desc(g_xccb1_d[l_ac].xccb007_1) 
          RETURNING g_xccb1_d[l_ac].xccb007_desc1,g_xccb1_d[l_ac].xccb007_1_desc1,g_xccb1_d[l_ac].xccb010_1
         #fengmy150121---begin
         ELSE
         CALL axct301_xccb007_desc(g_xccb1_d[l_ac].xccb007_1) 
          RETURNING g_xccb1_d[l_ac].xccb007_desc1,g_xccb1_d[l_ac].xccb007_1_desc1,l_xccb010
         END IF
         #fengmy150121---end
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      
            CALL g_xccb1_d.deleteElement(g_xccb1_d.getLength())
      CALL g_xccb2_d.deleteElement(g_xccb2_d.getLength())
 
   END IF
   
   #add-point:b_fill段more

   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE axct301_pb1
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct301_add_span(p_str)
DEFINE p_str    STRING
DEFINe l_str    STRING


   LET p_str = p_str.trimRight()

   #若字串有空白就必須加上 <span> 屬性，並將空白轉換為 &nbsp;
   IF p_str.getIndexOf(" ",1) > 0 THEN
      LET g_bufstr = base.StringBuffer.create()             #CHI-B30026    #FUN-A20036
      CALL g_bufstr.clear()
      CALL g_bufstr.append(p_str)
      CALL g_bufstr.replace(" ","&nbsp;",0)
      CALL g_bufstr.replace("<","&lt;",0)   #CHI-CA0069
      LET l_str = g_bufstr.tostring()
      LET l_str = "<span style='mso-spacerun:yes'>", l_str, "</span>"
   ELSE
      #CHI-CA0069 -start- add
      LET g_bufstr = base.StringBuffer.create()
      CALL g_bufstr.clear()
      CALL g_bufstr.append(p_str)
      CALL g_bufstr.replace("<","&lt;",0)
      LET l_str = g_bufstr.tostring()
      #LET l_str = p_str   #CHI-CA0069
      #CHI-CA0069 --end--
   END IF

   RETURN l_str
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct301_get_boday(p_h,p_cnt_header,s,s_combo_arr,p_seq)
DEFINE  s,n1_text                          om.DomNode,
         n1                                 om.NodeList,
         i,m,k,cnt_body,res,p               LIKE type_t.num10,
         l_hidden_cnt,n,l_last_hidden       LIKE type_t.num10,
         p_h,p_cnt_header,arr_len           LIKE type_t.num10,
         p_null                             LIKE type_t.num10,
         cells,values,j,l,sheet             STRING,
         l_bufstr                           base.StringBuffer

 DEFINE  s_combo_arr    DYNAMIC ARRAY OF RECORD
          sheet         LIKE type_t.num10,       #sheet
          seq           LIKE type_t.num10,       #項次
          name          LIKE type_t.chr2,        #代號
          text          LIKE type_t.chr50        #說明
                        END RECORD
 DEFINE  p_seq          DYNAMIC ARRAY OF LIKE type_t.num10
 DEFINE  l_item         LIKE type_t.num10

 DEFINE  unix_path      STRING,
         window_path    STRING
 DEFINE  l_dom_doc      om.DomDocument,
         r,n_node       om.DomNode
 DEFINE  l_status       LIKE type_t.num5

   LET l_hidden_cnt = 0
   LET l = p_h
   LET sheet=g_sheet CLIPPED,l
   LET l_bufstr = base.StringBuffer.create()
   LET l = 0
   LET i = 0
   LET m = 0

   CALL l_channel.write("</tr></table></body></html>")
   CALL l_channel.close()
  #CALL cl_prt_convert(xls_name)

   LET unix_path = os.Path.join(FGL_GETENV("TEMPDIR"),xls_name CLIPPED)

  #LET window_path = "c:\\TT\\",xls_name CLIPPED
   LET window_path = g_xccb_s.dir,"\\",xls_name CLIPPED
   LET status = cl_client_download_file(unix_path, window_path)
   IF status then
      DISPLAY "Download OK!!"
   ELSE
      DISPLAY "Download fail!!"
   END IF

   LET status = cl_client_open_prog("excel",window_path)
   IF status then
      DISPLAY "Open OK!!"
   ELSE
      DISPLAY "Open fail!!"
   END IF
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct301_b_fill3(p_wc2)
DEFINE p_wc2      STRING
   #add-point:b_fill段define
DEFINE l_xccb010  LIKE xccb_t.xccb010   #fengmy150121
   #end add-point     
 
   #先清空單身變數內容
   CALL g_xccb3_d.clear()
 #,xccb001,xccb002,xccb007,xccb008,xccbownid,'',xccbowndp, 
         # '',xccbcrtid,'',xccbcrtdp,'',xccbcrtdt,xccbmodid,'',xccbmoddt,xccbcnfid,'',xccbcnfdt,xccbpstid, 
         #'',xccbpstdt
 #fengmy 150106 add xccb102  
      LET g_sql = "SELECT  UNIQUE xccb001,xccb006,xccb007,xccb008,'','',xccb009,xccb010,xccb002,xccb101,xccb102,   
          xccb102a,xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h
          ",   
           " FROM xccb_t",   
                  "",
                  
                  " WHERE xccbent= ? AND xccbld=? AND xccb003=? AND xccb004=? AND xccb005=? AND xccb001 = '3' "  
                  
   IF NOT cl_null(g_wc3) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc3 CLIPPED
   END IF
   
   #add-point:b_fill段sql_after

   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axct301_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY xccb_t.xccb001,xccb_t.xccb002,xccb_t.xccb007,xccb_t.xccb008"
      
      #add-point:b_fill段fill_before

      #end add-point
      
      PREPARE axct301_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR axct301_pb2
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_xccb_m.xccbld
                                               ,g_xccb_m.xccb003
                                               ,g_xccb_m.xccb004
                                               ,g_xccb_m.xccb005
 
                                               
      FOREACH b_fill_cs2 INTO g_xccb3_d[l_ac].*
 
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "FOREACH:"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            EXIT FOREACH
         END IF
        IF cl_null(g_xccb3_d[l_ac].xccb010_3) THEN                   
        CALL axct301_xccb007_desc(g_xccb3_d[l_ac].xccb007_3) 
         RETURNING g_xccb3_d[l_ac].xccb007_3_desc,g_xccb3_d[l_ac].xccb007_1_3_desc,g_xccb3_d[l_ac].xccb010_3
        #fengmy150121---begin
        ELSE
             CALL axct301_xccb007_desc(g_xccb3_d[l_ac].xccb007_3) 
         RETURNING g_xccb3_d[l_ac].xccb007_3_desc,g_xccb3_d[l_ac].xccb007_1_3_desc,l_xccb010   
        END IF
        #fengmy150121---end
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      
            CALL g_xccb3_d.deleteElement(g_xccb3_d.getLength())
      CALL g_xccb2_d.deleteElement(g_xccb2_d.getLength())
 
   END IF
   
   #add-point:b_fill段more

   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE axct301_pb2
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct301_ins_xccb()
DEFINE l_ooab002          LIKE ooab_t.ooab002
DEFINE l_rate             LIKE type_t.num26_10
   
   

   IF g_glaa015 = 'Y' THEN
#      CALL s_aooi160_get_exrate('1',g_xccb_m.xccbcomp,l_bdate,g_glaa001,    #fengmy150119 mark
       CALL s_aooi160_get_exrate('2',g_xccb_m.xccbld,g_today,g_glaa001,   #fengmy150119
                                        #目的幣別;  交易金額;              匯類類型
                                         g_glaa016,0,g_glaa018)
                  RETURNING l_rate
      LET g_xccb1_d[l_ac].xccb002_1 = g_xccb_d[l_ac].xccb002
      LET g_xccb1_d[l_ac].xccb006_1 = g_xccb_d[l_ac].xccb006
      LET g_xccb1_d[l_ac].xccb007_1 = g_xccb_d[l_ac].xccb007
      LET g_xccb1_d[l_ac].xccb008_1 = g_xccb_d[l_ac].xccb008
      LET g_xccb1_d[l_ac].xccb009_1 = g_xccb_d[l_ac].xccb009
      LET g_xccb1_d[l_ac].xccb010_1 = g_xccb_d[l_ac].xccb010
      LET g_xccb1_d[l_ac].xccb101_1 = g_xccb_d[l_ac].xccb101
      LET g_xccb1_d[l_ac].xccb102a_1 = g_xccb_d[l_ac].xccb102a * l_rate 
      LET g_xccb1_d[l_ac].xccb102b_1 = g_xccb_d[l_ac].xccb102b * l_rate 
      LET g_xccb1_d[l_ac].xccb102c_1 = g_xccb_d[l_ac].xccb102c * l_rate 
      LET g_xccb1_d[l_ac].xccb102d_1 = g_xccb_d[l_ac].xccb102d * l_rate 
      LET g_xccb1_d[l_ac].xccb102e_1 = g_xccb_d[l_ac].xccb102e * l_rate 
      LET g_xccb1_d[l_ac].xccb102f_1 = g_xccb_d[l_ac].xccb102f * l_rate 
      LET g_xccb1_d[l_ac].xccb102g_1 = g_xccb_d[l_ac].xccb102g * l_rate 
      LET g_xccb1_d[l_ac].xccb102h_1 = g_xccb_d[l_ac].xccb102h * l_rate 
      # fengmy 150106 add xccb102--begin
      CALL axct301_xccb102_sum1()
      LET g_xccb1_d[l_ac].xccb102a_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102a_1,2)
      LET g_xccb1_d[l_ac].xccb102b_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102b_1,2)
      LET g_xccb1_d[l_ac].xccb102c_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102c_1,2)
      LET g_xccb1_d[l_ac].xccb102d_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102d_1,2)
      LET g_xccb1_d[l_ac].xccb102e_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102e_1,2)
      LET g_xccb1_d[l_ac].xccb102f_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102f_1,2)
      LET g_xccb1_d[l_ac].xccb102g_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102g_1,2)
      LET g_xccb1_d[l_ac].xccb102h_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102h_1,2)
      INSERT INTO xccb_t
             (xccbent,
              xccbcomp,xccbld,xccb004,xccb005,xccb003,
              xccb001,xccb002,xccb006,xccb007,xccb008,xccb009,xccb010
              ,xccb101,xccb102,xccb102a,xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h,xccbownid,xccbowndp,xccbcrtid,xccbcrtdp,xccbcrtdt,xccbmodid,xccbmoddt,xccbcnfid,xccbcnfdt,xccbpstid,xccbpstdt) 
       VALUES(g_enterprise,
              g_xccb_m.xccbcomp,g_xccb_m.xccbld,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb_m.xccb003,
              '2',g_xccb_d[l_ac].xccb002,g_xccb_d[l_ac].xccb006,g_xccb_d[l_ac].xccb007,g_xccb_d[l_ac].xccb008, 
                  g_xccb_d[l_ac].xccb009,g_xccb_d[l_ac].xccb010
              ,g_xccb1_d[l_ac].xccb101_1,g_xccb1_d[l_ac].xccb102_1,g_xccb1_d[l_ac].xccb102a_1,g_xccb1_d[l_ac].xccb102b_1, 
                  g_xccb1_d[l_ac].xccb102c_1,g_xccb1_d[l_ac].xccb102d_1,g_xccb1_d[l_ac].xccb102e_1, 
                  g_xccb1_d[l_ac].xccb102f_1,g_xccb1_d[l_ac].xccb102g_1,g_xccb1_d[l_ac].xccb102h_1, 
                  g_xccb2_d[l_ac].xccbownid,g_xccb2_d[l_ac].xccbowndp,g_xccb2_d[l_ac].xccbcrtid, 
                  g_xccb2_d[l_ac].xccbcrtdp,g_xccb2_d[l_ac].xccbcrtdt,g_xccb2_d[l_ac].xccbmodid, 
                  g_xccb2_d[l_ac].xccbmoddt,g_xccb2_d[l_ac].xccbcnfid,g_xccb2_d[l_ac].xccbcnfdt, 
                  g_xccb2_d[l_ac].xccbpstid,g_xccb2_d[l_ac].xccbpstdt)
      # fengmy 150106 add xccb102--end
   END IF
   
   IF g_glaa019 = 'Y' THEN
#      CALL s_aooi160_get_exrate('1',g_xccb_m.xccbcomp,l_bdate,g_glaa001,   #fengmy150119 mark
                                        #目的幣別;  交易金額;              匯類類型
#                                         g_glaa016,0,g_glaa022)            #fengmy150119 mark
                  CALL s_aooi160_get_exrate('2',g_xccb_m.xccbld,g_today,g_glaa001,   #fengmy150119
                                        #目的幣別;  交易金額;              匯類類型
                                     g_glaa020,0,g_glaa022)                          #fengmy150119

          RETURNING l_rate
      LET g_xccb3_d[l_ac].xccb002_3 = g_xccb_d[l_ac].xccb002
      LET g_xccb3_d[l_ac].xccb006_3 = g_xccb_d[l_ac].xccb006
      LET g_xccb3_d[l_ac].xccb007_3 = g_xccb_d[l_ac].xccb007
      LET g_xccb3_d[l_ac].xccb008_3 = g_xccb_d[l_ac].xccb008
      LET g_xccb3_d[l_ac].xccb009_3 = g_xccb_d[l_ac].xccb009
      LET g_xccb3_d[l_ac].xccb010_3 = g_xccb_d[l_ac].xccb010
      LET g_xccb3_d[l_ac].xccb101_3 = g_xccb_d[l_ac].xccb101
      LET g_xccb3_d[l_ac].xccb102a_3 = g_xccb_d[l_ac].xccb102a * l_rate 
      LET g_xccb3_d[l_ac].xccb102b_3 = g_xccb_d[l_ac].xccb102b * l_rate 
      LET g_xccb3_d[l_ac].xccb102c_3 = g_xccb_d[l_ac].xccb102c * l_rate 
      LET g_xccb3_d[l_ac].xccb102d_3 = g_xccb_d[l_ac].xccb102d * l_rate 
      LET g_xccb3_d[l_ac].xccb102e_3 = g_xccb_d[l_ac].xccb102e * l_rate 
      LET g_xccb3_d[l_ac].xccb102f_3 = g_xccb_d[l_ac].xccb102f * l_rate 
      LET g_xccb3_d[l_ac].xccb102g_3 = g_xccb_d[l_ac].xccb102g * l_rate 
      LET g_xccb3_d[l_ac].xccb102h_3 = g_xccb_d[l_ac].xccb102h * l_rate 
      # fengmy 150106 add xccb102--begin
      CALL axct301_xccb102_sum3()
      LET g_xccb3_d[l_ac].xccb102a_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102a_3,2)
      LET g_xccb3_d[l_ac].xccb102b_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102b_3,2)
      LET g_xccb3_d[l_ac].xccb102c_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102c_3,2)
      LET g_xccb3_d[l_ac].xccb102d_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102d_3,2)
      LET g_xccb3_d[l_ac].xccb102e_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102e_3,2)
      LET g_xccb3_d[l_ac].xccb102f_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102f_3,2)
      LET g_xccb3_d[l_ac].xccb102g_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102g_3,2)
      LET g_xccb3_d[l_ac].xccb102h_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102h_3,2)
      INSERT INTO xccb_t
             (xccbent,
              xccbcomp,xccbld,xccb004,xccb005,xccb003,
              xccb001,xccb002,xccb006,xccb007,xccb008,xccb009,xccb010
              ,xccb101,xccb102,xccb102a,xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h,xccbownid,xccbowndp,xccbcrtid,xccbcrtdp,xccbcrtdt,xccbmodid,xccbmoddt,xccbcnfid,xccbcnfdt,xccbpstid,xccbpstdt) 
       VALUES(g_enterprise,
              g_xccb_m.xccbcomp,g_xccb_m.xccbld,g_xccb_m.xccb004,g_xccb_m.xccb005,g_xccb_m.xccb003,
              '3',g_xccb_d[l_ac].xccb002,g_xccb_d[l_ac].xccb006,g_xccb_d[l_ac].xccb007,g_xccb_d[l_ac].xccb008, 
                  g_xccb_d[l_ac].xccb009,g_xccb_d[l_ac].xccb010
                 ,g_xccb3_d[l_ac].xccb101_3,g_xccb3_d[l_ac].xccb102_3, g_xccb3_d[l_ac].xccb102a_3,g_xccb3_d[l_ac].xccb102b_3, 
                  g_xccb3_d[l_ac].xccb102c_3,g_xccb3_d[l_ac].xccb102d_3,g_xccb3_d[l_ac].xccb102e_3, 
                  g_xccb3_d[l_ac].xccb102f_3,g_xccb3_d[l_ac].xccb102g_3,g_xccb3_d[l_ac].xccb102h_3, 
                  g_xccb2_d[l_ac].xccbownid,g_xccb2_d[l_ac].xccbowndp,g_xccb2_d[l_ac].xccbcrtid, 
                  g_xccb2_d[l_ac].xccbcrtdp,g_xccb2_d[l_ac].xccbcrtdt,g_xccb2_d[l_ac].xccbmodid, 
                  g_xccb2_d[l_ac].xccbmoddt,g_xccb2_d[l_ac].xccbcnfid,g_xccb2_d[l_ac].xccbcnfdt, 
                  g_xccb2_d[l_ac].xccbpstid,g_xccb2_d[l_ac].xccbpstdt)
     # fengmy 150106 add xccb102--end
  END IF

END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct301_s01()
DEFINE p_xrad001      LIKE xrad_t.xrad001
DEFINE l_xradl003     LIKE type_t.chr80
DEFINE ls_str         STRING
DEFINE l_chr          LIKE type_t.chr1
DEFINE l_chr1         LIKE type_t.chr1
DEFINE l_num          LIKE type_t.num5
   
   OPEN WINDOW w_axct301_s01 WITH FORM cl_ap_formpath("axc","axct301_s01")
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #輸入開始
      INPUT BY NAME g_xccb_s.name,g_xccb_s.dir
         BEFORE INPUT
           


         AFTER INPUT
            
                
            

      END INPUT
      
      
      
      DISPLAY ARRAY g_xccb4_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail5")
               LET l_ac = g_detail_idx
               
               #add-point:page1自定義行為

               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               
               LET g_current_page = 5
               
         
         END DISPLAY

      ON ACTION close
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION exit
         LET INT_FLAG = TRUE
         EXIT DIALOG
      
      ON ACTION produce
         LET w = ui.Window.getCurrent()
         LET f = w.getForm()
         LET page = f.FindNode("Page","page_5")
         CALL axct301_excelexample(page,base.TypeInfo.create(g_xccb4_d),'Y')
         ACCEPT DIALOG

      ON ACTION off
         LET INT_FLAG = TRUE
         EXIT DIALOG
         
      ON ACTION browser
         CALL cl_client_browse_dir() RETURNING g_xccb_s.dir
         LET ls_str = g_xccb_s.dir
         #抓取目录斜杆
         LET l_num =ls_str.getIndexOf(':',1)                                    #抓取：后的字符位置
         LET l_chr = ls_str.substring(l_num+1,l_num+1)                        #截取冒号后的字符 
         LET l_chr1 = ls_str.substring(ls_str.getLength(),ls_str.getLength())    #判断是否为根目录
         IF l_chr <> l_chr1  THEN
            LET g_xccb_s.dir = g_xccb_s.dir||l_chr
         ELSE
            LET g_xccb_s.dir = g_xccb_s.dir
         END IF
         DISPLAY BY NAME g_xccb_s.dir


   END DIALOG



      #畫面關閉
      CLOSE WINDOW w_axct301_s01
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct301_xccb003_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xccb_m.xccb003
   CALL ap_ref_array2(g_ref_fields,"SELECT xcatl003 FROM xcatl_t WHERE xcatlent='"||g_enterprise||"' AND xcatl001=? AND xcatl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xccb_m.xccb003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xccb_m.xccb003_desc
END FUNCTION

################################################################################
# Descriptions...: 產生次要素
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 150106 By fengmy
# Modify.........:
################################################################################
PRIVATE FUNCTION axct301_generate_xcdb()
DEFINE l_xcdb          RECORD LIKE xcdb_t.*
DEFINE l_xccb          RECORD LIKE xccb_t.*
DEFINE l_sql           STRING
DEFINE l_success       LIKE type_t.chr1
DEFINE l_xcdb_count    LIKE type_t.num5
DEFINE la_param  RECORD
                 prog   STRING,
                 param  DYNAMIC ARRAY OF STRING
                 END RECORD
DEFINE ls_js     STRING
DEFINE l_cnt     LIKE type_t.num5      #成本次要素个数     #fengmy150312
DEFINE l_success1      LIKE type_t.num5

#fengmy150312---begin
IF NOT s_axct310_cre_tmp_table() THEN
   RETURN
END IF
#fengmy150312---end
CALL s_transaction_begin()
  LET l_success = 'Y'
#  LET l_flag1 = 'N'   #fengmy150312  
  #删除axct305已有资料 
  LET l_sql = "SELECT COUNT(*) FROM xcdb_t ",
              " WHERE xcdbent = ? AND xcdbcomp = ? AND xcdbld = ?",
              "   AND xcdb003 = ? AND xcdb004 = ? AND xcdb005 = ? "              
  DECLARE axct301_xcdb_count_cs1 CURSOR FROM l_sql 
  OPEN axct301_xcdb_count_cs1 USING g_enterprise,g_xccb_m.xccbcomp,g_xccb_m.xccbld,
                                   g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005
                                   
  FETCH axct301_xcdb_count_cs1 INTO l_xcdb_count
  IF l_xcdb_count > 0 THEN
     IF cl_ask_confirm('axc-00622') THEN   
        LET l_sql = "DELETE FROM xcdb_t ",
                    " WHERE xcdbent = '",g_enterprise,"'  AND xcdbcomp = '",g_xccb_m.xccbcomp,"'",
                    "   AND xcdbld = '",g_xccb_m.xccbld,"' AND xcdb003 = '",g_xccb_m.xccb003,"'",
                    "   AND xcdb004 = '",g_xccb_m.xccb004,"' AND xcdb005 = '",g_xccb_m.xccb005,"'"                   
                     
        PREPARE axct301_del_xcdb FROM l_sql
        IF SQLCA.sqlcode THEN
           INITIALIZE g_errparam TO NULL
           LET g_errparam.code   = SQLCA.sqlcode
           LET g_errparam.extend = "PREPARE delete xcdb_t"
           LET g_errparam.popup  = TRUE
           CALL cl_err()
           RETURN 
        END IF
        EXECUTE axct301_del_xcdb 
        IF SQLCA.sqlcode THEN
           INITIALIZE g_errparam TO NULL
           LET g_errparam.code   = SQLCA.sqlcode
           LET g_errparam.extend = "EXECUTE delete xcdb_t"
           LET g_errparam.popup  = TRUE
           CALL cl_err()
           RETURN 
        END IF 
     ELSE 
        RETURN         
     END IF  
  END IF
    
  
  #生成axct305资料 
  LET l_sql = "SELECT * ",
              "  FROM xccb_t WHERE xccbent = ? AND xccbcomp = ? AND xccbld = ?",
                            "  AND xccb003 = ? AND xccb004 = ? AND xccb005 = ? ",              
              "  ORDER BY xccb001"
  DECLARE axct301_xcdb_cs CURSOR FROM l_sql 
  
  FOREACH axct301_xcdb_cs USING g_enterprise,g_xccb_m.xccbcomp,g_xccb_m.xccbld,
                                g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005                                
                          INTO l_xccb.*
#fengmy150316---begin
          CASE l_xccb.xccb001
             WHEN 2  IF g_glaa015 = 'N' THEN CONTINUE FOREACH END IF
             WHEN 3  IF g_glaa019 = 'N' THEN CONTINUE FOREACH END IF
             OTHERWISE
          END CASE 
#fengmy150316---end
          LET l_xcdb.xcdbent = g_enterprise          
          LET l_xcdb.xcdbcomp = g_xccb_m.xccbcomp
          LET l_xcdb.xcdbld = g_xccb_m.xccbld
          LET l_xcdb.xcdb001 = l_xccb.xccb001
          LET l_xcdb.xcdb002 = l_xccb.xccb002
          LET l_xcdb.xcdb003 = g_xccb_m.xccb003
          LET l_xcdb.xcdb004 = g_xccb_m.xccb004
          LET l_xcdb.xcdb005 = g_xccb_m.xccb005
          LET l_xcdb.xcdb006 = l_xccb.xccb006
          LET l_xcdb.xcdb007 = l_xccb.xccb007
          LET l_xcdb.xcdb008 = l_xccb.xccb008
          LET l_xcdb.xcdb009 = l_xccb.xccb009
          LET l_xcdb.xcdb010 = ' '
          LET l_xcdb.xcdb011 = l_xccb.xccb010
          LET l_xcdb.xcdb101 = l_xccb.xccb101
          LET l_xcdb.xcdb102 = l_xccb.xccb102    

     CALL s_axct310_ins(g_xccb_m.xccbld,g_xccb_m.xccbcomp,l_xcdb.xcdb001,l_xcdb.xcdb002,g_xccb_m.xccb003,g_xccb_m.xccb004,g_xccb_m.xccb005,
                                        l_xcdb.xcdb007,l_xcdb.xcdb008,l_xcdb.xcdb009,l_xcdb.xcdb102)
          RETURNING l_success1,l_cnt
     IF l_success1 THEN
        LET l_sql =  " SELECT xcam004,amt FROM s_axct310_tmp2 "
        PREPARE s_axct310_tmp2_pb FROM l_sql
        DECLARE s_axct310_tmp2_cs CURSOR FOR s_axct310_tmp2_pb
        IF l_cnt = 1 THEN
           EXECUTE s_axct310_tmp2_pb INTO l_xcdb.xcdb010,l_xcdb.xcdb102
           INSERT INTO xcdb_t VALUES(l_xcdb.*)
           IF SQLCA.SQLCODE AND (NOT cl_err_sql_dup_value(SQLCA.SQLCODE)) THEN
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = SQLCA.sqlcode
              LET g_errparam.extend = 'ins xcdb_t'
              LET g_errparam.popup = TRUE
              CALL cl_err()
              LET l_success = 'N' 
              EXIT FOREACH      
           END IF                           
        ELSE
           FOREACH s_axct310_tmp2_cs INTO l_xcdb.xcdb010,l_xcdb.xcdb102
              INSERT INTO xcdb_t VALUES(l_xcdb.*)
              IF SQLCA.SQLCODE AND (NOT cl_err_sql_dup_value(SQLCA.SQLCODE)) THEN
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = SQLCA.sqlcode
                 LET g_errparam.extend = 'ins xcdb_t'
                 LET g_errparam.popup = TRUE
                 CALL cl_err()
                 LET l_success = 'N' 
                 EXIT FOREACH      
              END IF                     
           END FOREACH        
        END IF
     ELSE
        INSERT INTO xcdb_t VALUES(l_xcdb.*)
        IF SQLCA.SQLCODE AND (NOT cl_err_sql_dup_value(SQLCA.SQLCODE)) THEN
           INITIALIZE g_errparam TO NULL
           LET g_errparam.code = SQLCA.sqlcode
           LET g_errparam.extend = 'ins xcdb_t'
           LET g_errparam.popup = TRUE
           CALL cl_err()
           LET l_success = 'N' 
           EXIT FOREACH      
        END IF                    
     END IF
  END FOREACH
  IF l_success = 'N' THEN  
      CALL s_transaction_end('N','0') 
   ELSE  
      
      CALL s_transaction_end('Y','0')
   END IF  
  CALL s_axct310_drop_tmp_table()    #fengmy150312
  IF l_success = 'Y' THEN
     INITIALIZE la_param.* TO NULL     
     LET la_param.prog = "axct305"             
     LET la_param.param[1] = g_xccb_m.xccbld
     LET la_param.param[2] = g_xccb_m.xccb003
     LET la_param.param[3] = g_xccb_m.xccb004
     LET la_param.param[4] = g_xccb_m.xccb005              
     LET ls_js = util.JSON.stringify(la_param)
     DISPLAY ls_js
     CALL cl_cmdrun(ls_js)
  END IF 
END FUNCTION

################################################################################
# Descriptions...: 總成本-幣一
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 150106 By fengmy
# Modify.........:
################################################################################
PRIVATE FUNCTION axct301_xccb102_sum()
   IF cl_null(g_xccb_d[l_ac].xccb102a) THEN LET g_xccb_d[l_ac].xccb102a = 0 END IF
   IF cl_null(g_xccb_d[l_ac].xccb102b) THEN LET g_xccb_d[l_ac].xccb102b = 0 END IF
   IF cl_null(g_xccb_d[l_ac].xccb102c) THEN LET g_xccb_d[l_ac].xccb102c = 0 END IF
   IF cl_null(g_xccb_d[l_ac].xccb102d) THEN LET g_xccb_d[l_ac].xccb102d = 0 END IF
   IF cl_null(g_xccb_d[l_ac].xccb102e) THEN LET g_xccb_d[l_ac].xccb102e = 0 END IF
   IF cl_null(g_xccb_d[l_ac].xccb102f) THEN LET g_xccb_d[l_ac].xccb102f = 0 END IF
   IF cl_null(g_xccb_d[l_ac].xccb102g) THEN LET g_xccb_d[l_ac].xccb102g = 0 END IF
   IF cl_null(g_xccb_d[l_ac].xccb102h) THEN LET g_xccb_d[l_ac].xccb102h = 0 END IF
   
   LET g_xccb_d[l_ac].xccb102=g_xccb_d[l_ac].xccb102a+g_xccb_d[l_ac].xccb102b+g_xccb_d[l_ac].xccb102c
                             +g_xccb_d[l_ac].xccb102d+g_xccb_d[l_ac].xccb102e+g_xccb_d[l_ac].xccb102f 
                             +g_xccb_d[l_ac].xccb102g+g_xccb_d[l_ac].xccb102h
   LET g_xccb_d[l_ac].xccb102 = s_curr_round(g_xccb_m.xccbcomp,g_glaa001,g_xccb_d[l_ac].xccb102,2)
END FUNCTION

################################################################################
# Descriptions...: 總成本-幣二
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 150106 By fengmy
# Modify.........:
################################################################################
PRIVATE FUNCTION axct301_xccb102_sum1()
   IF cl_null(g_xccb1_d[l_ac].xccb102a_1) THEN LET g_xccb1_d[l_ac].xccb102a_1 = 0 END IF
   IF cl_null(g_xccb1_d[l_ac].xccb102b_1) THEN LET g_xccb1_d[l_ac].xccb102b_1 = 0 END IF
   IF cl_null(g_xccb1_d[l_ac].xccb102c_1) THEN LET g_xccb1_d[l_ac].xccb102c_1 = 0 END IF
   IF cl_null(g_xccb1_d[l_ac].xccb102d_1) THEN LET g_xccb1_d[l_ac].xccb102d_1 = 0 END IF
   IF cl_null(g_xccb1_d[l_ac].xccb102e_1) THEN LET g_xccb1_d[l_ac].xccb102e_1 = 0 END IF
   IF cl_null(g_xccb1_d[l_ac].xccb102f_1) THEN LET g_xccb1_d[l_ac].xccb102f_1 = 0 END IF
   IF cl_null(g_xccb1_d[l_ac].xccb102g_1) THEN LET g_xccb1_d[l_ac].xccb102g_1 = 0 END IF
   IF cl_null(g_xccb1_d[l_ac].xccb102h_1) THEN LET g_xccb1_d[l_ac].xccb102h_1 = 0 END IF
   
   LET g_xccb1_d[l_ac].xccb102_1=g_xccb1_d[l_ac].xccb102a_1+g_xccb1_d[l_ac].xccb102b_1+g_xccb1_d[l_ac].xccb102c_1
                             +g_xccb1_d[l_ac].xccb102d_1+g_xccb1_d[l_ac].xccb102e_1+g_xccb1_d[l_ac].xccb102f_1 
                             +g_xccb1_d[l_ac].xccb102g_1+g_xccb1_d[l_ac].xccb102h_1
   LET g_xccb1_d[l_ac].xccb102_1 = s_curr_round(g_xccb_m.xccbcomp,g_glaa016,g_xccb1_d[l_ac].xccb102_1,2)
END FUNCTION

################################################################################
# Descriptions...: 總成本-幣三
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 150106 By fengmy
# Modify.........:
################################################################################
PRIVATE FUNCTION axct301_xccb102_sum3()
   IF cl_null(g_xccb3_d[l_ac].xccb102a_3) THEN LET g_xccb3_d[l_ac].xccb102a_3 = 0 END IF
   IF cl_null(g_xccb3_d[l_ac].xccb102b_3) THEN LET g_xccb3_d[l_ac].xccb102b_3 = 0 END IF
   IF cl_null(g_xccb3_d[l_ac].xccb102c_3) THEN LET g_xccb3_d[l_ac].xccb102c_3 = 0 END IF
   IF cl_null(g_xccb3_d[l_ac].xccb102d_3) THEN LET g_xccb3_d[l_ac].xccb102d_3 = 0 END IF
   IF cl_null(g_xccb3_d[l_ac].xccb102e_3) THEN LET g_xccb3_d[l_ac].xccb102e_3 = 0 END IF
   IF cl_null(g_xccb3_d[l_ac].xccb102f_3) THEN LET g_xccb3_d[l_ac].xccb102f_3 = 0 END IF
   IF cl_null(g_xccb3_d[l_ac].xccb102g_3) THEN LET g_xccb3_d[l_ac].xccb102g_3 = 0 END IF
   IF cl_null(g_xccb3_d[l_ac].xccb102h_3) THEN LET g_xccb3_d[l_ac].xccb102h_3 = 0 END IF
   
   LET g_xccb3_d[l_ac].xccb102_3=g_xccb3_d[l_ac].xccb102a_3+g_xccb3_d[l_ac].xccb102b_3+g_xccb3_d[l_ac].xccb102c_3
                             +g_xccb3_d[l_ac].xccb102d_3+g_xccb3_d[l_ac].xccb102e_3+g_xccb3_d[l_ac].xccb102f_3 
                             +g_xccb3_d[l_ac].xccb102g_3+g_xccb3_d[l_ac].xccb102h_3
   LET g_xccb3_d[l_ac].xccb102_3 = s_curr_round(g_xccb_m.xccbcomp,g_glaa020,g_xccb3_d[l_ac].xccb102_3,2)
END FUNCTION

 
{</section>}
 
