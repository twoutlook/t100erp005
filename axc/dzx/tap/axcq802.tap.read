<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="axcq802" std_prog="axcq802" erpver="1.0" module="AXC" ver="2" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status="u"/>
    <free_style value="N" status="u"/>
    <start_arg value="" status="u"/>
  </other>
  <point name="function.axcq802_b_fill_1" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axcq802_b_fill_1()
   DEFINE l_amount_sum  LIKE xccc_t.xccc280
   DEFINE l_amt1_sum    LIKE xccc_t.xccc280
   DEFINE l_amt2_sum    LIKE xccc_t.xccc280
   DEFINE l_amt3_sum    LIKE xccc_t.xccc280
   DEFINE l_amt4_sum    LIKE xccc_t.xccc280
   DEFINE l_amt5_sum    LIKE xccc_t.xccc280
   DEFINE l_amt6_sum    LIKE xccc_t.xccc280
   DEFINE l_amt7_sum    LIKE xccc_t.xccc280
   DEFINE l_amt8_sum    LIKE xccc_t.xccc280
   DEFINE l_amt9_sum    LIKE xccc_t.xccc280
   DEFINE l_amt10_sum   LIKE xccc_t.xccc280
   DEFINE l_idle_sum    LIKE xccc_t.xccc280
   DEFINE l_idle1_sum   LIKE xccc_t.xccc280
   DEFINE l_idle2_sum   LIKE xccc_t.xccc280
   DEFINE l_idle3_sum   LIKE xccc_t.xccc280
   DEFINE l_idle4_sum   LIKE xccc_t.xccc280
   DEFINE l_idle5_sum   LIKE xccc_t.xccc280
   DEFINE l_idle6_sum   LIKE xccc_t.xccc280
   DEFINE l_idle7_sum   LIKE xccc_t.xccc280
   DEFINE l_idle8_sum   LIKE xccc_t.xccc280
   DEFINE l_idle9_sum   LIKE xccc_t.xccc280
   DEFINE l_idle10_sum  LIKE xccc_t.xccc280
   DEFINE l_amount_sum1  LIKE xccc_t.xccc280
   DEFINE l_amt1_sum1    LIKE xccc_t.xccc280
   DEFINE l_amt2_sum1    LIKE xccc_t.xccc280
   DEFINE l_amt3_sum1    LIKE xccc_t.xccc280
   DEFINE l_amt4_sum1    LIKE xccc_t.xccc280
   DEFINE l_amt5_sum1    LIKE xccc_t.xccc280
   DEFINE l_amt6_sum1    LIKE xccc_t.xccc280
   DEFINE l_amt7_sum1    LIKE xccc_t.xccc280
   DEFINE l_amt8_sum1    LIKE xccc_t.xccc280
   DEFINE l_amt9_sum1    LIKE xccc_t.xccc280
   DEFINE l_amt10_sum1   LIKE xccc_t.xccc280
   DEFINE l_idle_sum1    LIKE xccc_t.xccc280
   DEFINE l_idle1_sum1   LIKE xccc_t.xccc280
   DEFINE l_idle2_sum1   LIKE xccc_t.xccc280
   DEFINE l_idle3_sum1   LIKE xccc_t.xccc280
   DEFINE l_idle4_sum1   LIKE xccc_t.xccc280
   DEFINE l_idle5_sum1   LIKE xccc_t.xccc280
   DEFINE l_idle6_sum1   LIKE xccc_t.xccc280
   DEFINE l_idle7_sum1   LIKE xccc_t.xccc280
   DEFINE l_idle8_sum1   LIKE xccc_t.xccc280
   DEFINE l_idle9_sum1   LIKE xccc_t.xccc280
   DEFINE l_idle10_sum1  LIKE xccc_t.xccc280
   DEFINE l_amount_total LIKE xccc_t.xccc280
   DEFINE l_amt1_total   LIKE xccc_t.xccc280
   DEFINE l_amt2_total   LIKE xccc_t.xccc280
   DEFINE l_amt3_total   LIKE xccc_t.xccc280
   DEFINE l_amt4_total   LIKE xccc_t.xccc280
   DEFINE l_amt5_total   LIKE xccc_t.xccc280
   DEFINE l_amt6_total   LIKE xccc_t.xccc280
   DEFINE l_amt7_total   LIKE xccc_t.xccc280
   DEFINE l_amt8_total   LIKE xccc_t.xccc280
   DEFINE l_amt9_total   LIKE xccc_t.xccc280
   DEFINE l_amt10_total  LIKE xccc_t.xccc280
   DEFINE l_idle_total   LIKE xccc_t.xccc280
   DEFINE l_idle1_total   LIKE xccc_t.xccc280
   DEFINE l_idle2_total   LIKE xccc_t.xccc280
   DEFINE l_idle3_total   LIKE xccc_t.xccc280
   DEFINE l_idle4_total   LIKE xccc_t.xccc280
   DEFINE l_idle5_total   LIKE xccc_t.xccc280
   DEFINE l_idle6_total   LIKE xccc_t.xccc280
   DEFINE l_idle7_total   LIKE xccc_t.xccc280
   DEFINE l_idle8_total   LIKE xccc_t.xccc280
   DEFINE l_idle9_total   LIKE xccc_t.xccc280
   DEFINE l_idle10_total  LIKE xccc_t.xccc280
   DEFINE l_round_type    LIKE ooaa_t.ooaa002
   #150319-00004#24-----s
   DEFINE l_print_tmp RECORD
              xccd007 LIKE type_t.chr500,               #單身-s
              xcfl005 LIKE xcfl_t.xcfl005, 
              xcfl006 LIKE xcfl_t.xcfl006, 
              xcfl006_desc LIKE type_t.chr500, 
              xcfl006_desc_desc LIKE type_t.chr500, 
              xcfl007 LIKE xcfl_t.xcfl007, 
              xcfl008 LIKE xcfl_t.xcfl008, 
              xcfl001 LIKE xcfl_t.xcfl001, 
              xcfl001_desc LIKE type_t.chr500, 
              xcfb010 LIKE type_t.chr10, 
              xcfb010_desc LIKE type_t.chr500, 
              xcfl009 LIKE xcfl_t.xcfl009, 
              xcce901 LIKE type_t.num20_6, 
              xccc280 LIKE type_t.num20_6, 
              l_amount LIKE type_t.num20_6, 
              l_idle LIKE type_t.num20_6, 
              l_qty1 LIKE type_t.chr20, 
              l_amt1 LIKE type_t.num20_6, 
              l_rate1 LIKE type_t.num20_6, 
              l_idle1 LIKE type_t.num20_6, 
              l_qty2 LIKE type_t.chr20, 
              l_amt2 LIKE type_t.num20_6, 
              l_rate2 LIKE type_t.num20_6, 
              l_idle2 LIKE type_t.num20_6, 
              l_qty3 LIKE type_t.chr20, 
              l_amt3 LIKE type_t.num20_6, 
              l_rate3 LIKE type_t.num20_6, 
              l_idle3 LIKE type_t.num20_6, 
              l_qty4 LIKE type_t.chr20, 
              l_amt4 LIKE type_t.num20_6, 
              l_rate4 LIKE type_t.num20_6, 
              l_idle4 LIKE type_t.num20_6, 
              l_qty5 LIKE type_t.chr20, 
              l_amt5 LIKE type_t.num20_6, 
              l_rate5 LIKE type_t.num20_6, 
              l_idle5 LIKE type_t.num20_6, 
              l_qty6 LIKE type_t.chr20, 
              l_amt6 LIKE type_t.num20_6, 
              l_rate6 LIKE type_t.num20_6, 
              l_idle6 LIKE type_t.num20_6, 
              l_qty7 LIKE type_t.chr20, 
              l_amt7 LIKE type_t.num20_6, 
              l_rate7 LIKE type_t.num20_6, 
              l_idle7 LIKE type_t.num20_6, 
              l_qty8 LIKE type_t.chr20, 
              l_amt8 LIKE type_t.num20_6, 
              l_rate8 LIKE type_t.num20_6, 
              l_idle8 LIKE type_t.num20_6, 
              l_qty9 LIKE type_t.chr20, 
              l_amt9 LIKE type_t.num20_6, 
              l_rate9 LIKE type_t.num20_6, 
              l_idle9 LIKE type_t.num20_6, 
              l_qty10 LIKE type_t.chr20, 
              l_amt10 LIKE type_t.num20_6, 
              l_rate10 LIKE type_t.num20_6, 
              l_idle10 LIKE type_t.num20_6,             #單身-e
              l_ld_desc   LIKE type_t.chr80,               #單頭-s
              l_comp_desc LIKE type_t.chr80,
              l_year      LIKE xcfl_t.xcfl003,
              l_mon       LIKE xcfl_t.xcfl004,
              l_xcfl002   LIKE type_t.chr80,  #成本計算類型
              l_xrcc001   LIKE type_t.chr80,  #本位幣順序
              l_xcfa004   LIKE type_t.chr80   #呆滯計算方式 #單頭-e   
                      END RECORD
   #150319-00004#24-----e
   
   CALL axcq802_create_tmp()
   CALL axcq802_insert_tmp()
   #add-point:b_fill段sql_after
   LET g_sql = "SELECT  UNIQUE xccd007,imaf051,xcfl001,xcfl005,xcfl006,xcfl007,xcfl008,xccc280,xcce901,xcce902,t2.xcbfl003 ,t3.imaal003 ,t4.imaal004,t1.oocql004, 
                               qty1,amt1,rate1,idle1,qty2,amt2,rate2,idle2,qty3,amt3,rate3,idle3,qty4,amt4,rate4,idle4,qty5,amt5,rate5,idle5,
                               qty6,amt6,rate6,idle6,qty7,amt7,rate7,idle7,qty8,amt8,rate8,idle8,qty9,amt9,rate9,idle9,qty10,amt10,rate10,idle10
                      FROM axcq802_tmp",   
               "",
               " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='201' AND t1.oocql002=imaf051 AND t1.oocql003='"||g_dlang||"' ",
                " LEFT JOIN xcbfl_t t2 ON t2.xcbflent='"||g_enterprise||"' AND t2.xcbflcomp='"||g_xcfl_m.xcflcomp||"' AND t2.xcbfl001=xcfl001 AND t2.xcbfl002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t3 ON t3.imaalent='"||g_enterprise||"' AND t3.imaal001=xcfl006 AND t3.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t4 ON t4.imaalent='"||g_enterprise||"' AND t4.imaal001=xcfl006 AND t4.imaal002='"||g_dlang||"' "
             
 

   #end add-point
   
   #子單身的WC
   
   DELETE FROM axcq802_print_tmp   #150319-00004#24
   
   #判斷是否填充
   IF axcq802_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY imaf051,xcfl006,xcfl007,xcfl008"
      
      #add-point:b_fill段fill_before
      LET l_round_type = cl_get_para(g_enterprise,'','E-COM-0006')
      LET l_amount_sum  = 0 
      LET l_amt1_sum    = 0
      LET l_amt2_sum    = 0
      LET l_amt3_sum    = 0
      LET l_amt4_sum    = 0
      LET l_amt5_sum    = 0
      LET l_amt6_sum    = 0
      LET l_amt7_sum    = 0
      LET l_amt8_sum    = 0
      LET l_amt9_sum    = 0
      LET l_amt10_sum   = 0
      LET l_idle_sum    = 0
      LET l_idle1_sum   = 0
      LET l_idle2_sum   = 0
      LET l_idle3_sum   = 0
      LET l_idle4_sum   = 0
      LET l_idle5_sum   = 0
      LET l_idle6_sum   = 0
      LET l_idle7_sum   = 0
      LET l_idle8_sum   = 0
      LET l_idle9_sum   = 0
      LET l_idle10_sum  = 0
      LET l_amount_sum1  = 0 
      LET l_amt1_sum1    = 0
      LET l_amt2_sum1    = 0
      LET l_amt3_sum1    = 0
      LET l_amt4_sum1    = 0
      LET l_amt5_sum1    = 0
      LET l_amt6_sum1    = 0
      LET l_amt7_sum1    = 0
      LET l_amt8_sum1    = 0
      LET l_amt9_sum1    = 0
      LET l_amt10_sum1   = 0
      LET l_idle_sum1    = 0
      LET l_idle1_sum1   = 0
      LET l_idle2_sum1   = 0
      LET l_idle3_sum1   = 0
      LET l_idle4_sum1   = 0
      LET l_idle5_sum1   = 0
      LET l_idle6_sum1   = 0
      LET l_idle7_sum1   = 0
      LET l_idle8_sum1   = 0
      LET l_idle9_sum1   = 0
      LET l_idle10_sum1  = 0
      LET l_amount_total= 0
      LET l_amt1_total  = 0
      LET l_amt2_total  = 0
      LET l_amt3_total  = 0
      LET l_amt4_total  = 0
      LET l_amt5_total  = 0
      LET l_amt6_total  = 0
      LET l_amt7_total  = 0
      LET l_amt8_total  = 0
      LET l_amt9_total  = 0
      LET l_amt10_total = 0
      LET l_idle_total  = 0
      LET l_idle1_total = 0
      LET l_idle2_total = 0
      LET l_idle3_total = 0
      LET l_idle4_total = 0
      LET l_idle5_total = 0
      LET l_idle6_total = 0
      LET l_idle7_total = 0
      LET l_idle8_total = 0
      LET l_idle9_total = 0
      LET l_idle10_total= 0
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE axcq802_pb1 FROM g_sql
      DECLARE b_fill_cs1 CURSOR FOR axcq802_pb1
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
     
                                               
      FOREACH b_fill_cs1 INTO g_xcfl_d[l_ac].xccd007,g_xcfl_d[l_ac].xcfb010,g_xcfl_d[l_ac].xcfl001,g_xcfl_d[l_ac].xcfl005,g_xcfl_d[l_ac].xcfl006,g_xcfl_d[l_ac].xcfl007,g_xcfl_d[l_ac].xcfl008, 
          g_xcfl_d[l_ac].xccc280,g_xcfl_d[l_ac].xcce901,g_xcfl_d[l_ac].l_amount,g_xcfl_d[l_ac].xcfl001_desc,g_xcfl_d[l_ac].xcfl006_desc, 
          g_xcfl_d[l_ac].xcfl006_desc_desc,g_xcfl_d[l_ac].xcfb010_desc,
          g_xcfl_d[l_ac].l_qty1,g_xcfl_d[l_ac].l_amt1,g_xcfl_d[l_ac].l_rate1,g_xcfl_d[l_ac].l_idle1,g_xcfl_d[l_ac].l_qty2,g_xcfl_d[l_ac].l_amt2,g_xcfl_d[l_ac].l_rate2,g_xcfl_d[l_ac].l_idle2,
          g_xcfl_d[l_ac].l_qty3,g_xcfl_d[l_ac].l_amt3,g_xcfl_d[l_ac].l_rate3,g_xcfl_d[l_ac].l_idle3,g_xcfl_d[l_ac].l_qty4,g_xcfl_d[l_ac].l_amt4,g_xcfl_d[l_ac].l_rate4,g_xcfl_d[l_ac].l_idle4,
          g_xcfl_d[l_ac].l_qty5,g_xcfl_d[l_ac].l_amt5,g_xcfl_d[l_ac].l_rate5,g_xcfl_d[l_ac].l_idle5,g_xcfl_d[l_ac].l_qty6,g_xcfl_d[l_ac].l_amt6,g_xcfl_d[l_ac].l_rate6,g_xcfl_d[l_ac].l_idle6,
          g_xcfl_d[l_ac].l_qty7,g_xcfl_d[l_ac].l_amt7,g_xcfl_d[l_ac].l_rate7,g_xcfl_d[l_ac].l_idle7,g_xcfl_d[l_ac].l_qty8,g_xcfl_d[l_ac].l_amt8,g_xcfl_d[l_ac].l_rate8,g_xcfl_d[l_ac].l_idle8,
          g_xcfl_d[l_ac].l_qty9,g_xcfl_d[l_ac].l_amt9,g_xcfl_d[l_ac].l_rate9,g_xcfl_d[l_ac].l_idle9,g_xcfl_d[l_ac].l_qty10,g_xcfl_d[l_ac].l_amt10,g_xcfl_d[l_ac].l_rate10,g_xcfl_d[l_ac].l_idle10
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充
         #取位
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_amount,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_amount
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_amt1,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_amt1
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_amt2,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_amt2
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_amt3,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_amt3
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_amt4,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_amt4
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_amt5,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_amt5
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_amt6,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_amt6
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_amt7,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_amt7
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_amt8,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_amt8
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_amt9,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_amt9
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_amt10,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_amt10
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_idle1,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_idle1
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_idle2,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_idle2
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_idle3,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_idle3
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_idle4,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_idle4
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_idle5,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_idle5
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_idle6,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_idle6
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_idle7,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_idle7
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_idle8,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_idle8
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_idle9,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_idle9
         CALL s_num_round(l_round_type,g_xcfl_d[l_ac].l_idle10,g_ooaj004) RETURNING g_xcfl_d[l_ac].l_idle10
         
         IF g_cn = 1 THEN             
            LET g_xcfl_d[l_ac].l_amt1 = g_xcfl_d[l_ac].l_amount 
            LET g_xcfl_d[l_ac].l_idle = g_xcfl_d[l_ac].l_idle1
         END IF
         IF g_cn = 2 THEN             
            LET g_xcfl_d[l_ac].l_amt2 = g_xcfl_d[l_ac].l_amount - g_xcfl_d[l_ac].l_amt1
            LET g_xcfl_d[l_ac].l_idle = g_xcfl_d[l_ac].l_idle1 + g_xcfl_d[l_ac].l_idle2
         END IF
         IF g_cn = 3 THEN 
            LET g_xcfl_d[l_ac].l_amt3 = g_xcfl_d[l_ac].l_amount - (g_xcfl_d[l_ac].l_amt1 + g_xcfl_d[l_ac].l_amt2)
            LET g_xcfl_d[l_ac].l_idle = g_xcfl_d[l_ac].l_idle1 + g_xcfl_d[l_ac].l_idle2 + g_xcfl_d[l_ac].l_idle3
         END IF
         IF g_cn = 4 THEN 
            LET g_xcfl_d[l_ac].l_amt4 = g_xcfl_d[l_ac].l_amount - (g_xcfl_d[l_ac].l_amt1 + g_xcfl_d[l_ac].l_amt2 + g_xcfl_d[l_ac].l_amt3)
            LET g_xcfl_d[l_ac].l_idle = g_xcfl_d[l_ac].l_idle1 + g_xcfl_d[l_ac].l_idle2 + g_xcfl_d[l_ac].l_idle3 + g_xcfl_d[l_ac].l_idle4
         END IF
         IF g_cn = 5 THEN 
            LET g_xcfl_d[l_ac].l_amt5 = g_xcfl_d[l_ac].l_amount - 
                                     (g_xcfl_d[l_ac].l_amt1 + g_xcfl_d[l_ac].l_amt2 + g_xcfl_d[l_ac].l_amt3 + g_xcfl_d[l_ac].l_amt4)
            LET g_xcfl_d[l_ac].l_idle = g_xcfl_d[l_ac].l_idle1 + g_xcfl_d[l_ac].l_idle2 + g_xcfl_d[l_ac].l_idle3 
                                        + g_xcfl_d[l_ac].l_idle4 + g_xcfl_d[l_ac].l_idle5
         END IF
         IF g_cn = 6 THEN 
            LET g_xcfl_d[l_ac].l_amt6 = g_xcfl_d[l_ac].l_amount - 
                                     (g_xcfl_d[l_ac].l_amt1 + g_xcfl_d[l_ac].l_amt2 + g_xcfl_d[l_ac].l_amt3 
                                      + g_xcfl_d[l_ac].l_amt4 + g_xcfl_d[l_ac].l_amt5)
            LET g_xcfl_d[l_ac].l_idle = g_xcfl_d[l_ac].l_idle1 + g_xcfl_d[l_ac].l_idle2 + g_xcfl_d[l_ac].l_idle3 
                                        + g_xcfl_d[l_ac].l_idle4 + g_xcfl_d[l_ac].l_idle5 + g_xcfl_d[l_ac].l_idle6
         END IF
         IF g_cn = 7 THEN 
            LET g_xcfl_d[l_ac].l_amt7 = g_xcfl_d[l_ac].l_amount - 
                                     (g_xcfl_d[l_ac].l_amt1 + g_xcfl_d[l_ac].l_amt2 + g_xcfl_d[l_ac].l_amt3 
                                      + g_xcfl_d[l_ac].l_amt4 + g_xcfl_d[l_ac].l_amt5 + g_xcfl_d[l_ac].l_amt6)
            LET g_xcfl_d[l_ac].l_idle = g_xcfl_d[l_ac].l_idle1 + g_xcfl_d[l_ac].l_idle2 + g_xcfl_d[l_ac].l_idle3 
                                        + g_xcfl_d[l_ac].l_idle4 + g_xcfl_d[l_ac].l_idle5 + g_xcfl_d[l_ac].l_idle6
                                        + g_xcfl_d[l_ac].l_idle7
         END IF
         IF g_cn = 8 THEN 
            LET g_xcfl_d[l_ac].l_amt8 = g_xcfl_d[l_ac].l_amount - 
                                     (g_xcfl_d[l_ac].l_amt1 + g_xcfl_d[l_ac].l_amt2 + g_xcfl_d[l_ac].l_amt3 
                                      + g_xcfl_d[l_ac].l_amt4 + g_xcfl_d[l_ac].l_amt5 + g_xcfl_d[l_ac].l_amt6 
                                      + g_xcfl_d[l_ac].l_amt7)
            LET g_xcfl_d[l_ac].l_idle = g_xcfl_d[l_ac].l_idle1 + g_xcfl_d[l_ac].l_idle2 + g_xcfl_d[l_ac].l_idle3 
                                        + g_xcfl_d[l_ac].l_idle4 + g_xcfl_d[l_ac].l_idle5 + g_xcfl_d[l_ac].l_idle6
                                        + g_xcfl_d[l_ac].l_idle7 + g_xcfl_d[l_ac].l_idle8
         END IF
         IF g_cn = 9 THEN 
            LET g_xcfl_d[l_ac].l_amt9 = (g_xcfl_d[l_ac].l_amt1 + g_xcfl_d[l_ac].l_amt2 + g_xcfl_d[l_ac].l_amt3 
                                      + g_xcfl_d[l_ac].l_amt4 + g_xcfl_d[l_ac].l_amt5 + g_xcfl_d[l_ac].l_amt6 
                                      + g_xcfl_d[l_ac].l_amt7 + g_xcfl_d[l_ac].l_amt8)
            LET g_xcfl_d[l_ac].l_idle = g_xcfl_d[l_ac].l_idle1 + g_xcfl_d[l_ac].l_idle2 + g_xcfl_d[l_ac].l_idle3 
                                        + g_xcfl_d[l_ac].l_idle4 + g_xcfl_d[l_ac].l_idle5 + g_xcfl_d[l_ac].l_idle6
                                        + g_xcfl_d[l_ac].l_idle7 + g_xcfl_d[l_ac].l_idle8 + g_xcfl_d[l_ac].l_idle9
         END IF
         IF g_cn = 10 THEN 
            LET g_xcfl_d[l_ac].l_amt10 = (g_xcfl_d[l_ac].l_amt1 + g_xcfl_d[l_ac].l_amt2 + g_xcfl_d[l_ac].l_amt3 
                                      + g_xcfl_d[l_ac].l_amt4 + g_xcfl_d[l_ac].l_amt5 + g_xcfl_d[l_ac].l_amt6 
                                      + g_xcfl_d[l_ac].l_amt7 + g_xcfl_d[l_ac].l_amt8 + g_xcfl_d[l_ac].l_amt9)
            LET g_xcfl_d[l_ac].l_idle = g_xcfl_d[l_ac].l_idle1 + g_xcfl_d[l_ac].l_idle2 + g_xcfl_d[l_ac].l_idle3 
                                        + g_xcfl_d[l_ac].l_idle4 + g_xcfl_d[l_ac].l_idle5 + g_xcfl_d[l_ac].l_idle6
                                        + g_xcfl_d[l_ac].l_idle7 + g_xcfl_d[l_ac].l_idle8 + g_xcfl_d[l_ac].l_idle9 
                                        + g_xcfl_d[l_ac].l_idle10
         END IF
         
         
         
         
         
         
         #end add-point
      
         #帶出公用欄位reference值
         
         
 
        
         #add-point:單身資料抓取
         #总计
         LET l_amount_total= l_amount_total+ g_xcfl_d[l_ac].l_amount
         LET l_amt1_total  = l_amt1_total  + g_xcfl_d[l_ac].l_amt1  
         LET l_amt2_total  = l_amt2_total  + g_xcfl_d[l_ac].l_amt2  
         LET l_amt3_total  = l_amt3_total  + g_xcfl_d[l_ac].l_amt3  
         LET l_amt4_total  = l_amt4_total  + g_xcfl_d[l_ac].l_amt4  
         LET l_amt5_total  = l_amt5_total  + g_xcfl_d[l_ac].l_amt5  
         LET l_amt6_total  = l_amt6_total  + g_xcfl_d[l_ac].l_amt6  
         LET l_amt7_total  = l_amt7_total  + g_xcfl_d[l_ac].l_amt7  
         LET l_amt8_total  = l_amt8_total  + g_xcfl_d[l_ac].l_amt8  
         LET l_amt9_total  = l_amt9_total  + g_xcfl_d[l_ac].l_amt9  
         LET l_amt10_total = l_amt10_total + g_xcfl_d[l_ac].l_amt10 
         LET l_idle_total  = l_idle_total  + g_xcfl_d[l_ac].l_idle  
         LET l_idle1_total = l_idle1_total + g_xcfl_d[l_ac].l_idle1 
         LET l_idle2_total = l_idle2_total + g_xcfl_d[l_ac].l_idle2 
         LET l_idle3_total = l_idle3_total + g_xcfl_d[l_ac].l_idle3 
         LET l_idle4_total = l_idle4_total + g_xcfl_d[l_ac].l_idle4 
         LET l_idle5_total = l_idle5_total + g_xcfl_d[l_ac].l_idle5 
         LET l_idle6_total = l_idle6_total + g_xcfl_d[l_ac].l_idle6 
         LET l_idle7_total = l_idle7_total + g_xcfl_d[l_ac].l_idle7 
         LET l_idle8_total = l_idle8_total + g_xcfl_d[l_ac].l_idle8 
         LET l_idle9_total = l_idle9_total + g_xcfl_d[l_ac].l_idle9 
         LET l_idle10_total= l_idle10_total+ g_xcfl_d[l_ac].l_idle10
         #小计--材料分类
         LET l_amount_sum= l_amount_sum+ g_xcfl_d[l_ac].l_amount
         LET l_amt1_sum  = l_amt1_sum  + g_xcfl_d[l_ac].l_amt1  
         LET l_amt2_sum  = l_amt2_sum  + g_xcfl_d[l_ac].l_amt2  
         LET l_amt3_sum  = l_amt3_sum  + g_xcfl_d[l_ac].l_amt3  
         LET l_amt4_sum  = l_amt4_sum  + g_xcfl_d[l_ac].l_amt4  
         LET l_amt5_sum  = l_amt5_sum  + g_xcfl_d[l_ac].l_amt5  
         LET l_amt6_sum  = l_amt6_sum  + g_xcfl_d[l_ac].l_amt6  
         LET l_amt7_sum  = l_amt7_sum  + g_xcfl_d[l_ac].l_amt7  
         LET l_amt8_sum  = l_amt8_sum  + g_xcfl_d[l_ac].l_amt8  
         LET l_amt9_sum  = l_amt9_sum  + g_xcfl_d[l_ac].l_amt9  
         LET l_amt10_sum = l_amt10_sum + g_xcfl_d[l_ac].l_amt10 
         LET l_idle_sum  = l_idle_sum  + g_xcfl_d[l_ac].l_idle  
         LET l_idle1_sum = l_idle1_sum + g_xcfl_d[l_ac].l_idle1 
         LET l_idle2_sum = l_idle2_sum + g_xcfl_d[l_ac].l_idle2 
         LET l_idle3_sum = l_idle3_sum + g_xcfl_d[l_ac].l_idle3 
         LET l_idle4_sum = l_idle4_sum + g_xcfl_d[l_ac].l_idle4 
         LET l_idle5_sum = l_idle5_sum + g_xcfl_d[l_ac].l_idle5 
         LET l_idle6_sum = l_idle6_sum + g_xcfl_d[l_ac].l_idle6 
         LET l_idle7_sum = l_idle7_sum + g_xcfl_d[l_ac].l_idle7 
         LET l_idle8_sum = l_idle8_sum + g_xcfl_d[l_ac].l_idle8 
         LET l_idle9_sum = l_idle9_sum + g_xcfl_d[l_ac].l_idle9 
         LET l_idle10_sum= l_idle10_sum+ g_xcfl_d[l_ac].l_idle10
         IF l_ac > 1 THEN
            IF g_xcfl_d[l_ac].xcfl005 != g_xcfl_d[l_ac - 1].xcfl005 THEN
               LET g_xcfl_d[l_ac + 1].* = g_xcfl_d[l_ac].* 
               INITIALIZE  g_xcfl_d[l_ac].* TO NULL
               LET g_xcfl_d[l_ac].xcfl005 = cl_getmsg("axc-00205",g_lang) 
               LET g_xcfl_d[l_ac].l_amount= l_amount_sum- g_xcfl_d[l_ac + 1].l_amount
               LET g_xcfl_d[l_ac].l_amt1  = l_amt1_sum  - g_xcfl_d[l_ac + 1].l_amt1  
               LET g_xcfl_d[l_ac].l_amt2  = l_amt2_sum  - g_xcfl_d[l_ac + 1].l_amt2  
               LET g_xcfl_d[l_ac].l_amt3  = l_amt3_sum  - g_xcfl_d[l_ac + 1].l_amt3  
               LET g_xcfl_d[l_ac].l_amt4  = l_amt4_sum  - g_xcfl_d[l_ac + 1].l_amt4  
               LET g_xcfl_d[l_ac].l_amt5  = l_amt5_sum  - g_xcfl_d[l_ac + 1].l_amt5  
               LET g_xcfl_d[l_ac].l_amt6  = l_amt6_sum  - g_xcfl_d[l_ac + 1].l_amt6  
               LET g_xcfl_d[l_ac].l_amt7  = l_amt7_sum  - g_xcfl_d[l_ac + 1].l_amt7  
               LET g_xcfl_d[l_ac].l_amt8  = l_amt8_sum  - g_xcfl_d[l_ac + 1].l_amt8  
               LET g_xcfl_d[l_ac].l_amt9  = l_amt9_sum  - g_xcfl_d[l_ac + 1].l_amt9  
               LET g_xcfl_d[l_ac].l_amt10 = l_amt10_sum - g_xcfl_d[l_ac + 1].l_amt10 
               LET g_xcfl_d[l_ac].l_idle  = l_idle_sum  - g_xcfl_d[l_ac + 1].l_idle  
               LET g_xcfl_d[l_ac].l_idle1 = l_idle1_sum - g_xcfl_d[l_ac + 1].l_idle1 
               LET g_xcfl_d[l_ac].l_idle2 = l_idle2_sum - g_xcfl_d[l_ac + 1].l_idle2 
               LET g_xcfl_d[l_ac].l_idle3 = l_idle3_sum - g_xcfl_d[l_ac + 1].l_idle3 
               LET g_xcfl_d[l_ac].l_idle4 = l_idle4_sum - g_xcfl_d[l_ac + 1].l_idle4 
               LET g_xcfl_d[l_ac].l_idle5 = l_idle5_sum - g_xcfl_d[l_ac + 1].l_idle5 
               LET g_xcfl_d[l_ac].l_idle6 = l_idle6_sum - g_xcfl_d[l_ac + 1].l_idle6 
               LET g_xcfl_d[l_ac].l_idle7 = l_idle7_sum - g_xcfl_d[l_ac + 1].l_idle7 
               LET g_xcfl_d[l_ac].l_idle8 = l_idle8_sum - g_xcfl_d[l_ac + 1].l_idle8 
               LET g_xcfl_d[l_ac].l_idle9 = l_idle9_sum - g_xcfl_d[l_ac + 1].l_idle9 
               LET g_xcfl_d[l_ac].l_idle10= l_idle10_sum- g_xcfl_d[l_ac + 1].l_idle10
               LET l_ac = l_ac + 1
               LET l_amount_sum= g_xcfl_d[l_ac].l_amount
               LET l_amt1_sum  = g_xcfl_d[l_ac].l_amt1  
               LET l_amt2_sum  = g_xcfl_d[l_ac].l_amt2  
               LET l_amt3_sum  = g_xcfl_d[l_ac].l_amt3  
               LET l_amt4_sum  = g_xcfl_d[l_ac].l_amt4  
               LET l_amt5_sum  = g_xcfl_d[l_ac].l_amt5  
               LET l_amt6_sum  = g_xcfl_d[l_ac].l_amt6  
               LET l_amt7_sum  = g_xcfl_d[l_ac].l_amt7  
               LET l_amt8_sum  = g_xcfl_d[l_ac].l_amt8  
               LET l_amt9_sum  = g_xcfl_d[l_ac].l_amt9  
               LET l_amt10_sum = g_xcfl_d[l_ac].l_amt10 
               LET l_idle_sum  = g_xcfl_d[l_ac].l_idle  
               LET l_idle1_sum = g_xcfl_d[l_ac].l_idle1 
               LET l_idle2_sum = g_xcfl_d[l_ac].l_idle2 
               LET l_idle3_sum = g_xcfl_d[l_ac].l_idle3 
               LET l_idle4_sum = g_xcfl_d[l_ac].l_idle4 
               LET l_idle5_sum = g_xcfl_d[l_ac].l_idle5 
               LET l_idle6_sum = g_xcfl_d[l_ac].l_idle6 
               LET l_idle7_sum = g_xcfl_d[l_ac].l_idle7 
               LET l_idle8_sum = g_xcfl_d[l_ac].l_idle8 
               LET l_idle9_sum = g_xcfl_d[l_ac].l_idle9 
               LET l_idle10_sum= g_xcfl_d[l_ac].l_idle10 
            ELSE 
               IF g_xcfl_d[l_ac].xccd007 != g_xcfl_d[l_ac - 1].xccd007 THEN
                  LET g_xcfl_d[l_ac + 1].* = g_xcfl_d[l_ac].* 
                  INITIALIZE  g_xcfl_d[l_ac].* TO NULL
                  LET g_xcfl_d[l_ac].xcfl005 = cl_getmsg("axc-00205",g_lang) 
                  LET g_xcfl_d[l_ac].l_amount= l_amount_sum- g_xcfl_d[l_ac + 1].l_amount
                  LET g_xcfl_d[l_ac].l_amt1  = l_amt1_sum  - g_xcfl_d[l_ac + 1].l_amt1  
                  LET g_xcfl_d[l_ac].l_amt2  = l_amt2_sum  - g_xcfl_d[l_ac + 1].l_amt2  
                  LET g_xcfl_d[l_ac].l_amt3  = l_amt3_sum  - g_xcfl_d[l_ac + 1].l_amt3  
                  LET g_xcfl_d[l_ac].l_amt4  = l_amt4_sum  - g_xcfl_d[l_ac + 1].l_amt4  
                  LET g_xcfl_d[l_ac].l_amt5  = l_amt5_sum  - g_xcfl_d[l_ac + 1].l_amt5  
                  LET g_xcfl_d[l_ac].l_amt6  = l_amt6_sum  - g_xcfl_d[l_ac + 1].l_amt6  
                  LET g_xcfl_d[l_ac].l_amt7  = l_amt7_sum  - g_xcfl_d[l_ac + 1].l_amt7  
                  LET g_xcfl_d[l_ac].l_amt8  = l_amt8_sum  - g_xcfl_d[l_ac + 1].l_amt8  
                  LET g_xcfl_d[l_ac].l_amt9  = l_amt9_sum  - g_xcfl_d[l_ac + 1].l_amt9  
                  LET g_xcfl_d[l_ac].l_amt10 = l_amt10_sum - g_xcfl_d[l_ac + 1].l_amt10 
                  LET g_xcfl_d[l_ac].l_idle  = l_idle_sum  - g_xcfl_d[l_ac + 1].l_idle  
                  LET g_xcfl_d[l_ac].l_idle1 = l_idle1_sum - g_xcfl_d[l_ac + 1].l_idle1 
                  LET g_xcfl_d[l_ac].l_idle2 = l_idle2_sum - g_xcfl_d[l_ac + 1].l_idle2 
                  LET g_xcfl_d[l_ac].l_idle3 = l_idle3_sum - g_xcfl_d[l_ac + 1].l_idle3 
                  LET g_xcfl_d[l_ac].l_idle4 = l_idle4_sum - g_xcfl_d[l_ac + 1].l_idle4 
                  LET g_xcfl_d[l_ac].l_idle5 = l_idle5_sum - g_xcfl_d[l_ac + 1].l_idle5 
                  LET g_xcfl_d[l_ac].l_idle6 = l_idle6_sum - g_xcfl_d[l_ac + 1].l_idle6 
                  LET g_xcfl_d[l_ac].l_idle7 = l_idle7_sum - g_xcfl_d[l_ac + 1].l_idle7 
                  LET g_xcfl_d[l_ac].l_idle8 = l_idle8_sum - g_xcfl_d[l_ac + 1].l_idle8 
                  LET g_xcfl_d[l_ac].l_idle9 = l_idle9_sum - g_xcfl_d[l_ac + 1].l_idle9 
                  LET g_xcfl_d[l_ac].l_idle10= l_idle10_sum- g_xcfl_d[l_ac + 1].l_idle10
                  LET l_ac = l_ac + 1
                  LET l_amount_sum= g_xcfl_d[l_ac].l_amount
                  LET l_amt1_sum  = g_xcfl_d[l_ac].l_amt1  
                  LET l_amt2_sum  = g_xcfl_d[l_ac].l_amt2  
                  LET l_amt3_sum  = g_xcfl_d[l_ac].l_amt3  
                  LET l_amt4_sum  = g_xcfl_d[l_ac].l_amt4  
                  LET l_amt5_sum  = g_xcfl_d[l_ac].l_amt5  
                  LET l_amt6_sum  = g_xcfl_d[l_ac].l_amt6  
                  LET l_amt7_sum  = g_xcfl_d[l_ac].l_amt7  
                  LET l_amt8_sum  = g_xcfl_d[l_ac].l_amt8  
                  LET l_amt9_sum  = g_xcfl_d[l_ac].l_amt9  
                  LET l_amt10_sum = g_xcfl_d[l_ac].l_amt10 
                  LET l_idle_sum  = g_xcfl_d[l_ac].l_idle  
                  LET l_idle1_sum = g_xcfl_d[l_ac].l_idle1 
                  LET l_idle2_sum = g_xcfl_d[l_ac].l_idle2 
                  LET l_idle3_sum = g_xcfl_d[l_ac].l_idle3 
                  LET l_idle4_sum = g_xcfl_d[l_ac].l_idle4 
                  LET l_idle5_sum = g_xcfl_d[l_ac].l_idle5 
                  LET l_idle6_sum = g_xcfl_d[l_ac].l_idle6 
                  LET l_idle7_sum = g_xcfl_d[l_ac].l_idle7 
                  LET l_idle8_sum = g_xcfl_d[l_ac].l_idle8 
                  LET l_idle9_sum = g_xcfl_d[l_ac].l_idle9 
                  LET l_idle10_sum= g_xcfl_d[l_ac].l_idle10
               END IF               
            END IF
         END IF
         LET l_amount_sum1= l_amount_sum1+ g_xcfl_d[l_ac].l_amount
         LET l_amt1_sum1  = l_amt1_sum1  + g_xcfl_d[l_ac].l_amt1  
         LET l_amt2_sum1  = l_amt2_sum1  + g_xcfl_d[l_ac].l_amt2  
         LET l_amt3_sum1  = l_amt3_sum1  + g_xcfl_d[l_ac].l_amt3  
         LET l_amt4_sum1  = l_amt4_sum1  + g_xcfl_d[l_ac].l_amt4  
         LET l_amt5_sum1  = l_amt5_sum1  + g_xcfl_d[l_ac].l_amt5  
         LET l_amt6_sum1  = l_amt6_sum1  + g_xcfl_d[l_ac].l_amt6  
         LET l_amt7_sum1  = l_amt7_sum1  + g_xcfl_d[l_ac].l_amt7  
         LET l_amt8_sum1  = l_amt8_sum1  + g_xcfl_d[l_ac].l_amt8  
         LET l_amt9_sum1  = l_amt9_sum1  + g_xcfl_d[l_ac].l_amt9  
         LET l_amt10_sum1 = l_amt10_sum1 + g_xcfl_d[l_ac].l_amt10 
         LET l_idle_sum1  = l_idle_sum1  + g_xcfl_d[l_ac].l_idle  
         LET l_idle1_sum1 = l_idle1_sum1 + g_xcfl_d[l_ac].l_idle1 
         LET l_idle2_sum1 = l_idle2_sum1 + g_xcfl_d[l_ac].l_idle2 
         LET l_idle3_sum1 = l_idle3_sum1 + g_xcfl_d[l_ac].l_idle3 
         LET l_idle4_sum1 = l_idle4_sum1 + g_xcfl_d[l_ac].l_idle4 
         LET l_idle5_sum1 = l_idle5_sum1 + g_xcfl_d[l_ac].l_idle5 
         LET l_idle6_sum1 = l_idle6_sum1 + g_xcfl_d[l_ac].l_idle6 
         LET l_idle7_sum1 = l_idle7_sum1 + g_xcfl_d[l_ac].l_idle7 
         LET l_idle8_sum1 = l_idle8_sum1 + g_xcfl_d[l_ac].l_idle8 
         LET l_idle9_sum1 = l_idle9_sum1 + g_xcfl_d[l_ac].l_idle9 
         LET l_idle10_sum1= l_idle10_sum1+ g_xcfl_d[l_ac].l_idle10
         IF l_ac > 2 THEN
            IF g_xcfl_d[l_ac - 2].xccd007 !=  cl_getmsg("axc-00204",g_lang) THEN
               IF g_xcfl_d[l_ac].xccd007 != g_xcfl_d[l_ac - 2].xccd007 THEN
                  LET g_xcfl_d[l_ac + 1].* = g_xcfl_d[l_ac].* 
                  INITIALIZE  g_xcfl_d[l_ac].* TO NULL
                  LET g_xcfl_d[l_ac].xccd007 = cl_getmsg("axc-00204",g_lang) 
                  LET g_xcfl_d[l_ac].l_amount= l_amount_sum1- g_xcfl_d[l_ac + 1].l_amount
                  LET g_xcfl_d[l_ac].l_amt1  = l_amt1_sum1  - g_xcfl_d[l_ac + 1].l_amt1  
                  LET g_xcfl_d[l_ac].l_amt2  = l_amt2_sum1  - g_xcfl_d[l_ac + 1].l_amt2  
                  LET g_xcfl_d[l_ac].l_amt3  = l_amt3_sum1  - g_xcfl_d[l_ac + 1].l_amt3  
                  LET g_xcfl_d[l_ac].l_amt4  = l_amt4_sum1  - g_xcfl_d[l_ac + 1].l_amt4  
                  LET g_xcfl_d[l_ac].l_amt5  = l_amt5_sum1  - g_xcfl_d[l_ac + 1].l_amt5  
                  LET g_xcfl_d[l_ac].l_amt6  = l_amt6_sum1  - g_xcfl_d[l_ac + 1].l_amt6  
                  LET g_xcfl_d[l_ac].l_amt7  = l_amt7_sum1  - g_xcfl_d[l_ac + 1].l_amt7  
                  LET g_xcfl_d[l_ac].l_amt8  = l_amt8_sum1  - g_xcfl_d[l_ac + 1].l_amt8  
                  LET g_xcfl_d[l_ac].l_amt9  = l_amt9_sum1  - g_xcfl_d[l_ac + 1].l_amt9  
                  LET g_xcfl_d[l_ac].l_amt10 = l_amt10_sum1 - g_xcfl_d[l_ac + 1].l_amt10 
                  LET g_xcfl_d[l_ac].l_idle  = l_idle_sum1  - g_xcfl_d[l_ac + 1].l_idle  
                  LET g_xcfl_d[l_ac].l_idle1 = l_idle1_sum1 - g_xcfl_d[l_ac + 1].l_idle1 
                  LET g_xcfl_d[l_ac].l_idle2 = l_idle2_sum1 - g_xcfl_d[l_ac + 1].l_idle2 
                  LET g_xcfl_d[l_ac].l_idle3 = l_idle3_sum1 - g_xcfl_d[l_ac + 1].l_idle3 
                  LET g_xcfl_d[l_ac].l_idle4 = l_idle4_sum1 - g_xcfl_d[l_ac + 1].l_idle4 
                  LET g_xcfl_d[l_ac].l_idle5 = l_idle5_sum1 - g_xcfl_d[l_ac + 1].l_idle5 
                  LET g_xcfl_d[l_ac].l_idle6 = l_idle6_sum1 - g_xcfl_d[l_ac + 1].l_idle6 
                  LET g_xcfl_d[l_ac].l_idle7 = l_idle7_sum1 - g_xcfl_d[l_ac + 1].l_idle7 
                  LET g_xcfl_d[l_ac].l_idle8 = l_idle8_sum1 - g_xcfl_d[l_ac + 1].l_idle8 
                  LET g_xcfl_d[l_ac].l_idle9 = l_idle9_sum1 - g_xcfl_d[l_ac + 1].l_idle9 
                  LET g_xcfl_d[l_ac].l_idle10= l_idle10_sum1- g_xcfl_d[l_ac + 1].l_idle10
                  LET l_ac = l_ac + 1
                  LET l_amount_sum1= g_xcfl_d[l_ac].l_amount
                  LET l_amt1_sum1  = g_xcfl_d[l_ac].l_amt1  
                  LET l_amt2_sum1  = g_xcfl_d[l_ac].l_amt2  
                  LET l_amt3_sum1  = g_xcfl_d[l_ac].l_amt3  
                  LET l_amt4_sum1  = g_xcfl_d[l_ac].l_amt4  
                  LET l_amt5_sum1  = g_xcfl_d[l_ac].l_amt5  
                  LET l_amt6_sum1  = g_xcfl_d[l_ac].l_amt6  
                  LET l_amt7_sum1  = g_xcfl_d[l_ac].l_amt7  
                  LET l_amt8_sum1  = g_xcfl_d[l_ac].l_amt8  
                  LET l_amt9_sum1  = g_xcfl_d[l_ac].l_amt9  
                  LET l_amt10_sum1 = g_xcfl_d[l_ac].l_amt10 
                  LET l_idle_sum1  = g_xcfl_d[l_ac].l_idle  
                  LET l_idle1_sum1 = g_xcfl_d[l_ac].l_idle1 
                  LET l_idle2_sum1 = g_xcfl_d[l_ac].l_idle2 
                  LET l_idle3_sum1 = g_xcfl_d[l_ac].l_idle3 
                  LET l_idle4_sum1 = g_xcfl_d[l_ac].l_idle4 
                  LET l_idle5_sum1 = g_xcfl_d[l_ac].l_idle5 
                  LET l_idle6_sum1 = g_xcfl_d[l_ac].l_idle6 
                  LET l_idle7_sum1 = g_xcfl_d[l_ac].l_idle7 
                  LET l_idle8_sum1 = g_xcfl_d[l_ac].l_idle8 
                  LET l_idle9_sum1 = g_xcfl_d[l_ac].l_idle9 
                  LET l_idle10_sum1= g_xcfl_d[l_ac].l_idle10                
               END IF
            END IF
         END IF   

         #150319-00004#24-----s
         LET l_print_tmp.xccd007           = g_xcfl_d[l_ac].xccd007
         LET l_print_tmp.xcfl005           = g_xcfl_d[l_ac].xcfl005
         LET l_print_tmp.xcfl006           = g_xcfl_d[l_ac].xcfl006
         LET l_print_tmp.xcfl006_desc      = g_xcfl_d[l_ac].xcfl006_desc
         LET l_print_tmp.xcfl006_desc_desc = g_xcfl_d[l_ac].xcfl006_desc_desc
         LET l_print_tmp.xcfl007           = g_xcfl_d[l_ac].xcfl007
         LET l_print_tmp.xcfl008           = g_xcfl_d[l_ac].xcfl008
         LET l_print_tmp.xcfl001           = g_xcfl_d[l_ac].xcfl001
         LET l_print_tmp.xcfl001_desc      = g_xcfl_d[l_ac].xcfl001_desc
         LET l_print_tmp.xcfb010           = g_xcfl_d[l_ac].xcfb010
         LET l_print_tmp.xcfb010_desc      = g_xcfl_d[l_ac].xcfb010_desc
         LET l_print_tmp.xcfl009           = g_xcfl_d[l_ac].xcfl009
         LET l_print_tmp.xcce901           = g_xcfl_d[l_ac].xcce901
         LET l_print_tmp.xccc280           = g_xcfl_d[l_ac].xccc280
         LET l_print_tmp.l_amount          = g_xcfl_d[l_ac].l_amount
         LET l_print_tmp.l_idle            = g_xcfl_d[l_ac].l_idle
         LET l_print_tmp.l_qty1            = g_xcfl_d[l_ac].l_qty1
         LET l_print_tmp.l_amt1            = g_xcfl_d[l_ac].l_amt1
         LET l_print_tmp.l_rate1           = g_xcfl_d[l_ac].l_rate1
         LET l_print_tmp.l_idle1           = g_xcfl_d[l_ac].l_idle1
         LET l_print_tmp.l_qty2            = g_xcfl_d[l_ac].l_qty2
         LET l_print_tmp.l_amt2            = g_xcfl_d[l_ac].l_amt2
         LET l_print_tmp.l_rate2           = g_xcfl_d[l_ac].l_rate2
         LET l_print_tmp.l_idle2           = g_xcfl_d[l_ac].l_idle2
         LET l_print_tmp.l_qty3            = g_xcfl_d[l_ac].l_qty3
         LET l_print_tmp.l_amt3            = g_xcfl_d[l_ac].l_amt3
         LET l_print_tmp.l_rate3           = g_xcfl_d[l_ac].l_rate3
         LET l_print_tmp.l_idle3           = g_xcfl_d[l_ac].l_idle3
         LET l_print_tmp.l_qty4            = g_xcfl_d[l_ac].l_qty4
         LET l_print_tmp.l_amt4            = g_xcfl_d[l_ac].l_amt4
         LET l_print_tmp.l_rate4           = g_xcfl_d[l_ac].l_rate4
         LET l_print_tmp.l_idle4           = g_xcfl_d[l_ac].l_idle4
         LET l_print_tmp.l_qty5            = g_xcfl_d[l_ac].l_qty5
         LET l_print_tmp.l_amt5            = g_xcfl_d[l_ac].l_amt5
         LET l_print_tmp.l_rate5           = g_xcfl_d[l_ac].l_rate5
         LET l_print_tmp.l_idle5           = g_xcfl_d[l_ac].l_idle5
         LET l_print_tmp.l_qty6            = g_xcfl_d[l_ac].l_qty6
         LET l_print_tmp.l_amt6            = g_xcfl_d[l_ac].l_amt6
         LET l_print_tmp.l_rate6           = g_xcfl_d[l_ac].l_rate6
         LET l_print_tmp.l_idle6           = g_xcfl_d[l_ac].l_idle6
         LET l_print_tmp.l_qty7            = g_xcfl_d[l_ac].l_qty7
         LET l_print_tmp.l_amt7            = g_xcfl_d[l_ac].l_amt7
         LET l_print_tmp.l_rate7           = g_xcfl_d[l_ac].l_rate7
         LET l_print_tmp.l_idle7           = g_xcfl_d[l_ac].l_idle7
         LET l_print_tmp.l_qty8            = g_xcfl_d[l_ac].l_qty8
         LET l_print_tmp.l_amt8            = g_xcfl_d[l_ac].l_amt8
         LET l_print_tmp.l_rate8           = g_xcfl_d[l_ac].l_rate8
         LET l_print_tmp.l_idle8           = g_xcfl_d[l_ac].l_idle8
         LET l_print_tmp.l_qty9            = g_xcfl_d[l_ac].l_qty9
         LET l_print_tmp.l_amt9            = g_xcfl_d[l_ac].l_amt9
         LET l_print_tmp.l_rate9           = g_xcfl_d[l_ac].l_rate9
         LET l_print_tmp.l_idle9           = g_xcfl_d[l_ac].l_idle9
         LET l_print_tmp.l_qty10           = g_xcfl_d[l_ac].l_qty10
         LET l_print_tmp.l_amt10           = g_xcfl_d[l_ac].l_amt10
         LET l_print_tmp.l_rate10          = g_xcfl_d[l_ac].l_rate10
         LET l_print_tmp.l_idle10          = g_xcfl_d[l_ac].l_idle10
         LET l_print_tmp.l_ld_desc         = g_xcfl_m.xcflld,".",g_xcfl_m.xcflld_desc
         LET l_print_tmp.l_comp_desc       = g_xcfl_m.xcflcomp,".",g_xcfl_m.xcflcomp_desc
         LET l_print_tmp.l_year            = g_xcfl_m.xcfl003
         LET l_print_tmp.l_mon             = g_xcfl_m.xcfl004  
         LET l_print_tmp.l_xcfl002         = g_xcfl_m.xcfl002,".",g_xcfl_m.xcfl002_desc
         LET l_print_tmp.l_xrcc001         = g_xcfl_m.xccc001,".",s_desc_gzcbl004_desc('8914',g_xcfl_m.xccc001)
         LET l_print_tmp.l_xcfa004         = g_xcfl_m.xcfa004,".",s_desc_gzcbl004_desc('8043',g_xcfl_m.xcfa004)
         INSERT INTO axcq802_print_tmp VALUES(l_print_tmp.*)
         #150319-00004#24-----e
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF 
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         
      END FOREACH
 
            CALL g_xcfl_d.deleteElement(g_xcfl_d.getLength())
 
      
   END IF
   IF l_ac > 1 THEN
      #小计
      LET g_xcfl_d[l_ac].xcfl005 = cl_getmsg("axc-00205",g_lang)
      LET g_xcfl_d[l_ac].l_amount= l_amount_sum
      LET g_xcfl_d[l_ac].l_amt1  = l_amt1_sum  
      LET g_xcfl_d[l_ac].l_amt2  = l_amt2_sum  
      LET g_xcfl_d[l_ac].l_amt3  = l_amt3_sum  
      LET g_xcfl_d[l_ac].l_amt4  = l_amt4_sum  
      LET g_xcfl_d[l_ac].l_amt5  = l_amt5_sum  
      LET g_xcfl_d[l_ac].l_amt6  = l_amt6_sum  
      LET g_xcfl_d[l_ac].l_amt7  = l_amt7_sum  
      LET g_xcfl_d[l_ac].l_amt8  = l_amt8_sum  
      LET g_xcfl_d[l_ac].l_amt9  = l_amt9_sum  
      LET g_xcfl_d[l_ac].l_amt10 = l_amt10_sum 
      LET g_xcfl_d[l_ac].l_idle  = l_idle_sum  
      LET g_xcfl_d[l_ac].l_idle1 = l_idle1_sum 
      LET g_xcfl_d[l_ac].l_idle2 = l_idle2_sum 
      LET g_xcfl_d[l_ac].l_idle3 = l_idle3_sum 
      LET g_xcfl_d[l_ac].l_idle4 = l_idle4_sum 
      LET g_xcfl_d[l_ac].l_idle5 = l_idle5_sum 
      LET g_xcfl_d[l_ac].l_idle6 = l_idle6_sum 
      LET g_xcfl_d[l_ac].l_idle7 = l_idle7_sum 
      LET g_xcfl_d[l_ac].l_idle8 = l_idle8_sum 
      LET g_xcfl_d[l_ac].l_idle9 = l_idle9_sum 
      LET g_xcfl_d[l_ac].l_idle10= l_idle10_sum
      LET l_ac = l_ac + 1
      LET g_xcfl_d[l_ac].xccd007 = cl_getmsg("axc-00204",g_lang)
      LET g_xcfl_d[l_ac].l_amount= l_amount_sum1
      LET g_xcfl_d[l_ac].l_amt1  = l_amt1_sum1  
      LET g_xcfl_d[l_ac].l_amt2  = l_amt2_sum1  
      LET g_xcfl_d[l_ac].l_amt3  = l_amt3_sum1  
      LET g_xcfl_d[l_ac].l_amt4  = l_amt4_sum1  
      LET g_xcfl_d[l_ac].l_amt5  = l_amt5_sum1  
      LET g_xcfl_d[l_ac].l_amt6  = l_amt6_sum1  
      LET g_xcfl_d[l_ac].l_amt7  = l_amt7_sum1  
      LET g_xcfl_d[l_ac].l_amt8  = l_amt8_sum1  
      LET g_xcfl_d[l_ac].l_amt9  = l_amt9_sum1  
      LET g_xcfl_d[l_ac].l_amt10 = l_amt10_sum1 
      LET g_xcfl_d[l_ac].l_idle  = l_idle_sum1  
      LET g_xcfl_d[l_ac].l_idle1 = l_idle1_sum1 
      LET g_xcfl_d[l_ac].l_idle2 = l_idle2_sum1 
      LET g_xcfl_d[l_ac].l_idle3 = l_idle3_sum1 
      LET g_xcfl_d[l_ac].l_idle4 = l_idle4_sum1 
      LET g_xcfl_d[l_ac].l_idle5 = l_idle5_sum1 
      LET g_xcfl_d[l_ac].l_idle6 = l_idle6_sum1 
      LET g_xcfl_d[l_ac].l_idle7 = l_idle7_sum1 
      LET g_xcfl_d[l_ac].l_idle8 = l_idle8_sum1 
      LET g_xcfl_d[l_ac].l_idle9 = l_idle9_sum1 
      LET g_xcfl_d[l_ac].l_idle10= l_idle10_sum1
      LET l_ac = l_ac + 1
      LET g_xcfl_d[l_ac].xccd007 = cl_getmsg("lib-00133",g_lang)
      LET g_xcfl_d[l_ac].l_amount= l_amount_total
      LET g_xcfl_d[l_ac].l_amt1  = l_amt1_total  
      LET g_xcfl_d[l_ac].l_amt2  = l_amt2_total  
      LET g_xcfl_d[l_ac].l_amt3  = l_amt3_total  
      LET g_xcfl_d[l_ac].l_amt4  = l_amt4_total  
      LET g_xcfl_d[l_ac].l_amt5  = l_amt5_total  
      LET g_xcfl_d[l_ac].l_amt6  = l_amt6_total  
      LET g_xcfl_d[l_ac].l_amt7  = l_amt7_total  
      LET g_xcfl_d[l_ac].l_amt8  = l_amt8_total  
      LET g_xcfl_d[l_ac].l_amt9  = l_amt9_total  
      LET g_xcfl_d[l_ac].l_amt10 = l_amt10_total 
      LET g_xcfl_d[l_ac].l_idle  = l_idle_total  
      LET g_xcfl_d[l_ac].l_idle1 = l_idle1_total 
      LET g_xcfl_d[l_ac].l_idle2 = l_idle2_total 
      LET g_xcfl_d[l_ac].l_idle3 = l_idle3_total 
      LET g_xcfl_d[l_ac].l_idle4 = l_idle4_total 
      LET g_xcfl_d[l_ac].l_idle5 = l_idle5_total 
      LET g_xcfl_d[l_ac].l_idle6 = l_idle6_total 
      LET g_xcfl_d[l_ac].l_idle7 = l_idle7_total 
      LET g_xcfl_d[l_ac].l_idle8 = l_idle8_total 
      LET g_xcfl_d[l_ac].l_idle9 = l_idle9_total 
      LET g_xcfl_d[l_ac].l_idle10= l_idle10_total
      LET l_ac = l_ac + 1
   END IF
   FREE axcq802_pb1  
   

END FUNCTION]]>
  </point>
  <point name="function.axcq802_create_tmp" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axcq802_create_tmp()
   DROP TABLE axcq802_tmp
   CREATE TEMP TABLE axcq802_tmp(
      xccd007 LIKE xccd_t.xccd007,
      xcfl001 LIKE xcfl_t.xcfl001,
      xcfl005 LIKE xcfl_t.xcfl005,
      xcfl006 LIKE xcfl_t.xcfl006,
      xcfl007 LIKE xcfl_t.xcfl007,
      xcfl008 LIKE xcfl_t.xcfl008,
      xcce901 LIKE xccc_t.xccc901,      
      xccc280 LIKE xccc_t.xccc280,
      xcce902 LIKE xccc_t.xccc902, 
      imaf051 LIKE imaf_t.imaf051,
      qty1    LIKE xcfl_t.xcfl005,
      amt1    LIKE xccc_t.xccc280,
      rate1   LIKE xcfc_t.xcfc012,
      idle1   LIKE xccc_t.xccc280,
      qty2    LIKE xcfl_t.xcfl005,
      amt2    LIKE xccc_t.xccc280,
      rate2   LIKE xcfc_t.xcfc012,
      idle2   LIKE xccc_t.xccc280,
      qty3    LIKE xcfl_t.xcfl005,
      amt3    LIKE xccc_t.xccc280,
      rate3   LIKE xcfc_t.xcfc012,
      idle3   LIKE xccc_t.xccc280,
      qty4    LIKE xcfl_t.xcfl005,
      amt4    LIKE xccc_t.xccc280,
      rate4   LIKE xcfc_t.xcfc012,
      idle4   LIKE xccc_t.xccc280,
      qty5    LIKE xcfl_t.xcfl005,
      amt5    LIKE xccc_t.xccc280,
      rate5   LIKE xcfc_t.xcfc012,
      idle5   LIKE xccc_t.xccc280,
      qty6    LIKE xcfl_t.xcfl005,
      amt6    LIKE xccc_t.xccc280,
      rate6   LIKE xcfc_t.xcfc012,
      idle6   LIKE xccc_t.xccc280,
      qty7    LIKE xcfl_t.xcfl005,
      amt7    LIKE xccc_t.xccc280,
      rate7   LIKE xcfc_t.xcfc012,
      idle7   LIKE xccc_t.xccc280,
      qty8    LIKE xcfl_t.xcfl005,
      amt8    LIKE xccc_t.xccc280,
      rate8   LIKE xcfc_t.xcfc012,
      idle8   LIKE xccc_t.xccc280,
      qty9    LIKE xcfl_t.xcfl005,
      amt9    LIKE xccc_t.xccc280,
      rate9   LIKE xcfc_t.xcfc012,
      idle9   LIKE xccc_t.xccc280,
      qty10   LIKE xcfl_t.xcfl005,
      amt10   LIKE xccc_t.xccc280,
      rate10  LIKE xcfc_t.xcfc012,
      idle10  LIKE xccc_t.xccc280      
   );   
   
   #150319-00004#24-----s
   DROP TABLE axcq802_print_tmp
   CREATE TEMP TABLE axcq802_print_tmp(
      xccd007 LIKE type_t.chr500,               #單身-s
      xcfl005 LIKE xcfl_t.xcfl005, 
      xcfl006 LIKE xcfl_t.xcfl006, 
      xcfl006_desc LIKE type_t.chr500, 
      xcfl006_desc_desc LIKE type_t.chr500, 
      xcfl007 LIKE xcfl_t.xcfl007, 
      xcfl008 LIKE xcfl_t.xcfl008, 
      xcfl001 LIKE xcfl_t.xcfl001, 
      xcfl001_desc LIKE type_t.chr500, 
      xcfb010 LIKE type_t.chr10, 
      xcfb010_desc LIKE type_t.chr500, 
      xcfl009 LIKE xcfl_t.xcfl009, 
      xcce901 LIKE type_t.num20_6, 
      xccc280 LIKE type_t.num20_6, 
      l_amount LIKE type_t.num20_6, 
      l_idle LIKE type_t.num20_6, 
      l_qty1 LIKE type_t.chr20, 
      l_amt1 LIKE type_t.num20_6, 
      l_rate1 LIKE type_t.num20_6, 
      l_idle1 LIKE type_t.num20_6, 
      l_qty2 LIKE type_t.chr20, 
      l_amt2 LIKE type_t.num20_6, 
      l_rate2 LIKE type_t.num20_6, 
      l_idle2 LIKE type_t.num20_6, 
      l_qty3 LIKE type_t.chr20, 
      l_amt3 LIKE type_t.num20_6, 
      l_rate3 LIKE type_t.num20_6, 
      l_idle3 LIKE type_t.num20_6, 
      l_qty4 LIKE type_t.chr20, 
      l_amt4 LIKE type_t.num20_6, 
      l_rate4 LIKE type_t.num20_6, 
      l_idle4 LIKE type_t.num20_6, 
      l_qty5 LIKE type_t.chr20, 
      l_amt5 LIKE type_t.num20_6, 
      l_rate5 LIKE type_t.num20_6, 
      l_idle5 LIKE type_t.num20_6, 
      l_qty6 LIKE type_t.chr20, 
      l_amt6 LIKE type_t.num20_6, 
      l_rate6 LIKE type_t.num20_6, 
      l_idle6 LIKE type_t.num20_6, 
      l_qty7 LIKE type_t.chr20, 
      l_amt7 LIKE type_t.num20_6, 
      l_rate7 LIKE type_t.num20_6, 
      l_idle7 LIKE type_t.num20_6, 
      l_qty8 LIKE type_t.chr20, 
      l_amt8 LIKE type_t.num20_6, 
      l_rate8 LIKE type_t.num20_6, 
      l_idle8 LIKE type_t.num20_6, 
      l_qty9 LIKE type_t.chr20, 
      l_amt9 LIKE type_t.num20_6, 
      l_rate9 LIKE type_t.num20_6, 
      l_idle9 LIKE type_t.num20_6, 
      l_qty10 LIKE type_t.chr20, 
      l_amt10 LIKE type_t.num20_6, 
      l_rate10 LIKE type_t.num20_6, 
      l_idle10 LIKE type_t.num20_6,             #單身-e
      l_ld_desc   LIKE type_t.chr80,               #單頭-s
      l_comp_desc LIKE type_t.chr80,
      l_year      LIKE xcfl_t.xcfl003,
      l_mon       LIKE xcfl_t.xcfl004,
      l_xcfl002   LIKE type_t.chr80,  #成本計算類型
      l_xrcc001   LIKE type_t.chr80,  #本位幣順序
      l_xcfa004   LIKE type_t.chr80   #呆滯計算方式 #單頭-e
   );
   #150319-00004#24-----e
END FUNCTION]]>
  </point>
  <point name="function.axcq802_insert_tmp" order="3" ver="2" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axcq802_insert_tmp()
   DEFINE l_str1 STRING
   DEFINE l_str2 STRING
   DEFINE l_sql  STRING 
   DEFINE l_sql1 STRING
   DEFINE l_sql2 STRING
   DEFINE l_sql3 STRING 
   DEFINE l_str  STRING   
   DEFINE l_cn  LIKE type_t.num5
   #dujuan20150529----begin
   DEFINE l_strq STRING
   DEFINE l_stra STRING
   DEFINE l_strr STRING
   DEFINE l_stri STRING
   DEFINE l_msg1 STRING
   DEFINE l_msg2 STRING
   DEFINE l_msg3 STRING
   DEFINE l_msg4 STRING
   #dujuan20150529----end
   
   
   #取该年度期别最后一天
#   CALL axcq802_get_date()
   
   CALL g_bded.clear()
   #INSERT tmp
   LET l_sql = " INSERT INTO axcq802_tmp ",
               " SELECT DISTINCT t4.xccd007,xcfl001,xcfl005,xcfl006,xcfl007,xcfl008,",
              #g_edate," - xcfl009,xccc280,",
               " t3.xcce901,t1.xccc280,t3.xcce902,t2.imaf051, ",
               "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,",       
               "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
               " FROM xcfl_t ",
               " LEFT JOIN xccc_t t1 ON t1.xcccent='"||g_enterprise||"' AND t1.xcccld =xcflld AND t1.xccc002=xcfl001 ",
               "                    AND t1.xccc003=xcfl002 AND t1.xccc004=xcfl003 AND t1.xccc005=xcfl004 ", 
               "                    AND t1.xccc006=xcfl006 AND t1.xccc007=xcfl007 AND t1.xccc008=xcfl008 ",
               "                    AND t1.xccc001 = '",g_xccc001,"'",
               " LEFT JOIN xcce_t t3 ON t3.xcceent='"||g_enterprise||"' AND t3.xcceld =xcflld AND t3.xcce002=xcfl001 ",
               "                    AND t3.xcce003=xcfl002 AND t3.xcce004=xcfl003 AND t3.xcce005=xcfl004 ", 
               "                    AND t3.xcce006=xcfl005 AND t3.xcce007=xcfl006 AND t3.xcce008=xcfl007 ",
               "                    AND t3.xcce009=xcfl008 AND t3.xcce001 = '",g_xccc001,"'",
               " LEFT JOIN xccd_t t4 ON t4.xccdent='"||g_enterprise||"' AND t4.xccdld =xcflld AND t4.xccd002=xcfl001 ",
               "                    AND t4.xccd003=xcfl002 AND t4.xccd004=xcfl003 AND t4.xccd005=xcfl004 ", 
               "                    AND t4.xccd006=xcfl005 AND t4.xccd001 = '",g_xccc001,"'",
               " LEFT JOIN imaf_t t2 ON t2.imafent='"||g_enterprise||"' AND t2.imafsite =xcflcomp AND t2.imaf001=xcfl006 ",
               "  WHERE xcflld = '",g_xcfl_m.xcflld,"' AND xcfl002 = '",g_xcfl_m.xcfl002,"'",
               "    AND xcfl003 = ",g_xcfl_m.xcfl003," AND xcfl004 = ",g_xcfl_m.xcfl004,
               "    AND xcflent = '",g_enterprise,"'",
               " AND ",g_wc CLIPPED," AND ",g_wc2 CLIPPED
#               " GROUP BY xcfl001,xcfl006,xcfl007,xcfl008,t1.xccc280,t1.xccc901,t1.xccc902,t2.imaf051"
    PREPARE axcq802_ins_tmp FROM l_sql
    EXECUTE axcq802_ins_tmp
    IF SQLCA.sqlcode THEN
       LET g_success='N'
       CALL cl_errmsg('','','INS axcq802_tmp',SQLCA.sqlcode,1)
       RETURN
    END IF
    #无条件隐藏栏位    
   CALL cl_set_comp_visible("l_qty1",FALSE)
   CALL cl_set_comp_visible("l_amt1",FALSE)
   CALL cl_set_comp_visible("l_rate1",FALSE)
   CALL cl_set_comp_visible("l_idle1",FALSE)
   CALL cl_set_comp_visible("l_qty2",FALSE)
   CALL cl_set_comp_visible("l_amt2",FALSE)
   CALL cl_set_comp_visible("l_rate2",FALSE)
   CALL cl_set_comp_visible("l_idle2",FALSE)
   CALL cl_set_comp_visible("l_qty3",FALSE)
   CALL cl_set_comp_visible("l_amt3",FALSE)
   CALL cl_set_comp_visible("l_rate3",FALSE)
   CALL cl_set_comp_visible("l_idle3",FALSE)
   CALL cl_set_comp_visible("l_qty4",FALSE)
   CALL cl_set_comp_visible("l_amt4",FALSE)
   CALL cl_set_comp_visible("l_rate4",FALSE)
   CALL cl_set_comp_visible("l_idle4",FALSE)
   CALL cl_set_comp_visible("l_qty5",FALSE)
   CALL cl_set_comp_visible("l_amt5",FALSE)
   CALL cl_set_comp_visible("l_rate5",FALSE)
   CALL cl_set_comp_visible("l_idle5",FALSE)
   CALL cl_set_comp_visible("l_qty6",FALSE)
   CALL cl_set_comp_visible("l_amt6",FALSE)
   CALL cl_set_comp_visible("l_rate6",FALSE)
   CALL cl_set_comp_visible("l_idle6",FALSE)
   CALL cl_set_comp_visible("l_qty7",FALSE)
   CALL cl_set_comp_visible("l_amt7",FALSE)
   CALL cl_set_comp_visible("l_rate7",FALSE)
   CALL cl_set_comp_visible("l_idle7",FALSE)
   CALL cl_set_comp_visible("l_qty8",FALSE)
   CALL cl_set_comp_visible("l_amt8",FALSE)
   CALL cl_set_comp_visible("l_rate8",FALSE)
   CALL cl_set_comp_visible("l_idle8",FALSE)
   CALL cl_set_comp_visible("l_qty9",FALSE)
   CALL cl_set_comp_visible("l_amt9",FALSE)
   CALL cl_set_comp_visible("l_rate9",FALSE)
   CALL cl_set_comp_visible("l_idle9",FALSE)
   CALL cl_set_comp_visible("l_qty10",FALSE)
   CALL cl_set_comp_visible("l_amt10",FALSE)
   CALL cl_set_comp_visible("l_rate10",FALSE)
   CALL cl_set_comp_visible("l_idle10",FALSE)
   
   #呆滞起始天数，截至天数
   LET l_sql =" SELECT xcfc010,xcfc011,xcfc012 FROM xcfc_t ",
              "  WHERE xcfcent = '",g_enterprise,"'",             
              "    AND xcfcld = '",g_xcfl_m.xcflld,"'",
              "    AND xcfc001 = ",g_xcfl_m.xcfl003,
              "    AND xcfc002 = ",g_xcfl_m.xcfl004,
              "    ORDER BY xcfcseq "
   PREPARE axcq802_xcfc FROM l_sql
   DECLARE xcfc_cs CURSOR FOR axcq802_xcfc
   LET l_cn = 1
   FOREACH xcfc_cs INTO g_bded[l_cn].bday,g_bded[l_cn].eday,g_bded[l_cn].rate
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH: xcfc" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
      CASE g_xcfa004 
         WHEN 1  #材料分类
            LET l_sql1 =
                 "MERGE INTO axcq802_tmp t0 ",
                 "      USING (SELECT DISTINCT xcfl001,xcfl005,xcfl006,xcfl007,xcfl008,SUM(xcfl010) qty", 
                 "               FROM xcfl_t ",
                 "              WHERE xcflld = '",g_xcfl_m.xcflld,"' AND xcfl002 = '",g_xcfl_m.xcfl002,"'",
                 "                AND xcfl003 = ",g_xcfl_m.xcfl003," AND xcfl004 = ",g_xcfl_m.xcfl004,
                 "                AND xcflent = '",g_enterprise,"'",
                 "                AND ( (SELECT MAX(glav004)  FROM glav_t   ",
                 "                        WHERE glavent = '",g_enterprise,"'",
                 "                          AND glav001 = '",g_glaa003,"'",         
                 "                          AND glav002 = '",g_xcfl_m.xcfl003,"'",
                 "                          AND glav006 = '",g_xcfl_m.xcfl004,"'",
                 "                          AND glavstus = 'Y' ) ",
                 "                     - xcfl009 BETWEEN ",g_bded[l_cn].bday," AND ",g_bded[l_cn].eday,")",
                 "                GROUP BY xcfl001,xcfl005,xcfl006,xcfl007,xcfl008 ) t1",          
                 "      ON (t0.xcfl001 = t1.xcfl001 AND t0.xcfl005 = t1.xcfl005 AND t0.xcfl006 = t1.xcfl006 ", 
                 "          AND t0.xcfl007 = t1.xcfl007 AND t0.xcfl008 = t1.xcfl008 ) ",
                 "    WHEN MATCHED THEN ",
                 " UPDATE SET t0.qty1 = t1.qty,",      
                 "            t0.amt1 = t1.qty * t0.xccc280 " 
#                 PREPARE axcq802_merge FROM l_sql
#                 EXECUTE axcq802_merge
            LET l_sql2 =                  
                "MERGE INTO axcq802_tmp t0 ",
                "      USING (SELECT DISTINCT xcfb010,xcfb013 ", 
                "               FROM xcfb_t ",
                "              WHERE xcfbld = '",g_xcfl_m.xcflld,"' ",
                "                AND xcfb001 = ",g_xcfl_m.xcfl003," AND xcfb002 = ",g_xcfl_m.xcfl004,
                "                AND xcfbent = '",g_enterprise,"' ) t1",          
                "      ON (t0.imaf051 = t1.xcfb010 AND t0.amt1 >0 ) ",
                "    WHEN MATCHED THEN ",
                " UPDATE SET t0.rate1 = t1.xcfb013,",      
                "            t0.idle1 = t1.xcfb013 * t0.amt1/100 " 
#                PREPARE axcq802_merge1 FROM l_sql
#                EXECUTE axcq802_merge1
         WHEN 2  #货龄段
            LET l_sql3 =
                 "MERGE INTO axcq802_tmp t0 ",
                 "      USING (SELECT DISTINCT xcfl001,xcfl005,xcfl006,xcfl007,xcfl008,SUM(xcfl010) qty", 
                 "               FROM xcfl_t ",
                 "              WHERE xcflld = '",g_xcfl_m.xcflld,"' AND xcfl002 = '",g_xcfl_m.xcfl002,"'",
                 "                AND xcfl003 = ",g_xcfl_m.xcfl003," AND xcfl004 = ",g_xcfl_m.xcfl004,
                 "                AND xcflent = '",g_enterprise,"'",
                 "                AND ( (SELECT MAX(glav004)  FROM glav_t   ",
                 "                        WHERE glavent = '",g_enterprise,"'",
                 "                          AND glav001 = '",g_glaa003,"'",         
                 "                          AND glav002 = '",g_xcfl_m.xcfl003,"'",
                 "                          AND glav006 = '",g_xcfl_m.xcfl004,"'",
                 "                          AND glavstus = 'Y' ) ",
                 "                     - xcfl009 BETWEEN ",g_bded[l_cn].bday," AND ",g_bded[l_cn].eday,")",
                 "                GROUP BY xcfl001,xcfl005,xcfl006,xcfl007,xcfl008 ) t1",          
                 "      ON (t0.xcfl001 = t1.xcfl001 AND t0.xcfl005 = t1.xcfl005 AND t0.xcfl006 = t1.xcfl006 ", 
                 "          AND t0.xcfl007 = t1.xcfl007 AND t0.xcfl008 = t1.xcfl008 ) ",
                 "    WHEN MATCHED THEN ",
                 " UPDATE SET t0.qty1 = t1.qty,",      
                 "            t0.amt1 = t1.qty * t0.xccc280, ", 
                 "            t0.rate1 = ",g_bded[l_cn].rate,",",                 
                 "            t0.idle1 = t1.qty * t0.xccc280 * ",g_bded[l_cn].rate,"/100"
#            PREPARE axcq802_merge2 FROM l_sql
#            EXECUTE axcq802_merge2
            
      END CASE
      LET l_str1 = g_bded[l_cn].bday
      LET l_str1 = cl_replace_str(l_str1,".000","") 
      LET l_str2 = g_bded[l_cn].eday
      LET l_str2 = cl_replace_str(l_str2,".000","") 
      LET l_str = l_str1,"~",l_str2
      #dujuan150529--begin
      LET l_msg1 = cl_getmsg("axc-00657",g_lang)  #数量
      LET l_msg2 = cl_getmsg("axc-00658",g_lang)  #金额
      LET l_msg3 = cl_getmsg("axc-00659",g_lang)  #比率
      LET l_msg4 = cl_getmsg("axc-00660",g_lang)  #呆滞
 
      LET l_strq = l_msg1,"(",l_str,")"
      LET l_stra = l_msg2,"(",l_str,")"
      LET l_strr = l_msg3,"(",l_str,")"
      LET l_stri = l_msg4,"(",l_str,")"       
      #dujuan150529--end
      IF l_cn=1 THEN 
         CALL cl_set_comp_att_text("l_qty1",l_strq) #dujuan150529 mod ---- l_str mod l_strq
         CALL cl_set_comp_visible("l_qty1",TRUE) 
         CALL cl_set_comp_att_text("l_amt1",l_stra) #dujuan150529 mod ---- l_str mod l_stra
         CALL cl_set_comp_visible("l_amt1",TRUE) 
         CALL cl_set_comp_att_text("l_rate1",l_strr) #dujuan150529 mod ---- l_str mod l_strr
         CALL cl_set_comp_visible("l_rate1",TRUE) 
         CALL cl_set_comp_att_text("l_idle1",l_stri) #dujuan150529 mod ---- l_str mod l_stri
         CALL cl_set_comp_visible("l_idle1",TRUE)  
         #150319-00004#24-----s
         LET g_xg_fieldname[17] = l_strq  #dujuan150529 mod ---- l_str mod l_strq
         LET g_xg_fieldname[18] = l_stra  #dujuan150529 mod ---- l_str mod l_stra
         LET g_xg_fieldname[19] = l_strr  #dujuan150529 mod ---- l_str mod l_strr
         LET g_xg_fieldname[20] = l_stri  #dujuan150529 mod ---- l_str mod l_stri 
         #150319-00004#24-----e
      END IF
      IF l_cn=2 THEN 
         CALL cl_set_comp_att_text("l_qty2",l_strq) #dujuan150529 mod ---- l_str mod l_strq
         CALL cl_set_comp_visible("l_qty2",TRUE) 
         CALL cl_set_comp_att_text("l_amt2",l_stra) #dujuan150529 mod ---- l_str mod l_stra
         CALL cl_set_comp_visible("l_amt2",TRUE) 
         CALL cl_set_comp_att_text("l_rate2",l_strr) #dujuan150529 mod ---- l_str mod l_strr
         CALL cl_set_comp_visible("l_rate2",TRUE) 
         CALL cl_set_comp_att_text("l_idle2",l_stri) #dujuan150529 mod ---- l_str mod l_stri 
         CALL cl_set_comp_visible("l_idle2",TRUE)  
         LET l_sql1=cl_replace_str(l_sql1,"qty1","qty2") 
         LET l_sql1=cl_replace_str(l_sql1,"amt1","amt2") 
         LET l_sql2=cl_replace_str(l_sql2,"amt1","amt2")           
         LET l_sql2=cl_replace_str(l_sql2,"rate1","rate2") 
         LET l_sql2=cl_replace_str(l_sql2,"idle1","idle2") 
         LET l_sql3=cl_replace_str(l_sql3,"qty1","qty2") 
         LET l_sql3=cl_replace_str(l_sql3,"amt1","amt2")  
         LET l_sql3=cl_replace_str(l_sql3,"rate1","rate2") 
         LET l_sql3=cl_replace_str(l_sql3,"idle1","idle2")    
         #150319-00004#24-----s
         LET g_xg_fieldname[21] = l_strq  #dujuan150529 mod ---- l_str mod l_strq
         LET g_xg_fieldname[22] = l_stra  #dujuan150529 mod ---- l_str mod l_stra
         LET g_xg_fieldname[23] = l_strr  #dujuan150529 mod ---- l_str mod l_strr
         LET g_xg_fieldname[24] = l_stri  #dujuan150529 mod ---- l_str mod l_stri  
         #150319-00004#24-----e         
      END IF
      IF l_cn=3 THEN 
         CALL cl_set_comp_att_text("l_qty3",l_strq) #dujuan150529 mod ---- l_str mod l_strq
         CALL cl_set_comp_visible("l_qty3",TRUE) 
         CALL cl_set_comp_att_text("l_amt3",l_stra) #dujuan150529 mod ---- l_str mod l_stra
         CALL cl_set_comp_visible("l_amt3",TRUE) 
         CALL cl_set_comp_att_text("l_rate3",l_strr) #dujuan150529 mod ---- l_str mod l_strr
         CALL cl_set_comp_visible("l_rate3",TRUE) 
         CALL cl_set_comp_att_text("l_idle3",l_stri) #dujuan150529 mod ---- l_str mod l_stri
         CALL cl_set_comp_visible("l_idle3",TRUE)  
         LET l_sql1=cl_replace_str(l_sql1,"qty1","qty3") 
         LET l_sql1=cl_replace_str(l_sql1,"amt1","amt3")  
         LET l_sql2=cl_replace_str(l_sql2,"amt1","amt3")  
         LET l_sql2=cl_replace_str(l_sql2,"rate1","rate3") 
         LET l_sql2=cl_replace_str(l_sql2,"idle1","idle3") 
         LET l_sql3=cl_replace_str(l_sql3,"qty1","qty3") 
         LET l_sql3=cl_replace_str(l_sql3,"amt1","amt3")  
         LET l_sql3=cl_replace_str(l_sql3,"rate1","rate3") 
         LET l_sql3=cl_replace_str(l_sql3,"idle1","idle3")  
         #150319-00004#24-----s
         LET g_xg_fieldname[25] = l_strq #dujuan150529 mod ---- l_str mod l_strq
         LET g_xg_fieldname[26] = l_stra #dujuan150529 mod ---- l_str mod l_stra
         LET g_xg_fieldname[27] = l_strr #dujuan150529 mod ---- l_str mod l_strr
         LET g_xg_fieldname[28] = l_stri #dujuan150529 mod ---- l_str mod l_stri  
         #150319-00004#24-----e         
      END IF
      IF l_cn=4 THEN 
         CALL cl_set_comp_att_text("l_qty4",l_strq) #dujuan150529 mod ---- l_str mod l_strq
         CALL cl_set_comp_visible("l_qty4",TRUE) 
         CALL cl_set_comp_att_text("l_amt4",l_stra) #dujuan150529 mod ---- l_str mod l_stra
         CALL cl_set_comp_visible("l_amt4",TRUE) 
         CALL cl_set_comp_att_text("l_rate4",l_strr) #dujuan150529 mod ---- l_str mod l_strr
         CALL cl_set_comp_visible("l_rate4",TRUE) 
         CALL cl_set_comp_att_text("l_idle4",l_stri) #dujuan150529 mod ---- l_str mod l_stri
         CALL cl_set_comp_visible("l_idle4",TRUE)  
         LET l_sql1=cl_replace_str(l_sql1,"qty1","qty4") 
         LET l_sql1=cl_replace_str(l_sql1,"amt1","amt4") 
         LET l_sql2=cl_replace_str(l_sql2,"amt1","amt4")           
         LET l_sql2=cl_replace_str(l_sql2,"rate1","rate4") 
         LET l_sql2=cl_replace_str(l_sql2,"idle1","idle4") 
         LET l_sql3=cl_replace_str(l_sql3,"qty1","qty4") 
         LET l_sql3=cl_replace_str(l_sql3,"amt1","amt4")  
         LET l_sql3=cl_replace_str(l_sql3,"rate1","rate4") 
         LET l_sql3=cl_replace_str(l_sql3,"idle1","idle4")  
         #150319-00004#24-----s
         LET g_xg_fieldname[29] = l_strq #dujuan150529 mod ---- l_str mod l_strq
         LET g_xg_fieldname[30] = l_stra #dujuan150529 mod ---- l_str mod l_stra
         LET g_xg_fieldname[31] = l_strr #dujuan150529 mod ---- l_str mod l_strr
         LET g_xg_fieldname[32] = l_stri #dujuan150529 mod ---- l_str mod l_stri 
         #150319-00004#24-----e          
      END IF
      IF l_cn=5 THEN 
         CALL cl_set_comp_att_text("l_qty5",l_strq) #dujuan150529 mod ---- l_str mod l_strq
         CALL cl_set_comp_visible("l_qty5",TRUE) 
         CALL cl_set_comp_att_text("l_amt5",l_stra) #dujuan150529 mod ---- l_str mod l_stra
         CALL cl_set_comp_visible("l_amt5",TRUE) 
         CALL cl_set_comp_att_text("l_rate5",l_strr) #dujuan150529 mod ---- l_str mod l_strr
         CALL cl_set_comp_visible("l_rate5",TRUE) 
         CALL cl_set_comp_att_text("l_idle5",l_stri) #dujuan150529 mod ---- l_str mod l_stri
         CALL cl_set_comp_visible("l_idle5",TRUE)  
         LET l_sql1=cl_replace_str(l_sql1,"qty1","qty5") 
         LET l_sql1=cl_replace_str(l_sql1,"amt1","amt5") 
         LET l_sql2=cl_replace_str(l_sql2,"amt1","amt5")          
         LET l_sql2=cl_replace_str(l_sql2,"rate1","rate5") 
         LET l_sql2=cl_replace_str(l_sql2,"idle1","idle5") 
         LET l_sql3=cl_replace_str(l_sql3,"qty1","qty5") 
         LET l_sql3=cl_replace_str(l_sql3,"amt1","amt5")  
         LET l_sql3=cl_replace_str(l_sql3,"rate1","rate5") 
         LET l_sql3=cl_replace_str(l_sql3,"idle1","idle5") 
         #150319-00004#24-----s
         LET g_xg_fieldname[33] = l_strq #dujuan150529 mod ---- l_str mod l_strq
         LET g_xg_fieldname[34] = l_stra #dujuan150529 mod ---- l_str mod l_stra
         LET g_xg_fieldname[35] = l_strr #dujuan150529 mod ---- l_str mod l_strr
         LET g_xg_fieldname[36] = l_stri #dujuan150529 mod ---- l_str mod l_stri  
         #150319-00004#24-----e          
      END IF
      IF l_cn=6 THEN 
         CALL cl_set_comp_att_text("l_qty6",l_strq) #dujuan150529 mod ---- l_str mod l_strq
         CALL cl_set_comp_visible("l_qty6",TRUE) 
         CALL cl_set_comp_att_text("l_amt6",l_stra) #dujuan150529 mod ---- l_str mod l_stra
         CALL cl_set_comp_visible("l_amt6",TRUE) 
         CALL cl_set_comp_att_text("l_rate6",l_strr) #dujuan150529 mod ---- l_str mod l_strr
         CALL cl_set_comp_visible("l_rate6",TRUE) 
         CALL cl_set_comp_att_text("l_idle6",l_stri) #dujuan150529 mod ---- l_str mod l_stri
         CALL cl_set_comp_visible("l_idle6",TRUE)  
         LET l_sql1=cl_replace_str(l_sql1,"qty1","qty6") 
         LET l_sql1=cl_replace_str(l_sql1,"amt1","amt6")
         LET l_sql2=cl_replace_str(l_sql2,"amt1","amt6")         
         LET l_sql2=cl_replace_str(l_sql2,"rate1","rate6") 
         LET l_sql2=cl_replace_str(l_sql2,"idle1","idle6") 
         LET l_sql3=cl_replace_str(l_sql3,"qty1","qty6") 
         LET l_sql3=cl_replace_str(l_sql3,"amt1","amt6")  
         LET l_sql3=cl_replace_str(l_sql3,"rate1","rate6") 
         LET l_sql3=cl_replace_str(l_sql3,"idle1","idle6")
         #150319-00004#24-----s
         LET g_xg_fieldname[37] = l_strq #dujuan150529 mod ---- l_str mod l_strq
         LET g_xg_fieldname[38] = l_stra #dujuan150529 mod ---- l_str mod l_stra
         LET g_xg_fieldname[39] = l_strr #dujuan150529 mod ---- l_str mod l_strr
         LET g_xg_fieldname[40] = l_stri #dujuan150529 mod ---- l_str mod l_stri  
         #150319-00004#24-----e             
      END IF
      IF l_cn=7 THEN 
         CALL cl_set_comp_att_text("l_qty7",l_strq) #dujuan150529 mod ---- l_str mod l_strq
         CALL cl_set_comp_visible("l_qty7",TRUE) 
         CALL cl_set_comp_att_text("l_amt7",l_stra) #dujuan150529 mod ---- l_str mod l_stra
         CALL cl_set_comp_visible("l_amt7",TRUE) 
         CALL cl_set_comp_att_text("l_rate7",l_strr) #dujuan150529 mod ---- l_str mod l_strr
         CALL cl_set_comp_visible("l_rate7",TRUE) 
         CALL cl_set_comp_att_text("l_idle7",l_stri) #dujuan150529 mod ---- l_str mod l_stri
         CALL cl_set_comp_visible("l_idle7",TRUE)  
         LET l_sql1=cl_replace_str(l_sql1,"qty1","qty7") 
         LET l_sql1=cl_replace_str(l_sql1,"amt1","amt7")
         LET l_sql2=cl_replace_str(l_sql2,"amt1","amt7")         
         LET l_sql2=cl_replace_str(l_sql2,"rate1","rate7") 
         LET l_sql2=cl_replace_str(l_sql2,"idle1","idle7") 
         LET l_sql3=cl_replace_str(l_sql3,"qty1","qty7") 
         LET l_sql3=cl_replace_str(l_sql3,"amt1","amt7")  
         LET l_sql3=cl_replace_str(l_sql3,"rate1","rate7") 
         LET l_sql3=cl_replace_str(l_sql3,"idle1","idle7") 
         #150319-00004#24-----s
         LET g_xg_fieldname[41] = l_strq #dujuan150529 mod ---- l_str mod l_strq
         LET g_xg_fieldname[42] = l_stra #dujuan150529 mod ---- l_str mod l_stra
         LET g_xg_fieldname[43] = l_strr #dujuan150529 mod ---- l_str mod l_strr
         LET g_xg_fieldname[44] = l_stri #dujuan150529 mod ---- l_str mod l_stri  
         #150319-00004#24-----e            
      END IF
      IF l_cn=8 THEN 
         CALL cl_set_comp_att_text("l_qty8",l_strq) #dujuan150529 mod ---- l_str mod l_strq
         CALL cl_set_comp_visible("l_qty8",TRUE) 
         CALL cl_set_comp_att_text("l_amt8",l_stra) #dujuan150529 mod ---- l_str mod l_stra
         CALL cl_set_comp_visible("l_amt8",TRUE) 
         CALL cl_set_comp_att_text("l_rate8",l_strr) #dujuan150529 mod ---- l_str mod l_strr
         CALL cl_set_comp_visible("l_rate8",TRUE) 
         CALL cl_set_comp_att_text("l_idle8",l_stri) #dujuan150529 mod ---- l_str mod l_stri
         CALL cl_set_comp_visible("l_idle8",TRUE)  
         LET l_sql1=cl_replace_str(l_sql1,"qty1","qty8") 
         LET l_sql1=cl_replace_str(l_sql1,"amt1","amt8") 
         LET l_sql2=cl_replace_str(l_sql2,"amt1","amt8")          
         LET l_sql2=cl_replace_str(l_sql2,"rate1","rate8") 
         LET l_sql2=cl_replace_str(l_sql2,"idle1","idle8") 
         LET l_sql3=cl_replace_str(l_sql3,"qty1","qty8") 
         LET l_sql3=cl_replace_str(l_sql3,"amt1","amt8")  
         LET l_sql3=cl_replace_str(l_sql3,"rate1","rate8") 
         LET l_sql3=cl_replace_str(l_sql3,"idle1","idle8")
         #150319-00004#24-----s
         LET g_xg_fieldname[45] = l_strq #dujuan150529 mod ---- l_str mod l_strq
         LET g_xg_fieldname[46] = l_stra #dujuan150529 mod ---- l_str mod l_stra
         LET g_xg_fieldname[47] = l_strr #dujuan150529 mod ---- l_str mod l_strr
         LET g_xg_fieldname[48] = l_stri #dujuan150529 mod ---- l_str mod l_stri  
         #150319-00004#24-----e           
      END IF
      IF l_cn=9 THEN 
         CALL cl_set_comp_att_text("l_qty9",l_strq) #dujuan150529 mod ---- l_str mod l_strq
         CALL cl_set_comp_visible("l_qty9",TRUE) 
         CALL cl_set_comp_att_text("l_amt9",l_stra) #dujuan150529 mod ---- l_str mod l_stra
         CALL cl_set_comp_visible("l_amt9",TRUE) 
         CALL cl_set_comp_att_text("l_rate9",l_strr) #dujuan150529 mod ---- l_str mod l_strr
         CALL cl_set_comp_visible("l_rate9",TRUE) 
         CALL cl_set_comp_att_text("l_idle9",l_stri) #dujuan150529 mod ---- l_str mod l_stri
         CALL cl_set_comp_visible("l_idle9",TRUE)  
         LET l_sql1=cl_replace_str(l_sql1,"qty1","qty9") 
         LET l_sql1=cl_replace_str(l_sql1,"amt1","amt9")  
         LET l_sql2=cl_replace_str(l_sql2,"amt1","amt9")  
         LET l_sql2=cl_replace_str(l_sql2,"rate1","rate9") 
         LET l_sql2=cl_replace_str(l_sql2,"idle1","idle9") 
         LET l_sql3=cl_replace_str(l_sql3,"qty1","qty9") 
         LET l_sql3=cl_replace_str(l_sql3,"amt1","amt9")  
         LET l_sql3=cl_replace_str(l_sql3,"rate1","rate9") 
         LET l_sql3=cl_replace_str(l_sql3,"idle1","idle9")  
         #150319-00004#24-----s
         LET g_xg_fieldname[49] = l_strq #dujuan150529 mod ---- l_str mod l_strq
         LET g_xg_fieldname[50] = l_stra #dujuan150529 mod ---- l_str mod l_stra
         LET g_xg_fieldname[51] = l_strr #dujuan150529 mod ---- l_str mod l_strr
         LET g_xg_fieldname[52] = l_stri #dujuan150529 mod ---- l_str mod l_stri  
         #150319-00004#24-----e           
      END IF
      IF l_cn=10 THEN 
         CALL cl_set_comp_att_text("l_qty10",l_strq) #dujuan150529 mod ---- l_str mod l_strq
         CALL cl_set_comp_visible("l_qty10",TRUE) 
         CALL cl_set_comp_att_text("l_amt10",l_stra) #dujuan150529 mod ---- l_str mod l_stra
         CALL cl_set_comp_visible("l_amt10",TRUE) 
         CALL cl_set_comp_att_text("l_rate10",l_strr) #dujuan150529 mod ---- l_str mod l_strr
         CALL cl_set_comp_visible("l_rate10",TRUE) 
         CALL cl_set_comp_att_text("l_idle10",l_stri) #dujuan150529 mod ---- l_str mod l_stri
         CALL cl_set_comp_visible("l_idle10",TRUE)  
         LET l_sql1=cl_replace_str(l_sql1,"qty1","qty10") 
         LET l_sql1=cl_replace_str(l_sql1,"amt1","amt10")
         LET l_sql2=cl_replace_str(l_sql2,"amt1","amt10")         
         LET l_sql2=cl_replace_str(l_sql2,"rate1","rate10") 
         LET l_sql2=cl_replace_str(l_sql2,"idle1","idle10") 
         LET l_sql3=cl_replace_str(l_sql3,"qty1","qty10") 
         LET l_sql3=cl_replace_str(l_sql3,"amt1","amt10")  
         LET l_sql3=cl_replace_str(l_sql3,"rate1","rate10") 
         LET l_sql3=cl_replace_str(l_sql3,"idle1","idle10")   
         #150319-00004#24-----s
         LET g_xg_fieldname[53] = l_strq #dujuan150529 mod ---- l_str mod l_strq
         LET g_xg_fieldname[54] = l_stra #dujuan150529 mod ---- l_str mod l_stra
         LET g_xg_fieldname[55] = l_strr #dujuan150529 mod ---- l_str mod l_strr
         LET g_xg_fieldname[56] = l_stri #dujuan150529 mod ---- l_str mod l_stri 
         #150319-00004#24-----e               
      END IF
      CASE g_xcfa004 
         WHEN 1
            PREPARE axcq802_merge1 FROM l_sql1
            EXECUTE axcq802_merge1
            PREPARE axcq802_merge2 FROM l_sql2
            EXECUTE axcq802_merge2
         WHEN 2
            PREPARE axcq802_merge3 FROM l_sql3
            EXECUTE axcq802_merge3
      END CASE      
      
      
      LET l_cn = l_cn + 1
   END FOREACH   
   LET g_cn = l_cn - 1
   LET g_rep_flag = g_cn   #150319-00004#24
END FUNCTION]]>
  </point>
  <point name="function.axcq802_ref" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axcq802_ref()
   DEFINE l_ooef014 LIKE ooef_t.ooef014
   
   
   SELECT ooef014 INTO l_ooef014 FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site
      
   LET g_xcfl_m.xccc001 = g_xccc001
   LET g_xcfl_m.xcfa004 = g_xcfa004
   
   SELECT glaa001,glaa003,glaa015,glaa016,glaa019,glaa020
     INTO g_glaa001,g_glaa003,g_glaa015,g_glaa016,g_glaa019,g_glaa020
     FROM glaa_t
    WHERE glaaent = g_enterprise
      AND glaald = g_xcfl_m.xcflld
      
   LET g_curr = ' '
   CASE g_xccc001
      WHEN '1'
         LET g_curr = g_glaa001
      WHEN '2'
         IF g_glaa015 = 'Y' THEN            
            LET g_curr = g_glaa016            
         ELSE 
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "" 
            LET g_errparam.code   = "axc-00595" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            RETURN
         END IF
      WHEN '3'
         IF g_glaa019 = 'Y' THEN            
            LET g_curr = g_glaa020                      
         ELSE 
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "" 
            LET g_errparam.code   = "axc-00596" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            RETURN
         END IF
   END CASE
  
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_curr
   CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcfl_m.xccc001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcfl_m.xccc001_desc
   
   #取小数位
   CALL s_curr_sel_ooaj004(l_ooef014,g_curr) RETURNING g_ooaj004
   IF cl_null(g_ooaj004) THEN
      LET g_ooaj004 = 2
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcfl_m.xcflcomp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcfl_m.xcflcomp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcfl_m.xcflcomp_desc 
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcfl_m.xcflld
   CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcfl_m.xcflld_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcfl_m.xcflld_desc 

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcfl_m.xcfl002
   CALL ap_ref_array2(g_ref_fields,"SELECT xcatl003 FROM xcatl_t WHERE xcatlent='"||g_enterprise||"' AND xcatl001=? AND xcatl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcfl_m.xcfl002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcfl_m.xcfl002_desc
END FUNCTION]]>
  </point>
  <point name="function.axcq802_default" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axcq802_default()
   DEFINE  l_glaa001        LIKE glaa_t.glaa001

   #预设当前site的法人，主账套，年度期别，成本计算类型
   CALL s_axc_set_site_default() RETURNING g_xcfl_m.xcflcomp,g_xcfl_m.xcflld,g_xcfl_m.xcfl003,g_xcfl_m.xcfl004,g_xcfl_m.xcfl002
   DISPLAY BY NAME g_xcfl_m.xcflcomp,g_xcfl_m.xcflld,g_xcfl_m.xcfl003,g_xcfl_m.xcfl004,g_xcfl_m.xcfl002
   #fengmy 150114----begin
   #根據參數顯示隱藏成本域 和 料件特性
   IF cl_null(g_xcfl_m.xcflcomp) THEN
      CALL cl_get_para(g_enterprise,g_site,'S-FIN-6001') RETURNING g_para_data   #采用成本域否
      CALL cl_get_para(g_enterprise,g_site,'S-FIN-6013') RETURNING g_para_data1   #采用特性否       
   ELSE
      CALL cl_get_para(g_enterprise,g_xcfl_m.xcflcomp,'S-FIN-6001') RETURNING g_para_data   #采用成本域否
      CALL cl_get_para(g_enterprise,g_xcfl_m.xcflcomp,'S-FIN-6013') RETURNING g_para_data1   #采用特性否       
   END IF    
   IF g_para_data = 'Y' THEN
      CALL cl_set_comp_visible('xcfl001,xcfl001_desc',TRUE)                    
   ELSE                        
      CALL cl_set_comp_visible('xcfl001,xcfl001_desc',FALSE)                
   END IF   
   IF g_para_data1 = 'Y' THEN
      CALL cl_set_comp_visible('xcfl007',TRUE)                    
   ELSE                       
      CALL cl_set_comp_visible('xcfl007',FALSE)                
   END IF   
   #fengmy 150114----end    
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcfl_m.xcflcomp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcfl_m.xcflcomp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcfl_m.xcflcomp_desc 
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcfl_m.xcflld
   CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcfl_m.xcflld_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcfl_m.xcflld_desc 

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcfl_m.xcfl002
   CALL ap_ref_array2(g_ref_fields,"SELECT xcatl003 FROM xcatl_t WHERE xcatlent='"||g_enterprise||"' AND xcatl001=? AND xcatl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcfl_m.xcfl002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcfl_m.xcfl002_desc
      
   LET g_xcfl_m.xccc001 = '1'
   DISPLAY BY NAME g_xcfl_m.xccc001
   
   SELECT glaa001 INTO l_glaa001
     FROM glaa_t
    WHERE glaaent = g_enterprise
      AND glaald  = g_xcfl_m.xcflld

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = l_glaa001
   CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcfl_m.xccc001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcfl_m.xccc001_desc 
   
   SELECT xcfa004 INTO g_xcfl_m.xcfa004 FROM xcfa_t 
    WHERE xcfaent = g_enterprise AND xcfald = g_xcfl_m.xcflld
      AND xcfa001 = g_xcfl_m.xcfl003 AND xcfa002 = g_xcfl_m.xcfl004
   IF cl_null(g_xcfl_m.xcfa004) THEN 
      LET g_xcfl_m.xcfa004 = '2'
   END IF
   DISPLAY BY NAME g_xcfl_m.xcfa004   
END FUNCTION]]>
  </point>
  <point name="b_fill.more" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ELSE
      CALL axcq802_b_fill_1()
   END IF]]>
  </point>
  <point name="b_fill.sql_after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[  ]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF 1=2 THEN]]>
  </point>
  <point name="construct.c.page1.xcfb010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_02()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcfb010  #顯示到畫面上
            NEXT FIELD xcfb010                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.xcfl001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xcbf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcfl001  #顯示到畫面上
            NEXT FIELD xcfl001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.xcfl005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xccd006()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcfl005  #顯示到畫面上
            NEXT FIELD xcfl005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.xcfl006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imag001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcfl006  #顯示到畫面上
            NEXT FIELD xcfl006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.xcfl007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmaa002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcfl007  #顯示到畫面上
            NEXT FIELD xcfl007                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.xcfl008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaj010()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcfl008  #顯示到畫面上
            NEXT FIELD xcfl008                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xcfl002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xcat001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcfl002  #顯示到畫面上
            NEXT FIELD xcfl002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xcflcomp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcflcomp  #顯示到畫面上
            NEXT FIELD xcflcomp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xcflld" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            CALL q_authorised_ld()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcflld  #顯示到畫面上
            NEXT FIELD xcflld                     #返回原欄位
    

]]>
  </point>
  <point name="cs.after_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_xccc001 = cl_replace_str(g_wc4,"xccc001='","")
   LET g_xcfa004 = cl_replace_str(g_wc3,"xcfa004='","")]]>
  </point>
  <point name="cs.define" order="" ver="2" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_tag       LIKE type_t.chr80 ]]>
  </point>
  <point name="cs.head.before" order="" ver="2" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_tag = 'Y']]>
  </point>
  <point name="cs.head.before_construct" order="" ver="2" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF l_tag = 'Y' THEN
               CALL axcq802_default()
               LET l_tag = 'N'
            END IF]]>
  </point>
  <point name="cs.more_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CONSTRUCT BY NAME  g_wc3 ON xcfa004
      END CONSTRUCT
      CONSTRUCT BY NAME  g_wc4 ON xccc001
      END CONSTRUCT]]>
  </point>
  <point name="global.import" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="global.inc" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[GLOBALS "../../cfg/top_report.inc"]]>
  </point>
  <point name="global.memo" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#150319-00004#24  150422 Q轉XG]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_wc3              STRING
DEFINE g_wc4              STRING
DEFINE g_xccc001          LIKE xccc_t.xccc001
DEFINE g_xcfa004          LIKE xcfa_t.xcfa004
DEFINE g_cn               LIKE type_t.num5
DEFINE g_glaa001          LIKE glaa_t.glaa001
DEFINE g_glaa003          LIKE glaa_t.glaa003
DEFINE g_glaa015          LIKE glaa_t.glaa015
DEFINE g_glaa016          LIKE glaa_t.glaa016
DEFINE g_glaa019          LIKE glaa_t.glaa019
DEFINE g_glaa020          LIKE glaa_t.glaa020
DEFINE g_curr             LIKE glaa_t.glaa001
DEFINE g_ooaj004          LIKE ooaj_t.ooaj004
DEFINE g_bded      DYNAMIC ARRAY OF RECORD    #单身年月  
          bday  LIKE xcfc_t.xcfc010,
          eday  LIKE xcfc_t.xcfc011,
          rate  LIKE xcfc_t.xcfc012
      END RECORD
DEFINE g_para_data           LIKE type_t.chr80     #采用成本域否  #fengmy150113
DEFINE g_para_data1          LIKE type_t.chr80     #采用特性否    #fengmy150113
DEFINE g_rep_flag            LIKE type_t.num10      #albireo #150319-00004#24]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc('xccc001','8914')
   CALL cl_set_combo_scc('xcfa004','8043')
   CALL cl_set_comp_visible("l_qty1",FALSE)
   CALL cl_set_comp_visible("l_amt1",FALSE)
   CALL cl_set_comp_visible("l_rate1",FALSE)
   CALL cl_set_comp_visible("l_idle1",FALSE)
   CALL cl_set_comp_visible("l_qty2",FALSE)
   CALL cl_set_comp_visible("l_amt2",FALSE)
   CALL cl_set_comp_visible("l_rate2",FALSE)
   CALL cl_set_comp_visible("l_idle2",FALSE)
   CALL cl_set_comp_visible("l_qty3",FALSE)
   CALL cl_set_comp_visible("l_amt3",FALSE)
   CALL cl_set_comp_visible("l_rate3",FALSE)
   CALL cl_set_comp_visible("l_idle3",FALSE)
   CALL cl_set_comp_visible("l_qty4",FALSE)
   CALL cl_set_comp_visible("l_amt4",FALSE)
   CALL cl_set_comp_visible("l_rate4",FALSE)
   CALL cl_set_comp_visible("l_idle4",FALSE)
   CALL cl_set_comp_visible("l_qty5",FALSE)
   CALL cl_set_comp_visible("l_amt5",FALSE)
   CALL cl_set_comp_visible("l_rate5",FALSE)
   CALL cl_set_comp_visible("l_idle5",FALSE)
   CALL cl_set_comp_visible("l_qty6",FALSE)
   CALL cl_set_comp_visible("l_amt6",FALSE)
   CALL cl_set_comp_visible("l_rate6",FALSE)
   CALL cl_set_comp_visible("l_idle6",FALSE)
   CALL cl_set_comp_visible("l_qty7",FALSE)
   CALL cl_set_comp_visible("l_amt7",FALSE)
   CALL cl_set_comp_visible("l_rate7",FALSE)
   CALL cl_set_comp_visible("l_idle7",FALSE)
   CALL cl_set_comp_visible("l_qty8",FALSE)
   CALL cl_set_comp_visible("l_amt8",FALSE)
   CALL cl_set_comp_visible("l_rate8",FALSE)
   CALL cl_set_comp_visible("l_idle8",FALSE)
   CALL cl_set_comp_visible("l_qty9",FALSE)
   CALL cl_set_comp_visible("l_amt9",FALSE)
   CALL cl_set_comp_visible("l_rate9",FALSE)
   CALL cl_set_comp_visible("l_idle9",FALSE)
   CALL cl_set_comp_visible("l_qty10",FALSE)
   CALL cl_set_comp_visible("l_amt10",FALSE)
   CALL cl_set_comp_visible("l_rate10",FALSE)
   CALL cl_set_comp_visible("l_idle10",FALSE)
   #fengmy 150114----begin
   #根據參數顯示隱藏成本域 和 料件特性
   CALL cl_get_para(g_enterprise,g_site,'S-FIN-6001') RETURNING g_para_data   #采用成本域否
   CALL cl_get_para(g_enterprise,g_site,'S-FIN-6013') RETURNING g_para_data1  #采用特性否       
         
   IF g_para_data = 'Y' THEN
      CALL cl_set_comp_visible('xcfl001,xcfl001_desc',TRUE)                    
   ELSE                        
      CALL cl_set_comp_visible('xcfl001,xcfl001_desc',FALSE)                
   END IF   
   IF g_para_data1 = 'Y' THEN
      CALL cl_set_comp_visible('xcfl007',TRUE)                    
   ELSE                       
      CALL cl_set_comp_visible('xcfl007',FALSE)                
   END IF   
   #fengmy 150114----end
   ]]>
  </point>
  <point name="input.a.page1.xccd007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page1.xcfb010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcfl_d[l_ac].xcfb010
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='201' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcfl_d[l_ac].xcfb010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcfl_d[l_ac].xcfb010_desc

]]>
  </point>
  <point name="input.a.page1.xcfl001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcfl_m.xcflld IS NOT NULL AND g_xcfl_m.xcfl002 IS NOT NULL AND g_xcfl_m.xcfl003 IS NOT NULL AND g_xcfl_m.xcfl004 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl008 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl009 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl001 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl006 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl007 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcfl_m.xcflld != g_xcflld_t OR g_xcfl_m.xcfl002 != g_xcfl002_t OR g_xcfl_m.xcfl003 != g_xcfl003_t OR g_xcfl_m.xcfl004 != g_xcfl004_t OR g_xcfl_d[g_detail_idx].xcfl008 != g_xcfl_d_t.xcfl008 OR g_xcfl_d[g_detail_idx].xcfl009 != g_xcfl_d_t.xcfl009 OR g_xcfl_d[g_detail_idx].xcfl001 != g_xcfl_d_t.xcfl001 OR g_xcfl_d[g_detail_idx].xcfl006 != g_xcfl_d_t.xcfl006 OR g_xcfl_d[g_detail_idx].xcfl007 != g_xcfl_d_t.xcfl007)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcfl_t WHERE "||"xcflent = '" ||g_enterprise|| "' AND "||"xcflld = '"||g_xcfl_m.xcflld ||"' AND "|| "xcfl002 = '"||g_xcfl_m.xcfl002 ||"' AND "|| "xcfl003 = '"||g_xcfl_m.xcfl003 ||"' AND "|| "xcfl004 = '"||g_xcfl_m.xcfl004 ||"' AND "|| "xcfl008 = '"||g_xcfl_d[g_detail_idx].xcfl008 ||"' AND "|| "xcfl009 = '"||g_xcfl_d[g_detail_idx].xcfl009 ||"' AND "|| "xcfl001 = '"||g_xcfl_d[g_detail_idx].xcfl001 ||"' AND "|| "xcfl006 = '"||g_xcfl_d[g_detail_idx].xcfl006 ||"' AND "|| "xcfl007 = '"||g_xcfl_d[g_detail_idx].xcfl007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcfl_m.xcflcomp
            LET g_ref_fields[2] = g_xcfl_d[l_ac].xcfl001
            CALL ap_ref_array2(g_ref_fields,"SELECT xcbfl003 FROM xcbfl_t WHERE xcbflent='"||g_enterprise||"' AND xcbflcomp=? AND xcbfl001=? AND xcbfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcfl_d[l_ac].xcfl001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcfl_d[l_ac].xcfl001_desc

]]>
  </point>
  <point name="input.a.page1.xcfl005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcfl_m.xcflld IS NOT NULL AND g_xcfl_m.xcfl002 IS NOT NULL AND g_xcfl_m.xcfl003 IS NOT NULL AND g_xcfl_m.xcfl004 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl001 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl005 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl006 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl007 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl008 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl009 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcfl_m.xcflld != g_xcflld_t OR g_xcfl_m.xcfl002 != g_xcfl002_t OR g_xcfl_m.xcfl003 != g_xcfl003_t OR g_xcfl_m.xcfl004 != g_xcfl004_t OR g_xcfl_d[g_detail_idx].xcfl001 != g_xcfl_d_t.xcfl001 OR g_xcfl_d[g_detail_idx].xcfl005 != g_xcfl_d_t.xcfl005 OR g_xcfl_d[g_detail_idx].xcfl006 != g_xcfl_d_t.xcfl006 OR g_xcfl_d[g_detail_idx].xcfl007 != g_xcfl_d_t.xcfl007 OR g_xcfl_d[g_detail_idx].xcfl008 != g_xcfl_d_t.xcfl008 OR g_xcfl_d[g_detail_idx].xcfl009 != g_xcfl_d_t.xcfl009)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcfl_t WHERE "||"xcflent = '" ||g_enterprise|| "' AND "||"xcflld = '"||g_xcfl_m.xcflld ||"' AND "|| "xcfl002 = '"||g_xcfl_m.xcfl002 ||"' AND "|| "xcfl003 = '"||g_xcfl_m.xcfl003 ||"' AND "|| "xcfl004 = '"||g_xcfl_m.xcfl004 ||"' AND "|| "xcfl001 = '"||g_xcfl_d[g_detail_idx].xcfl001 ||"' AND "|| "xcfl005 = '"||g_xcfl_d[g_detail_idx].xcfl005 ||"' AND "|| "xcfl006 = '"||g_xcfl_d[g_detail_idx].xcfl006 ||"' AND "|| "xcfl007 = '"||g_xcfl_d[g_detail_idx].xcfl007 ||"' AND "|| "xcfl008 = '"||g_xcfl_d[g_detail_idx].xcfl008 ||"' AND "|| "xcfl009 = '"||g_xcfl_d[g_detail_idx].xcfl009 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.xcfl006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcfl_m.xcflld IS NOT NULL AND g_xcfl_m.xcfl002 IS NOT NULL AND g_xcfl_m.xcfl003 IS NOT NULL AND g_xcfl_m.xcfl004 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl008 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl009 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl001 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl006 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl007 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcfl_m.xcflld != g_xcflld_t OR g_xcfl_m.xcfl002 != g_xcfl002_t OR g_xcfl_m.xcfl003 != g_xcfl003_t OR g_xcfl_m.xcfl004 != g_xcfl004_t OR g_xcfl_d[g_detail_idx].xcfl008 != g_xcfl_d_t.xcfl008 OR g_xcfl_d[g_detail_idx].xcfl009 != g_xcfl_d_t.xcfl009 OR g_xcfl_d[g_detail_idx].xcfl001 != g_xcfl_d_t.xcfl001 OR g_xcfl_d[g_detail_idx].xcfl006 != g_xcfl_d_t.xcfl006 OR g_xcfl_d[g_detail_idx].xcfl007 != g_xcfl_d_t.xcfl007)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcfl_t WHERE "||"xcflent = '" ||g_enterprise|| "' AND "||"xcflld = '"||g_xcfl_m.xcflld ||"' AND "|| "xcfl002 = '"||g_xcfl_m.xcfl002 ||"' AND "|| "xcfl003 = '"||g_xcfl_m.xcfl003 ||"' AND "|| "xcfl004 = '"||g_xcfl_m.xcfl004 ||"' AND "|| "xcfl008 = '"||g_xcfl_d[g_detail_idx].xcfl008 ||"' AND "|| "xcfl009 = '"||g_xcfl_d[g_detail_idx].xcfl009 ||"' AND "|| "xcfl001 = '"||g_xcfl_d[g_detail_idx].xcfl001 ||"' AND "|| "xcfl006 = '"||g_xcfl_d[g_detail_idx].xcfl006 ||"' AND "|| "xcfl007 = '"||g_xcfl_d[g_detail_idx].xcfl007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcfl_d[l_ac].xcfl006
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcfl_d[l_ac].xcfl006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcfl_d[l_ac].xcfl006_desc

]]>
  </point>
  <point name="input.a.page1.xcfl007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcfl_m.xcflld IS NOT NULL AND g_xcfl_m.xcfl002 IS NOT NULL AND g_xcfl_m.xcfl003 IS NOT NULL AND g_xcfl_m.xcfl004 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl008 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl009 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl001 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl006 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl007 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcfl_m.xcflld != g_xcflld_t OR g_xcfl_m.xcfl002 != g_xcfl002_t OR g_xcfl_m.xcfl003 != g_xcfl003_t OR g_xcfl_m.xcfl004 != g_xcfl004_t OR g_xcfl_d[g_detail_idx].xcfl008 != g_xcfl_d_t.xcfl008 OR g_xcfl_d[g_detail_idx].xcfl009 != g_xcfl_d_t.xcfl009 OR g_xcfl_d[g_detail_idx].xcfl001 != g_xcfl_d_t.xcfl001 OR g_xcfl_d[g_detail_idx].xcfl006 != g_xcfl_d_t.xcfl006 OR g_xcfl_d[g_detail_idx].xcfl007 != g_xcfl_d_t.xcfl007)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcfl_t WHERE "||"xcflent = '" ||g_enterprise|| "' AND "||"xcflld = '"||g_xcfl_m.xcflld ||"' AND "|| "xcfl002 = '"||g_xcfl_m.xcfl002 ||"' AND "|| "xcfl003 = '"||g_xcfl_m.xcfl003 ||"' AND "|| "xcfl004 = '"||g_xcfl_m.xcfl004 ||"' AND "|| "xcfl008 = '"||g_xcfl_d[g_detail_idx].xcfl008 ||"' AND "|| "xcfl009 = '"||g_xcfl_d[g_detail_idx].xcfl009 ||"' AND "|| "xcfl001 = '"||g_xcfl_d[g_detail_idx].xcfl001 ||"' AND "|| "xcfl006 = '"||g_xcfl_d[g_detail_idx].xcfl006 ||"' AND "|| "xcfl007 = '"||g_xcfl_d[g_detail_idx].xcfl007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.xcfl008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcfl_m.xcflld IS NOT NULL AND g_xcfl_m.xcfl002 IS NOT NULL AND g_xcfl_m.xcfl003 IS NOT NULL AND g_xcfl_m.xcfl004 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl008 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl009 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl001 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl006 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl007 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcfl_m.xcflld != g_xcflld_t OR g_xcfl_m.xcfl002 != g_xcfl002_t OR g_xcfl_m.xcfl003 != g_xcfl003_t OR g_xcfl_m.xcfl004 != g_xcfl004_t OR g_xcfl_d[g_detail_idx].xcfl008 != g_xcfl_d_t.xcfl008 OR g_xcfl_d[g_detail_idx].xcfl009 != g_xcfl_d_t.xcfl009 OR g_xcfl_d[g_detail_idx].xcfl001 != g_xcfl_d_t.xcfl001 OR g_xcfl_d[g_detail_idx].xcfl006 != g_xcfl_d_t.xcfl006 OR g_xcfl_d[g_detail_idx].xcfl007 != g_xcfl_d_t.xcfl007)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcfl_t WHERE "||"xcflent = '" ||g_enterprise|| "' AND "||"xcflld = '"||g_xcfl_m.xcflld ||"' AND "|| "xcfl002 = '"||g_xcfl_m.xcfl002 ||"' AND "|| "xcfl003 = '"||g_xcfl_m.xcfl003 ||"' AND "|| "xcfl004 = '"||g_xcfl_m.xcfl004 ||"' AND "|| "xcfl008 = '"||g_xcfl_d[g_detail_idx].xcfl008 ||"' AND "|| "xcfl009 = '"||g_xcfl_d[g_detail_idx].xcfl009 ||"' AND "|| "xcfl001 = '"||g_xcfl_d[g_detail_idx].xcfl001 ||"' AND "|| "xcfl006 = '"||g_xcfl_d[g_detail_idx].xcfl006 ||"' AND "|| "xcfl007 = '"||g_xcfl_d[g_detail_idx].xcfl007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.xcfl009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_xcfl_m.xcflld IS NOT NULL AND g_xcfl_m.xcfl002 IS NOT NULL AND g_xcfl_m.xcfl003 IS NOT NULL AND g_xcfl_m.xcfl004 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl008 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl009 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl001 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl006 IS NOT NULL AND g_xcfl_d[g_detail_idx].xcfl007 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcfl_m.xcflld != g_xcflld_t OR g_xcfl_m.xcfl002 != g_xcfl002_t OR g_xcfl_m.xcfl003 != g_xcfl003_t OR g_xcfl_m.xcfl004 != g_xcfl004_t OR g_xcfl_d[g_detail_idx].xcfl008 != g_xcfl_d_t.xcfl008 OR g_xcfl_d[g_detail_idx].xcfl009 != g_xcfl_d_t.xcfl009 OR g_xcfl_d[g_detail_idx].xcfl001 != g_xcfl_d_t.xcfl001 OR g_xcfl_d[g_detail_idx].xcfl006 != g_xcfl_d_t.xcfl006 OR g_xcfl_d[g_detail_idx].xcfl007 != g_xcfl_d_t.xcfl007)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcfl_t WHERE "||"xcflent = '" ||g_enterprise|| "' AND "||"xcflld = '"||g_xcfl_m.xcflld ||"' AND "|| "xcfl002 = '"||g_xcfl_m.xcfl002 ||"' AND "|| "xcfl003 = '"||g_xcfl_m.xcfl003 ||"' AND "|| "xcfl004 = '"||g_xcfl_m.xcfl004 ||"' AND "|| "xcfl008 = '"||g_xcfl_d[g_detail_idx].xcfl008 ||"' AND "|| "xcfl009 = '"||g_xcfl_d[g_detail_idx].xcfl009 ||"' AND "|| "xcfl001 = '"||g_xcfl_d[g_detail_idx].xcfl001 ||"' AND "|| "xcfl006 = '"||g_xcfl_d[g_detail_idx].xcfl006 ||"' AND "|| "xcfl007 = '"||g_xcfl_d[g_detail_idx].xcfl007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.xccc001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.xcfl002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcfl_m.xcfl002
            CALL ap_ref_array2(g_ref_fields,"SELECT xcatl003 FROM xcatl_t WHERE xcatlent='"||g_enterprise||"' AND xcatl001=? AND xcatl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcfl_m.xcfl002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcfl_m.xcfl002_desc

            #此段落由子樣板a05產生
            #確認資料無重複
            IF  NOT cl_null(g_xcfl_m.xcflld) AND NOT cl_null(g_xcfl_m.xcfl002) AND NOT cl_null(g_xcfl_m.xcfl003) AND NOT cl_null(g_xcfl_m.xcfl004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcfl_m.xcflld != g_xcflld_t  OR g_xcfl_m.xcfl002 != g_xcfl002_t  OR g_xcfl_m.xcfl003 != g_xcfl003_t  OR g_xcfl_m.xcfl004 != g_xcfl004_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcfl_t WHERE "||"xcflent = '" ||g_enterprise|| "' AND "||"xcflld = '"||g_xcfl_m.xcflld ||"' AND "|| "xcfl002 = '"||g_xcfl_m.xcfl002 ||"' AND "|| "xcfl003 = '"||g_xcfl_m.xcfl003 ||"' AND "|| "xcfl004 = '"||g_xcfl_m.xcfl004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.xcfl003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            #確認資料無重複
            IF  NOT cl_null(g_xcfl_m.xcflld) AND NOT cl_null(g_xcfl_m.xcfl002) AND NOT cl_null(g_xcfl_m.xcfl003) AND NOT cl_null(g_xcfl_m.xcfl004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcfl_m.xcflld != g_xcflld_t  OR g_xcfl_m.xcfl002 != g_xcfl002_t  OR g_xcfl_m.xcfl003 != g_xcfl003_t  OR g_xcfl_m.xcfl004 != g_xcfl004_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcfl_t WHERE "||"xcflent = '" ||g_enterprise|| "' AND "||"xcflld = '"||g_xcfl_m.xcflld ||"' AND "|| "xcfl002 = '"||g_xcfl_m.xcfl002 ||"' AND "|| "xcfl003 = '"||g_xcfl_m.xcfl003 ||"' AND "|| "xcfl004 = '"||g_xcfl_m.xcfl004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.xcfl004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            #確認資料無重複
            IF  NOT cl_null(g_xcfl_m.xcflld) AND NOT cl_null(g_xcfl_m.xcfl002) AND NOT cl_null(g_xcfl_m.xcfl003) AND NOT cl_null(g_xcfl_m.xcfl004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcfl_m.xcflld != g_xcflld_t  OR g_xcfl_m.xcfl002 != g_xcfl002_t  OR g_xcfl_m.xcfl003 != g_xcfl003_t  OR g_xcfl_m.xcfl004 != g_xcfl004_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcfl_t WHERE "||"xcflent = '" ||g_enterprise|| "' AND "||"xcflld = '"||g_xcfl_m.xcflld ||"' AND "|| "xcfl002 = '"||g_xcfl_m.xcfl002 ||"' AND "|| "xcfl003 = '"||g_xcfl_m.xcfl003 ||"' AND "|| "xcfl004 = '"||g_xcfl_m.xcfl004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.xcflcomp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcfl_m.xcflcomp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcfl_m.xcflcomp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcfl_m.xcflcomp_desc

]]>
  </point>
  <point name="input.a.xcflld" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcfl_m.xcflld
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal003 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaal001=? AND glaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcfl_m.xcflld_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcfl_m.xcflld_desc

            #此段落由子樣板a05產生
            #確認資料無重複
            IF  NOT cl_null(g_xcfl_m.xcflld) AND NOT cl_null(g_xcfl_m.xcfl002) AND NOT cl_null(g_xcfl_m.xcfl003) AND NOT cl_null(g_xcfl_m.xcfl004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcfl_m.xcflld != g_xcflld_t  OR g_xcfl_m.xcfl002 != g_xcfl002_t  OR g_xcfl_m.xcfl003 != g_xcfl003_t  OR g_xcfl_m.xcfl004 != g_xcfl004_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcfl_t WHERE "||"xcflent = '" ||g_enterprise|| "' AND "||"xcflld = '"||g_xcfl_m.xcflld ||"' AND "|| "xcfl002 = '"||g_xcfl_m.xcfl002 ||"' AND "|| "xcfl003 = '"||g_xcfl_m.xcfl003 ||"' AND "|| "xcfl004 = '"||g_xcfl_m.xcfl004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="menu.output" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                             
                CALL axcq802_x01('1=1','axcq802_print_tmp',g_rep_flag,g_para_data,g_para_data1)]]>
  </point>
  <point name="show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #fengmy 150114----begin
   #根據參數顯示隱藏成本域 和 料件特性
   IF cl_null(g_xcfl_m.xcflcomp) THEN
      CALL cl_get_para(g_enterprise,g_site,'S-FIN-6001') RETURNING g_para_data   #采用成本域否
      CALL cl_get_para(g_enterprise,g_site,'S-FIN-6013') RETURNING g_para_data1   #采用特性否       
   ELSE
      CALL cl_get_para(g_enterprise,g_xcfl_m.xcflcomp,'S-FIN-6001') RETURNING g_para_data   #采用成本域否
      CALL cl_get_para(g_enterprise,g_xcfl_m.xcflcomp,'S-FIN-6013') RETURNING g_para_data1   #采用特性否       
   END IF    
   IF g_para_data = 'Y' THEN
      CALL cl_set_comp_visible('xcfl001,xcfl001_desc',TRUE)                    
   ELSE                        
      CALL cl_set_comp_visible('xcfl001,xcfl001_desc',FALSE)                
   END IF   
   IF g_para_data1 = 'Y' THEN
      CALL cl_set_comp_visible('xcfl007',TRUE)                    
   ELSE                       
      CALL cl_set_comp_visible('xcfl007',FALSE)                
   END IF   
   #fengmy 150114----end 
   CALL axcq802_ref()]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <section id="axcq802.b_fill" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION axcq802_b_fill(p_wc2)
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point
   
   #先清空單身變數內容
   CALL g_xcfl_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   LET g_sql = "SELECT  UNIQUE xcfl005,xcfl006,xcfl007,xcfl008,xcfl001,xcfl009,t1.imaal003 ,t2.imaal004 , 
       t3.xcbfl003 FROM xcfl_t",   
               "",
               
                              " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=xcfl006 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=xcfl006 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN xcbfl_t t3 ON t3.xcbflent='"||g_enterprise||"' AND t3.xcbflcomp=xcflcomp AND t3.xcbfl001=xcfl001 AND t3.xcbfl002='"||g_dlang||"' ",
 
               " WHERE xcflent= ? AND xcflld=? AND xcfl002=? AND xcfl003=? AND xcfl004=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("xcfl_t")
   END IF
   
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axcq802_fill_chk(1) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = g_sql, " ORDER BY xcfl_t.xcfl001,xcfl_t.xcfl005,xcfl_t.xcfl006,xcfl_t.xcfl007,xcfl_t.xcfl008,xcfl_t.xcfl009"
         #add-point:b_fill段fill_before
         {<point name="b_fill.fill_before"/>}
         #end add-point
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axcq802_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axcq802_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xcfl_m.xcflld,g_xcfl_m.xcfl002,g_xcfl_m.xcfl003,g_xcfl_m.xcfl004
                                               
      FOREACH b_fill_cs INTO g_xcfl_d[l_ac].xcfl005,g_xcfl_d[l_ac].xcfl006,g_xcfl_d[l_ac].xcfl007,g_xcfl_d[l_ac].xcfl008, 
          g_xcfl_d[l_ac].xcfl001,g_xcfl_d[l_ac].xcfl009,g_xcfl_d[l_ac].xcfl006_desc,g_xcfl_d[l_ac].xcfl006_desc_desc, 
          g_xcfl_d[l_ac].xcfl001_desc
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         #帶出公用欄位reference值
         
         
 
        
         #add-point:單身資料抓取
         {<point name="bfill.foreach"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF 
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         
      END FOREACH
 
            CALL g_xcfl_d.deleteElement(g_xcfl_d.getLength())
 
      
   END IF
   
   #add-point:b_fill段more
   {<point name="b_fill.more"/>}
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   #遮罩相關處理
   FOR l_ac = 1 TO g_xcfl_d.getLength()
      LET g_xcfl_d_mask_o[l_ac].* =  g_xcfl_d[l_ac].*
      CALL axcq802_xcfl_t_mask()
      LET g_xcfl_d_mask_n[l_ac].* =  g_xcfl_d[l_ac].*
   END FOR
   
 
 
   FREE axcq802_pb   
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.b_fill2" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION axcq802_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_xcfl_d.getLength() <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.before_delete" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身db資料刪除
PRIVATE FUNCTION axcq802_before_delete()
   #add-point:before_delete段define
   {<point name="before_delete.define" edit="s"/>}
   #end add-point 
   #add-point:before_delete段define
   {<point name="before_delete.define_customerization" edit="c"/>}
   #end add-point 
   #add-point:單筆刪除前
   {<point name="delete.body.b_single_delete" mark="Y"/>}
   #end add-point
   
   DELETE FROM xcfl_t
    WHERE xcflent = g_enterprise AND xcflld = g_xcfl_m.xcflld AND
                              xcfl002 = g_xcfl_m.xcfl002 AND
                              xcfl003 = g_xcfl_m.xcfl003 AND
                              xcfl004 = g_xcfl_m.xcfl004 AND
 
          xcfl001 = g_xcfl_d_t.xcfl001
      AND xcfl005 = g_xcfl_d_t.xcfl005
      AND xcfl006 = g_xcfl_d_t.xcfl006
      AND xcfl007 = g_xcfl_d_t.xcfl007
      AND xcfl008 = g_xcfl_d_t.xcfl008
      AND xcfl009 = g_xcfl_d_t.xcfl009
 
      
   #add-point:單筆刪除中
   {<point name="delete.body.m_single_delete"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xcfl_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後
   {<point name="delete.body.a_single_delete"/>}
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
]]>
  </section>
  <section id="axcq802.browser_fill" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axcq802_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point
   #add-point:browser_fill段define
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point    
 
   LET l_searchcol = "xcflld,xcfl002,xcfl003,xcfl004"
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xcflld ",
                      ", xcfl002 ",
                      ", xcfl003 ",
                      ", xcfl004 ",
 
                      " FROM xcfl_t ",
                      " ",
                      " ",
 
                      " WHERE xcflent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xcfl_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xcflld ",
                      ", xcfl002 ",
                      ", xcfl003 ",
                      ", xcfl004 ",
 
                      " FROM xcfl_t ",
                      " ",
                      " ",
                      " WHERE xcflent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xcfl_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt 
         LET g_errparam.code   = 9035
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   LET g_error_show = 0
 
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xcfl_m.* TO NULL
      CALL g_xcfl_d.clear()        
 
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xcflld,t0.xcfl002,t0.xcfl003,t0.xcfl004 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT t0.xcflld,t0.xcfl002,t0.xcfl003,t0.xcfl004",
                " FROM xcfl_t t0",
                " ",
                " ",
 
                
                " WHERE t0.xcflent = '" ||g_enterprise|| "' AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("xcfl_t")
 
   #add-point:browser_fill,sql_rank前
   {<point name="browser_fill.before_sql_rank"/>}
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前
   {<point name="browser_fill.before_pre"/>}
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"xcfl_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   FOREACH browse_cur INTO g_browser[g_cnt].b_xcflld,g_browser[g_cnt].b_xcfl002,g_browser[g_cnt].b_xcfl003, 
       g_browser[g_cnt].b_xcfl004 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'Foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point  
 
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
   END FOREACH
 
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xcflld) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_xcfl_m.* TO NULL
      CALL g_xcfl_d.clear()
 
      #add-point:browser_fill段after_clear
      {<point name="browser_fill.after_clear"/>}
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   LET g_browser_cnt = g_browser.getLength()
   CALL axcq802_fetch('')
   
   #筆數顯示
   LET g_browser_idx = g_current_idx 
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
   
   FREE browse_pre
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.browser_search" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axcq802_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define" edit="s"/>}
   #end add-point
   #add-point:browser_search段define
   {<point name="browser_search.define_customerization" edit="c"/>}
   #end add-point   
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="axcq802.construct" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION axcq802_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point 
    #add-point:cs段define
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
 
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_xcfl_m.* TO NULL
   CALL g_xcfl_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外
   {<point name="cs.head.before"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xcflcomp,xcfl003,xcfl004,xcflld,xcfl002
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
                 #Ctrlp:construct.c.xcflcomp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcflcomp
            #add-point:ON ACTION controlp INFIELD xcflcomp
            {<point name="construct.c.xcflcomp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcflcomp
            #add-point:BEFORE FIELD xcflcomp
            {<point name="construct.b.xcflcomp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcflcomp
            
            #add-point:AFTER FIELD xcflcomp
            {<point name="construct.a.xcflcomp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfl003
            #add-point:BEFORE FIELD xcfl003
            {<point name="construct.b.xcfl003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfl003
            
            #add-point:AFTER FIELD xcfl003
            {<point name="construct.a.xcfl003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xcfl003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfl003
            #add-point:ON ACTION controlp INFIELD xcfl003
            {<point name="construct.c.xcfl003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfl004
            #add-point:BEFORE FIELD xcfl004
            {<point name="construct.b.xcfl004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfl004
            
            #add-point:AFTER FIELD xcfl004
            {<point name="construct.a.xcfl004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xcfl004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfl004
            #add-point:ON ACTION controlp INFIELD xcfl004
            {<point name="construct.c.xcfl004" />}
            #END add-point
 
         #Ctrlp:construct.c.xcflld
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcflld
            #add-point:ON ACTION controlp INFIELD xcflld
            {<point name="construct.c.xcflld" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcflld
            #add-point:BEFORE FIELD xcflld
            {<point name="construct.b.xcflld" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcflld
            
            #add-point:AFTER FIELD xcflld
            {<point name="construct.a.xcflld" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xcfl002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfl002
            #add-point:ON ACTION controlp INFIELD xcfl002
            {<point name="construct.c.xcfl002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfl002
            #add-point:BEFORE FIELD xcfl002
            {<point name="construct.b.xcfl002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfl002
            
            #add-point:AFTER FIELD xcfl002
            {<point name="construct.a.xcfl002" />}
            #END add-point
            
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON xccd007,xcfl005,xcfl006,xcfl007,xcfl008,xcfl001,xcfb010,xcfl009,l_qty1, 
          l_amt1,l_rate1,l_idle1,l_qty2,l_amt2,l_rate2,l_idle2,l_qty3,l_amt3,l_rate3,l_idle3,l_qty4, 
          l_amt4,l_rate4,l_idle4,l_qty5,l_amt5,l_rate5,l_idle5,l_qty6,l_amt6,l_rate6,l_idle6,l_qty7, 
          l_amt7,l_rate7,l_idle7,l_qty8,l_amt8,l_rate8,l_idle8,l_qty9,l_amt9,l_rate9,l_idle9,l_qty10, 
          l_amt10,l_rate10,l_idle10
           FROM s_detail1[1].xccd007,s_detail1[1].xcfl005,s_detail1[1].xcfl006,s_detail1[1].xcfl007, 
               s_detail1[1].xcfl008,s_detail1[1].xcfl001,s_detail1[1].xcfb010,s_detail1[1].xcfl009,s_detail1[1].l_qty1, 
               s_detail1[1].l_amt1,s_detail1[1].l_rate1,s_detail1[1].l_idle1,s_detail1[1].l_qty2,s_detail1[1].l_amt2, 
               s_detail1[1].l_rate2,s_detail1[1].l_idle2,s_detail1[1].l_qty3,s_detail1[1].l_amt3,s_detail1[1].l_rate3, 
               s_detail1[1].l_idle3,s_detail1[1].l_qty4,s_detail1[1].l_amt4,s_detail1[1].l_rate4,s_detail1[1].l_idle4, 
               s_detail1[1].l_qty5,s_detail1[1].l_amt5,s_detail1[1].l_rate5,s_detail1[1].l_idle5,s_detail1[1].l_qty6, 
               s_detail1[1].l_amt6,s_detail1[1].l_rate6,s_detail1[1].l_idle6,s_detail1[1].l_qty7,s_detail1[1].l_amt7, 
               s_detail1[1].l_rate7,s_detail1[1].l_idle7,s_detail1[1].l_qty8,s_detail1[1].l_amt8,s_detail1[1].l_rate8, 
               s_detail1[1].l_idle8,s_detail1[1].l_qty9,s_detail1[1].l_amt9,s_detail1[1].l_rate9,s_detail1[1].l_idle9, 
               s_detail1[1].l_qty10,s_detail1[1].l_amt10,s_detail1[1].l_rate10,s_detail1[1].l_idle10 

                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
         #單身公用欄位開窗相關處理
         
           
         #單身一般欄位開窗相關處理
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd007
            #add-point:BEFORE FIELD xccd007
            {<point name="construct.b.page1.xccd007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd007
            
            #add-point:AFTER FIELD xccd007
            {<point name="construct.a.page1.xccd007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccd007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd007
            #add-point:ON ACTION controlp INFIELD xccd007
            {<point name="construct.c.page1.xccd007" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xcfl005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfl005
            #add-point:ON ACTION controlp INFIELD xcfl005
            {<point name="construct.c.page1.xcfl005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfl005
            #add-point:BEFORE FIELD xcfl005
            {<point name="construct.b.page1.xcfl005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfl005
            
            #add-point:AFTER FIELD xcfl005
            {<point name="construct.a.page1.xcfl005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcfl006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfl006
            #add-point:ON ACTION controlp INFIELD xcfl006
            {<point name="construct.c.page1.xcfl006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfl006
            #add-point:BEFORE FIELD xcfl006
            {<point name="construct.b.page1.xcfl006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfl006
            
            #add-point:AFTER FIELD xcfl006
            {<point name="construct.a.page1.xcfl006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcfl007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfl007
            #add-point:ON ACTION controlp INFIELD xcfl007
            {<point name="construct.c.page1.xcfl007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfl007
            #add-point:BEFORE FIELD xcfl007
            {<point name="construct.b.page1.xcfl007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfl007
            
            #add-point:AFTER FIELD xcfl007
            {<point name="construct.a.page1.xcfl007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcfl008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfl008
            #add-point:ON ACTION controlp INFIELD xcfl008
            {<point name="construct.c.page1.xcfl008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfl008
            #add-point:BEFORE FIELD xcfl008
            {<point name="construct.b.page1.xcfl008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfl008
            
            #add-point:AFTER FIELD xcfl008
            {<point name="construct.a.page1.xcfl008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcfl001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfl001
            #add-point:ON ACTION controlp INFIELD xcfl001
            {<point name="construct.c.page1.xcfl001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfl001
            #add-point:BEFORE FIELD xcfl001
            {<point name="construct.b.page1.xcfl001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfl001
            
            #add-point:AFTER FIELD xcfl001
            {<point name="construct.a.page1.xcfl001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcfb010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfb010
            #add-point:ON ACTION controlp INFIELD xcfb010
            {<point name="construct.c.page1.xcfb010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfb010
            #add-point:BEFORE FIELD xcfb010
            {<point name="construct.b.page1.xcfb010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfb010
            
            #add-point:AFTER FIELD xcfb010
            {<point name="construct.a.page1.xcfb010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfl009
            #add-point:BEFORE FIELD xcfl009
            {<point name="construct.b.page1.xcfl009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfl009
            
            #add-point:AFTER FIELD xcfl009
            {<point name="construct.a.page1.xcfl009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcfl009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfl009
            #add-point:ON ACTION controlp INFIELD xcfl009
            {<point name="construct.c.page1.xcfl009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle
            #add-point:BEFORE FIELD l_idle
            {<point name="construct.b.page1.l_idle" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle
            
            #add-point:AFTER FIELD l_idle
            {<point name="construct.a.page1.l_idle" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_idle
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle
            #add-point:ON ACTION controlp INFIELD l_idle
            {<point name="construct.c.page1.l_idle" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty1
            #add-point:BEFORE FIELD l_qty1
            {<point name="construct.b.page1.l_qty1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty1
            
            #add-point:AFTER FIELD l_qty1
            {<point name="construct.a.page1.l_qty1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_qty1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty1
            #add-point:ON ACTION controlp INFIELD l_qty1
            {<point name="construct.c.page1.l_qty1" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt1
            #add-point:BEFORE FIELD l_amt1
            {<point name="construct.b.page1.l_amt1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt1
            
            #add-point:AFTER FIELD l_amt1
            {<point name="construct.a.page1.l_amt1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_amt1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt1
            #add-point:ON ACTION controlp INFIELD l_amt1
            {<point name="construct.c.page1.l_amt1" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate1
            #add-point:BEFORE FIELD l_rate1
            {<point name="construct.b.page1.l_rate1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate1
            
            #add-point:AFTER FIELD l_rate1
            {<point name="construct.a.page1.l_rate1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_rate1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate1
            #add-point:ON ACTION controlp INFIELD l_rate1
            {<point name="construct.c.page1.l_rate1" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle1
            #add-point:BEFORE FIELD l_idle1
            {<point name="construct.b.page1.l_idle1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle1
            
            #add-point:AFTER FIELD l_idle1
            {<point name="construct.a.page1.l_idle1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_idle1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle1
            #add-point:ON ACTION controlp INFIELD l_idle1
            {<point name="construct.c.page1.l_idle1" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty2
            #add-point:BEFORE FIELD l_qty2
            {<point name="construct.b.page1.l_qty2" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty2
            
            #add-point:AFTER FIELD l_qty2
            {<point name="construct.a.page1.l_qty2" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_qty2
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty2
            #add-point:ON ACTION controlp INFIELD l_qty2
            {<point name="construct.c.page1.l_qty2" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt2
            #add-point:BEFORE FIELD l_amt2
            {<point name="construct.b.page1.l_amt2" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt2
            
            #add-point:AFTER FIELD l_amt2
            {<point name="construct.a.page1.l_amt2" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_amt2
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt2
            #add-point:ON ACTION controlp INFIELD l_amt2
            {<point name="construct.c.page1.l_amt2" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate2
            #add-point:BEFORE FIELD l_rate2
            {<point name="construct.b.page1.l_rate2" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate2
            
            #add-point:AFTER FIELD l_rate2
            {<point name="construct.a.page1.l_rate2" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_rate2
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate2
            #add-point:ON ACTION controlp INFIELD l_rate2
            {<point name="construct.c.page1.l_rate2" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle2
            #add-point:BEFORE FIELD l_idle2
            {<point name="construct.b.page1.l_idle2" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle2
            
            #add-point:AFTER FIELD l_idle2
            {<point name="construct.a.page1.l_idle2" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_idle2
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle2
            #add-point:ON ACTION controlp INFIELD l_idle2
            {<point name="construct.c.page1.l_idle2" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty3
            #add-point:BEFORE FIELD l_qty3
            {<point name="construct.b.page1.l_qty3" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty3
            
            #add-point:AFTER FIELD l_qty3
            {<point name="construct.a.page1.l_qty3" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_qty3
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty3
            #add-point:ON ACTION controlp INFIELD l_qty3
            {<point name="construct.c.page1.l_qty3" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt3
            #add-point:BEFORE FIELD l_amt3
            {<point name="construct.b.page1.l_amt3" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt3
            
            #add-point:AFTER FIELD l_amt3
            {<point name="construct.a.page1.l_amt3" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_amt3
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt3
            #add-point:ON ACTION controlp INFIELD l_amt3
            {<point name="construct.c.page1.l_amt3" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate3
            #add-point:BEFORE FIELD l_rate3
            {<point name="construct.b.page1.l_rate3" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate3
            
            #add-point:AFTER FIELD l_rate3
            {<point name="construct.a.page1.l_rate3" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_rate3
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate3
            #add-point:ON ACTION controlp INFIELD l_rate3
            {<point name="construct.c.page1.l_rate3" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle3
            #add-point:BEFORE FIELD l_idle3
            {<point name="construct.b.page1.l_idle3" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle3
            
            #add-point:AFTER FIELD l_idle3
            {<point name="construct.a.page1.l_idle3" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_idle3
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle3
            #add-point:ON ACTION controlp INFIELD l_idle3
            {<point name="construct.c.page1.l_idle3" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty4
            #add-point:BEFORE FIELD l_qty4
            {<point name="construct.b.page1.l_qty4" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty4
            
            #add-point:AFTER FIELD l_qty4
            {<point name="construct.a.page1.l_qty4" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_qty4
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty4
            #add-point:ON ACTION controlp INFIELD l_qty4
            {<point name="construct.c.page1.l_qty4" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt4
            #add-point:BEFORE FIELD l_amt4
            {<point name="construct.b.page1.l_amt4" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt4
            
            #add-point:AFTER FIELD l_amt4
            {<point name="construct.a.page1.l_amt4" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_amt4
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt4
            #add-point:ON ACTION controlp INFIELD l_amt4
            {<point name="construct.c.page1.l_amt4" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate4
            #add-point:BEFORE FIELD l_rate4
            {<point name="construct.b.page1.l_rate4" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate4
            
            #add-point:AFTER FIELD l_rate4
            {<point name="construct.a.page1.l_rate4" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_rate4
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate4
            #add-point:ON ACTION controlp INFIELD l_rate4
            {<point name="construct.c.page1.l_rate4" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle4
            #add-point:BEFORE FIELD l_idle4
            {<point name="construct.b.page1.l_idle4" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle4
            
            #add-point:AFTER FIELD l_idle4
            {<point name="construct.a.page1.l_idle4" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_idle4
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle4
            #add-point:ON ACTION controlp INFIELD l_idle4
            {<point name="construct.c.page1.l_idle4" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty5
            #add-point:BEFORE FIELD l_qty5
            {<point name="construct.b.page1.l_qty5" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty5
            
            #add-point:AFTER FIELD l_qty5
            {<point name="construct.a.page1.l_qty5" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_qty5
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty5
            #add-point:ON ACTION controlp INFIELD l_qty5
            {<point name="construct.c.page1.l_qty5" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt5
            #add-point:BEFORE FIELD l_amt5
            {<point name="construct.b.page1.l_amt5" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt5
            
            #add-point:AFTER FIELD l_amt5
            {<point name="construct.a.page1.l_amt5" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_amt5
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt5
            #add-point:ON ACTION controlp INFIELD l_amt5
            {<point name="construct.c.page1.l_amt5" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate5
            #add-point:BEFORE FIELD l_rate5
            {<point name="construct.b.page1.l_rate5" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate5
            
            #add-point:AFTER FIELD l_rate5
            {<point name="construct.a.page1.l_rate5" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_rate5
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate5
            #add-point:ON ACTION controlp INFIELD l_rate5
            {<point name="construct.c.page1.l_rate5" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle5
            #add-point:BEFORE FIELD l_idle5
            {<point name="construct.b.page1.l_idle5" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle5
            
            #add-point:AFTER FIELD l_idle5
            {<point name="construct.a.page1.l_idle5" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_idle5
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle5
            #add-point:ON ACTION controlp INFIELD l_idle5
            {<point name="construct.c.page1.l_idle5" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty6
            #add-point:BEFORE FIELD l_qty6
            {<point name="construct.b.page1.l_qty6" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty6
            
            #add-point:AFTER FIELD l_qty6
            {<point name="construct.a.page1.l_qty6" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_qty6
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty6
            #add-point:ON ACTION controlp INFIELD l_qty6
            {<point name="construct.c.page1.l_qty6" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt6
            #add-point:BEFORE FIELD l_amt6
            {<point name="construct.b.page1.l_amt6" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt6
            
            #add-point:AFTER FIELD l_amt6
            {<point name="construct.a.page1.l_amt6" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_amt6
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt6
            #add-point:ON ACTION controlp INFIELD l_amt6
            {<point name="construct.c.page1.l_amt6" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate6
            #add-point:BEFORE FIELD l_rate6
            {<point name="construct.b.page1.l_rate6" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate6
            
            #add-point:AFTER FIELD l_rate6
            {<point name="construct.a.page1.l_rate6" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_rate6
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate6
            #add-point:ON ACTION controlp INFIELD l_rate6
            {<point name="construct.c.page1.l_rate6" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle6
            #add-point:BEFORE FIELD l_idle6
            {<point name="construct.b.page1.l_idle6" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle6
            
            #add-point:AFTER FIELD l_idle6
            {<point name="construct.a.page1.l_idle6" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_idle6
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle6
            #add-point:ON ACTION controlp INFIELD l_idle6
            {<point name="construct.c.page1.l_idle6" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty7
            #add-point:BEFORE FIELD l_qty7
            {<point name="construct.b.page1.l_qty7" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty7
            
            #add-point:AFTER FIELD l_qty7
            {<point name="construct.a.page1.l_qty7" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_qty7
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty7
            #add-point:ON ACTION controlp INFIELD l_qty7
            {<point name="construct.c.page1.l_qty7" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt7
            #add-point:BEFORE FIELD l_amt7
            {<point name="construct.b.page1.l_amt7" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt7
            
            #add-point:AFTER FIELD l_amt7
            {<point name="construct.a.page1.l_amt7" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_amt7
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt7
            #add-point:ON ACTION controlp INFIELD l_amt7
            {<point name="construct.c.page1.l_amt7" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate7
            #add-point:BEFORE FIELD l_rate7
            {<point name="construct.b.page1.l_rate7" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate7
            
            #add-point:AFTER FIELD l_rate7
            {<point name="construct.a.page1.l_rate7" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_rate7
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate7
            #add-point:ON ACTION controlp INFIELD l_rate7
            {<point name="construct.c.page1.l_rate7" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle7
            #add-point:BEFORE FIELD l_idle7
            {<point name="construct.b.page1.l_idle7" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle7
            
            #add-point:AFTER FIELD l_idle7
            {<point name="construct.a.page1.l_idle7" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_idle7
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle7
            #add-point:ON ACTION controlp INFIELD l_idle7
            {<point name="construct.c.page1.l_idle7" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty8
            #add-point:BEFORE FIELD l_qty8
            {<point name="construct.b.page1.l_qty8" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty8
            
            #add-point:AFTER FIELD l_qty8
            {<point name="construct.a.page1.l_qty8" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_qty8
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty8
            #add-point:ON ACTION controlp INFIELD l_qty8
            {<point name="construct.c.page1.l_qty8" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt8
            #add-point:BEFORE FIELD l_amt8
            {<point name="construct.b.page1.l_amt8" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt8
            
            #add-point:AFTER FIELD l_amt8
            {<point name="construct.a.page1.l_amt8" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_amt8
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt8
            #add-point:ON ACTION controlp INFIELD l_amt8
            {<point name="construct.c.page1.l_amt8" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate8
            #add-point:BEFORE FIELD l_rate8
            {<point name="construct.b.page1.l_rate8" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate8
            
            #add-point:AFTER FIELD l_rate8
            {<point name="construct.a.page1.l_rate8" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_rate8
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate8
            #add-point:ON ACTION controlp INFIELD l_rate8
            {<point name="construct.c.page1.l_rate8" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle8
            #add-point:BEFORE FIELD l_idle8
            {<point name="construct.b.page1.l_idle8" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle8
            
            #add-point:AFTER FIELD l_idle8
            {<point name="construct.a.page1.l_idle8" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_idle8
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle8
            #add-point:ON ACTION controlp INFIELD l_idle8
            {<point name="construct.c.page1.l_idle8" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty9
            #add-point:BEFORE FIELD l_qty9
            {<point name="construct.b.page1.l_qty9" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty9
            
            #add-point:AFTER FIELD l_qty9
            {<point name="construct.a.page1.l_qty9" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_qty9
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty9
            #add-point:ON ACTION controlp INFIELD l_qty9
            {<point name="construct.c.page1.l_qty9" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt9
            #add-point:BEFORE FIELD l_amt9
            {<point name="construct.b.page1.l_amt9" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt9
            
            #add-point:AFTER FIELD l_amt9
            {<point name="construct.a.page1.l_amt9" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_amt9
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt9
            #add-point:ON ACTION controlp INFIELD l_amt9
            {<point name="construct.c.page1.l_amt9" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate9
            #add-point:BEFORE FIELD l_rate9
            {<point name="construct.b.page1.l_rate9" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate9
            
            #add-point:AFTER FIELD l_rate9
            {<point name="construct.a.page1.l_rate9" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_rate9
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate9
            #add-point:ON ACTION controlp INFIELD l_rate9
            {<point name="construct.c.page1.l_rate9" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle9
            #add-point:BEFORE FIELD l_idle9
            {<point name="construct.b.page1.l_idle9" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle9
            
            #add-point:AFTER FIELD l_idle9
            {<point name="construct.a.page1.l_idle9" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_idle9
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle9
            #add-point:ON ACTION controlp INFIELD l_idle9
            {<point name="construct.c.page1.l_idle9" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty10
            #add-point:BEFORE FIELD l_qty10
            {<point name="construct.b.page1.l_qty10" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty10
            
            #add-point:AFTER FIELD l_qty10
            {<point name="construct.a.page1.l_qty10" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_qty10
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty10
            #add-point:ON ACTION controlp INFIELD l_qty10
            {<point name="construct.c.page1.l_qty10" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt10
            #add-point:BEFORE FIELD l_amt10
            {<point name="construct.b.page1.l_amt10" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt10
            
            #add-point:AFTER FIELD l_amt10
            {<point name="construct.a.page1.l_amt10" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_amt10
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt10
            #add-point:ON ACTION controlp INFIELD l_amt10
            {<point name="construct.c.page1.l_amt10" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate10
            #add-point:BEFORE FIELD l_rate10
            {<point name="construct.b.page1.l_rate10" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate10
            
            #add-point:AFTER FIELD l_rate10
            {<point name="construct.a.page1.l_rate10" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_rate10
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate10
            #add-point:ON ACTION controlp INFIELD l_rate10
            {<point name="construct.c.page1.l_rate10" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle10
            #add-point:BEFORE FIELD l_idle10
            {<point name="construct.b.page1.l_idle10" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle10
            
            #add-point:AFTER FIELD l_idle10
            {<point name="construct.a.page1.l_idle10" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.l_idle10
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle10
            #add-point:ON ACTION controlp INFIELD l_idle10
            {<point name="construct.c.page1.l_idle10" />}
            #END add-point
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog
         {<point name="cs.before_dialog"/>}
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
]]>
  </section>
  <section id="axcq802.default_search" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION axcq802_default_search()
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point 
   #add-point:default_search段define
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xcflld = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xcfl002 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xcfl003 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " xcfl004 = '", g_argv[04], "' AND "
   END IF
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="axcq802.delete" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION axcq802_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point
   
   IF g_xcfl_m.xcflld IS NULL
   OR g_xcfl_m.xcfl002 IS NULL
   OR g_xcfl_m.xcfl003 IS NULL
   OR g_xcfl_m.xcfl004 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   
 
   OPEN axcq802_cl USING g_enterprise,g_xcfl_m.xcflld,g_xcfl_m.xcfl002,g_xcfl_m.xcfl003,g_xcfl_m.xcfl004
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axcq802_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE axcq802_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axcq802_master_referesh USING g_xcfl_m.xcflld,g_xcfl_m.xcfl002,g_xcfl_m.xcfl003,g_xcfl_m.xcfl004 INTO g_xcfl_m.xcflcomp, 
       g_xcfl_m.xcfl003,g_xcfl_m.xcfl004,g_xcfl_m.xcflld,g_xcfl_m.xcfl002,g_xcfl_m.xcflcomp_desc,g_xcfl_m.xcflld_desc, 
       g_xcfl_m.xcfl002_desc
   
   #遮罩相關處理
   LET g_xcfl_m_mask_o.* =  g_xcfl_m.*
   CALL axcq802_xcfl_t_mask()
   LET g_xcfl_m_mask_n.* =  g_xcfl_m.*
   
   CALL axcq802_show()
 
   #單頭多語言資料備份
   
   
   IF cl_ask_del_master() THEN              #確認一下
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL axcq802_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM xcfl_t WHERE xcflent = g_enterprise AND xcflld = g_xcfl_m.xcflld
                                                               AND xcfl002 = g_xcfl_m.xcfl002
                                                               AND xcfl003 = g_xcfl_m.xcfl003
                                                               AND xcfl004 = g_xcfl_m.xcfl004
 
                                                               
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xcfl_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
      END IF
 
      
  
      #add-point:單身刪除後 
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
 
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
      
      #頭先不紀錄
      #IF NOT cl_log_modified_record('','') THEN 
      #   CLOSE axcq802_cl
      #   CALL s_transaction_end('N','0')
      #   RETURN 
      #END IF
      
      CLEAR FORM
      CALL g_xcfl_d.clear() 
 
     
      CALL axcq802_ui_browser_refresh()  
      #CALL axcq802_ui_headershow()  
      #CALL axcq802_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axcq802_fetch('P')
      ELSE
         #LET g_wc = " 1=1"
         #LET g_wc2 = " 1=1"
         #CALL axcq802_browser_fill("F")
         CLEAR FORM
      END IF
       
   END IF
 
   CLOSE axcq802_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axcq802_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="axcq802.delete_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION axcq802_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000019
#+ 
#+ Filename...: axcq802
#+ Description: 在制貨齡查詢作業
#+ Creator....: 03297(2014-11-07 15:44:53)
#+ Modifier...: 05795(2015-05-29 15:38:05) -SD/PR-
]]>
  </section>
  <section id="axcq802.detail_reproduce" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION axcq802_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xcfl_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point 
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axcq802_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axcq802_detail AS ",
                "SELECT * FROM xcfl_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axcq802_detail SELECT * FROM xcfl_t 
                                         WHERE xcflent = g_enterprise AND xcflld = g_xcflld_t
                                         AND xcfl002 = g_xcfl002_t
                                         AND xcfl003 = g_xcfl003_t
                                         AND xcfl004 = g_xcfl004_t
 
   
   #將key修正為調整後   
   UPDATE axcq802_detail 
      #更新key欄位
      SET xcflld = g_xcfl_m.xcflld
          , xcfl002 = g_xcfl_m.xcfl002
          , xcfl003 = g_xcfl_m.xcfl003
          , xcfl004 = g_xcfl_m.xcfl004
 
      #更新共用欄位
      
                                       
   #將資料塞回原table   
   INSERT INTO xcfl_t SELECT * FROM axcq802_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axcq802_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xcflld_t = g_xcfl_m.xcflld
   LET g_xcfl002_t = g_xcfl_m.xcfl002
   LET g_xcfl003_t = g_xcfl_m.xcfl003
   LET g_xcfl004_t = g_xcfl_m.xcfl004
 
   
   DROP TABLE axcq802_detail
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.fetch" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axcq802_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point
   #add-point:fetch段define
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:fetch段動作開始前
   {<point name="fetch.before_fetch"/>}
   #end add-point    
 
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L' 
         LET g_current_idx = g_header_cnt
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   #CALL axcq802_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart + g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting(g_current_idx,g_detail_cnt)
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xcfl_m.xcflld = g_browser[g_current_idx].b_xcflld
   LET g_xcfl_m.xcfl002 = g_browser[g_current_idx].b_xcfl002
   LET g_xcfl_m.xcfl003 = g_browser[g_current_idx].b_xcfl003
   LET g_xcfl_m.xcfl004 = g_browser[g_current_idx].b_xcfl004
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axcq802_master_referesh USING g_xcfl_m.xcflld,g_xcfl_m.xcfl002,g_xcfl_m.xcfl003,g_xcfl_m.xcfl004 INTO g_xcfl_m.xcflcomp, 
       g_xcfl_m.xcfl003,g_xcfl_m.xcfl004,g_xcfl_m.xcflld,g_xcfl_m.xcfl002,g_xcfl_m.xcflcomp_desc,g_xcfl_m.xcflld_desc, 
       g_xcfl_m.xcfl002_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xcfl_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      INITIALIZE g_xcfl_m.* TO NULL
      RETURN
   END IF
 
   #遮罩相關處理
   LET g_xcfl_m_mask_o.* =  g_xcfl_m.*
   CALL axcq802_xcfl_t_mask()
   LET g_xcfl_m_mask_n.* =  g_xcfl_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq802_set_act_visible()
   CALL axcq802_set_act_no_visible()
 
   #保存單頭舊值
   LET g_xcfl_m_t.* = g_xcfl_m.*
   LET g_xcfl_m_o.* = g_xcfl_m.*
   
   #重新顯示   
   CALL axcq802_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="axcq802.fill_chk" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION axcq802_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
   
   #add-point:fill_chk段other
   {<point name="fill_chk.other"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="axcq802.global" ver="13" status="" src="s" readonly="">
    <![CDATA[#應用 i07 樣板自動產生(Version:23)
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xcfl_m        RECORD
       xcflcomp LIKE xcfl_t.xcflcomp, 
   xcflcomp_desc LIKE type_t.chr80, 
   xcfl003 LIKE xcfl_t.xcfl003, 
   xcfl004 LIKE xcfl_t.xcfl004, 
   xccc001 LIKE type_t.chr1, 
   xccc001_desc LIKE type_t.chr80, 
   xcflld LIKE xcfl_t.xcflld, 
   xcflld_desc LIKE type_t.chr80, 
   xcfl002 LIKE xcfl_t.xcfl002, 
   xcfl002_desc LIKE type_t.chr80, 
   xcfa004 LIKE type_t.chr1
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xcfl_d        RECORD
       xccd007 LIKE type_t.chr500, 
   xcfl005 LIKE xcfl_t.xcfl005, 
   xcfl006 LIKE xcfl_t.xcfl006, 
   xcfl006_desc LIKE type_t.chr500, 
   xcfl006_desc_desc LIKE type_t.chr500, 
   xcfl007 LIKE xcfl_t.xcfl007, 
   xcfl008 LIKE xcfl_t.xcfl008, 
   xcfl001 LIKE xcfl_t.xcfl001, 
   xcfl001_desc LIKE type_t.chr500, 
   xcfb010 LIKE type_t.chr10, 
   xcfb010_desc LIKE type_t.chr500, 
   xcfl009 LIKE xcfl_t.xcfl009, 
   xcce901 LIKE type_t.num20_6, 
   xccc280 LIKE type_t.num20_6, 
   l_amount LIKE type_t.num20_6, 
   l_idle LIKE type_t.num20_6, 
   l_qty1 LIKE type_t.chr20, 
   l_amt1 LIKE type_t.num20_6, 
   l_rate1 LIKE type_t.num20_6, 
   l_idle1 LIKE type_t.num20_6, 
   l_qty2 LIKE type_t.chr20, 
   l_amt2 LIKE type_t.num20_6, 
   l_rate2 LIKE type_t.num20_6, 
   l_idle2 LIKE type_t.num20_6, 
   l_qty3 LIKE type_t.chr20, 
   l_amt3 LIKE type_t.num20_6, 
   l_rate3 LIKE type_t.num20_6, 
   l_idle3 LIKE type_t.num20_6, 
   l_qty4 LIKE type_t.chr20, 
   l_amt4 LIKE type_t.num20_6, 
   l_rate4 LIKE type_t.num20_6, 
   l_idle4 LIKE type_t.num20_6, 
   l_qty5 LIKE type_t.chr20, 
   l_amt5 LIKE type_t.num20_6, 
   l_rate5 LIKE type_t.num20_6, 
   l_idle5 LIKE type_t.num20_6, 
   l_qty6 LIKE type_t.chr20, 
   l_amt6 LIKE type_t.num20_6, 
   l_rate6 LIKE type_t.num20_6, 
   l_idle6 LIKE type_t.num20_6, 
   l_qty7 LIKE type_t.chr20, 
   l_amt7 LIKE type_t.num20_6, 
   l_rate7 LIKE type_t.num20_6, 
   l_idle7 LIKE type_t.num20_6, 
   l_qty8 LIKE type_t.chr20, 
   l_amt8 LIKE type_t.num20_6, 
   l_rate8 LIKE type_t.num20_6, 
   l_idle8 LIKE type_t.num20_6, 
   l_qty9 LIKE type_t.chr20, 
   l_amt9 LIKE type_t.num20_6, 
   l_rate9 LIKE type_t.num20_6, 
   l_idle9 LIKE type_t.num20_6, 
   l_qty10 LIKE type_t.chr20, 
   l_amt10 LIKE type_t.num20_6, 
   l_rate10 LIKE type_t.num20_6, 
   l_idle10 LIKE type_t.num20_6
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_xcfl_m          type_g_xcfl_m
DEFINE g_xcfl_m_t        type_g_xcfl_m
DEFINE g_xcfl_m_o        type_g_xcfl_m
DEFINE g_xcfl_m_mask_o   type_g_xcfl_m #轉換遮罩前資料
DEFINE g_xcfl_m_mask_n   type_g_xcfl_m #轉換遮罩後資料
 
   DEFINE g_xcfl003_t LIKE xcfl_t.xcfl003
DEFINE g_xcfl004_t LIKE xcfl_t.xcfl004
DEFINE g_xcflld_t LIKE xcfl_t.xcflld
DEFINE g_xcfl002_t LIKE xcfl_t.xcfl002
 
 
DEFINE g_xcfl_d          DYNAMIC ARRAY OF type_g_xcfl_d
DEFINE g_xcfl_d_t        type_g_xcfl_d
DEFINE g_xcfl_d_o        type_g_xcfl_d
DEFINE g_xcfl_d_mask_o   DYNAMIC ARRAY OF type_g_xcfl_d #轉換遮罩前資料
DEFINE g_xcfl_d_mask_n   DYNAMIC ARRAY OF type_g_xcfl_d #轉換遮罩後資料
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_xcflld LIKE xcfl_t.xcflld,
      b_xcfl002 LIKE xcfl_t.xcfl002,
      b_xcfl003 LIKE xcfl_t.xcfl003,
      b_xcfl004 LIKE xcfl_t.xcfl004
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num10             #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10             #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10             #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10             #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10             #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10             #Browser目前所在筆數(暫存用)
DEFINE g_current_page        LIKE type_t.num10             #目前所在頁數
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num10             #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入(僅用於三階)
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="axcq802.idx_chk" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axcq802_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #判定目前選擇的頁面
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      #確保當下指標的位置未超過上限
      IF g_detail_idx > g_xcfl_d.getLength() THEN
         LET g_detail_idx = g_xcfl_d.getLength()
      END IF
      #確保資料位置不小於1
      IF g_detail_idx = 0 AND g_xcfl_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      #將筆數資料顯示到畫面上
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xcfl_d.getLength() TO FORMONLY.cnt
      #將位置顯示到正確筆數上
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   END IF
    
   #同第一個page的做法進行其他頁面的處理
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.init" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axcq802_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point
   #add-point:init段define
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point   
  
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL axcq802_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="axcq802.input" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION axcq802_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num10               #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num10               #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10               #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point
   #add-point:input段define
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point   
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xcfl_m.xcflcomp,g_xcfl_m.xcflcomp_desc,g_xcfl_m.xcfl003,g_xcfl_m.xcfl004,g_xcfl_m.xccc001, 
       g_xcfl_m.xccc001_desc,g_xcfl_m.xcflld,g_xcfl_m.xcflld_desc,g_xcfl_m.xcfl002,g_xcfl_m.xcfl002_desc, 
       g_xcfl_m.xcfa004
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT xcfl005,xcfl006,xcfl007,xcfl008,xcfl001,xcfl009 FROM xcfl_t WHERE xcflent=?  
       AND xcflld=? AND xcfl002=? AND xcfl003=? AND xcfl004=? AND xcfl001=? AND xcfl005=? AND xcfl006=?  
       AND xcfl007=? AND xcfl008=? AND xcfl009=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axcq802_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axcq802_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL axcq802_set_no_entry(p_cmd)
   #add-point:set_no_entry後
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_xcfl_m.xcflcomp,g_xcfl_m.xcfl003,g_xcfl_m.xcfl004,g_xcfl_m.xccc001,g_xcfl_m.xcflld, 
       g_xcfl_m.xcfl002,g_xcfl_m.xcfa004
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:進入修改段前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="axcq802.input.body" ver="9" status="" src="s" readonly="">
    <![CDATA[      #Page1 預設值產生於此處
      INPUT ARRAY g_xcfl_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcfl_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axcq802_b_fill(g_wc2) #test 
            #如果一直都在單頭則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm' 
            #add-point:資料輸入前
            {<point name="input.body.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq802_idx_chk()
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axcq802_cl USING g_enterprise,g_xcfl_m.xcflld,g_xcfl_m.xcfl002,g_xcfl_m.xcfl003,g_xcfl_m.xcfl004                          
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axcq802_cl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLOSE axcq802_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            IF g_rec_b >= l_ac 
               AND g_xcfl_d[l_ac].xcfl001 IS NOT NULL
               AND g_xcfl_d[l_ac].xcfl005 IS NOT NULL
               AND g_xcfl_d[l_ac].xcfl006 IS NOT NULL
               AND g_xcfl_d[l_ac].xcfl007 IS NOT NULL
               AND g_xcfl_d[l_ac].xcfl008 IS NOT NULL
               AND g_xcfl_d[l_ac].xcfl009 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xcfl_d_t.* = g_xcfl_d[l_ac].*  #BACKUP
               LET g_xcfl_d_o.* = g_xcfl_d[l_ac].*  #BACKUP
               CALL axcq802_set_entry_b(l_cmd)
               #add-point:set_entry_b後
               {<point name="input.body.before_row.set_entry_b"/>}
               #end add-point
               CALL axcq802_set_no_entry_b(l_cmd)
               OPEN axcq802_bcl USING g_enterprise,g_xcfl_m.xcflld,
                                                g_xcfl_m.xcfl002,
                                                g_xcfl_m.xcfl003,
                                                g_xcfl_m.xcfl004,
 
                                                g_xcfl_d_t.xcfl001
                                                ,g_xcfl_d_t.xcfl005
                                                ,g_xcfl_d_t.xcfl006
                                                ,g_xcfl_d_t.xcfl007
                                                ,g_xcfl_d_t.xcfl008
                                                ,g_xcfl_d_t.xcfl009
 
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axcq802_bcl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axcq802_bcl INTO g_xcfl_d[l_ac].xcfl005,g_xcfl_d[l_ac].xcfl006,g_xcfl_d[l_ac].xcfl007, 
                      g_xcfl_d[l_ac].xcfl008,g_xcfl_d[l_ac].xcfl001,g_xcfl_d[l_ac].xcfl009
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_xcfl_d_t.xcfl001 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
                      LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xcfl_d_mask_o[l_ac].* =  g_xcfl_d[l_ac].*
                  CALL axcq802_xcfl_t_mask()
                  LET g_xcfl_d_mask_n[l_ac].* =  g_xcfl_d[l_ac].*
                  
                  CALL axcq802_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_xcfl_d_t.* TO NULL
            INITIALIZE g_xcfl_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xcfl_d[l_ac].* TO NULL
            #公用欄位預設值
              
            #一般欄位預設值
                  LET g_xcfl_d[l_ac].xccc280 = "0"
      LET g_xcfl_d[l_ac].l_idle = "0"
      LET g_xcfl_d[l_ac].l_qty1 = "0"
      LET g_xcfl_d[l_ac].l_amt1 = "0"
      LET g_xcfl_d[l_ac].l_idle1 = "0"
      LET g_xcfl_d[l_ac].l_qty2 = "0"
      LET g_xcfl_d[l_ac].l_amt2 = "0"
      LET g_xcfl_d[l_ac].l_idle2 = "0"
      LET g_xcfl_d[l_ac].l_qty3 = "0"
      LET g_xcfl_d[l_ac].l_amt3 = "0"
      LET g_xcfl_d[l_ac].l_idle3 = "0"
      LET g_xcfl_d[l_ac].l_qty4 = "0"
      LET g_xcfl_d[l_ac].l_amt4 = "0"
      LET g_xcfl_d[l_ac].l_idle4 = "0"
      LET g_xcfl_d[l_ac].l_qty5 = "0"
      LET g_xcfl_d[l_ac].l_amt5 = "0"
      LET g_xcfl_d[l_ac].l_idle5 = "0"
      LET g_xcfl_d[l_ac].l_qty6 = "0"
      LET g_xcfl_d[l_ac].l_amt6 = "0"
      LET g_xcfl_d[l_ac].l_idle6 = "0"
      LET g_xcfl_d[l_ac].l_qty7 = "0"
      LET g_xcfl_d[l_ac].l_amt7 = "0"
      LET g_xcfl_d[l_ac].l_idle7 = "0"
      LET g_xcfl_d[l_ac].l_qty8 = "0"
      LET g_xcfl_d[l_ac].l_amt8 = "0"
      LET g_xcfl_d[l_ac].l_idle8 = "0"
      LET g_xcfl_d[l_ac].l_qty9 = "0"
      LET g_xcfl_d[l_ac].l_amt9 = "0"
      LET g_xcfl_d[l_ac].l_idle9 = "0"
      LET g_xcfl_d[l_ac].l_qty10 = "0"
      LET g_xcfl_d[l_ac].l_amt10 = "0"
      LET g_xcfl_d[l_ac].l_idle10 = "0"
 
            
            #add-point:modify段before備份
            {<point name="input.body.before_insert.before_bak"/>}
            #end add-point
            LET g_xcfl_d_t.* = g_xcfl_d[l_ac].*     #新輸入資料
            LET g_xcfl_d_o.* = g_xcfl_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axcq802_set_entry_b(l_cmd)
            #add-point:set_entry_b後
            {<point name="input.body.before_insert.set_entry_b"/>}
            #end add-point
            CALL axcq802_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xcfl_d[li_reproduce_target].* = g_xcfl_d[li_reproduce].*
 
               LET g_xcfl_d[g_xcfl_d.getLength()].xcfl001 = NULL
               LET g_xcfl_d[g_xcfl_d.getLength()].xcfl005 = NULL
               LET g_xcfl_d[g_xcfl_d.getLength()].xcfl006 = NULL
               LET g_xcfl_d[g_xcfl_d.getLength()].xcfl007 = NULL
               LET g_xcfl_d[g_xcfl_d.getLength()].xcfl008 = NULL
               LET g_xcfl_d[g_xcfl_d.getLength()].xcfl009 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xcfl_t 
             WHERE xcflent = g_enterprise AND xcflld = g_xcfl_m.xcflld
               AND xcfl002 = g_xcfl_m.xcfl002
               AND xcfl003 = g_xcfl_m.xcfl003
               AND xcfl004 = g_xcfl_m.xcfl004
 
               AND xcfl001 = g_xcfl_d[l_ac].xcfl001
               AND xcfl005 = g_xcfl_d[l_ac].xcfl005
               AND xcfl006 = g_xcfl_d[l_ac].xcfl006
               AND xcfl007 = g_xcfl_d[l_ac].xcfl007
               AND xcfl008 = g_xcfl_d[l_ac].xcfl008
               AND xcfl009 = g_xcfl_d[l_ac].xcfl009
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
               {<point name="input.body.b_insert" mark="Y"/>}
               #end add-point
               INSERT INTO xcfl_t
                           (xcflent,
                            xcflcomp,xcfl003,xcfl004,xcflld,xcfl002,
                            xcfl001,xcfl005,xcfl006,xcfl007,xcfl008,xcfl009
                            ) 
                     VALUES(g_enterprise,
                            g_xcfl_m.xcflcomp,g_xcfl_m.xcfl003,g_xcfl_m.xcfl004,g_xcfl_m.xcflld,g_xcfl_m.xcfl002,
                            g_xcfl_d[l_ac].xcfl001,g_xcfl_d[l_ac].xcfl005,g_xcfl_d[l_ac].xcfl006,g_xcfl_d[l_ac].xcfl007, 
                                g_xcfl_d[l_ac].xcfl008,g_xcfl_d[l_ac].xcfl009
                            )
               #add-point:單身新增中
               {<point name="input.body.m_insert"/>}
               #end add-point
               LET p_cmd = 'u'
               LET g_master_insert = TRUE
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_xcfl_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcfl_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後
            {<point name="input.body.after_insert"/>}
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前
               {<point name="input.body.b_delete"/>}
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               IF axcq802_before_delete() THEN 
                  
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axcq802_bcl
               LET l_count = g_xcfl_d.getLength()
            END IF 
            
            #add-point:單身刪除後
            {<point name="input.body.a_delete"/>}
            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE 
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_xcfl_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd007
            #add-point:BEFORE FIELD xccd007
            {<point name="input.b.page1.xccd007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd007
            
            #add-point:AFTER FIELD xccd007
            {<point name="input.a.page1.xccd007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccd007
            #add-point:ON CHANGE xccd007
            {<point name="input.g.page1.xccd007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfl005
            #add-point:BEFORE FIELD xcfl005
            {<point name="input.b.page1.xcfl005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfl005
            
            #add-point:AFTER FIELD xcfl005
            {<point name="input.a.page1.xcfl005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcfl005
            #add-point:ON CHANGE xcfl005
            {<point name="input.g.page1.xcfl005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfl006
            
            #add-point:AFTER FIELD xcfl006
            {<point name="input.a.page1.xcfl006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfl006
            #add-point:BEFORE FIELD xcfl006
            {<point name="input.b.page1.xcfl006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcfl006
            #add-point:ON CHANGE xcfl006
            {<point name="input.g.page1.xcfl006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfl007
            #add-point:BEFORE FIELD xcfl007
            {<point name="input.b.page1.xcfl007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfl007
            
            #add-point:AFTER FIELD xcfl007
            {<point name="input.a.page1.xcfl007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcfl007
            #add-point:ON CHANGE xcfl007
            {<point name="input.g.page1.xcfl007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfl008
            #add-point:BEFORE FIELD xcfl008
            {<point name="input.b.page1.xcfl008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfl008
            
            #add-point:AFTER FIELD xcfl008
            {<point name="input.a.page1.xcfl008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcfl008
            #add-point:ON CHANGE xcfl008
            {<point name="input.g.page1.xcfl008" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfl001
            
            #add-point:AFTER FIELD xcfl001
            {<point name="input.a.page1.xcfl001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfl001
            #add-point:BEFORE FIELD xcfl001
            {<point name="input.b.page1.xcfl001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcfl001
            #add-point:ON CHANGE xcfl001
            {<point name="input.g.page1.xcfl001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfb010
            
            #add-point:AFTER FIELD xcfb010
            {<point name="input.a.page1.xcfb010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfb010
            #add-point:BEFORE FIELD xcfb010
            {<point name="input.b.page1.xcfb010" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcfb010
            #add-point:ON CHANGE xcfb010
            {<point name="input.g.page1.xcfb010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfl009
            #add-point:BEFORE FIELD xcfl009
            {<point name="input.b.page1.xcfl009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfl009
            
            #add-point:AFTER FIELD xcfl009
            {<point name="input.a.page1.xcfl009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcfl009
            #add-point:ON CHANGE xcfl009
            {<point name="input.g.page1.xcfl009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce901
            #add-point:BEFORE FIELD xcce901
            {<point name="input.b.page1.xcce901" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce901
            
            #add-point:AFTER FIELD xcce901
            {<point name="input.a.page1.xcce901" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce901
            #add-point:ON CHANGE xcce901
            {<point name="input.g.page1.xcce901" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccc280
            #add-point:BEFORE FIELD xccc280
            {<point name="input.b.page1.xccc280" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccc280
            
            #add-point:AFTER FIELD xccc280
            {<point name="input.a.page1.xccc280" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccc280
            #add-point:ON CHANGE xccc280
            {<point name="input.g.page1.xccc280" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amount
            #add-point:BEFORE FIELD l_amount
            {<point name="input.b.page1.l_amount" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amount
            
            #add-point:AFTER FIELD l_amount
            {<point name="input.a.page1.l_amount" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_amount
            #add-point:ON CHANGE l_amount
            {<point name="input.g.page1.l_amount" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle
            #add-point:BEFORE FIELD l_idle
            {<point name="input.b.page1.l_idle" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle
            
            #add-point:AFTER FIELD l_idle
            {<point name="input.a.page1.l_idle" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_idle
            #add-point:ON CHANGE l_idle
            {<point name="input.g.page1.l_idle" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty1
            #add-point:BEFORE FIELD l_qty1
            {<point name="input.b.page1.l_qty1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty1
            
            #add-point:AFTER FIELD l_qty1
            {<point name="input.a.page1.l_qty1" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_qty1
            #add-point:ON CHANGE l_qty1
            {<point name="input.g.page1.l_qty1" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt1
            #add-point:BEFORE FIELD l_amt1
            {<point name="input.b.page1.l_amt1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt1
            
            #add-point:AFTER FIELD l_amt1
            {<point name="input.a.page1.l_amt1" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_amt1
            #add-point:ON CHANGE l_amt1
            {<point name="input.g.page1.l_amt1" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate1
            #add-point:BEFORE FIELD l_rate1
            {<point name="input.b.page1.l_rate1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate1
            
            #add-point:AFTER FIELD l_rate1
            {<point name="input.a.page1.l_rate1" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_rate1
            #add-point:ON CHANGE l_rate1
            {<point name="input.g.page1.l_rate1" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle1
            #add-point:BEFORE FIELD l_idle1
            {<point name="input.b.page1.l_idle1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle1
            
            #add-point:AFTER FIELD l_idle1
            {<point name="input.a.page1.l_idle1" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_idle1
            #add-point:ON CHANGE l_idle1
            {<point name="input.g.page1.l_idle1" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty2
            #add-point:BEFORE FIELD l_qty2
            {<point name="input.b.page1.l_qty2" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty2
            
            #add-point:AFTER FIELD l_qty2
            {<point name="input.a.page1.l_qty2" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_qty2
            #add-point:ON CHANGE l_qty2
            {<point name="input.g.page1.l_qty2" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt2
            #add-point:BEFORE FIELD l_amt2
            {<point name="input.b.page1.l_amt2" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt2
            
            #add-point:AFTER FIELD l_amt2
            {<point name="input.a.page1.l_amt2" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_amt2
            #add-point:ON CHANGE l_amt2
            {<point name="input.g.page1.l_amt2" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate2
            #add-point:BEFORE FIELD l_rate2
            {<point name="input.b.page1.l_rate2" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate2
            
            #add-point:AFTER FIELD l_rate2
            {<point name="input.a.page1.l_rate2" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_rate2
            #add-point:ON CHANGE l_rate2
            {<point name="input.g.page1.l_rate2" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle2
            #add-point:BEFORE FIELD l_idle2
            {<point name="input.b.page1.l_idle2" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle2
            
            #add-point:AFTER FIELD l_idle2
            {<point name="input.a.page1.l_idle2" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_idle2
            #add-point:ON CHANGE l_idle2
            {<point name="input.g.page1.l_idle2" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty3
            #add-point:BEFORE FIELD l_qty3
            {<point name="input.b.page1.l_qty3" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty3
            
            #add-point:AFTER FIELD l_qty3
            {<point name="input.a.page1.l_qty3" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_qty3
            #add-point:ON CHANGE l_qty3
            {<point name="input.g.page1.l_qty3" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt3
            #add-point:BEFORE FIELD l_amt3
            {<point name="input.b.page1.l_amt3" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt3
            
            #add-point:AFTER FIELD l_amt3
            {<point name="input.a.page1.l_amt3" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_amt3
            #add-point:ON CHANGE l_amt3
            {<point name="input.g.page1.l_amt3" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate3
            #add-point:BEFORE FIELD l_rate3
            {<point name="input.b.page1.l_rate3" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate3
            
            #add-point:AFTER FIELD l_rate3
            {<point name="input.a.page1.l_rate3" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_rate3
            #add-point:ON CHANGE l_rate3
            {<point name="input.g.page1.l_rate3" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle3
            #add-point:BEFORE FIELD l_idle3
            {<point name="input.b.page1.l_idle3" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle3
            
            #add-point:AFTER FIELD l_idle3
            {<point name="input.a.page1.l_idle3" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_idle3
            #add-point:ON CHANGE l_idle3
            {<point name="input.g.page1.l_idle3" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty4
            #add-point:BEFORE FIELD l_qty4
            {<point name="input.b.page1.l_qty4" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty4
            
            #add-point:AFTER FIELD l_qty4
            {<point name="input.a.page1.l_qty4" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_qty4
            #add-point:ON CHANGE l_qty4
            {<point name="input.g.page1.l_qty4" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt4
            #add-point:BEFORE FIELD l_amt4
            {<point name="input.b.page1.l_amt4" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt4
            
            #add-point:AFTER FIELD l_amt4
            {<point name="input.a.page1.l_amt4" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_amt4
            #add-point:ON CHANGE l_amt4
            {<point name="input.g.page1.l_amt4" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate4
            #add-point:BEFORE FIELD l_rate4
            {<point name="input.b.page1.l_rate4" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate4
            
            #add-point:AFTER FIELD l_rate4
            {<point name="input.a.page1.l_rate4" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_rate4
            #add-point:ON CHANGE l_rate4
            {<point name="input.g.page1.l_rate4" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle4
            #add-point:BEFORE FIELD l_idle4
            {<point name="input.b.page1.l_idle4" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle4
            
            #add-point:AFTER FIELD l_idle4
            {<point name="input.a.page1.l_idle4" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_idle4
            #add-point:ON CHANGE l_idle4
            {<point name="input.g.page1.l_idle4" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty5
            #add-point:BEFORE FIELD l_qty5
            {<point name="input.b.page1.l_qty5" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty5
            
            #add-point:AFTER FIELD l_qty5
            {<point name="input.a.page1.l_qty5" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_qty5
            #add-point:ON CHANGE l_qty5
            {<point name="input.g.page1.l_qty5" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt5
            #add-point:BEFORE FIELD l_amt5
            {<point name="input.b.page1.l_amt5" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt5
            
            #add-point:AFTER FIELD l_amt5
            {<point name="input.a.page1.l_amt5" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_amt5
            #add-point:ON CHANGE l_amt5
            {<point name="input.g.page1.l_amt5" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate5
            #add-point:BEFORE FIELD l_rate5
            {<point name="input.b.page1.l_rate5" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate5
            
            #add-point:AFTER FIELD l_rate5
            {<point name="input.a.page1.l_rate5" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_rate5
            #add-point:ON CHANGE l_rate5
            {<point name="input.g.page1.l_rate5" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle5
            #add-point:BEFORE FIELD l_idle5
            {<point name="input.b.page1.l_idle5" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle5
            
            #add-point:AFTER FIELD l_idle5
            {<point name="input.a.page1.l_idle5" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_idle5
            #add-point:ON CHANGE l_idle5
            {<point name="input.g.page1.l_idle5" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty6
            #add-point:BEFORE FIELD l_qty6
            {<point name="input.b.page1.l_qty6" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty6
            
            #add-point:AFTER FIELD l_qty6
            {<point name="input.a.page1.l_qty6" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_qty6
            #add-point:ON CHANGE l_qty6
            {<point name="input.g.page1.l_qty6" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt6
            #add-point:BEFORE FIELD l_amt6
            {<point name="input.b.page1.l_amt6" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt6
            
            #add-point:AFTER FIELD l_amt6
            {<point name="input.a.page1.l_amt6" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_amt6
            #add-point:ON CHANGE l_amt6
            {<point name="input.g.page1.l_amt6" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate6
            #add-point:BEFORE FIELD l_rate6
            {<point name="input.b.page1.l_rate6" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate6
            
            #add-point:AFTER FIELD l_rate6
            {<point name="input.a.page1.l_rate6" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_rate6
            #add-point:ON CHANGE l_rate6
            {<point name="input.g.page1.l_rate6" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle6
            #add-point:BEFORE FIELD l_idle6
            {<point name="input.b.page1.l_idle6" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle6
            
            #add-point:AFTER FIELD l_idle6
            {<point name="input.a.page1.l_idle6" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_idle6
            #add-point:ON CHANGE l_idle6
            {<point name="input.g.page1.l_idle6" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty7
            #add-point:BEFORE FIELD l_qty7
            {<point name="input.b.page1.l_qty7" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty7
            
            #add-point:AFTER FIELD l_qty7
            {<point name="input.a.page1.l_qty7" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_qty7
            #add-point:ON CHANGE l_qty7
            {<point name="input.g.page1.l_qty7" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt7
            #add-point:BEFORE FIELD l_amt7
            {<point name="input.b.page1.l_amt7" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt7
            
            #add-point:AFTER FIELD l_amt7
            {<point name="input.a.page1.l_amt7" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_amt7
            #add-point:ON CHANGE l_amt7
            {<point name="input.g.page1.l_amt7" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate7
            #add-point:BEFORE FIELD l_rate7
            {<point name="input.b.page1.l_rate7" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate7
            
            #add-point:AFTER FIELD l_rate7
            {<point name="input.a.page1.l_rate7" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_rate7
            #add-point:ON CHANGE l_rate7
            {<point name="input.g.page1.l_rate7" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle7
            #add-point:BEFORE FIELD l_idle7
            {<point name="input.b.page1.l_idle7" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle7
            
            #add-point:AFTER FIELD l_idle7
            {<point name="input.a.page1.l_idle7" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_idle7
            #add-point:ON CHANGE l_idle7
            {<point name="input.g.page1.l_idle7" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty8
            #add-point:BEFORE FIELD l_qty8
            {<point name="input.b.page1.l_qty8" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty8
            
            #add-point:AFTER FIELD l_qty8
            {<point name="input.a.page1.l_qty8" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_qty8
            #add-point:ON CHANGE l_qty8
            {<point name="input.g.page1.l_qty8" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt8
            #add-point:BEFORE FIELD l_amt8
            {<point name="input.b.page1.l_amt8" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt8
            
            #add-point:AFTER FIELD l_amt8
            {<point name="input.a.page1.l_amt8" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_amt8
            #add-point:ON CHANGE l_amt8
            {<point name="input.g.page1.l_amt8" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate8
            #add-point:BEFORE FIELD l_rate8
            {<point name="input.b.page1.l_rate8" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate8
            
            #add-point:AFTER FIELD l_rate8
            {<point name="input.a.page1.l_rate8" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_rate8
            #add-point:ON CHANGE l_rate8
            {<point name="input.g.page1.l_rate8" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle8
            #add-point:BEFORE FIELD l_idle8
            {<point name="input.b.page1.l_idle8" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle8
            
            #add-point:AFTER FIELD l_idle8
            {<point name="input.a.page1.l_idle8" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_idle8
            #add-point:ON CHANGE l_idle8
            {<point name="input.g.page1.l_idle8" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty9
            #add-point:BEFORE FIELD l_qty9
            {<point name="input.b.page1.l_qty9" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty9
            
            #add-point:AFTER FIELD l_qty9
            {<point name="input.a.page1.l_qty9" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_qty9
            #add-point:ON CHANGE l_qty9
            {<point name="input.g.page1.l_qty9" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt9
            #add-point:BEFORE FIELD l_amt9
            {<point name="input.b.page1.l_amt9" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt9
            
            #add-point:AFTER FIELD l_amt9
            {<point name="input.a.page1.l_amt9" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_amt9
            #add-point:ON CHANGE l_amt9
            {<point name="input.g.page1.l_amt9" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate9
            #add-point:BEFORE FIELD l_rate9
            {<point name="input.b.page1.l_rate9" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate9
            
            #add-point:AFTER FIELD l_rate9
            {<point name="input.a.page1.l_rate9" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_rate9
            #add-point:ON CHANGE l_rate9
            {<point name="input.g.page1.l_rate9" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle9
            #add-point:BEFORE FIELD l_idle9
            {<point name="input.b.page1.l_idle9" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle9
            
            #add-point:AFTER FIELD l_idle9
            {<point name="input.a.page1.l_idle9" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_idle9
            #add-point:ON CHANGE l_idle9
            {<point name="input.g.page1.l_idle9" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_qty10
            #add-point:BEFORE FIELD l_qty10
            {<point name="input.b.page1.l_qty10" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_qty10
            
            #add-point:AFTER FIELD l_qty10
            {<point name="input.a.page1.l_qty10" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_qty10
            #add-point:ON CHANGE l_qty10
            {<point name="input.g.page1.l_qty10" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_amt10
            #add-point:BEFORE FIELD l_amt10
            {<point name="input.b.page1.l_amt10" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_amt10
            
            #add-point:AFTER FIELD l_amt10
            {<point name="input.a.page1.l_amt10" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_amt10
            #add-point:ON CHANGE l_amt10
            {<point name="input.g.page1.l_amt10" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rate10
            #add-point:BEFORE FIELD l_rate10
            {<point name="input.b.page1.l_rate10" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rate10
            
            #add-point:AFTER FIELD l_rate10
            {<point name="input.a.page1.l_rate10" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_rate10
            #add-point:ON CHANGE l_rate10
            {<point name="input.g.page1.l_rate10" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_idle10
            #add-point:BEFORE FIELD l_idle10
            {<point name="input.b.page1.l_idle10" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_idle10
            
            #add-point:AFTER FIELD l_idle10
            {<point name="input.a.page1.l_idle10" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_idle10
            #add-point:ON CHANGE l_idle10
            {<point name="input.g.page1.l_idle10" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.xccd007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd007
            #add-point:ON ACTION controlp INFIELD xccd007
            {<point name="input.c.page1.xccd007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcfl005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfl005
            #add-point:ON ACTION controlp INFIELD xcfl005
            {<point name="input.c.page1.xcfl005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcfl006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfl006
            #add-point:ON ACTION controlp INFIELD xcfl006
            {<point name="input.c.page1.xcfl006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcfl007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfl007
            #add-point:ON ACTION controlp INFIELD xcfl007
            {<point name="input.c.page1.xcfl007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcfl008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfl008
            #add-point:ON ACTION controlp INFIELD xcfl008
            {<point name="input.c.page1.xcfl008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcfl001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfl001
            #add-point:ON ACTION controlp INFIELD xcfl001
            {<point name="input.c.page1.xcfl001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcfb010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfb010
            #add-point:ON ACTION controlp INFIELD xcfb010
            {<point name="input.c.page1.xcfb010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcfl009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfl009
            #add-point:ON ACTION controlp INFIELD xcfl009
            {<point name="input.c.page1.xcfl009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce901
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce901
            #add-point:ON ACTION controlp INFIELD xcce901
            {<point name="input.c.page1.xcce901" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccc280
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccc280
            #add-point:ON ACTION controlp INFIELD xccc280
            {<point name="input.c.page1.xccc280" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_amount
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amount
            #add-point:ON ACTION controlp INFIELD l_amount
            {<point name="input.c.page1.l_amount" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_idle
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle
            #add-point:ON ACTION controlp INFIELD l_idle
            {<point name="input.c.page1.l_idle" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_qty1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty1
            #add-point:ON ACTION controlp INFIELD l_qty1
            {<point name="input.c.page1.l_qty1" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_amt1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt1
            #add-point:ON ACTION controlp INFIELD l_amt1
            {<point name="input.c.page1.l_amt1" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_rate1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate1
            #add-point:ON ACTION controlp INFIELD l_rate1
            {<point name="input.c.page1.l_rate1" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_idle1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle1
            #add-point:ON ACTION controlp INFIELD l_idle1
            {<point name="input.c.page1.l_idle1" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_qty2
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty2
            #add-point:ON ACTION controlp INFIELD l_qty2
            {<point name="input.c.page1.l_qty2" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_amt2
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt2
            #add-point:ON ACTION controlp INFIELD l_amt2
            {<point name="input.c.page1.l_amt2" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_rate2
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate2
            #add-point:ON ACTION controlp INFIELD l_rate2
            {<point name="input.c.page1.l_rate2" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_idle2
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle2
            #add-point:ON ACTION controlp INFIELD l_idle2
            {<point name="input.c.page1.l_idle2" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_qty3
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty3
            #add-point:ON ACTION controlp INFIELD l_qty3
            {<point name="input.c.page1.l_qty3" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_amt3
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt3
            #add-point:ON ACTION controlp INFIELD l_amt3
            {<point name="input.c.page1.l_amt3" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_rate3
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate3
            #add-point:ON ACTION controlp INFIELD l_rate3
            {<point name="input.c.page1.l_rate3" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_idle3
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle3
            #add-point:ON ACTION controlp INFIELD l_idle3
            {<point name="input.c.page1.l_idle3" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_qty4
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty4
            #add-point:ON ACTION controlp INFIELD l_qty4
            {<point name="input.c.page1.l_qty4" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_amt4
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt4
            #add-point:ON ACTION controlp INFIELD l_amt4
            {<point name="input.c.page1.l_amt4" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_rate4
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate4
            #add-point:ON ACTION controlp INFIELD l_rate4
            {<point name="input.c.page1.l_rate4" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_idle4
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle4
            #add-point:ON ACTION controlp INFIELD l_idle4
            {<point name="input.c.page1.l_idle4" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_qty5
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty5
            #add-point:ON ACTION controlp INFIELD l_qty5
            {<point name="input.c.page1.l_qty5" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_amt5
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt5
            #add-point:ON ACTION controlp INFIELD l_amt5
            {<point name="input.c.page1.l_amt5" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_rate5
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate5
            #add-point:ON ACTION controlp INFIELD l_rate5
            {<point name="input.c.page1.l_rate5" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_idle5
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle5
            #add-point:ON ACTION controlp INFIELD l_idle5
            {<point name="input.c.page1.l_idle5" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_qty6
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty6
            #add-point:ON ACTION controlp INFIELD l_qty6
            {<point name="input.c.page1.l_qty6" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_amt6
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt6
            #add-point:ON ACTION controlp INFIELD l_amt6
            {<point name="input.c.page1.l_amt6" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_rate6
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate6
            #add-point:ON ACTION controlp INFIELD l_rate6
            {<point name="input.c.page1.l_rate6" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_idle6
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle6
            #add-point:ON ACTION controlp INFIELD l_idle6
            {<point name="input.c.page1.l_idle6" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_qty7
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty7
            #add-point:ON ACTION controlp INFIELD l_qty7
            {<point name="input.c.page1.l_qty7" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_amt7
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt7
            #add-point:ON ACTION controlp INFIELD l_amt7
            {<point name="input.c.page1.l_amt7" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_rate7
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate7
            #add-point:ON ACTION controlp INFIELD l_rate7
            {<point name="input.c.page1.l_rate7" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_idle7
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle7
            #add-point:ON ACTION controlp INFIELD l_idle7
            {<point name="input.c.page1.l_idle7" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_qty8
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty8
            #add-point:ON ACTION controlp INFIELD l_qty8
            {<point name="input.c.page1.l_qty8" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_amt8
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt8
            #add-point:ON ACTION controlp INFIELD l_amt8
            {<point name="input.c.page1.l_amt8" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_rate8
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate8
            #add-point:ON ACTION controlp INFIELD l_rate8
            {<point name="input.c.page1.l_rate8" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_idle8
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle8
            #add-point:ON ACTION controlp INFIELD l_idle8
            {<point name="input.c.page1.l_idle8" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_qty9
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty9
            #add-point:ON ACTION controlp INFIELD l_qty9
            {<point name="input.c.page1.l_qty9" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_amt9
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt9
            #add-point:ON ACTION controlp INFIELD l_amt9
            {<point name="input.c.page1.l_amt9" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_rate9
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate9
            #add-point:ON ACTION controlp INFIELD l_rate9
            {<point name="input.c.page1.l_rate9" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_idle9
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle9
            #add-point:ON ACTION controlp INFIELD l_idle9
            {<point name="input.c.page1.l_idle9" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_qty10
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_qty10
            #add-point:ON ACTION controlp INFIELD l_qty10
            {<point name="input.c.page1.l_qty10" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_amt10
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_amt10
            #add-point:ON ACTION controlp INFIELD l_amt10
            {<point name="input.c.page1.l_amt10" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_rate10
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rate10
            #add-point:ON ACTION controlp INFIELD l_rate10
            {<point name="input.c.page1.l_rate10" />}
            #END add-point
 
         #Ctrlp:input.c.page1.l_idle10
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_idle10
            #add-point:ON ACTION controlp INFIELD l_idle10
            {<point name="input.c.page1.l_idle10" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_xcfl_d[l_ac].* = g_xcfl_d_t.*
               CLOSE axcq802_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xcfl_d[l_ac].xcfl001 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xcfl_d[l_ac].* = g_xcfl_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
         
               #將遮罩欄位還原
               CALL axcq802_xcfl_t_mask_restore('restore_mask_o')
         
               UPDATE xcfl_t SET (xcflld,xcfl002,xcfl003,xcfl004,xcfl005,xcfl006,xcfl007,xcfl008,xcfl001, 
                   xcfl009) = (g_xcfl_m.xcflld,g_xcfl_m.xcfl002,g_xcfl_m.xcfl003,g_xcfl_m.xcfl004,g_xcfl_d[l_ac].xcfl005, 
                   g_xcfl_d[l_ac].xcfl006,g_xcfl_d[l_ac].xcfl007,g_xcfl_d[l_ac].xcfl008,g_xcfl_d[l_ac].xcfl001, 
                   g_xcfl_d[l_ac].xcfl009)
                WHERE xcflent = g_enterprise AND xcflld = g_xcfl_m.xcflld 
                 AND xcfl002 = g_xcfl_m.xcfl002 
                 AND xcfl003 = g_xcfl_m.xcfl003 
                 AND xcfl004 = g_xcfl_m.xcfl004 
 
                 AND xcfl001 = g_xcfl_d_t.xcfl001 #項次   
                 AND xcfl005 = g_xcfl_d_t.xcfl005  
                 AND xcfl006 = g_xcfl_d_t.xcfl006  
                 AND xcfl007 = g_xcfl_d_t.xcfl007  
                 AND xcfl008 = g_xcfl_d_t.xcfl008  
                 AND xcfl009 = g_xcfl_d_t.xcfl009  
 
                 
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcfl_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "xcfl_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcfl_m.xcflld
               LET gs_keys_bak[1] = g_xcflld_t
               LET gs_keys[2] = g_xcfl_m.xcfl002
               LET gs_keys_bak[2] = g_xcfl002_t
               LET gs_keys[3] = g_xcfl_m.xcfl003
               LET gs_keys_bak[3] = g_xcfl003_t
               LET gs_keys[4] = g_xcfl_m.xcfl004
               LET gs_keys_bak[4] = g_xcfl004_t
               LET gs_keys[5] = g_xcfl_d[g_detail_idx].xcfl001
               LET gs_keys_bak[5] = g_xcfl_d_t.xcfl001
               LET gs_keys[6] = g_xcfl_d[g_detail_idx].xcfl005
               LET gs_keys_bak[6] = g_xcfl_d_t.xcfl005
               LET gs_keys[7] = g_xcfl_d[g_detail_idx].xcfl006
               LET gs_keys_bak[7] = g_xcfl_d_t.xcfl006
               LET gs_keys[8] = g_xcfl_d[g_detail_idx].xcfl007
               LET gs_keys_bak[8] = g_xcfl_d_t.xcfl007
               LET gs_keys[9] = g_xcfl_d[g_detail_idx].xcfl008
               LET gs_keys_bak[9] = g_xcfl_d_t.xcfl008
               LET gs_keys[10] = g_xcfl_d[g_detail_idx].xcfl009
               LET gs_keys_bak[10] = g_xcfl_d_t.xcfl009
               CALL axcq802_update_b('xcfl_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     #修改歷程記錄(單身修改)
                     LET g_log1 = util.JSON.stringify(g_xcfl_m),util.JSON.stringify(g_xcfl_d_t)
                     LET g_log2 = util.JSON.stringify(g_xcfl_m),util.JSON.stringify(g_xcfl_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axcq802_xcfl_t_mask_restore('restore_mask_n')
               
               #若Key欄位有變動
               LET ls_keys[01] = g_xcfl_m.xcflld
               LET ls_keys[ls_keys.getLength()+1] = g_xcfl_m.xcfl002
               LET ls_keys[ls_keys.getLength()+1] = g_xcfl_m.xcfl003
               LET ls_keys[ls_keys.getLength()+1] = g_xcfl_m.xcfl004
 
               LET ls_keys[ls_keys.getLength()+1] = g_xcfl_d_t.xcfl001
               LET ls_keys[ls_keys.getLength()+1] = g_xcfl_d_t.xcfl005
               LET ls_keys[ls_keys.getLength()+1] = g_xcfl_d_t.xcfl006
               LET ls_keys[ls_keys.getLength()+1] = g_xcfl_d_t.xcfl007
               LET ls_keys[ls_keys.getLength()+1] = g_xcfl_d_t.xcfl008
               LET ls_keys[ls_keys.getLength()+1] = g_xcfl_d_t.xcfl009
 
               CALL axcq802_key_update_b(ls_keys)
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
            END IF
 
         AFTER ROW
            #add-point:input段after row
            {<point name="input.body.after_row"/>}
            #end add-point  
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xcfl_d[l_ac].* = g_xcfl_d_t.*
               END IF
               CLOSE axcq802_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
 
            CLOSE axcq802_bcl
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xcfl_d.getLength() = 0 THEN
               NEXT FIELD xcfl001
            END IF
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xcfl_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xcfl_d.getLength()+1
            
      END INPUT
 
 
      
 
      
 
      
 
    
      #add-point:input段more_input
      {<point name="input.more_inputarray"/>}
      #end add-point    
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()    
         #add-point:input段before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point 
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xcflld
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xccd007
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #將畫面指標同步到當下指定的位置上
   CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
 
 
   
   #add-point:input段after_input
   {<point name="input.after_input"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.input.head" ver="7" status="" src="s" readonly="">
    <![CDATA[   
      #單頭段
      INPUT BY NAME g_xcfl_m.xcflcomp,g_xcfl_m.xcfl003,g_xcfl_m.xcfl004,g_xcfl_m.xccc001,g_xcfl_m.xcflld, 
          g_xcfl_m.xcfl002,g_xcfl_m.xcfa004 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前
            {<point name="input.head.b_input"/>}
            #end add-point
          
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcflcomp
            
            #add-point:AFTER FIELD xcflcomp
            {<point name="input.a.xcflcomp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcflcomp
            #add-point:BEFORE FIELD xcflcomp
            {<point name="input.b.xcflcomp" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcflcomp
            #add-point:ON CHANGE xcflcomp
            {<point name="input.g.xcflcomp" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfl003
            #add-point:BEFORE FIELD xcfl003
            {<point name="input.b.xcfl003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfl003
            
            #add-point:AFTER FIELD xcfl003
            {<point name="input.a.xcfl003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcfl003
            #add-point:ON CHANGE xcfl003
            {<point name="input.g.xcfl003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfl004
            #add-point:BEFORE FIELD xcfl004
            {<point name="input.b.xcfl004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfl004
            
            #add-point:AFTER FIELD xcfl004
            {<point name="input.a.xcfl004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcfl004
            #add-point:ON CHANGE xcfl004
            {<point name="input.g.xcfl004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccc001
            
            #add-point:AFTER FIELD xccc001
            {<point name="input.a.xccc001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccc001
            #add-point:BEFORE FIELD xccc001
            {<point name="input.b.xccc001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccc001
            #add-point:ON CHANGE xccc001
            {<point name="input.g.xccc001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcflld
            
            #add-point:AFTER FIELD xcflld
            {<point name="input.a.xcflld" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcflld
            #add-point:BEFORE FIELD xcflld
            {<point name="input.b.xcflld" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcflld
            #add-point:ON CHANGE xcflld
            {<point name="input.g.xcflld" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfl002
            
            #add-point:AFTER FIELD xcfl002
            {<point name="input.a.xcfl002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfl002
            #add-point:BEFORE FIELD xcfl002
            {<point name="input.b.xcfl002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcfl002
            #add-point:ON CHANGE xcfl002
            {<point name="input.g.xcfl002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcfa004
            #add-point:BEFORE FIELD xcfa004
            {<point name="input.b.xcfa004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcfa004
            
            #add-point:AFTER FIELD xcfa004
            {<point name="input.a.xcfa004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcfa004
            #add-point:ON CHANGE xcfa004
            {<point name="input.g.xcfa004" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.xcflcomp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcflcomp
            #add-point:ON ACTION controlp INFIELD xcflcomp
            {<point name="input.c.xcflcomp" />}
            #END add-point
 
         #Ctrlp:input.c.xcfl003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfl003
            #add-point:ON ACTION controlp INFIELD xcfl003
            {<point name="input.c.xcfl003" />}
            #END add-point
 
         #Ctrlp:input.c.xcfl004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfl004
            #add-point:ON ACTION controlp INFIELD xcfl004
            {<point name="input.c.xcfl004" />}
            #END add-point
 
         #Ctrlp:input.c.xccc001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccc001
            #add-point:ON ACTION controlp INFIELD xccc001
            {<point name="input.c.xccc001" />}
            #END add-point
 
         #Ctrlp:input.c.xcflld
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcflld
            #add-point:ON ACTION controlp INFIELD xcflld
            {<point name="input.c.xcflld" />}
            #END add-point
 
         #Ctrlp:input.c.xcfl002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfl002
            #add-point:ON ACTION controlp INFIELD xcfl002
            {<point name="input.c.xcfl002" />}
            #END add-point
 
         #Ctrlp:input.c.xcfa004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcfa004
            #add-point:ON ACTION controlp INFIELD xcfa004
            {<point name="input.c.xcfa004" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
            
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xcfl_m.xcflld             
                            ,g_xcfl_m.xcfl002   
                            ,g_xcfl_m.xcfl003   
                            ,g_xcfl_m.xcfl004   
 
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
            
               #將遮罩欄位還原
               CALL axcq802_xcfl_t_mask_restore('restore_mask_o')
            
               UPDATE xcfl_t SET (xcflcomp,xcfl003,xcfl004,xcflld,xcfl002) = (g_xcfl_m.xcflcomp,g_xcfl_m.xcfl003, 
                   g_xcfl_m.xcfl004,g_xcfl_m.xcflld,g_xcfl_m.xcfl002)
                WHERE xcflent = g_enterprise AND xcflld = g_xcflld_t
                  AND xcfl002 = g_xcfl002_t
                  AND xcfl003 = g_xcfl003_t
                  AND xcfl004 = g_xcfl004_t
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcfl_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcfl_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcfl_m.xcflld
               LET gs_keys_bak[1] = g_xcflld_t
               LET gs_keys[2] = g_xcfl_m.xcfl002
               LET gs_keys_bak[2] = g_xcfl002_t
               LET gs_keys[3] = g_xcfl_m.xcfl003
               LET gs_keys_bak[3] = g_xcfl003_t
               LET gs_keys[4] = g_xcfl_m.xcfl004
               LET gs_keys_bak[4] = g_xcfl004_t
               LET gs_keys[5] = g_xcfl_d[g_detail_idx].xcfl001
               LET gs_keys_bak[5] = g_xcfl_d_t.xcfl001
               LET gs_keys[6] = g_xcfl_d[g_detail_idx].xcfl005
               LET gs_keys_bak[6] = g_xcfl_d_t.xcfl005
               LET gs_keys[7] = g_xcfl_d[g_detail_idx].xcfl006
               LET gs_keys_bak[7] = g_xcfl_d_t.xcfl006
               LET gs_keys[8] = g_xcfl_d[g_detail_idx].xcfl007
               LET gs_keys_bak[8] = g_xcfl_d_t.xcfl007
               LET gs_keys[9] = g_xcfl_d[g_detail_idx].xcfl008
               LET gs_keys_bak[9] = g_xcfl_d_t.xcfl008
               LET gs_keys[10] = g_xcfl_d[g_detail_idx].xcfl009
               LET gs_keys_bak[10] = g_xcfl_d_t.xcfl009
               CALL axcq802_update_b('xcfl_t',gs_keys,gs_keys_bak,"'1'")
                     
 
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
    
                     #頭先不紀錄
                     #LET g_log1 = util.JSON.stringify(g_xcfl_m_t)
                     #LET g_log2 = util.JSON.stringify(g_xcfl_m)
                     #IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                     #   CALL s_transaction_end('N','0')
                     #ELSE
                        CALL s_transaction_end('Y','0')
                     #END IF
               END CASE
            
               #將遮罩欄位進行遮蔽
               CALL axcq802_xcfl_t_mask_restore('restore_mask_n')
            
            ELSE    
               #add-point:單頭新增
               {<point name="input.head.a_insert"/>}
               #end add-point
               
               #多語言處理
               
                         
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axcq802_detail_reproduce()
               END IF
            END IF
 
           LET g_xcflld_t = g_xcfl_m.xcflld
           LET g_xcfl002_t = g_xcfl_m.xcfl002
           LET g_xcfl003_t = g_xcfl_m.xcfl003
           LET g_xcfl004_t = g_xcfl_m.xcfl004
 
           
           IF g_xcfl_d.getLength() = 0 THEN
              NEXT FIELD xcfl001
           END IF
 
      END INPUT
]]>
  </section>
  <section id="axcq802.insert" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION axcq802_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point
   #add-point:insert段define
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_xcfl_d.clear()
 
 
   INITIALIZE g_xcfl_m.* LIKE xcfl_t.*             #DEFAULT 設定
   LET g_xcflld_t = NULL
   LET g_xcfl002_t = NULL
   LET g_xcfl003_t = NULL
   LET g_xcfl004_t = NULL
 
   LET g_master_insert = FALSE
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
            LET g_xcfl_m.xcfa004 = "1"
 
     
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL axcq802_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         LET INT_FLAG = 0
         LET g_xcfl_m.* = g_xcfl_m_t.*
         CALL axcq802_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xcfl_m.* TO NULL
         INITIALIZE g_xcfl_d TO NULL
 
         CALL axcq802_show()
         RETURN
      END IF
    
      #CALL g_xcfl_d.clear()
 
      
      #add-point:單頭輸入後2
      {<point name="insert.after_insert2"/>}
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq802_set_act_visible()
   CALL axcq802_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_xcflld_t = g_xcfl_m.xcflld
   LET g_xcfl002_t = g_xcfl_m.xcfl002
   LET g_xcfl003_t = g_xcfl_m.xcfl003
   LET g_xcfl004_t = g_xcfl_m.xcfl004
 
   
   #組合新增資料的條件
   LET g_add_browse = " xcflent = '" ||g_enterprise|| "' AND",
                      " xcflld = '", g_xcfl_m.xcflld, "' "
                      ," AND xcfl002 = '", g_xcfl_m.xcfl002, "' "
                      ," AND xcfl003 = '", g_xcfl_m.xcfl003, "' "
                      ," AND xcfl004 = '", g_xcfl_m.xcfl004, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axcq802_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CALL axcq802_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axcq802_master_referesh USING g_xcfl_m.xcflld,g_xcfl_m.xcfl002,g_xcfl_m.xcfl003,g_xcfl_m.xcfl004 INTO g_xcfl_m.xcflcomp, 
       g_xcfl_m.xcfl003,g_xcfl_m.xcfl004,g_xcfl_m.xcflld,g_xcfl_m.xcfl002,g_xcfl_m.xcflcomp_desc,g_xcfl_m.xcflld_desc, 
       g_xcfl_m.xcfl002_desc
   
   #遮罩相關處理
   LET g_xcfl_m_mask_o.* =  g_xcfl_m.*
   CALL axcq802_xcfl_t_mask()
   LET g_xcfl_m_mask_n.* =  g_xcfl_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xcfl_m.xcflcomp,g_xcfl_m.xcflcomp_desc,g_xcfl_m.xcfl003,g_xcfl_m.xcfl004,g_xcfl_m.xccc001, 
       g_xcfl_m.xccc001_desc,g_xcfl_m.xcflld,g_xcfl_m.xcflld_desc,g_xcfl_m.xcfl002,g_xcfl_m.xcfl002_desc, 
       g_xcfl_m.xcfa004
   
   #功能已完成,通報訊息中心
   CALL axcq802_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.insert_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION axcq802_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.key_update_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正其他單身key欄位
PRIVATE FUNCTION axcq802_key_update_b(ps_keys_bak)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
   #判斷key是否有改變, 若無改變則返回
   IF g_xcfl_d[l_ac].xcfl001 = g_xcfl_d_t.xcfl001 
      AND g_xcfl_d[l_ac].xcfl005 = g_xcfl_d_t.xcfl005 
      AND g_xcfl_d[l_ac].xcfl006 = g_xcfl_d_t.xcfl006 
      AND g_xcfl_d[l_ac].xcfl007 = g_xcfl_d_t.xcfl007 
      AND g_xcfl_d[l_ac].xcfl008 = g_xcfl_d_t.xcfl008 
      AND g_xcfl_d[l_ac].xcfl009 = g_xcfl_d_t.xcfl009 
 
      THEN
      RETURN
   END IF
    
 
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.lock_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION axcq802_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point
   
   #先刷新資料
   #CALL axcq802_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="axcq802.main" ver="5" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT xcflcomp,'',xcfl003,xcfl004,'','',xcflld,'',xcfl002,'',''", 
                      " FROM xcfl_t",
                      " WHERE xcflent= ? AND xcflld=? AND xcfl002=? AND xcfl003=? AND xcfl004=? FOR  
                          UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axcq802_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.xcflcomp,t0.xcfl003,t0.xcfl004,t0.xcflld,t0.xcfl002,t1.ooefl003 ,t2.glaal003 , 
       t3.xcatl003",
               " FROM xcfl_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.xcflcomp AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN glaal_t t2 ON t2.glaalent='"||g_enterprise||"' AND t2.glaal001=t0.xcflld AND t2.glaal002='"||g_dlang||"' ",
               " LEFT JOIN xcatl_t t3 ON t3.xcatlent='"||g_enterprise||"' AND t3.xcatl001=t0.xcfl002 AND t3.xcatl002='"||g_dlang||"' ",
 
               " WHERE t0.xcflent = '" ||g_enterprise|| "' AND t0.xcflld = ? AND t0.xcfl002 = ? AND t0.xcfl003 = ? AND t0.xcfl004 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axcq802_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axcq802 WITH FORM cl_ap_formpath("axc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axcq802_init()   
 
      #進入選單 Menu (="N")
      CALL axcq802_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axcq802
      
   END IF 
   
   CLOSE axcq802_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="axcq802.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/axc/axcq802_mask.4gl"
]]>
  </section>
  <section id="axcq802.modify" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION axcq802_modify()
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point  
   #add-point:modify段define
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_xcfl_m.xcflld IS NULL
   OR g_xcfl_m.xcfl002 IS NULL
   OR g_xcfl_m.xcfl003 IS NULL
   OR g_xcfl_m.xcfl004 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
   LET g_xcflld_t = g_xcfl_m.xcflld
   LET g_xcfl002_t = g_xcfl_m.xcfl002
   LET g_xcfl003_t = g_xcfl_m.xcfl003
   LET g_xcfl004_t = g_xcfl_m.xcfl004
 
   CALL s_transaction_begin()
   
   OPEN axcq802_cl USING g_enterprise,g_xcfl_m.xcflld,g_xcfl_m.xcfl002,g_xcfl_m.xcfl003,g_xcfl_m.xcfl004
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axcq802_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE axcq802_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axcq802_master_referesh USING g_xcfl_m.xcflld,g_xcfl_m.xcfl002,g_xcfl_m.xcfl003,g_xcfl_m.xcfl004 INTO g_xcfl_m.xcflcomp, 
       g_xcfl_m.xcfl003,g_xcfl_m.xcfl004,g_xcfl_m.xcflld,g_xcfl_m.xcfl002,g_xcfl_m.xcflcomp_desc,g_xcfl_m.xcflld_desc, 
       g_xcfl_m.xcfl002_desc
   
   #遮罩相關處理
   LET g_xcfl_m_mask_o.* =  g_xcfl_m.*
   CALL axcq802_xcfl_t_mask()
   LET g_xcfl_m_mask_n.* =  g_xcfl_m.*
   
   CALL s_transaction_end('Y','0')
 
   CALL axcq802_show()
   WHILE TRUE
      LET g_xcflld_t = g_xcfl_m.xcflld
      LET g_xcfl002_t = g_xcfl_m.xcfl002
      LET g_xcfl003_t = g_xcfl_m.xcfl003
      LET g_xcfl004_t = g_xcfl_m.xcfl004
 
 
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL axcq802_input("u")     #欄位更改
      
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xcfl_m.* = g_xcfl_m_t.*
         CALL axcq802_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更(更新單身table的key欄位值)
      IF g_xcfl_m.xcflld != g_xcflld_t 
      OR g_xcfl_m.xcfl002 != g_xcfl002_t 
      OR g_xcfl_m.xcfl003 != g_xcfl003_t 
      OR g_xcfl_m.xcfl004 != g_xcfl004_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前
         {<point name="modify.b_key_update" mark="Y"/>}
         #end add-point
         
         #add-point:單頭(偽)修改中
         {<point name="modify.m_key_update"/>}
         #end add-point
         
 
         
         #add-point:單頭(偽)修改後
         {<point name="modify.a_key_update"/>}
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq802_set_act_visible()
   CALL axcq802_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xcflent = '" ||g_enterprise|| "' AND",
                      " xcflld = '", g_xcfl_m.xcflld, "' "
                      ," AND xcfl002 = '", g_xcfl_m.xcfl002, "' "
                      ," AND xcfl003 = '", g_xcfl_m.xcfl003, "' "
                      ," AND xcfl004 = '", g_xcfl_m.xcfl004, "' "
 
   #填到對應位置
   CALL axcq802_browser_fill("")
 
   CALL axcq802_idx_chk()
 
   CLOSE axcq802_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axcq802_msgcentre_notify('modify')
   
END FUNCTION   
]]>
  </section>
  <section id="axcq802.modify_detail_chk" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION axcq802_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define" edit="s"/>}
   #end add-point
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define_customerization" edit="c"/>}
   #end add-point
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "xccd007"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.msgcentre_notify" ver="2" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:3)
PRIVATE FUNCTION axcq802_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL axcq802_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xcfl_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="axcq802.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="axcq802.query" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axcq802_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point
   #add-point:query段define
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
 
   #add-point:query開始前
   {<point name="query.befroe_query"/>}
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xcfl_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axcq802_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL axcq802_browser_fill(g_wc)
      CALL axcq802_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL axcq802_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL axcq802_fetch("F") 
   END IF
   
   CALL axcq802_idx_chk()
   
   LET g_wc_filter = ""
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.ref_show" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 帶出reference資料
PRIVATE FUNCTION axcq802_ref_show()
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define
   {<point name="ref_show.define" edit="s"/>}
   #end add-point
   #add-point:ref_show段define
   {<point name="ref_show.define_customerization" edit="c"/>}
   #end add-point 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference
   {<point name="ref_show.head.reference"/>}
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xcfl_d.getLength()
      #add-point:ref_show段d_reference
      {<point name="ref_show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
   #add-point:ref_show段自訂
   {<point name="ref_show.other_reference"/>}
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION
]]>
  </section>
  <section id="axcq802.reproduce" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION axcq802_reproduce()
   DEFINE l_newno     LIKE xcfl_t.xcflld 
   DEFINE l_oldno     LIKE xcfl_t.xcflld 
   DEFINE l_newno02     LIKE xcfl_t.xcfl002 
   DEFINE l_oldno02     LIKE xcfl_t.xcfl002 
   DEFINE l_newno03     LIKE xcfl_t.xcfl003 
   DEFINE l_oldno03     LIKE xcfl_t.xcfl003 
   DEFINE l_newno04     LIKE xcfl_t.xcfl004 
   DEFINE l_oldno04     LIKE xcfl_t.xcfl004 
 
   DEFINE l_master    RECORD LIKE xcfl_t.*
   DEFINE l_detail    RECORD LIKE xcfl_t.*
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point
   #add-point:reproduce段define
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_xcfl_m.xcflld IS NULL
      OR g_xcfl_m.xcfl002 IS NULL
      OR g_xcfl_m.xcfl003 IS NULL
      OR g_xcfl_m.xcfl004 IS NULL
 
      THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_xcflld_t = g_xcfl_m.xcflld
   LET g_xcfl002_t = g_xcfl_m.xcfl002
   LET g_xcfl003_t = g_xcfl_m.xcfl003
   LET g_xcfl004_t = g_xcfl_m.xcfl004
 
   
   LET g_xcfl_m.xcflld = ""
   LET g_xcfl_m.xcfl002 = ""
   LET g_xcfl_m.xcfl003 = ""
   LET g_xcfl_m.xcfl004 = ""
 
   LET g_master_insert = FALSE
   CALL axcq802_set_entry('a')
   CALL axcq802_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #清空key欄位的desc
      LET g_xcfl_m.xcflld_desc = ''
   DISPLAY BY NAME g_xcfl_m.xcflld_desc
   LET g_xcfl_m.xcfl002_desc = ''
   DISPLAY BY NAME g_xcfl_m.xcfl002_desc
 
   
   CALL axcq802_input("r")
    
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      INITIALIZE g_xcfl_m.* TO NULL
      INITIALIZE g_xcfl_d TO NULL
 
      CALL axcq802_show()
      LET INT_FLAG = 0
      RETURN 
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq802_set_act_visible()
   CALL axcq802_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_xcflld_t = g_xcfl_m.xcflld
   LET g_xcfl002_t = g_xcfl_m.xcfl002
   LET g_xcfl003_t = g_xcfl_m.xcfl003
   LET g_xcfl004_t = g_xcfl_m.xcfl004
 
   
   #組合新增資料的條件
   LET g_add_browse = " xcflent = '" ||g_enterprise|| "' AND",
                      " xcflld = '", g_xcfl_m.xcflld, "' "
                      ," AND xcfl002 = '", g_xcfl_m.xcfl002, "' "
                      ," AND xcfl003 = '", g_xcfl_m.xcfl003, "' "
                      ," AND xcfl004 = '", g_xcfl_m.xcfl004, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axcq802_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   LET g_curr_diag = ui.DIALOG.getCurrent()
   CALL axcq802_idx_chk()
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   #功能已完成,通報訊息中心
   CALL axcq802_msgcentre_notify('reproduce')
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.set_act_no_visible" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION axcq802_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="axcq802.set_act_no_visible_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION axcq802_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="axcq802.set_act_visible" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION axcq802_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="axcq802.set_act_visible_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION axcq802_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="axcq802.set_entry" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION axcq802_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point 
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xcflld,xcfl002,xcfl003,xcfl004",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="axcq802.set_entry_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION axcq802_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point 
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.set_no_entry" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION axcq802_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xcflld,xcfl002,xcfl003,xcfl004",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="axcq802.set_no_entry_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION axcq802_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b段"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.set_pk_array" ver="4" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION axcq802_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xcfl_m.xcflld
   LET g_pk_array[1].column = 'xcflld'
   LET g_pk_array[2].values = g_xcfl_m.xcfl002
   LET g_pk_array[2].column = 'xcfl002'
   LET g_pk_array[3].values = g_xcfl_m.xcfl003
   LET g_pk_array[3].column = 'xcfl003'
   LET g_pk_array[4].values = g_xcfl_m.xcfl004
   LET g_pk_array[4].column = 'xcfl004'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="axcq802.show" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axcq802_show()
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point
   #add-point:show段define
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL axcq802_b_fill(g_wc2) #第一階單身填充
      CALL axcq802_b_fill2('0')  #第二階單身填充
   END IF
   
   
 
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL axcq802_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   DISPLAY BY NAME g_xcfl_m.xcflcomp,g_xcfl_m.xcflcomp_desc,g_xcfl_m.xcfl003,g_xcfl_m.xcfl004,g_xcfl_m.xccc001, 
       g_xcfl_m.xccc001_desc,g_xcfl_m.xcflld,g_xcfl_m.xcflld_desc,g_xcfl_m.xcfl002,g_xcfl_m.xcfl002_desc, 
       g_xcfl_m.xcfa004
 
   CALL axcq802_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point   
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.state_change" ver="1" status="" src="s" readonly="">
    <![CDATA[    
]]>
  </section>
  <section id="axcq802.ui_browser_refresh" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axcq802_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point 
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xcflld = g_xcfl_m.xcflld 
         AND g_browser[l_i].b_xcfl002 = g_xcfl_m.xcfl002 
         AND g_browser[l_i].b_xcfl003 = g_xcfl_m.xcfl003 
         AND g_browser[l_i].b_xcfl004 = g_xcfl_m.xcfl004 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.ui_detailshow" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION axcq802_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
      #add-point:ui_detailshow段more
      {<point name="ui_detailshow.more"/>}
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.ui_dialog" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION axcq802_ui_dialog()
   DEFINE la_param  RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE li_idx    LIKE type_t.num10
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point  
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
      
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xcfl_m.* TO NULL
         CALL g_xcfl_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axcq802_init()
      END IF
 
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_xcfl_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               #顯示單身筆數
               CALL axcq802_idx_chk()
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               CALL axcq802_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
    
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         
         BEFORE DIALOG
            #先填充browser資料
            CALL axcq802_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axcq802_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axcq802_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         
    
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axcq802_fetch('F')
            LET g_current_row = g_current_idx         
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq802_idx_chk()
          
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axcq802_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq802_idx_chk()
          
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axcq802_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq802_idx_chk()
        
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axcq802_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq802_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axcq802_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq802_idx_chk()
            
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xcfl_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xcfl001
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axcq802_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axcq802_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLEAR FORM
               ELSE
                  CALL axcq802_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axcq802_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo
               {<point name="menu.datainfo" />}
               #END add-point
               
            END IF
 
 
 
         
         
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL axcq802_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axcq802_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axcq802_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
         CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.ui_headershow" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION axcq802_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point  
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_xcfl_m.xcflld = g_browser[g_current_idx].b_xcflld   
   LET g_xcfl_m.xcfl002 = g_browser[g_current_idx].b_xcfl002   
   LET g_xcfl_m.xcfl003 = g_browser[g_current_idx].b_xcfl003   
   LET g_xcfl_m.xcfl004 = g_browser[g_current_idx].b_xcfl004   
 
   EXECUTE axcq802_master_referesh USING g_xcfl_m.xcflld,g_xcfl_m.xcfl002,g_xcfl_m.xcfl003,g_xcfl_m.xcfl004 INTO g_xcfl_m.xcflcomp, 
       g_xcfl_m.xcfl003,g_xcfl_m.xcfl004,g_xcfl_m.xcflld,g_xcfl_m.xcfl002,g_xcfl_m.xcflcomp_desc,g_xcfl_m.xcflld_desc, 
       g_xcfl_m.xcfl002_desc
   CALL axcq802_show()
   
END FUNCTION
]]>
  </section>
  <section id="axcq802.unlock_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axcq802_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point
   
 
 
END FUNCTION
]]>
  </section>
  <section id="axcq802.update_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION axcq802_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point     
   #add-point:update_b段define
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point 
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
</add_points>
