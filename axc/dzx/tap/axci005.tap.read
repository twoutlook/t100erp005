<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="axci005" std_prog="axci005" erpver="1.0" module="AXC" ver="1" env="s" zone="t10tst" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="construct.c.page1.xcae004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "221"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcae004  #顯示到畫面上

            NEXT FIELD xcae004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.xcae005" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ecaa001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcae005  #顯示到畫面上

            NEXT FIELD xcae005                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.xcaecrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcaecrtdp  #顯示到畫面上

            NEXT FIELD xcaecrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.xcaecrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcaecrtid  #顯示到畫面上

            NEXT FIELD xcaecrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.xcaemodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcaemodid  #顯示到畫面上

            NEXT FIELD xcaemodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.xcaeowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcaeowndp  #顯示到畫面上

            NEXT FIELD xcaeowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.xcaeownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcaeownid  #顯示到畫面上

            NEXT FIELD xcaeownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xcae001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_xcae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcae001  #顯示到畫面上

            NEXT FIELD xcae001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xcae002" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
#            IF NOT cl_null(g_xcae_m.xcaesite) THEN 
#               LET g_xcaesite = g_xcae_m.xcaesite
#            ELSE
#               LET g_xcaesite = 'ALL'
#            END IF 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " imaa004 = 'A'"
            CALL q_imaa001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcae002  #顯示到畫面上
            LET g_qryparam.where = NULL
            NEXT FIELD xcae002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xcaesite" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " (ooea003 = 'Y' OR ooea004 = 'Y' OR ooea005 = 'Y') "
            CALL q_ooea001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcaesite  #顯示到畫面上
            LET g_qryparam.where = NULL
            NEXT FIELD xcaesite                     #返回原欄位

]]>
  </point>
  <point name="input.a.page1.xcaeseq" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcae_m.xcae001) AND NOT cl_null(g_xcae_m.xcae002) AND NOT cl_null(g_xcae_d[l_ac].xcaeseq) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_xcae_m.xcae001 != g_xcae001_t  OR g_xcae_m.xcae002 != g_xcae002_t OR g_xcae_d[l_ac].xcaeseq != g_xcae_d_t.xcaeseq))) THEN 
                  IF NOT ap_chk_notDup(g_xcae_d[l_ac].xcaeseq,"SELECT COUNT(*) FROM xcae_t WHERE "||"xcaeent = '" ||g_enterprise|| "' AND "||"xcae001 = '"||g_xcae_m.xcae001 ||"' AND "|| "xcae002 = '"||g_xcae_m.xcae002 ||"' AND "|| "xcaeseq = '"||g_xcae_d[l_ac].xcaeseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.xcaecrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcae2_d[l_ac].xcaecrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcae2_d[l_ac].xcaecrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcae2_d[l_ac].xcaecrtdp_desc
]]>
  </point>
  <point name="input.a.page2.xcaecrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcae2_d[l_ac].xcaecrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_xcae2_d[l_ac].xcaecrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcae2_d[l_ac].xcaecrtid_desc
]]>
  </point>
  <point name="input.a.page2.xcaemodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcae2_d[l_ac].xcaemodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_xcae2_d[l_ac].xcaemodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcae2_d[l_ac].xcaemodid_desc
]]>
  </point>
  <point name="input.a.page2.xcaeowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcae2_d[l_ac].xcaeowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcae2_d[l_ac].xcaeowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcae2_d[l_ac].xcaeowndp_desc
]]>
  </point>
  <point name="input.a.page2.xcaeownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcae2_d[l_ac].xcaeownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_xcae2_d[l_ac].xcaeownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcae2_d[l_ac].xcaeownid_desc
]]>
  </point>
  <point name="input.a.page2.xcaeseq_2" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcae_m.xcae001) AND NOT cl_null(g_xcae_m.xcaesite) AND NOT cl_null(g_xcae_m.xcae002) AND NOT cl_null(g_xcae2_d[l_ac].xcaeseq) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_xcae_m.xcae001 != g_xcae001_t OR g_xcae_m.xcaesite != g_xcaesite_t OR g_xcae_m.xcae002 != g_xcae002_t OR g_xcae2_d[l_ac].xcaeseq != g_xcae2_d_t.xcaeseq))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcae_t WHERE "||"xcaeent = '" ||g_enterprise|| "' AND "||"xcae001 = '"||g_xcae_m.xcae001 ||"' AND "|| "xcae002 = '"||g_xcae_m.xcaesite ||"' AND "|| "xcaesite = '"||g_xcae_m.xcae002 ||"' AND "|| "xcaeseq = '"||g_xcae2_d[l_ac].xcaeseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.xcae001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcae_m.xcae001) AND NOT cl_null(g_xcae_m.xcae002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_xcae_m.xcae001 != g_xcae001_t  OR g_xcae_m.xcae002 != g_xcae002_t ))) THEN 
                  IF NOT ap_chk_notDup(g_xcae_m.xcae001,"SELECT COUNT(*) FROM xcae_t WHERE "||"xcaeent = '" ||g_enterprise|| "' AND "||"xcae001 = '"||g_xcae_m.xcae001 ||"' AND "|| "xcae002 = '"||g_xcae_m.xcae002 ||"'",'std-00004',0) THEN 
                     LET g_xcae_m.xcae001 = ''
                     NEXT FIELD xcae001
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.xcae002" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcae_m.xcae001) AND NOT cl_null(g_xcae_m.xcae002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_xcae_m.xcae001 != g_xcae001_t OR g_xcae_m.xcae002 != g_xcae002_t ))) THEN 
                  IF NOT ap_chk_notDup(g_xcae_m.xcae002,"SELECT COUNT(*) FROM xcae_t WHERE "||"xcaeent = '" ||g_enterprise|| "' AND "||"xcae001 = '"||g_xcae_m.xcae001 ||"' AND "|| "xcae002 = '"||g_xcae_m.xcae002 ||"'",'std-00004',0) THEN 
                     IF p_cmd = 'a' THEN 
                     LET g_xcae_m.xcae002 = ''
                  ELSE
                     LET g_xcae_m.xcae002 = g_xcae_m_t.xcae002
                  END IF 
                  NEXT FIELD xcae002
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_xcae_m.xcae002) THEN 
               IF NOT axci005_xcae002_chk(g_xcae_m.xcae001,g_xcae_m.xcae002) THEN 
                  IF p_cmd = 'a' THEN 
                     LET g_xcae_m.xcae002 = ''
                  ELSE
                     LET g_xcae_m.xcae002 = g_xcae_m_t.xcae002
                  END IF 
                  NEXT FIELD xcae002
               END IF 
               IF NOT cl_null(g_xcae_m.xcae008) THEN
                  LET l_n = 0 
                  SELECT COUNT(*) INTO l_n FROM ecba_t
                   WHERE ecbaent = g_enterprise AND ecba002 = g_xcae_m.xcae008
                     AND ecba001 = g_xcae_m.xcae002
                     AND ecbastus = 'Y' 
                  IF l_n = 0 THEN
                     LET g_xcae_m.xcae002 = ''
                     LET g_xcae_m.imaal003 = ''
                     LET g_xcae_m.imaal004 = ''
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'axc-00209'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = FALSE
                     CALL cl_err()

                  END IF
               END IF 
               #帶出品名規格
               SELECT DISTINCT imaal003,imaal004
                INTO g_xcae_m.imaal003,g_xcae_m.imaal004
                    FROM imaal_t 
                   WHERE imaalent = g_enterprise 
                     AND imaal002 = g_dlang
                     AND imaal001 = g_xcae_m.xcae002
               DISPLAY BY NAME g_xcae_m.xcae002,g_xcae_m.imaal003,g_xcae_m.imaal004
            END IF

]]>
  </point>
  <point name="input.a.xcaesite" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF NOT cl_null(g_xcae_m.xcaesite) THEN 
               LET g_xcaesite = g_xcae_m.xcaesite
               IF NOT axci005_xcaesite_chk() THEN 
                  IF p_cmd = 'a' THEN 
                     LET g_xcae_m.xcaesite = '' 
                  ELSE
                     LET g_xcae_m.xcaesite = g_xcae_m_t.xcaesite
                  END IF
                  NEXT FIELD xcaesite
               END IF 
            ELSE
               LET g_xcaesite = 'ALL'
            END IF

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcae_m.xcaesite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcae_m.xcaesite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcae_m.xcaesite_desc
]]>
  </point>
  <point name="input.c.page1.xcae004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcae_d[l_ac].xcae004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "221" #模組代碼

            CALL q_oocq002()                                #呼叫開窗

            LET g_xcae_d[l_ac].xcae004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            SELECT oocql004 INTO g_xcae_d[l_ac].oocql004_desc
              FROM oocql_t
             WHERE oocql002 = g_xcae_d[l_ac].xcae004
               AND oocql001 = '221'
               AND oocqlent = g_enterprise
   
            DISPLAY g_xcae_d[l_ac].xcae004 TO xcae004              #顯示到畫面上
            DISPLAY g_xcae_d[l_ac].oocql004_desc TO oocql004_desc
            NEXT FIELD xcae004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xcae005" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcae_d[l_ac].xcae005             #給予default值

            #給予arg

            CALL q_ecaa001_2()                                #呼叫開窗

            LET g_xcae_d[l_ac].xcae005 = g_qryparam.return1              #將開窗取得的值回傳到變數
            SELECT ecaa002,ecaa004 INTO g_xcae_d[l_ac].ecaa002,g_xcae_d[l_ac].ecaa004 FROM ecaa_t
             WHERE ecaaent = g_enterprise AND ecaa001 = g_xcae_d[l_ac].xcae005

            DISPLAY g_xcae_d[l_ac].xcae005 TO xcae005              #顯示到畫面上
            DISPLAY BY NAME g_xcae_d[l_ac].ecaa002,g_xcae_d[l_ac].ecaa004 

            NEXT FIELD xcae005                          #返回原欄位

]]>
  </point>
  <point name="input.c.xcae002" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
#            IF NOT cl_null(g_xcae_m.xcaesite) THEN 
#               LET g_xcaesite = g_xcae_m.xcaesite
#            ELSE
#               LET g_xcaesite = 'ALL'
#            END IF 
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcae_m.xcae002             #給予default值
            
            IF NOT cl_null(g_xcae_m.xcae008) THEN
               LET g_qryparam.where = " ecba002 = '",g_xcae_m.xcae008,"'"
               CALL q_ecba001_3()
            ELSE
               LET g_qryparam.where = " imaa004 = 'A'"
               CALL q_imaa001_2()
            END IF

            LET g_xcae_m.xcae002 = g_qryparam.return1              #將開窗取得的值回傳到變數
            SELECT DISTINCT imaal003,imaal004
              INTO g_xcae_m.imaal003,g_xcae_m.imaal004
              FROM imaal_t 
             WHERE imaalent = g_enterprise 
               AND imaal001 = g_xcae_m.xcae002
               AND imaal002 = g_dlang

            DISPLAY g_xcae_m.xcae002 TO xcae002              #顯示到畫面上
            DISPLAY g_xcae_m.imaal003 to imaal003
            DISPLAY g_xcae_m.imaal004 to imaal004
            LET g_qryparam.where = NULL
            NEXT FIELD xcae002                          #返回原欄位
       
]]>
  </point>
  <point name="input.c.xcaesite" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcae_m.xcaesite             #給予default值

            LET g_qryparam.where = " (ooea003 = 'Y' OR ooea004 = 'Y' OR ooea005 = 'Y') "
            #給予arg

            CALL q_ooea001()                                #呼叫開窗

            LET g_xcae_m.xcaesite = g_qryparam.return1              #將開窗取得的值回傳到變數
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcae_m.xcaesite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcae_m.xcaesite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcae_m.xcaesite_desc

            DISPLAY g_xcae_m.xcaesite TO xcaesite              #顯示到畫面上
            LET g_qryparam.where = NULL
            NEXT FIELD xcaesite                          #返回原欄位

]]>
  </point>
  <point name="ref_show.body2.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcae2_d[l_ac].xcaeownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_xcae2_d[l_ac].xcaeownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcae2_d[l_ac].xcaeownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcae2_d[l_ac].xcaeowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcae2_d[l_ac].xcaeowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcae2_d[l_ac].xcaeowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcae2_d[l_ac].xcaecrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_xcae2_d[l_ac].xcaecrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcae2_d[l_ac].xcaecrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcae2_d[l_ac].xcaecrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcae2_d[l_ac].xcaecrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcae2_d[l_ac].xcaecrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcae2_d[l_ac].xcaemodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_xcae2_d[l_ac].xcaemodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcae2_d[l_ac].xcaemodid_desc
]]>
  </point>
  <point name="ref_show.head.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcae_m.xcae002
   CALL ap_ref_array2(g_ref_fields," SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent = '"||g_enterprise||"' AND imaal001 = ? AND imaal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_xcae_m.imaal003 = g_rtn_fields[1] 
   LET g_xcae_m.imaal004 = g_rtn_fields[2] 
   DISPLAY BY NAME g_xcae_m.imaal003,g_xcae_m.imaal004]]>
  </point>
  <point name="function.axci005_xcaesite_chk" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+ xcaesite欄位檢查
PRIVATE FUNCTION axci005_xcaesite_chk()
#DEFINE  l_n             LIKE type_t.num5  
#
#   #輸入值須存在[T:组织档]
#   LET l_n = 0 
#   SELECT count(*) INTO l_n 
#     FROM ooea_t
#    WHERE ooea001 = g_xcae_m.xcaesite
#   IF l_n = 0 THEN 
#      LET g_xcae_m.xcaesite_desc = ''
#      DISPLAY g_xcae_m.xcaesite_desc TO xcaesite_desc
#      CALL cl_err(g_xcae_m.xcaesite,'axc-00005',1)
#      RETURN FALSE                       
#   END IF
#   #輸入值須在[T:组织档]里有效
#   LET l_n = 0 
#   SELECT count(*) INTO l_n 
#     FROM ooea_t
#    WHERE ooea001 = g_xcae_m.xcaesite
#      AND ooeastus = 'Y'
#   IF l_n = 0 THEN 
#      LET g_xcae_m.xcaesite_desc = ''
#      DISPLAY  g_xcae_m.xcaesite_desc TO xcaesite_desc
#      CALL cl_err(g_xcae_m.xcaesite,'axc-00006',1)
#      RETURN FALSE  
#   END IF 
#   #輸入值須存在[T:组织档]里為"法人組織"or"营运組織否"or"核算組織否"
#   LET l_n = 0 
#   SELECT count(*) INTO l_n 
#     FROM ooea_t
#    WHERE ooea001 = g_xcae_m.xcaesite
#      AND (ooea003 = 'Y' OR ooea004 = 'Y' OR ooea005 = 'Y')
#   IF l_n = 0 THEN 
#      LET g_xcae_m.xcaesite_desc = ''
#      DISPLAY g_xcae_m.xcaesite_desc TO xcaesite_desc
#      CALL cl_err(g_xcae_m.xcaesite,'axc-00058',1)
#      RETURN FALSE                       
#   END IF
#   SELECT ooefl003 INTO g_xcae_m.xcaesite_desc FROM ooefl_t WHERE ooefl001 = g_xcae_m.xcaesite
#   DISPLAY g_xcae_m.xcaesite_desc TO xcaesite_desc
#   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.axci005_xcaf003_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axci005_xcaf003_ref(p_xcaf003)
DEFINE p_xcaf003           LIKE xcaf_t.xcaf003

   SELECT mrba004,mrba010,mrba024 INTO g_xcaf_d[l_ac2].mrba004,g_xcaf_d[l_ac2].mrba010,g_xcaf_d[l_ac2].mrba024 
     FROM mrba_t
    WHERE mrbaent = g_enterprise AND mrba001 = p_xcaf003 
      AND mrbastus = 'Y'
END FUNCTION]]>
  </point>
  <point name="function.axci005_xcae002_chk" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+xcae002欄位檢查
PRIVATE FUNCTION axci005_xcae002_chk(p_xcae001,p_xcae002)
DEFINE  l_n             LIKE type_t.num5  
DEFINE  p_xcae001       LIKE xcae_t.xcae001
DEFINE  p_xcae002       LIKE xcae_t.xcae002
DEFINE  l_imaa003       LIKE imaa_t.imaa003
DEFINE  l_imcb013       LIKE imcb_t.imcb013
   
   #輸入值需存在于[T:物料主档]中
   LET l_n = 0 
   SELECT count(*) INTO l_n
     FROM imaa_t
    WHERE imaa001 = p_xcae002
                   
   IF l_n = 0 THEN 
      DISPLAY '' to imaal003
      DISPLAY '' to imaal004
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axc-00007'
      LET g_errparam.extend = p_xcae002
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF 
                  
   #輸入值需在[T:物料主档]中有效
   LET l_n = 0 
   SELECT count(*) INTO l_n
     FROM imaa_t
    WHERE imaa001 = p_xcae002
      AND imaastus = 'Y'
                     
   IF l_n = 0 THEN 
      DISPLAY '' to imaal003
      DISPLAY '' to imaal004
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axc-00008'
      LET g_errparam.extend = p_xcae002
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF 
   
   #檢查是否為自製件
   IF cl_null(g_xcae_m.xcae008) THEN
      LET l_n = 0 
         SELECT count(*) INTO l_n
           FROM imaa_t
          WHERE imaa001 = p_xcae002
            AND imaa004 = 'A'
            AND imaastus = 'Y'
            AND imaaent = g_enterprise
      
      IF l_n = 0 THEN 
         DISPLAY '' to imaal003
         DISPLAY '' to imaal004
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axc-00017'
         LET g_errparam.extend = p_xcae002
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF 
   END IF
   
   #帶出品名規格
   SELECT DISTINCT imaal003,imaal004
    INTO g_xcae_m.imaal003,g_xcae_m.imaal004
        FROM imaal_t 
       WHERE imaalent = g_enterprise 
         AND imaal001 = p_xcae002
         AND imaal002 = g_dlang
   DISPLAY g_xcae_m.imaal003 to imaal003
   DISPLAY g_xcae_m.imaal004 to imaal004
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.axci005_xcaf_b_fill" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axci005_xcaf_b_fill()
DEFINE l_ac3      LIKE type_t.num5

   CALL g_xcaf_d.clear()

   LET g_sql = "SELECT xcaf001,xcaf002,xcafseq1,xcafseq2,xcaf003,'','','',xcaf004,xcaf005,xcaf006,xcaf007",
               " FROM xcaf_t WHERE xcafent=? AND xcaf001=? AND xcaf002 = ? AND xcafseq1=? "

   LET g_sql = g_sql, " ORDER BY xcaf001,xcaf002,xcafseq1,xcafseq2 " 
                      
   PREPARE axci005_pb3 FROM g_sql
   DECLARE b_fill_curs3 CURSOR FOR axci005_pb3
   
   OPEN b_fill_curs3 USING g_enterprise,g_xcae_m.xcae001,g_xcae_m.xcae002,g_xcae_d[l_ac].xcaeseq

   LET l_ac3 = 1
   FOREACH b_fill_curs3 INTO g_xcaf_d[l_ac3].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      SELECT mrba004,mrba010,mrba024 INTO g_xcaf_d[l_ac3].mrba004,g_xcaf_d[l_ac3].mrba010,g_xcaf_d[l_ac3].mrba024 
        FROM mrba_t
       WHERE mrbaent = g_enterprise AND mrba001 = g_xcaf_d[l_ac3].xcaf003 
         AND mrbastus = 'Y'

      LET l_ac3 = l_ac3 + 1
      IF l_ac3 > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
      
   END FOREACH

   CALL g_xcaf_d.deleteElement(g_xcaf_d.getLength()) 
END FUNCTION]]>
  </point>
  <point name="function.axci005_xcae004_chk" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+ xcae004欄位檢查
PRIVATE FUNCTION axci005_xcae004_chk()
DEFINE  l_n             LIKE type_t.num5  
 
   #檢查作業是否存在
   LET l_n = 0
   SELECT count(*) INTO l_n
     FROM oocq_t
    WHERE oocq002 = g_xcae_d[l_ac].xcae004  
      and oocq001 = '221'
   
   IF l_n = 0 THEN 
      DISPLAY '' TO s_detail1[l_ac].oocql004_desc
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axc-00018'
      LET g_errparam.extend = g_xcae_d[l_ac].xcae004
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN FALSE
   END IF
   
   #檢查作業是否有效
   LET l_n = 0
   SELECT count(*) INTO l_n
     FROM oocq_t
    WHERE oocq002 = g_xcae_d[l_ac].xcae004
      AND oocq001 = '221'
      AND oocqstus = 'Y'
      
   IF l_n = 0 THEN 
      DISPLAY '' TO s_detail1[l_ac].oocql004_desc
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axc-00019'
      LET g_errparam.extend = g_xcae_d[l_ac].xcae004
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN FALSE
   END IF
   
   SELECT oocql004 INTO g_xcae_d[l_ac].oocql004_desc
     FROM oocql_t
    WHERE oocql002 = g_xcae_d[l_ac].xcae004
      AND oocql001 = '221'
      AND oocqlent = g_enterprise
   DISPLAY g_xcae_d[l_ac].oocql004_desc TO oocql004_desc
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.axci005_xcae005_chk" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#檢查有效性
PRIVATE FUNCTION axci005_xcae005_chk()
   DEFINE r_success LIKE type_t.num5

   LET r_success = TRUE

   IF r_success THEN
      IF NOT ap_chk_isExist(g_xcae_d[l_ac].xcae005,"SELECT COUNT(*) FROM ecaa_t WHERE ecaaent = '"
         ||g_enterprise||"' AND ecaa001 = ? ",'aec-00009',0 ) THEN
         LET r_success = FALSE
      END IF
   END IF
   IF r_success THEN
      IF NOT ap_chk_isExist(g_xcae_d[l_ac].xcae005,"SELECT COUNT(*) FROM ecaa_t WHERE ecaaent = '"
         ||g_enterprise||"' AND ecaa001 = ? AND ecaastus = 'Y' ",'aec-00010',0 ) THEN
         LET r_success = FALSE
      END IF
   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axci005_confirm" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 數據確認
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axci005_confirm()
DEFINE l_xcaestus   LIKE xcae_t.xcaestus
DEFINE l_imaf001    LIKE imaf_t.imaf001
DEFINE l_imaa003    LIKE imaa_t.imaa003
DEFINE l_imcb013    LIKE imcb_t.imcb013
DEFINE l_n          LIKE type_t.num5
DEFINE l_confirm    LIKE gzzd_t.gzzd005
DEFINE l_unconfirm  LIKE gzzd_t.gzzd005
   
   LET g_sql = "SELECT xcaestus FROM xcae_t WHERE xcae001= ?  AND xcae002 = ? AND xcaeent = '",g_enterprise,"'"
   PREPARE xcaestus_pre FROM g_sql
   DECLARE xcaestus_cur CURSOR FOR xcaestus_pre
   OPEN xcaestus_cur USING g_xcae_m.xcae001,g_xcae_m.xcae002
   FETCH xcaestus_cur INTO l_xcaestus
   IF l_xcaestus = 'Y' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axc-00095'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF
   IF l_xcaestus = 'N' THEN 
      IF cl_ask_confirm('axc-00011') THEN
         LET g_flag = 'Y'
#         LET g_sql = "SELECT imaa001 FROM imaa_t ",
#                     " WHERE imaaent = '",g_enterprise,"' AND imaastus = 'Y'",
#                     "   AND imaa004 = 'A' "
#         PREPARE imaa001_pre FROM g_sql
#         DECLARE imaa001_cur CURSOR FOR imaa001_pre
#         FOREACH imaa001_cur INTO l_imaf001
#            LET l_n = 0
#            SELECT count(*) INTO l_n 
#              FROM xcae_t
#             WHERE xcae002 = l_imaf001
#               AND xcae001 = g_xcae_m.xcae001
#               AND xcaeent = g_enterprise
#            IF l_n = 0 THEN 
#               CALL cl_err('','axc-00022',1)
#               LET g_flag = 'N' 
#               EXIT FOREACH 
#            END IF 
#         END FOREACH 
                     
         IF g_flag = 'Y' THEN 
            UPDATE xcae_t SET xcaestus = 'Y'
             WHERE xcae001 = g_xcae_m.xcae001 AND xcaeent = g_enterprise
               AND xcae002 = g_xcae_m.xcae002
            UPDATE xcaf_t SET xcafstus = 'Y'
             WHERE xcaf001 = g_xcae_m.xcae001 AND xcafent = g_enterprise
               AND xcaf002 = g_xcae_m.xcae002
         END IF 
      END IF 
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.axci005_unconfirm" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 取消數據確認
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axci005_unconfirm()
DEFINE l_xcaestus   LIKE xcae_t.xcaestus
DEFINE l_imaf001    LIKE imaf_t.imaf001
DEFINE l_imaa003    LIKE imaa_t.imaa003
DEFINE l_imcb013    LIKE imcb_t.imcb013
DEFINE l_n          LIKE type_t.num5
DEFINE l_confirm    LIKE gzzd_t.gzzd005
DEFINE l_unconfirm  LIKE gzzd_t.gzzd005
   
   LET g_sql = "SELECT unique xcaestus FROM xcae_t WHERE xcae001= ?  AND xcae002 = ? AND xcaeent = '",g_enterprise,"'"
   PREPARE xcaestus_pre1 FROM g_sql
   DECLARE xcaestus_cur1 CURSOR FOR xcaestus_pre1
   OPEN xcaestus_cur1 USING g_xcae_m.xcae001,g_xcae_m.xcae002
   FETCH xcaestus_cur1 INTO l_xcaestus
   IF l_xcaestus = 'N' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axc-00096'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF
   IF l_xcaestus = 'Y' THEN 
      IF cl_ask_confirm('axc-00012') THEN
         UPDATE xcae_t SET xcaestus = 'N'
          WHERE xcae001 = g_xcae_m.xcae001 AND xcaeent = g_enterprise
            AND xcae002 = g_xcae_m.xcae002
         UPDATE xcaf_t SET xcafstus = 'N'
          WHERE xcaf001 = g_xcae_m.xcae001 AND xcafent = g_enterprise
            AND xcaf002 = g_xcae_m.xcae002
      END IF 
   END IF 
END FUNCTION]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE   l_confirm     LIKE gzzd_t.gzzd005
   DEFINE   l_unconfirm   LIKE gzzd_t.gzzd005]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         SELECT oocql004 INTO g_xcae_d[l_ac].oocql004_desc
           FROM oocql_t
          WHERE oocql002 = g_xcae_d[l_ac].xcae004
            AND oocql001 = '221'
            AND oocqlent = g_enterprise
         DISPLAY g_xcae_d[l_ac].oocql004_desc TO oocql004_desc
      
         SELECT ecaa002,ecaa004 INTO g_xcae_d[l_ac].ecaa002,g_xcae_d[l_ac].ecaa004 FROM ecaa_t
          WHERE ecaaent = g_enterprise AND ecaa001 = g_xcae_d[l_ac].xcae005

         DISPLAY BY NAME g_xcae_d[l_ac].ecaa002,g_xcae_d[l_ac].ecaa004 
      
#         IF g_xcae_d[l_ac].xcaestus = 'N' THEN  
#            SELECT gzzd005 INTO l_confirm FROM gzzd_t WHERE gzzd001 = 'axci005' AND gzzd003 = 'confirm'
#            CALL cl_set_comp_att_text('confirm',l_confirm)
#         END IF 
#         
#         IF g_xcae_d[l_ac].xcaestus = 'Y' THEN
#            SELECT gzzd005 INTO l_unconfirm FROM gzzd_t WHERE gzzd001 = 'axci005' AND gzzd003 = 'unconfirm'
#            CALL cl_set_comp_att_text('confirm',l_unconfirm)
#         END IF  
         LET g_xcae2_d[l_ac].xcaeseq = g_xcae_d[l_ac].xcaeseq]]>
  </point>
  <point name="browser_fill.before_browser_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL g_xcaf_d.clear() ]]>
  </point>
  <point name="construct.c.page3.mrba010" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mrba010  #顯示到畫面上

            NEXT FIELD mrba010                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page3.xcaf003" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mrba001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcaf003  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO mrbasite #營運據點 

            NEXT FIELD xcaf003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.xcae008" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ecba002_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcae008  #顯示到畫面上
            NEXT FIELD xcae008                     #返回原欄位
    

]]>
  </point>
  <point name="delete.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      DELETE FROM xcaf_t WHERE xcafent = g_enterprise AND xcaf001 = g_xcae_m.xcae001
                                                      AND xcaf002 = g_xcae_m.xcae002]]>
  </point>
  <point name="delete.body.m_single_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DELETE FROM xcaf_t WHERE xcafent = g_enterprise AND xcaf001 = g_xcae_m.xcae001
                                                   AND xcaf002 = g_xcae_m.xcae002
                                                   AND xcafseq1 = g_xcae_d_t.xcaeseq]]>
  </point>
  <point name="detail_reproduce.body.table1.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DROP TABLE axci005_detail1
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axci005_detail1 AS ",
                "SELECT * FROM xcaf_t "
   PREPARE repro_tb2 FROM ls_sql
   EXECUTE repro_tb2
   FREE repro_tb2
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axci005_detail1 SELECT * FROM xcaf_t 
                                         WHERE xcafent = g_enterprise AND xcaf001 = g_xcae001_t
                                         AND xcaf002 = g_xcae002_t
 
 
   
   #將key修正為調整後   
   UPDATE axci005_detail1 
      #更新key欄位
      SET xcaf001 = g_xcae_m.xcae001
          , xcaf002 = g_xcae_m.xcae002
 
 
      #更新共用欄位
      #此段落由子樣板a13產生
       , xcafownid = g_user
       , xcafowndp = g_dept
       , xcafcrtid = g_user
       , xcafcrtdp = g_dept 
       , xcafcrtdt = ld_date
       , xcafmodid = "" 
       , xcafmoddt = "" 
      #, xcaestus = "Y"
 
 
                                       
  
   #將資料塞回原table   
   INSERT INTO xcaf_t SELECT * FROM axci005_detail1
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "reproduce"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF
   DROP TABLE axci005_detail1]]>
  </point>
  <point name="detail_reproduce.body.table1.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[    UPDATE xcae_t SET xcaestus = "N"
      WHERE xcaeent = g_enterprise AND xcae001 = g_xcae_m.xcae001
        AND xcae002 = g_xcae_m.xcae002]]>
  </point>
  <point name="fetch.before_fetch" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="fetch.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_xcaesite            LIKE xcae_t.xcaesite
DEFINE g_flag                LIKE type_t.chr1
 TYPE type_g_xcaf_d        RECORD
       xcaf001 LIKE xcaf_t.xcaf001,  
   xcaf002 LIKE xcaf_t.xcaf002, 
   xcafseq1 LIKE xcaf_t.xcafseq1, 
   xcafseq2 LIKE xcaf_t.xcafseq2, 
   xcaf003 LIKE xcaf_t.xcaf003, 
   mrba004 LIKE mrba_t.mrba004,
   mrba010 LIKE mrba_t.mrba010,
   mrba024 LIKE mrba_t.mrba024,
   xcaf004 LIKE xcaf_t.xcaf004, 
   xcaf005 LIKE xcaf_t.xcaf005, 
   xcaf006 LIKE xcaf_t.xcaf006, 
   xcaf007 LIKE xcaf_t.xcaf007
       END RECORD
DEFINE g_xcaf_d          DYNAMIC ARRAY OF type_g_xcaf_d
DEFINE g_xcaf_d_t        type_g_xcaf_d
DEFINE l_ac2             LIKE type_t.num5
DEFINE l_ac2_t           LIKE type_t.num5
DEFINE g_rec_b2          LIKE type_t.num5 
DEFINE  g_flag2          LIKE type_t.num5 ]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   # 动态显示下拉框
   CALL cl_set_combo_scc_part("xcaestus",'13','N,Y') 
   CALL cl_set_combo_scc('ecaa004','1200')
   CALL cl_set_combo_scc('mrba024','5204')]]>
  </point>
  <point name="input.a.page1.xcae001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xcae_m.xcae001 IS NOT NULL AND g_xcae_m.xcae002 IS NOT NULL AND g_xcae_m.xcaeseq IS NOT NULL AND g_xcae_d[g_detail_idx].xcae001 IS NOT NULL AND g_xcae_d[g_detail_idx].xcae002 IS NOT NULL AND g_xcae_d[g_detail_idx].xcaeseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcae_m.xcae001 != g_xcae001_t OR g_xcae_m.xcae002 != g_xcae002_t OR g_xcae_m.xcaeseq != g_xcaeseq_t OR g_xcae_d[g_detail_idx].xcae001 != g_xcae_d_t.xcae001 OR g_xcae_d[g_detail_idx].xcae002 != g_xcae_d_t.xcae002 OR g_xcae_d[g_detail_idx].xcaeseq != g_xcae_d_t.xcaeseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcae_t WHERE "||"xcaeent = '" ||g_enterprise|| "' AND "||"xcae001 = '"||g_xcae_m.xcae001 ||"' AND "|| "xcae002 = '"||g_xcae_m.xcae002 ||"' AND "|| "xcaeseq = '"||g_xcae_m.xcaeseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.xcae002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xcae_m.xcae001 IS NOT NULL AND g_xcae_m.xcae002 IS NOT NULL AND g_xcae_m.xcaeseq IS NOT NULL AND g_xcae_d[g_detail_idx].xcae001 IS NOT NULL AND g_xcae_d[g_detail_idx].xcae002 IS NOT NULL AND g_xcae_d[g_detail_idx].xcaeseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcae_m.xcae001 != g_xcae001_t OR g_xcae_m.xcae002 != g_xcae002_t OR g_xcae_m.xcaeseq != g_xcaeseq_t OR g_xcae_d[g_detail_idx].xcae001 != g_xcae_d_t.xcae001 OR g_xcae_d[g_detail_idx].xcae002 != g_xcae_d_t.xcae002 OR g_xcae_d[g_detail_idx].xcaeseq != g_xcae_d_t.xcaeseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcae_t WHERE "||"xcaeent = '" ||g_enterprise|| "' AND "||"xcae001 = '"||g_xcae_m.xcae001 ||"' AND "|| "xcae002 = '"||g_xcae_m.xcae002 ||"' AND "|| "xcaeseq = '"||g_xcae_m.xcaeseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.xcae004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcae_d[l_ac].xcae004) THEN 
               IF NOT axci005_xcae004_chk() THEN 
                  IF l_cmd = 'a' THEN
                     LET g_xcae_d[l_ac].xcae004 = ''
                     LET g_xcae_d[l_ac].oocql004_desc = ''
                  ELSE
                     LET g_xcae_d[l_ac].xcae004 = g_xcae_d_t.xcae004
                     LET g_xcae_d[l_ac].oocql004_desc =  g_xcae_d_t.oocql004_desc
                  END IF
                  DISPLAY BY NAME  g_xcae_d[l_ac].oocql004_desc
                  NEXT FIELD xcae004
               END IF
            END IF ]]>
  </point>
  <point name="input.a.page1.xcae005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcae_d[l_ac].xcae005) THEN 
               IF NOT axci005_xcae005_chk() THEN
                  IF p_cmd = 'a' THEN
                     LET g_xcae_d[l_ac].xcae005 = ''
                     LET g_xcae_d[l_ac].ecaa002 = ''
                     LET g_xcae_d[l_ac].ecaa004 = ''
                  ELSE
                     LET g_xcae_d[l_ac].xcae005 = g_xcae_d_t.xcae005
                     LET g_xcae_d[l_ac].ecaa002 = g_xcae_d_t.ecaa002
                     LET g_xcae_d[l_ac].ecaa004 = g_xcae_d_t.ecaa004
                  END IF
                  NEXT FIELD xcae005
               END IF
            END IF 
            SELECT ecaa002,ecaa004 INTO g_xcae_d[l_ac].ecaa002,g_xcae_d[l_ac].ecaa004 FROM ecaa_t
             WHERE ecaaent = g_enterprise AND ecaa001 = g_xcae_d[l_ac].xcae005]]>
  </point>
  <point name="input.a.page2.xcae001_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xcae_m.xcae001 IS NOT NULL AND g_xcae_m.xcae002 IS NOT NULL AND g_xcae_m.xcaeseq IS NOT NULL AND g_xcae2_d[g_detail_idx].xcae001 IS NOT NULL AND g_xcae2_d[g_detail_idx].xcae002 IS NOT NULL AND g_xcae2_d[g_detail_idx].xcaeseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcae_m.xcae001 != g_xcae001_t OR g_xcae_m.xcae002 != g_xcae002_t OR g_xcae_m.xcaeseq != g_xcaeseq_t OR g_xcae2_d[g_detail_idx].xcae001 != g_xcae2_d_t.xcae001 OR g_xcae2_d[g_detail_idx].xcae002 != g_xcae2_d_t.xcae002 OR g_xcae2_d[g_detail_idx].xcaeseq != g_xcae2_d_t.xcaeseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcae_t WHERE "||"xcaeent = '" ||g_enterprise|| "' AND "||"xcae001 = '"||g_xcae_m.xcae001 ||"' AND "|| "xcae002 = '"||g_xcae_m.xcae002 ||"' AND "|| "xcaeseq = '"||g_xcae_m.xcaeseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.xcae002_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xcae_m.xcae001 IS NOT NULL AND g_xcae_m.xcae002 IS NOT NULL AND g_xcae_m.xcaeseq IS NOT NULL AND g_xcae2_d[g_detail_idx].xcae001 IS NOT NULL AND g_xcae2_d[g_detail_idx].xcae002 IS NOT NULL AND g_xcae2_d[g_detail_idx].xcaeseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcae_m.xcae001 != g_xcae001_t OR g_xcae_m.xcae002 != g_xcae002_t OR g_xcae_m.xcaeseq != g_xcaeseq_t OR g_xcae2_d[g_detail_idx].xcae001 != g_xcae2_d_t.xcae001 OR g_xcae2_d[g_detail_idx].xcae002 != g_xcae2_d_t.xcae002 OR g_xcae2_d[g_detail_idx].xcaeseq != g_xcae2_d_t.xcaeseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcae_t WHERE "||"xcaeent = '" ||g_enterprise|| "' AND "||"xcae001 = '"||g_xcae_m.xcae001 ||"' AND "|| "xcae002 = '"||g_xcae_m.xcae002 ||"' AND "|| "xcaeseq = '"||g_xcae_m.xcaeseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.mrba010" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            IF NOT cl_null(g_xcae3_d[l_ac].mrba010) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcae3_d[l_ac].mrba010
               LET g_chkparam.arg2 = '參數2'

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist_and_ref_val("v_oocq002_4") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
]]>
  </point>
  <point name="input.a.page3.xcafseq2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xcae_m.xcae001 IS NOT NULL AND g_xcae_m.xcae002 IS NOT NULL AND g_xcae_m.xcaeseq IS NOT NULL AND g_xcae3_d[g_detail_idx].xcafseq2 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcae_m.xcae001 != g_xcae001_t OR g_xcae_m.xcae002 != g_xcae002_t OR g_xcae_m.xcaeseq != g_xcaeseq_t OR g_xcae3_d[g_detail_idx].xcafseq2 != g_xcae3_d_t.xcafseq2)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcaf_t WHERE "||"xcafent = '" ||g_enterprise|| "' AND "||"xcaf001 = '"||g_xcae_m.xcae001 ||"' AND "|| "xcaf002 = '"||g_xcae_m.xcae002 ||"' AND "|| "xcafseq1 = '"||g_xcae_m.xcaeseq ||"' AND "|| "xcafseq2 = '"||g_xcae3_d[g_detail_idx].xcafseq2 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.xcae008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcae_m.xcae008) THEN
               LET l_n = 0 
               SELECT COUNT(*) INTO l_n FROM ecba_t
                WHERE ecbaent = g_enterprise AND ecba002 = g_xcae_m.xcae008
               IF l_n = 0 THEN
                  LET g_xcae_m.xcae008 = g_xcae_m_t.xcae008
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'aec-00011'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

               END IF
               LET l_n = 0 
               SELECT COUNT(*) INTO l_n FROM ecba_t
                WHERE ecbaent = g_enterprise AND ecba002 = g_xcae_m.xcae008
                  AND ecbastus = 'Y' 
               IF l_n = 0 THEN
                  LET g_xcae_m.xcae008 = g_xcae_m_t.xcae008
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'aec-00012'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

               END IF
               IF NOT cl_null(g_xcae_m.xcae002) THEN
                  LET l_n = 0 
                  SELECT COUNT(*) INTO l_n FROM ecba_t
                   WHERE ecbaent = g_enterprise AND ecba002 = g_xcae_m.xcae008
                     AND ecba001 = g_xcae_m.xcae002
                     AND ecbastus = 'Y' 
                  IF l_n = 0 THEN
                     LET g_xcae_m.xcae008 = g_xcae_m_t.xcae008
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'axc-00208'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = FALSE
                     CALL cl_err()

                  END IF
               END IF 
               DISPLAY BY NAME g_xcae_m.xcae008
            END IF]]>
  </point>
  <point name="input.b.page1.xcaeseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF cl_null(g_xcae_d[l_ac].xcaeseq ) THEN 
               SELECT MAX(xcaeseq) INTO g_xcae_d[l_ac].xcaeseq 
                 FROM xcae_t
                WHERE xcae001 = g_xcae_m.xcae001
                  AND xcae002 = g_xcae_m.xcae002
               IF cl_null(g_xcae_d[l_ac].xcaeseq) THEN 
                  LET g_xcae_d[l_ac].xcaeseq = 10
               ELSE
                  LET g_xcae_d[l_ac].xcaeseq = g_xcae_d[l_ac].xcaeseq + 10
               END IF
            END IF ]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_forupd_sql = "SELECT xcaf001,xcaf002,xcafseq1,xcafseq2,xcaf003,'','','',xcaf004,xcaf005,xcaf006,xcaf007
                 FROM xcaf_t WHERE xcafent=? AND xcaf001=? AND xcaf002 = ? AND xcafseq1=? AND xcafseq2=? FOR UPDATE"

   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE axci005_bcl2 CURSOR FROM g_forupd_sql
   
   LET l_allow_insert2 = cl_auth_detail_input("insert")
   LET l_allow_delete2 = cl_auth_detail_input("delete")]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF l_cmd = 'a' THEN 
               SELECT MAX(xcaeseq) INTO g_xcae_d[l_ac].xcaeseq 
                 FROM xcae_t
                WHERE xcae001 = g_xcae_m.xcae001
                  AND xcae002 = g_xcae_m.xcae002
               IF cl_null(g_xcae_d[l_ac].xcaeseq) THEN 
                  LET g_xcae_d[l_ac].xcaeseq = 10
               ELSE
                  LET g_xcae_d[l_ac].xcaeseq = g_xcae_d[l_ac].xcaeseq + 10
               END IF
               DISPLAY g_xcae_d[l_ac].xcaeseq TO xcaeseq
            END IF ]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            SELECT oocql004 INTO g_xcae_d[l_ac].oocql004_desc
              FROM oocql_t
             WHERE oocql002 = g_xcae_d[l_ac].xcae004
               AND oocql001 = '221'
               AND oocqlent = g_enterprise
            DISPLAY g_xcae_d[l_ac].oocql004_desc TO oocql004_desc
            SELECT ecaa002,ecaa004 INTO g_xcae_d[l_ac].ecaa002,g_xcae_d[l_ac].ecaa004 FROM ecaa_t
             WHERE ecaaent = g_enterprise AND ecaa001 = g_xcae_d[l_ac].xcae005
   
            DISPLAY BY NAME g_xcae_d[l_ac].ecaa002,g_xcae_d[l_ac].ecaa004

            CALL axci005_xcaf_b_fill()]]>
  </point>
  <point name="input.c.page3.mrba010" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcae3_d[l_ac].mrba010             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_xcae3_d[l_ac].mrba010 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xcae3_d[l_ac].mrba010 TO mrba010              #顯示到畫面上

            NEXT FIELD mrba010                          #返回原欄位

]]>
  </point>
  <point name="input.c.page3.xcaf003" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcae3_d[l_ac].xcaf003             #給予default值
            LET g_qryparam.default2 = "" #g_xcae3_d[l_ac].mrbasite #營運據點

            #給予arg

            CALL q_mrba001_3()                                #呼叫開窗

            LET g_xcae3_d[l_ac].xcaf003 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_xcae3_d[l_ac].mrbasite = g_qryparam.return2 #營運據點

            DISPLAY g_xcae3_d[l_ac].xcaf003 TO xcaf003              #顯示到畫面上
            #DISPLAY g_xcae3_d[l_ac].mrbasite TO mrbasite #營運據點

            NEXT FIELD xcaf003                          #返回原欄位

]]>
  </point>
  <point name="input.c.xcae008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcae_m.xcae008             #給予default值

            #給予arg
           #LET g_qryparam.arg1 = "" #營運據點
            IF NOT cl_null(g_xcae_m.xcae002) THEN
               LET g_qryparam.where = " ecba001 = '",g_xcae_m.xcae002,"'"
            END IF

            
            CALL q_ecba002_4()                                #呼叫開窗

            LET g_xcae_m.xcae008 = g_qryparam.return1              
            LET g_qryparam.where = NULL

            DISPLAY g_xcae_m.xcae008 TO xcae008              #

            NEXT FIELD xcae008                          #返回原欄位

]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE  l_xcafcrtdt     DATETIME YEAR TO SECOND
   DEFINE  l_xcafmoddt     DATETIME YEAR TO SECOND
   DEFINE  l_allow_insert2 LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete2 LIKE type_t.num5                #可刪除否]]>
  </point>
  <point name="input.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF l_cmd_t = 'r' THEN
               CALL cl_set_comp_entry('xcaesite',FALSE)
            ELSE
               CALL cl_set_comp_entry('xcaesite',TRUE)
            END IF]]>
  </point>
  <point name="input.more_inputarray" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      INPUT ARRAY g_xcaf_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert2, #此頁面insert功能由產生器控制, 手動之設定無效!
                 DELETE ROW = l_allow_delete2,
                 APPEND ROW = l_allow_insert2)
                 
     
         BEFORE INPUT
           IF l_ac < 1 OR cl_null(l_ac) THEN
              RETURN
           END IF
           IF cl_null(g_xcae_d[l_ac].xcaeseq) THEN
              NEXT FIELD xcaeseq
           END IF
           
           IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcaf_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
           LET g_detail_cnt = g_xcaf_d.getLength()
           
         BEFORE ROW 
            LET l_cmd = ''
            LET l_ac2 = ARR_CURR()
            LET g_detail_idx2 = l_ac2
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
         
            CALL s_transaction_begin()
            
            LET g_detail_cnt = g_xcaf_d.getLength()
            
            IF g_detail_cnt >= l_ac2 
               AND NOT cl_null(g_xcaf_d[l_ac2].xcafseq2) 
               AND g_xcae_d[l_ac].xcaeseq IS NOT NULL
               AND NOT cl_null(g_xcae_m.xcae001)
               AND NOT cl_null(g_xcae_m.xcae002)
            THEN 
               LET l_cmd='u'
               LET g_xcaf_d_t.* = g_xcaf_d[l_ac2].*  #BACKUP
               OPEN axci005_bcl2 USING g_enterprise,g_xcae_m.xcae001,g_xcae_m.xcae002,g_xcae_d[l_ac].xcaeseq,g_xcaf_d[l_ac2].xcafseq2

               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "axci005_bcl2"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET l_lock_sw='Y'
               ELSE
                  FETCH axci005_bcl2 INTO g_xcaf_d[l_ac2].*
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF
                  CALL axci005_xcaf003_ref(g_xcaf_d[l_ac2].xcaf003)
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF

           
            
         BEFORE INSERT
            
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xcaf_d[l_ac2].* TO NULL 
            
            LET g_xcaf_d_t.* = g_xcaf_d[l_ac2].*     #新輸入資料
            CALL cl_show_fld_cont()
            
            IF l_cmd = 'a' THEN 
               SELECT MAX(xcafseq2) INTO g_xcaf_d[l_ac2].xcafseq2 
                 FROM xcaf_t
                WHERE xcafent = g_enterprise AND xcaf001 = g_xcae_m.xcae001
                  AND xcaf002 = g_xcae_m.xcae002
                  AND xcafseq1 = g_xcae_d[l_ac].xcaeseq
               IF cl_null(g_xcaf_d[l_ac2].xcafseq2) THEN 
                  LET g_xcaf_d[g_detail_idx2].xcafseq2 = 10
               ELSE
                  LET g_xcaf_d[g_detail_idx2].xcafseq2 = g_xcaf_d[g_detail_idx2].xcafseq2 + 10
               END IF
               DISPLAY g_xcaf_d[g_detail_idx2].xcafseq2 TO xcafseq2
            END IF 
            LET g_xcaf_d[l_ac2].xcaf004 = 0
            LET g_xcaf_d[l_ac2].xcaf005 = 0
            LET g_xcaf_d[l_ac2].xcaf006 = 0
            
         
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               CALL FGL_SET_ARR_CURR(l_ac2-1)
               CALL g_xcaf_d.deleteElement(l_ac2)
               NEXT FIELD xcafseq2
            END IF
            IF NOT cl_null(g_xcaf_d[l_ac2].xcafseq2) THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF  
               
               DELETE FROM xcaf_t
                WHERE xcafent = g_enterprise  
                  AND xcaf001 = g_xcae_m.xcae001
                  AND xcaf002 = g_xcae_m.xcae002
                  AND xcafseq1 = g_xcae_d[l_ac].xcaeseq
                  AND xcafseq2 = g_xcaf_d_t.xcafseq2

               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "xcaf_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1                 
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE axci005_bcl2
               LET l_count = g_xcaf_d.getLength()
            END IF 

         AFTER INSERT    
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xcaf_t 
             WHERE xcafent = g_enterprise 
               AND xcaf001 = g_xcae_m.xcae001
               AND xcaf002 = g_xcae_m.xcae002
               AND xcafseq1 = g_xcae_d[l_ac].xcaeseq
               AND xcafseq2 = g_xcaf_d[l_ac2].xcafseq2

                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
            
               LET l_xcafcrtdt = cl_get_current()
               INSERT INTO xcaf_t (xcafent,xcaf001,xcaf002,xcafseq1,xcafseq2,xcaf003,xcaf004,xcaf005,xcaf006,xcaf007,xcafstus,xcafownid,xcafowndp,xcafcrtid,xcafcrtdp,xcafcrtdt) 
                VALUES (g_enterprise,g_xcae_m.xcae001,g_xcae_m.xcae002,g_xcae_d[l_ac].xcaeseq,g_xcaf_d[l_ac2].xcafseq2,
                        g_xcaf_d[l_ac2].xcaf003,g_xcaf_d[l_ac2].xcaf004,g_xcaf_d[l_ac2].xcaf005,g_xcaf_d[l_ac2].xcaf006,
                        g_xcaf_d[l_ac2].xcaf007,'N',g_user,g_dept,g_user,g_dept,l_xcafcrtdt)

            ELSE    
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_xcaf_d[l_ac2].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "xcaf_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_xcaf_d[l_ac2].* = g_xcaf_d_t.*
               CLOSE axci005_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_xcaf_d[l_ac2].* = g_xcaf_d_t.*
            ELSE
               #寫入修改者/修改日期資訊(單身3)
               LET l_xcafmoddt = cl_get_current()
               UPDATE xcaf_t SET (xcafseq2,xcaf003,xcaf004,xcaf005,xcaf006,xcaf007,xcafmodid,xcafmoddt) 
                = (g_xcaf_d[l_ac2].xcafseq2,g_xcaf_d[l_ac2].xcaf003,g_xcaf_d[l_ac2].xcaf004,g_xcaf_d[l_ac2].xcaf005,
                   g_xcaf_d[l_ac2].xcaf006,g_xcaf_d[l_ac2].xcaf007,g_user,l_xcafmoddt)
                WHERE xcafent = g_enterprise 
                  AND xcaf001 = g_xcae_m.xcae001
                  AND xcaf002 = g_xcae_m.xcae002
                  AND xcafseq1 = g_xcae_d[l_ac].xcaeseq
                  AND xcafseq2 = g_xcaf_d[l_ac2].xcafseq2

                   
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
   
                  LET g_xcaf_d[l_ac2].* = g_xcaf_d_t.*
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
                  ERROR 'UPDATE O.K'
               END IF
               #end add-point
            END IF
         

         #----<<xcafseq2>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xcafseq2
            #add-point:BEFORE FIELD xcafseq2
            IF cl_null(g_xcaf_d[l_ac2].xcafseq2 ) THEN 
               SELECT MAX(xcafseq2) INTO g_xcaf_d[g_detail_idx2].xcafseq2 
                 FROM xcaf_t
                WHERE xcaf001 = g_xcae_m.xcae001
                  AND xcaf002 = g_xcae_m.xcae002
                  AND xcafseq1 = g_xcae_d[l_ac].xcaeseq
                  AND xcafent = g_enterprise                  
               IF cl_null(g_xcaf_d[g_detail_idx2].xcafseq2) THEN 
                  LET g_xcaf_d[g_detail_idx2].xcafseq2 = 10
               ELSE
                  LET g_xcaf_d[g_detail_idx2].xcafseq2 = g_xcaf_d[g_detail_idx2].xcafseq2 + 10
               END IF
            END IF 
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcafseq2
            
            #add-point:AFTER FIELD xcafseq2
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcae_m.xcae001) AND NOT cl_null(g_xcae_m.xcae002) AND NOT cl_null(g_xcae_d[l_ac].xcaeseq) AND NOT cl_null(g_xcaf_d[l_ac2].xcafseq2) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_xcae_m.xcae001 != g_xcae_m_t.xcae001 OR g_xcae_m.xcae002 != g_xcae_m_t.xcae002 OR g_xcae_d[l_ac].xcaeseq != g_xcae_d_t.xcaeseq OR g_xcaf_d[l_ac2].xcafseq2 != g_xcaf_d_t.xcafseq2))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcaf_t WHERE "||"xcafent = '" ||g_enterprise|| "' AND "||"xcaf001 = '"||g_xcae_m.xcae001 ||"' AND "|| "xcaf002 = '"||g_xcae_m.xcae002 ||"' AND "|| "xcafseq1 = '"||g_xcae_d[l_ac].xcaeseq ||"' AND "|| " xcafseq2 = '"||g_xcaf_d[l_ac2].xcafseq2||"' ",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  ELSE
#                     IF cl_null(g_xcaf_d[g_detail_idx2].xcaf003) THEN
#                        LET g_xcaf_d[g_detail_idx2].xcafseq2 = ''
#                     END IF
                  END IF
                  
               END IF
               
            END IF

            #END add-point
            
 #此段落由子樣板a02產生
         AFTER FIELD xcaf003
            IF NOT cl_null(g_xcaf_d[l_ac2].xcaf003) THEN
               LET l_n = 0
               SELECT COUNT(*) INTO l_n FROM mrba_t
                WHERE mrbaent = g_enterprise AND mrba001 = g_xcaf_d[l_ac2].xcaf003  
               IF l_n = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amr-00001'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  LET g_xcaf_d[l_ac2].xcaf003 = g_xcaf_d_t.xcaf003
                  CALL axci005_xcaf003_ref(g_xcaf_d[l_ac2].xcaf003)
                  NEXT FIELD xcaf003
               END IF               
               LET l_n = 0
               SELECT COUNT(*) INTO l_n FROM mrba_t
                WHERE mrbaent = g_enterprise AND mrba001 = g_xcaf_d[l_ac2].xcaf003 
                  AND mrbastus = 'Y'                
               IF l_n = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amr-00004'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  LET g_xcaf_d[l_ac2].xcaf003 = g_xcaf_d_t.xcaf003
                  CALL axci005_xcaf003_ref(g_xcaf_d[l_ac2].xcaf003)
                  NEXT FIELD xcaf003
               END IF 
               CALL axci005_xcaf003_ref(g_xcaf_d[l_ac2].xcaf003)
            END IF
            
         ON ACTION controlp INFIELD xcaf003
            #add-point:ON ACTION controlp INFIELD xcaf003
#此段落由子樣板a07產生            
            #開窗i段
                        INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
                        LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcaf_d[l_ac2].xcaf003            #給予default值

            #給予arg

            CALL q_mrba001()                                #呼叫開窗

            LET g_xcaf_d[l_ac2].xcaf003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xcaf_d[l_ac2].xcaf003 TO xcaf003             #顯示到畫面上
            CALL axci005_xcaf003_ref(g_xcaf_d[l_ac2].xcaf003)

            NEXT FIELD xcaf003                          #返回原欄位
            
            
         #----<<xcaf004>>----
         #此段落由子樣板a02產生
         AFTER FIELD xcaf004
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xcaf_d[l_ac].xcaf004,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xcaf004
            END IF
 
         #----<<xcaf005>>----
         #此段落由子樣板a02產生
         AFTER FIELD xcaf005
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xcaf_d[l_ac].xcaf005,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xcaf005
            END IF
 
         #----<<xcaf006>>----
         #此段落由子樣板a02產生
         AFTER FIELD xcaf006
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xcaf_d[l_ac2].xcaf006,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xcaf006
            END IF
            

         AFTER ROW
            LET l_ac2 = ARR_CURR()
            LET l_ac2_t = l_ac2
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xcaf_d[l_ac2].* = g_xcaf_d_t.*
               END IF
               CLOSE axci005_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            CLOSE axci005_bcl2
        
        AFTER INPUT
           #若單身還沒有輸入資料, 強制切換至單身
            IF cl_null(g_xcaf_d[1].xcafseq2) THEN
               CALL g_xcaf_d.deleteElement(1)
               NEXT FIELD xcafseq2
            END IF

      END INPUT
           ]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL g_xcaf_d.clear() 
      #默認用户所属site
      #確認按鈕預設值
#      SELECT gzzd005 INTO l_confirm FROM gzzd_t WHERE gzzd001 = 'axci002' AND gzzd003 = 'confirm'
#      CALL cl_set_comp_att_text('confirm',l_confirm)
#      LET g_sql = "SELECT xcaestus FROM xcae_t WHERE xcae001= ? AND xcae002 = ? "
#      PREPARE xcaestus_pre1 FROM g_sql
#      DECLARE xcaestus_cur1 CURSOR FOR xcaestus_pre1
#      OPEN xcaestus_cur1 USING g_xcae_m.xcae001,g_xcae_m.xcae002
#      FETCH xcaestus_cur1 INTO l_xcaestus
#      IF l_xcaestus = 'N' THEN  
#         SELECT gzzd005 INTO l_confirm FROM gzzd_t WHERE gzzd001 = 'axci002' AND gzzd003 = 'confirm'
#         CALL cl_set_comp_att_text('confirm',l_confirm)
#      END IF 
#      
#      IF l_xcaestus = 'Y' THEN
#         SELECT gzzd005 INTO l_unconfirm FROM gzzd_t WHERE gzzd001 = 'axci002' AND gzzd003 = 'unconfirm'
#         CALL cl_set_comp_att_text('confirm',l_unconfirm)
#      END IF ]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE  l_xcaestus    LIKE xcae_t.xcaestus
   DEFINE  l_confirm     LIKE gzzd_t.gzzd005
   DEFINE  l_unconfirm   LIKE gzzd_t.gzzd005]]>
  </point>
  <point name="menu.confirm" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL axci005_action()]]>
  </point>
  <point name="menu.open_axci005_01" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL axci005_01(g_xcae_m.xcae001) RETURNING l_success
               IF l_success = TRUE THEN
                  CALL s_transaction_end('Y','1')
                  ERROR "INSERT O.K"
               ELSE
                  CALL s_transaction_end('N','1')
               END IF
               CALL axci005_show() ]]>
  </point>
  <point name="menu.open_axci005_02" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               SELECT unique xcaesite INTO g_xcaesite FROM xcae_t 
                WHERE xcaeent = g_enterprise AND xcae001 = g_xcae_m.xcae001 
                  AND xcae002 = g_xcae_m.xcae002 AND xcaeseq = g_xcae_d[l_ac].xcaeseq
               IF l_ac = 0 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axc-00023'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

               ELSE   
                  CALL axci005_02(g_xcae_m.xcae001,g_xcaesite,g_xcae_m.xcae002,g_xcae_d[l_ac].xcaeseq)
               END IF]]>
  </point>
  <point name="menu.open_confirm" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL axci005_confirm()]]>
  </point>
  <point name="menu.open_unconfirm" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL axci005_unconfirm()]]>
  </point>
  <point name="query.befroe_query" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL g_xcaf_d.clear() ]]>
  </point>
  <point name="reproduce.action" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ON ACTION controlp INFIELD xcae002
            #add-point:ON ACTION controlp INFIELD xcae002
#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = l_newno02             #給予default值
            
            LET g_qryparam.where = " imcb013 = '2'"
            #給予arg
            LET g_qryparam.arg1 = g_xcaesite

            CALL q_imaa001_4()                                #呼叫開窗

            LET g_xcae_m.xcae002 = g_qryparam.return1              #將開窗取得的值回傳到變數
            SELECT DISTINCT imaal003,imaal004
              INTO g_xcae_m.imaal003,g_xcae_m.imaal004
              FROM imaal_t 
             WHERE imaalent = g_enterprise 
               AND imaal001 = l_newno02

            DISPLAY g_xcae_m.xcae002 TO xcae002              #顯示到畫面上
            DISPLAY g_xcae_m.imaal003 to imaal003
            DISPLAY g_xcae_m.imaal004 to imaal004
            LET g_qryparam.where = NULL
            NEXT FIELD xcae002                          #返回原欄位]]>
  </point>
  <point name="reproduce.xcae001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(l_newno) AND NOT cl_null(l_newno02) THEN 
               IF NOT ap_chk_notDup(l_newno,"SELECT COUNT(*) FROM xcae_t WHERE "||"xcaeent = '" ||g_enterprise|| "' AND "||"xcae001 = '"||l_newno ||"' AND "|| "xcae002 = '"||l_newno02 ||"'",'std-00004',0) THEN 
                  LET l_newno = ''
                  NEXT FIELD xcae001
               END IF
            END IF]]>
  </point>
  <point name="reproduce.xcae002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(l_newno) AND NOT cl_null(l_newno02) THEN 
               IF NOT ap_chk_notDup(l_newno02,"SELECT COUNT(*) FROM xcae_t WHERE "||"xcaeent = '" ||g_enterprise|| "' AND "||"xcae001 = '"||l_newno ||"' AND "|| "xcae002 = '"||l_newno02 ||"'",'std-00004',0) THEN 
                  LET l_newno02 = ''
                  DISPLAY l_newno02 TO xcae002
                  NEXT FIELD xcae002
               END IF
            END IF  
            IF NOT cl_null(l_newno02) THEN    
               IF NOT axci005_xcae002_chk(l_newno,l_newno02) THEN 
                  LET l_newno02 = ''
                  DISPLAY l_newno02 TO xcae002
                  NEXT FIELD xcae002
               END IF
            END IF]]>
  </point>
  <point name="show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF ARR_CURR() > g_xcae_d.getLength() THEN   #防止会有空白行
      LET l_ac = 1
   END IF
   IF l_ac < 1 OR cl_null(l_ac) THEN
      LET l_ac = 1
   END IF
   CALL axci005_xcaf_b_fill()
   CALL cl_show_fld_cont()]]>
  </point>
  <point name="show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   SELECT xcaestus INTO l_status FROM xcae_t 
    WHERE xcaeent = g_enterprise AND xcae001 = g_xcae_m.xcae001
      AND xcae002 = g_xcae_m.xcae002
   IF l_status = 'Y' THEN
      CALL cl_set_act_visible("modify,delete", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,delete", TRUE)
   END IF
   #SELECT DISTINCT imaal003,imaal004
   #  INTO g_xcae_m.imaal003,g_xcae_m.imaal004
   #  FROM imaal_t 
   # WHERE imaalent = g_enterprise 
   #   AND imaal001 = g_xcae_m.xcae002]]>
  </point>
  <point name="show.body3.reference" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_xcae_m.xcae001
   LET g_ref_fields[2] = g_xcae_m.xcae002
   LET g_ref_fields[3] = g_xcae_d[l_ac].xcaeseq
   LET g_ref_fields[4] = g_xcae3_d[l_ac].xcafseq2
   CALL ap_ref_array2(g_ref_fields," SELECT mrba004,mrba010,mrba024 FROM mrba_t WHERE mrbaent = '"||g_enterprise||"' AND mrbasite = ? AND mrba001 = ? ","") RETURNING g_rtn_fields 
   LET g_xcae3_d[l_ac].mrba004 = g_rtn_fields[1] 
   LET g_xcae3_d[l_ac].mrba010 = g_rtn_fields[2] 
   LET g_xcae3_d[l_ac].mrba024 = g_rtn_fields[3] 
   DISPLAY BY NAME g_xcae3_d[l_ac].mrba004,g_xcae3_d[l_ac].mrba010,g_xcae3_d[l_ac].mrba024]]>
  </point>
  <point name="show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_status   LIKE xcae_t.xcaestus  ]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcae_m.xcae002
   CALL ap_ref_array2(g_ref_fields," SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent = '"||g_enterprise||"' AND imaal001 = ? AND imaal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_xcae_m.imaal003 = g_rtn_fields[1] 
   LET g_xcae_m.imaal004 = g_rtn_fields[2] 
   DISPLAY g_xcae_m.imaal003,g_xcae_m.imaal004 TO imaal003,imaal004]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("modify,delete", TRUE)]]>
  </point>
  <point name="ui_dialog.before_dialog2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#            SELECT xcaestus INTO l_status FROM xcae_t WHERE xcaeent = g_enterprise AND xcae001 = g_xcae_m.xcae001
#            IF l_status = 'Y' THEN
#               CALL cl_set_act_visible("modify,delete", FALSE)
#            ELSE
#               CALL cl_set_act_visible("modify,delete", TRUE)
#            END IF]]>
  </point>
  <point name="ui_dialog.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL axci005_xcaf_b_fill()]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_status  LIKE xcae_t.xcaestus
   DEFINE l_success LIKE type_t.num5]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         DISPLAY ARRAY g_xcaf_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b2) 
    
            BEFORE ROW
               LET l_ac2 = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx2 = l_ac2
          
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx2)
               LET l_ac2 = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 1
               
         END DISPLAY]]>
  </point>
  <point name="ui_dialog.page1.action" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                LET g_current_page = 1]]>
  </point>
  <section id="axci005.b_fill" ver="17" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION axci005_b_fill(p_wc2)
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   #先清空單身變數內容
   CALL g_xcae_d.clear()
   CALL g_xcae2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   LET g_sql = "SELECT  UNIQUE xcaeseq,xcae003,xcae004,xcae005,xcae006,xcaestus,xcaeseq,xcaeownid,xcaeowndp, 
       xcaecrtid,xcaecrtdp,xcaecrtdt,xcaemodid,xcaemoddt,t1.ooag011 ,t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 , 
       t5.ooag011 FROM xcae_t",   
               "",
               
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=xcaeownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=xcaeowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=xcaecrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=xcaecrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=xcaemodid  ",
 
               " WHERE xcaeent= ? AND xcae001=? AND xcae002=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("xcae_t")
   END IF
   
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axci005_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY xcae_t.xcaeseq"
      
      #add-point:b_fill段fill_before
      {<point name="b_fill.fill_before"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE axci005_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR axci005_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xcae_m.xcae001,g_xcae_m.xcae002
                                               
      FOREACH b_fill_cs INTO g_xcae_d[l_ac].xcaeseq,g_xcae_d[l_ac].xcae003,g_xcae_d[l_ac].xcae004,g_xcae_d[l_ac].xcae005, 
          g_xcae_d[l_ac].xcae006,g_xcae_d[l_ac].xcaestus,g_xcae2_d[l_ac].xcaeseq,g_xcae2_d[l_ac].xcaeownid, 
          g_xcae2_d[l_ac].xcaeowndp,g_xcae2_d[l_ac].xcaecrtid,g_xcae2_d[l_ac].xcaecrtdp,g_xcae2_d[l_ac].xcaecrtdt, 
          g_xcae2_d[l_ac].xcaemodid,g_xcae2_d[l_ac].xcaemoddt,g_xcae2_d[l_ac].xcaeownid_desc,g_xcae2_d[l_ac].xcaeowndp_desc, 
          g_xcae2_d[l_ac].xcaecrtid_desc,g_xcae2_d[l_ac].xcaecrtdp_desc,g_xcae2_d[l_ac].xcaemodid_desc 

                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         #帶出公用欄位reference值
         
         
         
 
 
        
         #add-point:單身資料抓取
         {<point name="bfill.foreach"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      
            CALL g_xcae_d.deleteElement(g_xcae_d.getLength())
      CALL g_xcae2_d.deleteElement(g_xcae2_d.getLength())
 
   END IF
   
   #add-point:b_fill段more
   {<point name="b_fill.more"/>}
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE axci005_pb   
   
END FUNCTION
]]>
  </section>
  <section id="axci005.b_fill2" ver="4" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION axci005_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
]]>
  </section>
  <section id="axci005.before_delete" ver="3" status="" src="s">
    <![CDATA[#+ 單身db資料刪除
PRIVATE FUNCTION axci005_before_delete()
   #add-point:before_delete段define
   {<point name="before_delete.define"/>}
   #end add-point 
   
   #add-point:單筆刪除前
   {<point name="delete.body.b_single_delete" mark="Y"/>}
   #end add-point
   
   DELETE FROM xcae_t
    WHERE xcaeent = g_enterprise AND xcae001 = g_xcae_m.xcae001 AND
                              xcae002 = g_xcae_m.xcae002 AND
 
          xcaeseq = g_xcae_d_t.xcaeseq
 
      
   #add-point:單筆刪除中
   {<point name="delete.body.m_single_delete"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xcae_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後
   {<point name="delete.body.a_single_delete"/>}
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
]]>
  </section>
  <section id="axci005.browser_fill" ver="12" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axci005_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point    
   
   CALL g_browser.clear()
 
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "xcae001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF l_wc2 <> " 1=1" OR NOT cl_null(l_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xcae001 ",
                      ", xcae002 ",
 
                      " FROM xcae_t ",
                      " ",
                      " ",
 
                      " WHERE xcaeent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xcae_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xcae001 ",
                      ", xcae002 ",
 
                      " FROM xcae_t ",
                      " ",
                      " ",
                      " WHERE xcaeent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xcae_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
   
   #若超過最大顯示筆數
 
   LET g_error_show = 0
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照t0.xcae001,t0.xcae002 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT t0.xcae001,t0.xcae002",
                " FROM xcae_t t0",
 
                
                " WHERE t0.xcaeent = '" ||g_enterprise|| "' AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("xcae_t")
 
   #add-point:browser_fill,sql_rank前
   {<point name="browser_fill.before_sql_rank"/>}
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前
   {<point name="browser_fill.before_pre"/>}
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"xcae_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_xcae001,g_browser[g_cnt].b_xcae002 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point    
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_xcae_m.* TO NULL
      CALL g_xcae_d.clear()
      CALL g_xcae2_d.clear()
 
      #add-point:browser_fill段after_clear
      {<point name="browser_fill.after_clear"/>}
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="axci005.browser_search" ver="6" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axci005_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "searchcol" 
      LET g_errparam.code   = "std-00005" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1"
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY xcae001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL axci005_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="axci005.construct" ver="15" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION axci005_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_xcae_m.* TO NULL
   CALL g_xcae_d.clear()
   CALL g_xcae2_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外
   {<point name="cs.head.before"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xcae001,xcae002,xcae008,imaal003,imaal004
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
                 #Ctrlp:construct.c.xcae001
         ON ACTION controlp INFIELD xcae001
            #add-point:ON ACTION controlp INFIELD xcae001
            {<point name="construct.c.xcae001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcae001
            #add-point:BEFORE FIELD xcae001
            {<point name="construct.b.xcae001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcae001
            
            #add-point:AFTER FIELD xcae001
            {<point name="construct.a.xcae001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xcae002
         ON ACTION controlp INFIELD xcae002
            #add-point:ON ACTION controlp INFIELD xcae002
            {<point name="construct.c.xcae002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcae002
            #add-point:BEFORE FIELD xcae002
            {<point name="construct.b.xcae002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcae002
            
            #add-point:AFTER FIELD xcae002
            {<point name="construct.a.xcae002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xcae008
         ON ACTION controlp INFIELD xcae008
            #add-point:ON ACTION controlp INFIELD xcae008
            {<point name="construct.c.xcae008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcae008
            #add-point:BEFORE FIELD xcae008
            {<point name="construct.b.xcae008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcae008
            
            #add-point:AFTER FIELD xcae008
            {<point name="construct.a.xcae008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaal003
            #add-point:BEFORE FIELD imaal003
            {<point name="construct.b.imaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal003
            
            #add-point:AFTER FIELD imaal003
            {<point name="construct.a.imaal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaal003
         ON ACTION controlp INFIELD imaal003
            #add-point:ON ACTION controlp INFIELD imaal003
            {<point name="construct.c.imaal003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaal004
            #add-point:BEFORE FIELD imaal004
            {<point name="construct.b.imaal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal004
            
            #add-point:AFTER FIELD imaal004
            {<point name="construct.a.imaal004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaal004
         ON ACTION controlp INFIELD imaal004
            #add-point:ON ACTION controlp INFIELD imaal004
            {<point name="construct.c.imaal004" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON xcaeseq,xcae003,xcae004,oocql004_desc,xcae005,ecaa004,xcae006,xcaestus, 
          xcaeownid,xcaeowndp,xcaecrtid,xcaecrtdp,xcaecrtdt,xcaemodid,xcaemoddt
           FROM s_detail1[1].xcaeseq,s_detail1[1].xcae003,s_detail1[1].xcae004,s_detail1[1].oocql004_desc, 
               s_detail1[1].xcae005,s_detail1[1].ecaa004,s_detail1[1].xcae006,s_detail1[1].xcaestus, 
               s_detail2[1].xcaeownid,s_detail2[1].xcaeowndp,s_detail2[1].xcaecrtid,s_detail2[1].xcaecrtdp, 
               s_detail2[1].xcaecrtdt,s_detail2[1].xcaemodid,s_detail2[1].xcaemoddt
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
         #單身公用欄位開窗相關處理
         #此段落由子樣板a11產生
         #共用欄位查詢處理
         ##----<<xcaecrtdt>>----
         AFTER FIELD xcaecrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xcaemoddt>>----
         AFTER FIELD xcaemoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xcaecnfdt>>----
         
         #----<<xcaepstdt>>----
 
 
           
         #單身一般欄位開窗相關處理
                  #此段落由子樣板a01產生
         BEFORE FIELD xcaeseq
            #add-point:BEFORE FIELD xcaeseq
            {<point name="construct.b.page1.xcaeseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcaeseq
            
            #add-point:AFTER FIELD xcaeseq
            {<point name="construct.a.page1.xcaeseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcaeseq
         ON ACTION controlp INFIELD xcaeseq
            #add-point:ON ACTION controlp INFIELD xcaeseq
            {<point name="construct.c.page1.xcaeseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcae003
            #add-point:BEFORE FIELD xcae003
            {<point name="construct.b.page1.xcae003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcae003
            
            #add-point:AFTER FIELD xcae003
            {<point name="construct.a.page1.xcae003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcae003
         ON ACTION controlp INFIELD xcae003
            #add-point:ON ACTION controlp INFIELD xcae003
            {<point name="construct.c.page1.xcae003" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xcae004
         ON ACTION controlp INFIELD xcae004
            #add-point:ON ACTION controlp INFIELD xcae004
            {<point name="construct.c.page1.xcae004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcae004
            #add-point:BEFORE FIELD xcae004
            {<point name="construct.b.page1.xcae004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcae004
            
            #add-point:AFTER FIELD xcae004
            {<point name="construct.a.page1.xcae004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocql004_desc
            #add-point:BEFORE FIELD oocql004_desc
            {<point name="construct.b.page1.oocql004_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocql004_desc
            
            #add-point:AFTER FIELD oocql004_desc
            {<point name="construct.a.page1.oocql004_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.oocql004_desc
         ON ACTION controlp INFIELD oocql004_desc
            #add-point:ON ACTION controlp INFIELD oocql004_desc
            {<point name="construct.c.page1.oocql004_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xcae005
         ON ACTION controlp INFIELD xcae005
            #add-point:ON ACTION controlp INFIELD xcae005
            {<point name="construct.c.page1.xcae005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcae005
            #add-point:BEFORE FIELD xcae005
            {<point name="construct.b.page1.xcae005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcae005
            
            #add-point:AFTER FIELD xcae005
            {<point name="construct.a.page1.xcae005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecaa004
            #add-point:BEFORE FIELD ecaa004
            {<point name="construct.b.page1.ecaa004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecaa004
            
            #add-point:AFTER FIELD ecaa004
            {<point name="construct.a.page1.ecaa004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecaa004
         ON ACTION controlp INFIELD ecaa004
            #add-point:ON ACTION controlp INFIELD ecaa004
            {<point name="construct.c.page1.ecaa004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcae006
            #add-point:BEFORE FIELD xcae006
            {<point name="construct.b.page1.xcae006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcae006
            
            #add-point:AFTER FIELD xcae006
            {<point name="construct.a.page1.xcae006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcae006
         ON ACTION controlp INFIELD xcae006
            #add-point:ON ACTION controlp INFIELD xcae006
            {<point name="construct.c.page1.xcae006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcaestus
            #add-point:BEFORE FIELD xcaestus
            {<point name="construct.b.page1.xcaestus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcaestus
            
            #add-point:AFTER FIELD xcaestus
            {<point name="construct.a.page1.xcaestus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcaestus
         ON ACTION controlp INFIELD xcaestus
            #add-point:ON ACTION controlp INFIELD xcaestus
            {<point name="construct.c.page1.xcaestus" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xcaeownid
         ON ACTION controlp INFIELD xcaeownid
            #add-point:ON ACTION controlp INFIELD xcaeownid
            {<point name="construct.c.page2.xcaeownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcaeownid
            #add-point:BEFORE FIELD xcaeownid
            {<point name="construct.b.page2.xcaeownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcaeownid
            
            #add-point:AFTER FIELD xcaeownid
            {<point name="construct.a.page2.xcaeownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcaeowndp
         ON ACTION controlp INFIELD xcaeowndp
            #add-point:ON ACTION controlp INFIELD xcaeowndp
            {<point name="construct.c.page2.xcaeowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcaeowndp
            #add-point:BEFORE FIELD xcaeowndp
            {<point name="construct.b.page2.xcaeowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcaeowndp
            
            #add-point:AFTER FIELD xcaeowndp
            {<point name="construct.a.page2.xcaeowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcaecrtid
         ON ACTION controlp INFIELD xcaecrtid
            #add-point:ON ACTION controlp INFIELD xcaecrtid
            {<point name="construct.c.page2.xcaecrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcaecrtid
            #add-point:BEFORE FIELD xcaecrtid
            {<point name="construct.b.page2.xcaecrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcaecrtid
            
            #add-point:AFTER FIELD xcaecrtid
            {<point name="construct.a.page2.xcaecrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcaecrtdp
         ON ACTION controlp INFIELD xcaecrtdp
            #add-point:ON ACTION controlp INFIELD xcaecrtdp
            {<point name="construct.c.page2.xcaecrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcaecrtdp
            #add-point:BEFORE FIELD xcaecrtdp
            {<point name="construct.b.page2.xcaecrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcaecrtdp
            
            #add-point:AFTER FIELD xcaecrtdp
            {<point name="construct.a.page2.xcaecrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcaecrtdt
            #add-point:BEFORE FIELD xcaecrtdt
            {<point name="construct.b.page2.xcaecrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xcaemodid
         ON ACTION controlp INFIELD xcaemodid
            #add-point:ON ACTION controlp INFIELD xcaemodid
            {<point name="construct.c.page2.xcaemodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcaemodid
            #add-point:BEFORE FIELD xcaemodid
            {<point name="construct.b.page2.xcaemodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcaemodid
            
            #add-point:AFTER FIELD xcaemodid
            {<point name="construct.a.page2.xcaemodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcaemoddt
            #add-point:BEFORE FIELD xcaemoddt
            {<point name="construct.b.page2.xcaemoddt" />}
            #END add-point
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog
         {<point name="cs.before_dialog"/>}
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
]]>
  </section>
  <section id="axci005.default_search" ver="7" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION axci005_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xcae001 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xcae002 = '", g_argv[02], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="axci005.delete" ver="10" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION axci005_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_xcae_m.xcae001 IS NULL
   OR g_xcae_m.xcae002 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
 
   EXECUTE axci005_master_referesh USING g_xcae_m.xcae001,g_xcae_m.xcae002 INTO g_xcae_m.xcae001,g_xcae_m.xcae002, 
       g_xcae_m.xcae008
   
   CALL axci005_show()
   
   CALL s_transaction_begin()
   
   
 
   OPEN axci005_cl USING g_enterprise,g_xcae_m.xcae001
                                                       ,g_xcae_m.xcae002
 
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axci005_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      CLOSE axci005_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH axci005_cl INTO g_xcae_m.xcae001,g_xcae_m.xcae002,g_xcae_m.xcae008,g_xcae_m.imaal003,g_xcae_m.imaal004 

   
   #若資料已被他人LOCK
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_xcae_m.xcae001 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL axci005_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM xcae_t WHERE xcaeent = g_enterprise AND xcae001 = g_xcae_m.xcae001
                                                               AND xcae002 = g_xcae_m.xcae002
 
                                                               
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xcae_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
      END IF
 
      
  
      #add-point:單身刪除後 
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
 
      
      CLEAR FORM
      CALL g_xcae_d.clear() 
      CALL g_xcae2_d.clear()       
 
     
      CALL axci005_ui_browser_refresh()  
      CALL axci005_ui_headershow()  
      CALL axci005_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axci005_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         LET g_wc2 = " 1=1"
         CALL axci005_browser_fill("F")
      END IF
       
   END IF
 
   CLOSE axci005_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_xcae_m.xcae001,'D')
    
END FUNCTION
]]>
  </section>
  <section id="axci005.delete_b" ver="4" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION axci005_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
 
   
END FUNCTION
]]>
  </section>
  <section id="axci005.description" ver="111" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000336
#+ 
#+ Filename...: axci005
#+ Description: 成本工藝路線維護作業
#+ Creator....: 02114(2013/09/12)
#+ Modifier...: 02291(2014/01/06) -SD/PR-
#+ Buildtype..: 應用 i07 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="axci005.detail_reproduce" ver="6" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION axci005_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xcae_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axci005_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axci005_detail AS ",
                "SELECT * FROM xcae_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axci005_detail SELECT * FROM xcae_t 
                                         WHERE xcaeent = g_enterprise AND xcae001 = g_xcae001_t
                                         AND xcae002 = g_xcae002_t
 
   
   #將key修正為調整後   
   UPDATE axci005_detail 
      #更新key欄位
      SET xcae001 = g_xcae_m.xcae001
          , xcae002 = g_xcae_m.xcae002
 
      #更新共用欄位
      #此段落由子樣板a13產生
       , xcaeownid = g_user
       , xcaeowndp = g_dept
       , xcaecrtid = g_user
       , xcaecrtdp = g_dept 
       , xcaecrtdt = ld_date
       , xcaemodid = "" 
       , xcaemoddt = "" 
      #, xcaestus = "Y"
 
 
                                       
  
   #將資料塞回原table   
   INSERT INTO xcae_t SELECT * FROM axci005_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axci005_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xcae001_t = g_xcae_m.xcae001
   LET g_xcae002_t = g_xcae_m.xcae002
 
   
   DROP TABLE axci005_detail
   
END FUNCTION
]]>
  </section>
  <section id="axci005.detail_show" ver="1" status="" src="s">
    <![CDATA[#+ 單身reference detail_show
PRIVATE FUNCTION axci005_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="axci005.fetch" ver="11" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axci005_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   #add-point:fetch段動作開始前
   {<point name="fetch.before_fetch"/>}
   #end add-point    
 
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   CALL axci005_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xcae_m.xcae001 = g_browser[g_current_idx].b_xcae001
   LET g_xcae_m.xcae002 = g_browser[g_current_idx].b_xcae002
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axci005_master_referesh USING g_xcae_m.xcae001,g_xcae_m.xcae002 INTO g_xcae_m.xcae001,g_xcae_m.xcae002, 
       g_xcae_m.xcae008
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xcae_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      INITIALIZE g_xcae_m.* TO NULL
      RETURN
   END IF
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #保存單頭舊值
   LET g_xcae_m_t.* = g_xcae_m.*
   LET g_xcae_m_o.* = g_xcae_m.*
   
   #重新顯示   
   CALL axci005_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="axci005.fill_chk" ver="4" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION axci005_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   
   #add-point:fill_chk段other
   {<point name="fill_chk.other"/>}
   #end add-point
   
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="axci005.filter" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION axci005_filter()
 
 
 
 
 
 
 
 
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
 
 
   
 
 
END FUNCTION
]]>
  </section>
  <section id="axci005.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION axci005_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="axci005.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
 
 
 
 
]]>
  </section>
  <section id="axci005.global" ver="18" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xcae_m        RECORD
       xcae001 LIKE xcae_t.xcae001, 
   xcae002 LIKE xcae_t.xcae002, 
   xcae008 LIKE xcae_t.xcae008, 
   imaal003 LIKE type_t.chr80, 
   imaal004 LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xcae_d        RECORD
       xcaeseq LIKE xcae_t.xcaeseq, 
   xcae003 LIKE xcae_t.xcae003, 
   xcae004 LIKE xcae_t.xcae004, 
   oocql004_desc LIKE type_t.chr500, 
   xcae005 LIKE xcae_t.xcae005, 
   ecaa002 LIKE type_t.chr80, 
   ecaa004 LIKE type_t.chr80, 
   xcae006 LIKE xcae_t.xcae006, 
   xcaestus LIKE xcae_t.xcaestus
       END RECORD
PRIVATE TYPE type_g_xcae2_d RECORD
       xcaeseq LIKE xcae_t.xcaeseq, 
   xcaeownid LIKE xcae_t.xcaeownid, 
   xcaeownid_desc LIKE type_t.chr500, 
   xcaeowndp LIKE xcae_t.xcaeowndp, 
   xcaeowndp_desc LIKE type_t.chr500, 
   xcaecrtid LIKE xcae_t.xcaecrtid, 
   xcaecrtid_desc LIKE type_t.chr500, 
   xcaecrtdp LIKE xcae_t.xcaecrtdp, 
   xcaecrtdp_desc LIKE type_t.chr500, 
   xcaecrtdt DATETIME YEAR TO SECOND, 
   xcaemodid LIKE xcae_t.xcaemodid, 
   xcaemodid_desc LIKE type_t.chr500, 
   xcaemoddt DATETIME YEAR TO SECOND
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_xcae_m          type_g_xcae_m
DEFINE g_xcae_m_t        type_g_xcae_m
DEFINE g_xcae_m_o        type_g_xcae_m
 
   DEFINE g_xcae001_t LIKE xcae_t.xcae001
DEFINE g_xcae002_t LIKE xcae_t.xcae002
 
 
DEFINE g_xcae_d          DYNAMIC ARRAY OF type_g_xcae_d
DEFINE g_xcae_d_t        type_g_xcae_d
DEFINE g_xcae_d_o        type_g_xcae_d
DEFINE g_xcae2_d   DYNAMIC ARRAY OF type_g_xcae2_d
DEFINE g_xcae2_d_t type_g_xcae2_d
DEFINE g_xcae2_d_o type_g_xcae2_d
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_xcae001 LIKE xcae_t.xcae001,
      b_xcae002 LIKE xcae_t.xcae002
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="axci005.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION axci005_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xcae_d.getLength() THEN
         LET g_detail_idx = g_xcae_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xcae_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xcae_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_xcae2_d.getLength() THEN
         LET g_detail_idx = g_xcae2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xcae2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xcae2_d.getLength() TO FORMONLY.cnt
   END IF
 
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_xcae3_d.getLength() THEN
         LET g_detail_idx = g_xcae3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xcae3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xcae3_d.getLength() TO FORMONLY.cnt
   END IF
 
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="axci005.init" ver="4" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axci005_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
  
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL axci005_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="axci005.input" ver="8" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION axci005_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point    
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT xcaeseq,xcae003,xcae004,xcae005,xcae006,xcaestus,xcaeseq,xcaeownid,xcaeowndp, 
       xcaecrtid,xcaecrtdp,xcaecrtdt,xcaemodid,xcaemoddt FROM xcae_t WHERE xcaeent=? AND xcae001=? AND  
       xcae002=? AND xcaeseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axci005_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axci005_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL axci005_set_no_entry(p_cmd)
   #add-point:set_no_entry後
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_xcae_m.xcae001,g_xcae_m.xcae002,g_xcae_m.xcae008,g_xcae_m.imaal003,g_xcae_m.imaal004 

   
   LET lb_reproduce = FALSE
   
   #add-point:進入修改段前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="axci005.input.body" ver="14" status="" src="s">
    <![CDATA[      #Page1 預設值產生於此處
      INPUT ARRAY g_xcae_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcae_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axci005_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前
            {<point name="input.body.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axci005_cl USING g_enterprise,
                                               g_xcae_m.xcae001
                                               ,g_xcae_m.xcae002
 
                                               
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axci005_cl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CLOSE axci005_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_xcae_d[l_ac].xcaeseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xcae_d_t.* = g_xcae_d[l_ac].*  #BACKUP
               LET g_xcae_d_o.* = g_xcae_d[l_ac].*  #BACKUP
               CALL axci005_set_entry_b(l_cmd)
               #add-point:set_entry_b後
               {<point name="input.body.before_row.set_entry_b"/>}
               #end add-point
               CALL axci005_set_no_entry_b(l_cmd)
               OPEN axci005_bcl USING g_enterprise,g_xcae_m.xcae001,
                                                g_xcae_m.xcae002,
 
                                                g_xcae_d_t.xcaeseq
 
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axci005_bcl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axci005_bcl INTO g_xcae_d[l_ac].xcaeseq,g_xcae_d[l_ac].xcae003,g_xcae_d[l_ac].xcae004, 
                      g_xcae_d[l_ac].xcae005,g_xcae_d[l_ac].xcae006,g_xcae_d[l_ac].xcaestus,g_xcae2_d[l_ac].xcaeseq, 
                      g_xcae2_d[l_ac].xcaeownid,g_xcae2_d[l_ac].xcaeowndp,g_xcae2_d[l_ac].xcaecrtid, 
                      g_xcae2_d[l_ac].xcaecrtdp,g_xcae2_d[l_ac].xcaecrtdt,g_xcae2_d[l_ac].xcaemodid, 
                      g_xcae2_d[l_ac].xcaemoddt
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_xcae_d_t.xcaeseq 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
 
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axci005_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_xcae_d_t.* TO NULL
            INITIALIZE g_xcae_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xcae_d[l_ac].* TO NULL
            
            #公用欄位預設值
            #此段落由子樣板a14產生    
      #公用欄位新增給值
      LET g_xcae2_d[l_ac].xcaeownid = g_user
      LET g_xcae2_d[l_ac].xcaeowndp = g_dept
      LET g_xcae2_d[l_ac].xcaecrtid = g_user
      LET g_xcae2_d[l_ac].xcaecrtdp = g_dept 
      LET g_xcae2_d[l_ac].xcaecrtdt = cl_get_current()
      LET g_xcae2_d[l_ac].xcaemodid = ""
      LET g_xcae2_d[l_ac].xcaemoddt = ""
      LET g_xcae_d[l_ac].xcaestus = ""
 
  
            
            #一般欄位預設值
                  LET g_xcae_d[l_ac].xcae006 = "N"
      LET g_xcae_d[l_ac].xcaestus = "N"
 
            
            
            #add-point:modify段before備份
            {<point name="input.body.before_insert.before_bak"/>}
            #end add-point
            LET g_xcae_d_t.* = g_xcae_d[l_ac].*     #新輸入資料
            LET g_xcae_d_o.* = g_xcae_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axci005_set_entry_b(l_cmd)
            #add-point:set_entry_b後
            {<point name="input.body.before_insert.set_entry_b"/>}
            #end add-point
            CALL axci005_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xcae_d[li_reproduce_target].* = g_xcae_d[li_reproduce].*
               LET g_xcae2_d[li_reproduce_target].* = g_xcae2_d[li_reproduce].*
 
               LET g_xcae_d[g_xcae_d.getLength()].xcaeseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xcae_t 
             WHERE xcaeent = g_enterprise AND xcae001 = g_xcae_m.xcae001
               AND xcae002 = g_xcae_m.xcae002
 
               AND xcaeseq = g_xcae_d[l_ac].xcaeseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
               {<point name="input.body.b_insert" mark="Y"/>}
               #end add-point
               INSERT INTO xcae_t
                           (xcaeent,
                            xcae001,xcae002,xcae008,
                            xcaeseq
                            ,xcae003,xcae004,xcae005,xcae006,xcaestus,xcaeownid,xcaeowndp,xcaecrtid,xcaecrtdp,xcaecrtdt,xcaemodid,xcaemoddt) 
                     VALUES(g_enterprise,
                            g_xcae_m.xcae001,g_xcae_m.xcae002,g_xcae_m.xcae008,
                            g_xcae_d[l_ac].xcaeseq
                            ,g_xcae_d[l_ac].xcae003,g_xcae_d[l_ac].xcae004,g_xcae_d[l_ac].xcae005,g_xcae_d[l_ac].xcae006, 
                                g_xcae_d[l_ac].xcaestus,g_xcae2_d[l_ac].xcaeownid,g_xcae2_d[l_ac].xcaeowndp, 
                                g_xcae2_d[l_ac].xcaecrtid,g_xcae2_d[l_ac].xcaecrtdp,g_xcae2_d[l_ac].xcaecrtdt, 
                                g_xcae2_d[l_ac].xcaemodid,g_xcae2_d[l_ac].xcaemoddt)
               #add-point:單身新增中
               {<point name="input.body.m_insert"/>}
               #end add-point
               LET p_cmd = 'u'
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               INITIALIZE g_xcae_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcae_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後
            {<point name="input.body.after_insert"/>}
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前
               {<point name="input.body.b_delete"/>}
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CANCEL DELETE
               END IF
               IF axci005_before_delete() THEN 
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axci005_bcl
               LET l_count = g_xcae_d.getLength()
            END IF 
            
            #add-point:單身刪除後
            {<point name="input.body.a_delete"/>}
            #end add-point
              
         AFTER DELETE 
		    IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE 
               {<point name="input.body.after_delete"/>}
               #end add-point
			END IF
            #如果是最後一筆
            IF l_ac = (g_xcae_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
			
                  #此段落由子樣板a01產生
         BEFORE FIELD xcaeseq
            #add-point:BEFORE FIELD xcaeseq
            {<point name="input.b.page1.xcaeseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcaeseq
            
            #add-point:AFTER FIELD xcaeseq
            {<point name="input.a.page1.xcaeseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcaeseq
            #add-point:ON CHANGE xcaeseq
            {<point name="input.g.page1.xcaeseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcae003
            #add-point:BEFORE FIELD xcae003
            {<point name="input.b.page1.xcae003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcae003
            
            #add-point:AFTER FIELD xcae003
            {<point name="input.a.page1.xcae003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcae003
            #add-point:ON CHANGE xcae003
            {<point name="input.g.page1.xcae003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcae004
            #add-point:BEFORE FIELD xcae004
            {<point name="input.b.page1.xcae004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcae004
            
            #add-point:AFTER FIELD xcae004
            {<point name="input.a.page1.xcae004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcae004
            #add-point:ON CHANGE xcae004
            {<point name="input.g.page1.xcae004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocql004_desc
            #add-point:BEFORE FIELD oocql004_desc
            {<point name="input.b.page1.oocql004_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocql004_desc
            
            #add-point:AFTER FIELD oocql004_desc
            {<point name="input.a.page1.oocql004_desc" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocql004_desc
            #add-point:ON CHANGE oocql004_desc
            {<point name="input.g.page1.oocql004_desc" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcae005
            #add-point:BEFORE FIELD xcae005
            {<point name="input.b.page1.xcae005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcae005
            
            #add-point:AFTER FIELD xcae005
            {<point name="input.a.page1.xcae005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcae005
            #add-point:ON CHANGE xcae005
            {<point name="input.g.page1.xcae005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecaa004
            #add-point:BEFORE FIELD ecaa004
            {<point name="input.b.page1.ecaa004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecaa004
            
            #add-point:AFTER FIELD ecaa004
            {<point name="input.a.page1.ecaa004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecaa004
            #add-point:ON CHANGE ecaa004
            {<point name="input.g.page1.ecaa004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcae006
            #add-point:BEFORE FIELD xcae006
            {<point name="input.b.page1.xcae006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcae006
            
            #add-point:AFTER FIELD xcae006
            {<point name="input.a.page1.xcae006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcae006
            #add-point:ON CHANGE xcae006
            {<point name="input.g.page1.xcae006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcaestus
            #add-point:BEFORE FIELD xcaestus
            {<point name="input.b.page1.xcaestus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcaestus
            
            #add-point:AFTER FIELD xcaestus
            {<point name="input.a.page1.xcaestus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcaestus
            #add-point:ON CHANGE xcaestus
            {<point name="input.g.page1.xcaestus" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.xcaeseq
         ON ACTION controlp INFIELD xcaeseq
            #add-point:ON ACTION controlp INFIELD xcaeseq
            {<point name="input.c.page1.xcaeseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcae003
         ON ACTION controlp INFIELD xcae003
            #add-point:ON ACTION controlp INFIELD xcae003
            {<point name="input.c.page1.xcae003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcae004
         ON ACTION controlp INFIELD xcae004
            #add-point:ON ACTION controlp INFIELD xcae004
            {<point name="input.c.page1.xcae004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.oocql004_desc
         ON ACTION controlp INFIELD oocql004_desc
            #add-point:ON ACTION controlp INFIELD oocql004_desc
            {<point name="input.c.page1.oocql004_desc" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcae005
         ON ACTION controlp INFIELD xcae005
            #add-point:ON ACTION controlp INFIELD xcae005
            {<point name="input.c.page1.xcae005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecaa004
         ON ACTION controlp INFIELD ecaa004
            #add-point:ON ACTION controlp INFIELD ecaa004
            {<point name="input.c.page1.ecaa004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcae006
         ON ACTION controlp INFIELD xcae006
            #add-point:ON ACTION controlp INFIELD xcae006
            {<point name="input.c.page1.xcae006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcaestus
         ON ACTION controlp INFIELD xcaestus
            #add-point:ON ACTION controlp INFIELD xcaestus
            {<point name="input.c.page1.xcaestus" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               LET g_xcae_d[l_ac].* = g_xcae_d_t.*
               CLOSE axci005_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xcae_d[l_ac].xcaeseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               LET g_xcae_d[l_ac].* = g_xcae_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_xcae2_d[l_ac].xcaemodid = g_user 
LET g_xcae2_d[l_ac].xcaemoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
         
               UPDATE xcae_t SET (xcae001,xcae002,xcaeseq,xcae003,xcae004,xcae005,xcae006,xcaestus,xcaeownid, 
                   xcaeowndp,xcaecrtid,xcaecrtdp,xcaecrtdt,xcaemodid,xcaemoddt) = (g_xcae_m.xcae001, 
                   g_xcae_m.xcae002,g_xcae_d[l_ac].xcaeseq,g_xcae_d[l_ac].xcae003,g_xcae_d[l_ac].xcae004, 
                   g_xcae_d[l_ac].xcae005,g_xcae_d[l_ac].xcae006,g_xcae_d[l_ac].xcaestus,g_xcae2_d[l_ac].xcaeownid, 
                   g_xcae2_d[l_ac].xcaeowndp,g_xcae2_d[l_ac].xcaecrtid,g_xcae2_d[l_ac].xcaecrtdp,g_xcae2_d[l_ac].xcaecrtdt, 
                   g_xcae2_d[l_ac].xcaemodid,g_xcae2_d[l_ac].xcaemoddt)
                WHERE xcaeent = g_enterprise AND xcae001 = g_xcae_m.xcae001 
                 AND xcae002 = g_xcae_m.xcae002 
 
                 AND xcaeseq = g_xcae_d_t.xcaeseq #項次   
 
                 
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcae_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "xcae_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
 
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcae_m.xcae001
               LET gs_keys_bak[1] = g_xcae001_t
               LET gs_keys[2] = g_xcae_m.xcae002
               LET gs_keys_bak[2] = g_xcae002_t
               LET gs_keys[3] = g_xcae_d[g_detail_idx].xcaeseq
               LET gs_keys_bak[3] = g_xcae_d_t.xcaeseq
               CALL axci005_update_b('xcae_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_xcae_m),util.JSON.stringify(g_xcae_d_t)
                     LET g_log2 = util.JSON.stringify(g_xcae_m),util.JSON.stringify(g_xcae_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
            END IF
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xcae_d.getLength() = 0 THEN
               NEXT FIELD xcaeseq
            END IF
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xcae_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xcae_d.getLength()+1
            
      END INPUT
 
 
      
      DISPLAY ARRAY g_xcae2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
      
         BEFORE ROW
            CALL axci005_b_fill(g_wc2) 
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL axci005_ui_detailshow()
        
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)      
         
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
         
      END DISPLAY
 
      
 
      
      #add-point:input段more_input
      {<point name="input.more_inputarray"/>}
      #end add-point    
      
      BEFORE DIALOG
         #add-point:input段before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xcae001
        ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xcaeseq
               WHEN "s_detail2"
                  NEXT FIELD xcaeseq_2
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #add-point:input段after_input
   {<point name="input.after_input"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="axci005.input.head" ver="10" status="" src="s">
    <![CDATA[   
      #單頭段
      INPUT BY NAME g_xcae_m.xcae001,g_xcae_m.xcae002,g_xcae_m.xcae008,g_xcae_m.imaal003,g_xcae_m.imaal004  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前
            {<point name="input.head.b_input"/>}
            #end add-point
          
                  #此段落由子樣板a01產生
         BEFORE FIELD xcae001
            #add-point:BEFORE FIELD xcae001
            {<point name="input.b.xcae001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcae001
            
            #add-point:AFTER FIELD xcae001
            {<point name="input.a.xcae001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcae001
            #add-point:ON CHANGE xcae001
            {<point name="input.g.xcae001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcae002
            #add-point:BEFORE FIELD xcae002
            {<point name="input.b.xcae002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcae002
            
            #add-point:AFTER FIELD xcae002
            {<point name="input.a.xcae002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcae002
            #add-point:ON CHANGE xcae002
            {<point name="input.g.xcae002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcae008
            #add-point:BEFORE FIELD xcae008
            {<point name="input.b.xcae008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcae008
            
            #add-point:AFTER FIELD xcae008
            {<point name="input.a.xcae008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcae008
            #add-point:ON CHANGE xcae008
            {<point name="input.g.xcae008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaal003
            #add-point:BEFORE FIELD imaal003
            {<point name="input.b.imaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal003
            
            #add-point:AFTER FIELD imaal003
            {<point name="input.a.imaal003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imaal003
            #add-point:ON CHANGE imaal003
            {<point name="input.g.imaal003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaal004
            #add-point:BEFORE FIELD imaal004
            {<point name="input.b.imaal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal004
            
            #add-point:AFTER FIELD imaal004
            {<point name="input.a.imaal004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imaal004
            #add-point:ON CHANGE imaal004
            {<point name="input.g.imaal004" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.xcae001
         ON ACTION controlp INFIELD xcae001
            #add-point:ON ACTION controlp INFIELD xcae001
            {<point name="input.c.xcae001" />}
            #END add-point
 
         #Ctrlp:input.c.xcae002
         ON ACTION controlp INFIELD xcae002
            #add-point:ON ACTION controlp INFIELD xcae002
            {<point name="input.c.xcae002" />}
            #END add-point
 
         #Ctrlp:input.c.xcae008
         ON ACTION controlp INFIELD xcae008
            #add-point:ON ACTION controlp INFIELD xcae008
            {<point name="input.c.xcae008" />}
            #END add-point
 
         #Ctrlp:input.c.imaal003
         ON ACTION controlp INFIELD imaal003
            #add-point:ON ACTION controlp INFIELD imaal003
            {<point name="input.c.imaal003" />}
            #END add-point
 
         #Ctrlp:input.c.imaal004
         ON ACTION controlp INFIELD imaal004
            #add-point:ON ACTION controlp INFIELD imaal004
            {<point name="input.c.imaal004" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
 
            #多語言處理
            
                
            CALL cl_showmsg()
            DISPLAY BY NAME g_xcae_m.xcae001             
                            ,g_xcae_m.xcae002   
 
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
            
               UPDATE xcae_t SET (xcae001,xcae002,xcae008) = (g_xcae_m.xcae001,g_xcae_m.xcae002,g_xcae_m.xcae008) 

                WHERE xcaeent = g_enterprise AND xcae001 = g_xcae001_t
                  AND xcae002 = g_xcae002_t
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcae_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcae_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcae_m.xcae001
               LET gs_keys_bak[1] = g_xcae001_t
               LET gs_keys[2] = g_xcae_m.xcae002
               LET gs_keys_bak[2] = g_xcae002_t
               LET gs_keys[3] = g_xcae_d[g_detail_idx].xcaeseq
               LET gs_keys_bak[3] = g_xcae_d_t.xcaeseq
               CALL axci005_update_b('xcae_t',gs_keys,gs_keys_bak,"'1'")
                     
                     LET g_xcae001_t = g_xcae_m.xcae001
                     LET g_xcae002_t = g_xcae_m.xcae002
 
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     
                     LET g_log1 = util.JSON.stringify(g_xcae_m_t)
                     LET g_log2 = util.JSON.stringify(g_xcae_m)
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
               END CASE
            
            ELSE    
               #add-point:單頭新增
               {<point name="input.head.a_insert"/>}
               #end add-point
                                 
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axci005_detail_reproduce()
               END IF
            END IF
           #controlp
                     
           LET g_xcae001_t = g_xcae_m.xcae001
           LET g_xcae002_t = g_xcae_m.xcae002
 
           
           #若單身還沒有輸入資料, 強制切換至單身
           #IF cl_null(g_xcae_d[1].xcaeseq) THEN
           #   CALL g_xcae_d.deleteElement(1)
           #   NEXT FIELD xcaeseq
           #END IF
           
           IF g_xcae_d.getLength() = 0 THEN
              NEXT FIELD xcaeseq
           END IF
 
      END INPUT
]]>
  </section>
  <section id="axci005.input.other" ver="1" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xcae001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xcaeseq
               WHEN "s_detail2"
                  NEXT FIELD xcaeseq_2
 
               WHEN "s_detail3"
                  NEXT FIELD xcaf001
 
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="axci005.insert" ver="8" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION axci005_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_xcae_d.clear()
   CALL g_xcae2_d.clear()
 
 
   INITIALIZE g_xcae_m.* LIKE xcae_t.*             #DEFAULT 設定
   LET g_xcae001_t = NULL
   LET g_xcae002_t = NULL
 
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL axci005_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xcae_m.* = g_xcae_m_t.*
         CALL axci005_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         EXIT WHILE
      END IF
      
      CALL g_xcae_d.clear()
      CALL g_xcae2_d.clear()
 
      
      #add-point:單頭輸入後2
      {<point name="insert.after_insert2"/>}
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_xcae001_t = g_xcae_m.xcae001
   LET g_xcae002_t = g_xcae_m.xcae002
 
   
   LET g_wc = "(",g_wc,  
              " OR ( xcaeent = '" ||g_enterprise|| "' AND ",
              " xcae001 = '", g_xcae_m.xcae001 CLIPPED, "' "
              ," AND xcae002 = '", g_xcae_m.xcae002 CLIPPED, "' "
 
              , ")) "
   
END FUNCTION
]]>
  </section>
  <section id="axci005.insert_b" ver="4" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION axci005_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
 
   
END FUNCTION
]]>
  </section>
  <section id="axci005.lock_b" ver="4" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION axci005_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL axci005_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="axci005.main" ver="17" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT xcae001,xcae002,xcae008,'',''", 
                      " FROM xcae_t",
                      " WHERE xcaeent= ? AND xcae001=? AND xcae002=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axci005_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.xcae001,t0.xcae002,t0.xcae008",
               " FROM xcae_t t0",
               
               " WHERE t0.xcaeent = '" ||g_enterprise|| "' AND t0.xcae001 = ? AND t0.xcae002 = ?"
   #LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axci005_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axci005 WITH FORM cl_ap_formpath("axc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axci005_init()   
 
      #進入選單 Menu (="N")
      CALL axci005_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axci005
      
   END IF 
   
   CLOSE axci005_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="axci005.modify" ver="8" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION axci005_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_xcae_m.xcae001 IS NULL
   OR g_xcae_m.xcae002 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
   
   EXECUTE axci005_master_referesh USING g_xcae_m.xcae001,g_xcae_m.xcae002 INTO g_xcae_m.xcae001,g_xcae_m.xcae002, 
       g_xcae_m.xcae008
 
   ERROR ""
  
   LET g_xcae001_t = g_xcae_m.xcae001
   LET g_xcae002_t = g_xcae_m.xcae002
 
   CALL s_transaction_begin()
   
   OPEN axci005_cl USING g_enterprise,g_xcae_m.xcae001
                                                       ,g_xcae_m.xcae002
 
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axci005_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      CLOSE axci005_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH axci005_cl INTO g_xcae_m.xcae001,g_xcae_m.xcae002,g_xcae_m.xcae008,g_xcae_m.imaal003,g_xcae_m.imaal004 

 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_xcae_m.xcae001 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      CLOSE axci005_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   CALL s_transaction_end('Y','0')
 
   CALL axci005_show()
   WHILE TRUE
      LET g_xcae001_t = g_xcae_m.xcae001
      LET g_xcae002_t = g_xcae_m.xcae002
 
 
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL axci005_input("u")     #欄位更改
      
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xcae_m.* = g_xcae_m_t.*
         CALL axci005_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_xcae_m.xcae001 != g_xcae001_t 
      OR g_xcae_m.xcae002 != g_xcae002_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前
         {<point name="modify.b_key_update" mark="Y"/>}
         #end add-point
         
         #更新單頭key值
         UPDATE xcae_t SET xcae001 = g_xcae_m.xcae001
                                       , xcae002 = g_xcae_m.xcae002
 
          WHERE xcaeent = g_enterprise AND xcae001 = g_xcae001_t
            AND xcae002 = g_xcae002_t
 
         #add-point:單頭(偽)修改中
         {<point name="modify.m_key_update"/>}
         #end add-point
         
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcae_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcae_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
 
 
         
         #add-point:單頭(偽)修改後
         {<point name="modify.a_key_update"/>}
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_xcae_m.xcae001,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE axci005_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_xcae_m.xcae001,'U')
 
   CALL axci005_b_fill("1=1")
   
END FUNCTION   
]]>
  </section>
  <section id="axci005.modify_detail_chk" ver="3" status="" src="s">
    <![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION axci005_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "xcaeseq"
      WHEN "s_detail2"
         LET ls_return = "xcaeseq_2"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="axci005.other_function" ver="3" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="axci005.query" ver="10" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axci005_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #add-point:query開始前
   {<point name="query.befroe_query"/>}
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xcae_d.clear()
   CALL g_xcae2_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axci005_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL axci005_browser_fill(g_wc)
      CALL axci005_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL axci005_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   ELSE
      CALL axci005_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION
]]>
  </section>
  <section id="axci005.ref_show" ver="5" status="" src="s">
    <![CDATA[#+ 帶出reference資料
PRIVATE FUNCTION axci005_ref_show()
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define
   {<point name="ref_show.define"/>}
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference
   {<point name="ref_show.head.reference"/>}
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xcae_d.getLength()
      #add-point:ref_show段d_reference
      {<point name="ref_show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xcae2_d.getLength()
      #add-point:ref_show段d2_reference
      {<point name="ref_show.body2.reference"/>}
      #end add-point
   END FOR
 
   
   #add-point:ref_show段自訂
   {<point name="ref_show.other_reference"/>}
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION
]]>
  </section>
  <section id="axci005.reproduce" ver="10" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION axci005_reproduce()
   DEFINE l_newno     LIKE xcae_t.xcae001 
   DEFINE l_oldno     LIKE xcae_t.xcae001 
   DEFINE l_newno02     LIKE xcae_t.xcae002 
   DEFINE l_oldno02     LIKE xcae_t.xcae002 
 
   DEFINE l_master    RECORD LIKE xcae_t.*
   DEFINE l_detail    RECORD LIKE xcae_t.*
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_xcae_m.xcae001 IS NULL
      OR g_xcae_m.xcae002 IS NULL
 
      THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
   
   LET g_xcae001_t = g_xcae_m.xcae001
   LET g_xcae002_t = g_xcae_m.xcae002
 
   
   LET g_xcae_m.xcae001 = ""
   LET g_xcae_m.xcae002 = ""
 
    
   CALL axci005_set_entry('a')
   CALL axci005_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL axci005_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_xcae001_t = g_xcae_m.xcae001
   LET g_xcae002_t = g_xcae_m.xcae002
 
   
   LET g_wc = "(", g_wc,  
              " OR (",
              " xcae001 = '", g_xcae_m.xcae001 CLIPPED, "' "
              ," AND xcae002 = '", g_xcae_m.xcae002 CLIPPED, "' "
 
              , ")) "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="axci005.set_entry" ver="4" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION axci005_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xcae001,xcae002",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="axci005.set_entry_b" ver="4" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION axci005_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="axci005.set_no_entry" ver="5" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION axci005_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xcae001,xcae002",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="axci005.set_no_entry_b" ver="4" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION axci005_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b段"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="axci005.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION axci005_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xcae_m.xcae001
   LET g_pk_array[1].column = 'xcae001'
   LET g_pk_array[2].values = g_xcae_m.xcae002
   LET g_pk_array[2].column = 'xcae002'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="axci005.show" ver="7" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axci005_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL axci005_b_fill(g_wc2) #單身填充
      CALL axci005_b_fill2('0') #單身填充
   END IF
   
   
 
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL axci005_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   DISPLAY BY NAME g_xcae_m.xcae001,g_xcae_m.xcae002,g_xcae_m.xcae008,g_xcae_m.imaal003,g_xcae_m.imaal004 

   CALL axci005_b_fill(g_wc2_table1)                 #單身
   CALL axci005_b_fill2('0') #單身填充
 
   CALL axci005_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point   
   
END FUNCTION
]]>
  </section>
  <section id="axci005.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="axci005.state_change" ver="3" status="" src="s">
    <![CDATA[    
]]>
  </section>
  <section id="axci005.ui_browser_refresh" ver="5" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axci005_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xcae001 = g_xcae_m.xcae001 
         AND g_browser[l_i].b_xcae002 = g_xcae_m.xcae002 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="axci005.ui_detailshow" ver="4" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION axci005_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
      #add-point:ui_detailshow段more
      {<point name="ui_detailshow.more"/>}
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="axci005.ui_dialog" ver="26" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION axci005_ui_dialog()
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point  
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL axci005_browser_fill("")
 
      
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_xcae001 = g_xcae001_t
               AND g_browser[li_idx].b_xcae002 = g_xcae002_t
 
               THEN
               LET g_current_row = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
      
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_xcae_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL axci005_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_xcae2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL axci005_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)      
            
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axci005_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axci005_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         
         
         ON ACTION first
            CALL axci005_fetch('F')
            LET g_current_row = g_current_idx         
          
         ON ACTION previous
            CALL axci005_fetch('P')
            LET g_current_row = g_current_idx
          
         ON ACTION jump
            CALL axci005_fetch('/')
            LET g_current_row = g_current_idx
        
         ON ACTION next
            CALL axci005_fetch('N')
            LET g_current_row = g_current_idx
         
         ON ACTION last
            CALL axci005_fetch('L')
            LET g_current_row = g_current_idx
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xcaeseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axci005_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axci005_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CLEAR FORM
               ELSE
                  CALL axci005_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axci005_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axci005_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axci005_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axci005_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_axci005_01
            LET g_action_choice="open_axci005_01"
            IF cl_auth_chk_act("open_axci005_01") THEN
               
               #add-point:ON ACTION open_axci005_01
               {<point name="menu.open_axci005_01" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_confirm
            LET g_action_choice="open_confirm"
            IF cl_auth_chk_act("open_confirm") THEN
               
               #add-point:ON ACTION open_confirm
               {<point name="menu.open_confirm" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_unconfirm
            LET g_action_choice="open_unconfirm"
            IF cl_auth_chk_act("open_unconfirm") THEN
               
               #add-point:ON ACTION open_unconfirm
               {<point name="menu.open_unconfirm" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axci005_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axci005_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL axci005_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axci005_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axci005_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
]]>
  </section>
  <section id="axci005.ui_headershow" ver="6" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION axci005_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_xcae_m.xcae001 = g_browser[g_current_idx].b_xcae001   
   LET g_xcae_m.xcae002 = g_browser[g_current_idx].b_xcae002   
 
   EXECUTE axci005_master_referesh USING g_xcae_m.xcae001,g_xcae_m.xcae002 INTO g_xcae_m.xcae001,g_xcae_m.xcae002, 
       g_xcae_m.xcae008
   CALL axci005_show()
   
END FUNCTION
]]>
  </section>
  <section id="axci005.unlock_b" ver="4" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axci005_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
 
 
END FUNCTION
]]>
  </section>
  <section id="axci005.update_b" ver="4" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION axci005_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
 
   
END FUNCTION
]]>
  </section>
</add_points>
