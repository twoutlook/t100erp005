<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="axcq100" std_prog="axcq100" erpver="1.0" module="AXC" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="construct.c.page1.b_imag001" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_imag001  #顯示到畫面上

            NEXT FIELD b_imag001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.b_imag011" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imag011_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_imag011  #顯示到畫面上

            NEXT FIELD b_imag011                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.b_imag013" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imag013()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_imag013  #顯示到畫面上

            NEXT FIELD b_imag013                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.b_imag014" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imag014()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_imag014  #顯示到畫面上

            NEXT FIELD b_imag014                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.b_imagsite" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_imagsite  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO ooefl003 #說明(簡稱) 

            NEXT FIELD b_imagsite                     #返回原欄位

]]>
  </point>
  <point name="detail_show.body.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL cl_set_comp_visible("sel",FALSE)            
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_imag_d[l_ac].imagsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_imag_d[l_ac].imagsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_imag_d[l_ac].imagsite_desc

            CALL s_desc_get_item_desc(g_imag_d[l_ac].imag001) RETURNING l_imaal003,l_imaal004
            LET g_imag_d[l_ac].imag001_desc = l_imaal003
            DISPLAY g_imag_d[l_ac].imag001_desc TO b_imag001_desc

            CALL s_desc_get_item_desc(g_imag_d[l_ac].imag013) RETURNING l_imaal003_1,l_imaal004_1
            LET g_imag_d[l_ac].imag013_desc = l_imaal003_1
            DISPLAY g_imag_d[l_ac].imag013_desc TO b_imag013_desc


]]>
  </point>
  <point name="function.axcq100_clear_qbe" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 查询
# Memo...........:
# Usage..........: CALL axcq100_clear_qbe()
# Input parameter:  
#                :  
# Return code....: 
#                :  
# Date & Author..: 2014/3/13 By 01531
# Modify.........:
################################################################################
PRIVATE FUNCTION axcq100_clear_qbe()
   {<Local define>}
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   {</Local define>}
   #add-point:query段define
   
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_imag_d.clear()
   LET g_wc_filter = " 1=1"
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
   
   LET g_qryparam.state = "c"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   
   #wc備份
   LET ls_wc = g_wc
   LET g_master_idx = l_ac
 
   # 有做串查功能，查詢時顯示欄位需隱藏
   
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單身根據table分拆construct
      CONSTRUCT g_wc_table ON imagsite,imag001,imag011,imag013,imag014,imag015
           FROM s_detail1[1].b_imagsite,s_detail1[1].b_imag001,s_detail1[1].b_imag011,s_detail1[1].b_imag013, 
               s_detail1[1].b_imag014,s_detail1[1].b_imag015
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
      
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<imagsite>>----
         #Ctrlp:construct.c.page1.imagsite
         ON ACTION controlp INFIELD b_imagsite
            #add-point:ON ACTION controlp INFIELD imagsite
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_imagsite  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO ooefl003 #說明(簡稱) 

            NEXT FIELD b_imagsite                     #返回原欄位


            #END add-point
 
         #----<<imag001>>----
         #Ctrlp:construct.c.page1.imag001
         ON ACTION controlp INFIELD b_imag001
            #add-point:ON ACTION controlp INFIELD imag001
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imag001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_imag001  #顯示到畫面上

            NEXT FIELD b_imag001                     #返回原欄位


            #END add-point
 
         #----<<imag011>>----
         #Ctrlp:construct.c.page1.imag011
         ON ACTION controlp INFIELD b_imag011
            #add-point:ON ACTION controlp INFIELD imag011
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imag011_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_imag011  #顯示到畫面上

            NEXT FIELD b_imag011                     #返回原欄位


            #END add-point
 
         #----<<imag013>>----
         #Ctrlp:construct.c.page1.imag013
         ON ACTION controlp INFIELD b_imag013
            #add-point:ON ACTION controlp INFIELD imag013
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imag013()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_imag013  #顯示到畫面上

            NEXT FIELD b_imag013                     #返回原欄位


            #END add-point
 
         #----<<imag014>>----
         #Ctrlp:construct.c.page1.imag014
         ON ACTION controlp INFIELD b_imag014
            #add-point:ON ACTION controlp INFIELD imag014
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imag014()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_imag014  #顯示到畫面上

            NEXT FIELD b_imag014                     #返回原欄位


            #END add-point
 
         #----<<imag015>>----
         #Ctrlp:construct.c.page1.imag015
         ON ACTION controlp INFIELD imag015
            #add-point:ON ACTION controlp INFIELD imag015

            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
  
      #add-point:query段more_construct

      #end add-point 
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   # 若有做串查功能，下完查詢條件後，要將顯示欄位開啟
   
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc = ls_wc
   ELSE
      LET g_master_idx = 1
   END IF
   
   LET g_wc = g_wc_table 
 
 
        
   LET g_wc2 = " 1=1"
 
        
   #add-point:cs段after_construct

   #end add-point
        
   LET g_error_show = 1
   CALL axcq100_b_fill()
   LET l_ac = g_master_idx
   CALL axcq100_fetch()
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   CALL cl_set_act_visible("selall,selnone,sel,unsel",FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
END FUNCTION]]>
  </point>
  <point name="function.axcq100_ui_dialog_1" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: display dialog
# Memo...........:
# Usage..........: CALL axcq100_ui_dialog_1()
# Input parameter:  
# Return code....:  
# Date & Author..: 2014/3/17 By 01531
# Modify.........:
################################################################################
PRIVATE FUNCTION axcq100_ui_dialog_1()
{<Local define>}
   DEFINE li_idx   LIKE type_t.num5
   {</Local define>}
   #add-point:ui_dialog段define

   #end add-point 
 
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   #add-point:ui_dialog段before dialog 
   CALL cl_set_act_visible("selall,selnone,sel,unsel",FALSE)
   CALL axcq100_b_fill()
   #end add-point

   WHILE TRUE
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_imag_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               CALL cl_set_act_visible("selall,selnone,sel,unsel",FALSE)
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_imag_d.getLength() TO FORMONLY.h_count
               LET g_master_idx = l_ac
               CALL axcq100_fetch()
               #add-point:input段before row
               DISPLAY g_detail_idx TO FORMONLY.idx
               DISPLAY g_imag_d.getLength() TO FORMONLY.cnt
               #end add-point  
            
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
 
         
 
      
         #add-point:ui_dialog段define

         #end add-point
         
         BEFORE DIALOG      
            CALL DIALOG.setSelectionMode("s_detail1", 1)
 
            #add-point:ui_dialog段before dialog

            #end add-point
 
            NEXT FIELD sel
      
         
 
         ON ACTION datainfo
 
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN 
               #add-point:ON ACTION datainfo

               #END add-point
               EXIT DIALOG
            END IF
 
 
#         ON ACTION insert
# 
#            LET g_action_choice="insert"
#            IF cl_auth_chk_act("insert") THEN 
#               CALL axcq100_insert()
#               #add-point:ON ACTION insert
#
#               #END add-point
#               EXIT DIALOG
#            END IF
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output

               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
 
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL axcq100_query()
               #add-point:ON ACTION query

               #END add-point
            END IF
 
      
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_imag_d.getLength()
               LET g_imag_d[li_idx].sel = "Y"
            END FOR
 
            #add-point:ui_dialog段on action selall

            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_imag_d.getLength()
               LET g_imag_d[li_idx].sel = "N"
            END FOR
 
            #add-point:ui_dialog段on action selnone

            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_imag_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_imag_d[li_idx].sel = "Y"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action sel

            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_imag_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_imag_d[li_idx].sel = "N"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action unsel

            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL axcq100_filter()
            #add-point:ON ACTION filter

            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         # 重新整理
         ON ACTION datarefresh
            LET g_error_show = 1
            CALL axcq100_b_fill()
            CALL axcq100_fetch()
            
         
      
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
END FUNCTION]]>
  </point>
  <point name="construct.c.page1.imag001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imag001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imag001  #顯示到畫面上

            NEXT FIELD imag001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.imag011" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imag011()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imag011  #顯示到畫面上

            NEXT FIELD imag011                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.imag013" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imag013()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imag013  #顯示到畫面上

            NEXT FIELD imag013                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.imag014" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imag014()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imag014  #顯示到畫面上

            NEXT FIELD imag014                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.imagsite" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imagsite  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO ooefl003 #說明(簡稱) 

            NEXT FIELD imagsite                     #返回原欄位

]]>
  </point>
  <point name="cs.head.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="detail_show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_imaal003 LIKE imaal_t.imaal003
   DEFINE l_imaal004 LIKE imaal_t.imaal004
   DEFINE l_imaal003_1 LIKE imaal_t.imaal003
   DEFINE l_imaal004_1 LIKE imaal_t.imaal004]]>
  </point>
  <point name="detail_show.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_imag_d[l_ac].imagsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_imag_d[l_ac].imagsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_imag_d[l_ac].imagsite_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_imag_d[l_ac].imag001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_imag_d[l_ac].imag001_desc = '', g_rtn_fields[1] , ''
            DISPLAY g_imag_d[l_ac].imag001_desc TO imaal003

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_imag_d[l_ac].imag013
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_imag_d[l_ac].imag013_desc = '', g_rtn_fields[1] , ''
            DISPLAY g_imag_d[l_ac].imag013_desc TO imaal003_1
]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc('b_imag015','8907')
   CALL cl_set_act_visible("selall,selnone,sel,unsel",FALSE)]]>
  </point>
  <point name="input.a.page1.imag001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_imag_d[g_detail_idx].imagsite IS NOT NULL AND g_imag_d[g_detail_idx].imag001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_imag_d[g_detail_idx].imagsite != g_imag_d_t.imagsite OR g_imag_d[g_detail_idx].imag001 != g_imag_d_t.imag001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM imag_t WHERE "||"imagent = '" ||g_enterprise|| "' AND "||"imagsite = '"||g_imag_d[g_detail_idx].imagsite ||"' AND "|| "imag001 = '"||g_imag_d[g_detail_idx].imag001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.imag013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_imag_d[l_ac].imag013
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_imag_d[l_ac].imag013_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_imag_d[l_ac].imag013_desc
]]>
  </point>
  <point name="input.a.page1.imagsite" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_imag_d[g_detail_idx].imagsite IS NOT NULL AND g_imag_d[g_detail_idx].imag001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_imag_d[g_detail_idx].imagsite != g_imag_d_t.imagsite OR g_imag_d[g_detail_idx].imag001 != g_imag_d_t.imag001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM imag_t WHERE "||"imagent = '" ||g_enterprise|| "' AND "||"imagsite = '"||g_imag_d[g_detail_idx].imagsite ||"' AND "|| "imag001 = '"||g_imag_d[g_detail_idx].imag001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.imag001_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_imag2_d[g_detail_idx].imagsite IS NOT NULL AND g_imag2_d[g_detail_idx].imag001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_imag2_d[g_detail_idx].imagsite != g_imag2_d_t.imagsite OR g_imag2_d[g_detail_idx].imag001 != g_imag2_d_t.imag001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM imag_t WHERE "||"imagent = '" ||g_enterprise|| "' AND "||"imagsite = '"||g_imag2_d[g_detail_idx].imagsite ||"' AND "|| "imag001 = '"||g_imag2_d[g_detail_idx].imag001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.imagsite_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_imag2_d[g_detail_idx].imagsite IS NOT NULL AND g_imag2_d[g_detail_idx].imag001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_imag2_d[g_detail_idx].imagsite != g_imag2_d_t.imagsite OR g_imag2_d[g_detail_idx].imag001 != g_imag2_d_t.imag001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM imag_t WHERE "||"imagent = '" ||g_enterprise|| "' AND "||"imagsite = '"||g_imag2_d[g_detail_idx].imagsite ||"' AND "|| "imag001 = '"||g_imag2_d[g_detail_idx].imag001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               DISPLAY g_detail_idx TO FORMONLY.idx
               DISPLAY g_imag_d.getLength() TO FORMONLY.cnt]]>
  </point>
  <point name="query.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL axcq100_clear_qbe()
   RETURN]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_imag_d[l_ac].imagsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_imag_d[l_ac].imagsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_imag_d[l_ac].imagsite_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_imag_d[l_ac].imag001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaa001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_imag_d[l_ac].imag001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_imag_d[l_ac].imag001_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_imag_d[l_ac].imag013
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_imag_d[l_ac].imag013_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_imag_d[l_ac].imag013_desc
]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("selall,selnone,sel,unsel",FALSE)
   CALL axcq100_ui_dialog_1()    #此作业希望查询并显示所有的资料，不需要进入查询界面
   RETURN]]>
  </point>
  <section id="axcq100.b_fill" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION axcq100_b_fill(p_wc2)              #BODY FILL UP
   {<Local define>}
   DEFINE p_wc2           STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE imagsite,'',imag001,'',imag011,imag013,'',imag014,imag015,'',imagownid, 
       '',imagowndp,'',imagcrtid,'',imagcrtdp,'',imagcrtdt,imagmodid,'',imagmoddt,imagcnfid,'',imagcnfdt FROM imag_t", 

               "",
               " WHERE imagent= ? AND 1=1 AND ", p_wc2
    
   LET g_sql = g_sql, " ORDER BY imag_t.imagsite,imag_t.imag001"
  
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
  
   PREPARE axcq100_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR axcq100_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_imag_d.clear()
   CALL g_imag2_d.clear()   
 
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_imag_d[l_ac].imagsite,g_imag_d[l_ac].imagsite_desc,g_imag_d[l_ac].imag001, 
       g_imag_d[l_ac].imag001_desc,g_imag_d[l_ac].imag011,g_imag_d[l_ac].imag013,g_imag_d[l_ac].imag013_desc, 
       g_imag_d[l_ac].imag014,g_imag_d[l_ac].imag015,g_imag2_d[l_ac].imag001,g_imag2_d[l_ac].imagownid, 
       g_imag2_d[l_ac].imagownid_desc,g_imag2_d[l_ac].imagowndp,g_imag2_d[l_ac].imagowndp_desc,g_imag2_d[l_ac].imagcrtid, 
       g_imag2_d[l_ac].imagcrtid_desc,g_imag2_d[l_ac].imagcrtdp,g_imag2_d[l_ac].imagcrtdp_desc,g_imag2_d[l_ac].imagcrtdt, 
       g_imag2_d[l_ac].imagmodid,g_imag2_d[l_ac].imagmodid_desc,g_imag2_d[l_ac].imagmoddt,g_imag2_d[l_ac].imagcnfid, 
       g_imag2_d[l_ac].imagcnfid_desc,g_imag2_d[l_ac].imagcnfdt
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL axcq100_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec AND g_error_show = 1 THEN
      CALL cl_err("imag_t",9035,1)
   END IF 
   LET g_error_show = 0
   
 
  
   
   CALL g_imag_d.deleteElement(g_imag_d.getLength())   
   CALL g_imag2_d.deleteElement(g_imag2_d.getLength())
 
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_imag_d.getLength()
      LET g_imag2_d[l_ac].imagsite = g_imag_d[l_ac].imagsite 
      LET g_imag2_d[l_ac].imag001 = g_imag_d[l_ac].imag001 
 
 
 
   END FOR
   
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE axcq100_pb
   
END FUNCTION
]]>
  </section>
  <section id="axcq100.default_search" ver="1" status="" src="s">
    <![CDATA[#+ 外部參數搜尋, 施工中
PRIVATE FUNCTION axcq100_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   {</Local define>}
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " imagsite = '", g_argv[1], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " imag001 = ", g_argv[02], " AND "
   END IF
 
 
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="axcq100.delete" ver="1" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION axcq100_delete()
   DEFINE li_ac LIKE type_t.num5
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point 
   
   IF NOT cl_ask_delete() THEN
      LET INT_FLAG = 1 #不刪除
   ELSE
      LET INT_FLAG = 0 #要刪除
   END IF
   
   LET li_ac = ARR_CURR()
   
   CALL s_transaction_begin()  
 
   #add-point:delete段刪除前
   {<point name="delete.b_delete" mark="Y"/>}
   #end add-point 
   DELETE FROM imag_t 
         WHERE imagsite = g_imag_d[li_ac].imagsite
           AND imag001 = g_imag_d[li_ac].imag001
 
 
   #add-point:delete段刪除中
   {<point name="delete.m_delete"/>}
   #end add-point 
   IF SQLCA.sqlcode THEN
      CALL cl_err("imag_t",SQLCA.sqlcode,1) 
      CALL s_transaction_end('N','0')
   ELSE
      CALL s_transaction_end('Y','0')
   END IF
   #add-point:delete段刪除後
   {<point name="delete.a_delete"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="axcq100.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION axcq100_delete_b(ps_table,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "imag_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
   
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
      DELETE FROM imag_t
       WHERE imagent = g_enterprise AND
         imagsite = ps_keys_bak[1] AND imag001 = ps_keys_bak[2]
 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="axcq100.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(版次:1) Build-000000
#+ 
#+ Filename...: axcq100
#+ Description: 料件成本信息查詢作業
#+ Creator....: 01531(2014/03/10)
#+ Modifier...: 01531(2014/03/10)
#+ Buildtype..: 應用 i02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="axcq100.detail_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION axcq100_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
   #帶出公用欄位reference值page2
   #此段落由子樣板a12產生
      #LET g_imag2_d[l_ac].imagownid_desc = cl_get_username(g_imag2_d[l_ac].imagownid)
      #LET g_imag2_d[l_ac].imagowndp_desc = cl_get_deptname(g_imag2_d[l_ac].imagowndp)
      #LET g_imag2_d[l_ac].imagcrtid_desc = cl_get_username(g_imag2_d[l_ac].imagcrtid)
      #LET g_imag2_d[l_ac].imagcrtdp_desc = cl_get_deptname(g_imag2_d[l_ac].imagcrtdp)
      #LET g_imag2_d[l_ac].imagmodid_desc = cl_get_username(g_imag2_d[l_ac].imagmodid)
      #LET g_imag2_d[l_ac].imagcnfid_desc = cl_get_deptname(g_imag2_d[l_ac].imagcnfid)
      ##LET g_imag_d[l_ac].imagpstid_desc = cl_get_deptname(g_imag_d[l_ac].imagpstid)
      
 
 
 
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
   #add-point:show段單身reference
   {<point name="detail_show.body2.reference"/>}
   #end add-point
 
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="axcq100.fetch" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION axcq100_fetch()
   {<Local define>}
   DEFINE li_ac           LIKE type_t.num5
   {</Local define>}
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point
   
   #CALL g_imag2_d.clear()
 
 
   
   LET li_ac = l_ac 
   
 
   
   #DISPLAY g_detail_cnt TO FORMONLY.cnt
 
   #add-point:單身填充後
   {<point name="fetch.after_fill" />}
   #end add-point 
   
   #CALL g_imag2_d.deleteElement(g_imag2_d.getLength())   
 
 
   
   LET l_ac = li_ac
   
END FUNCTION
]]>
  </section>
  <section id="axcq100.filter" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION axcq100_filter()
   {<Local define>}
   {</Local define>}
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point    
   
   LET l_ac = 1
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON ,,,,,,,,,,,,,,
                          FROM s_detail1[1].imagsit,s_detail1[1].imag00,s_detail1[1].imag01,s_detail1[1].imag01, 
                              s_detail1[1].imag01,s_detail1[1].imag01,s_detail2[1].imagowni,s_detail2[1].imagownd, 
                              s_detail2[1].imagcrti,s_detail2[1].imagcrtd,s_detail2[1].imagcrtd,s_detail2[1].imagmodi, 
                              s_detail2[1].imagmodd,s_detail2[1].imagcnfi,s_detail2[1].imagcnfd
 
         BEFORE CONSTRUCT
#saki       CALL cl_qbe_init()
                     DISPLAY axcq100_filter_parser('') TO s_detail1[1].imagsit
            DISPLAY axcq100_filter_parser('') TO s_detail1[1].imag00
            DISPLAY axcq100_filter_parser('') TO s_detail1[1].imag01
            DISPLAY axcq100_filter_parser('') TO s_detail1[1].imag01
            DISPLAY axcq100_filter_parser('') TO s_detail1[1].imag01
            DISPLAY axcq100_filter_parser('') TO s_detail1[1].imag01
            DISPLAY axcq100_filter_parser('') TO s_detail2[1].imagowni
            DISPLAY axcq100_filter_parser('') TO s_detail2[1].imagownd
            DISPLAY axcq100_filter_parser('') TO s_detail2[1].imagcrti
            DISPLAY axcq100_filter_parser('') TO s_detail2[1].imagcrtd
            DISPLAY axcq100_filter_parser('') TO s_detail2[1].imagcrtd
            DISPLAY axcq100_filter_parser('') TO s_detail2[1].imagmodi
            DISPLAY axcq100_filter_parser('') TO s_detail2[1].imagmodd
            DISPLAY axcq100_filter_parser('') TO s_detail2[1].imagcnfi
            DISPLAY axcq100_filter_parser('') TO s_detail2[1].imagcnfd
 
 
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
      ON ACTION accept
         ACCEPT DIALOG 
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
 
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
   
      CALL axcq100_filter_show('','imagsit')
   CALL axcq100_filter_show('','imag00')
   CALL axcq100_filter_show('','imag01')
   CALL axcq100_filter_show('','imag01')
   CALL axcq100_filter_show('','imag01')
   CALL axcq100_filter_show('','imag01')
   CALL axcq100_filter_show('','imagowni')
   CALL axcq100_filter_show('','imagownd')
   CALL axcq100_filter_show('','imagcrti')
   CALL axcq100_filter_show('','imagcrtd')
   CALL axcq100_filter_show('','imagcrtd')
   CALL axcq100_filter_show('','imagmodi')
   CALL axcq100_filter_show('','imagmodd')
   CALL axcq100_filter_show('','imagcnfi')
   CALL axcq100_filter_show('','imagcnfd')
 
    
   CALL axcq100_b_fill()
   CALL axcq100_fetch()
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
 
END FUNCTION
]]>
  </section>
  <section id="axcq100.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter欄位解析
PRIVATE FUNCTION axcq100_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="axcq100.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION axcq100_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axcq100_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="axcq100.global" ver="1" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
{<Module define>}
 
#單身 type 宣告
PRIVATE TYPE type_g_imag_d RECORD
       imagsite LIKE imag_t.imagsite, 
   imagsite_desc LIKE type_t.chr500, 
   imag001 LIKE imag_t.imag001, 
   imag001_desc LIKE type_t.chr500, 
   imag011 LIKE imag_t.imag011, 
   imag013 LIKE imag_t.imag013, 
   imag013_desc LIKE type_t.chr500, 
   imag014 LIKE imag_t.imag014, 
   imag015 LIKE imag_t.imag015
       END RECORD
PRIVATE TYPE type_g_imag2_d RECORD
       imag001 LIKE imag_t.imag001, 
   imagownid LIKE imag_t.imagownid, 
   imagownid_desc LIKE type_t.chr500, 
   imagowndp LIKE imag_t.imagowndp, 
   imagowndp_desc LIKE type_t.chr500, 
   imagcrtid LIKE imag_t.imagcrtid, 
   imagcrtid_desc LIKE type_t.chr500, 
   imagcrtdp LIKE imag_t.imagcrtdp, 
   imagcrtdp_desc LIKE type_t.chr500, 
   imagcrtdt DATETIME YEAR TO SECOND, 
   imagmodid LIKE imag_t.imagmodid, 
   imagmodid_desc LIKE type_t.chr500, 
   imagmoddt DATETIME YEAR TO SECOND, 
   imagcnfid LIKE imag_t.imagcnfid, 
   imagcnfid_desc LIKE type_t.chr500, 
   imagcnfdt DATETIME YEAR TO SECOND
       END RECORD
 
 
 
#無單身append欄位定義
 
#模組變數(Module Variables)
DEFINE g_imag_d          DYNAMIC ARRAY OF type_g_imag_d
DEFINE g_imag_d_t        type_g_imag_d
DEFINE g_imag2_d   DYNAMIC ARRAY OF type_g_imag2_d
DEFINE g_imag2_d_t type_g_imag2_d
 
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
{</Module define>}
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="axcq100.init" ver="1" status="" src="s">
    <![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION axcq100_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   
   
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL axcq100_default_search()
   
END FUNCTION
]]>
  </section>
  <section id="axcq100.insert" ver="1" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION axcq100_insert()
   {<Local define>}
   DEFINE li_ac LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete段define
   {<point name="insert.define"/>}
   #end add-point 
   
   #輸入前動作  
   LET li_ac = l_ac 
   LET l_ac = 1   
   LET g_before_input_done = FALSE                                        
   CALL axcq100_set_entry_b("a")  
   
   CALL axcq100_set_no_entry_b("a")                                          
   LET g_before_input_done = TRUE                                            
   
   #append欄位         
      
 
      
 
 
   
   #add-point:insert段before insert
   {<point name="insert.before_insert"/>}
   #end add-point  
 
   #資料輸入
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM) 
      INPUT g_imag_d[1].* FROM s_detail1[1].*
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         BEFORE INPUT
         
      END INPUT
      
 
      
      BEFORE DIALOG 
   
   END DIALOG
   
   #輸入後動作
   IF INT_FLAG THEN
      CALL cl_err("",9001,0)
      LET INT_FLAG = 1
      RETURN
   END IF
   
   CALL s_transaction_begin()                    
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="axcq100.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION axcq100_insert_b(ps_table,ps_keys,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "imag_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO imag_t
                  (imagent,
                   imagsite,imag001
                   ,imag011,imag013,imag014,imag015,imagownid,imagowndp,imagcrtid,imagcrtdp,imagcrtdt,imagmodid,imagmoddt,imagcnfid,imagcnfdt) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_imag_d[l_ac].imag011,g_imag_d[l_ac].imag013,g_imag_d[l_ac].imag014,g_imag_d[l_ac].imag015, 
                       g_imag2_d[l_ac].imagownid,g_imag2_d[l_ac].imagowndp,g_imag2_d[l_ac].imagcrtid, 
                       g_imag2_d[l_ac].imagcrtdp,g_imag2_d[l_ac].imagcrtdt,g_imag2_d[l_ac].imagmodid, 
                       g_imag2_d[l_ac].imagmoddt,g_imag2_d[l_ac].imagcnfid,g_imag2_d[l_ac].imagcnfdt) 

      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("imag_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="axcq100.link_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動單身idx
PRIVATE FUNCTION axcq100_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define
   {<point name="link_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
 
   END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="axcq100.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION axcq100_lock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL axcq100_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "imag_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axcq100_bcl USING g_enterprise,
                                       g_imag_d[g_detail_idx].imagsite,g_imag_d[g_detail_idx].imag001 

                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("axcq100_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="axcq100.main" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   #LET g_forupd_sql = ""
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   #LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   #DECLARE axcq100_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_axcq100 WITH FORM cl_ap_formpath("axc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axcq100_init()   
 
      #進入選單 Menu (="N")
      CALL axcq100_ui_dialog() 
	  
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axcq100
      
   END IF 
   
   #CLOSE axcq100_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="axcq100.modify" ver="1" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION axcq100_modify()
   {<Local define>}
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   {</Local define>}
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
 
   #add-point:modify段define_sql
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT imagsite,'',imag001,'',imag011,imag013,'',imag014,imag015,'',imagownid, 
       '',imagowndp,'',imagcrtid,'',imagcrtdp,'',imagcrtdt,imagmodid,'',imagmoddt,imagcnfid,'',imagcnfdt  
       FROM imag_t WHERE imagent=? AND imag001=? FOR UPDATE"
   #add-point:modify段define_sql
   {<point name="modify.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE axcq100_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
   
 
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_imag_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = , 
                  DELETE ROW = ,
                  APPEND ROW = )
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_imag_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axcq100_b_fill(g_wc2)
            LET g_detail_cnt = g_imag_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_imag_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_imag_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_imag_d[l_ac].imagsite IS NOT NULL
               AND g_imag_d[l_ac].imag001 IS NOT NULL
 
 
            THEN
               LET l_cmd='u'
               LET g_imag_d_t.* = g_imag_d[l_ac].*  #BACKUP
               IF NOT axcq100_lock_b("imag_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axcq100_bcl INTO g_imag_d[l_ac].imagsite,g_imag_d[l_ac].imagsite_desc,g_imag_d[l_ac].imag001, 
                      g_imag_d[l_ac].imag001_desc,g_imag_d[l_ac].imag011,g_imag_d[l_ac].imag013,g_imag_d[l_ac].imag013_desc, 
                      g_imag_d[l_ac].imag014,g_imag_d[l_ac].imag015,g_imag2_d[l_ac].imag001,g_imag2_d[l_ac].imagownid, 
                      g_imag2_d[l_ac].imagownid_desc,g_imag2_d[l_ac].imagowndp,g_imag2_d[l_ac].imagowndp_desc, 
                      g_imag2_d[l_ac].imagcrtid,g_imag2_d[l_ac].imagcrtid_desc,g_imag2_d[l_ac].imagcrtdp, 
                      g_imag2_d[l_ac].imagcrtdp_desc,g_imag2_d[l_ac].imagcrtdt,g_imag2_d[l_ac].imagmodid, 
                      g_imag2_d[l_ac].imagmodid_desc,g_imag2_d[l_ac].imagmoddt,g_imag2_d[l_ac].imagcnfid, 
                      g_imag2_d[l_ac].imagcnfid_desc,g_imag2_d[l_ac].imagcnfdt
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_imag_d_t.imagsite,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axcq100_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_imag_d_t.* TO NULL
            INITIALIZE g_imag_d[l_ac].* TO NULL 
            
            LET g_imag_d_t.* = g_imag_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axcq100_set_entry_b("a")
            CALL axcq100_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_imag_d[li_reproduce_target].* = g_imag_d[li_reproduce].*
               LET g_imag2_d[li_reproduce_target].* = g_imag2_d[li_reproduce].*
 
               LET g_imag_d[g_imag_d.getLength()].imagsite = NULL
               LET g_imag_d[g_imag_d.getLength()].imag001 = NULL
 
 
            END IF
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_imag2_d[l_ac].imagownid = g_user
      LET g_imag2_d[l_ac].imagowndp = g_dept
      LET g_imag2_d[l_ac].imagcrtid = g_user
      LET g_imag2_d[l_ac].imagcrtdp = g_dept 
      LET g_imag2_d[l_ac].imagcrtdt = cl_get_current()
      LET g_imag2_d[l_ac].imagmodid = ""
      LET g_imag2_d[l_ac].imagmoddt = ""
      ##LET g_imag_d[l_ac].imagstus = ""
 
 
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM imag_t 
             WHERE imagent = g_enterprise AND imagsite = g_imag_d[l_ac].imagsite
                                       AND imag001 = g_imag_d[l_ac].imag001
 
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_imag_d[g_detail_idx].imagsite
               LET gs_keys[2] = g_imag_d[g_detail_idx].imag001
               CALL axcq100_insert_b('imag_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_imag_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("imag_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axcq100_b_fill(g_wc2)
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (imagsite = '", g_imag_d[l_ac].imagsite, "' "
                                  ," AND imag001 = '", g_imag_d[l_ac].imag001, "' "
 
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_imag_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_imag_d.deleteElement(l_ac)
               NEXT FIELD imagsite
            END IF
            IF g_imag_d[l_ac].imagsite IS NOT NULL
               AND g_imag_d_t.imag001 IS NOT NULL
 
 
               THEN     
            
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM imag_t
                WHERE imagent = g_enterprise AND 
                      imagsite = g_imag_d_t.imagsite
                      AND imag001 = g_imag_d_t.imag001
 
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("imag_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE axcq100_bcl
               LET l_count = g_imag_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_imag_d[g_detail_idx].imagsite
               LET gs_keys[2] = g_imag_d[g_detail_idx].imag001
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL axcq100_delete_b('imag_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
 
         #---------------------<  Detail: page1  >---------------------
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_imag_d[l_ac].* = g_imag_d_t.*
               CLOSE axcq100_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_imag_d[l_ac].imagsite,-263,1)
               LET g_imag_d[l_ac].* = g_imag_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               LET g_imag2_d[l_ac].imagmodid = g_user 
LET g_imag2_d[l_ac].imagmoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE imag_t SET (imagsite,imag001,imag011,imag013,imag014,imag015,imagownid,imagowndp, 
                   imagcrtid,imagcrtdp,imagcrtdt,imagmodid,imagmoddt,imagcnfid,imagcnfdt) = (g_imag_d[l_ac].imagsite, 
                   g_imag_d[l_ac].imag001,g_imag_d[l_ac].imag011,g_imag_d[l_ac].imag013,g_imag_d[l_ac].imag014, 
                   g_imag_d[l_ac].imag015,g_imag2_d[l_ac].imagownid,g_imag2_d[l_ac].imagowndp,g_imag2_d[l_ac].imagcrtid, 
                   g_imag2_d[l_ac].imagcrtdp,g_imag2_d[l_ac].imagcrtdt,g_imag2_d[l_ac].imagmodid,g_imag2_d[l_ac].imagmoddt, 
                   g_imag2_d[l_ac].imagcnfid,g_imag2_d[l_ac].imagcnfdt)
                WHERE imagent = g_enterprise AND
                  imagsite = g_imag_d_t.imagsite #項次   
                  AND imag001 = g_imag_d_t.imag001  
 
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("imag_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("imag_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_imag_d[g_detail_idx].imagsite
               LET gs_keys_bak[1] = g_imag_d_t.imagsite
               LET gs_keys[2] = g_imag_d[g_detail_idx].imag001
               LET gs_keys_bak[2] = g_imag_d_t.imag001
               CALL axcq100_update_b('imag_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL axcq100_unlock_b("imag_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
             #add-point:單身after row
            {<point name="input.body.a_row"/>}
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_imag_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_imag_d.getLength()+1
            
      END INPUT
      
 
      
      DISPLAY ARRAY g_imag2_d TO s_detail2.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL axcq100_b_fill(g_wc2)
            CALL FGL_SET_ARR_CURR(g_detail_idx)
      
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            LET g_temp_idx = l_ac
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL cl_show_fld_cont() 
            
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
            
      END DISPLAY
 
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD imagsite
            WHEN "s_detail2"
               NEXT FIELD imag001_2
 
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE axcq100_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
  </section>
  <section id="axcq100.modify_detail_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION axcq100_modify_detail_chk(ps_record)
   {<Local define>}
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   {</Local define>}
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "imagsite"
      WHEN "s_detail2"
         LET ls_return = "imag001_2"
 
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="axcq100.other_function" ver="1" status="" src="s">
    <![CDATA[   
{<point name="other.function"/>}
]]>
  </section>
  <section id="axcq100.query" ver="1" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION axcq100_query()
   {<Local define>}
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   {</Local define>}
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_imag_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON imagsite,imag001,imag011,imag013,imag014,imag015,imagownid,imagowndp,imagcrtid, 
          imagcrtdp,imagcrtdt,imagmodid,imagmoddt,imagcnfid,imagcnfdt 
 
         FROM s_detail1[1].imagsite,s_detail1[1].imag001,s_detail1[1].imag011,s_detail1[1].imag013,s_detail1[1].imag014, 
             s_detail1[1].imag015,s_detail2[1].imagownid,s_detail2[1].imagowndp,s_detail2[1].imagcrtid, 
             s_detail2[1].imagcrtdp,s_detail2[1].imagcrtdt,s_detail2[1].imagmodid,s_detail2[1].imagmoddt, 
             s_detail2[1].imagcnfid,s_detail2[1].imagcnfdt 
      
         #此段落由子樣板a11產生
         ##----<<imagownid>>----
         #ON ACTION controlp INFIELD imagownid
         #   CALL q_common('','imagownid',TRUE,FALSE,g_imag2_d[1].imagownid) RETURNING ls_return
         #   DISPLAY ls_return TO imagownid
         #   NEXT FIELD imagownid  
         #
         ##----<<imagowndp>>----
         #ON ACTION controlp INFIELD imagowndp
         #   CALL q_common('','imagowndp',TRUE,FALSE,g_imag2_d[1].imagowndp) RETURNING ls_return
         #   DISPLAY ls_return TO imagowndp
         #   NEXT FIELD imagowndp
         #
         ##----<<imagcrtid>>----
         #ON ACTION controlp INFIELD imagcrtid
         #   CALL q_common('','imagcrtid',TRUE,FALSE,g_imag2_d[1].imagcrtid) RETURNING ls_return
         #   DISPLAY ls_return TO imagcrtid
         #   NEXT FIELD imagcrtid
         #
         ##----<<imagcrtdp>>----
         #ON ACTION controlp INFIELD imagcrtdp
         #   CALL q_common('','imagcrtdp',TRUE,FALSE,g_imag2_d[1].imagcrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO imagcrtdp
         #   NEXT FIELD imagcrtdp
         #
         ##----<<imagmodid>>----
         #ON ACTION controlp INFIELD imagmodid
         #   CALL q_common('','imagmodid',TRUE,FALSE,g_imag2_d[1].imagmodid) RETURNING ls_return
         #   DISPLAY ls_return TO imagmodid
         #   NEXT FIELD imagmodid
         #
         ##----<<imagcnfid>>----
         #ON ACTION controlp INFIELD imagcnfid
         #   CALL q_common('','imagcnfid',TRUE,FALSE,g_imag2_d[1].imagcnfid) RETURNING ls_return
         #   DISPLAY ls_return TO imagcnfid
         #   NEXT FIELD imagcnfid
         #
         ##----<<imagpstid>>----
         ##ON ACTION controlp INFIELD imagpstid
         ##   CALL q_common('','imagpstid',TRUE,FALSE,g_imag_d[1].imagpstid) RETURNING ls_return
         ##   DISPLAY ls_return TO imagpstid
         ##   NEXT FIELD imagpstid
         
         ##----<<imagcrtdt>>----
         AFTER FIELD imagcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<imagmoddt>>----
         AFTER FIELD imagmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<imagcnfdt>>----
         AFTER FIELD imagcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<imagpstdt>>----
         #AFTER FIELD imagpstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
      
         #---------------------<  Detail: page1  >---------------------
  
         
         #---------------------<  Detail: page2  >---------------------
  
 
 
      
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_init()
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
         ON ACTION qbe_select
#saki            CALL cl_qbe_select()
      
         ON ACTION qbe_save
#saki            CALL cl_qbe_save()
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
   
   #LET g_wc2 = g_wc2 CLIPPED, cl_get_extra_cond("", "")
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF
    
   LET g_error_show = 1
   CALL axcq100_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
]]>
  </section>
  <section id="axcq100.reproduce" ver="1" status="" src="s">
    <![CDATA[#+ reproduce
PRIVATE FUNCTION axcq100_reproduce()
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #add-point:reproduce段control
   {<point name="reproduce.control"/>}
   #end add-point 
END FUNCTION
]]>
  </section>
  <section id="axcq100.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION axcq100_set_entry_b(p_cmd)                                                  
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1         
   {</Local define>}
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    
]]>
  </section>
  <section id="axcq100.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION axcq100_set_no_entry_b(p_cmd)                                               
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1           
   {</Local define>}
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point  
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  
]]>
  </section>
  <section id="axcq100.state_change" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="axcq100.ui_dialog" ver="1" status="" src="s">
    <![CDATA[#+ 功能選單 
PRIVATE FUNCTION axcq100_ui_dialog()
   {<Local define>}
   DEFINE li_idx   LIKE type_t.num5
   {</Local define>}
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL axcq100_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_imag_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
      
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
         DISPLAY ARRAY g_imag2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
 
      
         #add-point:ui_dialog段more_displayarray
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
 
         ON ACTION datainfo
 
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN 
               #add-point:ON ACTION datainfo
               {<point name="menu.datainfo" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
 
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL axcq100_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
            
         
      
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
  </section>
  <section id="axcq100.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axcq100_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE axcq100_bcl
   #END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="axcq100.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION axcq100_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #判斷是否是同一群組的table
   LET ls_group = "imag_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "imag_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE imag_t 
         SET (imagsite,imag001
              ,imag011,imag013,imag014,imag015,imagownid,imagowndp,imagcrtid,imagcrtdp,imagcrtdt,imagmodid,imagmoddt,imagcnfid,imagcnfdt) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_imag_d[l_ac].imag011,g_imag_d[l_ac].imag013,g_imag_d[l_ac].imag014,g_imag_d[l_ac].imag015, 
                  g_imag2_d[l_ac].imagownid,g_imag2_d[l_ac].imagowndp,g_imag2_d[l_ac].imagcrtid,g_imag2_d[l_ac].imagcrtdp, 
                  g_imag2_d[l_ac].imagcrtdt,g_imag2_d[l_ac].imagmodid,g_imag2_d[l_ac].imagmoddt,g_imag2_d[l_ac].imagcnfid, 
                  g_imag2_d[l_ac].imagcnfdt) 
         WHERE imagsite = ps_keys_bak[1] AND imag001 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("imag_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("imag_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
</add_points>
