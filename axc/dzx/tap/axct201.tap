<add_points prog="axct201" std_prog="axct201" erpver="1.0" module="AXC" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="construct.c.page1.xcbl010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " glac003 != '1' "
            CALL aglt310_04()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbl010  #顯示到畫面上
            NEXT FIELD xcbl010                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.xcbl011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbl011  #顯示到畫面上
            NEXT FIELD xcbl011                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.xcbl012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbl012  #顯示到畫面上
            NEXT FIELD xcbl012                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.xcbl013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbl013  #顯示到畫面上
            NEXT FIELD xcbl013                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.xcbl014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '281'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbl014  #顯示到畫面上
            NEXT FIELD xcbl014                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.xcbl015" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '287'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbl015  #顯示到畫面上
            NEXT FIELD xcbl015                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.xcbl016" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbl016  #顯示到畫面上
            NEXT FIELD xcbl016                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.xcbl017" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '6013'
            CALL q_gzcb001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbl017  #顯示到畫面上
            NEXT FIELD xcbl017                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.xcbl018" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2035'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbl018  #顯示到畫面上
            NEXT FIELD xcbl018                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.xcbl019" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbl019  #顯示到畫面上
            NEXT FIELD xcbl019                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.xcbl020" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2002'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbl020  #顯示到畫面上
            NEXT FIELD xcbl020                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.xcbl021" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pjba001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbl021  #顯示到畫面上
            NEXT FIELD xcbl021                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.xcbl022" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pjbb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbl022  #顯示到畫面上
            NEXT FIELD xcbl022                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.xcblcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcblcrtdp  #顯示到畫面上
            NEXT FIELD xcblcrtdp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.xcblcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcblcrtid  #顯示到畫面上
            NEXT FIELD xcblcrtid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.xcblmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcblmodid  #顯示到畫面上
            NEXT FIELD xcblmodid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.xcblowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcblowndp  #顯示到畫面上
            NEXT FIELD xcblowndp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.xcblownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcblownid  #顯示到畫面上
            NEXT FIELD xcblownid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xcbl004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbl004  #顯示到畫面上
            NEXT FIELD xcbl004                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xcblcomp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcblcomp  #顯示到畫面上
            NEXT FIELD xcblcomp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.xcblld" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept 
            CALL q_authorised_ld()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcblld  #顯示到畫面上
            NEXT FIELD xcblld                     #返回原欄位
    

]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_glaa004             LIKE glaa_t.glaa004]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL cl_set_combo_scc('xcbl001','8908')
   CALL cl_set_combo_scc('xcbl005','8909')]]>
</point>
  <point name="input.a.page1.xcbl010" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL axct201_ref_show()
            IF NOT cl_null(g_xcbl_d[l_ac].xcbl010) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_glaa004
               LET g_chkparam.arg2 = g_xcbl_d[l_ac].xcbl010
            
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_glac002_3") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
                  #LET  = g_chkparam.return2                  #DISPLAY BY NAME 
            
               ELSE
                  #檢查失敗時後續處理
                  LET g_xcbl_d[l_ac].xcbl010 = g_xcbl_d_t.xcbl010
                  CALL axct201_ref_show()
                  NEXT FIELD CURRENT
               END IF
            
            
            END IF 
]]>
</point>
  <point name="input.a.page1.xcbl011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xcbl_d[l_ac].xcbl011) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcbl_d[l_ac].xcbl011
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_xcbl_d[l_ac].xcbl011 = g_xcbl_d_t.xcbl011
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.page1.xcbl012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xcbl_d[l_ac].xcbl012) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcbl_d[l_ac].xcbl012
               LET g_chkparam.arg2 = g_today
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooeg001_3") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_xcbl_d[l_ac].xcbl012 = g_xcbl_d_t.xcbl012
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.page1.xcbl013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xcbl_d[l_ac].xcbl013) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcbl_d[l_ac].xcbl013
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pmaa001_6") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_xcbl_d[l_ac].xcbl013 = g_xcbl_d_t.xcbl013
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.page1.xcbl014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xcbl_d[l_ac].xcbl014) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcbl_d[l_ac].xcbl014
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oocq002_281") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_xcbl_d[l_ac].xcbl014 = g_xcbl_d_t.xcbl014
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.page1.xcbl015" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xcbl_d[l_ac].xcbl015) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcbl_d[l_ac].xcbl015
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oocq002_287") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_xcbl_d[l_ac].xcbl015 = g_xcbl_d_t.xcbl015
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.page1.xcbl016" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xcbl_d[l_ac].xcbl016) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcbl_d[l_ac].xcbl016
               LET g_chkparam.arg2 = g_today
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooeg001_4") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_xcbl_d[l_ac].xcbl016 = g_xcbl_d_t.xcbl016
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.page1.xcbl018" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xcbl_d[l_ac].xcbl018) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcbl_d[l_ac].xcbl018
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oocq002_2035") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_xcbl_d[l_ac].xcbl018 = g_xcbl_d_t.xcbl018
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.page1.xcbl019" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xcbl_d[l_ac].xcbl019) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcbl_d[l_ac].xcbl019
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_rtax001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_xcbl_d[l_ac].xcbl019 = g_xcbl_d_t.xcbl019
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.page1.xcbl020" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xcbl_d[l_ac].xcbl020) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcbl_d[l_ac].xcbl020
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oocq002_2002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_xcbl_d[l_ac].xcbl020 = g_xcbl_d_t.xcbl020
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.page1.xcbl021" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xcbl_d[l_ac].xcbl021) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcbl_d[l_ac].xcbl021
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pjba001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_xcbl_d[l_ac].xcbl021 = g_xcbl_d_t.xcbl021
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.page1.xcbl022" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xcbl_d[l_ac].xcbl022) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcbl_d[l_ac].xcbl021
               LET g_chkparam.arg2 = g_xcbl_d[l_ac].xcbl022
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pjbb002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_xcbl_d[l_ac].xcbl022 = g_xcbl_d_t.xcbl022
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.page1.xcblseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xcbl_m.xcblld IS NOT NULL AND g_xcbl_m.xcbl001 IS NOT NULL AND g_xcbl_m.xcbl002 IS NOT NULL AND g_xcbl_m.xcbl003 IS NOT NULL AND g_xcbl_m.xcbl004 IS NOT NULL AND g_xcbl_m.xcbl005 IS NOT NULL AND g_xcbl_d[g_detail_idx].xcblseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcbl_m.xcblld != g_xcblld_t OR g_xcbl_m.xcbl001 != g_xcbl001_t OR g_xcbl_m.xcbl002 != g_xcbl002_t OR g_xcbl_m.xcbl003 != g_xcbl003_t OR g_xcbl_m.xcbl004 != g_xcbl004_t OR g_xcbl_m.xcbl005 != g_xcbl005_t OR g_xcbl_d[g_detail_idx].xcblseq != g_xcbl_d_t.xcblseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcbl_t WHERE "||"xcblent = '" ||g_enterprise|| "' AND "||"xcblld = '"||g_xcbl_m.xcblld ||"' AND "|| "xcbl001 = '"||g_xcbl_m.xcbl001 ||"' AND "|| "xcbl002 = '"||g_xcbl_m.xcbl002 ||"' AND "|| "xcbl003 = '"||g_xcbl_m.xcbl003 ||"' AND "|| "xcbl004 = '"||g_xcbl_m.xcbl004 ||"' AND "|| "xcbl005 = '"||g_xcbl_m.xcbl005 ||"' AND "|| "xcblseq = '"||g_xcbl_d[g_detail_idx].xcblseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.xcblseq_2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xcbl_m.xcblld IS NOT NULL AND g_xcbl_m.xcbl001 IS NOT NULL AND g_xcbl_m.xcbl002 IS NOT NULL AND g_xcbl_m.xcbl003 IS NOT NULL AND g_xcbl_m.xcbl004 IS NOT NULL AND g_xcbl_m.xcbl005 IS NOT NULL AND g_xcbl2_d[g_detail_idx].xcblseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcbl_m.xcblld != g_xcblld_t OR g_xcbl_m.xcbl001 != g_xcbl001_t OR g_xcbl_m.xcbl002 != g_xcbl002_t OR g_xcbl_m.xcbl003 != g_xcbl003_t OR g_xcbl_m.xcbl004 != g_xcbl004_t OR g_xcbl_m.xcbl005 != g_xcbl005_t OR g_xcbl2_d[g_detail_idx].xcblseq != g_xcbl2_d_t.xcblseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcbl_t WHERE "||"xcblent = '" ||g_enterprise|| "' AND "||"xcblld = '"||g_xcbl_m.xcblld ||"' AND "|| "xcbl001 = '"||g_xcbl_m.xcbl001 ||"' AND "|| "xcbl002 = '"||g_xcbl_m.xcbl002 ||"' AND "|| "xcbl003 = '"||g_xcbl_m.xcbl003 ||"' AND "|| "xcbl004 = '"||g_xcbl_m.xcbl004 ||"' AND "|| "xcbl005 = '"||g_xcbl_m.xcbl005 ||"' AND "|| "xcblseq = '"||g_xcbl2_d[g_detail_idx].xcblseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.xcbl001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcbl_m.xcblld) AND NOT cl_null(g_xcbl_m.xcbl001) AND NOT cl_null(g_xcbl_m.xcbl002) AND NOT cl_null(g_xcbl_m.xcbl003) AND NOT cl_null(g_xcbl_m.xcbl004) AND NOT cl_null(g_xcbl_m.xcbl005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcbl_m.xcblld != g_xcblld_t  OR g_xcbl_m.xcbl001 != g_xcbl001_t  OR g_xcbl_m.xcbl002 != g_xcbl002_t  OR g_xcbl_m.xcbl003 != g_xcbl003_t  OR g_xcbl_m.xcbl004 != g_xcbl004_t  OR g_xcbl_m.xcbl005 != g_xcbl005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcbl_t WHERE "||"xcblent = '" ||g_enterprise|| "' AND "||"xcblld = '"||g_xcbl_m.xcblld ||"' AND "|| "xcbl001 = '"||g_xcbl_m.xcbl001 ||"' AND "|| "xcbl002 = '"||g_xcbl_m.xcbl002 ||"' AND "|| "xcbl003 = '"||g_xcbl_m.xcbl003 ||"' AND "|| "xcbl004 = '"||g_xcbl_m.xcbl004 ||"' AND "|| "xcbl005 = '"||g_xcbl_m.xcbl005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.a.xcbl002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcbl_m.xcblld) AND NOT cl_null(g_xcbl_m.xcbl001) AND NOT cl_null(g_xcbl_m.xcbl002) AND NOT cl_null(g_xcbl_m.xcbl003) AND NOT cl_null(g_xcbl_m.xcbl004) AND NOT cl_null(g_xcbl_m.xcbl005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcbl_m.xcblld != g_xcblld_t  OR g_xcbl_m.xcbl001 != g_xcbl001_t  OR g_xcbl_m.xcbl002 != g_xcbl002_t  OR g_xcbl_m.xcbl003 != g_xcbl003_t  OR g_xcbl_m.xcbl004 != g_xcbl004_t  OR g_xcbl_m.xcbl005 != g_xcbl005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcbl_t WHERE "||"xcblent = '" ||g_enterprise|| "' AND "||"xcblld = '"||g_xcbl_m.xcblld ||"' AND "|| "xcbl001 = '"||g_xcbl_m.xcbl001 ||"' AND "|| "xcbl002 = '"||g_xcbl_m.xcbl002 ||"' AND "|| "xcbl003 = '"||g_xcbl_m.xcbl003 ||"' AND "|| "xcbl004 = '"||g_xcbl_m.xcbl004 ||"' AND "|| "xcbl005 = '"||g_xcbl_m.xcbl005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.a.xcbl003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcbl_m.xcblld) AND NOT cl_null(g_xcbl_m.xcbl001) AND NOT cl_null(g_xcbl_m.xcbl002) AND NOT cl_null(g_xcbl_m.xcbl003) AND NOT cl_null(g_xcbl_m.xcbl004) AND NOT cl_null(g_xcbl_m.xcbl005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcbl_m.xcblld != g_xcblld_t  OR g_xcbl_m.xcbl001 != g_xcbl001_t  OR g_xcbl_m.xcbl002 != g_xcbl002_t  OR g_xcbl_m.xcbl003 != g_xcbl003_t  OR g_xcbl_m.xcbl004 != g_xcbl004_t  OR g_xcbl_m.xcbl005 != g_xcbl005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcbl_t WHERE "||"xcblent = '" ||g_enterprise|| "' AND "||"xcblld = '"||g_xcbl_m.xcblld ||"' AND "|| "xcbl001 = '"||g_xcbl_m.xcbl001 ||"' AND "|| "xcbl002 = '"||g_xcbl_m.xcbl002 ||"' AND "|| "xcbl003 = '"||g_xcbl_m.xcbl003 ||"' AND "|| "xcbl004 = '"||g_xcbl_m.xcbl004 ||"' AND "|| "xcbl005 = '"||g_xcbl_m.xcbl005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.a.xcbl004" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcbl_m.xcblld) AND NOT cl_null(g_xcbl_m.xcbl001) AND NOT cl_null(g_xcbl_m.xcbl002) AND NOT cl_null(g_xcbl_m.xcbl003) AND NOT cl_null(g_xcbl_m.xcbl004) AND NOT cl_null(g_xcbl_m.xcbl005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcbl_m.xcblld != g_xcblld_t  OR g_xcbl_m.xcbl001 != g_xcbl001_t  OR g_xcbl_m.xcbl002 != g_xcbl002_t  OR g_xcbl_m.xcbl003 != g_xcbl003_t  OR g_xcbl_m.xcbl004 != g_xcbl004_t  OR g_xcbl_m.xcbl005 != g_xcbl005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcbl_t WHERE "||"xcblent = '" ||g_enterprise|| "' AND "||"xcblld = '"||g_xcbl_m.xcblld ||"' AND "|| "xcbl001 = '"||g_xcbl_m.xcbl001 ||"' AND "|| "xcbl002 = '"||g_xcbl_m.xcbl002 ||"' AND "|| "xcbl003 = '"||g_xcbl_m.xcbl003 ||"' AND "|| "xcbl004 = '"||g_xcbl_m.xcbl004 ||"' AND "|| "xcbl005 = '"||g_xcbl_m.xcbl005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            CALL axct201_show_ref()
            IF NOT cl_null(g_xcbl_m.xcbl004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcbl_m.xcbl004
               LET g_chkparam.arg2 = g_today
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooeg001_4") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_xcbl_m.xcbl004 = g_xcbl_m_t.xcbl004
                  CALL axct201_show_ref()
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

            

]]>
</point>
  <point name="input.a.xcbl005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcbl_m.xcblld) AND NOT cl_null(g_xcbl_m.xcbl001) AND NOT cl_null(g_xcbl_m.xcbl002) AND NOT cl_null(g_xcbl_m.xcbl003) AND NOT cl_null(g_xcbl_m.xcbl004) AND NOT cl_null(g_xcbl_m.xcbl005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcbl_m.xcblld != g_xcblld_t  OR g_xcbl_m.xcbl001 != g_xcbl001_t  OR g_xcbl_m.xcbl002 != g_xcbl002_t  OR g_xcbl_m.xcbl003 != g_xcbl003_t  OR g_xcbl_m.xcbl004 != g_xcbl004_t  OR g_xcbl_m.xcbl005 != g_xcbl005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcbl_t WHERE "||"xcblent = '" ||g_enterprise|| "' AND "||"xcblld = '"||g_xcbl_m.xcblld ||"' AND "|| "xcbl001 = '"||g_xcbl_m.xcbl001 ||"' AND "|| "xcbl002 = '"||g_xcbl_m.xcbl002 ||"' AND "|| "xcbl003 = '"||g_xcbl_m.xcbl003 ||"' AND "|| "xcbl004 = '"||g_xcbl_m.xcbl004 ||"' AND "|| "xcbl005 = '"||g_xcbl_m.xcbl005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.a.xcblcomp" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL axct201_show_ref()
            IF NOT cl_null(g_xcbl_m.xcblcomp) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcbl_m.xcblcomp
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001_1") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_xcbl_m.xcblcomp = g_xcbl_m_t.xcblcomp
                  CALL axct201_show_ref()
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            

]]>
</point>
  <point name="input.a.xcblld" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcbl_m.xcblld) AND NOT cl_null(g_xcbl_m.xcbl001) AND NOT cl_null(g_xcbl_m.xcbl002) AND NOT cl_null(g_xcbl_m.xcbl003) AND NOT cl_null(g_xcbl_m.xcbl004) AND NOT cl_null(g_xcbl_m.xcbl005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcbl_m.xcblld != g_xcblld_t  OR g_xcbl_m.xcbl001 != g_xcbl001_t  OR g_xcbl_m.xcbl002 != g_xcbl002_t  OR g_xcbl_m.xcbl003 != g_xcbl003_t  OR g_xcbl_m.xcbl004 != g_xcbl004_t  OR g_xcbl_m.xcbl005 != g_xcbl005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcbl_t WHERE "||"xcblent = '" ||g_enterprise|| "' AND "||"xcblld = '"||g_xcbl_m.xcblld ||"' AND "|| "xcbl001 = '"||g_xcbl_m.xcbl001 ||"' AND "|| "xcbl002 = '"||g_xcbl_m.xcbl002 ||"' AND "|| "xcbl003 = '"||g_xcbl_m.xcbl003 ||"' AND "|| "xcbl004 = '"||g_xcbl_m.xcbl004 ||"' AND "|| "xcbl005 = '"||g_xcbl_m.xcbl005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            CALL axct201_show_ref()
            IF NOT cl_null(g_xcbl_m.xcblld) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcbl_m.xcblld
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_glaald") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
                  CALL s_ld_chk_authorization(g_user,g_xcbl_m.xcblld) RETURNING l_success
                  IF l_success = FALSE THEN
                     CALL cl_err(g_xcbl_m.xcblld,'axr-00022',1)
                     LET g_xcbl_m.xcblld = ''
                     CALL axct201_show_ref()
                     NEXT FIELD CURRENT
                  END IF 
               ELSE
                  #檢查失敗時後續處理
                  LET g_xcbl_m.xcblld = g_xcbl_m_t.xcblld
                  CALL axct201_show_ref()
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            

            

]]>
</point>
  <point name="input.b.page1.xcblseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF cl_null(g_xcbl_d[g_detail_idx].xcblseq) THEN 
               SELECT MAX(xcblseq) INTO g_xcbl_d[g_detail_idx].xcblseq
                 FROM xcbl_t
                WHERE xcblent = g_enterprise
                  AND xcblld = g_xcbl_m.xcblld
                  AND xcbl001 = g_xcbl_m.xcbl001
                  AND xcbl002 = g_xcbl_m.xcbl002
                  AND xcbl003 = g_xcbl_m.xcbl003
                  AND xcbl004 = g_xcbl_m.xcbl004
                  AND xcbl005 = g_xcbl_m.xcbl005
                  
               IF cl_null(g_xcbl_d[g_detail_idx].xcblseq) THEN 
                  LET g_xcbl_d[g_detail_idx].xcblseq = 1
               ELSE
                  LET g_xcbl_d[g_detail_idx].xcblseq = g_xcbl_d[g_detail_idx].xcblseq + 1
               END IF
            END IF]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_errshow = 1]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF l_cmd = 'a' THEN 
               IF cl_null(g_xcbl_d[g_detail_idx].xcblseq) THEN 
                  SELECT MAX(xcblseq) INTO g_xcbl_d[g_detail_idx].xcblseq
                    FROM xcbl_t
                   WHERE xcblent = g_enterprise
                     AND xcblld = g_xcbl_m.xcblld
                     AND xcbl001 = g_xcbl_m.xcbl001
                     AND xcbl002 = g_xcbl_m.xcbl002
                     AND xcbl003 = g_xcbl_m.xcbl003
                     AND xcbl004 = g_xcbl_m.xcbl004
                     AND xcbl005 = g_xcbl_m.xcbl005
                     
                  IF cl_null(g_xcbl_d[g_detail_idx].xcblseq) THEN 
                     LET g_xcbl_d[g_detail_idx].xcblseq = 1
                  ELSE
                     LET g_xcbl_d[g_detail_idx].xcblseq = g_xcbl_d[g_detail_idx].xcblseq + 1
                  END IF
               END IF
            END IF]]>
</point>
  <point name="input.c.page1.xcbl010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcbl_d[l_ac].xcbl010             #給予default值
            LET g_qryparam.where = " glac001 = '",g_glaa004,"' AND glac003 <> '1'"
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL aglt310_04()                                #呼叫開窗

            LET g_xcbl_d[l_ac].xcbl010 = g_qryparam.return1              
            CALL axct201_ref_show()
            DISPLAY g_xcbl_d[l_ac].xcbl010 TO xcbl010              #

            NEXT FIELD xcbl010                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.xcbl011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcbl_d[l_ac].xcbl011             #給予default值
            LET g_qryparam.default2 = "" #g_xcbl_d[l_ac].ooefl003 #說明(簡稱)
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooef001()                                #呼叫開窗

            LET g_xcbl_d[l_ac].xcbl011 = g_qryparam.return1              
            #LET g_xcbl_d[l_ac].ooefl003 = g_qryparam.return2 
            DISPLAY g_xcbl_d[l_ac].xcbl011 TO xcbl011              #
            #DISPLAY g_xcbl_d[l_ac].ooefl003 TO ooefl003 #說明(簡稱)
            NEXT FIELD xcbl011                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.xcbl012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcbl_d[l_ac].xcbl012             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_today

            
            CALL q_ooeg001_4()                                #呼叫開窗

            LET g_xcbl_d[l_ac].xcbl012 = g_qryparam.return1              

            DISPLAY g_xcbl_d[l_ac].xcbl012 TO xcbl012              #

            NEXT FIELD xcbl012                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.xcbl013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcbl_d[l_ac].xcbl013             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_pmaa001_4()                                #呼叫開窗

            LET g_xcbl_d[l_ac].xcbl013 = g_qryparam.return1              

            DISPLAY g_xcbl_d[l_ac].xcbl013 TO xcbl013              #

            NEXT FIELD xcbl013                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.xcbl014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcbl_d[l_ac].xcbl014             #給予default值
            LET g_qryparam.default2 = "" #g_xcbl_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = '281'

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_xcbl_d[l_ac].xcbl014 = g_qryparam.return1              
            #LET g_xcbl_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_xcbl_d[l_ac].xcbl014 TO xcbl014              #
            #DISPLAY g_xcbl_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD xcbl014                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.xcbl015" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcbl_d[l_ac].xcbl015             #給予default值
            LET g_qryparam.default2 = "" #g_xcbl_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = '287'

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_xcbl_d[l_ac].xcbl015 = g_qryparam.return1              
            #LET g_xcbl_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_xcbl_d[l_ac].xcbl015 TO xcbl015              #
            #DISPLAY g_xcbl_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD xcbl015                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.xcbl016" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcbl_d[l_ac].xcbl016             #給予default值
            LET g_qryparam.where = " ooeg003 = '3'"
            #給予arg
            LET g_qryparam.arg1 = g_today

            
            CALL q_ooeg001_4()                                #呼叫開窗

            LET g_xcbl_d[l_ac].xcbl016 = g_qryparam.return1              

            DISPLAY g_xcbl_d[l_ac].xcbl016 TO xcbl016              #

            NEXT FIELD xcbl016                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.xcbl017" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcbl_d[l_ac].xcbl017             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '6013'

            
            CALL q_gzcb001()                                #呼叫開窗

            LET g_xcbl_d[l_ac].xcbl017 = g_qryparam.return1              

            DISPLAY g_xcbl_d[l_ac].xcbl017 TO xcbl017              #

            NEXT FIELD xcbl017                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.xcbl018" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcbl_d[l_ac].xcbl018             #給予default值
            LET g_qryparam.default2 = "" #g_xcbl_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = '2035'

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_xcbl_d[l_ac].xcbl018 = g_qryparam.return1              
            #LET g_xcbl_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_xcbl_d[l_ac].xcbl018 TO xcbl018              #
            #DISPLAY g_xcbl_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD xcbl018                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.xcbl019" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcbl_d[l_ac].xcbl019             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_rtax001_1()                                #呼叫開窗

            LET g_xcbl_d[l_ac].xcbl019 = g_qryparam.return1              

            DISPLAY g_xcbl_d[l_ac].xcbl019 TO xcbl019              #

            NEXT FIELD xcbl019                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.xcbl020" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcbl_d[l_ac].xcbl020             #給予default值
            LET g_qryparam.default2 = "" #g_xcbl_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = '2002'

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_xcbl_d[l_ac].xcbl020 = g_qryparam.return1              
            #LET g_xcbl_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_xcbl_d[l_ac].xcbl020 TO xcbl020              #
            #DISPLAY g_xcbl_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD xcbl020                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.xcbl021" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcbl_d[l_ac].xcbl021             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_pjba001()                                #呼叫開窗

            LET g_xcbl_d[l_ac].xcbl021 = g_qryparam.return1              

            DISPLAY g_xcbl_d[l_ac].xcbl021 TO xcbl021              #

            NEXT FIELD xcbl021                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.xcbl022" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcbl_d[l_ac].xcbl022             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xcbl_d[l_ac].xcbl021

            
            CALL q_pjbb002_1()                                #呼叫開窗

            LET g_xcbl_d[l_ac].xcbl022 = g_qryparam.return1              

            DISPLAY g_xcbl_d[l_ac].xcbl022 TO xcbl022              #

            NEXT FIELD xcbl022                          #返回原欄位

]]>
</point>
  <point name="input.c.xcbl004" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcbl_m.xcbl004             #給予default值
            LET g_qryparam.where = " ooeg003 = '3'"
            #給予arg
            LET g_qryparam.arg1 = g_today

            
            CALL q_ooeg001_4()                                #呼叫開窗

            LET g_xcbl_m.xcbl004 = g_qryparam.return1              
            CALL axct201_show_ref()
            DISPLAY g_xcbl_m.xcbl004 TO xcbl004              #

            NEXT FIELD xcbl004                          #返回原欄位

]]>
</point>
  <point name="input.c.xcblcomp" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcbl_m.xcblcomp             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooef001_2()                                #呼叫開窗

            LET g_xcbl_m.xcblcomp = g_qryparam.return1              
            CALL axct201_show_ref()
            DISPLAY g_xcbl_m.xcblcomp TO xcblcomp              #

            NEXT FIELD xcblcomp                          #返回原欄位

]]>
</point>
  <point name="input.c.xcblld" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcbl_m.xcblld             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept 
            
            CALL q_authorised_ld()                                #呼叫開窗
   
            LET g_xcbl_m.xcblld = g_qryparam.return1              
            CALL axct201_show_ref()
            DISPLAY g_xcbl_m.xcblld TO xcblld              #

            NEXT FIELD xcblld                          #返回原欄位

]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE  l_success             LIKE type_t.num5]]>
</point>
  <point name="menu.open_axct201_01" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL axct201_01()]]>
</point>
  <point name="menu.open_axct201_02" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL axct201_02()]]>
</point>
  <point name="ref_show.body2.reference" cite_std="N" status="u" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glaa004
            LET g_ref_fields[2] = g_xcbl_d[l_ac].xcbl010
            CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001=? AND glacl002=? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcbl_d[l_ac].xcbl010_desc = '', g_rtn_fields[1] , ''
            DISPLAY g_xcbl_d[l_ac].xcbl010_desc TO s_detail1[l_ac].xcbl010_desc


]]>
</point>
  <point name="ref_show.head.reference" cite_std="N" status="u" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcbl_m.xcblld
            CALL ap_ref_array2(g_ref_fields,"SELECT glaa004 FROM glaa_t WHERE glaaent='"||g_enterprise||"' AND glaald=? ","") RETURNING g_rtn_fields
            LET g_glaa004 = '', g_rtn_fields[1] , '']]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_browser_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_sql_rank" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_pre" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.after_clear" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.more" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xcblld" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xcblld" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xcblcomp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xcblcomp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xcbl002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xcbl002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xcbl002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xcbl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xcbl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xcbl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xcbl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xcbl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xcbl001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xcbl001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xcbl001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xcbl005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xcbl005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xcbl005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.more_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.befroe_query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.before_fetch" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.b_key_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.m_key_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.a_key_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_no_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xcblld" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xcblld" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xcblcomp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xcblcomp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xcbl002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xcbl002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xcbl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xcbl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xcbl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xcbl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xcbl001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xcbl001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xcbl005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xcbl005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xcbl002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xcbl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xcbl001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xcbl005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_insert.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcblseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcbl010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcbl010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcbl010_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.xcbl010_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcbl010_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcbl011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcbl011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcbl012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcbl012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcbl013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcbl013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcbl014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcbl014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcbl015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcbl015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcbl016" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcbl016" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcbl017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.xcbl017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcbl017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcbl018" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcbl018" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcbl019" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcbl019" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcbl020" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcbl020" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcbl021" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcbl021" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcbl022" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcbl022" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcbl100" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.xcbl100" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcbl100" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcbl110" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.xcbl110" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcbl110" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcbl120" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.xcbl120" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcbl120" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.xcblseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.xcbl010_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.xcbl100" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.xcbl110" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.xcbl120" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_inputarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ref_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ref_show.body.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ref_show.other_reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="bfill.foreach" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.more" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="before_delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_single_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_single_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_single_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b段" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.page_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="function.axct201_show_ref" cite_std="N" status="u" ver="" src="s" new="Y" order="1">
<![CDATA[# 參考欄位帶值
PRIVATE FUNCTION axct201_show_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcbl_m.xcblld
   CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcbl_m.xcblld_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcbl_m.xcblld_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcbl_m.xcblcomp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcbl_m.xcblcomp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcbl_m.xcblcomp_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcbl_m.xcbl004
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcbl_m.xcbl004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcbl_m.xcbl004_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcbl_m.xcblld
   CALL ap_ref_array2(g_ref_fields,"SELECT glaa004 FROM glaa_t WHERE glaaent='"||g_enterprise||"' AND glaald=? ","") RETURNING g_rtn_fields
   LET g_glaa004 = '', g_rtn_fields[1] , ''
END FUNCTION]]>
</point>
  <section id="axct201.b_fill" ver="3" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION axct201_b_fill(p_wc2)
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   #先清空單身變數內容
   CALL g_xcbl_d.clear()
   CALL g_xcbl2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   LET g_sql = "SELECT  UNIQUE xcblseq,xcbl010,xcbl011,xcbl012,xcbl013,xcbl014,xcbl015,xcbl016,xcbl017, 
       xcbl018,xcbl019,xcbl020,xcbl021,xcbl022,xcbl100,xcbl110,xcbl120,xcblseq,xcblownid,xcblowndp,xcblcrtid, 
       xcblcrtdp,xcblcrtdt,xcblmodid,xcblmoddt,t1.oofa011 ,t2.ooefl003 ,t3.oofa011 ,t4.ooefl003 ,t5.oofa011 FROM xcbl_t", 
          
               "",
               
                              " LEFT JOIN oofa_t t1 ON t1.oofaent='"||g_enterprise||"' AND t1.oofa002='2' AND t1.oofa003=xcblownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=xcblowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t3 ON t3.oofaent='"||g_enterprise||"' AND t3.oofa002='2' AND t3.oofa003=xcblcrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=xcblcrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t5 ON t5.oofaent='"||g_enterprise||"' AND t5.oofa002='2' AND t5.oofa003=xcblmodid  ",
 
               " WHERE xcblent= ? AND xcblld=? AND xcbl001=? AND xcbl002=? AND xcbl003=? AND xcbl004=? AND xcbl005=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("xcbl_t")
   END IF
   
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axct201_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY xcbl_t.xcblseq"
      
      #add-point:b_fill段fill_before
      {<point name="b_fill.fill_before"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE axct201_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR axct201_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xcbl_m.xcblld,g_xcbl_m.xcbl001,g_xcbl_m.xcbl002,g_xcbl_m.xcbl003,g_xcbl_m.xcbl004,g_xcbl_m.xcbl005
                                               
      FOREACH b_fill_cs INTO g_xcbl_d[l_ac].xcblseq,g_xcbl_d[l_ac].xcbl010,g_xcbl_d[l_ac].xcbl011,g_xcbl_d[l_ac].xcbl012, 
          g_xcbl_d[l_ac].xcbl013,g_xcbl_d[l_ac].xcbl014,g_xcbl_d[l_ac].xcbl015,g_xcbl_d[l_ac].xcbl016, 
          g_xcbl_d[l_ac].xcbl017,g_xcbl_d[l_ac].xcbl018,g_xcbl_d[l_ac].xcbl019,g_xcbl_d[l_ac].xcbl020, 
          g_xcbl_d[l_ac].xcbl021,g_xcbl_d[l_ac].xcbl022,g_xcbl_d[l_ac].xcbl100,g_xcbl_d[l_ac].xcbl110, 
          g_xcbl_d[l_ac].xcbl120,g_xcbl2_d[l_ac].xcblseq,g_xcbl2_d[l_ac].xcblownid,g_xcbl2_d[l_ac].xcblowndp, 
          g_xcbl2_d[l_ac].xcblcrtid,g_xcbl2_d[l_ac].xcblcrtdp,g_xcbl2_d[l_ac].xcblcrtdt,g_xcbl2_d[l_ac].xcblmodid, 
          g_xcbl2_d[l_ac].xcblmoddt,g_xcbl2_d[l_ac].xcblownid_desc,g_xcbl2_d[l_ac].xcblowndp_desc,g_xcbl2_d[l_ac].xcblcrtid_desc, 
          g_xcbl2_d[l_ac].xcblcrtdp_desc,g_xcbl2_d[l_ac].xcblmodid_desc
                             
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         #帶出公用欄位reference值
         
         
         #此段落由子樣板a12產生
      #LET g_xcbl2_d[l_ac].xcblownid_desc = cl_get_username(g_xcbl2_d[l_ac].xcblownid)
      #LET g_xcbl2_d[l_ac].xcblowndp_desc = cl_get_deptname(g_xcbl2_d[l_ac].xcblowndp)
      #LET g_xcbl2_d[l_ac].xcblcrtid_desc = cl_get_username(g_xcbl2_d[l_ac].xcblcrtid)
      #LET g_xcbl2_d[l_ac].xcblcrtdp_desc = cl_get_deptname(g_xcbl2_d[l_ac].xcblcrtdp)
      #LET g_xcbl2_d[l_ac].xcblmodid_desc = cl_get_username(g_xcbl2_d[l_ac].xcblmodid)
      
 
 
 
        
         #add-point:單身資料抓取
         {<point name="bfill.foreach"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      
            CALL g_xcbl_d.deleteElement(g_xcbl_d.getLength())
      CALL g_xcbl2_d.deleteElement(g_xcbl2_d.getLength())
 
   END IF
   
   #add-point:b_fill段more
   {<point name="b_fill.more"/>}
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE axct201_pb   
   
END FUNCTION
]]>
</section>
  <section id="axct201.b_fill2" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION axct201_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
]]>
</section>
  <section id="axct201.before_delete" ver="1" status="" src="s">
<![CDATA[#+ 單身db資料刪除
PRIVATE FUNCTION axct201_before_delete()
   #add-point:before_delete段define
   {<point name="before_delete.define"/>}
   #end add-point 
   
   #add-point:單筆刪除前
   {<point name="delete.body.b_single_delete" mark="Y"/>}
   #end add-point
   
   DELETE FROM xcbl_t
    WHERE xcblent = g_enterprise AND xcblld = g_xcbl_m.xcblld AND
                              xcbl001 = g_xcbl_m.xcbl001 AND
                              xcbl002 = g_xcbl_m.xcbl002 AND
                              xcbl003 = g_xcbl_m.xcbl003 AND
                              xcbl004 = g_xcbl_m.xcbl004 AND
                              xcbl005 = g_xcbl_m.xcbl005 AND
 
          xcblseq = g_xcbl_d_t.xcblseq
 
      
   #add-point:單筆刪除中
   {<point name="delete.body.m_single_delete"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("xcbl_t",SQLCA.sqlcode,1)
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後
   {<point name="delete.body.a_single_delete"/>}
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
]]>
</section>
  <section id="axct201.browser_fill" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axct201_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point    
   
   CALL g_browser.clear()
 
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "xcblld"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF l_wc2 <> " 1=1" OR NOT cl_null(l_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xcblld ",
                      ", xcbl001 ",
                      ", xcbl002 ",
                      ", xcbl003 ",
                      ", xcbl004 ",
                      ", xcbl005 ",
 
                      " FROM xcbl_t ",
                      " ",
                      " ",
 
                      " WHERE xcblent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xcbl_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xcblld ",
                      ", xcbl001 ",
                      ", xcbl002 ",
                      ", xcbl003 ",
                      ", xcbl004 ",
                      ", xcbl005 ",
 
                      " FROM xcbl_t ",
                      " ",
                      " ",
                      " WHERE xcblent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xcbl_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
   
   #若超過最大顯示筆數
   LET g_error_show = 0
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照xcblld,xcbl001,xcbl002,xcbl003,xcbl004,xcbl005 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT xcblld,xcbl001,xcbl002,xcbl003,xcbl004,xcbl005",
                " FROM xcbl_t ",
 
                
                " WHERE xcblent = '" ||g_enterprise|| "' AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("xcbl_t")
 
   #add-point:browser_fill,sql_rank前
   {<point name="browser_fill.before_sql_rank"/>}
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前
   {<point name="browser_fill.before_pre"/>}
   #end add-point
    
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料    
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_xcblld,g_browser[g_cnt].b_xcbl001,g_browser[g_cnt].b_xcbl002, 
       g_browser[g_cnt].b_xcbl003,g_browser[g_cnt].b_xcbl004,g_browser[g_cnt].b_xcbl005 
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point    
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_xcbl_m.* TO NULL
      CALL g_xcbl_d.clear()
      CALL g_xcbl2_d.clear()
 
      #add-point:browser_fill段after_clear
      {<point name="browser_fill.after_clear"/>}
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="axct201.browser_search" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axct201_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1"
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY xcblld"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL axct201_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="axct201.construct" ver="6" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION axct201_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_xcbl_m.* TO NULL
   CALL g_xcbl_d.clear()
   CALL g_xcbl2_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外
   {<point name="cs.head.before"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xcblld,xcblcomp,xcbl002,xcbl003,xcbl004,xcbl001,xcbl005
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
                 #Ctrlp:construct.c.xcblld
         ON ACTION controlp INFIELD xcblld
            #add-point:ON ACTION controlp INFIELD xcblld
            {<point name="construct.c.xcblld" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcblld
            #add-point:BEFORE FIELD xcblld
            {<point name="construct.b.xcblld" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcblld
            
            #add-point:AFTER FIELD xcblld
            {<point name="construct.a.xcblld" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xcblcomp
         ON ACTION controlp INFIELD xcblcomp
            #add-point:ON ACTION controlp INFIELD xcblcomp
            {<point name="construct.c.xcblcomp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcblcomp
            #add-point:BEFORE FIELD xcblcomp
            {<point name="construct.b.xcblcomp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcblcomp
            
            #add-point:AFTER FIELD xcblcomp
            {<point name="construct.a.xcblcomp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl002
            #add-point:BEFORE FIELD xcbl002
            {<point name="construct.b.xcbl002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl002
            
            #add-point:AFTER FIELD xcbl002
            {<point name="construct.a.xcbl002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xcbl002
         ON ACTION controlp INFIELD xcbl002
            #add-point:ON ACTION controlp INFIELD xcbl002
            {<point name="construct.c.xcbl002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl003
            #add-point:BEFORE FIELD xcbl003
            {<point name="construct.b.xcbl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl003
            
            #add-point:AFTER FIELD xcbl003
            {<point name="construct.a.xcbl003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xcbl003
         ON ACTION controlp INFIELD xcbl003
            #add-point:ON ACTION controlp INFIELD xcbl003
            {<point name="construct.c.xcbl003" />}
            #END add-point
 
         #Ctrlp:construct.c.xcbl004
         ON ACTION controlp INFIELD xcbl004
            #add-point:ON ACTION controlp INFIELD xcbl004
            {<point name="construct.c.xcbl004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl004
            #add-point:BEFORE FIELD xcbl004
            {<point name="construct.b.xcbl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl004
            
            #add-point:AFTER FIELD xcbl004
            {<point name="construct.a.xcbl004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl001
            #add-point:BEFORE FIELD xcbl001
            {<point name="construct.b.xcbl001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl001
            
            #add-point:AFTER FIELD xcbl001
            {<point name="construct.a.xcbl001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xcbl001
         ON ACTION controlp INFIELD xcbl001
            #add-point:ON ACTION controlp INFIELD xcbl001
            {<point name="construct.c.xcbl001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl005
            #add-point:BEFORE FIELD xcbl005
            {<point name="construct.b.xcbl005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl005
            
            #add-point:AFTER FIELD xcbl005
            {<point name="construct.a.xcbl005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xcbl005
         ON ACTION controlp INFIELD xcbl005
            #add-point:ON ACTION controlp INFIELD xcbl005
            {<point name="construct.c.xcbl005" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON xcblseq,xcbl010,xcbl010_desc,xcbl011,xcbl012,xcbl013,xcbl014,xcbl015, 
          xcbl016,xcbl017,xcbl018,xcbl019,xcbl020,xcbl021,xcbl022,xcbl100,xcbl110,xcbl120,xcblownid, 
          xcblowndp,xcblcrtid,xcblcrtdp,xcblcrtdt,xcblmodid,xcblmoddt
           FROM s_detail1[1].xcblseq,s_detail1[1].xcbl010,s_detail1[1].xcbl010_desc,s_detail1[1].xcbl011, 
               s_detail1[1].xcbl012,s_detail1[1].xcbl013,s_detail1[1].xcbl014,s_detail1[1].xcbl015,s_detail1[1].xcbl016, 
               s_detail1[1].xcbl017,s_detail1[1].xcbl018,s_detail1[1].xcbl019,s_detail1[1].xcbl020,s_detail1[1].xcbl021, 
               s_detail1[1].xcbl022,s_detail1[1].xcbl100,s_detail1[1].xcbl110,s_detail1[1].xcbl120,s_detail2[1].xcblownid, 
               s_detail2[1].xcblowndp,s_detail2[1].xcblcrtid,s_detail2[1].xcblcrtdp,s_detail2[1].xcblcrtdt, 
               s_detail2[1].xcblmodid,s_detail2[1].xcblmoddt
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
         #單身公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<xcblcrtdt>>----
         AFTER FIELD xcblcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xcblmoddt>>----
         AFTER FIELD xcblmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xcblcnfdt>>----
         
         #----<<xcblpstdt>>----
 
 
           
         #單身一般欄位開窗相關處理
            
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog
         {<point name="cs.before_dialog"/>}
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
]]>
</section>
  <section id="axct201.default_search" ver="2" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION axct201_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xcblld = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xcbl001 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xcbl002 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " xcbl003 = '", g_argv[04], "' AND "
   END IF
   IF NOT cl_null(g_argv[05]) THEN
      LET ls_wc = ls_wc, " xcbl004 = '", g_argv[05], "' AND "
   END IF
   IF NOT cl_null(g_argv[06]) THEN
      LET ls_wc = ls_wc, " xcbl005 = '", g_argv[06], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="axct201.delete" ver="3" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION axct201_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_xcbl_m.xcblld IS NULL
   OR g_xcbl_m.xcbl001 IS NULL
   OR g_xcbl_m.xcbl002 IS NULL
   OR g_xcbl_m.xcbl003 IS NULL
   OR g_xcbl_m.xcbl004 IS NULL
   OR g_xcbl_m.xcbl005 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE axct201_master_referesh USING g_xcbl_m.xcblld,g_xcbl_m.xcbl001,g_xcbl_m.xcbl002,g_xcbl_m.xcbl003, 
       g_xcbl_m.xcbl004,g_xcbl_m.xcbl005 INTO g_xcbl_m.xcblld,g_xcbl_m.xcblcomp,g_xcbl_m.xcbl002,g_xcbl_m.xcbl003, 
       g_xcbl_m.xcbl004,g_xcbl_m.xcbl001,g_xcbl_m.xcbl005,g_xcbl_m.xcblld_desc,g_xcbl_m.xcblcomp_desc, 
       g_xcbl_m.xcbl004_desc
   
   CALL axct201_show()
   
   CALL s_transaction_begin()
   
   
 
   OPEN axct201_cl USING g_enterprise,g_xcbl_m.xcblld
                                                       ,g_xcbl_m.xcbl001
                                                       ,g_xcbl_m.xcbl002
                                                       ,g_xcbl_m.xcbl003
                                                       ,g_xcbl_m.xcbl004
                                                       ,g_xcbl_m.xcbl005
 
   IF STATUS THEN
      CALL cl_err("OPEN axct201_cl:", STATUS, 1)
      CLOSE axct201_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH axct201_cl INTO g_xcbl_m.xcblld,g_xcbl_m.xcblld_desc,g_xcbl_m.xcblcomp,g_xcbl_m.xcblcomp_desc, 
       g_xcbl_m.xcbl002,g_xcbl_m.xcbl003,g_xcbl_m.xcbl004,g_xcbl_m.xcbl004_desc,g_xcbl_m.xcbl001,g_xcbl_m.xcbl005 

   
   #若資料已被他人LOCK
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xcbl_m.xcblld,SQLCA.sqlcode,0)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL axct201_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM xcbl_t WHERE xcblent = g_enterprise AND xcblld = g_xcbl_m.xcblld
                                                               AND xcbl001 = g_xcbl_m.xcbl001
                                                               AND xcbl002 = g_xcbl_m.xcbl002
                                                               AND xcbl003 = g_xcbl_m.xcbl003
                                                               AND xcbl004 = g_xcbl_m.xcbl004
                                                               AND xcbl005 = g_xcbl_m.xcbl005
 
                                                               
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
      
      IF SQLCA.sqlcode THEN
         CALL cl_err("xcbl_t",SQLCA.sqlcode,0)
         CALL s_transaction_end('N','0')
      END IF
 
      
  
      #add-point:單身刪除後 
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
 
      
      CLEAR FORM
      CALL g_xcbl_d.clear() 
      CALL g_xcbl2_d.clear()       
 
     
      CALL axct201_ui_browser_refresh()  
      CALL axct201_ui_headershow()  
      CALL axct201_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axct201_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         LET g_wc2 = " 1=1"
         CALL axct201_browser_fill("F")
      END IF
       
   END IF
 
   CLOSE axct201_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_xcbl_m.xcblld,'D')
    
END FUNCTION
]]>
</section>
  <section id="axct201.delete_b" ver="1" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION axct201_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
 
   
END FUNCTION
]]>
</section>
  <section id="axct201.description" ver="41" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000048
#+ 
#+ Filename...: axct201
#+ Description: 人工制費收集維護作業
#+ Creator....: 02114(2014/05/08)
#+ Modifier...: 02114(2014/06/29)
#+ Buildtype..: 應用 i07 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="axct201.detail_reproduce" ver="2" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION axct201_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xcbl_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axct201_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axct201_detail AS ",
                "SELECT * FROM xcbl_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axct201_detail SELECT * FROM xcbl_t 
                                         WHERE xcblent = g_enterprise AND xcblld = g_xcblld_t
                                         AND xcbl001 = g_xcbl001_t
                                         AND xcbl002 = g_xcbl002_t
                                         AND xcbl003 = g_xcbl003_t
                                         AND xcbl004 = g_xcbl004_t
                                         AND xcbl005 = g_xcbl005_t
 
   
   #將key修正為調整後   
   UPDATE axct201_detail 
      #更新key欄位
      SET xcblld = g_xcbl_m.xcblld
          , xcbl001 = g_xcbl_m.xcbl001
          , xcbl002 = g_xcbl_m.xcbl002
          , xcbl003 = g_xcbl_m.xcbl003
          , xcbl004 = g_xcbl_m.xcbl004
          , xcbl005 = g_xcbl_m.xcbl005
 
      #更新共用欄位
      #此段落由子樣板a13產生
       , xcblownid = g_user
       , xcblowndp = g_dept
       , xcblcrtid = g_user
       , xcblcrtdp = g_dept 
       , xcblcrtdt = ld_date
       , xcblmodid = "" 
       , xcblmoddt = "" 
 
 
                                       
  
   #將資料塞回原table   
   INSERT INTO xcbl_t SELECT * FROM axct201_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axct201_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xcblld_t = g_xcbl_m.xcblld
   LET g_xcbl001_t = g_xcbl_m.xcbl001
   LET g_xcbl002_t = g_xcbl_m.xcbl002
   LET g_xcbl003_t = g_xcbl_m.xcbl003
   LET g_xcbl004_t = g_xcbl_m.xcbl004
   LET g_xcbl005_t = g_xcbl_m.xcbl005
 
   
   DROP TABLE axct201_detail
   
END FUNCTION
]]>
</section>
  <section id="axct201.fetch" ver="3" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axct201_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   #add-point:fetch段動作開始前
   {<point name="fetch.before_fetch"/>}
   #end add-point    
 
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   CALL axct201_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xcbl_m.xcblld = g_browser[g_current_idx].b_xcblld
   LET g_xcbl_m.xcbl001 = g_browser[g_current_idx].b_xcbl001
   LET g_xcbl_m.xcbl002 = g_browser[g_current_idx].b_xcbl002
   LET g_xcbl_m.xcbl003 = g_browser[g_current_idx].b_xcbl003
   LET g_xcbl_m.xcbl004 = g_browser[g_current_idx].b_xcbl004
   LET g_xcbl_m.xcbl005 = g_browser[g_current_idx].b_xcbl005
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axct201_master_referesh USING g_xcbl_m.xcblld,g_xcbl_m.xcbl001,g_xcbl_m.xcbl002,g_xcbl_m.xcbl003, 
       g_xcbl_m.xcbl004,g_xcbl_m.xcbl005 INTO g_xcbl_m.xcblld,g_xcbl_m.xcblcomp,g_xcbl_m.xcbl002,g_xcbl_m.xcbl003, 
       g_xcbl_m.xcbl004,g_xcbl_m.xcbl001,g_xcbl_m.xcbl005,g_xcbl_m.xcblld_desc,g_xcbl_m.xcblcomp_desc, 
       g_xcbl_m.xcbl004_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("xcbl_t",SQLCA.sqlcode,1)
      INITIALIZE g_xcbl_m.* TO NULL
      RETURN
   END IF
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL axct201_show()
 
   
 
END FUNCTION
]]>
</section>
  <section id="axct201.fill_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION axct201_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   
   #add-point:fill_chk段other
   {<point name="fill_chk.other"/>}
   #end add-point
   
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="axct201.global" ver="4" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xcbl_m        RECORD
       xcblld LIKE xcbl_t.xcblld, 
   xcblld_desc LIKE type_t.chr80, 
   xcblcomp LIKE xcbl_t.xcblcomp, 
   xcblcomp_desc LIKE type_t.chr80, 
   xcbl002 LIKE xcbl_t.xcbl002, 
   xcbl003 LIKE xcbl_t.xcbl003, 
   xcbl004 LIKE xcbl_t.xcbl004, 
   xcbl004_desc LIKE type_t.chr80, 
   xcbl001 LIKE xcbl_t.xcbl001, 
   xcbl005 LIKE xcbl_t.xcbl005
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xcbl_d        RECORD
       xcblseq LIKE xcbl_t.xcblseq, 
   xcbl010 LIKE xcbl_t.xcbl010, 
   xcbl010_desc LIKE type_t.chr80, 
   xcbl011 LIKE xcbl_t.xcbl011, 
   xcbl012 LIKE xcbl_t.xcbl012, 
   xcbl013 LIKE xcbl_t.xcbl013, 
   xcbl014 LIKE xcbl_t.xcbl014, 
   xcbl015 LIKE xcbl_t.xcbl015, 
   xcbl016 LIKE xcbl_t.xcbl016, 
   xcbl017 LIKE xcbl_t.xcbl017, 
   xcbl018 LIKE xcbl_t.xcbl018, 
   xcbl019 LIKE xcbl_t.xcbl019, 
   xcbl020 LIKE xcbl_t.xcbl020, 
   xcbl021 LIKE xcbl_t.xcbl021, 
   xcbl022 LIKE xcbl_t.xcbl022, 
   xcbl100 LIKE xcbl_t.xcbl100, 
   xcbl110 LIKE xcbl_t.xcbl110, 
   xcbl120 LIKE xcbl_t.xcbl120
       END RECORD
PRIVATE TYPE type_g_xcbl2_d RECORD
       xcblseq LIKE xcbl_t.xcblseq, 
   xcblownid LIKE xcbl_t.xcblownid, 
   xcblownid_desc LIKE type_t.chr500, 
   xcblowndp LIKE xcbl_t.xcblowndp, 
   xcblowndp_desc LIKE type_t.chr500, 
   xcblcrtid LIKE xcbl_t.xcblcrtid, 
   xcblcrtid_desc LIKE type_t.chr500, 
   xcblcrtdp LIKE xcbl_t.xcblcrtdp, 
   xcblcrtdp_desc LIKE type_t.chr500, 
   xcblcrtdt DATETIME YEAR TO SECOND, 
   xcblmodid LIKE xcbl_t.xcblmodid, 
   xcblmodid_desc LIKE type_t.chr500, 
   xcblmoddt DATETIME YEAR TO SECOND
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_xcbl_m          type_g_xcbl_m
DEFINE g_xcbl_m_t        type_g_xcbl_m
 
   DEFINE g_xcblld_t LIKE xcbl_t.xcblld
DEFINE g_xcbl002_t LIKE xcbl_t.xcbl002
DEFINE g_xcbl003_t LIKE xcbl_t.xcbl003
DEFINE g_xcbl004_t LIKE xcbl_t.xcbl004
DEFINE g_xcbl001_t LIKE xcbl_t.xcbl001
DEFINE g_xcbl005_t LIKE xcbl_t.xcbl005
 
 
DEFINE g_xcbl_d          DYNAMIC ARRAY OF type_g_xcbl_d
DEFINE g_xcbl_d_t        type_g_xcbl_d
DEFINE g_xcbl2_d   DYNAMIC ARRAY OF type_g_xcbl2_d
DEFINE g_xcbl2_d_t type_g_xcbl2_d
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_xcblld LIKE xcbl_t.xcblld,
      b_xcbl001 LIKE xcbl_t.xcbl001,
      b_xcbl002 LIKE xcbl_t.xcbl002,
      b_xcbl003 LIKE xcbl_t.xcbl003,
      b_xcbl004 LIKE xcbl_t.xcbl004,
      b_xcbl005 LIKE xcbl_t.xcbl005
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="axct201.init" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axct201_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
  
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL axct201_default_search()
    
END FUNCTION
]]>
</section>
  <section id="axct201.input" ver="3" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION axct201_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point    
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT xcblseq,xcbl010,xcbl011,xcbl012,xcbl013,xcbl014,xcbl015,xcbl016,xcbl017, 
       xcbl018,xcbl019,xcbl020,xcbl021,xcbl022,xcbl100,xcbl110,xcbl120,xcblseq,xcblownid,xcblowndp,xcblcrtid, 
       xcblcrtdp,xcblcrtdt,xcblmodid,xcblmoddt FROM xcbl_t WHERE xcblent=? AND xcblld=? AND xcbl001=?  
       AND xcbl002=? AND xcbl003=? AND xcbl004=? AND xcbl005=? AND xcblseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axct201_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axct201_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL axct201_set_no_entry(p_cmd)
   #add-point:set_no_entry後
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_xcbl_m.xcblld,g_xcbl_m.xcblcomp,g_xcbl_m.xcbl002,g_xcbl_m.xcbl003,g_xcbl_m.xcbl004, 
       g_xcbl_m.xcbl001,g_xcbl_m.xcbl005
   
   LET lb_reproduce = FALSE
   
   #add-point:進入修改段前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
</section>
  <section id="axct201.input.body" ver="4" status="" src="s">
<![CDATA[      #Page1 預設值產生於此處
      INPUT ARRAY g_xcbl_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcbl_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axct201_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前
            {<point name="input.body.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axct201_cl USING g_enterprise,
                                               g_xcbl_m.xcblld
                                               ,g_xcbl_m.xcbl001
                                               ,g_xcbl_m.xcbl002
                                               ,g_xcbl_m.xcbl003
                                               ,g_xcbl_m.xcbl004
                                               ,g_xcbl_m.xcbl005
 
                                               
               IF STATUS THEN
                  CALL cl_err("OPEN axct201_cl:", STATUS, 1)
                  CLOSE axct201_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_xcbl_d[l_ac].xcblseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xcbl_d_t.* = g_xcbl_d[l_ac].*  #BACKUP
               CALL axct201_set_entry_b(l_cmd)
               #add-point:set_entry_b後
               {<point name="input.body.before_row.set_entry_b"/>}
               #end add-point
               CALL axct201_set_no_entry_b(l_cmd)
               OPEN axct201_bcl USING g_enterprise,g_xcbl_m.xcblld,
                                                g_xcbl_m.xcbl001,
                                                g_xcbl_m.xcbl002,
                                                g_xcbl_m.xcbl003,
                                                g_xcbl_m.xcbl004,
                                                g_xcbl_m.xcbl005,
 
                                                g_xcbl_d_t.xcblseq
 
               IF STATUS THEN
                  CALL cl_err("OPEN axct201_bcl:", STATUS, 1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axct201_bcl INTO g_xcbl_d[l_ac].xcblseq,g_xcbl_d[l_ac].xcbl010,g_xcbl_d[l_ac].xcbl011, 
                      g_xcbl_d[l_ac].xcbl012,g_xcbl_d[l_ac].xcbl013,g_xcbl_d[l_ac].xcbl014,g_xcbl_d[l_ac].xcbl015, 
                      g_xcbl_d[l_ac].xcbl016,g_xcbl_d[l_ac].xcbl017,g_xcbl_d[l_ac].xcbl018,g_xcbl_d[l_ac].xcbl019, 
                      g_xcbl_d[l_ac].xcbl020,g_xcbl_d[l_ac].xcbl021,g_xcbl_d[l_ac].xcbl022,g_xcbl_d[l_ac].xcbl100, 
                      g_xcbl_d[l_ac].xcbl110,g_xcbl_d[l_ac].xcbl120
                  IF SQLCA.sqlcode THEN
                      CALL cl_err(g_xcbl_d_t.xcblseq,SQLCA.sqlcode,1)
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axct201_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_xcbl_d_t.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xcbl_d[l_ac].* TO NULL
            
            #公用欄位預設值
            #此段落由子樣板a14產生    
      LET g_xcbl2_d[l_ac].xcblownid = g_user
      LET g_xcbl2_d[l_ac].xcblowndp = g_dept
      LET g_xcbl2_d[l_ac].xcblcrtid = g_user
      LET g_xcbl2_d[l_ac].xcblcrtdp = g_dept 
      LET g_xcbl2_d[l_ac].xcblcrtdt = cl_get_current()
      LET g_xcbl2_d[l_ac].xcblmodid = ""
      LET g_xcbl2_d[l_ac].xcblmoddt = ""
 
  
            
            #一般欄位預設值
            
            
            
            LET g_xcbl_d_t.* = g_xcbl_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axct201_set_entry_b(l_cmd)
            #add-point:set_entry_b後
            {<point name="input.body.before_insert.set_entry_b"/>}
            #end add-point
            CALL axct201_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xcbl_d[li_reproduce_target].* = g_xcbl_d[li_reproduce].*
               LET g_xcbl2_d[li_reproduce_target].* = g_xcbl2_d[li_reproduce].*
 
               LET g_xcbl_d[g_xcbl_d.getLength()].xcblseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xcbl_t 
             WHERE xcblent = g_enterprise AND xcblld = g_xcbl_m.xcblld
               AND xcbl001 = g_xcbl_m.xcbl001
               AND xcbl002 = g_xcbl_m.xcbl002
               AND xcbl003 = g_xcbl_m.xcbl003
               AND xcbl004 = g_xcbl_m.xcbl004
               AND xcbl005 = g_xcbl_m.xcbl005
 
               AND xcblseq = g_xcbl_d[l_ac].xcblseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
               {<point name="input.body.b_insert" mark="Y"/>}
               #end add-point
               INSERT INTO xcbl_t
                           (xcblent,
                            xcblld,xcblcomp,xcbl002,xcbl003,xcbl004,xcbl001,xcbl005,
                            xcblseq
                            ,xcbl010,xcbl011,xcbl012,xcbl013,xcbl014,xcbl015,xcbl016,xcbl017,xcbl018,xcbl019,xcbl020,xcbl021,xcbl022,xcbl100,xcbl110,xcbl120,xcblownid,xcblowndp,xcblcrtid,xcblcrtdp,xcblcrtdt,xcblmodid,xcblmoddt) 
                     VALUES(g_enterprise,
                            g_xcbl_m.xcblld,g_xcbl_m.xcblcomp,g_xcbl_m.xcbl002,g_xcbl_m.xcbl003,g_xcbl_m.xcbl004,g_xcbl_m.xcbl001,g_xcbl_m.xcbl005,
                            g_xcbl_d[l_ac].xcblseq
                            ,g_xcbl_d[l_ac].xcbl010,g_xcbl_d[l_ac].xcbl011,g_xcbl_d[l_ac].xcbl012,g_xcbl_d[l_ac].xcbl013, 
                                g_xcbl_d[l_ac].xcbl014,g_xcbl_d[l_ac].xcbl015,g_xcbl_d[l_ac].xcbl016, 
                                g_xcbl_d[l_ac].xcbl017,g_xcbl_d[l_ac].xcbl018,g_xcbl_d[l_ac].xcbl019, 
                                g_xcbl_d[l_ac].xcbl020,g_xcbl_d[l_ac].xcbl021,g_xcbl_d[l_ac].xcbl022, 
                                g_xcbl_d[l_ac].xcbl100,g_xcbl_d[l_ac].xcbl110,g_xcbl_d[l_ac].xcbl120, 
                                g_xcbl2_d[l_ac].xcblownid,g_xcbl2_d[l_ac].xcblowndp,g_xcbl2_d[l_ac].xcblcrtid, 
                                g_xcbl2_d[l_ac].xcblcrtdp,g_xcbl2_d[l_ac].xcblcrtdt,g_xcbl2_d[l_ac].xcblmodid, 
                                g_xcbl2_d[l_ac].xcblmoddt)
               #add-point:單身新增中
               {<point name="input.body.m_insert"/>}
               #end add-point
               LET p_cmd = 'u'
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_xcbl_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("xcbl_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後
            {<point name="input.body.after_insert"/>}
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_xcbl_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_xcbl_d.deleteElement(l_ac)
               NEXT FIELD xcblseq
            END IF
            IF g_xcbl_d_t.xcblseq IS NOT NULL
 
               THEN
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete"/>}
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               IF axct201_before_delete() THEN 
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axct201_bcl
               LET l_count = g_xcbl_d.getLength()
            END IF 
            
            #add-point:單身刪除後
            {<point name="input.body.a_delete"/>}
            #end add-point
              
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body.after_delete"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD xcblseq
            #add-point:BEFORE FIELD xcblseq
            {<point name="input.b.page1.xcblseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcblseq
            
            #add-point:AFTER FIELD xcblseq
            {<point name="input.a.page1.xcblseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcblseq
            #add-point:ON CHANGE xcblseq
            {<point name="input.g.page1.xcblseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl010
            
            #add-point:AFTER FIELD xcbl010
            {<point name="input.a.page1.xcbl010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl010
            #add-point:BEFORE FIELD xcbl010
            {<point name="input.b.page1.xcbl010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl010
            #add-point:ON CHANGE xcbl010
            {<point name="input.g.page1.xcbl010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl010_desc
            #add-point:BEFORE FIELD xcbl010_desc
            {<point name="input.b.page1.xcbl010_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl010_desc
            
            #add-point:AFTER FIELD xcbl010_desc
            {<point name="input.a.page1.xcbl010_desc" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl010_desc
            #add-point:ON CHANGE xcbl010_desc
            {<point name="input.g.page1.xcbl010_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl011
            
            #add-point:AFTER FIELD xcbl011
            {<point name="input.a.page1.xcbl011" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl011
            #add-point:BEFORE FIELD xcbl011
            {<point name="input.b.page1.xcbl011" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl011
            #add-point:ON CHANGE xcbl011
            {<point name="input.g.page1.xcbl011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl012
            
            #add-point:AFTER FIELD xcbl012
            {<point name="input.a.page1.xcbl012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl012
            #add-point:BEFORE FIELD xcbl012
            {<point name="input.b.page1.xcbl012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl012
            #add-point:ON CHANGE xcbl012
            {<point name="input.g.page1.xcbl012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl013
            
            #add-point:AFTER FIELD xcbl013
            {<point name="input.a.page1.xcbl013" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl013
            #add-point:BEFORE FIELD xcbl013
            {<point name="input.b.page1.xcbl013" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl013
            #add-point:ON CHANGE xcbl013
            {<point name="input.g.page1.xcbl013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl014
            
            #add-point:AFTER FIELD xcbl014
            {<point name="input.a.page1.xcbl014" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl014
            #add-point:BEFORE FIELD xcbl014
            {<point name="input.b.page1.xcbl014" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl014
            #add-point:ON CHANGE xcbl014
            {<point name="input.g.page1.xcbl014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl015
            
            #add-point:AFTER FIELD xcbl015
            {<point name="input.a.page1.xcbl015" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl015
            #add-point:BEFORE FIELD xcbl015
            {<point name="input.b.page1.xcbl015" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl015
            #add-point:ON CHANGE xcbl015
            {<point name="input.g.page1.xcbl015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl016
            
            #add-point:AFTER FIELD xcbl016
            {<point name="input.a.page1.xcbl016" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl016
            #add-point:BEFORE FIELD xcbl016
            {<point name="input.b.page1.xcbl016" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl016
            #add-point:ON CHANGE xcbl016
            {<point name="input.g.page1.xcbl016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl017
            #add-point:BEFORE FIELD xcbl017
            {<point name="input.b.page1.xcbl017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl017
            
            #add-point:AFTER FIELD xcbl017
            {<point name="input.a.page1.xcbl017" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl017
            #add-point:ON CHANGE xcbl017
            {<point name="input.g.page1.xcbl017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl018
            
            #add-point:AFTER FIELD xcbl018
            {<point name="input.a.page1.xcbl018" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl018
            #add-point:BEFORE FIELD xcbl018
            {<point name="input.b.page1.xcbl018" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl018
            #add-point:ON CHANGE xcbl018
            {<point name="input.g.page1.xcbl018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl019
            
            #add-point:AFTER FIELD xcbl019
            {<point name="input.a.page1.xcbl019" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl019
            #add-point:BEFORE FIELD xcbl019
            {<point name="input.b.page1.xcbl019" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl019
            #add-point:ON CHANGE xcbl019
            {<point name="input.g.page1.xcbl019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl020
            
            #add-point:AFTER FIELD xcbl020
            {<point name="input.a.page1.xcbl020" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl020
            #add-point:BEFORE FIELD xcbl020
            {<point name="input.b.page1.xcbl020" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl020
            #add-point:ON CHANGE xcbl020
            {<point name="input.g.page1.xcbl020" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl021
            
            #add-point:AFTER FIELD xcbl021
            {<point name="input.a.page1.xcbl021" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl021
            #add-point:BEFORE FIELD xcbl021
            {<point name="input.b.page1.xcbl021" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl021
            #add-point:ON CHANGE xcbl021
            {<point name="input.g.page1.xcbl021" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl022
            
            #add-point:AFTER FIELD xcbl022
            {<point name="input.a.page1.xcbl022" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl022
            #add-point:BEFORE FIELD xcbl022
            {<point name="input.b.page1.xcbl022" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl022
            #add-point:ON CHANGE xcbl022
            {<point name="input.g.page1.xcbl022" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl100
            #add-point:BEFORE FIELD xcbl100
            {<point name="input.b.page1.xcbl100" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl100
            
            #add-point:AFTER FIELD xcbl100
            {<point name="input.a.page1.xcbl100" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl100
            #add-point:ON CHANGE xcbl100
            {<point name="input.g.page1.xcbl100" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl110
            #add-point:BEFORE FIELD xcbl110
            {<point name="input.b.page1.xcbl110" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl110
            
            #add-point:AFTER FIELD xcbl110
            {<point name="input.a.page1.xcbl110" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl110
            #add-point:ON CHANGE xcbl110
            {<point name="input.g.page1.xcbl110" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl120
            #add-point:BEFORE FIELD xcbl120
            {<point name="input.b.page1.xcbl120" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl120
            
            #add-point:AFTER FIELD xcbl120
            {<point name="input.a.page1.xcbl120" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl120
            #add-point:ON CHANGE xcbl120
            {<point name="input.g.page1.xcbl120" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.xcblseq
         ON ACTION controlp INFIELD xcblseq
            #add-point:ON ACTION controlp INFIELD xcblseq
            {<point name="input.c.page1.xcblseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcbl010
         ON ACTION controlp INFIELD xcbl010
            #add-point:ON ACTION controlp INFIELD xcbl010
            {<point name="input.c.page1.xcbl010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcbl010_desc
         ON ACTION controlp INFIELD xcbl010_desc
            #add-point:ON ACTION controlp INFIELD xcbl010_desc
            {<point name="input.c.page1.xcbl010_desc" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcbl011
         ON ACTION controlp INFIELD xcbl011
            #add-point:ON ACTION controlp INFIELD xcbl011
            {<point name="input.c.page1.xcbl011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcbl012
         ON ACTION controlp INFIELD xcbl012
            #add-point:ON ACTION controlp INFIELD xcbl012
            {<point name="input.c.page1.xcbl012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcbl013
         ON ACTION controlp INFIELD xcbl013
            #add-point:ON ACTION controlp INFIELD xcbl013
            {<point name="input.c.page1.xcbl013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcbl014
         ON ACTION controlp INFIELD xcbl014
            #add-point:ON ACTION controlp INFIELD xcbl014
            {<point name="input.c.page1.xcbl014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcbl015
         ON ACTION controlp INFIELD xcbl015
            #add-point:ON ACTION controlp INFIELD xcbl015
            {<point name="input.c.page1.xcbl015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcbl016
         ON ACTION controlp INFIELD xcbl016
            #add-point:ON ACTION controlp INFIELD xcbl016
            {<point name="input.c.page1.xcbl016" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcbl017
         ON ACTION controlp INFIELD xcbl017
            #add-point:ON ACTION controlp INFIELD xcbl017
            {<point name="input.c.page1.xcbl017" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcbl018
         ON ACTION controlp INFIELD xcbl018
            #add-point:ON ACTION controlp INFIELD xcbl018
            {<point name="input.c.page1.xcbl018" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcbl019
         ON ACTION controlp INFIELD xcbl019
            #add-point:ON ACTION controlp INFIELD xcbl019
            {<point name="input.c.page1.xcbl019" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcbl020
         ON ACTION controlp INFIELD xcbl020
            #add-point:ON ACTION controlp INFIELD xcbl020
            {<point name="input.c.page1.xcbl020" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcbl021
         ON ACTION controlp INFIELD xcbl021
            #add-point:ON ACTION controlp INFIELD xcbl021
            {<point name="input.c.page1.xcbl021" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcbl022
         ON ACTION controlp INFIELD xcbl022
            #add-point:ON ACTION controlp INFIELD xcbl022
            {<point name="input.c.page1.xcbl022" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcbl100
         ON ACTION controlp INFIELD xcbl100
            #add-point:ON ACTION controlp INFIELD xcbl100
            {<point name="input.c.page1.xcbl100" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcbl110
         ON ACTION controlp INFIELD xcbl110
            #add-point:ON ACTION controlp INFIELD xcbl110
            {<point name="input.c.page1.xcbl110" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcbl120
         ON ACTION controlp INFIELD xcbl120
            #add-point:ON ACTION controlp INFIELD xcbl120
            {<point name="input.c.page1.xcbl120" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_xcbl_d[l_ac].* = g_xcbl_d_t.*
               CLOSE axct201_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_xcbl_d[l_ac].xcblseq,-263,1)
               LET g_xcbl_d[l_ac].* = g_xcbl_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_xcbl2_d[l_ac].xcblmodid = g_user 
LET g_xcbl2_d[l_ac].xcblmoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
         
               UPDATE xcbl_t SET (xcblld,xcbl001,xcbl002,xcbl003,xcbl004,xcbl005,xcblseq,xcbl010,xcbl011, 
                   xcbl012,xcbl013,xcbl014,xcbl015,xcbl016,xcbl017,xcbl018,xcbl019,xcbl020,xcbl021,xcbl022, 
                   xcbl100,xcbl110,xcbl120,xcblownid,xcblowndp,xcblcrtid,xcblcrtdp,xcblcrtdt,xcblmodid, 
                   xcblmoddt) = (g_xcbl_m.xcblld,g_xcbl_m.xcbl001,g_xcbl_m.xcbl002,g_xcbl_m.xcbl003, 
                   g_xcbl_m.xcbl004,g_xcbl_m.xcbl005,g_xcbl_d[l_ac].xcblseq,g_xcbl_d[l_ac].xcbl010,g_xcbl_d[l_ac].xcbl011, 
                   g_xcbl_d[l_ac].xcbl012,g_xcbl_d[l_ac].xcbl013,g_xcbl_d[l_ac].xcbl014,g_xcbl_d[l_ac].xcbl015, 
                   g_xcbl_d[l_ac].xcbl016,g_xcbl_d[l_ac].xcbl017,g_xcbl_d[l_ac].xcbl018,g_xcbl_d[l_ac].xcbl019, 
                   g_xcbl_d[l_ac].xcbl020,g_xcbl_d[l_ac].xcbl021,g_xcbl_d[l_ac].xcbl022,g_xcbl_d[l_ac].xcbl100, 
                   g_xcbl_d[l_ac].xcbl110,g_xcbl_d[l_ac].xcbl120,g_xcbl2_d[l_ac].xcblownid,g_xcbl2_d[l_ac].xcblowndp, 
                   g_xcbl2_d[l_ac].xcblcrtid,g_xcbl2_d[l_ac].xcblcrtdp,g_xcbl2_d[l_ac].xcblcrtdt,g_xcbl2_d[l_ac].xcblmodid, 
                   g_xcbl2_d[l_ac].xcblmoddt)
                WHERE xcblent = g_enterprise AND xcblld = g_xcbl_m.xcblld 
                 AND xcbl001 = g_xcbl_m.xcbl001 
                 AND xcbl002 = g_xcbl_m.xcbl002 
                 AND xcbl003 = g_xcbl_m.xcbl003 
                 AND xcbl004 = g_xcbl_m.xcbl004 
                 AND xcbl005 = g_xcbl_m.xcbl005 
 
                 AND xcblseq = g_xcbl_d_t.xcblseq #項次   
 
                 
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xcbl_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   CALL cl_err("xcbl_t",SQLCA.sqlcode,1)  
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcbl_m.xcblld
               LET gs_keys_bak[1] = g_xcblld_t
               LET gs_keys[2] = g_xcbl_m.xcbl001
               LET gs_keys_bak[2] = g_xcbl001_t
               LET gs_keys[3] = g_xcbl_m.xcbl002
               LET gs_keys_bak[3] = g_xcbl002_t
               LET gs_keys[4] = g_xcbl_m.xcbl003
               LET gs_keys_bak[4] = g_xcbl003_t
               LET gs_keys[5] = g_xcbl_m.xcbl004
               LET gs_keys_bak[5] = g_xcbl004_t
               LET gs_keys[6] = g_xcbl_m.xcbl005
               LET gs_keys_bak[6] = g_xcbl005_t
               LET gs_keys[7] = g_xcbl_d[g_detail_idx].xcblseq
               LET gs_keys_bak[7] = g_xcbl_d_t.xcblseq
               CALL axct201_update_b('xcbl_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_xcbl_m),util.JSON.stringify(g_xcbl_d_t)
                     LET g_log2 = util.JSON.stringify(g_xcbl_m),util.JSON.stringify(g_xcbl_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
            END IF
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xcbl_d.getLength() = 0 THEN
               NEXT FIELD xcblseq
            END IF
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xcbl_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xcbl_d.getLength()+1
            
      END INPUT
 
 
      
      DISPLAY ARRAY g_xcbl2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
      
         BEFORE ROW
            CALL axct201_b_fill(g_wc2) 
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL axct201_ui_detailshow()
        
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)      
         
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
         
      END DISPLAY
 
      
 
      
      #add-point:input段more_input
      {<point name="input.more_inputarray"/>}
      #end add-point    
      
      BEFORE DIALOG
         #add-point:input段before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xcblld
        ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xcblseq
               WHEN "s_detail2"
                  NEXT FIELD xcblseq_2
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #add-point:input段after_input
   {<point name="input.after_input"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="axct201.input.head" ver="3" status="" src="s">
<![CDATA[   
      #單頭段
      INPUT BY NAME g_xcbl_m.xcblld,g_xcbl_m.xcblcomp,g_xcbl_m.xcbl002,g_xcbl_m.xcbl003,g_xcbl_m.xcbl004, 
          g_xcbl_m.xcbl001,g_xcbl_m.xcbl005 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前
            {<point name="input.head.b_input"/>}
            #end add-point
          
                  #此段落由子樣板a02產生
         AFTER FIELD xcblld
            
            #add-point:AFTER FIELD xcblld
            {<point name="input.a.xcblld" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcblld
            #add-point:BEFORE FIELD xcblld
            {<point name="input.b.xcblld" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcblld
            #add-point:ON CHANGE xcblld
            {<point name="input.g.xcblld" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcblcomp
            
            #add-point:AFTER FIELD xcblcomp
            {<point name="input.a.xcblcomp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcblcomp
            #add-point:BEFORE FIELD xcblcomp
            {<point name="input.b.xcblcomp" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcblcomp
            #add-point:ON CHANGE xcblcomp
            {<point name="input.g.xcblcomp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl002
            #add-point:BEFORE FIELD xcbl002
            {<point name="input.b.xcbl002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl002
            
            #add-point:AFTER FIELD xcbl002
            {<point name="input.a.xcbl002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl002
            #add-point:ON CHANGE xcbl002
            {<point name="input.g.xcbl002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl003
            #add-point:BEFORE FIELD xcbl003
            {<point name="input.b.xcbl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl003
            
            #add-point:AFTER FIELD xcbl003
            {<point name="input.a.xcbl003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl003
            #add-point:ON CHANGE xcbl003
            {<point name="input.g.xcbl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl004
            
            #add-point:AFTER FIELD xcbl004
            {<point name="input.a.xcbl004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl004
            #add-point:BEFORE FIELD xcbl004
            {<point name="input.b.xcbl004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl004
            #add-point:ON CHANGE xcbl004
            {<point name="input.g.xcbl004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl001
            #add-point:BEFORE FIELD xcbl001
            {<point name="input.b.xcbl001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl001
            
            #add-point:AFTER FIELD xcbl001
            {<point name="input.a.xcbl001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl001
            #add-point:ON CHANGE xcbl001
            {<point name="input.g.xcbl001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbl005
            #add-point:BEFORE FIELD xcbl005
            {<point name="input.b.xcbl005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbl005
            
            #add-point:AFTER FIELD xcbl005
            {<point name="input.a.xcbl005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcbl005
            #add-point:ON CHANGE xcbl005
            {<point name="input.g.xcbl005" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.xcblld
         ON ACTION controlp INFIELD xcblld
            #add-point:ON ACTION controlp INFIELD xcblld
            {<point name="input.c.xcblld" />}
            #END add-point
 
         #Ctrlp:input.c.xcblcomp
         ON ACTION controlp INFIELD xcblcomp
            #add-point:ON ACTION controlp INFIELD xcblcomp
            {<point name="input.c.xcblcomp" />}
            #END add-point
 
         #Ctrlp:input.c.xcbl002
         ON ACTION controlp INFIELD xcbl002
            #add-point:ON ACTION controlp INFIELD xcbl002
            {<point name="input.c.xcbl002" />}
            #END add-point
 
         #Ctrlp:input.c.xcbl003
         ON ACTION controlp INFIELD xcbl003
            #add-point:ON ACTION controlp INFIELD xcbl003
            {<point name="input.c.xcbl003" />}
            #END add-point
 
         #Ctrlp:input.c.xcbl004
         ON ACTION controlp INFIELD xcbl004
            #add-point:ON ACTION controlp INFIELD xcbl004
            {<point name="input.c.xcbl004" />}
            #END add-point
 
         #Ctrlp:input.c.xcbl001
         ON ACTION controlp INFIELD xcbl001
            #add-point:ON ACTION controlp INFIELD xcbl001
            {<point name="input.c.xcbl001" />}
            #END add-point
 
         #Ctrlp:input.c.xcbl005
         ON ACTION controlp INFIELD xcbl005
            #add-point:ON ACTION controlp INFIELD xcbl005
            {<point name="input.c.xcbl005" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
 
            #多語言處理
            
                
            CALL cl_showmsg()
            DISPLAY BY NAME g_xcbl_m.xcblld             
                            ,g_xcbl_m.xcbl001   
                            ,g_xcbl_m.xcbl002   
                            ,g_xcbl_m.xcbl003   
                            ,g_xcbl_m.xcbl004   
                            ,g_xcbl_m.xcbl005   
 
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
            
               UPDATE xcbl_t SET (xcblld,xcblcomp,xcbl002,xcbl003,xcbl004,xcbl001,xcbl005) = (g_xcbl_m.xcblld, 
                   g_xcbl_m.xcblcomp,g_xcbl_m.xcbl002,g_xcbl_m.xcbl003,g_xcbl_m.xcbl004,g_xcbl_m.xcbl001, 
                   g_xcbl_m.xcbl005)
                WHERE xcblent = g_enterprise AND xcblld = g_xcblld_t
                  AND xcbl001 = g_xcbl001_t
                  AND xcbl002 = g_xcbl002_t
                  AND xcbl003 = g_xcbl003_t
                  AND xcbl004 = g_xcbl004_t
                  AND xcbl005 = g_xcbl005_t
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xcbl_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("xcbl_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcbl_m.xcblld
               LET gs_keys_bak[1] = g_xcblld_t
               LET gs_keys[2] = g_xcbl_m.xcbl001
               LET gs_keys_bak[2] = g_xcbl001_t
               LET gs_keys[3] = g_xcbl_m.xcbl002
               LET gs_keys_bak[3] = g_xcbl002_t
               LET gs_keys[4] = g_xcbl_m.xcbl003
               LET gs_keys_bak[4] = g_xcbl003_t
               LET gs_keys[5] = g_xcbl_m.xcbl004
               LET gs_keys_bak[5] = g_xcbl004_t
               LET gs_keys[6] = g_xcbl_m.xcbl005
               LET gs_keys_bak[6] = g_xcbl005_t
               LET gs_keys[7] = g_xcbl_d[g_detail_idx].xcblseq
               LET gs_keys_bak[7] = g_xcbl_d_t.xcblseq
               CALL axct201_update_b('xcbl_t',gs_keys,gs_keys_bak,"'1'")
                     
                     LET g_xcblld_t = g_xcbl_m.xcblld
                     LET g_xcbl001_t = g_xcbl_m.xcbl001
                     LET g_xcbl002_t = g_xcbl_m.xcbl002
                     LET g_xcbl003_t = g_xcbl_m.xcbl003
                     LET g_xcbl004_t = g_xcbl_m.xcbl004
                     LET g_xcbl005_t = g_xcbl_m.xcbl005
 
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     
                     LET g_log1 = util.JSON.stringify(g_xcbl_m_t)
                     LET g_log2 = util.JSON.stringify(g_xcbl_m)
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
               END CASE
            
            ELSE    
               #add-point:單頭新增
               {<point name="input.head.a_insert"/>}
               #end add-point
                                 
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axct201_detail_reproduce()
               END IF
            END IF
           #controlp
                     
           LET g_xcblld_t = g_xcbl_m.xcblld
           LET g_xcbl001_t = g_xcbl_m.xcbl001
           LET g_xcbl002_t = g_xcbl_m.xcbl002
           LET g_xcbl003_t = g_xcbl_m.xcbl003
           LET g_xcbl004_t = g_xcbl_m.xcbl004
           LET g_xcbl005_t = g_xcbl_m.xcbl005
 
           
           #若單身還沒有輸入資料, 強制切換至單身
           #IF cl_null(g_xcbl_d[1].xcblseq) THEN
           #   CALL g_xcbl_d.deleteElement(1)
           #   NEXT FIELD xcblseq
           #END IF
           
           IF g_xcbl_d.getLength() = 0 THEN
              NEXT FIELD xcblseq
           END IF
 
      END INPUT
]]>
</section>
  <section id="axct201.insert" ver="2" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION axct201_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_xcbl_d.clear()
   CALL g_xcbl2_d.clear()
 
 
   INITIALIZE g_xcbl_m.* LIKE xcbl_t.*             #DEFAULT 設定
   LET g_xcblld_t = NULL
   LET g_xcbl001_t = NULL
   LET g_xcbl002_t = NULL
   LET g_xcbl003_t = NULL
   LET g_xcbl004_t = NULL
   LET g_xcbl005_t = NULL
 
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL axct201_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xcbl_m.* = g_xcbl_m_t.*
         CALL axct201_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      CALL g_xcbl_d.clear()
      CALL g_xcbl2_d.clear()
 
      
      #add-point:單頭輸入後2
      {<point name="insert.after_insert2"/>}
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_xcblld_t = g_xcbl_m.xcblld
   LET g_xcbl001_t = g_xcbl_m.xcbl001
   LET g_xcbl002_t = g_xcbl_m.xcbl002
   LET g_xcbl003_t = g_xcbl_m.xcbl003
   LET g_xcbl004_t = g_xcbl_m.xcbl004
   LET g_xcbl005_t = g_xcbl_m.xcbl005
 
   
   LET g_wc = g_wc,  
              " OR ( xcblent = '" ||g_enterprise|| "' AND ",
              " xcblld = '", g_xcbl_m.xcblld CLIPPED, "' "
              ," AND xcbl001 = '", g_xcbl_m.xcbl001 CLIPPED, "' "
              ," AND xcbl002 = '", g_xcbl_m.xcbl002 CLIPPED, "' "
              ," AND xcbl003 = '", g_xcbl_m.xcbl003 CLIPPED, "' "
              ," AND xcbl004 = '", g_xcbl_m.xcbl004 CLIPPED, "' "
              ," AND xcbl005 = '", g_xcbl_m.xcbl005 CLIPPED, "' "
 
              , ") "
   
END FUNCTION
]]>
</section>
  <section id="axct201.insert_b" ver="1" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION axct201_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
 
   
END FUNCTION
]]>
</section>
  <section id="axct201.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION axct201_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL axct201_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="axct201.main" ver="4" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT xcblld,'',xcblcomp,'',xcbl002,xcbl003,xcbl004,'',xcbl001,xcbl005", 
                      " FROM xcbl_t",
                      " WHERE xcblent= ? AND xcblld=? AND xcbl001=? AND xcbl002=? AND xcbl003=? AND  
                          xcbl004=? AND xcbl005=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axct201_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE xcblld,xcblcomp,xcbl002,xcbl003,xcbl004,xcbl001,xcbl005,t1.glaal002 , 
       t2.ooefl003 ,t3.ooefl003",
               " FROM xcbl_t",
                              " LEFT JOIN glaal_t t1 ON t1.glaalent='"||g_enterprise||"' AND t1.glaalld=xcblld AND t1.glaal001='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=xcblcomp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=xcbl004 AND t3.ooefl002='"||g_dlang||"' ",
 
               " WHERE xcblent = '" ||g_enterprise|| "' AND xcblld = ? AND xcbl001 = ? AND xcbl002 = ? AND xcbl003 = ? AND xcbl004 = ? AND xcbl005 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axct201_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axct201 WITH FORM cl_ap_formpath("axc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axct201_init()   
 
      #進入選單 Menu (="N")
      CALL axct201_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axct201
      
   END IF 
   
   CLOSE axct201_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="axct201.modify" ver="3" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION axct201_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_xcbl_m.xcblld IS NULL
   OR g_xcbl_m.xcbl001 IS NULL
   OR g_xcbl_m.xcbl002 IS NULL
   OR g_xcbl_m.xcbl003 IS NULL
   OR g_xcbl_m.xcbl004 IS NULL
   OR g_xcbl_m.xcbl005 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE axct201_master_referesh USING g_xcbl_m.xcblld,g_xcbl_m.xcbl001,g_xcbl_m.xcbl002,g_xcbl_m.xcbl003, 
       g_xcbl_m.xcbl004,g_xcbl_m.xcbl005 INTO g_xcbl_m.xcblld,g_xcbl_m.xcblcomp,g_xcbl_m.xcbl002,g_xcbl_m.xcbl003, 
       g_xcbl_m.xcbl004,g_xcbl_m.xcbl001,g_xcbl_m.xcbl005,g_xcbl_m.xcblld_desc,g_xcbl_m.xcblcomp_desc, 
       g_xcbl_m.xcbl004_desc
 
   ERROR ""
  
   LET g_xcblld_t = g_xcbl_m.xcblld
   LET g_xcbl001_t = g_xcbl_m.xcbl001
   LET g_xcbl002_t = g_xcbl_m.xcbl002
   LET g_xcbl003_t = g_xcbl_m.xcbl003
   LET g_xcbl004_t = g_xcbl_m.xcbl004
   LET g_xcbl005_t = g_xcbl_m.xcbl005
 
   CALL s_transaction_begin()
   
   OPEN axct201_cl USING g_enterprise,g_xcbl_m.xcblld
                                                       ,g_xcbl_m.xcbl001
                                                       ,g_xcbl_m.xcbl002
                                                       ,g_xcbl_m.xcbl003
                                                       ,g_xcbl_m.xcbl004
                                                       ,g_xcbl_m.xcbl005
 
   IF STATUS THEN
      CALL cl_err("OPEN axct201_cl:", STATUS, 1)
      CLOSE axct201_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH axct201_cl INTO g_xcbl_m.xcblld,g_xcbl_m.xcblld_desc,g_xcbl_m.xcblcomp,g_xcbl_m.xcblcomp_desc, 
       g_xcbl_m.xcbl002,g_xcbl_m.xcbl003,g_xcbl_m.xcbl004,g_xcbl_m.xcbl004_desc,g_xcbl_m.xcbl001,g_xcbl_m.xcbl005 

 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xcbl_m.xcblld,SQLCA.sqlcode,0)
      CLOSE axct201_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   CALL s_transaction_end('Y','0')
 
   CALL axct201_show()
   WHILE TRUE
      LET g_xcblld_t = g_xcbl_m.xcblld
      LET g_xcbl001_t = g_xcbl_m.xcbl001
      LET g_xcbl002_t = g_xcbl_m.xcbl002
      LET g_xcbl003_t = g_xcbl_m.xcbl003
      LET g_xcbl004_t = g_xcbl_m.xcbl004
      LET g_xcbl005_t = g_xcbl_m.xcbl005
 
 
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL axct201_input("u")     #欄位更改
      
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xcbl_m.* = g_xcbl_m_t.*
         CALL axct201_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_xcbl_m.xcblld != g_xcblld_t 
      OR g_xcbl_m.xcbl001 != g_xcbl001_t 
      OR g_xcbl_m.xcbl002 != g_xcbl002_t 
      OR g_xcbl_m.xcbl003 != g_xcbl003_t 
      OR g_xcbl_m.xcbl004 != g_xcbl004_t 
      OR g_xcbl_m.xcbl005 != g_xcbl005_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前
         {<point name="modify.b_key_update" mark="Y"/>}
         #end add-point
         
         #更新單頭key值
         UPDATE xcbl_t SET xcblld = g_xcbl_m.xcblld
                                       , xcbl001 = g_xcbl_m.xcbl001
                                       , xcbl002 = g_xcbl_m.xcbl002
                                       , xcbl003 = g_xcbl_m.xcbl003
                                       , xcbl004 = g_xcbl_m.xcbl004
                                       , xcbl005 = g_xcbl_m.xcbl005
 
          WHERE xcblent = g_enterprise AND xcblld = g_xcblld_t
            AND xcbl001 = g_xcbl001_t
            AND xcbl002 = g_xcbl002_t
            AND xcbl003 = g_xcbl003_t
            AND xcbl004 = g_xcbl004_t
            AND xcbl005 = g_xcbl005_t
 
         #add-point:單頭(偽)修改中
         {<point name="modify.m_key_update"/>}
         #end add-point
         
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("xcbl_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("xcbl_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
 
 
         
         #add-point:單頭(偽)修改後
         {<point name="modify.a_key_update"/>}
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_xcbl_m.xcblld,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE axct201_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_xcbl_m.xcblld,'U')
 
   CALL axct201_b_fill("1=1")
   
END FUNCTION   
]]>
</section>
  <section id="axct201.modify_detail_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION axct201_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "xcblseq"
      WHEN "s_detail2"
         LET ls_return = "xcblseq_2"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
</section>
  <section id="axct201.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="axct201.query" ver="1" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axct201_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #add-point:query開始前
   {<point name="query.befroe_query"/>}
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xcbl_d.clear()
   CALL g_xcbl2_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axct201_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL axct201_browser_fill(g_wc)
      CALL axct201_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL axct201_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL axct201_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION
]]>
</section>
  <section id="axct201.ref_show" ver="2" status="" src="s">
<![CDATA[#+ 帶出reference資料
PRIVATE FUNCTION axct201_ref_show()
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define
   {<point name="ref_show.define"/>}
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference
   {<point name="ref_show.head.reference"/>}
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xcbl_d.getLength()
      #add-point:ref_show段d_reference
      {<point name="ref_show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xcbl2_d.getLength()
      #add-point:ref_show段d2_reference
      {<point name="ref_show.body2.reference"/>}
      #end add-point
   END FOR
 
   
   #add-point:ref_show段自訂
   {<point name="ref_show.other_reference"/>}
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION
]]>
</section>
  <section id="axct201.reproduce" ver="4" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION axct201_reproduce()
   DEFINE l_newno     LIKE xcbl_t.xcblld 
   DEFINE l_oldno     LIKE xcbl_t.xcblld 
   DEFINE l_newno02     LIKE xcbl_t.xcbl001 
   DEFINE l_oldno02     LIKE xcbl_t.xcbl001 
   DEFINE l_newno03     LIKE xcbl_t.xcbl002 
   DEFINE l_oldno03     LIKE xcbl_t.xcbl002 
   DEFINE l_newno04     LIKE xcbl_t.xcbl003 
   DEFINE l_oldno04     LIKE xcbl_t.xcbl003 
   DEFINE l_newno05     LIKE xcbl_t.xcbl004 
   DEFINE l_oldno05     LIKE xcbl_t.xcbl004 
   DEFINE l_newno06     LIKE xcbl_t.xcbl005 
   DEFINE l_oldno06     LIKE xcbl_t.xcbl005 
 
   DEFINE l_master    RECORD LIKE xcbl_t.*
   DEFINE l_detail    RECORD LIKE xcbl_t.*
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_xcbl_m.xcblld IS NULL
      OR g_xcbl_m.xcbl001 IS NULL
      OR g_xcbl_m.xcbl002 IS NULL
      OR g_xcbl_m.xcbl003 IS NULL
      OR g_xcbl_m.xcbl004 IS NULL
      OR g_xcbl_m.xcbl005 IS NULL
 
      THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_xcblld_t = g_xcbl_m.xcblld
   LET g_xcbl001_t = g_xcbl_m.xcbl001
   LET g_xcbl002_t = g_xcbl_m.xcbl002
   LET g_xcbl003_t = g_xcbl_m.xcbl003
   LET g_xcbl004_t = g_xcbl_m.xcbl004
   LET g_xcbl005_t = g_xcbl_m.xcbl005
 
   
   LET g_xcbl_m.xcblld = ""
   LET g_xcbl_m.xcbl001 = ""
   LET g_xcbl_m.xcbl002 = ""
   LET g_xcbl_m.xcbl003 = ""
   LET g_xcbl_m.xcbl004 = ""
   LET g_xcbl_m.xcbl005 = ""
 
    
   CALL axct201_set_entry('a')
   CALL axct201_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL axct201_input("r")
   
      LET g_xcbl_m.xcblld_desc = ''
   DISPLAY BY NAME g_xcbl_m.xcblld_desc
   LET g_xcbl_m.xcbl004_desc = ''
   DISPLAY BY NAME g_xcbl_m.xcbl004_desc
 
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " xcblld = '", l_newno CLIPPED, "' "
              ," AND xcbl001 = '", l_newno02 CLIPPED, "' "
              ," AND xcbl002 = '", l_newno03 CLIPPED, "' "
              ," AND xcbl003 = '", l_newno04 CLIPPED, "' "
              ," AND xcbl004 = '", l_newno05 CLIPPED, "' "
              ," AND xcbl005 = '", l_newno06 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="axct201.set_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION axct201_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xcblld,xcbl001,xcbl002,xcbl003,xcbl004,xcbl005",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="axct201.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION axct201_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="axct201.set_no_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION axct201_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xcblld,xcbl001,xcbl002,xcbl003,xcbl004,xcbl005",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="axct201.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION axct201_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b段"/>}
   #end add-point 
   
END FUNCTION
]]>
</section>
  <section id="axct201.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION axct201_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xcbl_m.xcblld
   LET g_pk_array[1].column = 'xcblld'
   LET g_pk_array[2].values = g_xcbl_m.xcbl001
   LET g_pk_array[2].column = 'xcbl001'
   LET g_pk_array[3].values = g_xcbl_m.xcbl002
   LET g_pk_array[3].column = 'xcbl002'
   LET g_pk_array[4].values = g_xcbl_m.xcbl003
   LET g_pk_array[4].column = 'xcbl003'
   LET g_pk_array[5].values = g_xcbl_m.xcbl004
   LET g_pk_array[5].column = 'xcbl004'
   LET g_pk_array[6].values = g_xcbl_m.xcbl005
   LET g_pk_array[6].column = 'xcbl005'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="axct201.show" ver="2" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axct201_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL axct201_b_fill(g_wc2) #單身填充
      CALL axct201_b_fill2('0') #單身填充
   END IF
   
   
 
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL axct201_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
 
   LET g_xcbl_m_t.* = g_xcbl_m.*      #保存單頭舊值
   
   DISPLAY BY NAME g_xcbl_m.xcblld,g_xcbl_m.xcblld_desc,g_xcbl_m.xcblcomp,g_xcbl_m.xcblcomp_desc,g_xcbl_m.xcbl002, 
       g_xcbl_m.xcbl003,g_xcbl_m.xcbl004,g_xcbl_m.xcbl004_desc,g_xcbl_m.xcbl001,g_xcbl_m.xcbl005
   CALL axct201_b_fill(g_wc2_table1)                 #單身
   CALL axct201_b_fill2('0') #單身填充
 
   CALL axct201_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point   
   
END FUNCTION
]]>
</section>
  <section id="axct201.state_change" ver="1" status="" src="s">
<![CDATA[    
]]>
</section>
  <section id="axct201.ui_browser_refresh" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axct201_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xcblld = g_xcbl_m.xcblld 
         AND g_browser[l_i].b_xcbl001 = g_xcbl_m.xcbl001 
         AND g_browser[l_i].b_xcbl002 = g_xcbl_m.xcbl002 
         AND g_browser[l_i].b_xcbl003 = g_xcbl_m.xcbl003 
         AND g_browser[l_i].b_xcbl004 = g_xcbl_m.xcbl004 
         AND g_browser[l_i].b_xcbl005 = g_xcbl_m.xcbl005 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="axct201.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION axct201_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
      #add-point:ui_detailshow段more
      {<point name="ui_detailshow.more"/>}
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point 
   
END FUNCTION
]]>
</section>
  <section id="axct201.ui_dialog" ver="3" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION axct201_ui_dialog()
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point  
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL axct201_browser_fill("")
 
      
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_xcblld = g_xcblld_t
               AND g_browser[li_idx].b_xcbl001 = g_xcbl001_t
               AND g_browser[li_idx].b_xcbl002 = g_xcbl002_t
               AND g_browser[li_idx].b_xcbl003 = g_xcbl003_t
               AND g_browser[li_idx].b_xcbl004 = g_xcbl004_t
               AND g_browser[li_idx].b_xcbl005 = g_xcbl005_t
 
               THEN
               LET g_current_row = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
      
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_xcbl_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL axct201_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_xcbl2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL axct201_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)      
            
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axct201_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axct201_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         
         
         ON ACTION first
            CALL axct201_fetch('F')
            LET g_current_row = g_current_idx         
          
         ON ACTION previous
            CALL axct201_fetch('P')
            LET g_current_row = g_current_idx
          
         ON ACTION jump
            CALL axct201_fetch('/')
            LET g_current_row = g_current_idx
        
         ON ACTION next
            CALL axct201_fetch('N')
            LET g_current_row = g_current_idx
         
         ON ACTION last
            CALL axct201_fetch('L')
            LET g_current_row = g_current_idx
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xcblseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axct201_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axct201_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL axct201_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axct201_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axct201_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axct201_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axct201_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_axct201_01
            LET g_action_choice="open_axct201_01"
            IF cl_auth_chk_act("open_axct201_01") THEN
               
               #add-point:ON ACTION open_axct201_01
               {<point name="menu.open_axct201_01" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_axct201_02
            LET g_action_choice="open_axct201_02"
            IF cl_auth_chk_act("open_axct201_02") THEN
               
               #add-point:ON ACTION open_axct201_02
               {<point name="menu.open_axct201_02" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axct201_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axct201_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL axct201_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axct201_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axct201_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
]]>
</section>
  <section id="axct201.ui_headershow" ver="3" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION axct201_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_xcbl_m.xcblld = g_browser[g_current_idx].b_xcblld   
   LET g_xcbl_m.xcbl001 = g_browser[g_current_idx].b_xcbl001   
   LET g_xcbl_m.xcbl002 = g_browser[g_current_idx].b_xcbl002   
   LET g_xcbl_m.xcbl003 = g_browser[g_current_idx].b_xcbl003   
   LET g_xcbl_m.xcbl004 = g_browser[g_current_idx].b_xcbl004   
   LET g_xcbl_m.xcbl005 = g_browser[g_current_idx].b_xcbl005   
 
   EXECUTE axct201_master_referesh USING g_xcbl_m.xcblld,g_xcbl_m.xcbl001,g_xcbl_m.xcbl002,g_xcbl_m.xcbl003, 
       g_xcbl_m.xcbl004,g_xcbl_m.xcbl005 INTO g_xcbl_m.xcblld,g_xcbl_m.xcblcomp,g_xcbl_m.xcbl002,g_xcbl_m.xcbl003, 
       g_xcbl_m.xcbl004,g_xcbl_m.xcbl001,g_xcbl_m.xcbl005,g_xcbl_m.xcblld_desc,g_xcbl_m.xcblcomp_desc, 
       g_xcbl_m.xcbl004_desc
   CALL axct201_show()
   
END FUNCTION
]]>
</section>
  <section id="axct201.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axct201_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
 
 
END FUNCTION
]]>
</section>
  <section id="axct201.update_b" ver="1" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION axct201_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
 
   
END FUNCTION
]]>
</section>
</add_points>