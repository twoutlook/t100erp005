<add_points prog="axci115" std_prog="axci115" erpver="1.0" module="AXC" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="construct.c.page1.xcba006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcba006  #顯示到畫面上

            NEXT FIELD xcba006                     #返回原欄位

]]>
</point>
  <point name="construct.c.page2.xcbacrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbacrtdp  #顯示到畫面上

            NEXT FIELD xcbacrtdp                     #返回原欄位

]]>
</point>
  <point name="construct.c.page2.xcbacrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbacrtid  #顯示到畫面上

            NEXT FIELD xcbacrtid                     #返回原欄位

]]>
</point>
  <point name="construct.c.page2.xcbamodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbamodid  #顯示到畫面上

            NEXT FIELD xcbamodid                     #返回原欄位

]]>
</point>
  <point name="construct.c.page2.xcbaowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbaowndp  #顯示到畫面上

            NEXT FIELD xcbaowndp                     #返回原欄位

]]>
</point>
  <point name="construct.c.page2.xcbaownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbaownid  #顯示到畫面上

            NEXT FIELD xcbaownid                     #返回原欄位

]]>
</point>
  <point name="construct.c.xcba004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcba004  #顯示到畫面上
            LET g_qryparam.where = ""

            NEXT FIELD xcba004                     #返回原欄位

]]>
</point>
  <point name="construct.c.xcbald" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            CALL q_authorised_ld()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcbald  #顯示到畫面上

            NEXT FIELD xcbald                     #返回原欄位

]]>
</point>
  <point name="input.a.page1.xcba005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xcba_m.xcbald IS NOT NULL AND g_xcba_m.xcba001 IS NOT NULL AND g_xcba_m.xcba002 IS NOT NULL AND g_xcba_m.xcba003 IS NOT NULL AND g_xcba_m.xcba004 IS NOT NULL AND g_xcba_d[g_detail_idx].xcba005 IS NOT NULL AND g_xcba_d[g_detail_idx].xcba006 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcba_m.xcbald != g_xcbald_t OR g_xcba_m.xcba001 != g_xcba001_t OR g_xcba_m.xcba002 != g_xcba002_t OR g_xcba_m.xcba003 != g_xcba003_t OR g_xcba_m.xcba004 != g_xcba004_t OR g_xcba_d[g_detail_idx].xcba005 != g_xcba_d_t.xcba005 OR g_xcba_d[g_detail_idx].xcba006 != g_xcba_d_t.xcba006)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcba_t WHERE "||"xcbaent = '" ||g_enterprise|| "' AND "||"xcbald = '"||g_xcba_m.xcbald ||"' AND "|| "xcba001 = '"||g_xcba_m.xcba001 ||"' AND "|| "xcba002 = '"||g_xcba_m.xcba002 ||"' AND "|| "xcba003 = '"||g_xcba_m.xcba003 ||"' AND "|| "xcba004 = '"||g_xcba_m.xcba004 ||"' AND "|| "xcba005 = '"||g_xcba_d[g_detail_idx].xcba005 ||"' AND "|| "xcba006 = '"||g_xcba_d[g_detail_idx].xcba006 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            
            END IF
            
            IF NOT cl_null(g_xcba_d[g_detail_idx].xcba005) THEN
               IF NOT axci115_xcba005_chk(g_xcba_d[g_detail_idx].xcba005) THEN
                  IF p_cmd = 'a' THEN
                     LET g_xcba_d[g_detail_idx].xcba005 = ''
                     LET g_xcba_d[g_detail_idx].xcba005_desc =''
                  ELSE
                     LET g_xcba_d[g_detail_idx].xcba005 = g_xcba_d_t.xcba005
                     LET g_xcba_d[g_detail_idx].xcba005_desc = g_xcba_d_t.xcba005_desc
                  END IF
                  DISPLAY BY NAME g_xcba_d[g_detail_idx].xcba005_desc
                  NEXT FIELD xcba005
               END IF
            END IF
            CALL axci115_glacl004(g_xcba_d[g_detail_idx].xcba005) RETURNING g_xcba_d[g_detail_idx].xcba005_desc
            DISPLAY BY NAME g_xcba_d[g_detail_idx].xcba005_desc

]]>
</point>
  <point name="input.a.page1.xcba006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcba_d[l_ac].xcba006
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcba_d[l_ac].xcba006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcba_d[l_ac].xcba006_desc

            #此段落由子樣板a05產生
            IF  g_xcba_m.xcbald IS NOT NULL AND g_xcba_m.xcba001 IS NOT NULL AND g_xcba_m.xcba002 IS NOT NULL AND g_xcba_m.xcba003 IS NOT NULL AND g_xcba_m.xcba004 IS NOT NULL AND g_xcba_d[g_detail_idx].xcba005 IS NOT NULL AND g_xcba_d[g_detail_idx].xcba006 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcba_m.xcbald != g_xcbald_t OR g_xcba_m.xcba001 != g_xcba001_t OR g_xcba_m.xcba002 != g_xcba002_t OR g_xcba_m.xcba003 != g_xcba003_t OR g_xcba_m.xcba004 != g_xcba004_t OR g_xcba_d[g_detail_idx].xcba005 != g_xcba_d_t.xcba005 OR g_xcba_d[g_detail_idx].xcba006 != g_xcba_d_t.xcba006)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcba_t WHERE "||"xcbaent = '" ||g_enterprise|| "' AND "||"xcbald = '"||g_xcba_m.xcbald ||"' AND "|| "xcba001 = '"||g_xcba_m.xcba001 ||"' AND "|| "xcba002 = '"||g_xcba_m.xcba002 ||"' AND "|| "xcba003 = '"||g_xcba_m.xcba003 ||"' AND "|| "xcba004 = '"||g_xcba_m.xcba004 ||"' AND "|| "xcba005 = '"||g_xcba_d[g_detail_idx].xcba005 ||"' AND "|| "xcba006 = '"||g_xcba_d[g_detail_idx].xcba006 ||"'",'std-00004',0) THEN 
                     LET g_xcba_d[l_ac].xcba006 = g_xcba_d_t.xcba006
                     LET g_xcba_d[l_ac].xcba006_desc = g_xcba_d_t.xcba006_desc
                     DISPLAY BY NAME g_xcba_d[l_ac].xcba006_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_xcba_d[l_ac].xcba006) THEN
               IF NOT ap_chk_isExist(g_xcba_d[l_ac].xcba006,"SELECT COUNT(*) FROM ooeg_t WHERE ooegent = '" ||g_enterprise||"' AND ooeg001 = ? ","abm-00006",0) THEN
                   LET g_xcba_d[l_ac].xcba006 = g_xcba_d_t.xcba006
                   LET g_xcba_d[l_ac].xcba006_desc = g_xcba_d_t.xcba006_desc
                   DISPLAY BY NAME g_xcba_d[l_ac].xcba006_desc
                   NEXT FIELD xcba006
                END IF
                IF NOT ap_chk_isExist(g_xcba_d[l_ac].xcba006,"SELECT COUNT(*) FROM ooeg_t WHERE ooegent = '" ||g_enterprise||"' AND ooeg001 = ? AND ooegstus = 'Y' ","abm-00007",0 ) THEN
                   LET g_xcba_d[l_ac].xcba006 = g_xcba_d_t.xcba006
                   LET g_xcba_d[l_ac].xcba006_desc = g_xcba_d_t.xcba006_desc
                   DISPLAY BY NAME g_xcba_d[l_ac].xcba006_desc
                   NEXT FIELD xcba006
               END IF
               IF NOT ap_chk_isExist(g_xcba_d[l_ac].xcba006,"SELECT COUNT(*) FROM ooeg_t WHERE ooegent = '" ||g_enterprise||"' AND ooeg001 = ? AND ooegstus = 'Y' AND (ooeg006 <= '" ||g_today||"' AND (ooeg007 IS NULL OR ooeg007 > '" ||g_today||"' )) ","aoo-00201",1 ) THEN
                   LET g_xcba_d[l_ac].xcba006 = g_xcba_d_t.xcba006
                   LET g_xcba_d[l_ac].xcba006_desc = g_xcba_d_t.xcba006_desc
                   DISPLAY BY NAME g_xcba_d[l_ac].xcba006_desc
                   NEXT FIELD xcba006
               END IF
               IF NOT ap_chk_isExist(g_xcba_d[l_ac].xcba006,"SELECT COUNT(*) FROM ooeg_t,ooef_t WHERE ooegent = ooefent AND ooeg001 = ooef001 AND ooegent = '" ||g_enterprise||"' AND ooeg001 = ? AND ooef017 = '"||g_glaacomp||"' AND ooegstus = 'Y' ","axc-00092",1 ) THEN
                   LET g_xcba_d[l_ac].xcba006 = ''
                   LET g_xcba_d[l_ac].xcba006_desc = ''
                   DISPLAY BY NAME g_xcba_d[l_ac].xcba006_desc
                   NEXT FIELD xcba006
               END IF
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcba_d[l_ac].xcba006
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcba_d[l_ac].xcba006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcba_d[l_ac].xcba006_desc]]>
</point>
  <point name="input.a.page1.xcba009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xcba_d[l_ac].xcba009) THEN 
#               SELECT SUM(xcba009) INTO l_xcba009 FROM xcba_t
#                WHERE xcbaent = g_enterprise AND xcbald = = g_xcba_m.xcbald
#                  AND xcba001 = g_xcba_m.xcba001 AND xcba002 = g_xcba_m.xcba002
#                  AND xcba003 = g_xcba_m.xcba003 AND xcba004 = g_xcba_m.xcba004
               
               #按照帳別+年度+期別+科目編號+部門編號，分攤權數不能超過100%
               SELECT SUM(xcba009) INTO l_xcba009 FROM xcba_t
                WHERE xcbaent = g_enterprise AND xcbald = = g_xcba_m.xcbald
                  AND xcba002 = g_xcba_m.xcba002 AND xcba003 = g_xcba_m.xcba003
                  AND xcba005 = g_xcba_d[l_ac].xcba005 AND xcba006 = g_xcba_d[l_ac].xcba006 
               
               
               
               IF l_cmd = 'a' THEN
                  IF l_xcba009 + g_xcba_d[l_ac].xcba009 > 100 THEN
                     CALL cl_err('','axc-00077',0)
                     NEXT FIELD xcba009
                  END IF
               ELSE
                  IF g_xcba_d[l_ac].xcba005 != g_xcba_d_t.xcba005 OR g_xcba_d[l_ac].xcba006 != g_xcba_d_t.xcba006 THEN
                     SELECT SUM(xcba009) INTO l_xcba009 FROM xcba_t
                      WHERE xcbaent = g_enterprise AND xcbald = = g_xcba_m.xcbald
                        AND xcba002 = g_xcba_m.xcba002 AND xcba003 = g_xcba_m.xcba003
                        AND xcba005 = g_xcba_d[l_ac].xcba005 AND xcba006 = g_xcba_d[l_ac].xcba006 
                        
                     IF l_xcba009 + g_xcba_d[l_ac].xcba009 > 100 THEN
                        CALL cl_err('','axc-00077',0)
                        NEXT FIELD xcba009
                     END IF
                  ELSE
                     IF l_xcba009 - g_xcba_d_t.xcba009 + g_xcba_d[l_ac].xcba009 > 100 THEN
                        CALL cl_err('','axc-00077',0)
                        NEXT FIELD xcba009
                     END IF
                  END IF
               END IF               
            END IF 
]]>
</point>
  <point name="input.a.page2.xcba005_2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xcba_m.xcbald IS NOT NULL AND g_xcba_m.xcba001 IS NOT NULL AND g_xcba_m.xcba002 IS NOT NULL AND g_xcba_m.xcba003 IS NOT NULL AND g_xcba_m.xcba004 IS NOT NULL AND g_xcba2_d[g_detail_idx].xcba005 IS NOT NULL AND g_xcba2_d[g_detail_idx].xcba006 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcba_m.xcbald != g_xcbald_t OR g_xcba_m.xcba001 != g_xcba001_t OR g_xcba_m.xcba002 != g_xcba002_t OR g_xcba_m.xcba003 != g_xcba003_t OR g_xcba_m.xcba004 != g_xcba004_t OR g_xcba2_d[g_detail_idx].xcba005 != g_xcba2_d_t.xcba005 OR g_xcba2_d[g_detail_idx].xcba006 != g_xcba2_d_t.xcba006)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcba_t WHERE "||"xcbaent = '" ||g_enterprise|| "' AND "||"xcbald = '"||g_xcba_m.xcbald ||"' AND "|| "xcba001 = '"||g_xcba_m.xcba001 ||"' AND "|| "xcba002 = '"||g_xcba_m.xcba002 ||"' AND "|| "xcba003 = '"||g_xcba_m.xcba003 ||"' AND "|| "xcba004 = '"||g_xcba_m.xcba004 ||"' AND "|| "xcba005 = '"||g_xcba2_d[g_detail_idx].xcba005 ||"' AND "|| "xcba006 = '"||g_xcba2_d[g_detail_idx].xcba006 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.xcba006_2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xcba_m.xcbald IS NOT NULL AND g_xcba_m.xcba001 IS NOT NULL AND g_xcba_m.xcba002 IS NOT NULL AND g_xcba_m.xcba003 IS NOT NULL AND g_xcba_m.xcba004 IS NOT NULL AND g_xcba2_d[g_detail_idx].xcba005 IS NOT NULL AND g_xcba2_d[g_detail_idx].xcba006 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcba_m.xcbald != g_xcbald_t OR g_xcba_m.xcba001 != g_xcba001_t OR g_xcba_m.xcba002 != g_xcba002_t OR g_xcba_m.xcba003 != g_xcba003_t OR g_xcba_m.xcba004 != g_xcba004_t OR g_xcba2_d[g_detail_idx].xcba005 != g_xcba2_d_t.xcba005 OR g_xcba2_d[g_detail_idx].xcba006 != g_xcba2_d_t.xcba006)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcba_t WHERE "||"xcbaent = '" ||g_enterprise|| "' AND "||"xcbald = '"||g_xcba_m.xcbald ||"' AND "|| "xcba001 = '"||g_xcba_m.xcba001 ||"' AND "|| "xcba002 = '"||g_xcba_m.xcba002 ||"' AND "|| "xcba003 = '"||g_xcba_m.xcba003 ||"' AND "|| "xcba004 = '"||g_xcba_m.xcba004 ||"' AND "|| "xcba005 = '"||g_xcba2_d[g_detail_idx].xcba005 ||"' AND "|| "xcba006 = '"||g_xcba2_d[g_detail_idx].xcba006 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.xcba001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcba_m.xcbald) AND NOT cl_null(g_xcba_m.xcba001) AND NOT cl_null(g_xcba_m.xcba002) AND NOT cl_null(g_xcba_m.xcba003) AND NOT cl_null(g_xcba_m.xcba004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcba_m.xcbald != g_xcbald_t  OR g_xcba_m.xcba001 != g_xcba001_t  OR g_xcba_m.xcba002 != g_xcba002_t  OR g_xcba_m.xcba003 != g_xcba003_t  OR g_xcba_m.xcba004 != g_xcba004_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcba_t WHERE "||"xcbaent = '" ||g_enterprise|| "' AND "||"xcbald = '"||g_xcba_m.xcbald ||"' AND "|| "xcba001 = '"||g_xcba_m.xcba001 ||"' AND "|| "xcba002 = '"||g_xcba_m.xcba002 ||"' AND "|| "xcba003 = '"||g_xcba_m.xcba003 ||"' AND "|| "xcba004 = '"||g_xcba_m.xcba004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.a.xcba002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcba_m.xcbald) AND NOT cl_null(g_xcba_m.xcba001) AND NOT cl_null(g_xcba_m.xcba002) AND NOT cl_null(g_xcba_m.xcba003) AND NOT cl_null(g_xcba_m.xcba004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcba_m.xcbald != g_xcbald_t  OR g_xcba_m.xcba001 != g_xcba001_t  OR g_xcba_m.xcba002 != g_xcba002_t  OR g_xcba_m.xcba003 != g_xcba003_t  OR g_xcba_m.xcba004 != g_xcba004_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcba_t WHERE "||"xcbaent = '" ||g_enterprise|| "' AND "||"xcbald = '"||g_xcba_m.xcbald ||"' AND "|| "xcba001 = '"||g_xcba_m.xcba001 ||"' AND "|| "xcba002 = '"||g_xcba_m.xcba002 ||"' AND "|| "xcba003 = '"||g_xcba_m.xcba003 ||"' AND "|| "xcba004 = '"||g_xcba_m.xcba004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_xcba_m.xcba002) THEN
               IF g_xcba_m.xcba002 <1000 OR g_xcba_m.xcba002 >9999 THEN
                  CALL cl_err(g_xcba_m.xcba002,'aoo-00113',0)
                  LET g_xcba_m.xcba002 =''
                  NEXT FIELD xcba002
               END IF
            END IF


]]>
</point>
  <point name="input.a.xcba003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcba_m.xcbald) AND NOT cl_null(g_xcba_m.xcba001) AND NOT cl_null(g_xcba_m.xcba002) AND NOT cl_null(g_xcba_m.xcba003) AND NOT cl_null(g_xcba_m.xcba004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcba_m.xcbald != g_xcbald_t  OR g_xcba_m.xcba001 != g_xcba001_t  OR g_xcba_m.xcba002 != g_xcba002_t  OR g_xcba_m.xcba003 != g_xcba003_t  OR g_xcba_m.xcba004 != g_xcba004_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcba_t WHERE "||"xcbaent = '" ||g_enterprise|| "' AND "||"xcbald = '"||g_xcba_m.xcbald ||"' AND "|| "xcba001 = '"||g_xcba_m.xcba001 ||"' AND "|| "xcba002 = '"||g_xcba_m.xcba002 ||"' AND "|| "xcba003 = '"||g_xcba_m.xcba003 ||"' AND "|| "xcba004 = '"||g_xcba_m.xcba004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_xcba_m.xcba003) THEN
               IF (g_xcba_m.xcba003 < 1) OR (g_xcba_m.xcba003 > 12) THEN
                  CALL cl_err(g_xcba_m.xcba003,'agl-00127',0)
                  LET g_xcba_m.xcba003 = ''
                  NEXT FIELD xcba003
               END IF
            END IF
]]>
</point>
  <point name="input.a.xcba004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcba_m.xcbald) AND NOT cl_null(g_xcba_m.xcba001) AND NOT cl_null(g_xcba_m.xcba002) AND NOT cl_null(g_xcba_m.xcba003) AND NOT cl_null(g_xcba_m.xcba004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcba_m.xcbald != g_xcbald_t  OR g_xcba_m.xcba001 != g_xcba001_t  OR g_xcba_m.xcba002 != g_xcba002_t  OR g_xcba_m.xcba003 != g_xcba003_t  OR g_xcba_m.xcba004 != g_xcba004_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcba_t WHERE "||"xcbaent = '" ||g_enterprise|| "' AND "||"xcbald = '"||g_xcba_m.xcbald ||"' AND "|| "xcba001 = '"||g_xcba_m.xcba001 ||"' AND "|| "xcba002 = '"||g_xcba_m.xcba002 ||"' AND "|| "xcba003 = '"||g_xcba_m.xcba003 ||"' AND "|| "xcba004 = '"||g_xcba_m.xcba004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_xcba_m.xcba004) THEN
               IF NOT ap_chk_isExist(g_xcba_m.xcba004,"SELECT COUNT(*) FROM ooeg_t WHERE ooegent = '" ||g_enterprise||"' AND ooeg001 = ? ","abm-00006",1) THEN
                   LET g_xcba_m.xcba004 = ''
                   LET g_xcba_m.xcba004_desc = ''
                   DISPLAY BY NAME g_xcba_m.xcba004_desc
                   NEXT FIELD xcba004
                END IF
                #成本中心為利潤中心或者成本中心
                IF NOT ap_chk_isExist(g_xcba_m.xcba004,"SELECT COUNT(*) FROM ooeg_t WHERE ooegent = '" ||g_enterprise||"' AND ooeg001 = ? AND (ooeg003 = '2' OR ooeg003 = '3')","axc-00090",1) THEN
                   LET g_xcba_m.xcba004 = ''
                   LET g_xcba_m.xcba004_desc = ''
                   DISPLAY BY NAME g_xcba_m.xcba004_desc
                   NEXT FIELD xcba004
                END IF
                IF NOT ap_chk_isExist(g_xcba_m.xcba004,"SELECT COUNT(*) FROM ooeg_t WHERE ooegent = '" ||g_enterprise||"' AND ooeg001 = ? AND ooegstus = 'Y' ","abm-00007",1 ) THEN
                   LET g_xcba_m.xcba004 = ''
                   LET g_xcba_m.xcba004_desc = ''
                   DISPLAY BY NAME g_xcba_m.xcba004_desc
                   NEXT FIELD xcba004
                END IF
                LET l_date = g_today
                IF NOT ap_chk_isExist(g_xcba_m.xcba004,"SELECT COUNT(*) FROM ooeg_t WHERE ooegent = '" ||g_enterprise||"' AND ooeg001 = ? AND ooegstus = 'Y' AND (ooeg006 <= '" ||g_today||"' AND (ooeg007 IS NULL OR ooeg007 > '" ||g_today||"' )) ","aoo-00201",1 ) THEN
                   LET g_xcba_m.xcba004 = ''
                   LET g_xcba_m.xcba004_desc = ''
                   DISPLAY BY NAME g_xcba_m.xcba004_desc
                   NEXT FIELD xcba004
               END IF
               IF NOT ap_chk_isExist(g_xcba_m.xcba004,"SELECT COUNT(*) FROM ooeg_t,ooef_t WHERE ooegent = ooefent AND ooeg001 = ooef001 AND ooegent = '" ||g_enterprise||"' AND ooeg001 = ? AND ooef017 = '"||g_glaacomp||"' AND ooegstus = 'Y' ","axc-00092",1 ) THEN
                   LET g_xcba_m.xcba004 = ''
                   LET g_xcba_m.xcba004_desc = ''
                   DISPLAY BY NAME g_xcba_m.xcba004_desc
                   NEXT FIELD xcba004
               END IF
            END IF

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcba_m.xcba004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcba_m.xcba004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcba_m.xcba004_desc
]]>
</point>
  <point name="input.a.xcbald" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcba_m.xcbald) AND NOT cl_null(g_xcba_m.xcba001) AND NOT cl_null(g_xcba_m.xcba002) AND NOT cl_null(g_xcba_m.xcba003) AND NOT cl_null(g_xcba_m.xcba004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcba_m.xcbald != g_xcbald_t  OR g_xcba_m.xcba001 != g_xcba001_t  OR g_xcba_m.xcba002 != g_xcba002_t  OR g_xcba_m.xcba003 != g_xcba003_t  OR g_xcba_m.xcba004 != g_xcba004_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcba_t WHERE "||"xcbaent = '" ||g_enterprise|| "' AND "||"xcbald = '"||g_xcba_m.xcbald ||"' AND "|| "xcba001 = '"||g_xcba_m.xcba001 ||"' AND "|| "xcba002 = '"||g_xcba_m.xcba002 ||"' AND "|| "xcba003 = '"||g_xcba_m.xcba003 ||"' AND "|| "xcba004 = '"||g_xcba_m.xcba004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_xcba_m.xcbald) THEN
               IF l_cmd_t = 'r' THEN
                  SELECT glaa004 INTO l_glaa004_t FROM glaa_t WHERE glaaent=g_enterprise AND glaald = g_xcba_m_t.xcbald
                  SELECT glaa004 INTO l_glaa004 FROM glaa_t WHERE glaaent=g_enterprise AND glaald = g_xcba_m.xcbald
                  IF l_glaa004_t != l_glaa004 THEN
                     LET g_xcba_m.xcbald = ''
                     LET g_xcba_m.xcbald_desc = ''
                     DISPLAY BY NAME g_xcba_m.xcbald_desc
                     CALL cl_err('','agl-00138',0)
                     NEXT FIELD xcbald
                  END IF
               END IF
               IF NOT ap_chk_isExist(g_xcba_m.xcbald,"SELECT COUNT(*) FROM glaa_t WHERE "||"glaaent = '" ||g_enterprise|| "' AND "||"glaald = ? ",'agl-00055',0) THEN
                  IF p_cmd = 'a' THEN
                     LET g_xcba_m.xcbald = ''
                     LET g_xcba_m.xcbald_desc = ''
                  ELSE
                     LET g_xcba_m.xcbald = g_xcba_m_t.xcbald
                     LET g_xcba_m.xcbald_desc = g_xcba_m_t.xcbald_desc
                  END IF
                  DISPLAY BY NAME g_xcba_m.xcbald_desc
                  NEXT FIELD CURRENT
               END IF
               IF NOT ap_chk_isExist(g_xcba_m.xcbald,"SELECT COUNT(*) FROM glaa_t WHERE "||"glaaent = '" ||g_enterprise|| "' AND "||"glaald = ? AND glaastus = 'Y' ",'agl-00051',0) THEN 
                  IF p_cmd = 'a' THEN
                     LET g_xcba_m.xcbald = ''
                     LET g_xcba_m.xcbald_desc = ''
                  ELSE
                     LET g_xcba_m.xcbald = g_xcba_m_t.xcbald
                     LET g_xcba_m.xcbald_desc = g_xcba_m_t.xcbald_desc
                  END IF
                  DISPLAY BY NAME g_xcba_m.xcbald_desc
                  NEXT FIELD CURRENT
               END IF
               IF NOT s_ld_chk_authorization(g_user,g_xcba_m.xcbald) THEN
                  CALL cl_err(g_xcba_m.xcbald,'axr-00022',1)
                  IF p_cmd = 'a' THEN
                     LET g_xcba_m.xcbald = ''
                     LET g_xcba_m.xcbald_desc = ''
                  ELSE
                     LET g_xcba_m.xcbald = g_xcba_m_t.xcbald
                     LET g_xcba_m.xcbald_desc = g_xcba_m_t.xcbald_desc
                  END IF
                  DISPLAY BY NAME g_xcba_m.xcbald_desc
                  NEXT FIELD CURRENT
               END IF
               SELECT glaacomp INTO g_glaacomp FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xcba_m.xcbald
            END IF


            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcba_m.xcbald
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcba_m.xcbald_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcba_m.xcbald_desc
]]>
</point>
  <point name="input.c.page1.xcba006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcba_d[l_ac].xcba006             #給予default值

            #給予arg
            LET l_date = cl_get_current()
            LET g_qryparam.arg1 = l_date USING "yyyy/mm/dd" #
            LET g_qryparam.arg2 = g_glaacomp

            CALL q_ooeg001_3()                                #呼叫開窗

            LET g_xcba_d[l_ac].xcba006 = g_qryparam.return1              #將開窗取得的值回傳到變數
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcba_d[l_ac].xcba006
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcba_d[l_ac].xcba006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcba_d[l_ac].xcba006_desc

            DISPLAY g_xcba_d[l_ac].xcba006 TO xcba006              #顯示到畫面上

            NEXT FIELD xcba006                          #返回原欄位

]]>
</point>
  <point name="input.c.xcba004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcba_m.xcba004             #給予default值

            #給予arg
            LET l_date = cl_get_current()
            LET g_qryparam.arg1 = l_date USING "yyyy/mm/dd" #
            LET g_qryparam.arg2 = g_glaacomp
            LET g_qryparam.where = " (ooeg003 = '2' OR ooeg003 = '3')"

            CALL q_ooeg001_3()                                #呼叫開窗

            LET g_xcba_m.xcba004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcba_m.xcba004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcba_m.xcba004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcba_m.xcba004_desc

            DISPLAY g_xcba_m.xcba004 TO xcba004              #顯示到畫面上
            LET g_qryparam.where = ""

            NEXT FIELD xcba004                          #返回原欄位

]]>
</point>
  <point name="input.c.xcbald" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            SELECT glaa004 INTO l_glaa004_t FROM glaa_t WHERE glaaent=g_enterprise AND glaald = g_xcba_m_t.xcbald
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcba_m.xcbald             #給予default值
            IF l_cmd_t = 'r' THEN
               LET g_qryparam.where = " glaa004 = '",l_glaa004_t,"'"
            ELSE
               LET g_qryparam.where = NULL
            END IF

            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept

            CALL q_authorised_ld()                                #呼叫開窗

            LET g_xcba_m.xcbald = g_qryparam.return1              #將開窗取得的值回傳到變數
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcba_m.xcbald
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcba_m.xcbald_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcba_m.xcbald_desc

            DISPLAY g_xcba_m.xcbald TO xcbald              #顯示到畫面上

            NEXT FIELD xcbald                          #返回原欄位
            LET g_qryparam.where = NULL

]]>
</point>
  <point name="ref_show.body.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcba_d[l_ac].xcba006
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_xcba_d[l_ac].xcba006_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcba_d[l_ac].xcba006_desc
]]>
</point>
  <point name="ref_show.body2.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcba2_d[l_ac].xcbaownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_xcba2_d[l_ac].xcbaownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcba2_d[l_ac].xcbaownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcba2_d[l_ac].xcbaowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_xcba2_d[l_ac].xcbaowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcba2_d[l_ac].xcbaowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcba2_d[l_ac].xcbacrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_xcba2_d[l_ac].xcbacrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcba2_d[l_ac].xcbacrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcba2_d[l_ac].xcbacrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_xcba2_d[l_ac].xcbacrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcba2_d[l_ac].xcbacrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcba2_d[l_ac].xcbamodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_xcba2_d[l_ac].xcbamodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcba2_d[l_ac].xcbamodid_desc
]]>
</point>
  <point name="ref_show.head.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcba_m.xcbald
#            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_xcba_m.xcbald_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcba_m.xcbald_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcba_m.xcba004
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_xcba_m.xcba004_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcba_m.xcba004_desc
]]>
</point>
  <point name="function.axci115_glacl004" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[#科目編號欄位帶值
PRIVATE FUNCTION axci115_glacl004(p_xcba005)
DEFINE l_glaa004    LIKE glaa_t.glaa004
DEFINE r_glacl004   LIKE glacl_t.glacl004
DEFINE p_xcba005    LIKE xcba_t.xcba005

   SELECT unique glaa004 INTO l_glaa004 FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xcba_m.xcbald 
   SELECT glacl004 INTO r_glacl004 FROM glacl_t
    WHERE glaclent = g_enterprise AND glacl001 = l_glaa004
      AND glacl002 = p_xcba005 AND glacl003 = g_dlang
   RETURN r_glacl004
END FUNCTION]]>
</point>
  <point name="function.axci115_xcba005_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[#檢查會計科目是否存在及非統計類科目及非賬戶性質
PRIVATE FUNCTION axci115_xcba005_chk(p_xcba005)
   DEFINE p_xcba005    LIKE xcba_t.xcba005
   DEFINE l_glaa004    LIKE glaa_t.glaa004
   DEFINE r_success    LIKE type_t.num5
   
   LET r_success = TRUE
   SELECT unique glaa004 INTO l_glaa004 FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xcba_m.xcbald
   IF NOT cl_null(p_xcba005) THEN
      #檢查是否存在
      IF r_success THEN
         IF NOT ap_chk_isExist(p_xcba005,"SELECT COUNT(*) FROM glac_t WHERE glacent = '"
            ||g_enterprise||"' AND glac001 = '"||l_glaa004||"' AND glac002 = ? ","agl-00141",0 ) THEN
            LET r_success = FALSE
         END IF
      END IF
      #檢查是否是統制科目
      IF r_success THEN
         IF NOT ap_chk_isExist(p_xcba005,"SELECT COUNT(*) FROM glac_t WHERE glacent = '"
            ||g_enterprise||"' AND glac001 = '"||l_glaa004||"' AND glac002 = ? AND glac003 != '1' ","agl-00142",0) THEN
            LET r_success = FALSE
         END IF
      END IF
      #檢查是否是賬戶性質科目
      IF r_success THEN
         IF NOT ap_chk_isExist(p_xcba005,"SELECT COUNT(*) FROM glac_t WHERE glacent = '"
            ||g_enterprise||"' AND glac001 = '"||l_glaa004||"' AND glac002 = ? AND glac006 = '1' ","axc-00057",0) THEN
            LET r_success = FALSE
         END IF
      END IF
      #檢查是否為成本類科目
      IF r_success THEN
         IF NOT ap_chk_isExist(p_xcba005,"SELECT COUNT(*) FROM glac_t WHERE glacent = '"
            ||g_enterprise||"' AND glac001 = '"||l_glaa004||"' AND glac002 = ? AND glac007 = '5' ","axc-00091",0) THEN
            LET r_success = FALSE
         END IF
      END IF
   END IF
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.axci115_s01" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[#整批複製
PRIVATE FUNCTION axci115_s01()
   DEFINE l_xradl003     LIKE type_t.chr80
   DEFINE l_success      LIKE type_t.num5
   DEFINE l_date         LIKE xcba_t.xcbacrtdt
   DEFINE l_glaa004     LIKE glaa_t.glaa004
   DEFINE l_glaa004_1   LIKE glaa_t.glaa004
   
   OPEN WINDOW w_axci115_s01 WITH FORM cl_ap_formpath("axc","axci115_s01")
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #輸入開始
      INPUT BY NAME g_xcba_s.xcbald,g_xcba_s.xcba002,g_xcba_s.xcba003,g_xcba_s.xcbald_1,g_xcba_s.xcba002_1,g_xcba_s.xcba003_1
         BEFORE INPUT
           LET g_xcba_s.xcbald = g_xcba_m.xcbald
           INITIALIZE g_ref_fields TO NULL
           LET g_ref_fields[1] = g_xcba_s.xcbald
           CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
           LET g_xcba_s.xcbald_desc = '', g_rtn_fields[1] , ''
           DISPLAY BY NAME g_xcba_s.xcbald_desc
           DISPLAY BY NAME g_xcba_s.xcbald
           LET g_xcba_s.xcba002_1 = YEAR(g_today)
           LET g_xcba_s.xcba003_1 = MONTH(g_today)
           SELECT glaald INTO g_xcba_s.xcbald_1 FROM glaa_t
             WHERE glaaent = g_enterprise AND glaa014 = 'Y' 
               AND glaacomp = (SELECT unique ooef017 FROM ooef_t where ooefent = g_enterprise AND ooef001 = g_site)
           INITIALIZE g_ref_fields TO NULL
           LET g_ref_fields[1] = g_xcba_s.xcbald_1
           CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
           LET g_xcba_s.xcbald_1_desc = '', g_rtn_fields[1] , ''    
           DISPLAY BY NAME g_xcba_s.xcbald_1,g_xcba_s.xcbald_1_desc,g_xcba_s.xcba002_1,g_xcba_s.xcba003_1
           
         AFTER FIELD xcbald
            IF NOT cl_null(g_xcba_s.xcbald) THEN
               IF NOT ap_chk_isExist(g_xcba_s.xcbald,"SELECT COUNT(*) FROM glaa_t WHERE "||"glaaent = '" ||g_enterprise|| "' AND "||"glaald = ? ",'agl-00055',0) THEN
                  LET g_xcba_s.xcbald = ''
                  LET g_xcba_s.xcbald_desc = ''
                  DISPLAY BY NAME g_xcba_s.xcbald_desc
                  NEXT FIELD CURRENT
               END IF
               IF NOT ap_chk_isExist(g_xcba_s.xcbald,"SELECT COUNT(*) FROM glaa_t WHERE "||"glaaent = '" ||g_enterprise|| "' AND "||"glaald = ? AND glaastus = 'Y' ",'agl-00051',0) THEN 
                  LET g_xcba_s.xcbald = ''
                  LET g_xcba_s.xcbald_desc = ''
                  DISPLAY BY NAME g_xcba_s.xcbald_desc
                  NEXT FIELD CURRENT
               END IF
               IF NOT s_ld_chk_authorization(g_user,g_xcba_s.xcbald) THEN
                  CALL cl_err(g_xcba_m.xcbald,'axr-00022',1)
                  LET g_xcba_s.xcbald = ''
                  LET g_xcba_s.xcbald_desc = ''
                  DISPLAY BY NAME g_xcba_s.xcbald_desc
                  NEXT FIELD CURRENT
               END IF
               IF NOT axci115_xcbald_xcba002_chk() THEN
                  NEXT FIELD CURRENT
               END IF
            END IF
#            IF NOT cl_null(g_xcba_s.xcbald) AND NOT cl_null(g_xcba_s.xcbald_1) THEN
#               SELECT glaacomp INTO l_glaacomp FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xcba_s.xcbald
#               SELECT glaacomp INTO l_glaacomp_1 FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xcba_s.xcbald_1
#               IF l_glaacomp != l_glaacomp_1 THEN
#                  CALL cl_err('','axc-00093',1)
#                  NEXT FIELD CURRENT
#               END IF
#            END IF


            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcba_s.xcbald
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcba_s.xcbald_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcba_s.xcbald_desc

         AFTER FIELD xcba002
            IF NOT cl_null(g_xcba_s.xcba002) THEN
               IF g_xcba_s.xcba002 <1000 OR g_xcba_s.xcba002 >9999 THEN
                  CALL cl_err(g_xcba_s.xcba002,'aoo-00113',0)
                  LET g_xcba_s.xcba002 =''
                  NEXT FIELD xcba002
               END IF
               IF NOT axci115_xcbald_xcba002_chk() THEN
                  NEXT FIELD CURRENT
               END IF
            END IF

         AFTER FIELD xcba003
            IF NOT cl_null(g_xcba_s.xcba003) THEN
               IF (g_xcba_s.xcba003 < 1) OR (g_xcba_s.xcba003 > 12) THEN
                  CALL cl_err(g_xcba_s.xcba003,'agl-00127',0)
                  LET g_xcba_s.xcba003 = ''
                  NEXT FIELD xcba003
               END IF
               IF NOT axci115_xcbald_xcba002_chk() THEN
                  NEXT FIELD CURRENT
               END IF
            END IF
            
         AFTER FIELD xcbald_1
            IF NOT cl_null(g_xcba_s.xcbald_1) THEN
               IF NOT ap_chk_isExist(g_xcba_s.xcbald_1,"SELECT COUNT(*) FROM glaa_t WHERE "||"glaaent = '" ||g_enterprise|| "' AND "||"glaald = ? ",'agl-00055',0) THEN
                  LET g_xcba_s.xcbald_1 = ''
                  LET g_xcba_s.xcbald_1_desc = ''
                  DISPLAY BY NAME g_xcba_s.xcbald_1_desc
                  NEXT FIELD CURRENT
               END IF
               IF NOT ap_chk_isExist(g_xcba_s.xcbald_1,"SELECT COUNT(*) FROM glaa_t WHERE "||"glaaent = '" ||g_enterprise|| "' AND "||"glaald = ? AND glaastus = 'Y' ",'agl-00051',0) THEN 
                  LET g_xcba_s.xcbald_1 = ''
                  LET g_xcba_s.xcbald_1_desc = ''
                  DISPLAY BY NAME g_xcba_s.xcbald_1_desc
                  NEXT FIELD CURRENT
               END IF
               IF NOT s_ld_chk_authorization(g_user,g_xcba_s.xcbald_1) THEN
                  CALL cl_err(g_xcba_m.xcbald,'axr-00022',1)
                  LET g_xcba_s.xcbald_1 = ''
                  LET g_xcba_s.xcbald_1_desc = ''
                  DISPLAY BY NAME g_xcba_s.xcbald_1_desc
                  NEXT FIELD CURRENT
               END IF
               IF NOT axci115_xcbald_xcba002_chk() THEN
                  NEXT FIELD CURRENT
               END IF
            END IF
            SELECT glaacomp INTO g_glaacomp FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xcba_s.xcbald_1
#            IF NOT cl_null(g_xcba_s.xcbald) AND NOT cl_null(g_xcba_s.xcbald_1) THEN
#               SELECT glaacomp INTO l_glaacomp FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xcba_s.xcbald
#               SELECT glaacomp INTO l_glaacomp_1 FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xcba_s.xcbald_1
#               IF l_glaacomp != l_glaacomp_1 THEN
#                  CALL cl_err('','axc-00093',1)
#                  NEXT FIELD CURRENT
#               END IF
#            END IF

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcba_s.xcbald_1
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcba_s.xcbald_1_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcba_s.xcbald_1_desc

         AFTER FIELD xcba002_1
            IF NOT cl_null(g_xcba_s.xcba002_1) THEN
               IF g_xcba_s.xcba002_1 <1000 OR g_xcba_s.xcba002_1 >9999 THEN
                  CALL cl_err(g_xcba_s.xcba002_1,'aoo-00113',0)
                  LET g_xcba_s.xcba002_1 =''
                  NEXT FIELD xcba002_1
               END IF
               IF NOT axci115_xcbald_xcba002_chk() THEN
                  NEXT FIELD CURRENT
               END IF
            END IF

         AFTER FIELD xcba003_1
            IF NOT cl_null(g_xcba_s.xcba003_1) THEN
               IF (g_xcba_s.xcba003_1 < 1) OR (g_xcba_s.xcba003_1 > 12) THEN
                  CALL cl_err(g_xcba_s.xcba003_1,'agl-00127',0)
                  LET g_xcba_s.xcba003_1 = ''
                  NEXT FIELD xcba003_1
               END IF
               IF NOT axci115_xcbald_xcba002_chk() THEN
                  NEXT FIELD CURRENT
               END IF
            END IF
 
        ON ACTION controlp INFIELD xcbald
            #add-point:ON ACTION controlp INFIELD xcbald
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcba_s.xcbald             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept

            CALL q_authorised_ld()                                #呼叫開窗

            LET g_xcba_s.xcbald = g_qryparam.return1              #將開窗取得的值回傳到變數
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcba_s.xcbald
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcba_s.xcbald_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcba_m.xcbald_desc

            DISPLAY g_xcba_s.xcbald TO xcbald              #顯示到畫面上

            NEXT FIELD xcbald 
            
         ON ACTION controlp INFIELD xcbald_1
            #add-point:ON ACTION controlp INFIELD xcbald_1
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcba_s.xcbald_1             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept

            CALL q_authorised_ld()                                #呼叫開窗

            LET g_xcba_s.xcbald_1 = g_qryparam.return1              #將開窗取得的值回傳到變數
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcba_s.xcbald_1
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcba_s.xcbald_1_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcba_s.xcbald_1_desc

            DISPLAY g_xcba_s.xcbald_1 TO xcbald_1              #顯示到畫面上

            NEXT FIELD xcbald_1 

         AFTER INPUT
            IF NOT cl_null(g_xcba_s.xcbald) AND NOT cl_null(g_xcba_s.xcbald_1) THEN
               SELECT glaa004 INTO l_glaa004 FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xcba_s.xcbald
               SELECT glaa004 INTO l_glaa004_1 FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xcba_s.xcbald_1
               IF l_glaa004 != l_glaa004_1 THEN
                  CALL cl_err('','agl-00110',1)
                  NEXT FIELD xcbald
               END IF
            END IF
            CALL axci115_ins_xcba_s01(g_xcba_s.xcbald,g_xcba_s.xcba002,g_xcba_s.xcba003,g_xcba_s.xcbald_1,g_xcba_s.xcba002_1,g_xcba_s.xcba003_1)

      END INPUT

      ON ACTION close
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION exit
         LET INT_FLAG = TRUE
         EXIT DIALOG
      
      ON ACTION produce
         ACCEPT DIALOG

      ON ACTION off
         LET INT_FLAG = TRUE
         EXIT DIALOG


   END DIALOG
   
   #畫面關閉
   CLOSE WINDOW w_axci115_s01
END FUNCTION]]>
</point>
  <point name="function.axci115_s02" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[#整批生成
PRIVATE FUNCTION axci115_s02()
   DEFINE p_xrad001      LIKE xrad_t.xrad001
   DEFINE l_xradl003     LIKE type_t.chr80
   DEFINE l_wc           STRING
   DEFINE l_wc1          STRING
   DEFINE l_date         LIKE xcba_t.xcbacrtdt
   
   OPEN WINDOW w_axci115_s02 WITH FORM cl_ap_formpath("axc","axci115_s02")
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #輸入開始
      INPUT BY NAME  g_xcba2_s.xcba001,g_xcba2_s.xcbald,g_xcba2_s.xcba002,g_xcba2_s.xcba003,g_xcba2_s.xcba004,g_xcba2_s.xcba008,g_xcba2_s.xcba007
         BEFORE INPUT
           CALL cl_set_combo_scc('xcba001','8908') 
           CALL cl_set_combo_scc('xcba007','8909') 
           CALL cl_set_combo_scc('xcba008','8910') 
           LET g_xcba2_s.xcba002 = YEAR(g_today)
           LET g_xcba2_s.xcba003 = MONTH(g_today)
           SELECT glaald INTO g_xcba2_s.xcbald FROM glaa_t
             WHERE glaaent = g_enterprise AND glaa014 = 'Y' 
               AND glaacomp = (SELECT unique ooef017 FROM ooef_t where ooefent = g_enterprise AND ooef001 = g_site)
           INITIALIZE g_ref_fields TO NULL
           LET g_ref_fields[1] = g_xcba2_s.xcbald
           CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
           LET g_xcba2_s.xcbald_desc = '', g_rtn_fields[1] , '' 
           DISPLAY BY NAME g_xcba2_s.xcbald,g_xcba2_s.xcbald_desc,g_xcba2_s.xcba002,g_xcba2_s.xcba003
           
           
          AFTER FIELD xcba001
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcba2_s.xcbald) AND NOT cl_null(g_xcba2_s.xcba001) AND NOT cl_null(g_xcba2_s.xcba002) AND NOT cl_null(g_xcba2_s.xcba003) AND NOT cl_null(g_xcba2_s.xcba004) THEN 
                IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcba_t WHERE "||"xcbaent = '" ||g_enterprise|| "' AND "||"xcbald = '"||g_xcba2_s.xcbald ||"' AND "|| "xcba001 = '"||g_xcba2_s.xcba001 ||"' AND "|| "xcba002 = '"||g_xcba2_s.xcba002 ||"' AND "|| "xcba003 = '"||g_xcba2_s.xcba003 ||"' AND "|| "xcba004 = '"||g_xcba2_s.xcba004 ||"'",'std-00004',0) THEN 
                   NEXT FIELD CURRENT
                END IF
            END IF

         #----<<xcbald>>----
         #此段落由子樣板a02產生
         AFTER FIELD xcbald
            
            #add-point:AFTER FIELD xcbald
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcba2_s.xcbald) AND NOT cl_null(g_xcba2_s.xcba001) AND NOT cl_null(g_xcba2_s.xcba002) AND NOT cl_null(g_xcba2_s.xcba003) AND NOT cl_null(g_xcba2_s.xcba004) THEN 
                IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcba_t WHERE "||"xcbaent = '" ||g_enterprise|| "' AND "||"xcbald = '"||g_xcba2_s.xcbald ||"' AND "|| "xcba001 = '"||g_xcba2_s.xcba001 ||"' AND "|| "xcba002 = '"||g_xcba2_s.xcba002 ||"' AND "|| "xcba003 = '"||g_xcba2_s.xcba003 ||"' AND "|| "xcba004 = '"||g_xcba2_s.xcba004 ||"'",'std-00004',0) THEN 
                   NEXT FIELD CURRENT
                END IF
            END IF
            IF NOT cl_null(g_xcba2_s.xcbald) THEN
               IF NOT ap_chk_isExist(g_xcba2_s.xcbald,"SELECT COUNT(*) FROM glaa_t WHERE "||"glaaent = '" ||g_enterprise|| "' AND "||"glaald = ? ",'agl-00055',0) THEN
                  LET g_xcba2_s.xcbald = ''
                  LET g_xcba2_s.xcbald_desc = ''
                  DISPLAY BY NAME g_xcba2_s.xcbald_desc
                  NEXT FIELD CURRENT
               END IF
               IF NOT ap_chk_isExist(g_xcba2_s.xcbald,"SELECT COUNT(*) FROM glaa_t WHERE "||"glaaent = '" ||g_enterprise|| "' AND "||"glaald = ? AND glaastus = 'Y' ",'agl-00051',0) THEN 
                  LET g_xcba2_s.xcbald = ''
                  LET g_xcba2_s.xcbald_desc = ''
                  DISPLAY BY NAME g_xcba2_s.xcbald_desc
                  NEXT FIELD CURRENT
               END IF
               IF NOT s_ld_chk_authorization(g_user,g_xcba2_s.xcbald) THEN
                  CALL cl_err(g_xcba2_s.xcbald,'axr-00022',1)
                  LET g_xcba2_s.xcbald = ''
                  LET g_xcba2_s.xcbald_desc = ''
                  DISPLAY BY NAME g_xcba2_s.xcbald_desc
                  NEXT FIELD CURRENT
               END IF
            END IF

            SELECT glaacomp INTO g_glaacomp FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xcba2_s.xcbald

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcba2_s.xcbald
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcba2_s.xcbald_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcba2_s.xcbald_desc

            #END add-point


         #此段落由子樣板a02產生
         AFTER FIELD xcba002
            
            #add-point:AFTER FIELD xcba002
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcba2_s.xcbald) AND NOT cl_null(g_xcba2_s.xcba001) AND NOT cl_null(g_xcba2_s.xcba002) AND NOT cl_null(g_xcba2_s.xcba003) AND NOT cl_null(g_xcba2_s.xcba004) THEN 
                IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcba_t WHERE "||"xcbaent = '" ||g_enterprise|| "' AND "||"xcbald = '"||g_xcba2_s.xcbald ||"' AND "|| "xcba001 = '"||g_xcba2_s.xcba001 ||"' AND "|| "xcba002 = '"||g_xcba2_s.xcba002 ||"' AND "|| "xcba003 = '"||g_xcba2_s.xcba003 ||"' AND "|| "xcba004 = '"||g_xcba2_s.xcba004 ||"'",'std-00004',0) THEN 
                   NEXT FIELD CURRENT
                END IF
            END IF
            IF NOT cl_null(g_xcba2_s.xcba002) THEN
               IF g_xcba2_s.xcba002 <1000 OR g_xcba2_s.xcba002 >9999 THEN
                  CALL cl_err(g_xcba2_s.xcba002,'aoo-00113',0)
                  LET g_xcba2_s.xcba002 =''
                  NEXT FIELD xcba002
               END IF
            END IF



            #END add-point

            #add-point:AFTER FIELD xcba003
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcba2_s.xcbald) AND NOT cl_null(g_xcba2_s.xcba001) AND NOT cl_null(g_xcba2_s.xcba002) AND NOT cl_null(g_xcba2_s.xcba003) AND NOT cl_null(g_xcba2_s.xcba004) THEN 
                IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcba_t WHERE "||"xcbaent = '" ||g_enterprise|| "' AND "||"xcbald = '"||g_xcba2_s.xcbald ||"' AND "|| "xcba001 = '"||g_xcba2_s.xcba001 ||"' AND "|| "xcba002 = '"||g_xcba2_s.xcba002 ||"' AND "|| "xcba003 = '"||g_xcba2_s.xcba003 ||"' AND "|| "xcba004 = '"||g_xcba2_s.xcba004 ||"'",'std-00004',0) THEN 
                   NEXT FIELD CURRENT
                END IF
            END IF

            IF NOT cl_null(g_xcba2_s.xcba003) THEN
               IF (g_xcba2_s.xcba003 < 1) OR (g_xcba2_s.xcba003 > 12) THEN
                  CALL cl_err(g_xcba2_s.xcba003,'agl-00127',0)
                  LET g_xcba2_s.xcba003 = ''
                  NEXT FIELD xcba003
               END IF
            END IF

            #END add-point

         #----<<xcba004>>----
         #此段落由子樣板a02產生
         AFTER FIELD xcba004
            
            #add-point:AFTER FIELD xcba004
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcba2_s.xcbald) AND NOT cl_null(g_xcba2_s.xcba001) AND NOT cl_null(g_xcba2_s.xcba002) AND NOT cl_null(g_xcba2_s.xcba003) AND NOT cl_null(g_xcba2_s.xcba004) THEN 
                IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcba_t WHERE "||"xcbaent = '" ||g_enterprise|| "' AND "||"xcbald = '"||g_xcba2_s.xcbald ||"' AND "|| "xcba001 = '"||g_xcba2_s.xcba001 ||"' AND "|| "xcba002 = '"||g_xcba2_s.xcba002 ||"' AND "|| "xcba003 = '"||g_xcba2_s.xcba003 ||"' AND "|| "xcba004 = '"||g_xcba2_s.xcba004 ||"'",'std-00004',0) THEN 
                   NEXT FIELD CURRENT
                END IF
            END IF

            IF NOT cl_null(g_xcba2_s.xcba004) THEN
               IF NOT ap_chk_isExist(g_xcba2_s.xcba004,"SELECT COUNT(*) FROM ooeg_t WHERE ooegent = '" ||g_enterprise||"' AND ooeg001 = ? ","abm-00006",1) THEN
                   LET g_xcba2_s.xcba004 = ''
                   LET g_xcba2_s.xcba004_desc = ''
                   DISPLAY BY NAME g_xcba2_s.xcba004_desc
                   NEXT FIELD xcba004
                END IF
                #成本中心為利潤中心或者成本中心
                IF NOT ap_chk_isExist(g_xcba2_s.xcba004,"SELECT COUNT(*) FROM ooeg_t WHERE ooegent = '" ||g_enterprise||"' AND ooeg001 = ? AND (ooeg003 = '2' OR ooeg003 = '3')","axc-00090",1) THEN
                   LET g_xcba2_s.xcba004 = ''
                   LET g_xcba2_s.xcba004_desc = ''
                   DISPLAY BY NAME g_xcba2_s.xcba004_desc
                   NEXT FIELD xcba004
                END IF
                IF NOT ap_chk_isExist(g_xcba2_s.xcba004,"SELECT COUNT(*) FROM ooeg_t WHERE ooegent = '" ||g_enterprise||"' AND ooeg001 = ? AND ooegstus = 'Y' ","abm-00007",1 ) THEN
                   LET g_xcba2_s.xcba004 = ''
                   LET g_xcba2_s.xcba004_desc = ''
                   DISPLAY BY NAME g_xcba2_s.xcba004_desc
                   NEXT FIELD xcba004
                END IF
                LET l_date = g_today
                IF NOT ap_chk_isExist(g_xcba2_s.xcba004,"SELECT COUNT(*) FROM ooeg_t WHERE ooegent = '" ||g_enterprise||"' AND ooeg001 = ? AND ooegstus = 'Y' AND (ooeg006 <= '" ||g_today||"' AND (ooeg007 IS NULL OR ooeg007 > '" ||g_today||"' )) ","aoo-00201",1 ) THEN
                   LET g_xcba2_s.xcba004 = ''
                   LET g_xcba2_s.xcba004_desc = ''
                   DISPLAY BY NAME g_xcba2_s.xcba004_desc
                   NEXT FIELD xcba004
               END IF
               IF NOT ap_chk_isExist(g_xcba2_s.xcba004,"SELECT COUNT(*) FROM ooeg_t,ooef_t WHERE ooegent = ooefent AND ooeg001 = ooef001 AND ooegent = '" ||g_enterprise||"' AND ooeg001 = ? AND ooef017 = '"||g_glaacomp||"' AND ooegstus = 'Y' ","aoo-00201",1 ) THEN
                   LET g_xcba2_s.xcba004 = ''
                   LET g_xcba2_s.xcba004_desc = ''
                   DISPLAY BY NAME g_xcba2_s.xcba004_desc
                   NEXT FIELD xcba004
               END IF
            END IF

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcba2_s.xcba004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcba2_s.xcba004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcba2_s.xcba004_desc

            #END add-point
            
         #----<<xcbald>>----
         #Ctrlp:input.c.xcbald
         ON ACTION controlp INFIELD xcbald
            #add-point:ON ACTION controlp INFIELD xcbald
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcba2_s.xcbald             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept

            CALL q_authorised_ld()                                #呼叫開窗

            LET g_xcba2_s.xcbald = g_qryparam.return1              #將開窗取得的值回傳到變數
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcba2_s.xcbald
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcba2_s.xcbald_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcba2_s.xcbald_desc

            DISPLAY g_xcba2_s.xcbald TO xcbald              #顯示到畫面上

            NEXT FIELD xcbald                          #返回原欄位


            #END add-point

         #Ctrlp:input.c.xcba004
         ON ACTION controlp INFIELD xcba004
            #add-point:ON ACTION controlp INFIELD xcba004
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcba2_s.xcba004             #給予default值

            #給予arg
            LET l_date = cl_get_current()
            LET g_qryparam.arg1 = l_date USING "yyyy/mm/dd" #
            LET g_qryparam.arg2 = g_glaacomp
            LET g_qryparam.where = " (ooeg003 = '2' OR ooeg003 = '3')"

            CALL q_ooeg001_3()                                #呼叫開窗

            LET g_xcba2_s.xcba004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcba2_s.xcba004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcba2_s.xcba004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcba2_s.xcba004_desc

            DISPLAY g_xcba2_s.xcba004 TO xcba004              #顯示到畫面上

            NEXT FIELD xcba004                          #返回原欄位


            #END add-point


         AFTER INPUT
            

      END INPUT
      
      CONSTRUCT BY NAME l_wc ON xcba006
         BEFORE CONSTRUCT
            CALL cl_qbe_init()
            
         #----<<xcba006>>----
         #Ctrlp:construct.c.page1.xcba006
         ON ACTION controlp INFIELD xcba006
            #add-point:ON ACTION controlp INFIELD xcba006
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcba006  #顯示到畫面上

            NEXT FIELD xcba006                     #返回原欄位
            
      END CONSTRUCT
      
      CONSTRUCT BY NAME l_wc1 ON xcba005
         BEFORE CONSTRUCT
            CALL cl_qbe_init()
            
         ON ACTION controlp INFIELD xcba005
            #add-point:ON ACTION controlp INFIELD xcba005
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " glac003 != '1' AND glac006 = '1' "

            #給予arg

           #CALL aglt310_04()
            CALL q_glac002_5()
            DISPLAY g_qryparam.return1 TO xcba005  #顯示到畫面上
            NEXT FIELD xcba005 
      END CONSTRUCT  

      AFTER DIALOG
         CALL axci115_ins_xcba_s02(l_wc,l_wc1)

      ON ACTION close
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION exit
         LET INT_FLAG = TRUE
         EXIT DIALOG
      
      ON ACTION produce
         ACCEPT DIALOG

      ON ACTION off
         LET INT_FLAG = TRUE
         EXIT DIALOG


   END DIALOG
 
   


   #畫面關閉
   CLOSE WINDOW w_axci115_s02
END FUNCTION]]>
</point>
  <point name="function.axci115_ins_xcba_s01" cite_std="N" status="" ver="1" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[#整批複製插入xcba_t
PRIVATE FUNCTION axci115_ins_xcba_s01(p_xcbald,p_xcba002,p_xcba003,p_xcbald_1,p_xcba002_1,p_xcba003_1)
DEFINE p_xcbald       LIKE xcba_t.xcbald
DEFINE p_xcba002      LIKE xcba_t.xcba002
DEFINE p_xcba003      LIKE xcba_t.xcba003
DEFINE p_xcbald_1     LIKE xcba_t.xcbald
DEFINE p_xcba002_1    LIKE xcba_t.xcba002
DEFINE p_xcba003_1    LIKE xcba_t.xcba003
DEFINE l_sql          STRING
DEFINE l_success      LIKE type_t.chr1
DEFINE l_xcba         RECORD LIKE xcba_t.*
DEFINE l_n            LIKE type_t.num10 
DEFINE l_glaacomp     LIKE glaa_t.glaacomp
DEFINE l_glaacomp_1   LIKE glaa_t.glaacomp
DEFINE l_glaa004_1    LIKE glaa_t.glaa004
DEFINE l_glaa004      LIKE glaa_t.glaa004
DEFINE l_n1           LIKE type_t.num10 
DEFINE l_sum          LIKE type_t.num5      #計算分攤權數
DEFINE l_xcba005_t    LIKE xcba_t.xcba005   #科目編號舊值 
DEFINE l_xcba006_t    LIKE xcba_t.xcba006   #部門編號舊值 
DEFINE l_xcba009_t    LIKE xcba_t.xcba009   #分攤權數舊值 
DEFINE l_xcba004      LIKE xcba_t.xcba004   #成本中心
DEFINE l_xcba006      LIKE xcba_t.xcba005   #部門編號
DEFINE l_str          STRING

   #初始化
   LET l_success = 'Y'
   INITIALIZE l_xcba.* TO NULL

   #為空，則RETURN
   IF cl_null(p_xcbald) OR cl_null(p_xcba002) OR cl_null(p_xcba003) OR cl_null(p_xcbald_1) OR cl_null(p_xcba002_1) OR cl_null(p_xcba003_1) THEN
      RETURN
   END IF
    
   
   #检查来源账套与目的账套是否用的同一套科目表
   IF NOT cl_null(g_xcba_s.xcbald) AND NOT cl_null(g_xcba_s.xcbald_1) THEN
      SELECT glaa004 INTO l_glaa004 FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xcba_s.xcbald
      SELECT glaa004 INTO l_glaa004_1 FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xcba_s.xcbald_1
      IF l_glaa004 != l_glaa004_1 THEN
         CALL cl_err('','agl-00110',1)
         RETURN
      END IF
   END IF

#啟用事務
   CALL s_transaction_begin()
   
   CALL cl_showmsg_init()
   LET l_xcba.xcbaownid = g_user
   LET l_xcba.xcbaowndp = g_dept
   LET l_xcba.xcbacrtid = g_user
   LET l_xcba.xcbacrtdp = g_dept 
   LET l_xcba.xcbacrtdt = cl_get_current()
   LET l_n1 = 0

   #開始插入操作
   LET l_sql = " SELECT xcba001,xcba004,xcba005,xcba006,xcba007,xcba008,xcba009 FROM xcba_t ",
               " WHERE xcbaent = '",g_enterprise,"' AND xcbald = '",p_xcbald,"'",
               "   AND xcba002 = '",p_xcba002,"' AND xcba003 = '",p_xcba003,"'",
               "   ORDER BY xcba005,xcba006 "
   PREPARE xcba_s01_prep FROM l_sql
   DECLARE xcba_s01_curs CURSOR FOR xcba_s01_prep
   
   FOREACH xcba_s01_curs INTO l_xcba.xcba001,l_xcba.xcba004,l_xcba.xcba005,l_xcba.xcba006,
                              l_xcba.xcba007,l_xcba.xcba008,l_xcba.xcba009
       
       #前后兩筆部門編號或者會計科目不同
       IF l_xcba.xcba005 != l_xcba005_t OR l_xcba.xcba006 != l_xcba006_t THEN
          LET l_sum = 0
          #求目的帳套年期會計科目部門編號下的分攤權數
#          LET l_sql = " SELECT SUM(xcba009) FROM xcba_t ",
#                      "  WHERE xcbaent = ",g_enterprise," AND xcbald = '",p_xcbald_1,"'",
#                      "    AND xcba002 = ",p_xcba002_1," AND xcba003 = ",p_xcba003_1,   
#                      "　　AND xcba005 = '",l_xcba.xcba005,"' AND xcba006 = '",l_xcba.xcba006,"'"      
#          PREPARE xcba009_prep FROM l_sql
#          EXECUTE xcba009_prep INTO l_sum 
#          FREE xcba009_prep 
          SELECT SUM(xcba009) INTO l_sum FROM xcba_t 
            WHERE xcbaent = g_enterprise AND xcbald = p_xcbald_1
              AND xcba002 = p_xcba002_1 AND xcba003 = p_xcba003_1  
          　　AND xcba005 = l_xcba.xcba005 AND xcba006 = l_xcba.xcba006 
          IF cl_null(l_sum) THEN LET l_sum = 0 END IF 
       END IF 
    
       LET l_xcba005_t = l_xcba.xcba005 
       LET l_xcba006_t = l_xcba.xcba006        
       
       #若已經存在，则删除资料在进行新增       
       LET l_n = 0           
       SELECT COUNT(*) INTO l_n FROM xcba_t 
        WHERE xcbaent = g_enterprise   AND xcbald = p_xcbald_1
          AND xcba001 = l_xcba.xcba001 AND xcba002 = p_xcba002_1
          AND xcba003 = p_xcba003_1    AND xcba004 = l_xcba.xcba004
          AND xcba005 = l_xcba.xcba005 AND xcba006 = l_xcba.xcba006   

       IF l_n > 0 THEN
          #取分攤權數xcba009舊值
          SELECT xcba009 INTO l_xcba009_t FROM xcba_t 
           WHERE xcbaent = g_enterprise   AND xcbald = p_xcbald_1 
             AND xcba002 = p_xcba002_1
             AND xcba003 = p_xcba003_1   
             AND xcba005 = l_xcba.xcba005 AND xcba006 = l_xcba.xcba006
          
          #刪除已存在資料          
          DELETE FROM xcba_t 
           WHERE xcbaent = g_enterprise   AND xcbald = p_xcbald_1
             AND xcba001 = l_xcba.xcba001 AND xcba002 = p_xcba002_1
             AND xcba003 = p_xcba003_1    AND xcba004 = l_xcba.xcba004  
             AND xcba005 = l_xcba.xcba005 AND xcba006 = l_xcba.xcba006 
             
          LET l_sum = l_sum - l_xcba009_t   #若資料已存在，減去已存在的分攤權數
       END IF
       
       LET l_sum = l_sum + l_xcba.xcba009  #累計分攤權數
   
       LET l_n1 = 1
       #插入數據庫操作
       INSERT INTO xcba_t
                (xcbaent,
                 xcba001,xcbald,xcba002,xcba003,xcba004,xcba005,xcba006,xcba007,
                 xcbastus,xcba008,xcba009,xcbaownid,xcbaowndp,xcbacrtid,xcbacrtdp,xcbacrtdt) 
          VALUES(g_enterprise,
                 l_xcba.xcba001,p_xcbald_1,p_xcba002_1,p_xcba003_1,l_xcba.xcba004,l_xcba.xcba005,
                 l_xcba.xcba006,l_xcba.xcba007,'Y',l_xcba.xcba008,l_xcba.xcba009,
                 l_xcba.xcbaownid,l_xcba.xcbaowndp,l_xcba.xcbacrtid,l_xcba.xcbacrtdp,l_xcba.xcbacrtdt)
       IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
          LET l_success = 'N'
          EXIT FOREACH 
       END IF
       
       IF l_sum > 100 THEN
          LET l_str = p_xcbald_1,"/",p_xcba002_1,"/",p_xcba003_1,"/",l_xcba.xcba005,"/",l_xcba.xcba006
          CALL cl_errmsg('xcbald,xcba002,xcba003,xcba005,xcba006',l_str,'','axc-00077',1)
          LET l_success = 'N'
       END IF
         
   END FOREACH
   
   IF l_success = 'Y' THEN
      #检查来源账套与目的账套是否用的同一套科目表
      IF NOT cl_null(g_xcba_s.xcbald) AND NOT cl_null(g_xcba_s.xcbald_1) THEN
         SELECT glaacomp INTO l_glaacomp FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xcba_s.xcbald
         SELECT glaacomp INTO l_glaacomp_1 FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xcba_s.xcbald_1
         IF l_glaacomp != l_glaacomp_1 THEN
            LET l_sql = " SELECT UNIQUE xcba004 FROM xcba_t,ooef_t ",
                        "  WHERE xcbaent = ooefent AND xcba004 = ooef001 ",
                        "    AND (ooef017 != '",l_glaacomp_1,"' OR ooef017 is null) ",
                        "    AND xcbaent = '",g_enterprise,"' AND xcbald ='",p_xcbald_1,"'",
                        "    AND xcba002 = ",p_xcba002_1," AND xcba003 = ",p_xcba003_1
            PREPARE xcba004_prep FROM l_sql
            DECLARE xcba004_curs CURSOR FOR xcba004_prep
            FOREACH xcba004_curs INTO l_xcba004
               LET l_str = p_xcbald_1,"/",l_xcba.xcba004
               CALL cl_errmsg('xcbald,xcba004',l_str,'','axc-00092',1)
            END FOREACH
            
            LET l_sql = " SELECT UNIQUE xcba006 FROM xcba_t,ooef_t ",
                        "  WHERE xcbaent = ooefent AND xcba006 = ooef001 ",
                        "    AND (ooef017 != '",l_glaacomp_1,"' OR ooef017 is null) ",
                        "    AND xcbaent = '",g_enterprise,"' AND xcbald ='",p_xcbald_1,"'",
                        "    AND xcba002 = ",p_xcba002_1," AND xcba003 = ",p_xcba003_1
            PREPARE xcba006_prep FROM l_sql
            DECLARE xcba006_curs CURSOR FOR xcba006_prep
            FOREACH xcba006_curs INTO l_xcba006
               LET l_str = p_xcbald_1,"/",l_xcba.xcba006
               CALL cl_errmsg('xcbald,xcba006',l_str,'','axc-00092',1)
            END FOREACH
            
         END IF
      END IF
   END IF 
   
   CALL cl_err_showmsg()
   
#結束事務
   CALL s_transaction_end(l_success,1)

END FUNCTION]]>
</point>
  <point name="function.axci115_xcbald_xcba002_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="6" mark_hard="N">
<![CDATA[#檢查目的帳套年度期別與來源帳套年度期別不能相等
PRIVATE FUNCTION axci115_xcbald_xcba002_chk()
DEFINE r_success     LIKE type_t.num5

   LET r_success = TRUE
   
   IF NOT cl_null(g_xcba_s.xcbald) AND NOT cl_null(g_xcba_s.xcba002) AND NOT cl_null(g_xcba_s.xcba003) 
      AND NOT cl_null(g_xcba_s.xcbald_1) AND NOT cl_null(g_xcba_s.xcba002_1) AND NOT cl_null(g_xcba_s.xcba003_1) THEN
      IF g_xcba_s.xcbald = g_xcba_s.xcbald_1 AND g_xcba_s.xcba002 = g_xcba_s.xcba002_1 
         AND g_xcba_s.xcba003 = g_xcba_s.xcba003_1 THEN
         CALL cl_err('','axc-00060',1)
         LET r_success = FALSE
      END IF
      
   END IF
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.axci115_ins_xcba_s02" cite_std="N" status="" ver="1" src="s" new="Y" order="7" mark_hard="N">
<![CDATA[#整批生成插入xcba_t
PRIVATE FUNCTION axci115_ins_xcba_s02(p_wc,p_wc1)
DEFINE p_wc           STRING
DEFINE p_wc1          STRING
DEFINE l_sql1          STRING
DEFINE l_success      LIKE type_t.chr1
DEFINE l_xcba         RECORD LIKE xcba_t.*
DEFINE l_n            LIKE type_t.num10  
DEFINE l_glaa004      LIKE glaa_t.glaa004
DEFINE l_n1           LIKE type_t.num10 

#初始化
   LET l_success = 'N'
   INITIALIZE l_xcba.* TO NULL

#啟用事務
   CALL s_transaction_begin()
   
   LET l_xcba.xcbaownid = g_user
   LET l_xcba.xcbaowndp = g_dept
   LET l_xcba.xcbacrtid = g_user
   LET l_xcba.xcbacrtdp = g_dept 
   LET l_xcba.xcbacrtdt = cl_get_current()
   LET l_xcba.xcba009 = 0
   
   SELECT unique glaa004 INTO l_glaa004 FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xcba2_s.xcbald

   #開始插入操作
#   LET l_sql = " SELECT unique xcba005,xcba006,xcba009 FROM xcba_t ",
#               " WHERE xcbaent = '",g_enterprise,"' AND ",p_wc
#   PREPARE xcba_s02_prep FROM l_sql
#   DECLARE xcba_s02_curs CURSOR FOR xcba_s02_prep
   LET p_wc = cl_replace_str(p_wc,"xcba006","ooeg001")
   LET p_wc1 = cl_replace_str(p_wc1,"xcba005","glac002")
   LET l_sql1 = " SELECT unique ooeg001 FROM ooeg_t,ooef_t ",
               " WHERE ooefent = ooegent AND ooef001 = ooeg001 ",
               "   AND ooegent = '",g_enterprise,"' AND ooegstus = 'Y'",
               "   AND (ooeg006 <= '" ,g_today,"' AND (ooeg007 IS NULL OR ooeg007 > '",g_today,"'))",
               "   AND ooef017 = '",g_glaacomp,"' AND ",p_wc
   PREPARE ooeg_s02_prep FROM l_sql1
   DECLARE ooeg_s02_curs CURSOR FOR ooeg_s02_prep
  
  LET l_sql1 = " SELECT unique glac002 FROM glac_t ",
               " WHERE glacent = '",g_enterprise,"' AND glacstus = 'Y'",
               "   AND glac001 = '",l_glaa004,"' AND glac003 != '1' ",
               "   AND glac006 = '1' AND glac007 = '5' AND ",p_wc1

   PREPARE glac_s02_prep FROM l_sql1
   DECLARE glac_s02_curs CURSOR FOR glac_s02_prep
   
#  FOREACH xcba_s02_curs INTO l_xcba.xcba005,l_xcba.xcba006,l_xcba.xcba009
   
   FOREACH ooeg_s02_curs INTO l_xcba.xcba006
   
      FOREACH glac_s02_curs INTO l_xcba.xcba005
   
       IF NOT cl_null(l_xcba.xcba005) THEN
          IF NOT axci115_xcba005_chk(l_xcba.xcba005) THEN
             LET l_success = 'N'
             EXIT FOREACH
          END IF
       END IF
           
       IF NOT cl_null(l_xcba.xcba006) THEN
          IF NOT ap_chk_isExist(l_xcba.xcba006,"SELECT COUNT(*) FROM ooeg_t WHERE ooegent = '" ||g_enterprise||"' AND ooeg001 = ? ","abm-00006",0) THEN
              LET l_success = 'N'
             EXIT FOREACH
           END IF
           IF NOT ap_chk_isExist(l_xcba.xcba006,"SELECT COUNT(*) FROM ooeg_t WHERE ooegent = '" ||g_enterprise||"' AND ooeg001 = ? AND ooegstus = 'Y' ","abm-00007",0 ) THEN
              LET l_success = 'N'
             EXIT FOREACH
          END IF
       END IF    
       
       #先檢查是否已經有存在資料,若有則跳過
       LET l_n = 0           
       SELECT COUNT(*) INTO l_n FROM xcba_t 
        WHERE xcbaent = g_enterprise      AND xcbald = g_xcba2_s.xcbald
          AND xcba001 = g_xcba2_s.xcba001 AND xcba002 = g_xcba2_s.xcba002
          AND xcba003 = g_xcba2_s.xcba003 AND xcba004 = g_xcba2_s.xcba004
          AND xcba005 = l_xcba.xcba005    AND xcba006 = l_xcba.xcba006   

       IF l_n > 0 THEN
          CONTINUE FOREACH
       END IF
        
       #插入數據庫操作
       LET l_success = 'Y' 
       INSERT INTO xcba_t
                (xcbaent,
                 xcba001,xcbald,xcba002,xcba003,xcba004,xcba005,xcba006,xcba007,
                 xcbastus,xcba008,xcba009,xcbaownid,xcbaowndp,xcbacrtid,xcbacrtdp,xcbacrtdt) 
          VALUES(g_enterprise,
                 g_xcba2_s.xcba001,g_xcba2_s.xcbald,g_xcba2_s.xcba002,g_xcba2_s.xcba003,g_xcba2_s.xcba004,
                 l_xcba.xcba005,l_xcba.xcba006,g_xcba2_s.xcba007,'Y',g_xcba2_s.xcba008,l_xcba.xcba009,
                 l_xcba.xcbaownid,l_xcba.xcbaowndp,l_xcba.xcbacrtid,l_xcba.xcbacrtdp,l_xcba.xcbacrtdt)
         IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
            LET l_success = 'N'
            EXIT FOREACH 
         END IF
      END FOREACH
      IF l_success = 'N' THEN
         EXIT FOREACH
      END IF
  END FOREACH

#結束事務
   CALL s_transaction_end(l_success,1)
END FUNCTION]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#         LET g_xcba2_d[l_ac].xcba005 = g_xcba_d[l_ac].xcba005
#         LET g_xcba2_d[l_ac].xcba006 = g_xcba_d[l_ac].xcba006
#         SELECT ooefl003 INTO g_xcba2_d[l_ac].xcba006_2_desc FROM ooefl_t WHERE ooeflent=g_enterprise AND ooefl001=g_xcba2_d[l_ac].xcba006 AND ooefl002=g_dlang
         CALL axci115_glacl004(g_xcba_d[l_ac].xcba005) RETURNING g_xcba_d[l_ac].xcba005_desc
#         CALL axci115_glacl004(g_xcba2_d[l_ac].xcba005) RETURNING g_xcba2_d[l_ac].xcba005_2_desc]]>
</point>
  <point name="construct.a.xcbald" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.page1.xcba005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " glac003 != '1' AND glac006 = '1' "

            #給予arg

           #CALL aglt310_04()
            CALL q_glac002_5()
            DISPLAY g_qryparam.return1 TO xcba005  #顯示到畫面上
            NEXT FIELD xcba005                          #返回原欄位]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_date      LIKE xcba_t.xcbacrtdt]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_glaa004             LIKE glaa_t.glaa004
 type type_g_xcba_s        RECORD
       xcbald LIKE xcba_t.xcbald,
       xcbald_desc LIKE type_t.chr80,
       xcba002 LIKE xcba_t.xcba002,
       xcba003 LIKE xcba_t.xcba003,
       xcbald_1 LIKE type_t.chr80,
       xcbald_1_desc LIKE type_t.chr80,
       xcba002_1 LIKE type_t.num5,
       xcba003_1 LIKE type_t.num5
       END RECORD
DEFINE g_xcba_s        type_g_xcba_s          {#ADP版次:1#}
 type type_g_xcba2_s        RECORD
       xcba001 LIKE xcba_t.xcba001, 
       xcbald LIKE xcba_t.xcbald, 
       xcbald_desc LIKE type_t.chr80, 
       xcba002 LIKE xcba_t.xcba002, 
       xcba003 LIKE xcba_t.xcba003, 
       xcba004 LIKE xcba_t.xcba004, 
       xcba004_desc LIKE type_t.chr80, 
       xcba008 LIKE xcba_t.xcba008,
       xcba007 LIKE xcba_t.xcba007
       END RECORD
DEFINE g_xcba2_s        type_g_xcba2_s          {#ADP版次:1#}
DEFINE g_glaacomp       LIKE glaa_t.glaacomp]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF NOT s_ld_chk_authorization(g_user,g_xcba_m.xcbald) THEN
      CALL cl_err(g_xcba_m.xcbald,'axr-00022',1)
      RETURN
   END IF
   IF p_cmd = 'a' AND l_cmd_t = 'r' THEN
      CALL cl_set_comp_entry("xcba007",FALSE)
   ELSE
      CALL cl_set_comp_entry("xcba007",TRUE)
   END IF]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL axci115_glacl004(g_xcba_d[l_ac].xcba005) RETURNING g_xcba_d[l_ac].xcba005_desc]]>
</point>
  <point name="input.c.page1.xcba005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcba_d[l_ac].xcba005             #給予default值
            SELECT unique glaa004 INTO g_glaa004 FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xcba_m.xcbald
            LET g_qryparam.where = " glac001 = '",g_glaa004,"' AND glac003 != '1' AND glac006 = '1' AND glac007 = '5'"

            #給予arg

           #CALL aglt310_04()
            CALL q_glac002_5()
            LET g_xcba_d[l_ac].xcba005 = g_qryparam.return1              #將開窗取得的值回傳到變數
            CALL axci115_glacl004(g_xcba_d[l_ac].xcba005) RETURNING g_xcba_d[l_ac].xcba005_desc


            DISPLAY g_xcba_d[l_ac].xcba005 TO xcba005             #顯示到畫面上
            DISPLAY BY NAME g_xcba_d[l_ac].xcba005_desc
            LET g_qryparam.where = ""
            NEXT FIELD xcba005                          #返回原欄位]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE  l_date          LIKE xcba_t.xcbacrtdt
   DEFINE  l_glaa004_t     LIKE glaa_t.glaa004
   DEFINE  l_glaa004       LIKE glaa_t.glaa004
   DEFINE  l_xcba009       LIKE xcba_t.xcba009]]>
</point>
  <point name="input.head.b_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF p_cmd = 'a' AND (l_cmd_t = 'a' OR l_cmd_t = 'r') THEN
               SELECT glaald INTO g_xcba_m.xcbald FROM glaa_t
                WHERE glaaent = g_enterprise AND glaa014 = 'Y' 
                  AND glaacomp = (SELECT unique ooef017 FROM ooef_t where ooefent = g_enterprise AND ooef001 = g_site)
               LET g_xcba_m.xcba002 = YEAR(g_today)
               LET g_xcba_m.xcba003 = MONTH(g_today)
               LET g_xcba_m.xcbald_desc = ''
               LET g_xcba_m.xcba004_desc = ''
               LET g_xcba_m.xcba001 = 1
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_xcba_m.xcbald
               CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_xcba_m.xcbald_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_xcba_m.xcba001,g_xcba_m.xcbald,g_xcba_m.xcba002,g_xcba_m.xcba003,g_xcba_m.xcbald_desc,g_xcba_m.xcba004_desc
            END IF
            SELECT glaacomp INTO g_glaacomp FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xcba_m.xcbald]]>
</point>
  <point name="menu.open_axci115_s01" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL axci115_s01()]]>
</point>
  <point name="menu.open_axci115_s02" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL axci115_s02()]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   SELECT glaacomp INTO g_glaacomp FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xcba_m.xcbald]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF cl_null(g_browser[g_current_idx].b_xcbald) AND cl_null(g_browser[g_current_idx].b_xcba001)
      AND cl_null(g_browser[g_current_idx].b_xcba002) AND cl_null(g_browser[g_current_idx].b_xcba003)
      AND cl_null(g_browser[g_current_idx].b_xcba004) THEN
      LET g_xcba_m.xcba007 = ""
   END IF]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_browser_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_sql_rank" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_pre" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.after_clear" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.more" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xcba001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xcba001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xcba001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xcbald" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xcba002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xcba002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xcba002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xcba003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xcba003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xcba003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xcba004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xcba004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.xcba007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.xcba007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.xcba007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.more_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.befroe_query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.before_fetch" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.b_key_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.m_key_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.a_key_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_no_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xcba001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xcba001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xcbald" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xcbald" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xcba002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xcba002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xcba003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xcba003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xcba004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xcba004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.xcba007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.xcba007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.xcba007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xcba001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xcba002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xcba003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.xcba007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_insert.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcbastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.xcbastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcbastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcba005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcba005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcba006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcba006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcba008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.xcba008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcba008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.xcba009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.xcba009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.xcbastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.xcba008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.xcba009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_inputarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ref_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ref_show.other_reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="bfill.foreach" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.more" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="before_delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_single_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_single_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_single_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b段" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.page_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="axci115.b_fill" ver="6" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION axci115_b_fill(p_wc2)
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   #先清空單身變數內容
   CALL g_xcba_d.clear()
   CALL g_xcba2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   LET g_sql = "SELECT  UNIQUE xcbastus,xcba005,xcba006,xcba008,xcba009,xcba005,xcba006,xcbaownid,xcbaowndp, 
       xcbacrtid,xcbacrtdp,xcbacrtdt,xcbamodid,xcbamoddt,t1.ooefl003 ,t2.oofa011 ,t3.ooefl003 ,t4.oofa011 , 
       t5.ooefl003 ,t6.oofa011 FROM xcba_t",   
               "",
               
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=xcba006 AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t2 ON t2.oofaent='"||g_enterprise||"' AND t2.oofa002='2' AND t2.oofa003=xcbaownid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=xcbaowndp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=xcbacrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=xcbacrtdp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t6 ON t6.oofaent='"||g_enterprise||"' AND t6.oofa002='2' AND t6.oofa003=xcbamodid  ",
 
               " WHERE xcbaent= ? AND xcbald=? AND xcba001=? AND xcba002=? AND xcba003=? AND xcba004=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("xcba_t")
   END IF
   
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axci115_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY xcba_t.xcba005,xcba_t.xcba006"
      
      #add-point:b_fill段fill_before
      {<point name="b_fill.fill_before"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE axci115_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR axci115_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xcba_m.xcbald,g_xcba_m.xcba001,g_xcba_m.xcba002,g_xcba_m.xcba003,g_xcba_m.xcba004
                                               
      FOREACH b_fill_cs INTO g_xcba_d[l_ac].xcbastus,g_xcba_d[l_ac].xcba005,g_xcba_d[l_ac].xcba006,g_xcba_d[l_ac].xcba008, 
          g_xcba_d[l_ac].xcba009,g_xcba2_d[l_ac].xcba005,g_xcba2_d[l_ac].xcba006,g_xcba2_d[l_ac].xcbaownid, 
          g_xcba2_d[l_ac].xcbaowndp,g_xcba2_d[l_ac].xcbacrtid,g_xcba2_d[l_ac].xcbacrtdp,g_xcba2_d[l_ac].xcbacrtdt, 
          g_xcba2_d[l_ac].xcbamodid,g_xcba2_d[l_ac].xcbamoddt,g_xcba_d[l_ac].xcba006_desc,g_xcba2_d[l_ac].xcbaownid_desc, 
          g_xcba2_d[l_ac].xcbaowndp_desc,g_xcba2_d[l_ac].xcbacrtid_desc,g_xcba2_d[l_ac].xcbacrtdp_desc, 
          g_xcba2_d[l_ac].xcbamodid_desc
                             
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         #帶出公用欄位reference值
         
         
         #此段落由子樣板a12產生
      #LET g_xcba2_d[l_ac].xcbaownid_desc = cl_get_username(g_xcba2_d[l_ac].xcbaownid)
      #LET g_xcba2_d[l_ac].xcbaowndp_desc = cl_get_deptname(g_xcba2_d[l_ac].xcbaowndp)
      #LET g_xcba2_d[l_ac].xcbacrtid_desc = cl_get_username(g_xcba2_d[l_ac].xcbacrtid)
      #LET g_xcba2_d[l_ac].xcbacrtdp_desc = cl_get_deptname(g_xcba2_d[l_ac].xcbacrtdp)
      #LET g_xcba2_d[l_ac].xcbamodid_desc = cl_get_username(g_xcba2_d[l_ac].xcbamodid)
      
 
 
 
        
         #add-point:單身資料抓取
         {<point name="bfill.foreach"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      
            CALL g_xcba_d.deleteElement(g_xcba_d.getLength())
      CALL g_xcba2_d.deleteElement(g_xcba2_d.getLength())
 
   END IF
   
   #add-point:b_fill段more
   {<point name="b_fill.more"/>}
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE axci115_pb   
   
END FUNCTION
]]>
</section>
  <section id="axci115.b_fill2" ver="2" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION axci115_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
]]>
</section>
  <section id="axci115.before_delete" ver="2" status="" src="s">
<![CDATA[#+ 單身db資料刪除
PRIVATE FUNCTION axci115_before_delete()
   #add-point:before_delete段define
   {<point name="before_delete.define"/>}
   #end add-point 
   
   #add-point:單筆刪除前
   {<point name="delete.body.b_single_delete" mark="Y"/>}
   #end add-point
   
   DELETE FROM xcba_t
    WHERE xcbaent = g_enterprise AND xcbald = g_xcba_m.xcbald AND
                              xcba001 = g_xcba_m.xcba001 AND
                              xcba002 = g_xcba_m.xcba002 AND
                              xcba003 = g_xcba_m.xcba003 AND
                              xcba004 = g_xcba_m.xcba004 AND
 
          xcba005 = g_xcba_d_t.xcba005
      AND xcba006 = g_xcba_d_t.xcba006
 
      
   #add-point:單筆刪除中
   {<point name="delete.body.m_single_delete"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("xcba_t",SQLCA.sqlcode,1)
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後
   {<point name="delete.body.a_single_delete"/>}
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
]]>
</section>
  <section id="axci115.browser_fill" ver="4" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axci115_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point    
   
   CALL g_browser.clear()
 
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "xcbald"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF l_wc2 <> " 1=1" OR NOT cl_null(l_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xcbald ",
                      ", xcba001 ",
                      ", xcba002 ",
                      ", xcba003 ",
                      ", xcba004 ",
 
                      " FROM xcba_t ",
                      " ",
                      " ",
 
                      " WHERE xcbaent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xcba_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xcbald ",
                      ", xcba001 ",
                      ", xcba002 ",
                      ", xcba003 ",
                      ", xcba004 ",
 
                      " FROM xcba_t ",
                      " ",
                      " ",
                      " WHERE xcbaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xcba_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
   
   #若超過最大顯示筆數
   LET g_error_show = 0
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照xcbald,xcba001,xcba002,xcba003,xcba004 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT xcbald,xcba001,xcba002,xcba003,xcba004",
                " FROM xcba_t ",
 
                
                " WHERE xcbaent = '" ||g_enterprise|| "' AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("xcba_t")
 
   #add-point:browser_fill,sql_rank前
   {<point name="browser_fill.before_sql_rank"/>}
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前
   {<point name="browser_fill.before_pre"/>}
   #end add-point
    
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料    
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_xcbald,g_browser[g_cnt].b_xcba001,g_browser[g_cnt].b_xcba002, 
       g_browser[g_cnt].b_xcba003,g_browser[g_cnt].b_xcba004 
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point    
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_xcba_m.* TO NULL
      CALL g_xcba_d.clear()
      CALL g_xcba2_d.clear()
 
      #add-point:browser_fill段after_clear
      {<point name="browser_fill.after_clear"/>}
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="axci115.browser_search" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axci115_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1"
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY xcbald"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL axci115_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="axci115.construct" ver="6" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION axci115_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_xcba_m.* TO NULL
   CALL g_xcba_d.clear()
   CALL g_xcba2_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外
   {<point name="cs.head.before"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xcba001,xcbald,xcba002,xcba003,xcba004,xcba007
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
                 #此段落由子樣板a01產生
         BEFORE FIELD xcba001
            #add-point:BEFORE FIELD xcba001
            {<point name="construct.b.xcba001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcba001
            
            #add-point:AFTER FIELD xcba001
            {<point name="construct.a.xcba001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xcba001
         ON ACTION controlp INFIELD xcba001
            #add-point:ON ACTION controlp INFIELD xcba001
            {<point name="construct.c.xcba001" />}
            #END add-point
 
         #Ctrlp:construct.c.xcbald
         ON ACTION controlp INFIELD xcbald
            #add-point:ON ACTION controlp INFIELD xcbald
            {<point name="construct.c.xcbald" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbald
            #add-point:BEFORE FIELD xcbald
            {<point name="construct.b.xcbald" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbald
            
            #add-point:AFTER FIELD xcbald
            {<point name="construct.a.xcbald" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcba002
            #add-point:BEFORE FIELD xcba002
            {<point name="construct.b.xcba002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcba002
            
            #add-point:AFTER FIELD xcba002
            {<point name="construct.a.xcba002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xcba002
         ON ACTION controlp INFIELD xcba002
            #add-point:ON ACTION controlp INFIELD xcba002
            {<point name="construct.c.xcba002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcba003
            #add-point:BEFORE FIELD xcba003
            {<point name="construct.b.xcba003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcba003
            
            #add-point:AFTER FIELD xcba003
            {<point name="construct.a.xcba003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xcba003
         ON ACTION controlp INFIELD xcba003
            #add-point:ON ACTION controlp INFIELD xcba003
            {<point name="construct.c.xcba003" />}
            #END add-point
 
         #Ctrlp:construct.c.xcba004
         ON ACTION controlp INFIELD xcba004
            #add-point:ON ACTION controlp INFIELD xcba004
            {<point name="construct.c.xcba004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcba004
            #add-point:BEFORE FIELD xcba004
            {<point name="construct.b.xcba004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcba004
            
            #add-point:AFTER FIELD xcba004
            {<point name="construct.a.xcba004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcba007
            #add-point:BEFORE FIELD xcba007
            {<point name="construct.b.xcba007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcba007
            
            #add-point:AFTER FIELD xcba007
            {<point name="construct.a.xcba007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xcba007
         ON ACTION controlp INFIELD xcba007
            #add-point:ON ACTION controlp INFIELD xcba007
            {<point name="construct.c.xcba007" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON xcbastus,xcba005,xcba005_desc,xcba006,xcba008,xcba009,xcbaownid,xcbaowndp, 
          xcbacrtid,xcbacrtdp,xcbacrtdt,xcbamodid,xcbamoddt
           FROM s_detail1[1].xcbastus,s_detail1[1].xcba005,s_detail1[1].xcba005_desc,s_detail1[1].xcba006, 
               s_detail1[1].xcba008,s_detail1[1].xcba009,s_detail2[1].xcbaownid,s_detail2[1].xcbaowndp, 
               s_detail2[1].xcbacrtid,s_detail2[1].xcbacrtdp,s_detail2[1].xcbacrtdt,s_detail2[1].xcbamodid, 
               s_detail2[1].xcbamoddt
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
         #單身公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<xcbacrtdt>>----
         AFTER FIELD xcbacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xcbamoddt>>----
         AFTER FIELD xcbamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xcbacnfdt>>----
         
         #----<<xcbapstdt>>----
 
 
           
         #單身一般欄位開窗相關處理
            
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog
         {<point name="cs.before_dialog"/>}
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
]]>
</section>
  <section id="axci115.default_search" ver="5" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION axci115_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xcbald = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xcba001 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xcba002 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " xcba003 = '", g_argv[04], "' AND "
   END IF
   IF NOT cl_null(g_argv[05]) THEN
      LET ls_wc = ls_wc, " xcba004 = '", g_argv[05], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="axci115.delete" ver="5" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION axci115_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_xcba_m.xcbald IS NULL
   OR g_xcba_m.xcba001 IS NULL
   OR g_xcba_m.xcba002 IS NULL
   OR g_xcba_m.xcba003 IS NULL
   OR g_xcba_m.xcba004 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE axci115_master_referesh USING g_xcba_m.xcbald,g_xcba_m.xcba001,g_xcba_m.xcba002,g_xcba_m.xcba003, 
       g_xcba_m.xcba004 INTO g_xcba_m.xcba001,g_xcba_m.xcbald,g_xcba_m.xcba002,g_xcba_m.xcba003,g_xcba_m.xcba004, 
       g_xcba_m.xcba007,g_xcba_m.xcbald_desc,g_xcba_m.xcba004_desc
   
   CALL axci115_show()
   
   CALL s_transaction_begin()
   
   
 
   OPEN axci115_cl USING g_enterprise,g_xcba_m.xcbald
                                                       ,g_xcba_m.xcba001
                                                       ,g_xcba_m.xcba002
                                                       ,g_xcba_m.xcba003
                                                       ,g_xcba_m.xcba004
 
   IF STATUS THEN
      CALL cl_err("OPEN axci115_cl:", STATUS, 1)
      CLOSE axci115_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH axci115_cl INTO g_xcba_m.xcba001,g_xcba_m.xcbald,g_xcba_m.xcbald_desc,g_xcba_m.xcba002,g_xcba_m.xcba003, 
       g_xcba_m.xcba004,g_xcba_m.xcba004_desc,g_xcba_m.xcba007
   
   #若資料已被他人LOCK
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xcba_m.xcbald,SQLCA.sqlcode,0)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL axci115_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM xcba_t WHERE xcbaent = g_enterprise AND xcbald = g_xcba_m.xcbald
                                                               AND xcba001 = g_xcba_m.xcba001
                                                               AND xcba002 = g_xcba_m.xcba002
                                                               AND xcba003 = g_xcba_m.xcba003
                                                               AND xcba004 = g_xcba_m.xcba004
 
                                                               
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
      
      IF SQLCA.sqlcode THEN
         CALL cl_err("xcba_t",SQLCA.sqlcode,0)
         CALL s_transaction_end('N','0')
      END IF
 
      
  
      #add-point:單身刪除後 
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
 
      
      CLEAR FORM
      CALL g_xcba_d.clear() 
      CALL g_xcba2_d.clear()       
 
     
      CALL axci115_ui_browser_refresh()  
      CALL axci115_ui_headershow()  
      CALL axci115_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axci115_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         LET g_wc2 = " 1=1"
         CALL axci115_browser_fill("F")
      END IF
       
   END IF
 
   CLOSE axci115_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_xcba_m.xcbald,'D')
    
END FUNCTION
]]>
</section>
  <section id="axci115.delete_b" ver="2" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION axci115_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
 
   
END FUNCTION
]]>
</section>
  <section id="axci115.description" ver="7" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000251
#+ 
#+ Filename...: axci115
#+ Description: 成本要素分攤設置作業
#+ Creator....: 02291(2013/12/10)
#+ Modifier...: 02291(2014/06/28)
#+ Buildtype..: 應用 i07 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="axci115.detail_reproduce" ver="3" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION axci115_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xcba_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axci115_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axci115_detail AS ",
                "SELECT * FROM xcba_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axci115_detail SELECT * FROM xcba_t 
                                         WHERE xcbaent = g_enterprise AND xcbald = g_xcbald_t
                                         AND xcba001 = g_xcba001_t
                                         AND xcba002 = g_xcba002_t
                                         AND xcba003 = g_xcba003_t
                                         AND xcba004 = g_xcba004_t
 
   
   #將key修正為調整後   
   UPDATE axci115_detail 
      #更新key欄位
      SET xcbald = g_xcba_m.xcbald
          , xcba001 = g_xcba_m.xcba001
          , xcba002 = g_xcba_m.xcba002
          , xcba003 = g_xcba_m.xcba003
          , xcba004 = g_xcba_m.xcba004
 
      #更新共用欄位
      #此段落由子樣板a13產生
       , xcbaownid = g_user
       , xcbaowndp = g_dept
       , xcbacrtid = g_user
       , xcbacrtdp = g_dept 
       , xcbacrtdt = ld_date
       , xcbamodid = "" 
       , xcbamoddt = "" 
      #, xcbastus = "Y"
 
 
                                       
  
   #將資料塞回原table   
   INSERT INTO xcba_t SELECT * FROM axci115_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axci115_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xcbald_t = g_xcba_m.xcbald
   LET g_xcba001_t = g_xcba_m.xcba001
   LET g_xcba002_t = g_xcba_m.xcba002
   LET g_xcba003_t = g_xcba_m.xcba003
   LET g_xcba004_t = g_xcba_m.xcba004
 
   
   DROP TABLE axci115_detail
   
END FUNCTION
]]>
</section>
  <section id="axci115.fetch" ver="4" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axci115_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   #add-point:fetch段動作開始前
   {<point name="fetch.before_fetch"/>}
   #end add-point    
 
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   CALL axci115_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xcba_m.xcbald = g_browser[g_current_idx].b_xcbald
   LET g_xcba_m.xcba001 = g_browser[g_current_idx].b_xcba001
   LET g_xcba_m.xcba002 = g_browser[g_current_idx].b_xcba002
   LET g_xcba_m.xcba003 = g_browser[g_current_idx].b_xcba003
   LET g_xcba_m.xcba004 = g_browser[g_current_idx].b_xcba004
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axci115_master_referesh USING g_xcba_m.xcbald,g_xcba_m.xcba001,g_xcba_m.xcba002,g_xcba_m.xcba003, 
       g_xcba_m.xcba004 INTO g_xcba_m.xcba001,g_xcba_m.xcbald,g_xcba_m.xcba002,g_xcba_m.xcba003,g_xcba_m.xcba004, 
       g_xcba_m.xcba007,g_xcba_m.xcbald_desc,g_xcba_m.xcba004_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("xcba_t",SQLCA.sqlcode,1)
      INITIALIZE g_xcba_m.* TO NULL
      RETURN
   END IF
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL axci115_show()
 
   
 
END FUNCTION
]]>
</section>
  <section id="axci115.fill_chk" ver="2" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION axci115_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   
   #add-point:fill_chk段other
   {<point name="fill_chk.other"/>}
   #end add-point
   
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="axci115.filter" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION axci115_filter()
 
 
 
 
 
 
 
 
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
 
 
   
 
 
END FUNCTION
]]>
</section>
  <section id="axci115.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION axci115_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
 
 
 
 
END FUNCTION
]]>
</section>
  <section id="axci115.global" ver="6" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xcba_m        RECORD
       xcba001 LIKE xcba_t.xcba001, 
   xcbald LIKE xcba_t.xcbald, 
   xcbald_desc LIKE type_t.chr80, 
   xcba002 LIKE xcba_t.xcba002, 
   xcba003 LIKE xcba_t.xcba003, 
   xcba004 LIKE xcba_t.xcba004, 
   xcba004_desc LIKE type_t.chr80, 
   xcba007 LIKE xcba_t.xcba007
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xcba_d        RECORD
       xcbastus LIKE xcba_t.xcbastus, 
   xcba005 LIKE xcba_t.xcba005, 
   xcba005_desc LIKE type_t.chr80, 
   xcba006 LIKE xcba_t.xcba006, 
   xcba006_desc LIKE type_t.chr500, 
   xcba008 LIKE xcba_t.xcba008, 
   xcba009 LIKE xcba_t.xcba009
       END RECORD
PRIVATE TYPE type_g_xcba2_d RECORD
       xcba005 LIKE xcba_t.xcba005, 
   xcba005_2_desc LIKE type_t.chr500, 
   xcba006 LIKE xcba_t.xcba006, 
   xcba006_2_desc LIKE type_t.chr500, 
   xcbaownid LIKE xcba_t.xcbaownid, 
   xcbaownid_desc LIKE type_t.chr500, 
   xcbaowndp LIKE xcba_t.xcbaowndp, 
   xcbaowndp_desc LIKE type_t.chr500, 
   xcbacrtid LIKE xcba_t.xcbacrtid, 
   xcbacrtid_desc LIKE type_t.chr500, 
   xcbacrtdp LIKE xcba_t.xcbacrtdp, 
   xcbacrtdp_desc LIKE type_t.chr500, 
   xcbacrtdt DATETIME YEAR TO SECOND, 
   xcbamodid LIKE xcba_t.xcbamodid, 
   xcbamodid_desc LIKE type_t.chr500, 
   xcbamoddt DATETIME YEAR TO SECOND
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_xcba_m          type_g_xcba_m
DEFINE g_xcba_m_t        type_g_xcba_m
 
   DEFINE g_xcba001_t LIKE xcba_t.xcba001
DEFINE g_xcbald_t LIKE xcba_t.xcbald
DEFINE g_xcba002_t LIKE xcba_t.xcba002
DEFINE g_xcba003_t LIKE xcba_t.xcba003
DEFINE g_xcba004_t LIKE xcba_t.xcba004
 
 
DEFINE g_xcba_d          DYNAMIC ARRAY OF type_g_xcba_d
DEFINE g_xcba_d_t        type_g_xcba_d
DEFINE g_xcba2_d   DYNAMIC ARRAY OF type_g_xcba2_d
DEFINE g_xcba2_d_t type_g_xcba2_d
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_xcbald LIKE xcba_t.xcbald,
      b_xcba001 LIKE xcba_t.xcba001,
      b_xcba002 LIKE xcba_t.xcba002,
      b_xcba003 LIKE xcba_t.xcba003,
      b_xcba004 LIKE xcba_t.xcba004
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="axci115.init" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axci115_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
  
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
      CALL cl_set_combo_scc('xcba001','8908') 
   CALL cl_set_combo_scc('xcba007','8909') 
   CALL cl_set_combo_scc('xcba008','8910') 
 
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL axci115_default_search()
    
END FUNCTION
]]>
</section>
  <section id="axci115.input" ver="3" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION axci115_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point    
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT xcbastus,xcba005,xcba006,xcba008,xcba009,xcba005,xcba006,xcbaownid,xcbaowndp, 
       xcbacrtid,xcbacrtdp,xcbacrtdt,xcbamodid,xcbamoddt FROM xcba_t WHERE xcbaent=? AND xcbald=? AND  
       xcba001=? AND xcba002=? AND xcba003=? AND xcba004=? AND xcba005=? AND xcba006=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axci115_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axci115_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL axci115_set_no_entry(p_cmd)
   #add-point:set_no_entry後
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_xcba_m.xcba001,g_xcba_m.xcbald,g_xcba_m.xcba002,g_xcba_m.xcba003,g_xcba_m.xcba004, 
       g_xcba_m.xcba007
   
   LET lb_reproduce = FALSE
   
   #add-point:進入修改段前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
</section>
  <section id="axci115.input.body" ver="5" status="" src="s">
<![CDATA[      #Page1 預設值產生於此處
      INPUT ARRAY g_xcba_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcba_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axci115_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前
            {<point name="input.body.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axci115_cl USING g_enterprise,
                                               g_xcba_m.xcbald
                                               ,g_xcba_m.xcba001
                                               ,g_xcba_m.xcba002
                                               ,g_xcba_m.xcba003
                                               ,g_xcba_m.xcba004
 
                                               
               IF STATUS THEN
                  CALL cl_err("OPEN axci115_cl:", STATUS, 1)
                  CLOSE axci115_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_xcba_d[l_ac].xcba005 IS NOT NULL
               AND g_xcba_d[l_ac].xcba006 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xcba_d_t.* = g_xcba_d[l_ac].*  #BACKUP
               CALL axci115_set_entry_b(l_cmd)
               #add-point:set_entry_b後
               {<point name="input.body.before_row.set_entry_b"/>}
               #end add-point
               CALL axci115_set_no_entry_b(l_cmd)
               OPEN axci115_bcl USING g_enterprise,g_xcba_m.xcbald,
                                                g_xcba_m.xcba001,
                                                g_xcba_m.xcba002,
                                                g_xcba_m.xcba003,
                                                g_xcba_m.xcba004,
 
                                                g_xcba_d_t.xcba005
                                                ,g_xcba_d_t.xcba006
 
               IF STATUS THEN
                  CALL cl_err("OPEN axci115_bcl:", STATUS, 1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axci115_bcl INTO g_xcba_d[l_ac].xcbastus,g_xcba_d[l_ac].xcba005,g_xcba_d[l_ac].xcba006, 
                      g_xcba_d[l_ac].xcba008,g_xcba_d[l_ac].xcba009
                  IF SQLCA.sqlcode THEN
                      CALL cl_err(g_xcba_d_t.xcba005,SQLCA.sqlcode,1)
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axci115_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_xcba_d_t.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xcba_d[l_ac].* TO NULL
            
            #公用欄位預設值
            #此段落由子樣板a14產生    
      LET g_xcba2_d[l_ac].xcbaownid = g_user
      LET g_xcba2_d[l_ac].xcbaowndp = g_dept
      LET g_xcba2_d[l_ac].xcbacrtid = g_user
      LET g_xcba2_d[l_ac].xcbacrtdp = g_dept 
      LET g_xcba2_d[l_ac].xcbacrtdt = cl_get_current()
      LET g_xcba2_d[l_ac].xcbamodid = ""
      LET g_xcba2_d[l_ac].xcbamoddt = ""
      LET g_xcba_d[l_ac].xcbastus = ""
 
  
            
            #一般欄位預設值
                  LET g_xcba_d[l_ac].xcbastus = "Y"
      LET g_xcba_d[l_ac].xcba009 = "100"
 
            
            
            LET g_xcba_d_t.* = g_xcba_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axci115_set_entry_b(l_cmd)
            #add-point:set_entry_b後
            {<point name="input.body.before_insert.set_entry_b"/>}
            #end add-point
            CALL axci115_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xcba_d[li_reproduce_target].* = g_xcba_d[li_reproduce].*
               LET g_xcba2_d[li_reproduce_target].* = g_xcba2_d[li_reproduce].*
 
               LET g_xcba_d[g_xcba_d.getLength()].xcba005 = NULL
               LET g_xcba_d[g_xcba_d.getLength()].xcba006 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xcba_t 
             WHERE xcbaent = g_enterprise AND xcbald = g_xcba_m.xcbald
               AND xcba001 = g_xcba_m.xcba001
               AND xcba002 = g_xcba_m.xcba002
               AND xcba003 = g_xcba_m.xcba003
               AND xcba004 = g_xcba_m.xcba004
 
               AND xcba005 = g_xcba_d[l_ac].xcba005
               AND xcba006 = g_xcba_d[l_ac].xcba006
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
               {<point name="input.body.b_insert" mark="Y"/>}
               #end add-point
               INSERT INTO xcba_t
                           (xcbaent,
                            xcba001,xcbald,xcba002,xcba003,xcba004,xcba007,
                            xcba005,xcba006
                            ,xcbastus,xcba008,xcba009,xcbaownid,xcbaowndp,xcbacrtid,xcbacrtdp,xcbacrtdt,xcbamodid,xcbamoddt) 
                     VALUES(g_enterprise,
                            g_xcba_m.xcba001,g_xcba_m.xcbald,g_xcba_m.xcba002,g_xcba_m.xcba003,g_xcba_m.xcba004,g_xcba_m.xcba007,
                            g_xcba_d[l_ac].xcba005,g_xcba_d[l_ac].xcba006
                            ,g_xcba_d[l_ac].xcbastus,g_xcba_d[l_ac].xcba008,g_xcba_d[l_ac].xcba009,g_xcba2_d[l_ac].xcbaownid, 
                                g_xcba2_d[l_ac].xcbaowndp,g_xcba2_d[l_ac].xcbacrtid,g_xcba2_d[l_ac].xcbacrtdp, 
                                g_xcba2_d[l_ac].xcbacrtdt,g_xcba2_d[l_ac].xcbamodid,g_xcba2_d[l_ac].xcbamoddt) 

               #add-point:單身新增中
               {<point name="input.body.m_insert"/>}
               #end add-point
               LET p_cmd = 'u'
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_xcba_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("xcba_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後
            {<point name="input.body.after_insert"/>}
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_xcba_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_xcba_d.deleteElement(l_ac)
               NEXT FIELD xcba005
            END IF
            IF g_xcba_d_t.xcba005 IS NOT NULL
               AND g_xcba_d_t.xcba006 IS NOT NULL
 
               THEN
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete"/>}
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               IF axci115_before_delete() THEN 
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axci115_bcl
               LET l_count = g_xcba_d.getLength()
            END IF 
            
            #add-point:單身刪除後
            {<point name="input.body.a_delete"/>}
            #end add-point
              
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body.after_delete"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD xcbastus
            #add-point:BEFORE FIELD xcbastus
            {<point name="input.b.page1.xcbastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbastus
            
            #add-point:AFTER FIELD xcbastus
            {<point name="input.a.page1.xcbastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcbastus
            #add-point:ON CHANGE xcbastus
            {<point name="input.g.page1.xcbastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcba005
            
            #add-point:AFTER FIELD xcba005
            {<point name="input.a.page1.xcba005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcba005
            #add-point:BEFORE FIELD xcba005
            {<point name="input.b.page1.xcba005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcba005
            #add-point:ON CHANGE xcba005
            {<point name="input.g.page1.xcba005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcba006
            
            #add-point:AFTER FIELD xcba006
            {<point name="input.a.page1.xcba006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcba006
            #add-point:BEFORE FIELD xcba006
            {<point name="input.b.page1.xcba006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcba006
            #add-point:ON CHANGE xcba006
            {<point name="input.g.page1.xcba006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcba008
            #add-point:BEFORE FIELD xcba008
            {<point name="input.b.page1.xcba008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcba008
            
            #add-point:AFTER FIELD xcba008
            {<point name="input.a.page1.xcba008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcba008
            #add-point:ON CHANGE xcba008
            {<point name="input.g.page1.xcba008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcba009
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xcba_d[l_ac].xcba009,"0","1","100","1","azz-00087",1) THEN
               NEXT FIELD xcba009
            END IF
 
 
            #add-point:AFTER FIELD xcba009
            {<point name="input.a.page1.xcba009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcba009
            #add-point:BEFORE FIELD xcba009
            {<point name="input.b.page1.xcba009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcba009
            #add-point:ON CHANGE xcba009
            {<point name="input.g.page1.xcba009" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.xcbastus
         ON ACTION controlp INFIELD xcbastus
            #add-point:ON ACTION controlp INFIELD xcbastus
            {<point name="input.c.page1.xcbastus" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcba005
         ON ACTION controlp INFIELD xcba005
            #add-point:ON ACTION controlp INFIELD xcba005
            {<point name="input.c.page1.xcba005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcba006
         ON ACTION controlp INFIELD xcba006
            #add-point:ON ACTION controlp INFIELD xcba006
            {<point name="input.c.page1.xcba006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcba008
         ON ACTION controlp INFIELD xcba008
            #add-point:ON ACTION controlp INFIELD xcba008
            {<point name="input.c.page1.xcba008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcba009
         ON ACTION controlp INFIELD xcba009
            #add-point:ON ACTION controlp INFIELD xcba009
            {<point name="input.c.page1.xcba009" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_xcba_d[l_ac].* = g_xcba_d_t.*
               CLOSE axci115_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_xcba_d[l_ac].xcba005,-263,1)
               LET g_xcba_d[l_ac].* = g_xcba_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_xcba2_d[l_ac].xcbamodid = g_user 
LET g_xcba2_d[l_ac].xcbamoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
         
               UPDATE xcba_t SET (xcbald,xcba001,xcba002,xcba003,xcba004,xcbastus,xcba005,xcba006,xcba008, 
                   xcba009,xcbaownid,xcbaowndp,xcbacrtid,xcbacrtdp,xcbacrtdt,xcbamodid,xcbamoddt) = (g_xcba_m.xcbald, 
                   g_xcba_m.xcba001,g_xcba_m.xcba002,g_xcba_m.xcba003,g_xcba_m.xcba004,g_xcba_d[l_ac].xcbastus, 
                   g_xcba_d[l_ac].xcba005,g_xcba_d[l_ac].xcba006,g_xcba_d[l_ac].xcba008,g_xcba_d[l_ac].xcba009, 
                   g_xcba2_d[l_ac].xcbaownid,g_xcba2_d[l_ac].xcbaowndp,g_xcba2_d[l_ac].xcbacrtid,g_xcba2_d[l_ac].xcbacrtdp, 
                   g_xcba2_d[l_ac].xcbacrtdt,g_xcba2_d[l_ac].xcbamodid,g_xcba2_d[l_ac].xcbamoddt)
                WHERE xcbaent = g_enterprise AND xcbald = g_xcba_m.xcbald 
                 AND xcba001 = g_xcba_m.xcba001 
                 AND xcba002 = g_xcba_m.xcba002 
                 AND xcba003 = g_xcba_m.xcba003 
                 AND xcba004 = g_xcba_m.xcba004 
 
                 AND xcba005 = g_xcba_d_t.xcba005 #項次   
                 AND xcba006 = g_xcba_d_t.xcba006  
 
                 
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xcba_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   CALL cl_err("xcba_t",SQLCA.sqlcode,1)  
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcba_m.xcbald
               LET gs_keys_bak[1] = g_xcbald_t
               LET gs_keys[2] = g_xcba_m.xcba001
               LET gs_keys_bak[2] = g_xcba001_t
               LET gs_keys[3] = g_xcba_m.xcba002
               LET gs_keys_bak[3] = g_xcba002_t
               LET gs_keys[4] = g_xcba_m.xcba003
               LET gs_keys_bak[4] = g_xcba003_t
               LET gs_keys[5] = g_xcba_m.xcba004
               LET gs_keys_bak[5] = g_xcba004_t
               LET gs_keys[6] = g_xcba_d[g_detail_idx].xcba005
               LET gs_keys_bak[6] = g_xcba_d_t.xcba005
               LET gs_keys[7] = g_xcba_d[g_detail_idx].xcba006
               LET gs_keys_bak[7] = g_xcba_d_t.xcba006
               CALL axci115_update_b('xcba_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_xcba_m),util.JSON.stringify(g_xcba_d_t)
                     LET g_log2 = util.JSON.stringify(g_xcba_m),util.JSON.stringify(g_xcba_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
            END IF
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xcba_d.getLength() = 0 THEN
               NEXT FIELD xcba005
            END IF
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xcba_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xcba_d.getLength()+1
            
      END INPUT
 
 
      
      DISPLAY ARRAY g_xcba2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
      
         BEFORE ROW
            CALL axci115_b_fill(g_wc2) 
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL axci115_ui_detailshow()
        
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)      
         
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
         
      END DISPLAY
 
      
 
      
      #add-point:input段more_input
      {<point name="input.more_inputarray"/>}
      #end add-point    
      
      BEFORE DIALOG
         #add-point:input段before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xcbald
        ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xcbastus
               WHEN "s_detail2"
                  NEXT FIELD xcba005_2
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #add-point:input段after_input
   {<point name="input.after_input"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="axci115.input.head" ver="3" status="" src="s">
<![CDATA[   
      #單頭段
      INPUT BY NAME g_xcba_m.xcba001,g_xcba_m.xcbald,g_xcba_m.xcba002,g_xcba_m.xcba003,g_xcba_m.xcba004, 
          g_xcba_m.xcba007 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前
            {<point name="input.head.b_input"/>}
            #end add-point
          
                  #此段落由子樣板a01產生
         BEFORE FIELD xcba001
            #add-point:BEFORE FIELD xcba001
            {<point name="input.b.xcba001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcba001
            
            #add-point:AFTER FIELD xcba001
            {<point name="input.a.xcba001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcba001
            #add-point:ON CHANGE xcba001
            {<point name="input.g.xcba001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbald
            
            #add-point:AFTER FIELD xcbald
            {<point name="input.a.xcbald" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbald
            #add-point:BEFORE FIELD xcbald
            {<point name="input.b.xcbald" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcbald
            #add-point:ON CHANGE xcbald
            {<point name="input.g.xcbald" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcba002
            #add-point:BEFORE FIELD xcba002
            {<point name="input.b.xcba002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcba002
            
            #add-point:AFTER FIELD xcba002
            {<point name="input.a.xcba002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcba002
            #add-point:ON CHANGE xcba002
            {<point name="input.g.xcba002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcba003
            #add-point:BEFORE FIELD xcba003
            {<point name="input.b.xcba003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcba003
            
            #add-point:AFTER FIELD xcba003
            {<point name="input.a.xcba003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcba003
            #add-point:ON CHANGE xcba003
            {<point name="input.g.xcba003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcba004
            
            #add-point:AFTER FIELD xcba004
            {<point name="input.a.xcba004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcba004
            #add-point:BEFORE FIELD xcba004
            {<point name="input.b.xcba004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcba004
            #add-point:ON CHANGE xcba004
            {<point name="input.g.xcba004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcba007
            #add-point:BEFORE FIELD xcba007
            {<point name="input.b.xcba007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcba007
            
            #add-point:AFTER FIELD xcba007
            {<point name="input.a.xcba007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcba007
            #add-point:ON CHANGE xcba007
            {<point name="input.g.xcba007" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.xcba001
         ON ACTION controlp INFIELD xcba001
            #add-point:ON ACTION controlp INFIELD xcba001
            {<point name="input.c.xcba001" />}
            #END add-point
 
         #Ctrlp:input.c.xcbald
         ON ACTION controlp INFIELD xcbald
            #add-point:ON ACTION controlp INFIELD xcbald
            {<point name="input.c.xcbald" />}
            #END add-point
 
         #Ctrlp:input.c.xcba002
         ON ACTION controlp INFIELD xcba002
            #add-point:ON ACTION controlp INFIELD xcba002
            {<point name="input.c.xcba002" />}
            #END add-point
 
         #Ctrlp:input.c.xcba003
         ON ACTION controlp INFIELD xcba003
            #add-point:ON ACTION controlp INFIELD xcba003
            {<point name="input.c.xcba003" />}
            #END add-point
 
         #Ctrlp:input.c.xcba004
         ON ACTION controlp INFIELD xcba004
            #add-point:ON ACTION controlp INFIELD xcba004
            {<point name="input.c.xcba004" />}
            #END add-point
 
         #Ctrlp:input.c.xcba007
         ON ACTION controlp INFIELD xcba007
            #add-point:ON ACTION controlp INFIELD xcba007
            {<point name="input.c.xcba007" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
 
            #多語言處理
            
                
            CALL cl_showmsg()
            DISPLAY BY NAME g_xcba_m.xcbald             
                            ,g_xcba_m.xcba001   
                            ,g_xcba_m.xcba002   
                            ,g_xcba_m.xcba003   
                            ,g_xcba_m.xcba004   
 
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
            
               UPDATE xcba_t SET (xcba001,xcbald,xcba002,xcba003,xcba004,xcba007) = (g_xcba_m.xcba001, 
                   g_xcba_m.xcbald,g_xcba_m.xcba002,g_xcba_m.xcba003,g_xcba_m.xcba004,g_xcba_m.xcba007) 

                WHERE xcbaent = g_enterprise AND xcbald = g_xcbald_t
                  AND xcba001 = g_xcba001_t
                  AND xcba002 = g_xcba002_t
                  AND xcba003 = g_xcba003_t
                  AND xcba004 = g_xcba004_t
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xcba_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("xcba_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcba_m.xcbald
               LET gs_keys_bak[1] = g_xcbald_t
               LET gs_keys[2] = g_xcba_m.xcba001
               LET gs_keys_bak[2] = g_xcba001_t
               LET gs_keys[3] = g_xcba_m.xcba002
               LET gs_keys_bak[3] = g_xcba002_t
               LET gs_keys[4] = g_xcba_m.xcba003
               LET gs_keys_bak[4] = g_xcba003_t
               LET gs_keys[5] = g_xcba_m.xcba004
               LET gs_keys_bak[5] = g_xcba004_t
               LET gs_keys[6] = g_xcba_d[g_detail_idx].xcba005
               LET gs_keys_bak[6] = g_xcba_d_t.xcba005
               LET gs_keys[7] = g_xcba_d[g_detail_idx].xcba006
               LET gs_keys_bak[7] = g_xcba_d_t.xcba006
               CALL axci115_update_b('xcba_t',gs_keys,gs_keys_bak,"'1'")
                     
                     LET g_xcbald_t = g_xcba_m.xcbald
                     LET g_xcba001_t = g_xcba_m.xcba001
                     LET g_xcba002_t = g_xcba_m.xcba002
                     LET g_xcba003_t = g_xcba_m.xcba003
                     LET g_xcba004_t = g_xcba_m.xcba004
 
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     
                     LET g_log1 = util.JSON.stringify(g_xcba_m_t)
                     LET g_log2 = util.JSON.stringify(g_xcba_m)
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
               END CASE
            
            ELSE    
               #add-point:單頭新增
               {<point name="input.head.a_insert"/>}
               #end add-point
                                 
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axci115_detail_reproduce()
               END IF
            END IF
           #controlp
                     
           LET g_xcbald_t = g_xcba_m.xcbald
           LET g_xcba001_t = g_xcba_m.xcba001
           LET g_xcba002_t = g_xcba_m.xcba002
           LET g_xcba003_t = g_xcba_m.xcba003
           LET g_xcba004_t = g_xcba_m.xcba004
 
           
           #若單身還沒有輸入資料, 強制切換至單身
           #IF cl_null(g_xcba_d[1].xcba005) THEN
           #   CALL g_xcba_d.deleteElement(1)
           #   NEXT FIELD xcba005
           #END IF
           
           IF g_xcba_d.getLength() = 0 THEN
              NEXT FIELD xcba005
           END IF
 
      END INPUT
]]>
</section>
  <section id="axci115.insert" ver="3" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION axci115_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_xcba_d.clear()
   CALL g_xcba2_d.clear()
 
 
   INITIALIZE g_xcba_m.* LIKE xcba_t.*             #DEFAULT 設定
   LET g_xcbald_t = NULL
   LET g_xcba001_t = NULL
   LET g_xcba002_t = NULL
   LET g_xcba003_t = NULL
   LET g_xcba004_t = NULL
 
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
            LET g_xcba_m.xcba001 = "1"
      LET g_xcba_m.xcba007 = "1"
 
     
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL axci115_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xcba_m.* = g_xcba_m_t.*
         CALL axci115_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      CALL g_xcba_d.clear()
      CALL g_xcba2_d.clear()
 
      
      #add-point:單頭輸入後2
      {<point name="insert.after_insert2"/>}
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_xcbald_t = g_xcba_m.xcbald
   LET g_xcba001_t = g_xcba_m.xcba001
   LET g_xcba002_t = g_xcba_m.xcba002
   LET g_xcba003_t = g_xcba_m.xcba003
   LET g_xcba004_t = g_xcba_m.xcba004
 
   
   LET g_wc = g_wc,  
              " OR ( xcbaent = '" ||g_enterprise|| "' AND ",
              " xcbald = '", g_xcba_m.xcbald CLIPPED, "' "
              ," AND xcba001 = '", g_xcba_m.xcba001 CLIPPED, "' "
              ," AND xcba002 = '", g_xcba_m.xcba002 CLIPPED, "' "
              ," AND xcba003 = '", g_xcba_m.xcba003 CLIPPED, "' "
              ," AND xcba004 = '", g_xcba_m.xcba004 CLIPPED, "' "
 
              , ") "
   
END FUNCTION
]]>
</section>
  <section id="axci115.insert_b" ver="2" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION axci115_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
 
   
END FUNCTION
]]>
</section>
  <section id="axci115.lock_b" ver="2" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION axci115_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL axci115_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="axci115.main" ver="5" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT xcba001,xcbald,'',xcba002,xcba003,xcba004,'',xcba007", 
                      " FROM xcba_t",
                      " WHERE xcbaent= ? AND xcbald=? AND xcba001=? AND xcba002=? AND xcba003=? AND  
                          xcba004=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axci115_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE xcba001,xcbald,xcba002,xcba003,xcba004,xcba007,t1.glaal002 ,t2.ooefl003", 

               " FROM xcba_t",
                              " LEFT JOIN glaal_t t1 ON t1.glaalent='"||g_enterprise||"' AND t1.glaalld=xcbald AND t1.glaal001='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=xcba004 AND t2.ooefl002='"||g_dlang||"' ",
 
               " WHERE xcbaent = '" ||g_enterprise|| "' AND xcbald = ? AND xcba001 = ? AND xcba002 = ? AND xcba003 = ? AND xcba004 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axci115_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axci115 WITH FORM cl_ap_formpath("axc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axci115_init()   
 
      #進入選單 Menu (="N")
      CALL axci115_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axci115
      
   END IF 
   
   CLOSE axci115_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="axci115.modify" ver="3" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION axci115_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_xcba_m.xcbald IS NULL
   OR g_xcba_m.xcba001 IS NULL
   OR g_xcba_m.xcba002 IS NULL
   OR g_xcba_m.xcba003 IS NULL
   OR g_xcba_m.xcba004 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE axci115_master_referesh USING g_xcba_m.xcbald,g_xcba_m.xcba001,g_xcba_m.xcba002,g_xcba_m.xcba003, 
       g_xcba_m.xcba004 INTO g_xcba_m.xcba001,g_xcba_m.xcbald,g_xcba_m.xcba002,g_xcba_m.xcba003,g_xcba_m.xcba004, 
       g_xcba_m.xcba007,g_xcba_m.xcbald_desc,g_xcba_m.xcba004_desc
 
   ERROR ""
  
   LET g_xcbald_t = g_xcba_m.xcbald
   LET g_xcba001_t = g_xcba_m.xcba001
   LET g_xcba002_t = g_xcba_m.xcba002
   LET g_xcba003_t = g_xcba_m.xcba003
   LET g_xcba004_t = g_xcba_m.xcba004
 
   CALL s_transaction_begin()
   
   OPEN axci115_cl USING g_enterprise,g_xcba_m.xcbald
                                                       ,g_xcba_m.xcba001
                                                       ,g_xcba_m.xcba002
                                                       ,g_xcba_m.xcba003
                                                       ,g_xcba_m.xcba004
 
   IF STATUS THEN
      CALL cl_err("OPEN axci115_cl:", STATUS, 1)
      CLOSE axci115_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH axci115_cl INTO g_xcba_m.xcba001,g_xcba_m.xcbald,g_xcba_m.xcbald_desc,g_xcba_m.xcba002,g_xcba_m.xcba003, 
       g_xcba_m.xcba004,g_xcba_m.xcba004_desc,g_xcba_m.xcba007
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xcba_m.xcbald,SQLCA.sqlcode,0)
      CLOSE axci115_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   CALL s_transaction_end('Y','0')
 
   CALL axci115_show()
   WHILE TRUE
      LET g_xcbald_t = g_xcba_m.xcbald
      LET g_xcba001_t = g_xcba_m.xcba001
      LET g_xcba002_t = g_xcba_m.xcba002
      LET g_xcba003_t = g_xcba_m.xcba003
      LET g_xcba004_t = g_xcba_m.xcba004
 
 
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL axci115_input("u")     #欄位更改
      
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xcba_m.* = g_xcba_m_t.*
         CALL axci115_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_xcba_m.xcbald != g_xcbald_t 
      OR g_xcba_m.xcba001 != g_xcba001_t 
      OR g_xcba_m.xcba002 != g_xcba002_t 
      OR g_xcba_m.xcba003 != g_xcba003_t 
      OR g_xcba_m.xcba004 != g_xcba004_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前
         {<point name="modify.b_key_update" mark="Y"/>}
         #end add-point
         
         #更新單頭key值
         UPDATE xcba_t SET xcbald = g_xcba_m.xcbald
                                       , xcba001 = g_xcba_m.xcba001
                                       , xcba002 = g_xcba_m.xcba002
                                       , xcba003 = g_xcba_m.xcba003
                                       , xcba004 = g_xcba_m.xcba004
 
          WHERE xcbaent = g_enterprise AND xcbald = g_xcbald_t
            AND xcba001 = g_xcba001_t
            AND xcba002 = g_xcba002_t
            AND xcba003 = g_xcba003_t
            AND xcba004 = g_xcba004_t
 
         #add-point:單頭(偽)修改中
         {<point name="modify.m_key_update"/>}
         #end add-point
         
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("xcba_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("xcba_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
 
 
         
         #add-point:單頭(偽)修改後
         {<point name="modify.a_key_update"/>}
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_xcba_m.xcbald,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE axci115_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_xcba_m.xcbald,'U')
 
   CALL axci115_b_fill("1=1")
   
END FUNCTION   
]]>
</section>
  <section id="axci115.modify_detail_chk" ver="3" status="" src="s">
<![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION axci115_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "xcbastus"
      WHEN "s_detail2"
         LET ls_return = "xcba005_2"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
</section>
  <section id="axci115.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="axci115.query" ver="4" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axci115_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #add-point:query開始前
   {<point name="query.befroe_query"/>}
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xcba_d.clear()
   CALL g_xcba2_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axci115_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL axci115_browser_fill(g_wc)
      CALL axci115_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL axci115_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL axci115_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION
]]>
</section>
  <section id="axci115.ref_show" ver="4" status="" src="s">
<![CDATA[#+ 帶出reference資料
PRIVATE FUNCTION axci115_ref_show()
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define
   {<point name="ref_show.define"/>}
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference
   {<point name="ref_show.head.reference"/>}
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xcba_d.getLength()
      #add-point:ref_show段d_reference
      {<point name="ref_show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xcba2_d.getLength()
      #add-point:ref_show段d2_reference
      {<point name="ref_show.body2.reference"/>}
      #end add-point
   END FOR
 
   
   #add-point:ref_show段自訂
   {<point name="ref_show.other_reference"/>}
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION
]]>
</section>
  <section id="axci115.reproduce" ver="4" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION axci115_reproduce()
   DEFINE l_newno     LIKE xcba_t.xcbald 
   DEFINE l_oldno     LIKE xcba_t.xcbald 
   DEFINE l_newno02     LIKE xcba_t.xcba001 
   DEFINE l_oldno02     LIKE xcba_t.xcba001 
   DEFINE l_newno03     LIKE xcba_t.xcba002 
   DEFINE l_oldno03     LIKE xcba_t.xcba002 
   DEFINE l_newno04     LIKE xcba_t.xcba003 
   DEFINE l_oldno04     LIKE xcba_t.xcba003 
   DEFINE l_newno05     LIKE xcba_t.xcba004 
   DEFINE l_oldno05     LIKE xcba_t.xcba004 
 
   DEFINE l_master    RECORD LIKE xcba_t.*
   DEFINE l_detail    RECORD LIKE xcba_t.*
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_xcba_m.xcbald IS NULL
      OR g_xcba_m.xcba001 IS NULL
      OR g_xcba_m.xcba002 IS NULL
      OR g_xcba_m.xcba003 IS NULL
      OR g_xcba_m.xcba004 IS NULL
 
      THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_xcbald_t = g_xcba_m.xcbald
   LET g_xcba001_t = g_xcba_m.xcba001
   LET g_xcba002_t = g_xcba_m.xcba002
   LET g_xcba003_t = g_xcba_m.xcba003
   LET g_xcba004_t = g_xcba_m.xcba004
 
   
   LET g_xcba_m.xcbald = ""
   LET g_xcba_m.xcba001 = ""
   LET g_xcba_m.xcba002 = ""
   LET g_xcba_m.xcba003 = ""
   LET g_xcba_m.xcba004 = ""
 
    
   CALL axci115_set_entry('a')
   CALL axci115_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL axci115_input("r")
   
      LET g_xcba_m.xcbald_desc = ''
   DISPLAY BY NAME g_xcba_m.xcbald_desc
   LET g_xcba_m.xcba004_desc = ''
   DISPLAY BY NAME g_xcba_m.xcba004_desc
 
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " xcbald = '", l_newno CLIPPED, "' "
              ," AND xcba001 = '", l_newno02 CLIPPED, "' "
              ," AND xcba002 = '", l_newno03 CLIPPED, "' "
              ," AND xcba003 = '", l_newno04 CLIPPED, "' "
              ," AND xcba004 = '", l_newno05 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="axci115.set_entry" ver="2" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION axci115_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xcbald,xcba001,xcba002,xcba003,xcba004",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="axci115.set_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION axci115_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="axci115.set_no_entry" ver="3" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION axci115_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xcbald,xcba001,xcba002,xcba003,xcba004",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="axci115.set_no_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION axci115_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b段"/>}
   #end add-point 
   
END FUNCTION
]]>
</section>
  <section id="axci115.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION axci115_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xcba_m.xcbald
   LET g_pk_array[1].column = 'xcbald'
   LET g_pk_array[2].values = g_xcba_m.xcba001
   LET g_pk_array[2].column = 'xcba001'
   LET g_pk_array[3].values = g_xcba_m.xcba002
   LET g_pk_array[3].column = 'xcba002'
   LET g_pk_array[4].values = g_xcba_m.xcba003
   LET g_pk_array[4].column = 'xcba003'
   LET g_pk_array[5].values = g_xcba_m.xcba004
   LET g_pk_array[5].column = 'xcba004'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="axci115.show" ver="2" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axci115_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL axci115_b_fill(g_wc2) #單身填充
      CALL axci115_b_fill2('0') #單身填充
   END IF
   
   
 
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL axci115_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
 
   LET g_xcba_m_t.* = g_xcba_m.*      #保存單頭舊值
   
   DISPLAY BY NAME g_xcba_m.xcba001,g_xcba_m.xcbald,g_xcba_m.xcbald_desc,g_xcba_m.xcba002,g_xcba_m.xcba003, 
       g_xcba_m.xcba004,g_xcba_m.xcba004_desc,g_xcba_m.xcba007
   CALL axci115_b_fill(g_wc2_table1)                 #單身
   CALL axci115_b_fill2('0') #單身填充
 
   CALL axci115_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point   
   
END FUNCTION
]]>
</section>
  <section id="axci115.state_change" ver="1" status="" src="s">
<![CDATA[    
]]>
</section>
  <section id="axci115.ui_browser_refresh" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axci115_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xcbald = g_xcba_m.xcbald 
         AND g_browser[l_i].b_xcba001 = g_xcba_m.xcba001 
         AND g_browser[l_i].b_xcba002 = g_xcba_m.xcba002 
         AND g_browser[l_i].b_xcba003 = g_xcba_m.xcba003 
         AND g_browser[l_i].b_xcba004 = g_xcba_m.xcba004 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="axci115.ui_detailshow" ver="2" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION axci115_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
      #add-point:ui_detailshow段more
      {<point name="ui_detailshow.more"/>}
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point 
   
END FUNCTION
]]>
</section>
  <section id="axci115.ui_dialog" ver="6" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION axci115_ui_dialog()
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point  
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL axci115_browser_fill("")
 
      
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_xcbald = g_xcbald_t
               AND g_browser[li_idx].b_xcba001 = g_xcba001_t
               AND g_browser[li_idx].b_xcba002 = g_xcba002_t
               AND g_browser[li_idx].b_xcba003 = g_xcba003_t
               AND g_browser[li_idx].b_xcba004 = g_xcba004_t
 
               THEN
               LET g_current_row = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
      
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_xcba_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL axci115_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_xcba2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL axci115_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)      
            
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axci115_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axci115_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         
         
         ON ACTION first
            CALL axci115_fetch('F')
            LET g_current_row = g_current_idx         
          
         ON ACTION previous
            CALL axci115_fetch('P')
            LET g_current_row = g_current_idx
          
         ON ACTION jump
            CALL axci115_fetch('/')
            LET g_current_row = g_current_idx
        
         ON ACTION next
            CALL axci115_fetch('N')
            LET g_current_row = g_current_idx
         
         ON ACTION last
            CALL axci115_fetch('L')
            LET g_current_row = g_current_idx
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xcba005
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axci115_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axci115_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL axci115_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axci115_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axci115_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axci115_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axci115_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_axci115_s01
            LET g_action_choice="open_axci115_s01"
            IF cl_auth_chk_act("open_axci115_s01") THEN
               
               #add-point:ON ACTION open_axci115_s01
               {<point name="menu.open_axci115_s01" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_axci115_s02
            LET g_action_choice="open_axci115_s02"
            IF cl_auth_chk_act("open_axci115_s02") THEN
               
               #add-point:ON ACTION open_axci115_s02
               {<point name="menu.open_axci115_s02" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axci115_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axci115_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL axci115_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axci115_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axci115_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
]]>
</section>
  <section id="axci115.ui_headershow" ver="3" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION axci115_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_xcba_m.xcbald = g_browser[g_current_idx].b_xcbald   
   LET g_xcba_m.xcba001 = g_browser[g_current_idx].b_xcba001   
   LET g_xcba_m.xcba002 = g_browser[g_current_idx].b_xcba002   
   LET g_xcba_m.xcba003 = g_browser[g_current_idx].b_xcba003   
   LET g_xcba_m.xcba004 = g_browser[g_current_idx].b_xcba004   
 
   EXECUTE axci115_master_referesh USING g_xcba_m.xcbald,g_xcba_m.xcba001,g_xcba_m.xcba002,g_xcba_m.xcba003, 
       g_xcba_m.xcba004 INTO g_xcba_m.xcba001,g_xcba_m.xcbald,g_xcba_m.xcba002,g_xcba_m.xcba003,g_xcba_m.xcba004, 
       g_xcba_m.xcba007,g_xcba_m.xcbald_desc,g_xcba_m.xcba004_desc
   CALL axci115_show()
   
END FUNCTION
]]>
</section>
  <section id="axci115.unlock_b" ver="2" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axci115_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
 
 
END FUNCTION
]]>
</section>
  <section id="axci115.update_b" ver="2" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION axci115_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
 
   
END FUNCTION
]]>
</section>
</add_points>