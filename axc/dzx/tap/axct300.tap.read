<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="axct300" std_prog="axct300" erpver="1.0" module="AXC" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.axct300_xcca006_desc" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct300_xcca006_desc(p_xcca006)
DEFINE p_xcca006       LIKE xcca_t.xcca006
DEFINE r_imaal003      LIKE imaal_t.imaal003
DEFINE r_imaal004      LIKE imaal_t.imaal004

   SELECT imaal003,imaal004 INTO r_imaal003,r_imaal004 FROM imaal_t
    WHERE imaalent = g_enterprise AND imaal001 = p_xcca006 AND imaal002 = g_dlang
 
   RETURN r_imaal003,r_imaal004

END FUNCTION]]>
  </point>
  <point name="function.axct300_xccald_desc" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct300_xccald_desc()
   SELECT glaal002 INTO g_xcca_m.xccald_desc FROM glaal_t 
    WHERE glaalent=g_enterprise AND glaalld=g_xcca_m.xccald AND glaal001=g_dlang

   DISPLAY BY NAME g_xcca_m.xccald_desc
END FUNCTION]]>
  </point>
  <point name="function.axct300_xccacomp_desc" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct300_xccacomp_desc()
   SELECT ooefl003 INTO g_xcca_m.xccacomp_desc FROM ooefl_t 
    WHERE ooeflent=g_enterprise AND ooefl001=g_xcca_m.xccacomp AND ooefl002=g_dlang

   DISPLAY BY NAME g_xcca_m.xccacomp_desc
END FUNCTION]]>
  </point>
  <point name="function.axct300_xcca001_ref" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct300_xcca001_ref()
   SELECT glaa001,glaa015,glaa016,glaa018,glaa019,glaa020,glaa022 
     INTO g_glaa001,g_glaa015,g_glaa016,g_glaa018,g_glaa019,g_glaa020,g_glaa022 
     FROM glaa_t
    WHERE glaaent = g_enterprise AND glaald = g_xcca_m.xccald
    
#   IF g_glaa015 = 'N' THEN
#      CALL cl_set_comp_visible('bpage_2',FALSE)
#   ELSE
#      CALL cl_set_comp_visible('bpage_2',TRUE)
#   END IF
#   IF g_glaa019 = 'N' THEN
#      CALL cl_set_comp_visible('bpage_3',FALSE)
#   ELSE
#      CALL cl_set_comp_visible('bpage_3',TRUE)
#   END IF
END FUNCTION]]>
  </point>
  <point name="function.axct300_excelexample" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct300_excelexample(n,t,p_show_hidden)
DEFINE  t,t1,t2,n1_text,n3_text         om.DomNode,
         n,n2,n_child                    om.DomNode,
         p_show_hidden                   LIKE type_t.chr1,    #隱藏欄位是否顯示
         n1,n_table,n3                   om.NodeList,
         i,res,p,q,k                     LIKE type_t.num10,
         h                               LIKE type_t.num10,
         cnt_combo_data,cnt_combo_tot    LIKE type_t.num10,
         cells,values,j,l,sheet,cc       STRING,
         table_name,l_length             STRING,
         l_table_name                    LIKE type_t.chr20,
         l_datatype                      LIKE type_t.chr20,
         l_bufstr                        base.StringBuffer,
         lwin_curr                       ui.Window,
         l_show                          LIKE type_t.chr1,
         l_time                          LIKE type_t.chr8

 DEFINE  combo_arr        DYNAMIC ARRAY OF RECORD
           sheet          LIKE type_t.num10,
           seq            LIKE type_t.num10,
           name           LIKE type_t.chr2,
           text           LIKE type_t.chr50
                          END RECORD
 DEFINE  customize_table  LIKE type_t.chr1
 DEFINE  l_str            STRING
 DEFINE  l_i              LIKE type_t.num5
 DEFINE  buf              base.StringBuffer
 DEFINE  l_dec_point      STRING,
         l_qry_name       LIKE type_t.chr20,
         l_cust           LIKE type_t.chr1
 DEFINE  l_tabIndex       LIKE type_t.num10
 DEFINE  l_seq            DYNAMIC ARRAY OF LIKE type_t.num10
 DEFINE  l_seq2           DYNAMIC ARRAY OF LIKE type_t.num10
 DEFINE  l_j              LIKE type_t.num5
 DEFINE  bFound           LIKE type_t.num5
 DEFINE  l_dbname         STRING
 DEFINE  l_zal09          LIKE type_t.chr1
 DEFINE  l_desc           STRING

   WHENEVER ERROR CALL cl_err_msg_log

   LET cnt_table = 1

   LET l_bufstr = base.StringBuffer.create()
   WHENEVER ERROR CALL cl_err_msg_log
   LET lwin_curr = ui.window.getCurrent()

   LET l_channel = base.Channel.create()
   LET l_time = TIME(CURRENT)
  #LET xls_name = g_prog CLIPPED,l_time CLIPPED,".xls"
   LET xls_name = g_xcca_s.name CLIPPED,".xls"

   LET buf = base.StringBuffer.create()
   CALL buf.append(xls_name)
   CALL buf.replace( ":","-", 0)
   LET xls_name = buf.toString()

   # 個資會記錄使用者的行為模式，在此說明excel的檔名及匯出excel的方式
   LET l_desc = xls_name CLIPPED," Using HTML to export the Table to excel."

   IF os.Path.delete(xls_name CLIPPED) THEN END IF
   CALL l_channel.openFile( xls_name CLIPPED, "a" )
   CALL l_channel.setDelimiter("")

   IF ms_codeset.getIndexOf("BIG5", 1) OR
      ( ms_codeset.getIndexOf("GB2312", 1) OR ms_codeset.getIndexOf("GBK", 1) OR ms_codeset.getIndexOf("GB18030", 1) ) THEN
      IF ms_locale = "ZH_TW" AND g_lang = "ZH_TW" THEN
         LET tsconv_cmd = "big5_to_gb2312"
         LET ms_codeset = "GB2312"
      END IF
      IF ms_locale = "ZH_CN" AND g_lang = "ZH_CN" THEN
         LET tsconv_cmd = "gb2312_to_big5"
         LET ms_codeset = "BIG5"
      END IF
   END IF

   LET l_str = "<html xmlns:o=",g_quote,"urn:schemas-microsoft-com:office:office",g_quote
   CALL l_channel.write(l_str CLIPPED)
   LET l_str = "<meta http-equiv=Content-Type content=",g_quote,"text/html; charset=",ms_codeset,g_quote,">"
   CALL l_channel.write(l_str CLIPPED)
   LET l_str = "xmlns:x=",g_quote,"urn:schemas-microsoft-com:office:excel",g_quote
   CALL l_channel.write(l_str CLIPPED)
   LET l_str = "xmlns=",g_quote,"http://www.w3.org/TR/REC-html40",g_quote,">"
   CALL l_channel.write(l_str CLIPPED)
   CALL l_channel.write("<head><style><!--")

   IF not ms_codeset.getIndexOf("UTF-8", 1) THEN
      IF g_lang = "0" THEN  #繁體中文
         CALL l_channel.write("td  {font-family:細明體, serif;}")
      ELSE
         IF g_lang = "2" THEN  #簡體中文
            CALL l_channel.write("td  {font-family:新宋体, serif;}")
         ELSE
            CALL l_channel.write("td  {font-family:細明體, serif;}")
         END IF
      END IF
   ELSE
      CALL l_channel.write("td  {font-family:Courier New, serif;}")
   END IF

   LET l_str = ".xl24  {mso-number-format:",g_quote,"\@",g_quote,";}",
               ".xl30 {mso-style-parent:style0; mso-number-format:\"0_ \";} ",
               ".xl31 {mso-style-parent:style0; mso-number-format:\"0\.0_ \";} ",
               ".xl32 {mso-style-parent:style0; mso-number-format:\"0\.00_ \";} ",
               ".xl33 {mso-style-parent:style0; mso-number-format:\"0\.000_ \";} ",
               ".xl34 {mso-style-parent:style0; mso-number-format:\"0\.0000_ \";} ",
               ".xl35 {mso-style-parent:style0; mso-number-format:\"0\.00000_ \";} ",
               ".xl36 {mso-style-parent:style0; mso-number-format:\"0\.000000_ \";} ",
               ".xl37 {mso-style-parent:style0; mso-number-format:\"0\.0000000_ \";} ",
               ".xl38 {mso-style-parent:style0; mso-number-format:\"0\.00000000_ \";} ",
               ".xl39 {mso-style-parent:style0; mso-number-format:\"0\.000000000_ \";} ",
               ".xl40 {mso-style-parent:style0; mso-number-format:\"0\.0000000000_ \";} "
   CALL l_channel.write(l_str CLIPPED)
   CALL l_channel.write("--></style>")
   CALL l_channel.write("<!--[if gte mso 9]><xml>")
   CALL l_channel.write("<x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet>")
   CALL l_channel.write("<x:DefaultRowHeight>330</x:DefaultRowHeight>")
   CALL l_channel.write("</xml><![endif]--></head>")
   CALL l_channel.write("<body><table border=1 cellpadding=0 cellspacing=0 width=432 style='border-collapse: collapse;table-layout:fixed;width:324pt'>")
   CALL l_channel.write("<tr height=22>")

   LET l_win_name = NULL
   LET l_win_name = n.getAttribute("name")

   LET n_table = n.selectByTagName("Table")
   CALL combo_arr.clear()
   FOR h=1 to cnt_table
      CALL g_hidden.clear()
      CALL g_ifchar.clear()
      CALL g_mask.clear()
      LET n2 = n_table.item(h)

      IF l_win_name = "p_dbqry_table" THEN
         LET n1 = n2.selectByPath("//TableColumn[@hidden=\"0\"]")
      ELSE
         LET n1 = n2.selectByTagName("TableColumn")
      END IF

      #抓取 table 是否有進行欄位排序
      INITIALIZE g_sort.* TO NULL
      LET g_sort.column = n2.getAttribute("sortColumn")
      IF g_sort.column >=0 AND g_sort.column IS NOT NULL  THEN
         LET g_sort.column = g_sort.column + 1    #屬性 sortColumn 為 0 開始
         LET g_sort.type = n2.getAttribute("sortType")
      END IF

      LET cnt_header = n1.getLength()
      LET l = h
      LET sheet=g_sheet  CLIPPED,l
      LET k = 0

      CALL l_seq.clear()
      CALL l_seq2.clear()

     #循環Table中的每一個列
     FOR i=1 TO cnt_header
       #得到對應的DomNode節點
       LET n1_text = n1.item(i)
       #得到該列的TabIndex屬性
       LET l_tabIndex = n1_text.getAttribute("tabIndex")

       #如果TabIndex屬性不為空
       IF NOT cl_null(l_tabIndex) THEN
          #初始化一個標志變量（表明是否在數組中找到比當前TabIndex更大的節點）
          LET bFound = FALSE
          #開始在已有的數組中定位比當前tabIndex大的成員
          FOR l_j=1 TO l_seq2.getLength()
              #如果有找到
              IF l_seq2[l_j] > l_tabIndex THEN
                 #設置標志變量
                 LET bFound = TRUE
                 #退出搜尋過程（此時下標j保存的該成員變量的位置）
                 EXIT FOR
              END IF
          END FOR
          #如果始終沒有找到（比如數組根本就是空的）那麼j里面保存的就是當前數組最大下標+1
          #判斷有沒有找到
          IF bFound THEN
             #如果找到則向該數組中插入一個元素（在這個tabIndex比它大的元素前面插入)
             CALL l_seq2.InsertElement(l_j)
             CALL l_seq.InsertElement(l_j)
          END IF
          #把當前的下標（列的位置）和tabIndex填充到這個位置上
          #如果沒有找到，則填充的位置會是整個數組的末尾
          LET l_seq[l_j] = i
          LET l_seq2[l_j] = l_tabIndex
       END IF
     END FOR

      FOR i=1 to cnt_header
         LET n1_text = n1.item(l_seq[i])
         LET k = k + 1
         LET j = k
         LET cells = "R1C" CLIPPED,j
         LET l_field_name = NULL
         LET l_show = n1_text.getAttribute("hidden")
         IF ((p_show_hidden = 'N' OR p_show_hidden IS NULL) AND (l_show = "0" OR l_show IS NULL)) OR p_show_hidden = 'Y' THEN
            LET l_field_name = n1_text.getAttribute("name")
            IF l_field_name = 'xcca_t.xccaent' OR l_field_name = 'xcca_t.xccald' OR
               l_field_name = 'xcca_t.xccacomp' OR l_field_name = 'xcca_t.xcca001' OR
               l_field_name = 'xcca_t.xcca002' OR l_field_name = 'xcca_t.xcca003' OR
               l_field_name = 'xcca_t.xcca004' OR l_field_name = 'xcca_t.xcca005' OR
               l_field_name = 'xcca_t.xcca006' OR l_field_name = 'xcca_t.xcca007' OR
               l_field_name = 'xcca_t.xcca101' OR
               l_field_name = 'xcca_t.xcca110a' OR l_field_name = 'xcca_t.xcca110b' OR
               l_field_name = 'xcca_t.xcca110c' OR l_field_name = 'xcca_t.xcca110d' OR
               l_field_name = 'xcca_t.xcca110e' OR l_field_name = 'xcca_t.xcca110e' OR
               l_field_name = 'xcca_t.xcca110g' OR l_field_name = 'xcca_t.xcca110h' OR
               l_field_name = 'xcca_t.xcca110' OR l_field_name = 'xcca_t.xcca102a' OR
               l_field_name = 'xcca_t.xcca102b' OR l_field_name = 'xcca_t.xcca102c' OR
               l_field_name = 'xcca_t.xcca102d' OR l_field_name = 'xcca_t.xcca102e' OR
               l_field_name = 'xcca_t.xcca102f' OR l_field_name = 'xcca_t.xcca102g' OR
               l_field_name = 'xcca_t.xcca102h' OR l_field_name = 'xcca_t.xcca102' OR
               l_field_name = 'xcca_t.xcca101' OR
               l_field_name = 'formonly.xcca110a_1' OR l_field_name = 'formonly.xcca110b_1' OR
               l_field_name = 'formonly.xcca110c_1' OR l_field_name = 'formonly.xcca110d_1' OR
               l_field_name = 'formonly.xcca110e_1' OR l_field_name = 'formonly.xcca110e_1' OR
               l_field_name = 'formonly.xcca110g_1' OR l_field_name = 'formonly.xcca110h_1' OR
               l_field_name = 'formonly.xcca110_1'  OR l_field_name = 'formonly.xcca102a_1' OR
               l_field_name = 'formonly.xcca102b_1' OR l_field_name = 'formonly.xcca102c_1' OR
               l_field_name = 'formonly.xcca102d_1' OR l_field_name = 'formonly.xcca102e_1' OR
               l_field_name = 'formonly.xcca102f_1' OR l_field_name = 'formonly.xcca102g_1' OR
               l_field_name = 'formonly.xcca102h_1' OR l_field_name = 'formonly.xcca102_1' OR
               l_field_name = 'formonly.xcca110a_2' OR l_field_name = 'formonly.xcca110b_2' OR
               l_field_name = 'formonly.xcca110c_2' OR l_field_name = 'formonly.xcca110d_2' OR
               l_field_name = 'formonly.xcca110e_2' OR l_field_name = 'formonly.xcca110e_2' OR
               l_field_name = 'formonly.xcca110g_2' OR l_field_name = 'formonly.xcca110h_2' OR
               l_field_name = 'formonly.xcca110_2'  OR l_field_name = 'formonly.xcca102a_2' OR
               l_field_name = 'formonly.xcca102b_2' OR l_field_name = 'formonly.xcca102c_2' OR
               l_field_name = 'formonly.xcca102d_2' OR l_field_name = 'formonly.xcca102e_2' OR
               l_field_name = 'formonly.xcca102f_2' OR l_field_name = 'formonly.xcca102g_2' OR
               l_field_name = 'formonly.xcca102h_2' OR l_field_name = 'formonly.xcca102_2' 
               THEN
               LET values = n1_text.getAttribute("text")
               LET l_str = "<td>",axct300_add_span(values),"</td>"
               CALL l_channel.write(l_str CLIPPED)
            END IF
         ELSE
            LET g_hidden[i] = "1"
            LET k = k -1
         END IF
      END FOR
      IF h=1 THEN CALL axct300_get_boday(h,cnt_header,t,combo_arr,l_seq) END IF

   END FOR

   # 使用者的行為模式改到前面判斷，在此僅將前面判斷的結果說明傳至syslog中做紀錄
   IF cl_log_sys_operation("A","G",l_desc) THEN
   END IF
END FUNCTION]]>
  </point>
  <point name="function.axct300_xcca110_sum" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct300_xcca110_sum()
   IF cl_null(g_xcca_d[l_ac].xcca110a) THEN LET g_xcca_d[l_ac].xcca110a = 0 END IF
   IF cl_null(g_xcca_d[l_ac].xcca110b) THEN LET g_xcca_d[l_ac].xcca110b = 0 END IF
   IF cl_null(g_xcca_d[l_ac].xcca110c) THEN LET g_xcca_d[l_ac].xcca110c = 0 END IF
   IF cl_null(g_xcca_d[l_ac].xcca110d) THEN LET g_xcca_d[l_ac].xcca110d = 0 END IF
   IF cl_null(g_xcca_d[l_ac].xcca110e) THEN LET g_xcca_d[l_ac].xcca110e = 0 END IF
   IF cl_null(g_xcca_d[l_ac].xcca110f) THEN LET g_xcca_d[l_ac].xcca110f = 0 END IF
   IF cl_null(g_xcca_d[l_ac].xcca110g) THEN LET g_xcca_d[l_ac].xcca110g = 0 END IF
   IF cl_null(g_xcca_d[l_ac].xcca110h) THEN LET g_xcca_d[l_ac].xcca110h = 0 END IF
   
   LET g_xcca_d[l_ac].xcca110=g_xcca_d[l_ac].xcca110a+g_xcca_d[l_ac].xcca110b+g_xcca_d[l_ac].xcca110c
                             +g_xcca_d[l_ac].xcca110d+g_xcca_d[l_ac].xcca110e+g_xcca_d[l_ac].xcca110f 
                             +g_xcca_d[l_ac].xcca110g+g_xcca_d[l_ac].xcca110h                              

END FUNCTION]]>
  </point>
  <point name="function.axct300_b_fill1" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct300_b_fill1(p_wc2)
DEFINE p_wc2      STRING
   #add-point:b_fill段define

   #end add-point     
 
   #先清空單身變數內容
   CALL g_xcca1_d.clear()
 
   #,xcca001,xcca002,xcca006,xcca007,xccaownid,'',xccaowndp, 
          #'',xccacrtid,'',xccacrtdp,'',xccacrtdt,xccamodid,'',xccamoddt,xccacnfid,'',xccacnfdt,xccapstid, 
          #'',xccapstdt 
      LET g_sql = "SELECT  UNIQUE xcca001,xcca002,xcca006,'','',xcca007,xcca101,xcca110a,xcca110b, 
          xcca110c,xcca110d,xcca110e,xcca110f,xcca110g,xcca110h,xcca110,xcca102a,xcca102b,xcca102c,xcca102d, 
          xcca102e,xcca102f,xcca102g,xcca102h
           FROM xcca_t",   
                  "",
                  
                  " WHERE xccaent= ? AND xccald=? AND xcca003=? AND xcca004=? AND xcca005=? AND xcca001 = '2'"  
                  
   IF NOT cl_null(g_wc3) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc3 CLIPPED
   END IF
   
   #add-point:b_fill段sql_after

   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axct300_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY xcca_t.xcca001,xcca_t.xcca002,xcca_t.xcca006,xcca_t.xcca007"
      
      #add-point:b_fill段fill_before

      #end add-point
      
      PREPARE axct300_pb1 FROM g_sql
      DECLARE b_fill_cs1 CURSOR FOR axct300_pb1
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs1 USING g_enterprise,g_xcca_m.xccald
                                               ,g_xcca_m.xcca003
                                               ,g_xcca_m.xcca004
                                               ,g_xcca_m.xcca005
 
                                               
      FOREACH b_fill_cs1 INTO g_xcca1_d[l_ac].*#,g_xcca2_d[l_ac].*
 
                             
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
                           
         CALL axct300_xcca006_desc(g_xcca1_d[l_ac].xcca006_1) 
          RETURNING g_xcca1_d[l_ac].xcca006_desc1,g_xcca1_d[l_ac].xcca006_1_desc1
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      
            CALL g_xcca1_d.deleteElement(g_xcca1_d.getLength())
      CALL g_xcca2_d.deleteElement(g_xcca2_d.getLength())
 
   END IF
   
   #add-point:b_fill段more

   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE axct300_pb1
END FUNCTION]]>
  </point>
  <point name="function.axct300_add_span" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct300_add_span(p_str)
DEFINE p_str    STRING
DEFINe l_str    STRING


   LET p_str = p_str.trimRight()

   #若字串有空白就必須加上 <span> 屬性，並將空白轉換為 &nbsp;
   IF p_str.getIndexOf(" ",1) > 0 THEN
      LET g_bufstr = base.StringBuffer.create()             #CHI-B30026    #FUN-A20036
      CALL g_bufstr.clear()
      CALL g_bufstr.append(p_str)
      CALL g_bufstr.replace(" ","&nbsp;",0)
      CALL g_bufstr.replace("<","&lt;",0)   #CHI-CA0069
      LET l_str = g_bufstr.tostring()
      LET l_str = "<span style='mso-spacerun:yes'>", l_str, "</span>"
   ELSE
      #CHI-CA0069 -start- add
      LET g_bufstr = base.StringBuffer.create()
      CALL g_bufstr.clear()
      CALL g_bufstr.append(p_str)
      CALL g_bufstr.replace("<","&lt;",0)
      LET l_str = g_bufstr.tostring()
      #LET l_str = p_str   #CHI-CA0069
      #CHI-CA0069 --end--
   END IF

   RETURN l_str
END FUNCTION]]>
  </point>
  <point name="function.axct300_get_boday" order="9" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct300_get_boday(p_h,p_cnt_header,s,s_combo_arr,p_seq)
DEFINE  s,n1_text                          om.DomNode,
         n1                                 om.NodeList,
         i,m,k,cnt_body,res,p               LIKE type_t.num10,
         l_hidden_cnt,n,l_last_hidden       LIKE type_t.num10,
         p_h,p_cnt_header,arr_len           LIKE type_t.num10,
         p_null                             LIKE type_t.num10,
         cells,values,j,l,sheet             STRING,
         l_bufstr                           base.StringBuffer

 DEFINE  s_combo_arr    DYNAMIC ARRAY OF RECORD
          sheet         LIKE type_t.num10,       #sheet
          seq           LIKE type_t.num10,       #項次
          name          LIKE type_t.chr2,        #代號
          text          LIKE type_t.chr50        #說明
                        END RECORD
 DEFINE  p_seq          DYNAMIC ARRAY OF LIKE type_t.num10
 DEFINE  l_item         LIKE type_t.num10

 DEFINE  unix_path      STRING,
         window_path    STRING
 DEFINE  l_dom_doc      om.DomDocument,
         r,n_node       om.DomNode
 DEFINE  l_status       LIKE type_t.num5

   LET l_hidden_cnt = 0
   LET l = p_h
   LET sheet=g_sheet CLIPPED,l
   LET l_bufstr = base.StringBuffer.create()
   LET l = 0
   LET i = 0
   LET m = 0

   CALL l_channel.write("</tr></table></body></html>")
   CALL l_channel.close()
  #CALL cl_prt_convert(xls_name)

   LET unix_path = os.Path.join(FGL_GETENV("TEMPDIR"),xls_name CLIPPED)

  #LET window_path = "c:\\TT\\",xls_name CLIPPED
   LET window_path = g_xcca_s.dir,"\\",xls_name CLIPPED
   LET status = cl_client_download_file(unix_path, window_path)
   IF status then
      DISPLAY "Download OK!!"
   ELSE
      DISPLAY "Download fail!!"
   END IF

   LET status = cl_client_open_prog("excel",window_path)
   IF status then
      DISPLAY "Open OK!!"
   ELSE
      DISPLAY "Open fail!!"
   END IF
END FUNCTION]]>
  </point>
  <point name="function.axct300_ins_xcca" order="10" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct300_ins_xcca()
DEFINE l_ooab002          LIKE ooab_t.ooab002
DEFINE l_rate             LIKE type_t.num26_10
   
   

   IF g_glaa015 = 'Y' THEN
      CALL s_aooi160_get_exrate('1',g_xcca_m.xccacomp,l_bdate,g_glaa001,
                                        #目的幣別;  交易金額;              匯類類型
                                         g_glaa016,0,g_glaa018)
                  RETURNING l_rate
      LET g_xcca1_d[l_ac].xcca002_1 = g_xcca_d[l_ac].xcca002
      LET g_xcca1_d[l_ac].xcca006_1 = g_xcca_d[l_ac].xcca006
      LET g_xcca1_d[l_ac].xcca007_1 = g_xcca_d[l_ac].xcca007
      LET g_xcca1_d[l_ac].xcca101_1 = g_xcca_d[l_ac].xcca101
      LET g_xcca1_d[l_ac].xcca110a_1 = g_xcca_d[l_ac].xcca110a * l_rate
      LET g_xcca1_d[l_ac].xcca110b_1 = g_xcca_d[l_ac].xcca110b * l_rate
      LET g_xcca1_d[l_ac].xcca110c_1 = g_xcca_d[l_ac].xcca110c * l_rate
      LET g_xcca1_d[l_ac].xcca110d_1 = g_xcca_d[l_ac].xcca110d * l_rate
      LET g_xcca1_d[l_ac].xcca110e_1 = g_xcca_d[l_ac].xcca110e * l_rate
      LET g_xcca1_d[l_ac].xcca110f_1 = g_xcca_d[l_ac].xcca110f * l_rate
      LET g_xcca1_d[l_ac].xcca110g_1 = g_xcca_d[l_ac].xcca110g * l_rate
      LET g_xcca1_d[l_ac].xcca110h_1 = g_xcca_d[l_ac].xcca110h * l_rate
      LET g_xcca1_d[l_ac].xcca110_1 = g_xcca_d[l_ac].xcca110 * l_rate
      LET g_xcca1_d[l_ac].xcca102a_1 = g_xcca_d[l_ac].xcca110a * l_rate * g_xcca_d[l_ac].xcca101
      LET g_xcca1_d[l_ac].xcca102b_1 = g_xcca_d[l_ac].xcca110b * l_rate * g_xcca_d[l_ac].xcca101
      LET g_xcca1_d[l_ac].xcca102c_1 = g_xcca_d[l_ac].xcca110c * l_rate * g_xcca_d[l_ac].xcca101
      LET g_xcca1_d[l_ac].xcca102d_1 = g_xcca_d[l_ac].xcca110d * l_rate * g_xcca_d[l_ac].xcca101
      LET g_xcca1_d[l_ac].xcca102e_1 = g_xcca_d[l_ac].xcca110e * l_rate * g_xcca_d[l_ac].xcca101
      LET g_xcca1_d[l_ac].xcca102f_1 = g_xcca_d[l_ac].xcca110f * l_rate * g_xcca_d[l_ac].xcca101
      LET g_xcca1_d[l_ac].xcca102g_1 = g_xcca_d[l_ac].xcca110g * l_rate * g_xcca_d[l_ac].xcca101
      LET g_xcca1_d[l_ac].xcca102h_1 = g_xcca_d[l_ac].xcca110h * l_rate * g_xcca_d[l_ac].xcca101
      INSERT INTO xcca_t
             (xccaent,
              xccacomp,xccald,xcca004,xcca005,xcca003,
              xcca001,xcca002,xcca006,xcca007,
              xcca101,xcca110a,xcca110b,xcca110c,xcca110d,xcca110e,xcca110f,xcca110g,xcca110h,xcca110,xcca102a,xcca102b,xcca102c,xcca102d,xcca102e,xcca102f,xcca102g,xcca102h,xccaownid,xccaowndp,xccacrtid,xccacrtdp,xccacrtdt,xccamodid,xccamoddt,xccacnfid,xccacnfdt,xccapstid,xccapstdt) 
       VALUES(g_enterprise,
              g_xcca_m.xccacomp,g_xcca_m.xccald,g_xcca_m.xcca004,g_xcca_m.xcca005,g_xcca_m.xcca003,
              '2',g_xcca_d[l_ac].xcca002,g_xcca_d[l_ac].xcca006,g_xcca_d[l_ac].xcca007, 
                  g_xcca1_d[l_ac].xcca101_1,g_xcca1_d[l_ac].xcca110a_1,g_xcca1_d[l_ac].xcca110b_1, 
                  g_xcca1_d[l_ac].xcca110c_1,g_xcca1_d[l_ac].xcca110d_1,g_xcca1_d[l_ac].xcca110e_1, 
                  g_xcca1_d[l_ac].xcca110f_1,g_xcca1_d[l_ac].xcca110g_1,g_xcca1_d[l_ac].xcca110h_1, 
                  g_xcca1_d[l_ac].xcca110_1,g_xcca1_d[l_ac].xcca102a_1,g_xcca1_d[l_ac].xcca102b_1, 
                  g_xcca1_d[l_ac].xcca102c_1,g_xcca1_d[l_ac].xcca102d_1,g_xcca1_d[l_ac].xcca102e_1, 
                  g_xcca1_d[l_ac].xcca102f_1,g_xcca1_d[l_ac].xcca102g_1,g_xcca1_d[l_ac].xcca102h_1, 
                  g_xcca2_d[l_ac].xccaownid,g_xcca2_d[l_ac].xccaowndp,g_xcca2_d[l_ac].xccacrtid, 
                  g_xcca2_d[l_ac].xccacrtdp,g_xcca2_d[l_ac].xccacrtdt,g_xcca2_d[l_ac].xccamodid, 
                  g_xcca2_d[l_ac].xccamoddt,g_xcca2_d[l_ac].xccacnfid,g_xcca2_d[l_ac].xccacnfdt, 
                  g_xcca2_d[l_ac].xccapstid,g_xcca2_d[l_ac].xccapstdt)
   END IF
   
   IF g_glaa019 = 'Y' THEN
      LET l_rate = 1
      CALL s_aooi160_get_exrate('1',g_xcca_m.xccacomp,l_bdate,g_glaa001,
                                        #目的幣別;  交易金額;              匯類類型
                                         g_glaa016,0,g_glaa022)
          RETURNING l_rate
      LET g_xcca3_d[l_ac].xcca002_3 = g_xcca_d[l_ac].xcca002
      LET g_xcca3_d[l_ac].xcca006_3 = g_xcca_d[l_ac].xcca006
      LET g_xcca3_d[l_ac].xcca007_3 = g_xcca_d[l_ac].xcca007
      LET g_xcca3_d[l_ac].xcca101_3 = g_xcca_d[l_ac].xcca101
      LET g_xcca3_d[l_ac].xcca110a_3 = g_xcca_d[l_ac].xcca110a * l_rate
      LET g_xcca3_d[l_ac].xcca110b_3 = g_xcca_d[l_ac].xcca110b * l_rate
      LET g_xcca3_d[l_ac].xcca110c_3 = g_xcca_d[l_ac].xcca110c * l_rate
      LET g_xcca3_d[l_ac].xcca110d_3 = g_xcca_d[l_ac].xcca110d * l_rate
      LET g_xcca3_d[l_ac].xcca110e_3 = g_xcca_d[l_ac].xcca110e * l_rate
      LET g_xcca3_d[l_ac].xcca110f_3 = g_xcca_d[l_ac].xcca110f * l_rate
      LET g_xcca3_d[l_ac].xcca110g_3 = g_xcca_d[l_ac].xcca110g * l_rate
      LET g_xcca3_d[l_ac].xcca110h_3 = g_xcca_d[l_ac].xcca110h * l_rate
      LET g_xcca3_d[l_ac].xcca110_3 = g_xcca_d[l_ac].xcca110 * l_rate
      LET g_xcca3_d[l_ac].xcca102a_3 = g_xcca_d[l_ac].xcca110a * l_rate * g_xcca_d[l_ac].xcca101
      LET g_xcca3_d[l_ac].xcca102b_3 = g_xcca_d[l_ac].xcca110b * l_rate * g_xcca_d[l_ac].xcca101
      LET g_xcca3_d[l_ac].xcca102c_3 = g_xcca_d[l_ac].xcca110c * l_rate * g_xcca_d[l_ac].xcca101
      LET g_xcca3_d[l_ac].xcca102d_3 = g_xcca_d[l_ac].xcca110d * l_rate * g_xcca_d[l_ac].xcca101
      LET g_xcca3_d[l_ac].xcca102e_3 = g_xcca_d[l_ac].xcca110e * l_rate * g_xcca_d[l_ac].xcca101
      LET g_xcca3_d[l_ac].xcca102f_3 = g_xcca_d[l_ac].xcca110f * l_rate * g_xcca_d[l_ac].xcca101
      LET g_xcca3_d[l_ac].xcca102g_3 = g_xcca_d[l_ac].xcca110g * l_rate * g_xcca_d[l_ac].xcca101
      LET g_xcca3_d[l_ac].xcca102h_3 = g_xcca_d[l_ac].xcca110h * l_rate * g_xcca_d[l_ac].xcca101
      INSERT INTO xcca_t
             (xccaent,
              xccacomp,xccald,xcca004,xcca005,xcca003,
              xcca001,xcca002,xcca006,xcca007,
              xcca101,xcca110a,xcca110b,xcca110c,xcca110d,xcca110e,xcca110f,xcca110g,xcca110h,xcca110,xcca102a,xcca102b,xcca102c,xcca102d,xcca102e,xcca102f,xcca102g,xcca102h,xccaownid,xccaowndp,xccacrtid,xccacrtdp,xccacrtdt,xccamodid,xccamoddt,xccacnfid,xccacnfdt,xccapstid,xccapstdt) 
       VALUES(g_enterprise,
              g_xcca_m.xccacomp,g_xcca_m.xccald,g_xcca_m.xcca004,g_xcca_m.xcca005,g_xcca_m.xcca003,
              '3',g_xcca_d[l_ac].xcca002,g_xcca_d[l_ac].xcca006,g_xcca_d[l_ac].xcca007, 
                  g_xcca3_d[l_ac].xcca101_3, g_xcca3_d[l_ac].xcca110a_3,g_xcca3_d[l_ac].xcca110b_3, 
                  g_xcca3_d[l_ac].xcca110c_3,g_xcca3_d[l_ac].xcca110d_3,g_xcca3_d[l_ac].xcca110e_3, 
                  g_xcca3_d[l_ac].xcca110f_3,g_xcca3_d[l_ac].xcca110g_3,g_xcca3_d[l_ac].xcca110h_3, 
                  g_xcca3_d[l_ac].xcca110_3, g_xcca3_d[l_ac].xcca102a_3,g_xcca3_d[l_ac].xcca102b_3, 
                  g_xcca3_d[l_ac].xcca102c_3,g_xcca3_d[l_ac].xcca102d_3,g_xcca3_d[l_ac].xcca102e_3, 
                  g_xcca3_d[l_ac].xcca102f_3,g_xcca3_d[l_ac].xcca102g_3,g_xcca3_d[l_ac].xcca102h_3, 
                  g_xcca2_d[l_ac].xccaownid,g_xcca2_d[l_ac].xccaowndp,g_xcca2_d[l_ac].xccacrtid, 
                  g_xcca2_d[l_ac].xccacrtdp,g_xcca2_d[l_ac].xccacrtdt,g_xcca2_d[l_ac].xccamodid, 
                  g_xcca2_d[l_ac].xccamoddt,g_xcca2_d[l_ac].xccacnfid,g_xcca2_d[l_ac].xccacnfdt, 
                  g_xcca2_d[l_ac].xccapstid,g_xcca2_d[l_ac].xccapstdt)
  END IF

END FUNCTION]]>
  </point>
  <point name="function.axct300_b_fill3" order="11" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct300_b_fill3(p_wc2)
DEFINE p_wc2      STRING
   #add-point:b_fill段define

   #end add-point     
 
   #先清空單身變數內容
   CALL g_xcca3_d.clear()
 #,xcca001,xcca002,xcca006,xcca007,xccaownid,'',xccaowndp, 
         # '',xccacrtid,'',xccacrtdp,'',xccacrtdt,xccamodid,'',xccamoddt,xccacnfid,'',xccacnfdt,xccapstid, 
         #'',xccapstdt
   
      LET g_sql = "SELECT  UNIQUE xcca001,xcca002,xcca006,'','',xcca007,xcca101,xcca110a,xcca110b, 
          xcca110c,xcca110d,xcca110e,xcca110f,xcca110g,xcca110h,xcca110,xcca102a,xcca102b,xcca102c,xcca102d, 
          xcca102e,xcca102f,xcca102g,xcca102h
            FROM xcca_t",   
                  "",
                  
                  " WHERE xccaent= ? AND xccald=? AND xcca003=? AND xcca004=? AND xcca005=? AND xcca001 = '3' "  
                  
   IF NOT cl_null(g_wc3) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc3 CLIPPED
   END IF
   
   #add-point:b_fill段sql_after

   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axct300_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY xcca_t.xcca001,xcca_t.xcca002,xcca_t.xcca006,xcca_t.xcca007"
      
      #add-point:b_fill段fill_before

      #end add-point
      
      PREPARE axct300_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR axct300_pb2
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_xcca_m.xccald
                                               ,g_xcca_m.xcca003
                                               ,g_xcca_m.xcca004
                                               ,g_xcca_m.xcca005
 
                                               
      FOREACH b_fill_cs2 INTO g_xcca3_d[l_ac].*
 
                             
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
                           
        CALL axct300_xcca006_desc(g_xcca3_d[l_ac].xcca006_3) 
         RETURNING g_xcca3_d[l_ac].xcca006_3_desc,g_xcca3_d[l_ac].xcca006_1_3_desc

         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      
            CALL g_xcca3_d.deleteElement(g_xcca3_d.getLength())
      CALL g_xcca2_d.deleteElement(g_xcca2_d.getLength())
 
   END IF
   
   #add-point:b_fill段more

   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE axct300_pb2
END FUNCTION]]>
  </point>
  <point name="function.axct300_xcca110_sum3" order="12" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct300_xcca110_sum3()
   IF cl_null(g_xcca3_d[l_ac].xcca110a_3) THEN LET g_xcca3_d[l_ac].xcca110a_3 = 0 END IF
   IF cl_null(g_xcca3_d[l_ac].xcca110b_3) THEN LET g_xcca3_d[l_ac].xcca110b_3 = 0 END IF
   IF cl_null(g_xcca3_d[l_ac].xcca110c_3) THEN LET g_xcca3_d[l_ac].xcca110c_3 = 0 END IF
   IF cl_null(g_xcca3_d[l_ac].xcca110d_3) THEN LET g_xcca3_d[l_ac].xcca110d_3 = 0 END IF
   IF cl_null(g_xcca3_d[l_ac].xcca110e_3) THEN LET g_xcca3_d[l_ac].xcca110e_3 = 0 END IF
   IF cl_null(g_xcca3_d[l_ac].xcca110f_3) THEN LET g_xcca3_d[l_ac].xcca110f_3 = 0 END IF
   IF cl_null(g_xcca3_d[l_ac].xcca110g_3) THEN LET g_xcca3_d[l_ac].xcca110g_3 = 0 END IF
   IF cl_null(g_xcca3_d[l_ac].xcca110h_3) THEN LET g_xcca3_d[l_ac].xcca110h_3 = 0 END IF
   
   LET g_xcca3_d[l_ac].xcca110_3=g_xcca3_d[l_ac].xcca110a_3+g_xcca3_d[l_ac].xcca110b_3+g_xcca3_d[l_ac].xcca110c_3
                             +g_xcca3_d[l_ac].xcca110d_3+g_xcca3_d[l_ac].xcca110e_3+g_xcca3_d[l_ac].xcca110f_3 
                             +g_xcca3_d[l_ac].xcca110g_3+g_xcca3_d[l_ac].xcca110h_3 
END FUNCTION]]>
  </point>
  <point name="function.axct300_xcca110_sum1" order="13" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct300_xcca110_sum1()
   IF cl_null(g_xcca1_d[l_ac].xcca110a_1) THEN LET g_xcca1_d[l_ac].xcca110a_1 = 0 END IF
   IF cl_null(g_xcca1_d[l_ac].xcca110b_1) THEN LET g_xcca1_d[l_ac].xcca110b_1 = 0 END IF
   IF cl_null(g_xcca1_d[l_ac].xcca110c_1) THEN LET g_xcca1_d[l_ac].xcca110c_1 = 0 END IF
   IF cl_null(g_xcca1_d[l_ac].xcca110d_1) THEN LET g_xcca1_d[l_ac].xcca110d_1 = 0 END IF
   IF cl_null(g_xcca1_d[l_ac].xcca110e_1) THEN LET g_xcca1_d[l_ac].xcca110e_1 = 0 END IF
   IF cl_null(g_xcca1_d[l_ac].xcca110f_1) THEN LET g_xcca1_d[l_ac].xcca110f_1 = 0 END IF
   IF cl_null(g_xcca1_d[l_ac].xcca110g_1) THEN LET g_xcca1_d[l_ac].xcca110g_1 = 0 END IF
   IF cl_null(g_xcca1_d[l_ac].xcca110h_1) THEN LET g_xcca1_d[l_ac].xcca110h_1 = 0 END IF
   
   LET g_xcca1_d[l_ac].xcca110_1=g_xcca1_d[l_ac].xcca110a_1+g_xcca1_d[l_ac].xcca110b_1+g_xcca1_d[l_ac].xcca110c_1
                             +g_xcca1_d[l_ac].xcca110d_1+g_xcca1_d[l_ac].xcca110e_1+g_xcca1_d[l_ac].xcca110f_1 
                             +g_xcca1_d[l_ac].xcca110g_1+g_xcca1_d[l_ac].xcca110h_1 
END FUNCTION]]>
  </point>
  <point name="function.axct300_s01" order="14" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct300_s01()
DEFINE p_xrad001      LIKE xrad_t.xrad001
DEFINE l_xradl003     LIKE type_t.chr80
DEFINE ls_str         STRING
DEFINE l_chr          LIKE type_t.chr1
DEFINE l_chr1         LIKE type_t.chr1
DEFINE l_num          LIKE type_t.num5
   
   OPEN WINDOW w_axct300_s01 WITH FORM cl_ap_formpath("axc","axct300_s01")
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #輸入開始
      INPUT BY NAME g_xcca_s.name,g_xcca_s.dir
         BEFORE INPUT
           


         AFTER INPUT
            
                
            

      END INPUT
      
      
      
      DISPLAY ARRAY g_xcca4_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail5")
               LET l_ac = g_detail_idx
               
               #add-point:page1自定義行為

               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               
               LET g_current_page = 5
               
         
         END DISPLAY

      ON ACTION close
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION exit
         LET INT_FLAG = TRUE
         EXIT DIALOG
      
      ON ACTION produce
         LET w = ui.Window.getCurrent()
         LET f = w.getForm()
         LET page = f.FindNode("Page","page_5")
         CALL axct300_excelexample(page,base.TypeInfo.create(g_xcca4_d),'Y')
         ACCEPT DIALOG

      ON ACTION off
         LET INT_FLAG = TRUE
         EXIT DIALOG
      
      ON ACTION browser
         CALL cl_client_browse_dir() RETURNING g_xcca_s.dir
         LET ls_str = g_xcca_s.dir
         #抓取目录斜杆
         LET l_num =ls_str.getIndexOf(':',1)                                    #抓取：后的字符位置
         LET l_chr = ls_str.substring(l_num+1,l_num+1)                        #截取冒号后的字符 
         LET l_chr1 = ls_str.substring(ls_str.getLength(),ls_str.getLength())    #判断是否为根目录
         IF l_chr <> l_chr1  THEN
            LET g_xcca_s.dir = g_xcca_s.dir||l_chr
         ELSE
            LET g_xcca_s.dir = g_xcca_s.dir
         END IF
         DISPLAY BY NAME g_xcca_s.dir


   END DIALOG

#   LET w = ui.Window.getCurrent()
#   LET f = w.getForm()
#   LET page = f.FindNode("Page","page_5")
#   CALL axct300_excelexample(page,base.TypeInfo.create(g_xcca4_d),'Y')



      #畫面關閉
      CLOSE WINDOW w_axct300_s01
END FUNCTION]]>
  </point>
  <point name="function.axct300_xcca003_desc" order="15" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axct300_xcca003_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xcca_m.xcca003
   CALL ap_ref_array2(g_ref_fields,"SELECT xcatl003 FROM xcatl_t WHERE xcatlent='"||g_enterprise||"' AND xcatl001=? AND xcatl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xcca_m.xcca003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_xcca_m.xcca003_desc
END FUNCTION]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL g_xcca1_d.clear()
   CALL g_xcca3_d.clear()]]>
  </point>
  <point name="b_fill.sql_after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_sql = g_sql CLIPPED," AND xcca001 = '1' "]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_wc3 = g_wc2_table1 
#   IF cl_null(g_wc2_table1) THEN
#      LET g_wc2_table1 = " 1=1 AND xcca001 = '1' "
#   ELSE
#      LET g_wc2_table1 = g_wc2_table1 CLIPPED," AND xcca001 = '1' "
#   END IF]]>
  </point>
  <point name="construct.c.page1.xcca002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xcbf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcca002  #顯示到畫面上
            NEXT FIELD xcca002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.xcca006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imag001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcca006  #顯示到畫面上
            NEXT FIELD xcca006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.xcca007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaj010()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcca007  #顯示到畫面上
            NEXT FIELD xcca007                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.xccacnfid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccacnfid  #顯示到畫面上
            NEXT FIELD xccacnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.xccacrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccacrtdp  #顯示到畫面上
            NEXT FIELD xccacrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.xccacrtid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccacrtid  #顯示到畫面上
            NEXT FIELD xccacrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.xccamodid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccamodid  #顯示到畫面上
            NEXT FIELD xccamodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.xccaowndp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccaowndp  #顯示到畫面上
            NEXT FIELD xccaowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.xccaownid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccaownid  #顯示到畫面上
            NEXT FIELD xccaownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.xccapstid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccapstid  #顯示到畫面上
            NEXT FIELD xccapstid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xcca003" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xcat001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcca003  #顯示到畫面上
            NEXT FIELD xcca003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xccacomp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccacomp  #顯示到畫面上
            NEXT FIELD xccacomp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xccald" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            CALL q_authorised_ld()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccald  #顯示到畫面上
            NEXT FIELD xccald                     #返回原欄位
    

]]>
  </point>
  <point name="cs.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         LET g_xcca_d[1].xcca002 = ""
         DISPLAY ARRAY g_xcca_d TO s_detail1.*
            BEFORE DISPLAY
               EXIT DISPLAY
         END DISPLAY]]>
  </point>
  <point name="cs.head.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL g_xcca1_d.clear()
   CALL g_xcca3_d.clear()]]>
  </point>
  <point name="delete.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL g_xcca1_d.clear() 
      CALL g_xcca3_d.clear()]]>
  </point>
  <point name="delete.body.m_single_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DELETE FROM xcca_t
    WHERE xccaent = g_enterprise AND xccald = g_xcca_m.xccald AND
                              xcca003 = g_xcca_m.xcca003 AND
                              xcca004 = g_xcca_m.xcca004 AND
                              xcca005 = g_xcca_m.xcca005 AND
 
          xcca001 = '2'
      AND xcca002 = g_xcca_d_t.xcca002
      AND xcca006 = g_xcca_d_t.xcca006
      AND xcca007 = g_xcca_d_t.xcca007
      
   DELETE FROM xcca_t
    WHERE xccaent = g_enterprise AND xccald = g_xcca_m.xccald AND
                              xcca003 = g_xcca_m.xcca003 AND
                              xcca004 = g_xcca_m.xcca004 AND
                              xcca005 = g_xcca_m.xcca005 AND
 
          xcca001 = '3'
      AND xcca002 = g_xcca_d_t.xcca002
      AND xcca006 = g_xcca_d_t.xcca006
      AND xcca007 = g_xcca_d_t.xcca007]]>
  </point>
  <point name="fetch.before_fetch" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("modify,modify_detail,delete", TRUE)]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE l_bdate      LIKE glav_t.glav004 #起始年度+期別對應的起始截止日期
DEFINE l_edate      LIKE glav_t.glav004
DEFINE g_glaa003    LIKE glaa_t.glaa003
DEFINE  g_hidden        DYNAMIC ARRAY OF LIKE type_t.chr1,
        g_ifchar        DYNAMIC ARRAY OF LIKE type_t.chr1,
        g_mask          DYNAMIC ARRAY OF LIKE type_t.chr1,
        g_quote         STRING
DEFINE xls_name        STRING 
DEFINE  l_channel       base.Channel,
        l_str           STRING,
        l_cmd           STRING,
        l_field_name    STRING,
        cnt_table       LIKE type_t.num10
DEFINE  g_sheet         STRING 
DEFINE  ms_codeset      STRING
DEFINE  ms_locale       STRING
DEFINE  tsconv_cmd      STRING
DEFINE  l_win_name      STRING,              
        cnt_header      LIKE type_t.num10
DEFINE  g_sort          RECORD
         column         LIKE type_t.num5,    #sortColumn
         type           STRING,                 #sortType:排序方式:asc/desc
         name           STRING                  #欄位代號
                        END RECORD
DEFINE g_bufstr                base.StringBuffer 
DEFINE g_glaa001       LIKE glaa_t.glaa001
DEFINE g_glaa015       LIKE glaa_t.glaa015
DEFINE g_glaa016       LIKE glaa_t.glaa016
DEFINE g_glaa018       LIKE glaa_t.glaa018
DEFINE g_glaa019       LIKE glaa_t.glaa019
DEFINE g_glaa020       LIKE glaa_t.glaa020
DEFINE g_glaa022       LIKE glaa_t.glaa022
#單身 type 宣告
 TYPE type_g_xcca1_d        RECORD
   xcca001_1 LIKE xcca_t.xcca001, 
   xcca002_1 LIKE xcca_t.xcca002, 
   xcca006_1 LIKE xcca_t.xcca006, 
   xcca006_desc1 LIKE type_t.chr500, 
   xcca006_1_desc1 LIKE type_t.chr500, 
   xcca007_1 LIKE xcca_t.xcca007, 
   xcca101_1 LIKE xcca_t.xcca101, 
   xcca110a_1 LIKE xcca_t.xcca110a, 
   xcca110b_1 LIKE xcca_t.xcca110b, 
   xcca110c_1 LIKE xcca_t.xcca110c, 
   xcca110d_1 LIKE xcca_t.xcca110d, 
   xcca110e_1 LIKE xcca_t.xcca110e, 
   xcca110f_1 LIKE xcca_t.xcca110f, 
   xcca110g_1 LIKE xcca_t.xcca110g, 
   xcca110h_1 LIKE xcca_t.xcca110h, 
   xcca110_1 LIKE xcca_t.xcca110, 
   xcca102a_1 LIKE xcca_t.xcca102a, 
   xcca102b_1 LIKE xcca_t.xcca102b, 
   xcca102c_1 LIKE xcca_t.xcca102c, 
   xcca102d_1 LIKE xcca_t.xcca102d, 
   xcca102e_1 LIKE xcca_t.xcca102e, 
   xcca102f_1 LIKE xcca_t.xcca102f, 
   xcca102g_1 LIKE xcca_t.xcca102g, 
   xcca102h_1 LIKE xcca_t.xcca102h
       END RECORD
#單身 type 宣告
 TYPE type_g_xcca3_d        RECORD
   xcca001_3 LIKE xcca_t.xcca001, 
   xcca002_3 LIKE xcca_t.xcca002, 
   xcca006_3 LIKE xcca_t.xcca006, 
   xcca006_3_desc LIKE type_t.chr500, 
   xcca006_1_3_desc LIKE type_t.chr500, 
   xcca007_3 LIKE xcca_t.xcca007, 
   xcca101_3 LIKE xcca_t.xcca101, 
   xcca110a_3 LIKE xcca_t.xcca110a, 
   xcca110b_3 LIKE xcca_t.xcca110b, 
   xcca110c_3 LIKE xcca_t.xcca110c, 
   xcca110d_3 LIKE xcca_t.xcca110d, 
   xcca110e_3 LIKE xcca_t.xcca110e, 
   xcca110f_3 LIKE xcca_t.xcca110f, 
   xcca110g_3 LIKE xcca_t.xcca110g, 
   xcca110h_3 LIKE xcca_t.xcca110h, 
   xcca110_3 LIKE xcca_t.xcca110, 
   xcca102a_3 LIKE xcca_t.xcca102a, 
   xcca102b_3 LIKE xcca_t.xcca102b, 
   xcca102c_3 LIKE xcca_t.xcca102c, 
   xcca102d_3 LIKE xcca_t.xcca102d, 
   xcca102e_3 LIKE xcca_t.xcca102e, 
   xcca102f_3 LIKE xcca_t.xcca102f, 
   xcca102g_3 LIKE xcca_t.xcca102g, 
   xcca102h_3 LIKE xcca_t.xcca102h
       END RECORD
DEFINE g_xcca1_d          DYNAMIC ARRAY OF type_g_xcca1_d
DEFINE g_xcca1_d_t        type_g_xcca1_d
DEFINE g_xcca3_d          DYNAMIC ARRAY OF type_g_xcca3_d
DEFINE g_xcca3_d_t        type_g_xcca3_d
DEFINE g_current_idx1        LIKE type_t.num10          
DEFINE g_rec_b1              LIKE type_t.num5           
DEFINE l_ac1                 LIKE type_t.num5 
DEFINE g_current_idx3        LIKE type_t.num10          
DEFINE g_rec_b3              LIKE type_t.num5           
DEFINE l_ac3                 LIKE type_t.num5  
DEFINE g_detail_cnt1         LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx1         LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_cnt3         LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx3         LIKE type_t.num5              #單身目前所在筆數
DEFINE g_cnt1                LIKE type_t.num10
DEFINE g_cnt3                LIKE type_t.num10
DEFINE g_max_rec1            LIKE type_t.num10
DEFINE g_max_rec3            LIKE type_t.num10
DEFINE g_wc3                 STRING
DEFINE g_current_page        LIKE type_t.num5 
 type type_g_xcca_s        RECORD
       name LIKE type_t.chr80, 
   dir LIKE type_t.chr80
       END RECORD
DEFINE g_xcca_s        type_g_xcca_s
#單身 type 宣告
 TYPE type_g_xcca4_d        RECORD
   xccaent LIKE xcca_t.xccaent,
   xccald LIKE xcca_t.xccald,
   xccacomp LIKE xcca_t.xccacomp,
   xcca001 LIKE xcca_t.xcca001, 
   xcca002 LIKE xcca_t.xcca002, 
   xcca003 LIKE xcca_t.xcca003,
   xcca004 LIKE xcca_t.xcca004,
   xcca005 LIKE xcca_t.xcca005,
   xcca006 LIKE xcca_t.xcca006, 
   xcca007 LIKE xcca_t.xcca007,  
   xcca101 LIKE xcca_t.xcca101, 
   xcca110a LIKE xcca_t.xcca110a, 
   xcca110b LIKE xcca_t.xcca110b, 
   xcca110c LIKE xcca_t.xcca110c, 
   xcca110d LIKE xcca_t.xcca110d, 
   xcca110e LIKE xcca_t.xcca110e, 
   xcca110f LIKE xcca_t.xcca110f, 
   xcca110g LIKE xcca_t.xcca110g, 
   xcca110h LIKE xcca_t.xcca110h, 
   xcca110 LIKE xcca_t.xcca110, 
   xcca102a LIKE xcca_t.xcca102a, 
   xcca102b LIKE xcca_t.xcca102b, 
   xcca102c LIKE xcca_t.xcca102c, 
   xcca102d LIKE xcca_t.xcca102d, 
   xcca102e LIKE xcca_t.xcca102e, 
   xcca102f LIKE xcca_t.xcca102f, 
   xcca102g LIKE xcca_t.xcca102g, 
   xcca102h LIKE xcca_t.xcca102h,
   xcca102 LIKE xcca_t.xcca102,
   xcca110a_1 LIKE xcca_t.xcca110a, 
   xcca110b_1 LIKE xcca_t.xcca110b, 
   xcca110c_1 LIKE xcca_t.xcca110c, 
   xcca110d_1 LIKE xcca_t.xcca110d, 
   xcca110e_1 LIKE xcca_t.xcca110e, 
   xcca110f_1 LIKE xcca_t.xcca110f, 
   xcca110g_1 LIKE xcca_t.xcca110g, 
   xcca110h_1 LIKE xcca_t.xcca110h, 
   xcca110_1 LIKE xcca_t.xcca110, 
   xcca102a_1 LIKE xcca_t.xcca102a, 
   xcca102b_1 LIKE xcca_t.xcca102b, 
   xcca102c_1 LIKE xcca_t.xcca102c, 
   xcca102d_1 LIKE xcca_t.xcca102d, 
   xcca102e_1 LIKE xcca_t.xcca102e, 
   xcca102f_1 LIKE xcca_t.xcca102f, 
   xcca102g_1 LIKE xcca_t.xcca102g, 
   xcca102h_1 LIKE xcca_t.xcca102h,
   xcca102_1 LIKE xcca_t.xcca102,
   xcca110a_2 LIKE xcca_t.xcca110a, 
   xcca110b_2 LIKE xcca_t.xcca110b, 
   xcca110c_2 LIKE xcca_t.xcca110c, 
   xcca110d_2 LIKE xcca_t.xcca110d, 
   xcca110e_2 LIKE xcca_t.xcca110e, 
   xcca110f_2 LIKE xcca_t.xcca110f, 
   xcca110g_2 LIKE xcca_t.xcca110g, 
   xcca110h_2 LIKE xcca_t.xcca110h, 
   xcca110_2 LIKE xcca_t.xcca110, 
   xcca102a_2 LIKE xcca_t.xcca102a, 
   xcca102b_2 LIKE xcca_t.xcca102b, 
   xcca102c_2 LIKE xcca_t.xcca102c, 
   xcca102d_2 LIKE xcca_t.xcca102d, 
   xcca102e_2 LIKE xcca_t.xcca102e, 
   xcca102f_2 LIKE xcca_t.xcca102f, 
   xcca102g_2 LIKE xcca_t.xcca102g, 
   xcca102h_2 LIKE xcca_t.xcca102h,
   xcca102_2 LIKE xcca_t.xcca102
       END RECORD
DEFINE g_xcca4_d          DYNAMIC ARRAY OF type_g_xcca4_d
DEFINE w        ui.Window
DEFINE f        ui.Form
DEFINE page     om.DomNode
DEFINE l_success       LIKE type_t.num5]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.page1.xcca001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xcca_m.xccald IS NOT NULL AND g_xcca_m.xcca003 IS NOT NULL AND g_xcca_m.xcca004 IS NOT NULL AND g_xcca_m.xcca005 IS NOT NULL AND g_xcca_d[g_detail_idx].xcca001 IS NOT NULL AND g_xcca_d[g_detail_idx].xcca002 IS NOT NULL AND g_xcca_d[g_detail_idx].xcca006 IS NOT NULL AND g_xcca_d[g_detail_idx].xcca007 IS NOT NULL  THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcca_m.xccald != g_xccald_t OR g_xcca_m.xcca003 != g_xcca003_t OR g_xcca_m.xcca004 != g_xcca004_t OR g_xcca_m.xcca005 != g_xcca005_t OR g_xcca_d[g_detail_idx].xcca001 != g_xcca_d_t.xcca001 OR g_xcca_d[g_detail_idx].xcca002 != g_xcca_d_t.xcca002 OR g_xcca_d[g_detail_idx].xcca006 != g_xcca_d_t.xcca006 OR g_xcca_d[g_detail_idx].xcca007 != g_xcca_d_t.xcca007 )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcca_t WHERE "||"xccaent = '" ||g_enterprise|| "' AND "||"xccald = '"||g_xcca_m.xccald ||"' AND "|| "xcca003 = '"||g_xcca_m.xcca003 ||"' AND "|| "xcca004 = '"||g_xcca_m.xcca004 ||"' AND "|| "xcca005 = '"||g_xcca_m.xcca005 ||"' AND "|| "xcca001 = '"||g_xcca_d[g_detail_idx].xcca001 ||"' AND "|| "xcca002 = '"||g_xcca_d[g_detail_idx].xcca002 ||"' AND "|| "xcca006 = '"||g_xcca_d[g_detail_idx].xcca006 ||"' AND "|| "xcca007 = '"||g_xcca_d[g_detail_idx].xcca007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.xcca002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xcca_m.xccald IS NOT NULL AND g_xcca_m.xcca003 IS NOT NULL AND g_xcca_m.xcca004 IS NOT NULL AND g_xcca_m.xcca005 IS NOT NULL AND g_xcca_d[g_detail_idx].xcca002 IS NOT NULL AND g_xcca_d[g_detail_idx].xcca006 IS NOT NULL AND g_xcca_d[g_detail_idx].xcca007 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcca_m.xccald != g_xccald_t OR g_xcca_m.xcca003 != g_xcca003_t OR g_xcca_m.xcca004 != g_xcca004_t OR g_xcca_m.xcca005 != g_xcca005_t OR g_xcca_d[g_detail_idx].xcca002 != g_xcca_d_t.xcca002 OR g_xcca_d[g_detail_idx].xcca006 != g_xcca_d_t.xcca006 OR g_xcca_d[g_detail_idx].xcca007 != g_xcca_d_t.xcca007 )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcca_t WHERE "||"xccaent = '" ||g_enterprise|| "' AND "||"xccald = '"||g_xcca_m.xccald ||"' AND "|| "xcca003 = '"||g_xcca_m.xcca003 ||"' AND "|| "xcca004 = '"||g_xcca_m.xcca004 ||"' AND "|| "xcca005 = '"||g_xcca_m.xcca005 ||"' AND "|| "xcca002 = '"||g_xcca_d[g_detail_idx].xcca002 ||"' AND "|| "xcca006 = '"||g_xcca_d[g_detail_idx].xcca006 ||"' AND "|| "xcca007 = '"||g_xcca_d[g_detail_idx].xcca007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_xcca_d[g_detail_idx].xcca002) THEN
               LET l_n = 0 
               SELECT COUNT(*) INTO l_n FROM xcbf_t
                WHERE xcbfent = g_enterprise AND xcbf001 = g_xcca_d[g_detail_idx].xcca002
                  AND xcbfcomp = g_xcca_m.xccacomp
               IF l_n = 0 THEN
                  CALL cl_err(g_xcca_d[g_detail_idx].xcca002,'axc-00222',0)
                  NEXT FIELD CURRENT
               END IF
            END IF
]]>
  </point>
  <point name="input.a.page1.xcca006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xcca_d[l_ac].xcca006
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaalent.imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xcca_d[l_ac].xcca006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xcca_d[l_ac].xcca006_desc


            #此段落由子樣板a05產生
            IF  g_xcca_m.xccald IS NOT NULL AND g_xcca_m.xcca003 IS NOT NULL AND g_xcca_m.xcca004 IS NOT NULL AND g_xcca_m.xcca005 IS NOT NULL AND g_xcca_d[g_detail_idx].xcca002 IS NOT NULL AND g_xcca_d[g_detail_idx].xcca006 IS NOT NULL AND g_xcca_d[g_detail_idx].xcca007 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcca_m.xccald != g_xccald_t OR g_xcca_m.xcca003 != g_xcca003_t OR g_xcca_m.xcca004 != g_xcca004_t OR g_xcca_m.xcca005 != g_xcca005_t OR g_xcca_d[g_detail_idx].xcca002 != g_xcca_d_t.xcca002 OR g_xcca_d[g_detail_idx].xcca006 != g_xcca_d_t.xcca006 OR g_xcca_d[g_detail_idx].xcca007 != g_xcca_d_t.xcca007 )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcca_t WHERE "||"xccaent = '" ||g_enterprise|| "' AND "||"xccald = '"||g_xcca_m.xccald ||"' AND "|| "xcca003 = '"||g_xcca_m.xcca003 ||"' AND "|| "xcca004 = '"||g_xcca_m.xcca004 ||"' AND "|| "xcca005 = '"||g_xcca_m.xcca005 ||"' AND "|| "xcca002 = '"||g_xcca_d[g_detail_idx].xcca002 ||"' AND "|| "xcca006 = '"||g_xcca_d[g_detail_idx].xcca006 ||"' AND "|| "xcca007 = '"||g_xcca_d[g_detail_idx].xcca007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_xcca_m.xccacomp) AND NOT cl_null(g_xcca_d[g_detail_idx].xcca006) THEN
               LET l_n = 0 
               SELECT COUNT(*) INTO l_n FROM imag_t,imaa_t
                WHERE imagent = imaaent AND imag001 = imaa001 AND imagent = g_enterprise  
                  AND imag001 = g_xcca_d[g_detail_idx].xcca006 AND imagstus = 'Y'
               IF l_n = 0 THEN
                  LET g_xcca_d[g_detail_idx].xcca006 = g_xcca_d_t.xcca006
                  CALL axct300_xcca006_desc(g_xcca_d[g_detail_idx].xcca006) 
                    RETURNING g_xcca_d[g_detail_idx].xcca006_desc,g_xcca_d[g_detail_idx].xcca006_1_desc
                  CALL cl_err(g_xcca_d[g_detail_idx].xcca006,'aim-00101',0)
                  NEXT FIELD xcca006
               END IF
               
               LET l_n = 0 
               SELECT COUNT(*) INTO l_n FROM imag_t
                WHERE imagent = g_enterprise AND imag001 = g_xcca_d[g_detail_idx].xcca006 AND imagstus = 'Y'
                  AND imagsite NOT IN(SELECT ooef001 FROM ooef_t,ooee_t WHERE ooefent = ooeeent 
                  AND ooef001 = ooee001 AND ooee002 = '1' AND ooee003 = '2' 
                  AND ooef017 = g_xcca_m.xccacomp AND ooef003 = 'Y')
               IF l_n = 0 THEN
                  LET g_xcca_d[g_detail_idx].xcca006 = g_xcca_d_t.xcca006
                  CALL axct300_xcca006_desc(g_xcca_d[g_detail_idx].xcca006) 
                    RETURNING g_xcca_d[g_detail_idx].xcca006_desc,g_xcca_d[g_detail_idx].xcca006_1_desc
                  CALL cl_err(g_xcca_d[g_detail_idx].xcca006,'axc-00119',0)
                  NEXT FIELD xcca006
               END IF
            END IF
            CALL axct300_xcca006_desc(g_xcca_d[g_detail_idx].xcca006)
              RETURNING g_xcca_d[g_detail_idx].xcca006_desc,g_xcca_d[g_detail_idx].xcca006_1_desc]]>
  </point>
  <point name="input.a.page1.xcca007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xcca_m.xccald IS NOT NULL AND g_xcca_m.xcca003 IS NOT NULL AND g_xcca_m.xcca004 IS NOT NULL AND g_xcca_m.xcca005 IS NOT NULL AND g_xcca_d[g_detail_idx].xcca002 IS NOT NULL AND g_xcca_d[g_detail_idx].xcca006 IS NOT NULL AND g_xcca_d[g_detail_idx].xcca007 IS NOT NULL  THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcca_m.xccald != g_xccald_t OR g_xcca_m.xcca003 != g_xcca003_t OR g_xcca_m.xcca004 != g_xcca004_t OR g_xcca_m.xcca005 != g_xcca005_t OR g_xcca_d[g_detail_idx].xcca002 != g_xcca_d_t.xcca002 OR g_xcca_d[g_detail_idx].xcca006 != g_xcca_d_t.xcca006 OR g_xcca_d[g_detail_idx].xcca007 != g_xcca_d_t.xcca007 )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcca_t WHERE "||"xccaent = '" ||g_enterprise|| "' AND "||"xccald = '"||g_xcca_m.xccald ||"' AND "|| "xcca003 = '"||g_xcca_m.xcca003 ||"' AND "|| "xcca004 = '"||g_xcca_m.xcca004 ||"' AND "|| "xcca005 = '"||g_xcca_m.xcca005 ||"' AND "|| "xcca002 = '"||g_xcca_d[g_detail_idx].xcca002 ||"' AND "|| "xcca006 = '"||g_xcca_d[g_detail_idx].xcca006 ||"' AND "|| "xcca007 = '"||g_xcca_d[g_detail_idx].xcca007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_xcca_d[g_detail_idx].xcca007) THEN
               LET l_n = 0 
               SELECT COUNT(*) INTO l_n FROM inag_t
                WHERE inagent = g_enterprise AND inag006 = g_xcca_d[g_detail_idx].xcca007
                  AND inag001 = g_xcca_d[g_detail_idx].xcca006
                  AND inagsite IN( SELECT ooef001 FROM ooef_t,ooee_t WHERE ooeeent = ooefent 
                  AND ooee001 = ooef001 AND ooefent = g_enterprise AND ooee002 = '1' AND ooee003 = '2'
                  AND ooef003 = 'Y' AND ooef017 = g_xcca_m.xccacomp)
               IF l_n = 0 THEN
                  CALL cl_err(g_xcca_d[g_detail_idx].xcca007,'axc-00223',0)
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET g_xcca_d[g_detail_idx].xcca007 = ' '
               LET g_xcca1_d[g_detail_idx].xcca007_1 = ' '
               LET g_xcca3_d[g_detail_idx].xcca007_3 = ' '
            END IF
]]>
  </point>
  <point name="input.a.page1.xcca008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xcca_m.xccald IS NOT NULL AND g_xcca_m.xcca003 IS NOT NULL AND g_xcca_m.xcca004 IS NOT NULL AND g_xcca_m.xcca005 IS NOT NULL AND g_xcca_d[g_detail_idx].xcca002 IS NOT NULL AND g_xcca_d[g_detail_idx].xcca006 IS NOT NULL AND g_xcca_d[g_detail_idx].xcca007 IS NOT NULL AND g_xcca_d[g_detail_idx].xcca008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcca_m.xccald != g_xccald_t OR g_xcca_m.xcca003 != g_xcca003_t OR g_xcca_m.xcca004 != g_xcca004_t OR g_xcca_m.xcca005 != g_xcca005_t OR g_xcca_d[g_detail_idx].xcca002 != g_xcca_d_t.xcca002 OR g_xcca_d[g_detail_idx].xcca006 != g_xcca_d_t.xcca006 OR g_xcca_d[g_detail_idx].xcca007 != g_xcca_d_t.xcca007 OR g_xcca_d[g_detail_idx].xcca008 != g_xcca_d_t.xcca008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcca_t WHERE "||"xccaent = '" ||g_enterprise|| "' AND "||"xccald = '"||g_xcca_m.xccald ||"' AND "|| "xcca003 = '"||g_xcca_m.xcca003 ||"' AND "|| "xcca004 = '"||g_xcca_m.xcca004 ||"' AND "|| "xcca005 = '"||g_xcca_m.xcca005 ||"' AND "|| "xcca002 = '"||g_xcca_d[g_detail_idx].xcca002 ||"' AND "|| "xcca006 = '"||g_xcca_d[g_detail_idx].xcca006 ||"' AND "|| "xcca007 = '"||g_xcca_d[g_detail_idx].xcca007 ||"' AND "|| "xcca008 = '"||g_xcca_d[g_detail_idx].xcca008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.xcca102a" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcca_d[l_ac].xcca102a) AND NOT cl_null(g_xcca_d[l_ac].xcca101) THEN
               LET g_xcca_d[l_ac].xcca110a = g_xcca_d[l_ac].xcca102a / g_xcca_d[l_ac].xcca101
            END IF
            CALL axct300_xcca110_sum()
            LET g_xcca_d[l_ac].xcca110a = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110a,1)
            LET g_xcca_d[l_ac].xcca102a = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca102a,2)
            LET g_xcca_d[l_ac].xcca110 = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110,1)]]>
  </point>
  <point name="input.a.page1.xcca102b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcca_d[l_ac].xcca102b) AND NOT cl_null(g_xcca_d[l_ac].xcca101) THEN
               LET g_xcca_d[l_ac].xcca110b = g_xcca_d[l_ac].xcca102b / g_xcca_d[l_ac].xcca101
            END IF
            CALL axct300_xcca110_sum()
            LET g_xcca_d[l_ac].xcca110b = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110b,1)
            LET g_xcca_d[l_ac].xcca102b = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca102b,2)
            LET g_xcca_d[l_ac].xcca110 = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110,1)]]>
  </point>
  <point name="input.a.page1.xcca102c" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcca_d[l_ac].xcca102c) AND NOT cl_null(g_xcca_d[l_ac].xcca101) THEN
               LET g_xcca_d[l_ac].xcca110c = g_xcca_d[l_ac].xcca102c / g_xcca_d[l_ac].xcca101
            END IF
            CALL axct300_xcca110_sum()
            LET g_xcca_d[l_ac].xcca110c = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110c,1)
            LET g_xcca_d[l_ac].xcca102c = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca102c,2)
            LET g_xcca_d[l_ac].xcca110 = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110,1)]]>
  </point>
  <point name="input.a.page1.xcca102d" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcca_d[l_ac].xcca102d) AND NOT cl_null(g_xcca_d[l_ac].xcca101) THEN
               LET g_xcca_d[l_ac].xcca110d = g_xcca_d[l_ac].xcca102d / g_xcca_d[l_ac].xcca101
            END IF
            CALL axct300_xcca110_sum()
            LET g_xcca_d[l_ac].xcca110d = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110d,1)
            LET g_xcca_d[l_ac].xcca102d = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca102d,2)
            LET g_xcca_d[l_ac].xcca110 = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110,1)]]>
  </point>
  <point name="input.a.page1.xcca102e" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcca_d[l_ac].xcca102e) AND NOT cl_null(g_xcca_d[l_ac].xcca101) THEN
               LET g_xcca_d[l_ac].xcca110e = g_xcca_d[l_ac].xcca102e / g_xcca_d[l_ac].xcca101
            END IF
            CALL axct300_xcca110_sum()
            LET g_xcca_d[l_ac].xcca110e = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110e,1)
            LET g_xcca_d[l_ac].xcca102e = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca102e,2)
            LET g_xcca_d[l_ac].xcca110 = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110,1)]]>
  </point>
  <point name="input.a.page1.xcca102f" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcca_d[l_ac].xcca102f) AND NOT cl_null(g_xcca_d[l_ac].xcca101) THEN
               LET g_xcca_d[l_ac].xcca110f = g_xcca_d[l_ac].xcca102f / g_xcca_d[l_ac].xcca101
            END IF
            CALL axct300_xcca110_sum()
            LET g_xcca_d[l_ac].xcca110f = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110f,1)
            LET g_xcca_d[l_ac].xcca102f = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca102f,2)
            LET g_xcca_d[l_ac].xcca110 = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110,1)]]>
  </point>
  <point name="input.a.page1.xcca102g" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcca_d[l_ac].xcca102g) AND NOT cl_null(g_xcca_d[l_ac].xcca101) THEN
               LET g_xcca_d[l_ac].xcca110g = g_xcca_d[l_ac].xcca102g / g_xcca_d[l_ac].xcca101
            END IF
            CALL axct300_xcca110_sum()
            LET g_xcca_d[l_ac].xcca110g = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110g,1)
            LET g_xcca_d[l_ac].xcca102g = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca102g,2)
            LET g_xcca_d[l_ac].xcca110 = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110,1)]]>
  </point>
  <point name="input.a.page1.xcca102h" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcca_d[l_ac].xcca102h) AND NOT cl_null(g_xcca_d[l_ac].xcca101) THEN
               LET g_xcca_d[l_ac].xcca110h = g_xcca_d[l_ac].xcca102h / g_xcca_d[l_ac].xcca101
            END IF
            CALL axct300_xcca110_sum()
            LET g_xcca_d[l_ac].xcca110h = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110h,1)
            LET g_xcca_d[l_ac].xcca102h = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca102h,2)
            LET g_xcca_d[l_ac].xcca110 = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110,1)]]>
  </point>
  <point name="input.a.page1.xcca110a" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcca_d[l_ac].xcca110a) AND NOT cl_null(g_xcca_d[l_ac].xcca101) THEN
               LET g_xcca_d[l_ac].xcca102a = g_xcca_d[l_ac].xcca110a * g_xcca_d[l_ac].xcca101
            END IF
            CALL axct300_xcca110_sum()
            LET g_xcca_d[l_ac].xcca110a = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110a,1)
            LET g_xcca_d[l_ac].xcca102a = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca102a,2)
            LET g_xcca_d[l_ac].xcca110 = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110,1)]]>
  </point>
  <point name="input.a.page1.xcca110b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcca_d[l_ac].xcca110b) AND NOT cl_null(g_xcca_d[l_ac].xcca101) THEN
               LET g_xcca_d[l_ac].xcca102b = g_xcca_d[l_ac].xcca110b * g_xcca_d[l_ac].xcca101
            END IF
            CALL axct300_xcca110_sum()
            LET g_xcca_d[l_ac].xcca110b = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110b,1)
            LET g_xcca_d[l_ac].xcca102b = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca102b,2)
            LET g_xcca_d[l_ac].xcca110 = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110,1)]]>
  </point>
  <point name="input.a.page1.xcca110c" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcca_d[l_ac].xcca110c) AND NOT cl_null(g_xcca_d[l_ac].xcca101) THEN
               LET g_xcca_d[l_ac].xcca102c = g_xcca_d[l_ac].xcca110c * g_xcca_d[l_ac].xcca101
            END IF
            CALL axct300_xcca110_sum()
            LET g_xcca_d[l_ac].xcca110c = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110c,1)
            LET g_xcca_d[l_ac].xcca102c = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca102c,2)
            LET g_xcca_d[l_ac].xcca110 = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110,1)]]>
  </point>
  <point name="input.a.page1.xcca110d" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcca_d[l_ac].xcca110d) AND NOT cl_null(g_xcca_d[l_ac].xcca101) THEN
               LET g_xcca_d[l_ac].xcca102d = g_xcca_d[l_ac].xcca110d * g_xcca_d[l_ac].xcca101
            END IF
            CALL axct300_xcca110_sum()
            LET g_xcca_d[l_ac].xcca110d = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110d,1)
            LET g_xcca_d[l_ac].xcca102d = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca102d,2)
            LET g_xcca_d[l_ac].xcca110 = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110,1)]]>
  </point>
  <point name="input.a.page1.xcca110e" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcca_d[l_ac].xcca110e) AND NOT cl_null(g_xcca_d[l_ac].xcca101) THEN
               LET g_xcca_d[l_ac].xcca102e = g_xcca_d[l_ac].xcca110e * g_xcca_d[l_ac].xcca101
            END IF
            CALL axct300_xcca110_sum()
            LET g_xcca_d[l_ac].xcca110e = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110e,1)
            LET g_xcca_d[l_ac].xcca102e = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca102e,2)
            LET g_xcca_d[l_ac].xcca110 = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110,1)]]>
  </point>
  <point name="input.a.page1.xcca110f" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcca_d[l_ac].xcca110f) AND NOT cl_null(g_xcca_d[l_ac].xcca101) THEN
               LET g_xcca_d[l_ac].xcca102f = g_xcca_d[l_ac].xcca110f * g_xcca_d[l_ac].xcca101
            END IF
            CALL axct300_xcca110_sum()
            LET g_xcca_d[l_ac].xcca110f = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110f,1)
            LET g_xcca_d[l_ac].xcca102f = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca102f,2)
            LET g_xcca_d[l_ac].xcca110 = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110,1)]]>
  </point>
  <point name="input.a.page1.xcca110g" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcca_d[l_ac].xcca110g) AND NOT cl_null(g_xcca_d[l_ac].xcca101) THEN
               LET g_xcca_d[l_ac].xcca102g = g_xcca_d[l_ac].xcca110g * g_xcca_d[l_ac].xcca101
            END IF
            CALL axct300_xcca110_sum()
            LET g_xcca_d[l_ac].xcca110g = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110g,1)
            LET g_xcca_d[l_ac].xcca102g = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca102g,2)
            LET g_xcca_d[l_ac].xcca110 = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110,1)]]>
  </point>
  <point name="input.a.page1.xcca110h" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcca_d[l_ac].xcca110h) AND NOT cl_null(g_xcca_d[l_ac].xcca101) THEN
               LET g_xcca_d[l_ac].xcca102h = g_xcca_d[l_ac].xcca110h * g_xcca_d[l_ac].xcca101
            END IF
            CALL axct300_xcca110_sum()
            LET g_xcca_d[l_ac].xcca110h = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110h,1)
            LET g_xcca_d[l_ac].xcca102h = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca102h,2)
            LET g_xcca_d[l_ac].xcca110 = s_curr_round(g_xcca_m.xccacomp,g_glaa001,g_xcca_d[l_ac].xcca110,1)]]>
  </point>
  <point name="input.a.page2.xcca001_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xcca_m.xccald IS NOT NULL AND g_xcca_m.xcca003 IS NOT NULL AND g_xcca_m.xcca004 IS NOT NULL AND g_xcca_m.xcca005 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca001 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca002 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca006 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca007 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcca_m.xccald != g_xccald_t OR g_xcca_m.xcca003 != g_xcca003_t OR g_xcca_m.xcca004 != g_xcca004_t OR g_xcca_m.xcca005 != g_xcca005_t OR g_xcca2_d[g_detail_idx].xcca001 != g_xcca2_d_t.xcca001 OR g_xcca2_d[g_detail_idx].xcca002 != g_xcca2_d_t.xcca002 OR g_xcca2_d[g_detail_idx].xcca006 != g_xcca2_d_t.xcca006 OR g_xcca2_d[g_detail_idx].xcca007 != g_xcca2_d_t.xcca007 OR g_xcca2_d[g_detail_idx].xcca008 != g_xcca2_d_t.xcca008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcca_t WHERE "||"xccaent = '" ||g_enterprise|| "' AND "||"xccald = '"||g_xcca_m.xccald ||"' AND "|| "xcca003 = '"||g_xcca_m.xcca003 ||"' AND "|| "xcca004 = '"||g_xcca_m.xcca004 ||"' AND "|| "xcca005 = '"||g_xcca_m.xcca005 ||"' AND "|| "xcca001 = '"||g_xcca2_d[g_detail_idx].xcca001 ||"' AND "|| "xcca002 = '"||g_xcca2_d[g_detail_idx].xcca002 ||"' AND "|| "xcca006 = '"||g_xcca2_d[g_detail_idx].xcca006 ||"' AND "|| "xcca007 = '"||g_xcca2_d[g_detail_idx].xcca007 ||"' AND "|| "xcca008 = '"||g_xcca2_d[g_detail_idx].xcca008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.xcca002_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xcca_m.xccald IS NOT NULL AND g_xcca_m.xcca001 IS NOT NULL AND g_xcca_m.xcca003 IS NOT NULL AND g_xcca_m.xcca004 IS NOT NULL AND g_xcca_m.xcca005 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca002 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca006 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca007 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcca_m.xccald != g_xccald_t OR g_xcca_m.xcca001 != g_xcca001_t OR g_xcca_m.xcca003 != g_xcca003_t OR g_xcca_m.xcca004 != g_xcca004_t OR g_xcca_m.xcca005 != g_xcca005_t OR g_xcca2_d[g_detail_idx].xcca002 != g_xcca2_d_t.xcca002 OR g_xcca2_d[g_detail_idx].xcca006 != g_xcca2_d_t.xcca006 OR g_xcca2_d[g_detail_idx].xcca007 != g_xcca2_d_t.xcca007 OR g_xcca2_d[g_detail_idx].xcca008 != g_xcca2_d_t.xcca008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcca_t WHERE "||"xccaent = '" ||g_enterprise|| "' AND "||"xccald = '"||g_xcca_m.xccald ||"' AND "|| "xcca001 = '"||g_xcca_m.xcca001 ||"' AND "|| "xcca003 = '"||g_xcca_m.xcca003 ||"' AND "|| "xcca004 = '"||g_xcca_m.xcca004 ||"' AND "|| "xcca005 = '"||g_xcca_m.xcca005 ||"' AND "|| "xcca002 = '"||g_xcca2_d[g_detail_idx].xcca002 ||"' AND "|| "xcca006 = '"||g_xcca2_d[g_detail_idx].xcca006 ||"' AND "|| "xcca007 = '"||g_xcca2_d[g_detail_idx].xcca007 ||"' AND "|| "xcca008 = '"||g_xcca2_d[g_detail_idx].xcca008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.xcca006_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xcca_m.xccald IS NOT NULL AND g_xcca_m.xcca001 IS NOT NULL AND g_xcca_m.xcca003 IS NOT NULL AND g_xcca_m.xcca004 IS NOT NULL AND g_xcca_m.xcca005 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca002 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca006 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca007 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcca_m.xccald != g_xccald_t OR g_xcca_m.xcca001 != g_xcca001_t OR g_xcca_m.xcca003 != g_xcca003_t OR g_xcca_m.xcca004 != g_xcca004_t OR g_xcca_m.xcca005 != g_xcca005_t OR g_xcca2_d[g_detail_idx].xcca002 != g_xcca2_d_t.xcca002 OR g_xcca2_d[g_detail_idx].xcca006 != g_xcca2_d_t.xcca006 OR g_xcca2_d[g_detail_idx].xcca007 != g_xcca2_d_t.xcca007 OR g_xcca2_d[g_detail_idx].xcca008 != g_xcca2_d_t.xcca008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcca_t WHERE "||"xccaent = '" ||g_enterprise|| "' AND "||"xccald = '"||g_xcca_m.xccald ||"' AND "|| "xcca001 = '"||g_xcca_m.xcca001 ||"' AND "|| "xcca003 = '"||g_xcca_m.xcca003 ||"' AND "|| "xcca004 = '"||g_xcca_m.xcca004 ||"' AND "|| "xcca005 = '"||g_xcca_m.xcca005 ||"' AND "|| "xcca002 = '"||g_xcca2_d[g_detail_idx].xcca002 ||"' AND "|| "xcca006 = '"||g_xcca2_d[g_detail_idx].xcca006 ||"' AND "|| "xcca007 = '"||g_xcca2_d[g_detail_idx].xcca007 ||"' AND "|| "xcca008 = '"||g_xcca2_d[g_detail_idx].xcca008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.xcca007_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xcca_m.xccald IS NOT NULL AND g_xcca_m.xcca001 IS NOT NULL AND g_xcca_m.xcca003 IS NOT NULL AND g_xcca_m.xcca004 IS NOT NULL AND g_xcca_m.xcca005 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca002 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca006 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca007 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcca_m.xccald != g_xccald_t OR g_xcca_m.xcca001 != g_xcca001_t OR g_xcca_m.xcca003 != g_xcca003_t OR g_xcca_m.xcca004 != g_xcca004_t OR g_xcca_m.xcca005 != g_xcca005_t OR g_xcca2_d[g_detail_idx].xcca002 != g_xcca2_d_t.xcca002 OR g_xcca2_d[g_detail_idx].xcca006 != g_xcca2_d_t.xcca006 OR g_xcca2_d[g_detail_idx].xcca007 != g_xcca2_d_t.xcca007 OR g_xcca2_d[g_detail_idx].xcca008 != g_xcca2_d_t.xcca008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcca_t WHERE "||"xccaent = '" ||g_enterprise|| "' AND "||"xccald = '"||g_xcca_m.xccald ||"' AND "|| "xcca001 = '"||g_xcca_m.xcca001 ||"' AND "|| "xcca003 = '"||g_xcca_m.xcca003 ||"' AND "|| "xcca004 = '"||g_xcca_m.xcca004 ||"' AND "|| "xcca005 = '"||g_xcca_m.xcca005 ||"' AND "|| "xcca002 = '"||g_xcca2_d[g_detail_idx].xcca002 ||"' AND "|| "xcca006 = '"||g_xcca2_d[g_detail_idx].xcca006 ||"' AND "|| "xcca007 = '"||g_xcca2_d[g_detail_idx].xcca007 ||"' AND "|| "xcca008 = '"||g_xcca2_d[g_detail_idx].xcca008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.xcca008_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xcca_m.xccald IS NOT NULL AND g_xcca_m.xcca001 IS NOT NULL AND g_xcca_m.xcca003 IS NOT NULL AND g_xcca_m.xcca004 IS NOT NULL AND g_xcca_m.xcca005 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca002 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca006 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca007 IS NOT NULL AND g_xcca2_d[g_detail_idx].xcca008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xcca_m.xccald != g_xccald_t OR g_xcca_m.xcca001 != g_xcca001_t OR g_xcca_m.xcca003 != g_xcca003_t OR g_xcca_m.xcca004 != g_xcca004_t OR g_xcca_m.xcca005 != g_xcca005_t OR g_xcca2_d[g_detail_idx].xcca002 != g_xcca2_d_t.xcca002 OR g_xcca2_d[g_detail_idx].xcca006 != g_xcca2_d_t.xcca006 OR g_xcca2_d[g_detail_idx].xcca007 != g_xcca2_d_t.xcca007 OR g_xcca2_d[g_detail_idx].xcca008 != g_xcca2_d_t.xcca008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcca_t WHERE "||"xccaent = '" ||g_enterprise|| "' AND "||"xccald = '"||g_xcca_m.xccald ||"' AND "|| "xcca001 = '"||g_xcca_m.xcca001 ||"' AND "|| "xcca003 = '"||g_xcca_m.xcca003 ||"' AND "|| "xcca004 = '"||g_xcca_m.xcca004 ||"' AND "|| "xcca005 = '"||g_xcca_m.xcca005 ||"' AND "|| "xcca002 = '"||g_xcca2_d[g_detail_idx].xcca002 ||"' AND "|| "xcca006 = '"||g_xcca2_d[g_detail_idx].xcca006 ||"' AND "|| "xcca007 = '"||g_xcca2_d[g_detail_idx].xcca007 ||"' AND "|| "xcca008 = '"||g_xcca2_d[g_detail_idx].xcca008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.xcca001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcca_m.xccald) AND NOT cl_null(g_xcca_m.xcca001) AND NOT cl_null(g_xcca_m.xcca003) AND NOT cl_null(g_xcca_m.xcca004) AND NOT cl_null(g_xcca_m.xcca005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcca_m.xccald != g_xccald_t  OR g_xcca_m.xcca001 != g_xcca001_t  OR g_xcca_m.xcca003 != g_xcca003_t  OR g_xcca_m.xcca004 != g_xcca004_t  OR g_xcca_m.xcca005 != g_xcca005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcca_t WHERE "||"xccaent = '" ||g_enterprise|| "' AND "||"xccald = '"||g_xcca_m.xccald ||"' AND "|| "xcca001 = '"||g_xcca_m.xcca001 ||"' AND "|| "xcca003 = '"||g_xcca_m.xcca003 ||"' AND "|| "xcca004 = '"||g_xcca_m.xcca004 ||"' AND "|| "xcca005 = '"||g_xcca_m.xcca005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL axct300_xcca001_ref()


]]>
  </point>
  <point name="input.a.xcca003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcca_m.xccald) AND NOT cl_null(g_xcca_m.xcca003) AND NOT cl_null(g_xcca_m.xcca004) AND NOT cl_null(g_xcca_m.xcca005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcca_m.xccald != g_xccald_t  OR g_xcca_m.xcca003 != g_xcca003_t  OR g_xcca_m.xcca004 != g_xcca004_t  OR g_xcca_m.xcca005 != g_xcca005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcca_t WHERE "||"xccaent = '" ||g_enterprise|| "' AND "||"xccald = '"||g_xcca_m.xccald ||"' AND "|| "xcca003 = '"||g_xcca_m.xcca003 ||"' AND "|| "xcca004 = '"||g_xcca_m.xcca004 ||"' AND "|| "xcca005 = '"||g_xcca_m.xcca005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_xcca_m.xcca003) THEN
#此段落由子樣板a19產生
              #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
              INITIALIZE g_chkparam.* TO NULL

              #設定g_chkparam.*的參數
              LET g_chkparam.arg1 = g_xcca_m.xcca003


              #呼叫檢查存在並帶值的library
              IF cl_chk_exist("v_xcat001") THEN
                 #檢查成功時後續處理
                 #LET  = g_chkparam.return1
                 #DISPLAY BY NAME 
              ELSE
                 #檢查失敗時後續處理
                 LET g_xcca_m.xcca003 = g_xcca_m_t.xcca003
                 CALL axct300_xcca003_desc()
                 NEXT FIELD CURRENT
              END IF

           END IF
]]>
  </point>
  <point name="input.a.xcca004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcca_m.xccald)  AND NOT cl_null(g_xcca_m.xcca003) AND NOT cl_null(g_xcca_m.xcca004) AND NOT cl_null(g_xcca_m.xcca005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcca_m.xccald != g_xccald_t   OR g_xcca_m.xcca003 != g_xcca003_t  OR g_xcca_m.xcca004 != g_xcca004_t  OR g_xcca_m.xcca005 != g_xcca005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcca_t WHERE "||"xccaent = '" ||g_enterprise|| "' AND "||"xccald = '"||g_xcca_m.xccald ||"' AND "|| "xcca003 = '"||g_xcca_m.xcca003 ||"' AND "|| "xcca004 = '"||g_xcca_m.xcca004 ||"' AND "|| "xcca005 = '"||g_xcca_m.xcca005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_xcca_m.xcca004) THEN
               IF NOT s_fin_date_chk_year(g_xcca_m.xcca004) THEN
                  LET g_xcca_m.xcca004 = g_xcca_m_t.xcca004
                  DISPLAY BY NAME g_xcca_m.xcca004
                  CALL cl_err(g_xcca_m.xcca004,'aoo-00113',1)
                  NEXT FIELD CURRENT
               END IF
                                                    
            END IF  
            IF NOT cl_null(g_xcca_m.xcca004) AND NOT cl_null(g_xcca_m.xccacomp) THEN
               #檢查年度不小於成本關賬日期的年度
               CALL cl_get_para(g_enterprise,g_xcca_m.xccacomp,'S-FIN-6012') RETURNING l_date
               IF g_xcca_m.xcca004 < YEAR(l_date) THEN
                  LET g_xcca_m.xcca004 = g_xcca004_t
                  CALL cl_err('','axc-00226',1)
                  NEXT FIELD CURRENT
               END IF
            END IF
            IF NOT cl_null(g_xcca_m.xcca004) AND NOT cl_null(g_xcca_m.xcca005) THEN
               CALL s_fin_date_get_period_range(g_glaa003,g_xcca_m.xcca004,g_xcca_m.xcca005)
                   RETURNING l_bdate,l_edate               
            END IF
]]>
  </point>
  <point name="input.a.xcca005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcca_m.xccald) AND NOT cl_null(g_xcca_m.xcca003) AND NOT cl_null(g_xcca_m.xcca004) AND NOT cl_null(g_xcca_m.xcca005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcca_m.xccald != g_xccald_t  OR g_xcca_m.xcca003 != g_xcca003_t  OR g_xcca_m.xcca004 != g_xcca004_t  OR g_xcca_m.xcca005 != g_xcca005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcca_t WHERE "||"xccaent = '" ||g_enterprise|| "' AND "||"xccald = '"||g_xcca_m.xccald ||"' AND "|| "xcca003 = '"||g_xcca_m.xcca003 ||"' AND "|| "xcca004 = '"||g_xcca_m.xcca004 ||"' AND "|| "xcca005 = '"||g_xcca_m.xcca005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_xcca_m.xcca005) THEN                      
               IF NOT s_fin_date_chk_period(g_glaa003,g_xcca_m.xcca004,g_xcca_m.xcca005) THEN
                  LET g_xcca_m.xcca005 = g_xcca_m_t.xcca005
                  DISPLAY BY NAME g_xcca_m.xcca005
                  CALL cl_err(g_xcca_m.xcca005,'amm-00106',1)
                  NEXT FIELD CURRENT
               END IF
            END IF
            
            IF NOT cl_null(g_xcca_m.xcca005) AND NOT cl_null(g_xcca_m.xccacomp) THEN
               #檢查期別不小於成本關賬日期的月份
               CALL cl_get_para(g_enterprise,g_xcca_m.xccacomp,'S-FIN-6012') RETURNING l_date
               IF g_xcca_m.xcca005 <= MONTH(l_date) THEN
                  LET g_xcca_m.xcca005 = g_xcca005_t
                  CALL cl_err('','axc-00226',1)
                  NEXT FIELD CURRENT
               END IF
            END IF
            
            IF NOT cl_null(g_xcca_m.xcca004) AND NOT cl_null(g_xcca_m.xcca005) THEN
               CALL s_fin_date_get_period_range(g_glaa003,g_xcca_m.xcca004,g_xcca_m.xcca005)
                   RETURNING l_bdate,l_edate               
            END IF 
]]>
  </point>
  <point name="input.a.xccacomp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_xcca_m.xccacomp) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcca_m.xccacomp

               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist('v_ooef001_15') THEN
                  #檢查失敗時後續處理
                  LET g_xcca_m.xccacomp = g_xcca_m_t.xccacomp
                  CALL axct300_xccacomp_desc() 
                  NEXT FIELD xccacomp
               END IF
               IF NOT cl_null(g_xcca_m.xccald) THEN
                  LET l_n = 0
                  SELECT COUNT(*) INTO l_n FROM glaa_t 
                   WHERE glaaent = g_enterprise AND glaald = g_xcca_m.xccald
                     AND glaacomp = g_xcca_m.xccacomp
                  IF l_n = 0 THEN
                     CALL cl_err(g_xcca_m_t.xccacomp,'axc-00224',0)
                     CALL axct300_xccacomp_desc() 
                     NEXT FIELD xccald
                  END IF
               END IF
               IF p_cmd = 'a' THEN
                  CALL cl_get_para(g_enterprise,g_xcca_m.xccacomp,'S-FIN-6010') RETURNING g_xcca_m.xcca004
                  CALL cl_get_para(g_enterprise,g_xcca_m.xccacomp,'S-FIN-6011') RETURNING g_xcca_m.xcca005
               END IF
                  DISPLAY BY NAME g_xcca_m.xcca004,g_xcca_m.xcca005
               CALL axct300_xccacomp_desc()        {#ADP版次:1#}
               
               
                                                    
            END IF ]]>
  </point>
  <point name="input.a.xccald" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xcca_m.xccald)  AND NOT cl_null(g_xcca_m.xcca003) AND NOT cl_null(g_xcca_m.xcca004) AND NOT cl_null(g_xcca_m.xcca005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xcca_m.xccald != g_xccald_t  OR g_xcca_m.xcca003 != g_xcca003_t  OR g_xcca_m.xcca004 != g_xcca004_t  OR g_xcca_m.xcca005 != g_xcca005_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xcca_t WHERE "||"xccaent = '" ||g_enterprise|| "' AND "||"xccald = '"||g_xcca_m.xccald ||"' AND "|| "xcca003 = '"||g_xcca_m.xcca003 ||"' AND "|| "xcca004 = '"||g_xcca_m.xcca004 ||"' AND "|| "xcca005 = '"||g_xcca_m.xcca005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

           IF NOT cl_null(g_xcca_m.xccald) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xcca_m.xccald

               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist('v_glaald') THEN
                  #檢查失敗時後續處理
                  LET g_xcca_m.xccald = g_xcca_m_t.xccald
                  CALL axct300_xccald_desc()
                  NEXT FIELD xccald
               END IF
               
               IF NOT cl_null(g_xcca_m.xccacomp) THEN
                  LET l_n = 0
                  SELECT COUNT(*) INTO l_n FROM glaa_t 
                   WHERE glaaent = g_enterprise AND glaacomp = g_xcca_m.xccacomp
                     AND glaald = g_xcca_m.xccald
                  IF l_n = 0 THEN
                     CALL axct300_xccald_desc()
                     CALL cl_err(g_xcca_m.xccald,'axc-00225',0)
                     NEXT FIELD xccald
                  END IF
               END IF
               
               IF NOT s_ld_chk_authorization(g_user,g_xcca_m.xccald) THEN
                  CALL axct300_xccald_desc()
                  CALL cl_err(g_xcca_m.xccald,'agl-00165',0)
                  NEXT FIELD xccald
               END IF
               CALL axct300_xccald_desc()
               SELECT glaa001,glaa015,glaa016,glaa018,glaa019,glaa020,glaa022 
                 INTO g_glaa001,g_glaa015,g_glaa016,g_glaa018,g_glaa019,g_glaa020,g_glaa022 
                 FROM glaa_t
                WHERE glaaent = g_enterprise AND glaald = g_xcca_m.xccald
                
               IF g_glaa015 = 'N' THEN
                  CALL cl_set_comp_visible('bpage_2',FALSE)
               ELSE
                  CALL cl_set_comp_visible('bpage_2',TRUE)
               END IF
               IF g_glaa019 = 'N' THEN
                  CALL cl_set_comp_visible('bpage_3',FALSE)
               ELSE
                  CALL cl_set_comp_visible('bpage_3',TRUE)
               END IF     
                                 
            END IF
]]>
  </point>
  <point name="input.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xccacomp
        ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xcca002
               WHEN "s_detail2"
                  NEXT FIELD xcca002_2
 
            END CASE
         END IF]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xcca_d[l_ac].xcca001 = '1']]>
  </point>
  <point name="input.body.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL axct300_ins_xcca()]]>
  </point>
  <point name="input.body.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               UPDATE xcca_t SET xcca110 = g_xcca_d[l_ac].xcca110
                 WHERE xccaent = g_enterprise AND xccald = g_xcca_m.xccald 
                 AND xcca003 = g_xcca_m.xcca003 
                 AND xcca004 = g_xcca_m.xcca004 
                 AND xcca005 = g_xcca_m.xcca005 
 
                 AND xcca001 = g_xcca_d_t.xcca001 #項次   
                 AND xcca002 = g_xcca_d_t.xcca002  
                 AND xcca006 = g_xcca_d_t.xcca006  
                 AND xcca007 = g_xcca_d_t.xcca007  
                 
               IF g_glaa015 = 'Y' THEN
                  CALL s_aooi160_get_exrate('1',g_xcca_m.xccacomp,l_bdate,g_glaa001,
                                                    #目的幣別;  交易金額;              匯類類型
                                                     g_glaa016,0,g_glaa018)
                              RETURNING l_rate
                  LET g_xcca1_d[l_ac].xcca002_1 = g_xcca_d[l_ac].xcca002
                  LET g_xcca1_d[l_ac].xcca006_1 = g_xcca_d[l_ac].xcca006
                  LET g_xcca1_d[l_ac].xcca007_1 = g_xcca_d[l_ac].xcca007
                  LET g_xcca1_d[l_ac].xcca101_1 = g_xcca_d[l_ac].xcca101
                  LET g_xcca1_d[l_ac].xcca110a_1 = g_xcca_d[l_ac].xcca110a * l_rate
                  LET g_xcca1_d[l_ac].xcca110b_1 = g_xcca_d[l_ac].xcca110b * l_rate
                  LET g_xcca1_d[l_ac].xcca110c_1 = g_xcca_d[l_ac].xcca110c * l_rate
                  LET g_xcca1_d[l_ac].xcca110d_1 = g_xcca_d[l_ac].xcca110d * l_rate
                  LET g_xcca1_d[l_ac].xcca110e_1 = g_xcca_d[l_ac].xcca110e * l_rate
                  LET g_xcca1_d[l_ac].xcca110f_1 = g_xcca_d[l_ac].xcca110f * l_rate
                  LET g_xcca1_d[l_ac].xcca110g_1 = g_xcca_d[l_ac].xcca110g * l_rate
                  LET g_xcca1_d[l_ac].xcca110h_1 = g_xcca_d[l_ac].xcca110h * l_rate
                  LET g_xcca1_d[l_ac].xcca102a_1 = g_xcca_d[l_ac].xcca110a * l_rate * g_xcca_d[l_ac].xcca101
                  LET g_xcca1_d[l_ac].xcca102b_1 = g_xcca_d[l_ac].xcca110b * l_rate * g_xcca_d[l_ac].xcca101
                  LET g_xcca1_d[l_ac].xcca102c_1 = g_xcca_d[l_ac].xcca110c * l_rate * g_xcca_d[l_ac].xcca101
                  LET g_xcca1_d[l_ac].xcca102d_1 = g_xcca_d[l_ac].xcca110d * l_rate * g_xcca_d[l_ac].xcca101
                  LET g_xcca1_d[l_ac].xcca102e_1 = g_xcca_d[l_ac].xcca110e * l_rate * g_xcca_d[l_ac].xcca101
                  LET g_xcca1_d[l_ac].xcca102f_1 = g_xcca_d[l_ac].xcca110f * l_rate * g_xcca_d[l_ac].xcca101
                  LET g_xcca1_d[l_ac].xcca102g_1 = g_xcca_d[l_ac].xcca110g * l_rate * g_xcca_d[l_ac].xcca101
                  LET g_xcca1_d[l_ac].xcca102h_1 = g_xcca_d[l_ac].xcca110h * l_rate * g_xcca_d[l_ac].xcca101
                  CALL axct300_xcca110_sum1()
                  UPDATE xcca_t SET (xccald,xcca003,xcca004,xcca005,xcca001,xcca002,xcca006,xcca007, 
                      xcca101,xcca110a,xcca110b,xcca110c,xcca110d,xcca110e,xcca110f,xcca110g,xcca110h,xcca110,xcca102a, 
                      xcca102b,xcca102c,xcca102d,xcca102e,xcca102f,xcca102g,xcca102h,xccaownid,xccaowndp, 
                      xccacrtid,xccacrtdp,xccacrtdt,xccamodid,xccamoddt,xccacnfid,xccacnfdt,xccapstid,xccapstdt) = (g_xcca_m.xccald, 
                      g_xcca_m.xcca003,g_xcca_m.xcca004,g_xcca_m.xcca005,'2',g_xcca1_d[l_ac].xcca002_1, 
                      g_xcca1_d[l_ac].xcca006_1,g_xcca1_d[l_ac].xcca007_1,g_xcca1_d[l_ac].xcca101_1, 
                      g_xcca1_d[l_ac].xcca110a_1,g_xcca1_d[l_ac].xcca110b_1,g_xcca1_d[l_ac].xcca110c_1,g_xcca1_d[l_ac].xcca110d_1, 
                      g_xcca1_d[l_ac].xcca110e_1,g_xcca1_d[l_ac].xcca110f_1,g_xcca1_d[l_ac].xcca110g_1,g_xcca1_d[l_ac].xcca110h_1,
                      g_xcca1_d[l_ac].xcca110_1,                   
                      g_xcca1_d[l_ac].xcca102a_1,g_xcca1_d[l_ac].xcca102b_1,g_xcca1_d[l_ac].xcca102c_1,g_xcca1_d[l_ac].xcca102d_1, 
                      g_xcca1_d[l_ac].xcca102e_1,g_xcca1_d[l_ac].xcca102f_1,g_xcca1_d[l_ac].xcca102g_1,g_xcca1_d[l_ac].xcca102h_1, 
                      g_xcca2_d[l_ac].xccaownid,g_xcca2_d[l_ac].xccaowndp,g_xcca2_d[l_ac].xccacrtid,g_xcca2_d[l_ac].xccacrtdp, 
                      g_xcca2_d[l_ac].xccacrtdt,g_xcca2_d[l_ac].xccamodid,g_xcca2_d[l_ac].xccamoddt,g_xcca2_d[l_ac].xccacnfid, 
                      g_xcca2_d[l_ac].xccacnfdt,g_xcca2_d[l_ac].xccapstid,g_xcca2_d[l_ac].xccapstdt)
                   WHERE xccaent = g_enterprise AND xccald = g_xcca_m.xccald 
                    AND xcca003 = g_xcca_m.xcca003 
                    AND xcca004 = g_xcca_m.xcca004 
                    AND xcca005 = g_xcca_m.xcca005 
                  
                    AND xcca001 = '2' #項次   
                    AND xcca002 = g_xcca_d_t.xcca002  
                    AND xcca006 = g_xcca_d_t.xcca006  
                    AND xcca007 = g_xcca_d_t.xcca007  
               END IF
               
               IF g_glaa019 = 'Y' THEN
                  LET l_rate = 1
                  CALL s_aooi160_get_exrate('1',g_xcca_m.xccacomp,l_bdate,g_glaa001,
                                                    #目的幣別;  交易金額;              匯類類型
                                                     g_glaa016,0,g_glaa022)
                      RETURNING l_rate
                  LET g_xcca3_d[l_ac].xcca002_3 = g_xcca_d[l_ac].xcca002
                  LET g_xcca3_d[l_ac].xcca006_3 = g_xcca_d[l_ac].xcca006
                  LET g_xcca3_d[l_ac].xcca007_3 = g_xcca_d[l_ac].xcca007
                  LET g_xcca3_d[l_ac].xcca101_3 = g_xcca_d[l_ac].xcca101
                  LET g_xcca3_d[l_ac].xcca110a_3 = g_xcca_d[l_ac].xcca110a * l_rate
                  LET g_xcca3_d[l_ac].xcca110b_3 = g_xcca_d[l_ac].xcca110b * l_rate
                  LET g_xcca3_d[l_ac].xcca110c_3 = g_xcca_d[l_ac].xcca110c * l_rate
                  LET g_xcca3_d[l_ac].xcca110d_3 = g_xcca_d[l_ac].xcca110d * l_rate
                  LET g_xcca3_d[l_ac].xcca110e_3 = g_xcca_d[l_ac].xcca110e * l_rate
                  LET g_xcca3_d[l_ac].xcca110f_3 = g_xcca_d[l_ac].xcca110f * l_rate
                  LET g_xcca3_d[l_ac].xcca110g_3 = g_xcca_d[l_ac].xcca110g * l_rate
                  LET g_xcca3_d[l_ac].xcca110h_3 = g_xcca_d[l_ac].xcca110h * l_rate
                  LET g_xcca3_d[l_ac].xcca102a_3 = g_xcca_d[l_ac].xcca110a * l_rate * g_xcca_d[l_ac].xcca101
                  LET g_xcca3_d[l_ac].xcca102b_3 = g_xcca_d[l_ac].xcca110b * l_rate * g_xcca_d[l_ac].xcca101
                  LET g_xcca3_d[l_ac].xcca102c_3 = g_xcca_d[l_ac].xcca110c * l_rate * g_xcca_d[l_ac].xcca101
                  LET g_xcca3_d[l_ac].xcca102d_3 = g_xcca_d[l_ac].xcca110d * l_rate * g_xcca_d[l_ac].xcca101
                  LET g_xcca3_d[l_ac].xcca102e_3 = g_xcca_d[l_ac].xcca110e * l_rate * g_xcca_d[l_ac].xcca101
                  LET g_xcca3_d[l_ac].xcca102f_3 = g_xcca_d[l_ac].xcca110f * l_rate * g_xcca_d[l_ac].xcca101
                  LET g_xcca3_d[l_ac].xcca102g_3 = g_xcca_d[l_ac].xcca110g * l_rate * g_xcca_d[l_ac].xcca101
                  LET g_xcca3_d[l_ac].xcca102h_3 = g_xcca_d[l_ac].xcca110h * l_rate * g_xcca_d[l_ac].xcca101
                  CALL axct300_xcca110_sum3()
                  UPDATE xcca_t SET (xccald,xcca003,xcca004,xcca005,xcca001,xcca002,xcca006,xcca007, 
                      xcca101,xcca110a,xcca110b,xcca110c,xcca110d,xcca110e,xcca110f,xcca110g,xcca110h,xcca110,xcca102a, 
                      xcca102b,xcca102c,xcca102d,xcca102e,xcca102f,xcca102g,xcca102h,xccaownid,xccaowndp, 
                      xccacrtid,xccacrtdp,xccacrtdt,xccamodid,xccamoddt,xccacnfid,xccacnfdt,xccapstid,xccapstdt) = (g_xcca_m.xccald, 
                      g_xcca_m.xcca003,g_xcca_m.xcca004,g_xcca_m.xcca005,'3',g_xcca3_d[l_ac].xcca002_3, 
                      g_xcca3_d[l_ac].xcca006_3,g_xcca3_d[l_ac].xcca007_3,g_xcca3_d[l_ac].xcca101_3, 
                      g_xcca3_d[l_ac].xcca110a_3,g_xcca3_d[l_ac].xcca110b_3,g_xcca3_d[l_ac].xcca110c_3,g_xcca3_d[l_ac].xcca110d_3, 
                      g_xcca3_d[l_ac].xcca110e_3,g_xcca3_d[l_ac].xcca110f_3,g_xcca3_d[l_ac].xcca110g_3,g_xcca3_d[l_ac].xcca110h_3, 
                      g_xcca3_d[l_ac].xcca110_3,
                      g_xcca3_d[l_ac].xcca102a_3,g_xcca3_d[l_ac].xcca102b_3,g_xcca3_d[l_ac].xcca102c_3,g_xcca3_d[l_ac].xcca102d_3, 
                      g_xcca3_d[l_ac].xcca102e_3,g_xcca3_d[l_ac].xcca102f_3,g_xcca3_d[l_ac].xcca102g_3,g_xcca3_d[l_ac].xcca102h_3, 
                      g_xcca2_d[l_ac].xccaownid,g_xcca2_d[l_ac].xccaowndp,g_xcca2_d[l_ac].xccacrtid,g_xcca2_d[l_ac].xccacrtdp, 
                      g_xcca2_d[l_ac].xccacrtdt,g_xcca2_d[l_ac].xccamodid,g_xcca2_d[l_ac].xccamoddt,g_xcca2_d[l_ac].xccacnfid, 
                      g_xcca2_d[l_ac].xccacnfdt,g_xcca2_d[l_ac].xccapstid,g_xcca2_d[l_ac].xccapstdt)
                   WHERE xccaent = g_enterprise AND xccald = g_xcca_m.xccald 
                    AND xcca003 = g_xcca_m.xcca003 
                    AND xcca004 = g_xcca_m.xcca004 
                    AND xcca005 = g_xcca_m.xcca005 
                 
                    AND xcca001 = '3' #項次   
                    AND xcca002 = g_xcca_d_t.xcca002  
                    AND xcca006 = g_xcca_d_t.xcca006  
                    AND xcca007 = g_xcca_d_t.xcca007  
              END IF
               ]]>
  </point>
  <point name="input.c.page1.xcca002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcca_d[l_ac].xcca002             #給予default值
            LET g_qryparam.where = " xcbfcomp = '",g_xcca_m.xccacomp,"'"

            #給予arg

            
            CALL q_xcbf001()                                #呼叫開窗

            LET g_xcca_d[l_ac].xcca002 = g_qryparam.return1              

            DISPLAY g_xcca_d[l_ac].xcca002 TO xcca002              #

            NEXT FIELD xcca002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xcca006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcca_d[l_ac].xcca006             #給予default值
            
            LET g_qryparam.where = " imagsite IN (SELECT ooef001 FROM ooef_t,ooee_t",
                                   "  WHERE ooefent = '",g_enterprise,"' AND ooef017 = '",g_xcca_m.xccacomp,"' AND ooef003 = 'Y' ",
                                   "    AND ooeeent = ooefent AND ooee001 = ooef001 AND ooee002 = '1' AND ooee003 = '2') "                                   

            #給予arg

            
            CALL q_imag001_2()                                #呼叫開窗

            LET g_xcca_d[l_ac].xcca006 = g_qryparam.return1       
  
            CALL axct300_xcca006_desc(g_xcca_d[l_ac].xcca006) 
              RETURNING g_xcca_d[l_ac].xcca006_desc,g_xcca_d[l_ac].xcca006_1_desc  

            DISPLAY g_xcca_d[l_ac].xcca006 TO xcca006              #

            NEXT FIELD xcca006                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xcca007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcca_d[l_ac].xcca007             #給予default值

            #給予arg
            LET g_qryparam.where = " inajsite IN( SELECT ooef001 FROM ooef_t,ooee_t WHERE ooeeent = ooefent", 
                  " AND ooee001 = ooef001 AND ooefent = '",g_enterprise,"' AND ooee002 = '1' AND ooee003 = '2'",
                  " AND ooef003 = 'Y' AND ooef017 = '",g_xcca_m.xccacomp,"' ) "
            IF NOT cl_null(g_xcca_d[l_ac].xcca006) THEN       
               LET g_qryparam.where =  g_qryparam.where," AND inaj005 = '",g_xcca_d[l_ac].xcca006,"'"
            END IF

            
            CALL q_inaj010()                                #呼叫開窗

            LET g_xcca_d[l_ac].xcca007 = g_qryparam.return1      
            LET g_qryparam.where = NULL            

            DISPLAY g_xcca_d[l_ac].xcca007 TO xcca007              #

            NEXT FIELD xcca007                          #返回原欄位

]]>
  </point>
  <point name="input.c.xcca003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcca_m.xcca003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_xcat001()                                #呼叫開窗

            LET g_xcca_m.xcca003 = g_qryparam.return1              

            DISPLAY g_xcca_m.xcca003 TO xcca003              #
             CALL axct300_xcca003_desc()

            NEXT FIELD xcca003                          #返回原欄位

]]>
  </point>
  <point name="input.c.xccacomp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcca_m.xccacomp             #給予default值
            LET g_qryparam.default2 = "" #g_xcca_m.ooefl003 #說明(簡稱)
            #給予arg
           #LET g_qryparam.arg1 = "" #
            LET g_qryparam.where = " ooef003 = 'Y' "
            IF NOT cl_null(g_xcca_m.xccald) THEN
              LET g_qryparam.where = g_qryparam.where,"  AND ooef017 = (SELECT glaacomp FROM glaa_t",
                      "  WHERE glaaent = '",g_enterprise,"' AND glaald = '",g_xcca_m.xccald,"' )"
            END IF

            
            CALL q_ooef001()                                #呼叫開窗

            LET g_xcca_m.xccacomp = g_qryparam.return1              
            #LET g_xcca_m.ooefl003 = g_qryparam.return2 
            DISPLAY g_xcca_m.xccacomp TO xccacomp              #
            IF p_cmd = 'a' THEN
               CALL cl_get_para(g_enterprise,g_xcca_m.xccacomp,'S-FIN-6010') RETURNING g_xcca_m.xcca004
               CALL cl_get_para(g_enterprise,g_xcca_m.xccacomp,'S-FIN-6011') RETURNING g_xcca_m.xcca005
               DISPLAY BY NAME g_xcca_m.xcca004,g_xcca_m.xcca005
            END IF
            LET g_qryparam.where = NULL
            #DISPLAY g_xcca_m.ooefl003 TO ooefl003 #說明(簡稱)
            NEXT FIELD xccacomp                          #返回原欄位

]]>
  </point>
  <point name="input.c.xccald" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xcca_m.xccald             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            IF NOT cl_null(g_xcca_m.xccacomp) THEN
               LET g_qryparam.where = " glaacomp = '",g_xcca_m.xccacomp,"'"
            END IF
            
            CALL q_authorised_ld()                                #呼叫開窗

            LET g_xcca_m.xccald = g_qryparam.return1              

            DISPLAY g_xcca_m.xccald TO xccald              #
            LET g_qryparam.where = NULL

            NEXT FIELD xccald                          #返回原欄位

]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_ooab002              LIKE ooab_t.ooab002
   DEFINE l_rate                 LIKE type_t.num26_10
   DEFINE l_success              LIKE type_t.num5
   DEFINE l_errno                LIKE gzze_t.gzze001
   DEFINE  l_date                DATE]]>
  </point>
  <point name="input.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF l_cmd_t = 'r' THEN
               LET g_xcca_m.xccald_desc = " "
               LET g_xcca_m.xcca003_desc = " "
               DISPLAY BY NAME g_xcca_m.xccald_desc,g_xcca_m.xcca003_desc
            END IF
            IF p_cmd = 'a' THEN
              
               LET g_xcca_m.xccacomp = g_site
               CALL s_fin_ld_carry('',g_user) 
                RETURNING l_success,g_xcca_m.xccald,g_xcca_m.xccacomp,l_errno
               CALL axct300_xccald_desc()
               CALL axct300_xccacomp_desc()

               SELECT glaa001,glaa015,glaa016,glaa018,glaa019,glaa020,glaa022 
                 INTO g_glaa001,g_glaa015,g_glaa016,g_glaa018,g_glaa019,g_glaa020,g_glaa022 
                 FROM glaa_t
                WHERE glaaent = g_enterprise AND glaald = g_xcca_m.xccald
               IF g_glaa015 = 'N' THEN
                  CALL cl_set_comp_visible('bpage_2',FALSE)
               ELSE
                  CALL cl_set_comp_visible('bpage_2',TRUE)
               END IF
               IF g_glaa019 = 'N' THEN
                  CALL cl_set_comp_visible('bpage_3',FALSE)
               ELSE
                  CALL cl_set_comp_visible('bpage_3',TRUE)
               END IF
            END IF]]>
  </point>
  <point name="input.more_inputarray" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[       #Page1 預設值產生於此處
      INPUT ARRAY g_xcca1_d FROM s_detail3.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = FALSE,
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcca_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axct300_b_fill1(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前

            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail3")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axct300_cl USING g_enterprise,
                                               g_xcca_m.xccald
                                               ,g_xcca_m.xcca003
                                               ,g_xcca_m.xcca004
                                               ,g_xcca_m.xcca005
 
                                               
               IF STATUS THEN
                  CALL cl_err("OPEN axct300_cl:", STATUS, 1)
                  CLOSE axct300_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_xcca1_d[l_ac].xcca001_1 IS NOT NULL
               AND g_xcca1_d[l_ac].xcca002_1 IS NOT NULL
               AND g_xcca1_d[l_ac].xcca006_1 IS NOT NULL
               AND g_xcca1_d[l_ac].xcca007_1 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xcca1_d_t.* = g_xcca1_d[l_ac].*  #BACKUP
               CALL axct300_set_entry_b(l_cmd)
               CALL axct300_set_no_entry_b(l_cmd)
               OPEN axct300_bcl USING g_enterprise,g_xcca_m.xccald,
                                                g_xcca_m.xcca003,
                                                g_xcca_m.xcca004,
                                                g_xcca_m.xcca005,
 
                                                g_xcca1_d_t.xcca001_1
                                                ,g_xcca1_d_t.xcca002_1
                                                ,g_xcca1_d_t.xcca006_1
                                                ,g_xcca1_d_t.xcca007_1
 
               IF STATUS THEN
                  CALL cl_err("OPEN axct300_bcl:", STATUS, 1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axct300_bcl INTO g_xcca1_d[l_ac].xcca001_1,g_xcca1_d[l_ac].xcca002_1,g_xcca1_d[l_ac].xcca006_1, 
                      g_xcca1_d[l_ac].xcca006_desc1,g_xcca1_d[l_ac].xcca006_1_desc1,g_xcca1_d[l_ac].xcca007_1, 
                      g_xcca1_d[l_ac].xcca101_1,g_xcca1_d[l_ac].xcca110a_1,g_xcca1_d[l_ac].xcca110b_1, 
                      g_xcca1_d[l_ac].xcca110c_1,g_xcca1_d[l_ac].xcca110d_1,g_xcca1_d[l_ac].xcca110e_1,g_xcca1_d[l_ac].xcca110f_1, 
                      g_xcca1_d[l_ac].xcca110g_1,g_xcca1_d[l_ac].xcca110h_1,g_xcca1_d[l_ac].xcca110_1,g_xcca1_d[l_ac].xcca102a_1, 
                      g_xcca1_d[l_ac].xcca102b_1,g_xcca1_d[l_ac].xcca102c_1,g_xcca1_d[l_ac].xcca102d_1,g_xcca1_d[l_ac].xcca102e_1, 
                      g_xcca1_d[l_ac].xcca102f_1,g_xcca1_d[l_ac].xcca102g_1,g_xcca1_d[l_ac].xcca102h_1,g_xcca2_d[l_ac].xcca001, 
                      g_xcca2_d[l_ac].xcca002,g_xcca2_d[l_ac].xcca006,g_xcca2_d[l_ac].xcca007,
                      g_xcca2_d[l_ac].xccaownid,g_xcca2_d[l_ac].xccaownid_desc,g_xcca2_d[l_ac].xccaowndp, 
                      g_xcca2_d[l_ac].xccaowndp_desc,g_xcca2_d[l_ac].xccacrtid,g_xcca2_d[l_ac].xccacrtid_desc, 
                      g_xcca2_d[l_ac].xccacrtdp,g_xcca2_d[l_ac].xccacrtdp_desc,g_xcca2_d[l_ac].xccacrtdt, 
                      g_xcca2_d[l_ac].xccamodid,g_xcca2_d[l_ac].xccamodid_desc,g_xcca2_d[l_ac].xccamoddt, 
                      g_xcca2_d[l_ac].xccacnfid,g_xcca2_d[l_ac].xccacnfid_desc,g_xcca2_d[l_ac].xccacnfdt, 
                      g_xcca2_d[l_ac].xccapstid,g_xcca2_d[l_ac].xccapstid_desc,g_xcca2_d[l_ac].xccapstdt 

                  IF SQLCA.sqlcode THEN
                      CALL cl_err(g_xcca1_d_t.xcca001_1,SQLCA.sqlcode,1)
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axct300_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            LET g_xcca1_d[l_ac].xcca001_1 = '2'
            #end add-point  
            

         #此段落由子樣板a02產生
         AFTER FIELD xcca110a_1
            
            #add-point:AFTER FIELD xcca110a
            IF NOT cl_null(g_xcca1_d[l_ac].xcca110a_1) AND NOT cl_null(g_xcca1_d[l_ac].xcca101_1) THEN
               LET g_xcca1_d[l_ac].xcca102a_1 = g_xcca1_d[l_ac].xcca110a_1 * g_xcca1_d[l_ac].xcca101_1
            END IF
            CALL axct300_xcca110_sum1()
            LET g_xcca1_d[l_ac].xcca110a_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110a_1,1)
            LET g_xcca1_d[l_ac].xcca102a_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca102a_1,2)
            LET g_xcca1_d[l_ac].xcca110_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110_1,1)
            #END add-point

 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110b_1
            
            #add-point:AFTER FIELD xcca110b
            IF NOT cl_null(g_xcca1_d[l_ac].xcca110b_1) AND NOT cl_null(g_xcca1_d[l_ac].xcca101_1) THEN
               LET g_xcca1_d[l_ac].xcca102b_1 = g_xcca1_d[l_ac].xcca110b_1 * g_xcca1_d[l_ac].xcca101_1
            END IF
            CALL axct300_xcca110_sum1()
            LET g_xcca1_d[l_ac].xcca110b_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110b_1,1)
            LET g_xcca1_d[l_ac].xcca102b_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca102b_1,2)
            LET g_xcca1_d[l_ac].xcca110_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110_1,1)
            #END add-point
            

         #此段落由子樣板a02產生
         AFTER FIELD xcca110c_1
            
            #add-point:AFTER FIELD xcca110c
            IF NOT cl_null(g_xcca1_d[l_ac].xcca110c_1) AND NOT cl_null(g_xcca1_d[l_ac].xcca101_1) THEN
               LET g_xcca1_d[l_ac].xcca102c_1 = g_xcca1_d[l_ac].xcca110c_1 * g_xcca1_d[l_ac].xcca101_1
            END IF
            CALL axct300_xcca110_sum1()
            LET g_xcca1_d[l_ac].xcca110c_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110c_1,1)
            LET g_xcca1_d[l_ac].xcca102c_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca102c_1,2)
            LET g_xcca1_d[l_ac].xcca110_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110_1,1)
            #END add-point
            
         #此段落由子樣板a02產生
         AFTER FIELD xcca110d_1
            
            #add-point:AFTER FIELD xcca110d
            IF NOT cl_null(g_xcca1_d[l_ac].xcca110d_1) AND NOT cl_null(g_xcca1_d[l_ac].xcca101_1) THEN
               LET g_xcca1_d[l_ac].xcca102d_1 = g_xcca1_d[l_ac].xcca110d_1 * g_xcca1_d[l_ac].xcca101_1
            END IF
            CALL axct300_xcca110_sum1()
            LET g_xcca1_d[l_ac].xcca110d_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110d_1,1)
            LET g_xcca1_d[l_ac].xcca102d_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca102d_1,2)
            LET g_xcca1_d[l_ac].xcca110_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110_1,1)
            #END add-point
            
         #此段落由子樣板a02產生
         AFTER FIELD xcca110e_1
            
            #add-point:AFTER FIELD xcca110e
            IF NOT cl_null(g_xcca1_d[l_ac].xcca110e_1) AND NOT cl_null(g_xcca1_d[l_ac].xcca101_1) THEN
               LET g_xcca1_d[l_ac].xcca102e_1 = g_xcca1_d[l_ac].xcca110e_1 * g_xcca1_d[l_ac].xcca101_1
            END IF
            CALL axct300_xcca110_sum1()
            LET g_xcca1_d[l_ac].xcca110e_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110e_1,1)
            LET g_xcca1_d[l_ac].xcca102e_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca102e_1,2)
            LET g_xcca1_d[l_ac].xcca110_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110_1,1)
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD xcca110f_1
            
            #add-point:AFTER FIELD xcca110f
            IF NOT cl_null(g_xcca1_d[l_ac].xcca110f_1) AND NOT cl_null(g_xcca1_d[l_ac].xcca101_1) THEN
               LET g_xcca1_d[l_ac].xcca102f_1 = g_xcca1_d[l_ac].xcca110f_1 * g_xcca1_d[l_ac].xcca101_1
            END IF
            CALL axct300_xcca110_sum1()
            LET g_xcca1_d[l_ac].xcca110f_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110f_1,1)
            LET g_xcca1_d[l_ac].xcca102f_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca102f_1,2)
            LET g_xcca1_d[l_ac].xcca110_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110_1,1)
            #END add-point
            
 
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110g_1
            
            #add-point:AFTER FIELD xcca110g
            IF NOT cl_null(g_xcca1_d[l_ac].xcca110g_1) AND NOT cl_null(g_xcca1_d[l_ac].xcca101_1) THEN
               LET g_xcca1_d[l_ac].xcca102g_1 = g_xcca1_d[l_ac].xcca110g_1 * g_xcca1_d[l_ac].xcca101_1
            END IF
            CALL axct300_xcca110_sum1()
            LET g_xcca1_d[l_ac].xcca110g_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110g_1,1)
            LET g_xcca1_d[l_ac].xcca102g_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca102g_1,2)
            LET g_xcca1_d[l_ac].xcca110_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110_1,1)
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110h_1
            
            #add-point:AFTER FIELD xcca110h
            IF NOT cl_null(g_xcca1_d[l_ac].xcca110h_1) AND NOT cl_null(g_xcca1_d[l_ac].xcca101_1) THEN
               LET g_xcca1_d[l_ac].xcca102h_1 = g_xcca1_d[l_ac].xcca110h_1 * g_xcca1_d[l_ac].xcca101_1
            END IF
            CALL axct300_xcca110_sum1()
            LET g_xcca1_d[l_ac].xcca110h_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110h_1,1)
            LET g_xcca1_d[l_ac].xcca102h_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca102h_1,2)
            LET g_xcca1_d[l_ac].xcca110_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110_1,1)
            #END add-point
            
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102a_1
            
            #add-point:AFTER FIELD xcca102a
            IF NOT cl_null(g_xcca1_d[l_ac].xcca102a_1) AND NOT cl_null(g_xcca1_d[l_ac].xcca101_1) THEN
               LET g_xcca1_d[l_ac].xcca110a_1 = g_xcca1_d[l_ac].xcca102a_1 / g_xcca1_d[l_ac].xcca101_1
            END IF
            CALL axct300_xcca110_sum1()
            LET g_xcca1_d[l_ac].xcca110a_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110a_1,1)
            LET g_xcca1_d[l_ac].xcca102a_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca102a_1,2)
            LET g_xcca1_d[l_ac].xcca110_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110_1,1)
            #END add-point
            
         #此段落由子樣板a02產生
         AFTER FIELD xcca102b_1
            
            #add-point:AFTER FIELD xcca102b
            IF NOT cl_null(g_xcca1_d[l_ac].xcca102b_1) AND NOT cl_null(g_xcca1_d[l_ac].xcca101_1) THEN
               LET g_xcca1_d[l_ac].xcca110b_1 = g_xcca1_d[l_ac].xcca102b_1 / g_xcca1_d[l_ac].xcca101_1
            END IF
            CALL axct300_xcca110_sum1()
            LET g_xcca1_d[l_ac].xcca110b_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110b_1,1)
            LET g_xcca1_d[l_ac].xcca102b_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca102b_1,2)
            LET g_xcca1_d[l_ac].xcca110_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110_1,1)
            #END add-point
            
         #此段落由子樣板a02產生
         AFTER FIELD xcca102c_1
            
            #add-point:AFTER FIELD xcca102c
            IF NOT cl_null(g_xcca1_d[l_ac].xcca102c_1) AND NOT cl_null(g_xcca1_d[l_ac].xcca101_1) THEN
               LET g_xcca1_d[l_ac].xcca110c_1 = g_xcca1_d[l_ac].xcca102c_1 / g_xcca1_d[l_ac].xcca101_1
            END IF
            CALL axct300_xcca110_sum1()
            LET g_xcca1_d[l_ac].xcca110c_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110c_1,1)
            LET g_xcca1_d[l_ac].xcca102c_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca102c_1,2)
            LET g_xcca1_d[l_ac].xcca110_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110_1,1)
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102d_1
            
            IF NOT cl_null(g_xcca1_d[l_ac].xcca102d_1) AND NOT cl_null(g_xcca1_d[l_ac].xcca101_1) THEN
               LET g_xcca1_d[l_ac].xcca110d_1 = g_xcca1_d[l_ac].xcca102d_1 / g_xcca1_d[l_ac].xcca101_1
            END IF
            CALL axct300_xcca110_sum1()
            LET g_xcca1_d[l_ac].xcca110d_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110d_1,1)
            LET g_xcca1_d[l_ac].xcca102d_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca102d_1,2)
            LET g_xcca1_d[l_ac].xcca110_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110_1,1)
           
         #此段落由子樣板a02產生
         AFTER FIELD xcca102e_1
            
            IF NOT cl_null(g_xcca1_d[l_ac].xcca102e_1) AND NOT cl_null(g_xcca1_d[l_ac].xcca101_1) THEN
               LET g_xcca1_d[l_ac].xcca110e_1 = g_xcca1_d[l_ac].xcca102e_1 / g_xcca1_d[l_ac].xcca101_1
            END IF
            CALL axct300_xcca110_sum1()
            LET g_xcca1_d[l_ac].xcca110e_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110e_1,1)
            LET g_xcca1_d[l_ac].xcca102e_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca102e_1,2)
            LET g_xcca1_d[l_ac].xcca110_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110_1,1)
           
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102f_1
            
            IF NOT cl_null(g_xcca1_d[l_ac].xcca102f_1) AND NOT cl_null(g_xcca1_d[l_ac].xcca101_1) THEN
               LET g_xcca1_d[l_ac].xcca110f_1 = g_xcca1_d[l_ac].xcca102f_1 / g_xcca1_d[l_ac].xcca101_1
            END IF
            CALL axct300_xcca110_sum1()
            LET g_xcca1_d[l_ac].xcca110f_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110f_1,1)
            LET g_xcca1_d[l_ac].xcca102f_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca102f_1,2)
            LET g_xcca1_d[l_ac].xcca110_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110_1,1)
            
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102g_1
            
            IF NOT cl_null(g_xcca1_d[l_ac].xcca102g_1) AND NOT cl_null(g_xcca1_d[l_ac].xcca101_1) THEN
               LET g_xcca1_d[l_ac].xcca110g_1 = g_xcca1_d[l_ac].xcca102g_1 / g_xcca1_d[l_ac].xcca101_1
            END IF
            CALL axct300_xcca110_sum1()
            LET g_xcca1_d[l_ac].xcca110g_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110g_1,1)
            LET g_xcca1_d[l_ac].xcca102g_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca102g_1,2)
            LET g_xcca1_d[l_ac].xcca110_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110_1,1)

 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102h_1
            
            IF NOT cl_null(g_xcca1_d[l_ac].xcca102h_1) AND NOT cl_null(g_xcca1_d[l_ac].xcca101_1) THEN
               LET g_xcca1_d[l_ac].xcca110h_1 = g_xcca1_d[l_ac].xcca102h_1 / g_xcca1_d[l_ac].xcca101_1
            END IF
            CALL axct300_xcca110_sum1()
            LET g_xcca1_d[l_ac].xcca110h_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110h_1,1)
            LET g_xcca1_d[l_ac].xcca102h_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca102h_1,2)
            LET g_xcca1_d[l_ac].xcca110_1 = s_curr_round(g_xcca_m.xccacomp,g_glaa016,g_xcca1_d[l_ac].xcca110_1,1)
            
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_xcca1_d[l_ac].* = g_xcca1_d_t.*
               CLOSE axct300_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_xcca1_d[l_ac].xcca001_1,-263,1)
               LET g_xcca1_d[l_ac].* = g_xcca1_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_xcca2_d[l_ac].xccamodid = g_user 
               LET g_xcca2_d[l_ac].xccamoddt = cl_get_current()
 
            
               #add-point:單身修改前
               LET g_xcca1_d_t.xcca001_1 = '2'
               #end add-point
         
               UPDATE xcca_t SET (xccald,xcca003,xcca004,xcca005,xcca001,xcca002,xcca006,xcca007,
                   xcca101,xcca110a,xcca110b,xcca110c,xcca110d,xcca110e,xcca110f,xcca110g,xcca110h,xcca110,xcca102a, 
                   xcca102b,xcca102c,xcca102d,xcca102e,xcca102f,xcca102g,xcca102h,xccaownid,xccaowndp, 
                   xccacrtid,xccacrtdp,xccacrtdt,xccamodid,xccamoddt,xccacnfid,xccacnfdt,xccapstid,xccapstdt) = (g_xcca_m.xccald, 
                   g_xcca_m.xcca003,g_xcca_m.xcca004,g_xcca_m.xcca005,g_xcca1_d[l_ac].xcca001_1,g_xcca1_d[l_ac].xcca002_1, 
                   g_xcca1_d[l_ac].xcca006_1,g_xcca1_d[l_ac].xcca007_1,g_xcca1_d[l_ac].xcca101_1, 
                   g_xcca1_d[l_ac].xcca110a_1,g_xcca1_d[l_ac].xcca110b_1,g_xcca1_d[l_ac].xcca110c_1,g_xcca1_d[l_ac].xcca110d_1, 
                   g_xcca1_d[l_ac].xcca110e_1,g_xcca1_d[l_ac].xcca110f_1,g_xcca1_d[l_ac].xcca110g_1,g_xcca1_d[l_ac].xcca110h_1, 
                   g_xcca1_d[l_ac].xcca110_1,
                   g_xcca1_d[l_ac].xcca102a_1,g_xcca1_d[l_ac].xcca102b_1,g_xcca1_d[l_ac].xcca102c_1,g_xcca1_d[l_ac].xcca102d_1, 
                   g_xcca1_d[l_ac].xcca102e_1,g_xcca1_d[l_ac].xcca102f_1,g_xcca1_d[l_ac].xcca102g_1,g_xcca1_d[l_ac].xcca102h_1, 
                   g_xcca2_d[l_ac].xccaownid,g_xcca2_d[l_ac].xccaowndp,g_xcca2_d[l_ac].xccacrtid,g_xcca2_d[l_ac].xccacrtdp, 
                   g_xcca2_d[l_ac].xccacrtdt,g_xcca2_d[l_ac].xccamodid,g_xcca2_d[l_ac].xccamoddt,g_xcca2_d[l_ac].xccacnfid, 
                   g_xcca2_d[l_ac].xccacnfdt,g_xcca2_d[l_ac].xccapstid,g_xcca2_d[l_ac].xccapstdt)
                WHERE xccaent = g_enterprise AND xccald = g_xcca_m.xccald 
                 AND xcca003 = g_xcca_m.xcca003 
                 AND xcca004 = g_xcca_m.xcca004 
                 AND xcca005 = g_xcca_m.xcca005 
 
                 AND xcca001 = g_xcca1_d_t.xcca001_1 #項次   
                 AND xcca002 = g_xcca1_d_t.xcca002_1  
                 AND xcca006 = g_xcca1_d_t.xcca006_1  
                 AND xcca007 = g_xcca1_d_t.xcca007_1  
 
                 
               #add-point:單身修改中
               CALL s_aooi160_get_exrate('1',g_xcca_m.xccacomp,l_bdate,g_glaa001,
                                                 #目的幣別;  交易金額;              匯類類型
                                                  g_glaa016,0,g_glaa018)
                           RETURNING l_rate
               LET g_xcca_d[l_ac].xcca110a = g_xcca1_d[l_ac].xcca110a_1 / l_rate
               LET g_xcca_d[l_ac].xcca110b = g_xcca1_d[l_ac].xcca110b_1 / l_rate
               LET g_xcca_d[l_ac].xcca110c = g_xcca1_d[l_ac].xcca110c_1 / l_rate
               LET g_xcca_d[l_ac].xcca110d = g_xcca1_d[l_ac].xcca110d_1 / l_rate
               LET g_xcca_d[l_ac].xcca110e = g_xcca1_d[l_ac].xcca110e_1 / l_rate
               LET g_xcca_d[l_ac].xcca110f = g_xcca1_d[l_ac].xcca110f_1 / l_rate
               LET g_xcca_d[l_ac].xcca110g = g_xcca1_d[l_ac].xcca110g_1 / l_rate
               LET g_xcca_d[l_ac].xcca110h = g_xcca1_d[l_ac].xcca110h_1 / l_rate
               LET g_xcca_d[l_ac].xcca102a = g_xcca1_d[l_ac].xcca110a_1 / l_rate * g_xcca1_d[l_ac].xcca101_1
               LET g_xcca_d[l_ac].xcca102b = g_xcca1_d[l_ac].xcca110b_1 / l_rate * g_xcca1_d[l_ac].xcca101_1
               LET g_xcca_d[l_ac].xcca102c = g_xcca1_d[l_ac].xcca110c_1 / l_rate * g_xcca1_d[l_ac].xcca101_1
               LET g_xcca_d[l_ac].xcca102d = g_xcca1_d[l_ac].xcca110d_1 / l_rate * g_xcca1_d[l_ac].xcca101_1
               LET g_xcca_d[l_ac].xcca102e = g_xcca1_d[l_ac].xcca110e_1 / l_rate * g_xcca1_d[l_ac].xcca101_1
               LET g_xcca_d[l_ac].xcca102f = g_xcca1_d[l_ac].xcca110f_1 / l_rate * g_xcca1_d[l_ac].xcca101_1
               LET g_xcca_d[l_ac].xcca102g = g_xcca1_d[l_ac].xcca110g_1 / l_rate * g_xcca1_d[l_ac].xcca101_1
               LET g_xcca_d[l_ac].xcca102h = g_xcca1_d[l_ac].xcca110h_1 / l_rate * g_xcca1_d[l_ac].xcca101_1
               CALL axct300_xcca110_sum()
              

               UPDATE xcca_t SET (xccald,xcca003,xcca004,xcca005,xcca001,xcca002,xcca006,xcca007,
                   xcca101,xcca110a,xcca110b,xcca110c,xcca110d,xcca110e,xcca110f,xcca110g,xcca110h,xcca110,xcca102a, 
                   xcca102b,xcca102c,xcca102d,xcca102e,xcca102f,xcca102g,xcca102h,xccaownid,xccaowndp, 
                   xccacrtid,xccacrtdp,xccacrtdt,xccamodid,xccamoddt,xccacnfid,xccacnfdt,xccapstid,xccapstdt) = (g_xcca_m.xccald, 
                   g_xcca_m.xcca003,g_xcca_m.xcca004,g_xcca_m.xcca005,g_xcca_d[l_ac].xcca001,g_xcca_d[l_ac].xcca002, 
                   g_xcca_d[l_ac].xcca006,g_xcca_d[l_ac].xcca007,g_xcca_d[l_ac].xcca101, 
                   g_xcca_d[l_ac].xcca110a,g_xcca_d[l_ac].xcca110b,g_xcca_d[l_ac].xcca110c,g_xcca_d[l_ac].xcca110d, 
                   g_xcca_d[l_ac].xcca110e,g_xcca_d[l_ac].xcca110f,g_xcca_d[l_ac].xcca110g,g_xcca_d[l_ac].xcca110h,
                   g_xcca_d[l_ac].xcca110,                   
                   g_xcca_d[l_ac].xcca102a,g_xcca_d[l_ac].xcca102b,g_xcca_d[l_ac].xcca102c,g_xcca_d[l_ac].xcca102d, 
                   g_xcca_d[l_ac].xcca102e,g_xcca_d[l_ac].xcca102f,g_xcca_d[l_ac].xcca102g,g_xcca_d[l_ac].xcca102h, 
                   g_xcca2_d[l_ac].xccaownid,g_xcca2_d[l_ac].xccaowndp,g_xcca2_d[l_ac].xccacrtid,g_xcca2_d[l_ac].xccacrtdp, 
                   g_xcca2_d[l_ac].xccacrtdt,g_xcca2_d[l_ac].xccamodid,g_xcca2_d[l_ac].xccamoddt,g_xcca2_d[l_ac].xccacnfid, 
                   g_xcca2_d[l_ac].xccacnfdt,g_xcca2_d[l_ac].xccapstid,g_xcca2_d[l_ac].xccapstdt)
                WHERE xccaent = g_enterprise AND xccald = g_xcca_m.xccald 
                 AND xcca003 = g_xcca_m.xcca003 
                 AND xcca004 = g_xcca_m.xcca004 
                 AND xcca005 = g_xcca_m.xcca005 
 
                 AND xcca001 = '1' #項次   
                 AND xcca002 = g_xcca1_d_t.xcca002_1  
                 AND xcca006 = g_xcca1_d_t.xcca006_1  
                 AND xcca007 = g_xcca1_d_t.xcca007_1  
               
               IF g_glaa019 = 'Y' THEN
                  LET l_rate = 1
                  CALL s_aooi160_get_exrate('1',g_xcca_m.xccacomp,l_bdate,g_glaa001,
                                                    #目的幣別;  交易金額;              匯類類型
                                                     g_glaa016,0,g_glaa022)
                      RETURNING l_rate
                  LET g_xcca3_d[l_ac].xcca110a_3 = g_xcca_d[l_ac].xcca110a * l_rate
                  LET g_xcca3_d[l_ac].xcca110b_3 = g_xcca_d[l_ac].xcca110b * l_rate
                  LET g_xcca3_d[l_ac].xcca110c_3 = g_xcca_d[l_ac].xcca110c * l_rate
                  LET g_xcca3_d[l_ac].xcca110d_3 = g_xcca_d[l_ac].xcca110d * l_rate
                  LET g_xcca3_d[l_ac].xcca110e_3 = g_xcca_d[l_ac].xcca110e * l_rate
                  LET g_xcca3_d[l_ac].xcca110f_3 = g_xcca_d[l_ac].xcca110f * l_rate
                  LET g_xcca3_d[l_ac].xcca110g_3 = g_xcca_d[l_ac].xcca110g * l_rate
                  LET g_xcca3_d[l_ac].xcca110h_3 = g_xcca_d[l_ac].xcca110h * l_rate
                  LET g_xcca3_d[l_ac].xcca102a_3 = g_xcca_d[l_ac].xcca110a * l_rate * g_xcca1_d[l_ac].xcca101_1
                  LET g_xcca3_d[l_ac].xcca102b_3 = g_xcca_d[l_ac].xcca110b * l_rate * g_xcca1_d[l_ac].xcca101_1
                  LET g_xcca3_d[l_ac].xcca102c_3 = g_xcca_d[l_ac].xcca110c * l_rate * g_xcca1_d[l_ac].xcca101_1
                  LET g_xcca3_d[l_ac].xcca102d_3 = g_xcca_d[l_ac].xcca110d * l_rate * g_xcca1_d[l_ac].xcca101_1
                  LET g_xcca3_d[l_ac].xcca102e_3 = g_xcca_d[l_ac].xcca110e * l_rate * g_xcca1_d[l_ac].xcca101_1
                  LET g_xcca3_d[l_ac].xcca102f_3 = g_xcca_d[l_ac].xcca110f * l_rate * g_xcca1_d[l_ac].xcca101_1
                  LET g_xcca3_d[l_ac].xcca102g_3 = g_xcca_d[l_ac].xcca110g * l_rate * g_xcca1_d[l_ac].xcca101_1
                  LET g_xcca3_d[l_ac].xcca102h_3 = g_xcca_d[l_ac].xcca110h * l_rate * g_xcca1_d[l_ac].xcca101_1
                  CALL axct300_xcca110_sum3()
                  UPDATE xcca_t SET (xccald,xcca003,xcca004,xcca005,xcca001,xcca002,xcca006,xcca007,
                      xcca101,xcca110a,xcca110b,xcca110c,xcca110d,xcca110e,xcca110f,xcca110g,xcca110h,xcca110,xcca102a, 
                      xcca102b,xcca102c,xcca102d,xcca102e,xcca102f,xcca102g,xcca102h,xccaownid,xccaowndp, 
                      xccacrtid,xccacrtdp,xccacrtdt,xccamodid,xccamoddt,xccacnfid,xccacnfdt,xccapstid,xccapstdt) = (g_xcca_m.xccald, 
                      g_xcca_m.xcca003,g_xcca_m.xcca004,g_xcca_m.xcca005,g_xcca3_d[l_ac].xcca001_3,g_xcca3_d[l_ac].xcca002_3, 
                      g_xcca3_d[l_ac].xcca006_3,g_xcca3_d[l_ac].xcca007_3,g_xcca3_d[l_ac].xcca101_3, 
                      g_xcca3_d[l_ac].xcca110a_3,g_xcca3_d[l_ac].xcca110b_3,g_xcca3_d[l_ac].xcca110c_3,g_xcca3_d[l_ac].xcca110d_3, 
                      g_xcca3_d[l_ac].xcca110e_3,g_xcca3_d[l_ac].xcca110f_3,g_xcca3_d[l_ac].xcca110g_3,g_xcca3_d[l_ac].xcca110h_3, 
                      g_xcca3_d[l_ac].xcca110_3,
                      g_xcca3_d[l_ac].xcca102a_3,g_xcca3_d[l_ac].xcca102b_3,g_xcca3_d[l_ac].xcca102c_3,g_xcca3_d[l_ac].xcca102d_3, 
                      g_xcca3_d[l_ac].xcca102e_3,g_xcca3_d[l_ac].xcca102f_3,g_xcca3_d[l_ac].xcca102g_3,g_xcca3_d[l_ac].xcca102h_3, 
                      g_xcca2_d[l_ac].xccaownid,g_xcca2_d[l_ac].xccaowndp,g_xcca2_d[l_ac].xccacrtid,g_xcca2_d[l_ac].xccacrtdp, 
                      g_xcca2_d[l_ac].xccacrtdt,g_xcca2_d[l_ac].xccamodid,g_xcca2_d[l_ac].xccamoddt,g_xcca2_d[l_ac].xccacnfid, 
                      g_xcca2_d[l_ac].xccacnfdt,g_xcca2_d[l_ac].xccapstid,g_xcca2_d[l_ac].xccapstdt)
                   WHERE xccaent = g_enterprise AND xccald = g_xcca_m.xccald 
                    AND xcca003 = g_xcca_m.xcca003 
                    AND xcca004 = g_xcca_m.xcca004 
                    AND xcca005 = g_xcca_m.xcca005 
                  
                    AND xcca001 = '3' #項次   
                    AND xcca002 = g_xcca1_d_t.xcca002_1  
                    AND xcca006 = g_xcca1_d_t.xcca006_1  
                    AND xcca007 = g_xcca1_d_t.xcca007_1  
              END IF
              
         
                
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xcca_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   CALL cl_err("xcca_t",SQLCA.sqlcode,1)  
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcca_m.xccald
               LET gs_keys_bak[1] = g_xccald_t
               LET gs_keys[2] = g_xcca_m.xcca003
               LET gs_keys_bak[2] = g_xcca003_t
               LET gs_keys[3] = g_xcca_m.xcca004
               LET gs_keys_bak[3] = g_xcca004_t
               LET gs_keys[4] = g_xcca_m.xcca005
               LET gs_keys_bak[4] = g_xcca005_t
               LET gs_keys[5] = g_xcca1_d[g_detail_idx].xcca001_1
               LET gs_keys_bak[5] = g_xcca1_d_t.xcca001_1
               LET gs_keys[6] = g_xcca1_d[g_detail_idx].xcca002_1
               LET gs_keys_bak[6] = g_xcca1_d_t.xcca002_1
               LET gs_keys[7] = g_xcca1_d[g_detail_idx].xcca006_1
               LET gs_keys_bak[7] = g_xcca1_d_t.xcca006_1
               LET gs_keys[8] = g_xcca1_d[g_detail_idx].xcca007_1
               LET gs_keys_bak[8] = g_xcca1_d_t.xcca007_1
               CALL axct300_update_b('xcca_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後

               #end add-point
            END IF
 
         AFTER INPUT   
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xcca1_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xcca1_d.getLength()+1
            
      END INPUT
      
      #Page1 預設值產生於此處
      INPUT ARRAY g_xcca3_d FROM s_detail4.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = FALSE,
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcca3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axct300_b_fill3(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前

            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail3")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axct300_cl USING g_enterprise,
                                               g_xcca_m.xccald
                                               ,g_xcca_m.xcca003
                                               ,g_xcca_m.xcca004
                                               ,g_xcca_m.xcca005
 
                                               
               IF STATUS THEN
                  CALL cl_err("OPEN axct300_cl:", STATUS, 1)
                  CLOSE axct300_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_xcca3_d[l_ac].xcca001_3 IS NOT NULL
               AND g_xcca3_d[l_ac].xcca002_3 IS NOT NULL
               AND g_xcca3_d[l_ac].xcca006_3 IS NOT NULL
               AND g_xcca3_d[l_ac].xcca007_3 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xcca3_d_t.* = g_xcca3_d[l_ac].*  #BACKUP
               CALL axct300_set_entry_b(l_cmd)
               CALL axct300_set_no_entry_b(l_cmd)
               OPEN axct300_bcl USING g_enterprise,g_xcca_m.xccald,
                                                g_xcca_m.xcca003,
                                                g_xcca_m.xcca004,
                                                g_xcca_m.xcca005,
 
                                                g_xcca3_d_t.xcca001_3
                                                ,g_xcca3_d_t.xcca002_3
                                                ,g_xcca3_d_t.xcca006_3
                                                ,g_xcca3_d_t.xcca007_3
 
               IF STATUS THEN
                  CALL cl_err("OPEN axct300_bcl:", STATUS, 1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axct300_bcl INTO g_xcca3_d[l_ac].xcca001_3,g_xcca3_d[l_ac].xcca002_3,g_xcca3_d[l_ac].xcca006_3, 
                      g_xcca3_d[l_ac].xcca006_3_desc,g_xcca3_d[l_ac].xcca006_1_3_desc,g_xcca3_d[l_ac].xcca007_3, 
                      g_xcca3_d[l_ac].xcca101_3,g_xcca3_d[l_ac].xcca110a_3,g_xcca3_d[l_ac].xcca110b_3, 
                      g_xcca3_d[l_ac].xcca110c_3,g_xcca3_d[l_ac].xcca110d_3,g_xcca3_d[l_ac].xcca110e_3,g_xcca3_d[l_ac].xcca110f_3, 
                      g_xcca3_d[l_ac].xcca110g_3,g_xcca3_d[l_ac].xcca110h_3,g_xcca3_d[l_ac].xcca110_3,g_xcca3_d[l_ac].xcca102a_3, 
                      g_xcca3_d[l_ac].xcca102b_3,g_xcca3_d[l_ac].xcca102c_3,g_xcca3_d[l_ac].xcca102d_3,g_xcca3_d[l_ac].xcca102e_3, 
                      g_xcca3_d[l_ac].xcca102f_3,g_xcca3_d[l_ac].xcca102g_3,g_xcca3_d[l_ac].xcca102h_3,g_xcca2_d[l_ac].xcca001, 
                      g_xcca2_d[l_ac].xcca002,g_xcca2_d[l_ac].xcca006,g_xcca2_d[l_ac].xcca007,
                      g_xcca2_d[l_ac].xccaownid,g_xcca2_d[l_ac].xccaownid_desc,g_xcca2_d[l_ac].xccaowndp, 
                      g_xcca2_d[l_ac].xccaowndp_desc,g_xcca2_d[l_ac].xccacrtid,g_xcca2_d[l_ac].xccacrtid_desc, 
                      g_xcca2_d[l_ac].xccacrtdp,g_xcca2_d[l_ac].xccacrtdp_desc,g_xcca2_d[l_ac].xccacrtdt, 
                      g_xcca2_d[l_ac].xccamodid,g_xcca2_d[l_ac].xccamodid_desc,g_xcca2_d[l_ac].xccamoddt, 
                      g_xcca2_d[l_ac].xccacnfid,g_xcca2_d[l_ac].xccacnfid_desc,g_xcca2_d[l_ac].xccacnfdt, 
                      g_xcca2_d[l_ac].xccapstid,g_xcca2_d[l_ac].xccapstid_desc,g_xcca2_d[l_ac].xccapstdt 

                  IF SQLCA.sqlcode THEN
                      CALL cl_err(g_xcca1_d_t.xcca001_1,SQLCA.sqlcode,1)
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axct300_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            LET g_xcca3_d[l_ac].xcca001_3 = '3'
            #end add-point  
           
        
     

         #此段落由子樣板a02產生
         AFTER FIELD xcca110a_3
            
            #add-point:AFTER FIELD xcca110a
            IF NOT cl_null(g_xcca3_d[l_ac].xcca110a_3) AND NOT cl_null(g_xcca3_d[l_ac].xcca101_3) THEN
               LET g_xcca3_d[l_ac].xcca102a_3 = g_xcca3_d[l_ac].xcca110a_3 * g_xcca3_d[l_ac].xcca101_3
            END IF
            CALL axct300_xcca110_sum3()
            LET g_xcca3_d[l_ac].xcca110a_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110a_3,1)
            LET g_xcca3_d[l_ac].xcca102a_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca102a_3,2)
            LET g_xcca3_d[l_ac].xcca110_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110_3,1)
            #END add-point

 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110b_3
            
            #add-point:AFTER FIELD xcca110b
            IF NOT cl_null(g_xcca3_d[l_ac].xcca110b_3) AND NOT cl_null(g_xcca3_d[l_ac].xcca101_3) THEN
               LET g_xcca3_d[l_ac].xcca102b_3 = g_xcca3_d[l_ac].xcca110b_3 * g_xcca3_d[l_ac].xcca101_3
            END IF
            CALL axct300_xcca110_sum3()
            LET g_xcca3_d[l_ac].xcca110b_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110b_3,1)
            LET g_xcca3_d[l_ac].xcca102b_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca102b_3,2)
            LET g_xcca3_d[l_ac].xcca110_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110_3,1)
            #END add-point
            

         #此段落由子樣板a02產生
         AFTER FIELD xcca110c_3
            
            #add-point:AFTER FIELD xcca110c
            IF NOT cl_null(g_xcca3_d[l_ac].xcca110c_3) AND NOT cl_null(g_xcca3_d[l_ac].xcca101_3) THEN
               LET g_xcca3_d[l_ac].xcca102c_3 = g_xcca3_d[l_ac].xcca110c_3 * g_xcca3_d[l_ac].xcca101_3
            END IF
            CALL axct300_xcca110_sum3()
            LET g_xcca3_d[l_ac].xcca110c_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110c_3,1)
            LET g_xcca3_d[l_ac].xcca102c_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca102c_3,2)
            LET g_xcca3_d[l_ac].xcca110_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110_3,1)
            #END add-point
            
         #此段落由子樣板a02產生
         AFTER FIELD xcca110d_3
            
            #add-point:AFTER FIELD xcca110d
            IF NOT cl_null(g_xcca3_d[l_ac].xcca110d_3) AND NOT cl_null(g_xcca3_d[l_ac].xcca101_3) THEN
               LET g_xcca3_d[l_ac].xcca102d_3 = g_xcca3_d[l_ac].xcca110d_3 * g_xcca3_d[l_ac].xcca101_3
            END IF
            CALL axct300_xcca110_sum3()
            LET g_xcca3_d[l_ac].xcca110d_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110d_3,1)
            LET g_xcca3_d[l_ac].xcca102d_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca102d_3,2)
            LET g_xcca3_d[l_ac].xcca110_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110_3,1)
            #END add-point
            
         #此段落由子樣板a02產生
         AFTER FIELD xcca110e_3
            
            #add-point:AFTER FIELD xcca110e
            IF NOT cl_null(g_xcca3_d[l_ac].xcca110e_3) AND NOT cl_null(g_xcca3_d[l_ac].xcca101_3) THEN
               LET g_xcca3_d[l_ac].xcca102e_3 = g_xcca3_d[l_ac].xcca110e_3 * g_xcca3_d[l_ac].xcca101_3
            END IF
            CALL axct300_xcca110_sum3()
            LET g_xcca3_d[l_ac].xcca110e_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110e_3,1)
            LET g_xcca3_d[l_ac].xcca102e_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca102e_3,2)
            LET g_xcca3_d[l_ac].xcca110_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110_3,1)
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD xcca110f_3
            
            #add-point:AFTER FIELD xcca110f
            IF NOT cl_null(g_xcca3_d[l_ac].xcca110f_3) AND NOT cl_null(g_xcca3_d[l_ac].xcca101_3) THEN
               LET g_xcca3_d[l_ac].xcca102f_3 = g_xcca3_d[l_ac].xcca110f_3 * g_xcca3_d[l_ac].xcca101_3
            END IF
            CALL axct300_xcca110_sum3()
            LET g_xcca3_d[l_ac].xcca110f_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110f_3,1)
            LET g_xcca3_d[l_ac].xcca102f_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca102f_3,2)
            LET g_xcca3_d[l_ac].xcca110_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110_3,1)
            #END add-point
            
 
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110g_3
            
            #add-point:AFTER FIELD xcca110g
            IF NOT cl_null(g_xcca3_d[l_ac].xcca110g_3) AND NOT cl_null(g_xcca3_d[l_ac].xcca101_3) THEN
               LET g_xcca3_d[l_ac].xcca102g_3 = g_xcca3_d[l_ac].xcca110g_3 * g_xcca3_d[l_ac].xcca101_3
            END IF
            CALL axct300_xcca110_sum3()
            LET g_xcca3_d[l_ac].xcca110g_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110g_3,1)
            LET g_xcca3_d[l_ac].xcca102g_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca102g_3,2)
            LET g_xcca3_d[l_ac].xcca110_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110_3,1)
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110h_3
            
            #add-point:AFTER FIELD xcca110h
            IF NOT cl_null(g_xcca3_d[l_ac].xcca110h_3) AND NOT cl_null(g_xcca3_d[l_ac].xcca101_3) THEN
               LET g_xcca3_d[l_ac].xcca102h_3 = g_xcca3_d[l_ac].xcca110h_3 * g_xcca3_d[l_ac].xcca101_3
            END IF
            CALL axct300_xcca110_sum3()
            LET g_xcca3_d[l_ac].xcca110h_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110h_3,1)
            LET g_xcca3_d[l_ac].xcca102h_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca102h_3,2)
            LET g_xcca3_d[l_ac].xcca110_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110_3,1)
            #END add-point
            
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102a_3
            
            #add-point:AFTER FIELD xcca102a
             IF NOT cl_null(g_xcca3_d[l_ac].xcca102a_3) AND NOT cl_null(g_xcca3_d[l_ac].xcca101_3) THEN
               LET g_xcca3_d[l_ac].xcca110a_3 = g_xcca3_d[l_ac].xcca102a_3 / g_xcca3_d[l_ac].xcca101_3
            END IF
            CALL axct300_xcca110_sum3()
            LET g_xcca3_d[l_ac].xcca110a_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110a_3,1)
            LET g_xcca3_d[l_ac].xcca102a_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca102a_3,2)
            LET g_xcca3_d[l_ac].xcca110_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110_3,1)
            #END add-point
            
         #此段落由子樣板a02產生
         AFTER FIELD xcca102b_3
            
            #add-point:AFTER FIELD xcca102b
             IF NOT cl_null(g_xcca3_d[l_ac].xcca102b_3) AND NOT cl_null(g_xcca3_d[l_ac].xcca101_3) THEN
               LET g_xcca3_d[l_ac].xcca110b_3 = g_xcca3_d[l_ac].xcca102b_3 / g_xcca3_d[l_ac].xcca101_3
            END IF
            CALL axct300_xcca110_sum3()
            LET g_xcca3_d[l_ac].xcca110b_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110b_3,1)
            LET g_xcca3_d[l_ac].xcca102b_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca102b_3,2)
            LET g_xcca3_d[l_ac].xcca110_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110_3,1)
            #END add-point
            
         #此段落由子樣板a02產生
         AFTER FIELD xcca102c_3
            
            #add-point:AFTER FIELD xcca102c
             IF NOT cl_null(g_xcca3_d[l_ac].xcca102c_3) AND NOT cl_null(g_xcca3_d[l_ac].xcca101_3) THEN
               LET g_xcca3_d[l_ac].xcca110c_3 = g_xcca3_d[l_ac].xcca102c_3 / g_xcca3_d[l_ac].xcca101_3
            END IF
            CALL axct300_xcca110_sum3()
            LET g_xcca3_d[l_ac].xcca110c_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110c_3,1)
            LET g_xcca3_d[l_ac].xcca102c_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca102c_3,2)
            LET g_xcca3_d[l_ac].xcca110_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110_3,1)
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102d_3
            
             IF NOT cl_null(g_xcca3_d[l_ac].xcca102d_3) AND NOT cl_null(g_xcca3_d[l_ac].xcca101_3) THEN
               LET g_xcca3_d[l_ac].xcca110d_3 = g_xcca3_d[l_ac].xcca102d_3 / g_xcca3_d[l_ac].xcca101_3
            END IF
            CALL axct300_xcca110_sum3()
            LET g_xcca3_d[l_ac].xcca110d_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110d_3,1)
            LET g_xcca3_d[l_ac].xcca102d_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca102d_3,2)
            LET g_xcca3_d[l_ac].xcca110_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110_3,1)
           
         #此段落由子樣板a02產生
         AFTER FIELD xcca102e_3
            
             IF NOT cl_null(g_xcca3_d[l_ac].xcca102e_3) AND NOT cl_null(g_xcca3_d[l_ac].xcca101_3) THEN
               LET g_xcca3_d[l_ac].xcca110e_3 = g_xcca3_d[l_ac].xcca102e_3 / g_xcca3_d[l_ac].xcca101_3
            END IF
            CALL axct300_xcca110_sum3()
            LET g_xcca3_d[l_ac].xcca110e_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110e_3,1)
            LET g_xcca3_d[l_ac].xcca102e_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca102e_3,2)
            LET g_xcca3_d[l_ac].xcca110_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110_3,1)
           
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102f_3
            
             IF NOT cl_null(g_xcca3_d[l_ac].xcca102f_3) AND NOT cl_null(g_xcca3_d[l_ac].xcca101_3) THEN
               LET g_xcca3_d[l_ac].xcca110f_3 = g_xcca3_d[l_ac].xcca102f_3 / g_xcca3_d[l_ac].xcca101_3
            END IF
            CALL axct300_xcca110_sum3()
            LET g_xcca3_d[l_ac].xcca110f_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110f_3,1)
            LET g_xcca3_d[l_ac].xcca102f_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca102f_3,2)
            LET g_xcca3_d[l_ac].xcca110_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110_3,1)
            
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102g_3
            
             IF NOT cl_null(g_xcca3_d[l_ac].xcca102g_3) AND NOT cl_null(g_xcca3_d[l_ac].xcca101_3) THEN
               LET g_xcca3_d[l_ac].xcca110g_3 = g_xcca3_d[l_ac].xcca102g_3 / g_xcca3_d[l_ac].xcca101_3
            END IF
            CALL axct300_xcca110_sum3()
            LET g_xcca3_d[l_ac].xcca110g_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110g_3,1)
            LET g_xcca3_d[l_ac].xcca102g_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca102g_3,2)
            LET g_xcca3_d[l_ac].xcca110_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110_3,1)

 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102h_3
            
            IF NOT cl_null(g_xcca3_d[l_ac].xcca102h_3) AND NOT cl_null(g_xcca3_d[l_ac].xcca101_3) THEN
               LET g_xcca3_d[l_ac].xcca110h_3 = g_xcca3_d[l_ac].xcca102h_3 / g_xcca3_d[l_ac].xcca101_3
            END IF
            CALL axct300_xcca110_sum3()
            LET g_xcca3_d[l_ac].xcca110h_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110h_3,1)
            LET g_xcca3_d[l_ac].xcca102h_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca102h_3,2)
            LET g_xcca3_d[l_ac].xcca110_3 = s_curr_round(g_xcca_m.xccacomp,g_glaa020,g_xcca3_d[l_ac].xcca110_3,1)
            
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_xcca3_d[l_ac].* = g_xcca3_d_t.*
               CLOSE axct300_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_xcca3_d[l_ac].xcca001_3,-263,1)
               LET g_xcca3_d[l_ac].* = g_xcca3_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_xcca2_d[l_ac].xccamodid = g_user 
               LET g_xcca2_d[l_ac].xccamoddt = cl_get_current()
 
            
               #add-point:單身修改前
               LET g_xcca3_d_t.xcca001_3 = '3'
               #end add-point
         
               UPDATE xcca_t SET (xccald,xcca003,xcca004,xcca005,xcca001,xcca002,xcca006,xcca007,
                   xcca101,xcca110a,xcca110b,xcca110c,xcca110d,xcca110e,xcca110f,xcca110g,xcca110h,xcca110,xcca102a, 
                   xcca102b,xcca102c,xcca102d,xcca102e,xcca102f,xcca102g,xcca102h,xccaownid,xccaowndp, 
                   xccacrtid,xccacrtdp,xccacrtdt,xccamodid,xccamoddt,xccacnfid,xccacnfdt,xccapstid,xccapstdt) = (g_xcca_m.xccald, 
                   g_xcca_m.xcca003,g_xcca_m.xcca004,g_xcca_m.xcca005,g_xcca3_d[l_ac].xcca001_3,g_xcca3_d[l_ac].xcca002_3, 
                   g_xcca3_d[l_ac].xcca006_3,g_xcca3_d[l_ac].xcca007_3,g_xcca3_d[l_ac].xcca101_3, 
                   g_xcca3_d[l_ac].xcca110a_3,g_xcca3_d[l_ac].xcca110b_3,g_xcca3_d[l_ac].xcca110c_3,g_xcca3_d[l_ac].xcca110d_3, 
                   g_xcca3_d[l_ac].xcca110e_3,g_xcca3_d[l_ac].xcca110f_3,g_xcca3_d[l_ac].xcca110g_3,g_xcca3_d[l_ac].xcca110h_3,
                   g_xcca3_d[l_ac].xcca110_3,                   
                   g_xcca3_d[l_ac].xcca102a_3,g_xcca3_d[l_ac].xcca102b_3,g_xcca3_d[l_ac].xcca102c_3,g_xcca3_d[l_ac].xcca102d_3, 
                   g_xcca3_d[l_ac].xcca102e_3,g_xcca3_d[l_ac].xcca102f_3,g_xcca3_d[l_ac].xcca102g_3,g_xcca3_d[l_ac].xcca102h_3, 
                   g_xcca2_d[l_ac].xccaownid,g_xcca2_d[l_ac].xccaowndp,g_xcca2_d[l_ac].xccacrtid,g_xcca2_d[l_ac].xccacrtdp, 
                   g_xcca2_d[l_ac].xccacrtdt,g_xcca2_d[l_ac].xccamodid,g_xcca2_d[l_ac].xccamoddt,g_xcca2_d[l_ac].xccacnfid, 
                   g_xcca2_d[l_ac].xccacnfdt,g_xcca2_d[l_ac].xccapstid,g_xcca2_d[l_ac].xccapstdt)
                WHERE xccaent = g_enterprise AND xccald = g_xcca_m.xccald 
                 AND xcca003 = g_xcca_m.xcca003 
                 AND xcca004 = g_xcca_m.xcca004 
                 AND xcca005 = g_xcca_m.xcca005 
 
                 AND xcca001 = g_xcca3_d_t.xcca001_3 #項次   
                 AND xcca002 = g_xcca3_d_t.xcca002_3  
                 AND xcca006 = g_xcca3_d_t.xcca006_3  
                 AND xcca007 = g_xcca3_d_t.xcca007_3  
 
                 
               #add-point:單身修改中

                  CALL s_aooi160_get_exrate('1',g_xcca_m.xccacomp,l_bdate,g_glaa001,
                                                    #目的幣別;  交易金額;              匯類類型
                                                     g_glaa016,0,g_glaa022)
                              RETURNING l_rate
                  LET g_xcca_d[l_ac].xcca110a = g_xcca3_d[l_ac].xcca110a_3 / l_rate
                  LET g_xcca_d[l_ac].xcca110b = g_xcca3_d[l_ac].xcca110b_3 / l_rate
                  LET g_xcca_d[l_ac].xcca110c = g_xcca3_d[l_ac].xcca110c_3 / l_rate
                  LET g_xcca_d[l_ac].xcca110d = g_xcca3_d[l_ac].xcca110d_3 / l_rate
                  LET g_xcca_d[l_ac].xcca110e = g_xcca3_d[l_ac].xcca110e_3 / l_rate
                  LET g_xcca_d[l_ac].xcca110f = g_xcca3_d[l_ac].xcca110f_3 / l_rate
                  LET g_xcca_d[l_ac].xcca110g = g_xcca3_d[l_ac].xcca110g_3 / l_rate
                  LET g_xcca_d[l_ac].xcca110h = g_xcca3_d[l_ac].xcca110h_3 / l_rate
                  LET g_xcca_d[l_ac].xcca102a = g_xcca3_d[l_ac].xcca110a_3 / l_rate * g_xcca3_d[l_ac].xcca101_3
                  LET g_xcca_d[l_ac].xcca102b = g_xcca3_d[l_ac].xcca110b_3 / l_rate * g_xcca3_d[l_ac].xcca101_3
                  LET g_xcca_d[l_ac].xcca102c = g_xcca3_d[l_ac].xcca110c_3 / l_rate * g_xcca3_d[l_ac].xcca101_3
                  LET g_xcca_d[l_ac].xcca102d = g_xcca3_d[l_ac].xcca110d_3 / l_rate * g_xcca3_d[l_ac].xcca101_3
                  LET g_xcca_d[l_ac].xcca102e = g_xcca3_d[l_ac].xcca110e_3 / l_rate * g_xcca3_d[l_ac].xcca101_3
                  LET g_xcca_d[l_ac].xcca102f = g_xcca3_d[l_ac].xcca110f_3 / l_rate * g_xcca3_d[l_ac].xcca101_3
                  LET g_xcca_d[l_ac].xcca102g = g_xcca3_d[l_ac].xcca110g_3 / l_rate * g_xcca3_d[l_ac].xcca101_3
                  LET g_xcca_d[l_ac].xcca102h = g_xcca3_d[l_ac].xcca110h_3 / l_rate * g_xcca3_d[l_ac].xcca101_3
                  CALL axct300_xcca110_sum()

               UPDATE xcca_t SET (xccald,xcca003,xcca004,xcca005,xcca001,xcca002,xcca006,xcca007,
                   xcca101,xcca110a,xcca110b,xcca110c,xcca110d,xcca110e,xcca110f,xcca110g,xcca110h,xcca110,xcca102a, 
                   xcca102b,xcca102c,xcca102d,xcca102e,xcca102f,xcca102g,xcca102h,xccaownid,xccaowndp, 
                   xccacrtid,xccacrtdp,xccacrtdt,xccamodid,xccamoddt,xccacnfid,xccacnfdt,xccapstid,xccapstdt) = (g_xcca_m.xccald, 
                   g_xcca_m.xcca003,g_xcca_m.xcca004,g_xcca_m.xcca005,g_xcca_d[l_ac].xcca001,g_xcca_d[l_ac].xcca002, 
                   g_xcca_d[l_ac].xcca006,g_xcca_d[l_ac].xcca007,g_xcca_d[l_ac].xcca101, 
                   g_xcca_d[l_ac].xcca110a,g_xcca_d[l_ac].xcca110b,g_xcca_d[l_ac].xcca110c,g_xcca_d[l_ac].xcca110d, 
                   g_xcca_d[l_ac].xcca110e,g_xcca_d[l_ac].xcca110f,g_xcca_d[l_ac].xcca110g,g_xcca_d[l_ac].xcca110h, 
                   g_xcca_d[l_ac].xcca110,
                   g_xcca_d[l_ac].xcca102a,g_xcca_d[l_ac].xcca102b,g_xcca_d[l_ac].xcca102c,g_xcca_d[l_ac].xcca102d, 
                   g_xcca_d[l_ac].xcca102e,g_xcca_d[l_ac].xcca102f,g_xcca_d[l_ac].xcca102g,g_xcca_d[l_ac].xcca102h, 
                   g_xcca2_d[l_ac].xccaownid,g_xcca2_d[l_ac].xccaowndp,g_xcca2_d[l_ac].xccacrtid,g_xcca2_d[l_ac].xccacrtdp, 
                   g_xcca2_d[l_ac].xccacrtdt,g_xcca2_d[l_ac].xccamodid,g_xcca2_d[l_ac].xccamoddt,g_xcca2_d[l_ac].xccacnfid, 
                   g_xcca2_d[l_ac].xccacnfdt,g_xcca2_d[l_ac].xccapstid,g_xcca2_d[l_ac].xccapstdt)
                WHERE xccaent = g_enterprise AND xccald = g_xcca_m.xccald 
                 AND xcca003 = g_xcca_m.xcca003 
                 AND xcca004 = g_xcca_m.xcca004 
                 AND xcca005 = g_xcca_m.xcca005 
 
                 AND xcca001 = '1' #項次   
                 AND xcca002 = g_xcca3_d_t.xcca002_3  
                 AND xcca006 = g_xcca3_d_t.xcca006_3  
                 AND xcca007 = g_xcca3_d_t.xcca007_3  
               
               IF g_glaa015 = 'Y' THEN
                  LET l_rate = 1
                  CALL s_aooi160_get_exrate('1',g_xcca_m.xccacomp,l_bdate,g_glaa001,
                                                    #目的幣別;  交易金額;              匯類類型
                                                     g_glaa016,0,g_glaa018)
                      RETURNING l_rate
                  LET g_xcca1_d[l_ac].xcca110a_1 = g_xcca_d[l_ac].xcca110a * l_rate
                  LET g_xcca1_d[l_ac].xcca110b_1 = g_xcca_d[l_ac].xcca110b * l_rate
                  LET g_xcca1_d[l_ac].xcca110c_1 = g_xcca_d[l_ac].xcca110c * l_rate
                  LET g_xcca1_d[l_ac].xcca110d_1 = g_xcca_d[l_ac].xcca110d * l_rate
                  LET g_xcca1_d[l_ac].xcca110e_1 = g_xcca_d[l_ac].xcca110e * l_rate
                  LET g_xcca1_d[l_ac].xcca110f_1 = g_xcca_d[l_ac].xcca110f * l_rate
                  LET g_xcca1_d[l_ac].xcca110g_1 = g_xcca_d[l_ac].xcca110g * l_rate
                  LET g_xcca1_d[l_ac].xcca110h_1 = g_xcca_d[l_ac].xcca110h * l_rate
                  LET g_xcca1_d[l_ac].xcca102a_1 = g_xcca_d[l_ac].xcca110a * l_rate * g_xcca3_d[l_ac].xcca101_3
                  LET g_xcca1_d[l_ac].xcca102b_1 = g_xcca_d[l_ac].xcca110b * l_rate * g_xcca3_d[l_ac].xcca101_3
                  LET g_xcca1_d[l_ac].xcca102c_1 = g_xcca_d[l_ac].xcca110c * l_rate * g_xcca3_d[l_ac].xcca101_3
                  LET g_xcca1_d[l_ac].xcca102d_1 = g_xcca_d[l_ac].xcca110d * l_rate * g_xcca3_d[l_ac].xcca101_3
                  LET g_xcca1_d[l_ac].xcca102e_1 = g_xcca_d[l_ac].xcca110e * l_rate * g_xcca3_d[l_ac].xcca101_3
                  LET g_xcca1_d[l_ac].xcca102f_1 = g_xcca_d[l_ac].xcca110f * l_rate * g_xcca3_d[l_ac].xcca101_3
                  LET g_xcca1_d[l_ac].xcca102g_1 = g_xcca_d[l_ac].xcca110g * l_rate * g_xcca3_d[l_ac].xcca101_3
                  LET g_xcca1_d[l_ac].xcca102h_1 = g_xcca_d[l_ac].xcca110h * l_rate * g_xcca3_d[l_ac].xcca101_3
                  CALL axct300_xcca110_sum1()
               
                 
                  UPDATE xcca_t SET (xccald,xcca003,xcca004,xcca005,xcca001,xcca002,xcca006,xcca007,
                      xcca101,xcca110a,xcca110b,xcca110c,xcca110d,xcca110e,xcca110f,xcca110g,xcca110h,xcca110,xcca102a, 
                      xcca102b,xcca102c,xcca102d,xcca102e,xcca102f,xcca102g,xcca102h,xccaownid,xccaowndp, 
                      xccacrtid,xccacrtdp,xccacrtdt,xccamodid,xccamoddt,xccacnfid,xccacnfdt,xccapstid,xccapstdt) = (g_xcca_m.xccald, 
                      g_xcca_m.xcca003,g_xcca_m.xcca004,g_xcca_m.xcca005,g_xcca1_d[l_ac].xcca001_1,g_xcca1_d[l_ac].xcca002_1, 
                      g_xcca1_d[l_ac].xcca006_1,g_xcca1_d[l_ac].xcca007_1,g_xcca1_d[l_ac].xcca101_1, 
                      g_xcca1_d[l_ac].xcca110a_1,g_xcca1_d[l_ac].xcca110b_1,g_xcca1_d[l_ac].xcca110c_1,g_xcca1_d[l_ac].xcca110d_1, 
                      g_xcca1_d[l_ac].xcca110e_1,g_xcca1_d[l_ac].xcca110f_1,g_xcca1_d[l_ac].xcca110g_1,g_xcca1_d[l_ac].xcca110h_1, 
                      g_xcca1_d[l_ac].xcca110_1,
                      g_xcca1_d[l_ac].xcca102a_1,g_xcca1_d[l_ac].xcca102b_1,g_xcca1_d[l_ac].xcca102c_1,g_xcca1_d[l_ac].xcca102d_1, 
                      g_xcca1_d[l_ac].xcca102e_1,g_xcca1_d[l_ac].xcca102f_1,g_xcca1_d[l_ac].xcca102g_1,g_xcca1_d[l_ac].xcca102h_1, 
                      g_xcca2_d[l_ac].xccaownid,g_xcca2_d[l_ac].xccaowndp,g_xcca2_d[l_ac].xccacrtid,g_xcca2_d[l_ac].xccacrtdp, 
                      g_xcca2_d[l_ac].xccacrtdt,g_xcca2_d[l_ac].xccamodid,g_xcca2_d[l_ac].xccamoddt,g_xcca2_d[l_ac].xccacnfid, 
                      g_xcca2_d[l_ac].xccacnfdt,g_xcca2_d[l_ac].xccapstid,g_xcca2_d[l_ac].xccapstdt)
                   WHERE xccaent = g_enterprise AND xccald = g_xcca_m.xccald 
                    AND xcca003 = g_xcca_m.xcca003 
                    AND xcca004 = g_xcca_m.xcca004 
                    AND xcca005 = g_xcca_m.xcca005 
                  
                    AND xcca001 = '2' #項次   
                    AND xcca002 = g_xcca3_d_t.xcca002_3  
                    AND xcca006 = g_xcca3_d_t.xcca006_3  
                    AND xcca007 = g_xcca3_d_t.xcca007_3  
               END IF
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xcca_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   CALL cl_err("xcca_t",SQLCA.sqlcode,1)  
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcca_m.xccald
               LET gs_keys_bak[1] = g_xccald_t
               LET gs_keys[2] = g_xcca_m.xcca003
               LET gs_keys_bak[2] = g_xcca003_t
               LET gs_keys[3] = g_xcca_m.xcca004
               LET gs_keys_bak[3] = g_xcca004_t
               LET gs_keys[4] = g_xcca_m.xcca005
               LET gs_keys_bak[4] = g_xcca005_t
               LET gs_keys[5] = g_xcca3_d[g_detail_idx].xcca001_3
               LET gs_keys_bak[5] = g_xcca3_d_t.xcca001_3
               LET gs_keys[6] = g_xcca3_d[g_detail_idx].xcca002_3
               LET gs_keys_bak[6] = g_xcca3_d_t.xcca002_3
               LET gs_keys[7] = g_xcca3_d[g_detail_idx].xcca006_3
               LET gs_keys_bak[7] = g_xcca3_d_t.xcca006_3
               LET gs_keys[8] = g_xcca3_d[g_detail_idx].xcca007_3
               LET gs_keys_bak[8] = g_xcca3_d_t.xcca007_3
               CALL axct300_update_b('xcca_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後

               #end add-point
            END IF
 
         AFTER INPUT   
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xcca3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xcca3_d.getLength()+1
            
      END INPUT]]>
  </point>
  <point name="insert.after_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL g_xcca1_d.clear()
      CALL g_xcca3_d.clear()]]>
  </point>
  <point name="insert.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL g_xcca1_d.clear()
   CALL g_xcca3_d.clear()]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_get_para(g_enterprise,g_xcca_m.xccacomp,'S-FIN-6010') RETURNING g_xcca_m.xcca004
      CALL cl_get_para(g_enterprise,g_xcca_m.xccacomp,'S-FIN-6011') RETURNING g_xcca_m.xcca005]]>
  </point>
  <point name="menu.open_axct300_01" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[              #CALL axct300_01()
              #CALL axct300_excelexample(ui.Interface.getRootNode(),base.TypeInfo.create(g_xcca_d),'Y')
               CALL axct300_s01()]]>
  </point>
  <point name="menu.open_axct300_02" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL axct300_02() RETURNING l_success
               IF l_success = TRUE THEN
                  CALL s_transaction_end('Y','1')
                  ERROR "INSERT O.K"
               ELSE
                  CALL s_transaction_end('N','1')
               END IF
               CALL axct300_show()]]>
  </point>
  <point name="menu.open_axct300_s01" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL axct300_s01()]]>
  </point>
  <point name="menu.open_axrt300_02" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL axrt300_02()]]>
  </point>
  <point name="query.befroe_query" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL g_xcca1_d.clear()
   CALL g_xcca3_d.clear()]]>
  </point>
  <point name="ref_show.body.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcca_d[l_ac].xcca006
#            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaalent.imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_xcca_d[l_ac].xcca006_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcca_d[l_ac].xcca006_desc
#            
            CALL axct300_xcca006_desc(g_xcca_d[l_ac].xcca006) 
              RETURNING g_xcca_d[l_ac].xcca006_desc,g_xcca_d[l_ac].xcca006_1_desc  
]]>
  </point>
  <point name="ref_show.body2.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcca2_d[l_ac].xccaownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_xcca2_d[l_ac].xccaownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcca2_d[l_ac].xccaownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcca2_d[l_ac].xccaowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_xcca2_d[l_ac].xccaowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcca2_d[l_ac].xccaowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcca2_d[l_ac].xccacrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_xcca2_d[l_ac].xccacrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcca2_d[l_ac].xccacrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcca2_d[l_ac].xccacrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_xcca2_d[l_ac].xccacrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcca2_d[l_ac].xccacrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcca2_d[l_ac].xccamodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_xcca2_d[l_ac].xccamodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcca2_d[l_ac].xccamodid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcca2_d[l_ac].xccacnfid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_xcca2_d[l_ac].xccacnfid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcca2_d[l_ac].xccacnfid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcca2_d[l_ac].xccapstid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_xcca2_d[l_ac].xccapstid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcca2_d[l_ac].xccapstid_desc
]]>
  </point>
  <point name="ref_show.head.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcca_m.xccacomp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_xcca_m.xccacomp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcca_m.xccacomp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_xcca_m.xccald
#            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_xcca_m.xccald_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_xcca_m.xccald_desc
#            
            CALL axct300_xcca001_ref()
#            CALL axct300_xcca003_desc()
]]>
  </point>
  <point name="show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL axct300_b_fill1(g_wc3) #單身填充
   CALL axct300_b_fill3(g_wc3) #單身填充
   CALL cl_show_fld_cont() ]]>
  </point>
  <point name="show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   #檢查年度期別>=關賬日期，則不可修改刪除
   CALL cl_get_para(g_enterprise,g_xcca_m.xccacomp,'S-FIN-6012') RETURNING l_date
   SELECT glaa001,glaa015,glaa016,glaa018,glaa019,glaa020,glaa022 
     INTO g_glaa001,g_glaa015,g_glaa016,g_glaa018,g_glaa019,g_glaa020,g_glaa022 
     FROM glaa_t
    WHERE glaaent = g_enterprise AND glaald = g_xcca_m.xccald
   IF g_xcca_m.xcca004 < YEAR(l_date) THEN
      CALL cl_set_act_visible("modify,modify_detail,delete", FALSE)
   ELSE
      IF g_xcca_m.xcca004 = YEAR(l_date) THEN
         IF g_xcca_m.xcca005 < MONTH(l_date) THEN
            CALL cl_set_act_visible("modify,modify_detail,delete", FALSE)
          ELSE
            CALL cl_set_act_visible("modify,modify_detail,delete", TRUE)
         END IF
      ELSE
         CALL cl_set_act_visible("modify,modify_detail,delete", TRUE)
      END IF
   END IF
   IF g_glaa015 = 'N' THEN
      CALL cl_set_comp_visible('bpage_2',FALSE)
   ELSE
      CALL cl_set_comp_visible('bpage_2',TRUE)
   END IF
   IF g_glaa019 = 'N' THEN
      CALL cl_set_comp_visible('bpage_3',FALSE)
   ELSE
      CALL cl_set_comp_visible('bpage_3',TRUE)
   END IF
   IF g_bfill = "Y" THEN
      CALL axct300_b_fill1(g_wc2) #單身填充
      CALL axct300_b_fill3(g_wc2) #單身填充
   END IF]]>
  </point>
  <point name="show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_date  DATE]]>
  </point>
  <point name="ui_detailshow.more" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)      
#      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_visible("bpage_2,bpage_3",TRUE)]]>
  </point>
  <point name="ui_dialog.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL axct300_b_fill1(g_wc3)
               CALL axct300_b_fill3(g_wc3)]]>
  </point>
  <point name="ui_dialog.body2.action" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[           ]]>
  </point>
  <point name="ui_dialog.body2.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         DISPLAY ARRAY g_xcca1_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail3")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               
               #add-point:page1自定義行為

               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               
               LET g_current_page = 2
               
               
            
         END DISPLAY
         DISPLAY ARRAY g_xcca3_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail4")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               
               #add-point:page1自定義行為

               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 3
               
         END DISPLAY]]>
  </point>
  <point name="ui_dialog.page1.action" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_current_page = 1]]>
  </point>
  <section id="axct300.b_fill" ver="17" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION axct300_b_fill(p_wc2)
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   #先清空單身變數內容
   CALL g_xcca_d.clear()
   CALL g_xcca2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   LET g_sql = "SELECT  UNIQUE xcca001,xcca002,xcca006,xcca007,xcca101,xcca110a,xcca110b,xcca110c,xcca110d, 
       xcca110e,xcca110f,xcca110g,xcca110h,xcca110,xcca102a,xcca102b,xcca102c,xcca102d,xcca102e,xcca102f, 
       xcca102g,xcca102h,xcca001,xcca002,xcca006,xcca007,xccaownid,xccaowndp,xccacrtid,xccacrtdp,xccacrtdt, 
       xccamodid,xccamoddt,xccacnfid,xccacnfdt,xccapstid,xccapstdt,t1.imaal003 ,t2.ooag011 ,t3.ooefl003 , 
       t4.ooag011 ,t5.ooefl003 ,t6.ooag011 ,t7.ooag011 ,t8.ooag011 FROM xcca_t",   
               "",
               
                              " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=xcca006 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=xccaownid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=xccaowndp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent='"||g_enterprise||"' AND t4.ooag001=xccacrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=xccacrtdp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent='"||g_enterprise||"' AND t6.ooag001=xccamodid  ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=xccacnfid  ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent='"||g_enterprise||"' AND t8.ooag001=xccapstid  ",
 
               " WHERE xccaent= ? AND xccald=? AND xcca003=? AND xcca004=? AND xcca005=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("xcca_t")
   END IF
   
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axct300_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY xcca_t.xcca001,xcca_t.xcca002,xcca_t.xcca006,xcca_t.xcca007"
      
      #add-point:b_fill段fill_before
      {<point name="b_fill.fill_before"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE axct300_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR axct300_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xcca_m.xccald,g_xcca_m.xcca003,g_xcca_m.xcca004,g_xcca_m.xcca005
                                               
      FOREACH b_fill_cs INTO g_xcca_d[l_ac].xcca001,g_xcca_d[l_ac].xcca002,g_xcca_d[l_ac].xcca006,g_xcca_d[l_ac].xcca007, 
          g_xcca_d[l_ac].xcca101,g_xcca_d[l_ac].xcca110a,g_xcca_d[l_ac].xcca110b,g_xcca_d[l_ac].xcca110c, 
          g_xcca_d[l_ac].xcca110d,g_xcca_d[l_ac].xcca110e,g_xcca_d[l_ac].xcca110f,g_xcca_d[l_ac].xcca110g, 
          g_xcca_d[l_ac].xcca110h,g_xcca_d[l_ac].xcca110,g_xcca_d[l_ac].xcca102a,g_xcca_d[l_ac].xcca102b, 
          g_xcca_d[l_ac].xcca102c,g_xcca_d[l_ac].xcca102d,g_xcca_d[l_ac].xcca102e,g_xcca_d[l_ac].xcca102f, 
          g_xcca_d[l_ac].xcca102g,g_xcca_d[l_ac].xcca102h,g_xcca2_d[l_ac].xcca001,g_xcca2_d[l_ac].xcca002, 
          g_xcca2_d[l_ac].xcca006,g_xcca2_d[l_ac].xcca007,g_xcca2_d[l_ac].xccaownid,g_xcca2_d[l_ac].xccaowndp, 
          g_xcca2_d[l_ac].xccacrtid,g_xcca2_d[l_ac].xccacrtdp,g_xcca2_d[l_ac].xccacrtdt,g_xcca2_d[l_ac].xccamodid, 
          g_xcca2_d[l_ac].xccamoddt,g_xcca2_d[l_ac].xccacnfid,g_xcca2_d[l_ac].xccacnfdt,g_xcca2_d[l_ac].xccapstid, 
          g_xcca2_d[l_ac].xccapstdt,g_xcca_d[l_ac].xcca006_desc,g_xcca2_d[l_ac].xccaownid_desc,g_xcca2_d[l_ac].xccaowndp_desc, 
          g_xcca2_d[l_ac].xccacrtid_desc,g_xcca2_d[l_ac].xccacrtdp_desc,g_xcca2_d[l_ac].xccamodid_desc, 
          g_xcca2_d[l_ac].xccacnfid_desc,g_xcca2_d[l_ac].xccapstid_desc
                             
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         #帶出公用欄位reference值
         
         
         #此段落由子樣板a12產生
      #LET g_xcca2_d[l_ac].xccaownid_desc = cl_get_username(g_xcca2_d[l_ac].xccaownid)
      #LET g_xcca2_d[l_ac].xccaowndp_desc = cl_get_deptname(g_xcca2_d[l_ac].xccaowndp)
      #LET g_xcca2_d[l_ac].xccacrtid_desc = cl_get_username(g_xcca2_d[l_ac].xccacrtid)
      #LET g_xcca2_d[l_ac].xccacrtdp_desc = cl_get_deptname(g_xcca2_d[l_ac].xccacrtdp)
      #LET g_xcca2_d[l_ac].xccamodid_desc = cl_get_username(g_xcca2_d[l_ac].xccamodid)
      #LET g_xcca2_d[l_ac].xccacnfid_desc = cl_get_deptname(g_xcca2_d[l_ac].xccacnfid)
      #LET g_xcca2_d[l_ac].xccapstid_desc = cl_get_deptname(g_xcca2_d[l_ac].xccapstid)
      
 
 
 
        
         #add-point:單身資料抓取
         {<point name="bfill.foreach"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      
            CALL g_xcca_d.deleteElement(g_xcca_d.getLength())
      CALL g_xcca2_d.deleteElement(g_xcca2_d.getLength())
 
   END IF
   
   #add-point:b_fill段more
   {<point name="b_fill.more"/>}
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE axct300_pb   
   
END FUNCTION
]]>
  </section>
  <section id="axct300.b_fill2" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION axct300_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
]]>
  </section>
  <section id="axct300.before_delete" ver="3" status="" src="s">
    <![CDATA[#+ 單身db資料刪除
PRIVATE FUNCTION axct300_before_delete()
   #add-point:before_delete段define
   {<point name="before_delete.define"/>}
   #end add-point 
   
   #add-point:單筆刪除前
   {<point name="delete.body.b_single_delete" mark="Y"/>}
   #end add-point
   
   DELETE FROM xcca_t
    WHERE xccaent = g_enterprise AND xccald = g_xcca_m.xccald AND
                              xcca003 = g_xcca_m.xcca003 AND
                              xcca004 = g_xcca_m.xcca004 AND
                              xcca005 = g_xcca_m.xcca005 AND
 
          xcca001 = g_xcca_d_t.xcca001
      AND xcca002 = g_xcca_d_t.xcca002
      AND xcca006 = g_xcca_d_t.xcca006
      AND xcca007 = g_xcca_d_t.xcca007
 
      
   #add-point:單筆刪除中
   {<point name="delete.body.m_single_delete"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("xcca_t",SQLCA.sqlcode,1)
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後
   {<point name="delete.body.a_single_delete"/>}
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
]]>
  </section>
  <section id="axct300.browser_fill" ver="5" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axct300_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point    
   
   CALL g_browser.clear()
 
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "xccald"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF l_wc2 <> " 1=1" OR NOT cl_null(l_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xccald ",
                      ", xcca003 ",
                      ", xcca004 ",
                      ", xcca005 ",
 
                      " FROM xcca_t ",
                      " ",
                      " ",
 
                      " WHERE xccaent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xcca_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xccald ",
                      ", xcca003 ",
                      ", xcca004 ",
                      ", xcca005 ",
 
                      " FROM xcca_t ",
                      " ",
                      " ",
                      " WHERE xccaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xcca_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
   
   #若超過最大顯示筆數
   LET g_error_show = 0
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照xccald,xcca003,xcca004,xcca005 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT xccald,xcca003,xcca004,xcca005",
                " FROM xcca_t ",
 
                
                " WHERE xccaent = '" ||g_enterprise|| "' AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("xcca_t")
 
   #add-point:browser_fill,sql_rank前
   {<point name="browser_fill.before_sql_rank"/>}
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前
   {<point name="browser_fill.before_pre"/>}
   #end add-point
    
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料    
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_xccald,g_browser[g_cnt].b_xcca003,g_browser[g_cnt].b_xcca004, 
       g_browser[g_cnt].b_xcca005 
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point    
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_xcca_m.* TO NULL
      CALL g_xcca_d.clear()
      CALL g_xcca2_d.clear()
 
      #add-point:browser_fill段after_clear
      {<point name="browser_fill.after_clear"/>}
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="axct300.browser_search" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axct300_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1"
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY xccald"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL axct300_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="axct300.construct" ver="13" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION axct300_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_xcca_m.* TO NULL
   CALL g_xcca_d.clear()
   CALL g_xcca2_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外
   {<point name="cs.head.before"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xccacomp,xccald,xcca004,xcca005,xcca003
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
                 #Ctrlp:construct.c.xccacomp
         ON ACTION controlp INFIELD xccacomp
            #add-point:ON ACTION controlp INFIELD xccacomp
            {<point name="construct.c.xccacomp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccacomp
            #add-point:BEFORE FIELD xccacomp
            {<point name="construct.b.xccacomp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccacomp
            
            #add-point:AFTER FIELD xccacomp
            {<point name="construct.a.xccacomp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccald
         ON ACTION controlp INFIELD xccald
            #add-point:ON ACTION controlp INFIELD xccald
            {<point name="construct.c.xccald" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccald
            #add-point:BEFORE FIELD xccald
            {<point name="construct.b.xccald" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccald
            
            #add-point:AFTER FIELD xccald
            {<point name="construct.a.xccald" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca004
            #add-point:BEFORE FIELD xcca004
            {<point name="construct.b.xcca004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca004
            
            #add-point:AFTER FIELD xcca004
            {<point name="construct.a.xcca004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xcca004
         ON ACTION controlp INFIELD xcca004
            #add-point:ON ACTION controlp INFIELD xcca004
            {<point name="construct.c.xcca004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca005
            #add-point:BEFORE FIELD xcca005
            {<point name="construct.b.xcca005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca005
            
            #add-point:AFTER FIELD xcca005
            {<point name="construct.a.xcca005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xcca005
         ON ACTION controlp INFIELD xcca005
            #add-point:ON ACTION controlp INFIELD xcca005
            {<point name="construct.c.xcca005" />}
            #END add-point
 
         #Ctrlp:construct.c.xcca003
         ON ACTION controlp INFIELD xcca003
            #add-point:ON ACTION controlp INFIELD xcca003
            {<point name="construct.c.xcca003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca003
            #add-point:BEFORE FIELD xcca003
            {<point name="construct.b.xcca003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca003
            
            #add-point:AFTER FIELD xcca003
            {<point name="construct.a.xcca003" />}
            #END add-point
            
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON xcca001,xcca002,xcca006,xcca006_1_desc,xcca007,xcca101,xcca110a,xcca110b, 
          xcca110c,xcca110d,xcca110e,xcca110f,xcca110g,xcca110h,xcca102a,xcca102b,xcca102c,xcca102d, 
          xcca102e,xcca102f,xcca102g,xcca102h,xccaownid,xccaowndp,xccacrtid,xccacrtdp,xccacrtdt,xccamodid, 
          xccamoddt,xccacnfid,xccacnfdt,xccapstid,xccapstdt
           FROM s_detail1[1].xcca001,s_detail1[1].xcca002,s_detail1[1].xcca006,s_detail1[1].xcca006_1_desc, 
               s_detail1[1].xcca007,s_detail1[1].xcca101,s_detail1[1].xcca110a,s_detail1[1].xcca110b, 
               s_detail1[1].xcca110c,s_detail1[1].xcca110d,s_detail1[1].xcca110e,s_detail1[1].xcca110f, 
               s_detail1[1].xcca110g,s_detail1[1].xcca110h,s_detail1[1].xcca102a,s_detail1[1].xcca102b, 
               s_detail1[1].xcca102c,s_detail1[1].xcca102d,s_detail1[1].xcca102e,s_detail1[1].xcca102f, 
               s_detail1[1].xcca102g,s_detail1[1].xcca102h,s_detail2[1].xccaownid,s_detail2[1].xccaowndp, 
               s_detail2[1].xccacrtid,s_detail2[1].xccacrtdp,s_detail2[1].xccacrtdt,s_detail2[1].xccamodid, 
               s_detail2[1].xccamoddt,s_detail2[1].xccacnfid,s_detail2[1].xccacnfdt,s_detail2[1].xccapstid, 
               s_detail2[1].xccapstdt
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
         #單身公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<xccacrtdt>>----
         AFTER FIELD xccacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xccamoddt>>----
         AFTER FIELD xccamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xccacnfdt>>----
         AFTER FIELD xccacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xccapstdt>>----
         AFTER FIELD xccapstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
           
         #單身一般欄位開窗相關處理
                  #此段落由子樣板a01產生
         BEFORE FIELD xcca001
            #add-point:BEFORE FIELD xcca001
            {<point name="construct.b.page1.xcca001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca001
            
            #add-point:AFTER FIELD xcca001
            {<point name="construct.a.page1.xcca001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca001
         ON ACTION controlp INFIELD xcca001
            #add-point:ON ACTION controlp INFIELD xcca001
            {<point name="construct.c.page1.xcca001" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xcca002
         ON ACTION controlp INFIELD xcca002
            #add-point:ON ACTION controlp INFIELD xcca002
            {<point name="construct.c.page1.xcca002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca002
            #add-point:BEFORE FIELD xcca002
            {<point name="construct.b.page1.xcca002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca002
            
            #add-point:AFTER FIELD xcca002
            {<point name="construct.a.page1.xcca002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca006
         ON ACTION controlp INFIELD xcca006
            #add-point:ON ACTION controlp INFIELD xcca006
            {<point name="construct.c.page1.xcca006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca006
            #add-point:BEFORE FIELD xcca006
            {<point name="construct.b.page1.xcca006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca006
            
            #add-point:AFTER FIELD xcca006
            {<point name="construct.a.page1.xcca006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca006_1_desc
            #add-point:BEFORE FIELD xcca006_1_desc
            {<point name="construct.b.page1.xcca006_1_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca006_1_desc
            
            #add-point:AFTER FIELD xcca006_1_desc
            {<point name="construct.a.page1.xcca006_1_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca006_1_desc
         ON ACTION controlp INFIELD xcca006_1_desc
            #add-point:ON ACTION controlp INFIELD xcca006_1_desc
            {<point name="construct.c.page1.xcca006_1_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xcca007
         ON ACTION controlp INFIELD xcca007
            #add-point:ON ACTION controlp INFIELD xcca007
            {<point name="construct.c.page1.xcca007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca007
            #add-point:BEFORE FIELD xcca007
            {<point name="construct.b.page1.xcca007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca007
            
            #add-point:AFTER FIELD xcca007
            {<point name="construct.a.page1.xcca007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca101
            #add-point:BEFORE FIELD xcca101
            {<point name="construct.b.page1.xcca101" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca101
            
            #add-point:AFTER FIELD xcca101
            {<point name="construct.a.page1.xcca101" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca101
         ON ACTION controlp INFIELD xcca101
            #add-point:ON ACTION controlp INFIELD xcca101
            {<point name="construct.c.page1.xcca101" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca110a
            #add-point:BEFORE FIELD xcca110a
            {<point name="construct.b.page1.xcca110a" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110a
            
            #add-point:AFTER FIELD xcca110a
            {<point name="construct.a.page1.xcca110a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca110a
         ON ACTION controlp INFIELD xcca110a
            #add-point:ON ACTION controlp INFIELD xcca110a
            {<point name="construct.c.page1.xcca110a" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca110b
            #add-point:BEFORE FIELD xcca110b
            {<point name="construct.b.page1.xcca110b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110b
            
            #add-point:AFTER FIELD xcca110b
            {<point name="construct.a.page1.xcca110b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca110b
         ON ACTION controlp INFIELD xcca110b
            #add-point:ON ACTION controlp INFIELD xcca110b
            {<point name="construct.c.page1.xcca110b" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca110c
            #add-point:BEFORE FIELD xcca110c
            {<point name="construct.b.page1.xcca110c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110c
            
            #add-point:AFTER FIELD xcca110c
            {<point name="construct.a.page1.xcca110c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca110c
         ON ACTION controlp INFIELD xcca110c
            #add-point:ON ACTION controlp INFIELD xcca110c
            {<point name="construct.c.page1.xcca110c" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca110d
            #add-point:BEFORE FIELD xcca110d
            {<point name="construct.b.page1.xcca110d" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110d
            
            #add-point:AFTER FIELD xcca110d
            {<point name="construct.a.page1.xcca110d" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca110d
         ON ACTION controlp INFIELD xcca110d
            #add-point:ON ACTION controlp INFIELD xcca110d
            {<point name="construct.c.page1.xcca110d" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca110e
            #add-point:BEFORE FIELD xcca110e
            {<point name="construct.b.page1.xcca110e" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110e
            
            #add-point:AFTER FIELD xcca110e
            {<point name="construct.a.page1.xcca110e" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca110e
         ON ACTION controlp INFIELD xcca110e
            #add-point:ON ACTION controlp INFIELD xcca110e
            {<point name="construct.c.page1.xcca110e" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca110f
            #add-point:BEFORE FIELD xcca110f
            {<point name="construct.b.page1.xcca110f" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110f
            
            #add-point:AFTER FIELD xcca110f
            {<point name="construct.a.page1.xcca110f" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca110f
         ON ACTION controlp INFIELD xcca110f
            #add-point:ON ACTION controlp INFIELD xcca110f
            {<point name="construct.c.page1.xcca110f" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca110g
            #add-point:BEFORE FIELD xcca110g
            {<point name="construct.b.page1.xcca110g" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110g
            
            #add-point:AFTER FIELD xcca110g
            {<point name="construct.a.page1.xcca110g" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca110g
         ON ACTION controlp INFIELD xcca110g
            #add-point:ON ACTION controlp INFIELD xcca110g
            {<point name="construct.c.page1.xcca110g" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca110h
            #add-point:BEFORE FIELD xcca110h
            {<point name="construct.b.page1.xcca110h" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110h
            
            #add-point:AFTER FIELD xcca110h
            {<point name="construct.a.page1.xcca110h" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca110h
         ON ACTION controlp INFIELD xcca110h
            #add-point:ON ACTION controlp INFIELD xcca110h
            {<point name="construct.c.page1.xcca110h" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca110
            #add-point:BEFORE FIELD xcca110
            {<point name="construct.b.page1.xcca110" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110
            
            #add-point:AFTER FIELD xcca110
            {<point name="construct.a.page1.xcca110" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca110
         ON ACTION controlp INFIELD xcca110
            #add-point:ON ACTION controlp INFIELD xcca110
            {<point name="construct.c.page1.xcca110" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca102a
            #add-point:BEFORE FIELD xcca102a
            {<point name="construct.b.page1.xcca102a" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102a
            
            #add-point:AFTER FIELD xcca102a
            {<point name="construct.a.page1.xcca102a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca102a
         ON ACTION controlp INFIELD xcca102a
            #add-point:ON ACTION controlp INFIELD xcca102a
            {<point name="construct.c.page1.xcca102a" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca102b
            #add-point:BEFORE FIELD xcca102b
            {<point name="construct.b.page1.xcca102b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102b
            
            #add-point:AFTER FIELD xcca102b
            {<point name="construct.a.page1.xcca102b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca102b
         ON ACTION controlp INFIELD xcca102b
            #add-point:ON ACTION controlp INFIELD xcca102b
            {<point name="construct.c.page1.xcca102b" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca102c
            #add-point:BEFORE FIELD xcca102c
            {<point name="construct.b.page1.xcca102c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102c
            
            #add-point:AFTER FIELD xcca102c
            {<point name="construct.a.page1.xcca102c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca102c
         ON ACTION controlp INFIELD xcca102c
            #add-point:ON ACTION controlp INFIELD xcca102c
            {<point name="construct.c.page1.xcca102c" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca102d
            #add-point:BEFORE FIELD xcca102d
            {<point name="construct.b.page1.xcca102d" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102d
            
            #add-point:AFTER FIELD xcca102d
            {<point name="construct.a.page1.xcca102d" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca102d
         ON ACTION controlp INFIELD xcca102d
            #add-point:ON ACTION controlp INFIELD xcca102d
            {<point name="construct.c.page1.xcca102d" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca102e
            #add-point:BEFORE FIELD xcca102e
            {<point name="construct.b.page1.xcca102e" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102e
            
            #add-point:AFTER FIELD xcca102e
            {<point name="construct.a.page1.xcca102e" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca102e
         ON ACTION controlp INFIELD xcca102e
            #add-point:ON ACTION controlp INFIELD xcca102e
            {<point name="construct.c.page1.xcca102e" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca102f
            #add-point:BEFORE FIELD xcca102f
            {<point name="construct.b.page1.xcca102f" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102f
            
            #add-point:AFTER FIELD xcca102f
            {<point name="construct.a.page1.xcca102f" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca102f
         ON ACTION controlp INFIELD xcca102f
            #add-point:ON ACTION controlp INFIELD xcca102f
            {<point name="construct.c.page1.xcca102f" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca102g
            #add-point:BEFORE FIELD xcca102g
            {<point name="construct.b.page1.xcca102g" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102g
            
            #add-point:AFTER FIELD xcca102g
            {<point name="construct.a.page1.xcca102g" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca102g
         ON ACTION controlp INFIELD xcca102g
            #add-point:ON ACTION controlp INFIELD xcca102g
            {<point name="construct.c.page1.xcca102g" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca102h
            #add-point:BEFORE FIELD xcca102h
            {<point name="construct.b.page1.xcca102h" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102h
            
            #add-point:AFTER FIELD xcca102h
            {<point name="construct.a.page1.xcca102h" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcca102h
         ON ACTION controlp INFIELD xcca102h
            #add-point:ON ACTION controlp INFIELD xcca102h
            {<point name="construct.c.page1.xcca102h" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xccaownid
         ON ACTION controlp INFIELD xccaownid
            #add-point:ON ACTION controlp INFIELD xccaownid
            {<point name="construct.c.page2.xccaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccaownid
            #add-point:BEFORE FIELD xccaownid
            {<point name="construct.b.page2.xccaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccaownid
            
            #add-point:AFTER FIELD xccaownid
            {<point name="construct.a.page2.xccaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xccaowndp
         ON ACTION controlp INFIELD xccaowndp
            #add-point:ON ACTION controlp INFIELD xccaowndp
            {<point name="construct.c.page2.xccaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccaowndp
            #add-point:BEFORE FIELD xccaowndp
            {<point name="construct.b.page2.xccaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccaowndp
            
            #add-point:AFTER FIELD xccaowndp
            {<point name="construct.a.page2.xccaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xccacrtid
         ON ACTION controlp INFIELD xccacrtid
            #add-point:ON ACTION controlp INFIELD xccacrtid
            {<point name="construct.c.page2.xccacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccacrtid
            #add-point:BEFORE FIELD xccacrtid
            {<point name="construct.b.page2.xccacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccacrtid
            
            #add-point:AFTER FIELD xccacrtid
            {<point name="construct.a.page2.xccacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xccacrtdp
         ON ACTION controlp INFIELD xccacrtdp
            #add-point:ON ACTION controlp INFIELD xccacrtdp
            {<point name="construct.c.page2.xccacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccacrtdp
            #add-point:BEFORE FIELD xccacrtdp
            {<point name="construct.b.page2.xccacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccacrtdp
            
            #add-point:AFTER FIELD xccacrtdp
            {<point name="construct.a.page2.xccacrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccacrtdt
            #add-point:BEFORE FIELD xccacrtdt
            {<point name="construct.b.page2.xccacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xccamodid
         ON ACTION controlp INFIELD xccamodid
            #add-point:ON ACTION controlp INFIELD xccamodid
            {<point name="construct.c.page2.xccamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccamodid
            #add-point:BEFORE FIELD xccamodid
            {<point name="construct.b.page2.xccamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccamodid
            
            #add-point:AFTER FIELD xccamodid
            {<point name="construct.a.page2.xccamodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccamoddt
            #add-point:BEFORE FIELD xccamoddt
            {<point name="construct.b.page2.xccamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xccacnfid
         ON ACTION controlp INFIELD xccacnfid
            #add-point:ON ACTION controlp INFIELD xccacnfid
            {<point name="construct.c.page2.xccacnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccacnfid
            #add-point:BEFORE FIELD xccacnfid
            {<point name="construct.b.page2.xccacnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccacnfid
            
            #add-point:AFTER FIELD xccacnfid
            {<point name="construct.a.page2.xccacnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccacnfdt
            #add-point:BEFORE FIELD xccacnfdt
            {<point name="construct.b.page2.xccacnfdt" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xccapstid
         ON ACTION controlp INFIELD xccapstid
            #add-point:ON ACTION controlp INFIELD xccapstid
            {<point name="construct.c.page2.xccapstid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccapstid
            #add-point:BEFORE FIELD xccapstid
            {<point name="construct.b.page2.xccapstid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccapstid
            
            #add-point:AFTER FIELD xccapstid
            {<point name="construct.a.page2.xccapstid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccapstdt
            #add-point:BEFORE FIELD xccapstdt
            {<point name="construct.b.page2.xccapstdt" />}
            #END add-point
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog
         {<point name="cs.before_dialog"/>}
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
]]>
  </section>
  <section id="axct300.default_search" ver="3" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION axct300_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xccald = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xcca003 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xcca004 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " xcca005 = '", g_argv[04], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="axct300.delete" ver="7" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION axct300_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_xcca_m.xccald IS NULL
   OR g_xcca_m.xcca003 IS NULL
   OR g_xcca_m.xcca004 IS NULL
   OR g_xcca_m.xcca005 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE axct300_master_referesh USING g_xcca_m.xccald,g_xcca_m.xcca003,g_xcca_m.xcca004,g_xcca_m.xcca005 INTO g_xcca_m.xccacomp, 
       g_xcca_m.xccald,g_xcca_m.xcca004,g_xcca_m.xcca005,g_xcca_m.xcca003,g_xcca_m.xccacomp_desc,g_xcca_m.xccald_desc, 
       g_xcca_m.xcca003_desc
   
   CALL axct300_show()
   
   CALL s_transaction_begin()
   
   
 
   OPEN axct300_cl USING g_enterprise,g_xcca_m.xccald
                                                       ,g_xcca_m.xcca003
                                                       ,g_xcca_m.xcca004
                                                       ,g_xcca_m.xcca005
 
   IF STATUS THEN
      CALL cl_err("OPEN axct300_cl:", STATUS, 1)
      CLOSE axct300_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH axct300_cl INTO g_xcca_m.xccacomp,g_xcca_m.xccacomp_desc,g_xcca_m.xccald,g_xcca_m.xccald_desc, 
       g_xcca_m.xcca004,g_xcca_m.xcca005,g_xcca_m.xcca003,g_xcca_m.xcca003_desc
   
   #若資料已被他人LOCK
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xcca_m.xccald,SQLCA.sqlcode,0)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL axct300_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM xcca_t WHERE xccaent = g_enterprise AND xccald = g_xcca_m.xccald
                                                               AND xcca003 = g_xcca_m.xcca003
                                                               AND xcca004 = g_xcca_m.xcca004
                                                               AND xcca005 = g_xcca_m.xcca005
 
                                                               
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
      
      IF SQLCA.sqlcode THEN
         CALL cl_err("xcca_t",SQLCA.sqlcode,0)
         CALL s_transaction_end('N','0')
      END IF
 
      
  
      #add-point:單身刪除後 
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
 
      
      CLEAR FORM
      CALL g_xcca_d.clear() 
      CALL g_xcca2_d.clear()       
 
     
      CALL axct300_ui_browser_refresh()  
      CALL axct300_ui_headershow()  
      CALL axct300_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axct300_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         LET g_wc2 = " 1=1"
         CALL axct300_browser_fill("F")
      END IF
       
   END IF
 
   CLOSE axct300_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_xcca_m.xccald,'D')
    
END FUNCTION
]]>
  </section>
  <section id="axct300.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION axct300_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
 
   
END FUNCTION
]]>
  </section>
  <section id="axct300.description" ver="280" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000292
#+ 
#+ Filename...: axct300
#+ Description: 期初庫存數量成本開賬作業
#+ Creator....: 02291(2014/04/08)
#+ Modifier...: 02291(2014/06/29)
#+ Buildtype..: 應用 i07 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="axct300.detail_reproduce" ver="3" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION axct300_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xcca_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axct300_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axct300_detail AS ",
                "SELECT * FROM xcca_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axct300_detail SELECT * FROM xcca_t 
                                         WHERE xccaent = g_enterprise AND xccald = g_xccald_t
                                         AND xcca003 = g_xcca003_t
                                         AND xcca004 = g_xcca004_t
                                         AND xcca005 = g_xcca005_t
 
   
   #將key修正為調整後   
   UPDATE axct300_detail 
      #更新key欄位
      SET xccald = g_xcca_m.xccald
          , xcca003 = g_xcca_m.xcca003
          , xcca004 = g_xcca_m.xcca004
          , xcca005 = g_xcca_m.xcca005
 
      #更新共用欄位
      #此段落由子樣板a13產生
       , xccaownid = g_user
       , xccaowndp = g_dept
       , xccacrtid = g_user
       , xccacrtdp = g_dept 
       , xccacrtdt = ld_date
       , xccamodid = "" 
       , xccamoddt = "" 
 
 
                                       
  
   #將資料塞回原table   
   INSERT INTO xcca_t SELECT * FROM axct300_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axct300_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xccald_t = g_xcca_m.xccald
   LET g_xcca003_t = g_xcca_m.xcca003
   LET g_xcca004_t = g_xcca_m.xcca004
   LET g_xcca005_t = g_xcca_m.xcca005
 
   
   DROP TABLE axct300_detail
   
END FUNCTION
]]>
  </section>
  <section id="axct300.fetch" ver="5" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axct300_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   #add-point:fetch段動作開始前
   {<point name="fetch.before_fetch"/>}
   #end add-point    
 
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   CALL axct300_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xcca_m.xccald = g_browser[g_current_idx].b_xccald
   LET g_xcca_m.xcca003 = g_browser[g_current_idx].b_xcca003
   LET g_xcca_m.xcca004 = g_browser[g_current_idx].b_xcca004
   LET g_xcca_m.xcca005 = g_browser[g_current_idx].b_xcca005
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axct300_master_referesh USING g_xcca_m.xccald,g_xcca_m.xcca003,g_xcca_m.xcca004,g_xcca_m.xcca005 INTO g_xcca_m.xccacomp, 
       g_xcca_m.xccald,g_xcca_m.xcca004,g_xcca_m.xcca005,g_xcca_m.xcca003,g_xcca_m.xccacomp_desc,g_xcca_m.xccald_desc, 
       g_xcca_m.xcca003_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("xcca_t",SQLCA.sqlcode,1)
      INITIALIZE g_xcca_m.* TO NULL
      RETURN
   END IF
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #保存單頭舊值
   LET g_xcca_m_t.* = g_xcca_m.*
   LET g_xcca_m_o.* = g_xcca_m.*
   
   #重新顯示   
   CALL axct300_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="axct300.fill_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION axct300_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   
   #add-point:fill_chk段other
   {<point name="fill_chk.other"/>}
   #end add-point
   
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="axct300.filter" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION axct300_filter()
 
 
 
 
 
 
 
 
                            #add-point:filter段cs_ctrl
                            {<point name="filter.cs_ctrl"/>}
                            #end add-point
                         
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
 
 
   
 
 
END FUNCTION
]]>
  </section>
  <section id="axct300.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION axct300_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
 
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="axct300.global" ver="18" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xcca_m        RECORD
       xccacomp LIKE xcca_t.xccacomp, 
   xccacomp_desc LIKE type_t.chr80, 
   xccald LIKE xcca_t.xccald, 
   xccald_desc LIKE type_t.chr80, 
   xcca004 LIKE xcca_t.xcca004, 
   xcca005 LIKE xcca_t.xcca005, 
   xcca003 LIKE xcca_t.xcca003, 
   xcca003_desc LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xcca_d        RECORD
       xcca001 LIKE type_t.chr500, 
   xcca002 LIKE xcca_t.xcca002, 
   xcca006 LIKE xcca_t.xcca006, 
   xcca006_desc LIKE type_t.chr500, 
   xcca006_1_desc LIKE type_t.chr80, 
   xcca007 LIKE xcca_t.xcca007, 
   xcca101 LIKE xcca_t.xcca101, 
   xcca110a LIKE xcca_t.xcca110a, 
   xcca110b LIKE xcca_t.xcca110b, 
   xcca110c LIKE xcca_t.xcca110c, 
   xcca110d LIKE xcca_t.xcca110d, 
   xcca110e LIKE xcca_t.xcca110e, 
   xcca110f LIKE xcca_t.xcca110f, 
   xcca110g LIKE xcca_t.xcca110g, 
   xcca110h LIKE xcca_t.xcca110h, 
   xcca110 LIKE xcca_t.xcca110, 
   xcca102a LIKE xcca_t.xcca102a, 
   xcca102b LIKE xcca_t.xcca102b, 
   xcca102c LIKE xcca_t.xcca102c, 
   xcca102d LIKE xcca_t.xcca102d, 
   xcca102e LIKE xcca_t.xcca102e, 
   xcca102f LIKE xcca_t.xcca102f, 
   xcca102g LIKE xcca_t.xcca102g, 
   xcca102h LIKE xcca_t.xcca102h
       END RECORD
PRIVATE TYPE type_g_xcca2_d RECORD
       xcca001 LIKE xcca_t.xcca001, 
   xcca002 LIKE xcca_t.xcca002, 
   xcca006 LIKE xcca_t.xcca006, 
   xcca007 LIKE xcca_t.xcca007, 
   xccaownid LIKE xcca_t.xccaownid, 
   xccaownid_desc LIKE type_t.chr500, 
   xccaowndp LIKE xcca_t.xccaowndp, 
   xccaowndp_desc LIKE type_t.chr500, 
   xccacrtid LIKE xcca_t.xccacrtid, 
   xccacrtid_desc LIKE type_t.chr500, 
   xccacrtdp LIKE xcca_t.xccacrtdp, 
   xccacrtdp_desc LIKE type_t.chr500, 
   xccacrtdt DATETIME YEAR TO SECOND, 
   xccamodid LIKE xcca_t.xccamodid, 
   xccamodid_desc LIKE type_t.chr500, 
   xccamoddt DATETIME YEAR TO SECOND, 
   xccacnfid LIKE xcca_t.xccacnfid, 
   xccacnfid_desc LIKE type_t.chr500, 
   xccacnfdt DATETIME YEAR TO SECOND, 
   xccapstid LIKE xcca_t.xccapstid, 
   xccapstid_desc LIKE type_t.chr500, 
   xccapstdt DATETIME YEAR TO SECOND
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_xcca_m          type_g_xcca_m
DEFINE g_xcca_m_t        type_g_xcca_m
DEFINE g_xcca_m_o        type_g_xcca_m
 
   DEFINE g_xccald_t LIKE xcca_t.xccald
DEFINE g_xcca004_t LIKE xcca_t.xcca004
DEFINE g_xcca005_t LIKE xcca_t.xcca005
DEFINE g_xcca003_t LIKE xcca_t.xcca003
 
 
DEFINE g_xcca_d          DYNAMIC ARRAY OF type_g_xcca_d
DEFINE g_xcca_d_t        type_g_xcca_d
DEFINE g_xcca_d_o        type_g_xcca_d
DEFINE g_xcca2_d   DYNAMIC ARRAY OF type_g_xcca2_d
DEFINE g_xcca2_d_t type_g_xcca2_d
DEFINE g_xcca2_d_o type_g_xcca2_d
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_xccald LIKE xcca_t.xccald,
      b_xcca003 LIKE xcca_t.xcca003,
      b_xcca004 LIKE xcca_t.xcca004,
      b_xcca005 LIKE xcca_t.xcca005
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="axct300.init" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axct300_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
  
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
      CALL cl_set_combo_scc('xcca001','8914') 
 
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL axct300_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="axct300.input" ver="8" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION axct300_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point    
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT xcca001,xcca002,xcca006,xcca007,xcca101,xcca110a,xcca110b,xcca110c,xcca110d, 
       xcca110e,xcca110f,xcca110g,xcca110h,xcca110,xcca102a,xcca102b,xcca102c,xcca102d,xcca102e,xcca102f, 
       xcca102g,xcca102h,xcca001,xcca002,xcca006,xcca007,xccaownid,xccaowndp,xccacrtid,xccacrtdp,xccacrtdt, 
       xccamodid,xccamoddt,xccacnfid,xccacnfdt,xccapstid,xccapstdt FROM xcca_t WHERE xccaent=? AND xccald=?  
       AND xcca003=? AND xcca004=? AND xcca005=? AND xcca001=? AND xcca002=? AND xcca006=? AND xcca007=?  
       FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axct300_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axct300_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL axct300_set_no_entry(p_cmd)
   #add-point:set_no_entry後
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_xcca_m.xccacomp,g_xcca_m.xccald,g_xcca_m.xcca004,g_xcca_m.xcca005,g_xcca_m.xcca003 

   
   LET lb_reproduce = FALSE
   
   #add-point:進入修改段前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="axct300.input.body" ver="13" status="" src="s">
    <![CDATA[      #Page1 預設值產生於此處
      INPUT ARRAY g_xcca_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcca_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axct300_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前
            {<point name="input.body.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axct300_cl USING g_enterprise,
                                               g_xcca_m.xccald
                                               ,g_xcca_m.xcca003
                                               ,g_xcca_m.xcca004
                                               ,g_xcca_m.xcca005
 
                                               
               IF STATUS THEN
                  CALL cl_err("OPEN axct300_cl:", STATUS, 1)
                  CLOSE axct300_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_xcca_d[l_ac].xcca001 IS NOT NULL
               AND g_xcca_d[l_ac].xcca002 IS NOT NULL
               AND g_xcca_d[l_ac].xcca006 IS NOT NULL
               AND g_xcca_d[l_ac].xcca007 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xcca_d_t.* = g_xcca_d[l_ac].*  #BACKUP
               LET g_xcca_d_o.* = g_xcca_d[l_ac].*  #BACKUP
               CALL axct300_set_entry_b(l_cmd)
               #add-point:set_entry_b後
               {<point name="input.body.before_row.set_entry_b"/>}
               #end add-point
               CALL axct300_set_no_entry_b(l_cmd)
               OPEN axct300_bcl USING g_enterprise,g_xcca_m.xccald,
                                                g_xcca_m.xcca003,
                                                g_xcca_m.xcca004,
                                                g_xcca_m.xcca005,
 
                                                g_xcca_d_t.xcca001
                                                ,g_xcca_d_t.xcca002
                                                ,g_xcca_d_t.xcca006
                                                ,g_xcca_d_t.xcca007
 
               IF STATUS THEN
                  CALL cl_err("OPEN axct300_bcl:", STATUS, 1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axct300_bcl INTO g_xcca_d[l_ac].xcca001,g_xcca_d[l_ac].xcca002,g_xcca_d[l_ac].xcca006, 
                      g_xcca_d[l_ac].xcca007,g_xcca_d[l_ac].xcca101,g_xcca_d[l_ac].xcca110a,g_xcca_d[l_ac].xcca110b, 
                      g_xcca_d[l_ac].xcca110c,g_xcca_d[l_ac].xcca110d,g_xcca_d[l_ac].xcca110e,g_xcca_d[l_ac].xcca110f, 
                      g_xcca_d[l_ac].xcca110g,g_xcca_d[l_ac].xcca110h,g_xcca_d[l_ac].xcca110,g_xcca_d[l_ac].xcca102a, 
                      g_xcca_d[l_ac].xcca102b,g_xcca_d[l_ac].xcca102c,g_xcca_d[l_ac].xcca102d,g_xcca_d[l_ac].xcca102e, 
                      g_xcca_d[l_ac].xcca102f,g_xcca_d[l_ac].xcca102g,g_xcca_d[l_ac].xcca102h,g_xcca2_d[l_ac].xcca001, 
                      g_xcca2_d[l_ac].xcca002,g_xcca2_d[l_ac].xcca006,g_xcca2_d[l_ac].xcca007,g_xcca2_d[l_ac].xccaownid, 
                      g_xcca2_d[l_ac].xccaowndp,g_xcca2_d[l_ac].xccacrtid,g_xcca2_d[l_ac].xccacrtdp, 
                      g_xcca2_d[l_ac].xccacrtdt,g_xcca2_d[l_ac].xccamodid,g_xcca2_d[l_ac].xccamoddt, 
                      g_xcca2_d[l_ac].xccacnfid,g_xcca2_d[l_ac].xccacnfdt,g_xcca2_d[l_ac].xccapstid, 
                      g_xcca2_d[l_ac].xccapstdt
                  IF SQLCA.sqlcode THEN
                      CALL cl_err(g_xcca_d_t.xcca001,SQLCA.sqlcode,1)
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axct300_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_xcca_d_t.* TO NULL
            INITIALIZE g_xcca_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xcca_d[l_ac].* TO NULL
            
            #公用欄位預設值
            #此段落由子樣板a14產生    
      LET g_xcca2_d[l_ac].xccaownid = g_user
      LET g_xcca2_d[l_ac].xccaowndp = g_dept
      LET g_xcca2_d[l_ac].xccacrtid = g_user
      LET g_xcca2_d[l_ac].xccacrtdp = g_dept 
      LET g_xcca2_d[l_ac].xccacrtdt = cl_get_current()
      LET g_xcca2_d[l_ac].xccamodid = ""
      LET g_xcca2_d[l_ac].xccamoddt = ""
 
  
            
            #一般欄位預設值
                  LET g_xcca_d[l_ac].xcca001 = "1"
 
            
            
            LET g_xcca_d_t.* = g_xcca_d[l_ac].*     #新輸入資料
            LET g_xcca_d_o.* = g_xcca_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axct300_set_entry_b(l_cmd)
            #add-point:set_entry_b後
            {<point name="input.body.before_insert.set_entry_b"/>}
            #end add-point
            CALL axct300_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xcca_d[li_reproduce_target].* = g_xcca_d[li_reproduce].*
               LET g_xcca2_d[li_reproduce_target].* = g_xcca2_d[li_reproduce].*
 
               LET g_xcca_d[g_xcca_d.getLength()].xcca001 = NULL
               LET g_xcca_d[g_xcca_d.getLength()].xcca002 = NULL
               LET g_xcca_d[g_xcca_d.getLength()].xcca006 = NULL
               LET g_xcca_d[g_xcca_d.getLength()].xcca007 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xcca_t 
             WHERE xccaent = g_enterprise AND xccald = g_xcca_m.xccald
               AND xcca003 = g_xcca_m.xcca003
               AND xcca004 = g_xcca_m.xcca004
               AND xcca005 = g_xcca_m.xcca005
 
               AND xcca001 = g_xcca_d[l_ac].xcca001
               AND xcca002 = g_xcca_d[l_ac].xcca002
               AND xcca006 = g_xcca_d[l_ac].xcca006
               AND xcca007 = g_xcca_d[l_ac].xcca007
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
               {<point name="input.body.b_insert" mark="Y"/>}
               #end add-point
               INSERT INTO xcca_t
                           (xccaent,
                            xccacomp,xccald,xcca004,xcca005,xcca003,
                            xcca001,xcca002,xcca006,xcca007
                            ,xcca101,xcca110a,xcca110b,xcca110c,xcca110d,xcca110e,xcca110f,xcca110g,xcca110h,xcca110,xcca102a,xcca102b,xcca102c,xcca102d,xcca102e,xcca102f,xcca102g,xcca102h,xccaownid,xccaowndp,xccacrtid,xccacrtdp,xccacrtdt,xccamodid,xccamoddt,xccacnfid,xccacnfdt,xccapstid,xccapstdt) 
                     VALUES(g_enterprise,
                            g_xcca_m.xccacomp,g_xcca_m.xccald,g_xcca_m.xcca004,g_xcca_m.xcca005,g_xcca_m.xcca003,
                            g_xcca_d[l_ac].xcca001,g_xcca_d[l_ac].xcca002,g_xcca_d[l_ac].xcca006,g_xcca_d[l_ac].xcca007 

                            ,g_xcca_d[l_ac].xcca101,g_xcca_d[l_ac].xcca110a,g_xcca_d[l_ac].xcca110b, 
                                g_xcca_d[l_ac].xcca110c,g_xcca_d[l_ac].xcca110d,g_xcca_d[l_ac].xcca110e, 
                                g_xcca_d[l_ac].xcca110f,g_xcca_d[l_ac].xcca110g,g_xcca_d[l_ac].xcca110h, 
                                g_xcca_d[l_ac].xcca110,g_xcca_d[l_ac].xcca102a,g_xcca_d[l_ac].xcca102b, 
                                g_xcca_d[l_ac].xcca102c,g_xcca_d[l_ac].xcca102d,g_xcca_d[l_ac].xcca102e, 
                                g_xcca_d[l_ac].xcca102f,g_xcca_d[l_ac].xcca102g,g_xcca_d[l_ac].xcca102h, 
                                g_xcca2_d[l_ac].xccaownid,g_xcca2_d[l_ac].xccaowndp,g_xcca2_d[l_ac].xccacrtid, 
                                g_xcca2_d[l_ac].xccacrtdp,g_xcca2_d[l_ac].xccacrtdt,g_xcca2_d[l_ac].xccamodid, 
                                g_xcca2_d[l_ac].xccamoddt,g_xcca2_d[l_ac].xccacnfid,g_xcca2_d[l_ac].xccacnfdt, 
                                g_xcca2_d[l_ac].xccapstid,g_xcca2_d[l_ac].xccapstdt)
               #add-point:單身新增中
               {<point name="input.body.m_insert"/>}
               #end add-point
               LET p_cmd = 'u'
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_xcca_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("xcca_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後
            {<point name="input.body.after_insert"/>}
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_xcca_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_xcca_d.deleteElement(l_ac)
               NEXT FIELD xcca001
            END IF
            IF g_xcca_d_t.xcca001 IS NOT NULL
               AND g_xcca_d_t.xcca002 IS NOT NULL
               AND g_xcca_d_t.xcca006 IS NOT NULL
               AND g_xcca_d_t.xcca007 IS NOT NULL
 
               THEN
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete"/>}
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               IF axct300_before_delete() THEN 
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axct300_bcl
               LET l_count = g_xcca_d.getLength()
            END IF 
            
            #add-point:單身刪除後
            {<point name="input.body.a_delete"/>}
            #end add-point
              
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body.after_delete"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD xcca001
            #add-point:BEFORE FIELD xcca001
            {<point name="input.b.page1.xcca001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca001
            
            #add-point:AFTER FIELD xcca001
            {<point name="input.a.page1.xcca001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca001
            #add-point:ON CHANGE xcca001
            {<point name="input.g.page1.xcca001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca002
            #add-point:BEFORE FIELD xcca002
            {<point name="input.b.page1.xcca002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca002
            
            #add-point:AFTER FIELD xcca002
            {<point name="input.a.page1.xcca002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca002
            #add-point:ON CHANGE xcca002
            {<point name="input.g.page1.xcca002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca006
            
            #add-point:AFTER FIELD xcca006
            {<point name="input.a.page1.xcca006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca006
            #add-point:BEFORE FIELD xcca006
            {<point name="input.b.page1.xcca006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcca006
            #add-point:ON CHANGE xcca006
            {<point name="input.g.page1.xcca006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca007
            #add-point:BEFORE FIELD xcca007
            {<point name="input.b.page1.xcca007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca007
            
            #add-point:AFTER FIELD xcca007
            {<point name="input.a.page1.xcca007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca007
            #add-point:ON CHANGE xcca007
            {<point name="input.g.page1.xcca007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca101
            #add-point:BEFORE FIELD xcca101
            {<point name="input.b.page1.xcca101" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca101
            
            #add-point:AFTER FIELD xcca101
            {<point name="input.a.page1.xcca101" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca101
            #add-point:ON CHANGE xcca101
            {<point name="input.g.page1.xcca101" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca110a
            #add-point:BEFORE FIELD xcca110a
            {<point name="input.b.page1.xcca110a" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110a
            
            #add-point:AFTER FIELD xcca110a
            {<point name="input.a.page1.xcca110a" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca110a
            #add-point:ON CHANGE xcca110a
            {<point name="input.g.page1.xcca110a" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca110b
            #add-point:BEFORE FIELD xcca110b
            {<point name="input.b.page1.xcca110b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110b
            
            #add-point:AFTER FIELD xcca110b
            {<point name="input.a.page1.xcca110b" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca110b
            #add-point:ON CHANGE xcca110b
            {<point name="input.g.page1.xcca110b" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca110c
            #add-point:BEFORE FIELD xcca110c
            {<point name="input.b.page1.xcca110c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110c
            
            #add-point:AFTER FIELD xcca110c
            {<point name="input.a.page1.xcca110c" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca110c
            #add-point:ON CHANGE xcca110c
            {<point name="input.g.page1.xcca110c" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca110d
            #add-point:BEFORE FIELD xcca110d
            {<point name="input.b.page1.xcca110d" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110d
            
            #add-point:AFTER FIELD xcca110d
            {<point name="input.a.page1.xcca110d" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca110d
            #add-point:ON CHANGE xcca110d
            {<point name="input.g.page1.xcca110d" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca110e
            #add-point:BEFORE FIELD xcca110e
            {<point name="input.b.page1.xcca110e" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110e
            
            #add-point:AFTER FIELD xcca110e
            {<point name="input.a.page1.xcca110e" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca110e
            #add-point:ON CHANGE xcca110e
            {<point name="input.g.page1.xcca110e" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca110f
            #add-point:BEFORE FIELD xcca110f
            {<point name="input.b.page1.xcca110f" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110f
            
            #add-point:AFTER FIELD xcca110f
            {<point name="input.a.page1.xcca110f" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca110f
            #add-point:ON CHANGE xcca110f
            {<point name="input.g.page1.xcca110f" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca110g
            #add-point:BEFORE FIELD xcca110g
            {<point name="input.b.page1.xcca110g" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110g
            
            #add-point:AFTER FIELD xcca110g
            {<point name="input.a.page1.xcca110g" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca110g
            #add-point:ON CHANGE xcca110g
            {<point name="input.g.page1.xcca110g" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca110h
            #add-point:BEFORE FIELD xcca110h
            {<point name="input.b.page1.xcca110h" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110h
            
            #add-point:AFTER FIELD xcca110h
            {<point name="input.a.page1.xcca110h" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca110h
            #add-point:ON CHANGE xcca110h
            {<point name="input.g.page1.xcca110h" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca110
            #add-point:BEFORE FIELD xcca110
            {<point name="input.b.page1.xcca110" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca110
            
            #add-point:AFTER FIELD xcca110
            {<point name="input.a.page1.xcca110" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca110
            #add-point:ON CHANGE xcca110
            {<point name="input.g.page1.xcca110" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca102a
            #add-point:BEFORE FIELD xcca102a
            {<point name="input.b.page1.xcca102a" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102a
            
            #add-point:AFTER FIELD xcca102a
            {<point name="input.a.page1.xcca102a" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca102a
            #add-point:ON CHANGE xcca102a
            {<point name="input.g.page1.xcca102a" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca102b
            #add-point:BEFORE FIELD xcca102b
            {<point name="input.b.page1.xcca102b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102b
            
            #add-point:AFTER FIELD xcca102b
            {<point name="input.a.page1.xcca102b" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca102b
            #add-point:ON CHANGE xcca102b
            {<point name="input.g.page1.xcca102b" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca102c
            #add-point:BEFORE FIELD xcca102c
            {<point name="input.b.page1.xcca102c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102c
            
            #add-point:AFTER FIELD xcca102c
            {<point name="input.a.page1.xcca102c" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca102c
            #add-point:ON CHANGE xcca102c
            {<point name="input.g.page1.xcca102c" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca102d
            #add-point:BEFORE FIELD xcca102d
            {<point name="input.b.page1.xcca102d" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102d
            
            #add-point:AFTER FIELD xcca102d
            {<point name="input.a.page1.xcca102d" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca102d
            #add-point:ON CHANGE xcca102d
            {<point name="input.g.page1.xcca102d" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca102e
            #add-point:BEFORE FIELD xcca102e
            {<point name="input.b.page1.xcca102e" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102e
            
            #add-point:AFTER FIELD xcca102e
            {<point name="input.a.page1.xcca102e" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca102e
            #add-point:ON CHANGE xcca102e
            {<point name="input.g.page1.xcca102e" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca102f
            #add-point:BEFORE FIELD xcca102f
            {<point name="input.b.page1.xcca102f" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102f
            
            #add-point:AFTER FIELD xcca102f
            {<point name="input.a.page1.xcca102f" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca102f
            #add-point:ON CHANGE xcca102f
            {<point name="input.g.page1.xcca102f" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca102g
            #add-point:BEFORE FIELD xcca102g
            {<point name="input.b.page1.xcca102g" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102g
            
            #add-point:AFTER FIELD xcca102g
            {<point name="input.a.page1.xcca102g" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca102g
            #add-point:ON CHANGE xcca102g
            {<point name="input.g.page1.xcca102g" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca102h
            #add-point:BEFORE FIELD xcca102h
            {<point name="input.b.page1.xcca102h" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca102h
            
            #add-point:AFTER FIELD xcca102h
            {<point name="input.a.page1.xcca102h" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca102h
            #add-point:ON CHANGE xcca102h
            {<point name="input.g.page1.xcca102h" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.xcca001
         ON ACTION controlp INFIELD xcca001
            #add-point:ON ACTION controlp INFIELD xcca001
            {<point name="input.c.page1.xcca001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca002
         ON ACTION controlp INFIELD xcca002
            #add-point:ON ACTION controlp INFIELD xcca002
            {<point name="input.c.page1.xcca002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca006
         ON ACTION controlp INFIELD xcca006
            #add-point:ON ACTION controlp INFIELD xcca006
            {<point name="input.c.page1.xcca006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca007
         ON ACTION controlp INFIELD xcca007
            #add-point:ON ACTION controlp INFIELD xcca007
            {<point name="input.c.page1.xcca007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca101
         ON ACTION controlp INFIELD xcca101
            #add-point:ON ACTION controlp INFIELD xcca101
            {<point name="input.c.page1.xcca101" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca110a
         ON ACTION controlp INFIELD xcca110a
            #add-point:ON ACTION controlp INFIELD xcca110a
            {<point name="input.c.page1.xcca110a" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca110b
         ON ACTION controlp INFIELD xcca110b
            #add-point:ON ACTION controlp INFIELD xcca110b
            {<point name="input.c.page1.xcca110b" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca110c
         ON ACTION controlp INFIELD xcca110c
            #add-point:ON ACTION controlp INFIELD xcca110c
            {<point name="input.c.page1.xcca110c" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca110d
         ON ACTION controlp INFIELD xcca110d
            #add-point:ON ACTION controlp INFIELD xcca110d
            {<point name="input.c.page1.xcca110d" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca110e
         ON ACTION controlp INFIELD xcca110e
            #add-point:ON ACTION controlp INFIELD xcca110e
            {<point name="input.c.page1.xcca110e" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca110f
         ON ACTION controlp INFIELD xcca110f
            #add-point:ON ACTION controlp INFIELD xcca110f
            {<point name="input.c.page1.xcca110f" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca110g
         ON ACTION controlp INFIELD xcca110g
            #add-point:ON ACTION controlp INFIELD xcca110g
            {<point name="input.c.page1.xcca110g" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca110h
         ON ACTION controlp INFIELD xcca110h
            #add-point:ON ACTION controlp INFIELD xcca110h
            {<point name="input.c.page1.xcca110h" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca110
         ON ACTION controlp INFIELD xcca110
            #add-point:ON ACTION controlp INFIELD xcca110
            {<point name="input.c.page1.xcca110" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca102a
         ON ACTION controlp INFIELD xcca102a
            #add-point:ON ACTION controlp INFIELD xcca102a
            {<point name="input.c.page1.xcca102a" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca102b
         ON ACTION controlp INFIELD xcca102b
            #add-point:ON ACTION controlp INFIELD xcca102b
            {<point name="input.c.page1.xcca102b" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca102c
         ON ACTION controlp INFIELD xcca102c
            #add-point:ON ACTION controlp INFIELD xcca102c
            {<point name="input.c.page1.xcca102c" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca102d
         ON ACTION controlp INFIELD xcca102d
            #add-point:ON ACTION controlp INFIELD xcca102d
            {<point name="input.c.page1.xcca102d" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca102e
         ON ACTION controlp INFIELD xcca102e
            #add-point:ON ACTION controlp INFIELD xcca102e
            {<point name="input.c.page1.xcca102e" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca102f
         ON ACTION controlp INFIELD xcca102f
            #add-point:ON ACTION controlp INFIELD xcca102f
            {<point name="input.c.page1.xcca102f" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca102g
         ON ACTION controlp INFIELD xcca102g
            #add-point:ON ACTION controlp INFIELD xcca102g
            {<point name="input.c.page1.xcca102g" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcca102h
         ON ACTION controlp INFIELD xcca102h
            #add-point:ON ACTION controlp INFIELD xcca102h
            {<point name="input.c.page1.xcca102h" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_xcca_d[l_ac].* = g_xcca_d_t.*
               CLOSE axct300_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_xcca_d[l_ac].xcca001,-263,1)
               LET g_xcca_d[l_ac].* = g_xcca_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_xcca2_d[l_ac].xccamodid = g_user 
LET g_xcca2_d[l_ac].xccamoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
         
               UPDATE xcca_t SET (xccald,xcca003,xcca004,xcca005,xcca001,xcca002,xcca006,xcca007,xcca101, 
                   xcca110a,xcca110b,xcca110c,xcca110d,xcca110e,xcca110f,xcca110g,xcca110h,xcca102a, 
                   xcca102b,xcca102c,xcca102d,xcca102e,xcca102f,xcca102g,xcca102h,xccaownid,xccaowndp, 
                   xccacrtid,xccacrtdp,xccacrtdt,xccamodid,xccamoddt,xccacnfid,xccacnfdt,xccapstid,xccapstdt) = (g_xcca_m.xccald, 
                   g_xcca_m.xcca003,g_xcca_m.xcca004,g_xcca_m.xcca005,g_xcca_d[l_ac].xcca001,g_xcca_d[l_ac].xcca002, 
                   g_xcca_d[l_ac].xcca006,g_xcca_d[l_ac].xcca007,g_xcca_d[l_ac].xcca101,g_xcca_d[l_ac].xcca110a, 
                   g_xcca_d[l_ac].xcca110b,g_xcca_d[l_ac].xcca110c,g_xcca_d[l_ac].xcca110d,g_xcca_d[l_ac].xcca110e, 
                   g_xcca_d[l_ac].xcca110f,g_xcca_d[l_ac].xcca110g,g_xcca_d[l_ac].xcca110h,g_xcca_d[l_ac].xcca102a, 
                   g_xcca_d[l_ac].xcca102b,g_xcca_d[l_ac].xcca102c,g_xcca_d[l_ac].xcca102d,g_xcca_d[l_ac].xcca102e, 
                   g_xcca_d[l_ac].xcca102f,g_xcca_d[l_ac].xcca102g,g_xcca_d[l_ac].xcca102h,g_xcca2_d[l_ac].xccaownid, 
                   g_xcca2_d[l_ac].xccaowndp,g_xcca2_d[l_ac].xccacrtid,g_xcca2_d[l_ac].xccacrtdp,g_xcca2_d[l_ac].xccacrtdt, 
                   g_xcca2_d[l_ac].xccamodid,g_xcca2_d[l_ac].xccamoddt,g_xcca2_d[l_ac].xccacnfid,g_xcca2_d[l_ac].xccacnfdt, 
                   g_xcca2_d[l_ac].xccapstid,g_xcca2_d[l_ac].xccapstdt)
                WHERE xccaent = g_enterprise AND xccald = g_xcca_m.xccald 
                 AND xcca003 = g_xcca_m.xcca003 
                 AND xcca004 = g_xcca_m.xcca004 
                 AND xcca005 = g_xcca_m.xcca005 
 
                 AND xcca001 = g_xcca_d_t.xcca001 #項次   
                 AND xcca002 = g_xcca_d_t.xcca002  
                 AND xcca006 = g_xcca_d_t.xcca006  
                 AND xcca007 = g_xcca_d_t.xcca007  
 
                 
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xcca_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   CALL cl_err("xcca_t",SQLCA.sqlcode,1)  
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcca_m.xccald
               LET gs_keys_bak[1] = g_xccald_t
               LET gs_keys[2] = g_xcca_m.xcca003
               LET gs_keys_bak[2] = g_xcca003_t
               LET gs_keys[3] = g_xcca_m.xcca004
               LET gs_keys_bak[3] = g_xcca004_t
               LET gs_keys[4] = g_xcca_m.xcca005
               LET gs_keys_bak[4] = g_xcca005_t
               LET gs_keys[5] = g_xcca_d[g_detail_idx].xcca001
               LET gs_keys_bak[5] = g_xcca_d_t.xcca001
               LET gs_keys[6] = g_xcca_d[g_detail_idx].xcca002
               LET gs_keys_bak[6] = g_xcca_d_t.xcca002
               LET gs_keys[7] = g_xcca_d[g_detail_idx].xcca006
               LET gs_keys_bak[7] = g_xcca_d_t.xcca006
               LET gs_keys[8] = g_xcca_d[g_detail_idx].xcca007
               LET gs_keys_bak[8] = g_xcca_d_t.xcca007
               CALL axct300_update_b('xcca_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_xcca_m),util.JSON.stringify(g_xcca_d_t)
                     LET g_log2 = util.JSON.stringify(g_xcca_m),util.JSON.stringify(g_xcca_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
            END IF
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xcca_d.getLength() = 0 THEN
               NEXT FIELD xcca001
            END IF
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xcca_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xcca_d.getLength()+1
            
      END INPUT
 
 
      
      DISPLAY ARRAY g_xcca2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
      
         BEFORE ROW
            CALL axct300_b_fill(g_wc2) 
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL axct300_ui_detailshow()
        
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)      
         
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
         
      END DISPLAY
 
      
 
      
      #add-point:input段more_input
      {<point name="input.more_inputarray"/>}
      #end add-point    
      
      BEFORE DIALOG
         #add-point:input段before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xccald
        ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xcca001
               WHEN "s_detail2"
                  NEXT FIELD xcca001_2
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #add-point:input段after_input
   {<point name="input.after_input"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="axct300.input.head" ver="8" status="" src="s">
    <![CDATA[   
      #單頭段
      INPUT BY NAME g_xcca_m.xccacomp,g_xcca_m.xccald,g_xcca_m.xcca004,g_xcca_m.xcca005,g_xcca_m.xcca003  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前
            {<point name="input.head.b_input"/>}
            #end add-point
          
                  #此段落由子樣板a02產生
         AFTER FIELD xccacomp
            
            #add-point:AFTER FIELD xccacomp
            {<point name="input.a.xccacomp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccacomp
            #add-point:BEFORE FIELD xccacomp
            {<point name="input.b.xccacomp" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xccacomp
            #add-point:ON CHANGE xccacomp
            {<point name="input.g.xccacomp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccald
            
            #add-point:AFTER FIELD xccald
            {<point name="input.a.xccald" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccald
            #add-point:BEFORE FIELD xccald
            {<point name="input.b.xccald" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xccald
            #add-point:ON CHANGE xccald
            {<point name="input.g.xccald" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca004
            #add-point:BEFORE FIELD xcca004
            {<point name="input.b.xcca004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca004
            
            #add-point:AFTER FIELD xcca004
            {<point name="input.a.xcca004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca004
            #add-point:ON CHANGE xcca004
            {<point name="input.g.xcca004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca005
            #add-point:BEFORE FIELD xcca005
            {<point name="input.b.xcca005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca005
            
            #add-point:AFTER FIELD xcca005
            {<point name="input.a.xcca005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcca005
            #add-point:ON CHANGE xcca005
            {<point name="input.g.xcca005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcca003
            
            #add-point:AFTER FIELD xcca003
            {<point name="input.a.xcca003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcca003
            #add-point:BEFORE FIELD xcca003
            {<point name="input.b.xcca003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xcca003
            #add-point:ON CHANGE xcca003
            {<point name="input.g.xcca003" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.xccacomp
         ON ACTION controlp INFIELD xccacomp
            #add-point:ON ACTION controlp INFIELD xccacomp
            {<point name="input.c.xccacomp" />}
            #END add-point
 
         #Ctrlp:input.c.xccald
         ON ACTION controlp INFIELD xccald
            #add-point:ON ACTION controlp INFIELD xccald
            {<point name="input.c.xccald" />}
            #END add-point
 
         #Ctrlp:input.c.xcca004
         ON ACTION controlp INFIELD xcca004
            #add-point:ON ACTION controlp INFIELD xcca004
            {<point name="input.c.xcca004" />}
            #END add-point
 
         #Ctrlp:input.c.xcca005
         ON ACTION controlp INFIELD xcca005
            #add-point:ON ACTION controlp INFIELD xcca005
            {<point name="input.c.xcca005" />}
            #END add-point
 
         #Ctrlp:input.c.xcca003
         ON ACTION controlp INFIELD xcca003
            #add-point:ON ACTION controlp INFIELD xcca003
            {<point name="input.c.xcca003" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
 
            #多語言處理
            
                
            CALL cl_showmsg()
            DISPLAY BY NAME g_xcca_m.xccald             
                            ,g_xcca_m.xcca003   
                            ,g_xcca_m.xcca004   
                            ,g_xcca_m.xcca005   
 
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
            
               UPDATE xcca_t SET (xccacomp,xccald,xcca004,xcca005,xcca003) = (g_xcca_m.xccacomp,g_xcca_m.xccald, 
                   g_xcca_m.xcca004,g_xcca_m.xcca005,g_xcca_m.xcca003)
                WHERE xccaent = g_enterprise AND xccald = g_xccald_t
                  AND xcca003 = g_xcca003_t
                  AND xcca004 = g_xcca004_t
                  AND xcca005 = g_xcca005_t
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xcca_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("xcca_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xcca_m.xccald
               LET gs_keys_bak[1] = g_xccald_t
               LET gs_keys[2] = g_xcca_m.xcca003
               LET gs_keys_bak[2] = g_xcca003_t
               LET gs_keys[3] = g_xcca_m.xcca004
               LET gs_keys_bak[3] = g_xcca004_t
               LET gs_keys[4] = g_xcca_m.xcca005
               LET gs_keys_bak[4] = g_xcca005_t
               LET gs_keys[5] = g_xcca_d[g_detail_idx].xcca001
               LET gs_keys_bak[5] = g_xcca_d_t.xcca001
               LET gs_keys[6] = g_xcca_d[g_detail_idx].xcca002
               LET gs_keys_bak[6] = g_xcca_d_t.xcca002
               LET gs_keys[7] = g_xcca_d[g_detail_idx].xcca006
               LET gs_keys_bak[7] = g_xcca_d_t.xcca006
               LET gs_keys[8] = g_xcca_d[g_detail_idx].xcca007
               LET gs_keys_bak[8] = g_xcca_d_t.xcca007
               CALL axct300_update_b('xcca_t',gs_keys,gs_keys_bak,"'1'")
                     
                     LET g_xccald_t = g_xcca_m.xccald
                     LET g_xcca003_t = g_xcca_m.xcca003
                     LET g_xcca004_t = g_xcca_m.xcca004
                     LET g_xcca005_t = g_xcca_m.xcca005
 
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     
                     LET g_log1 = util.JSON.stringify(g_xcca_m_t)
                     LET g_log2 = util.JSON.stringify(g_xcca_m)
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
               END CASE
            
            ELSE    
               #add-point:單頭新增
               {<point name="input.head.a_insert"/>}
               #end add-point
                                 
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axct300_detail_reproduce()
               END IF
            END IF
           #controlp
                     
           LET g_xccald_t = g_xcca_m.xccald
           LET g_xcca003_t = g_xcca_m.xcca003
           LET g_xcca004_t = g_xcca_m.xcca004
           LET g_xcca005_t = g_xcca_m.xcca005
 
           
           #若單身還沒有輸入資料, 強制切換至單身
           #IF cl_null(g_xcca_d[1].xcca001) THEN
           #   CALL g_xcca_d.deleteElement(1)
           #   NEXT FIELD xcca001
           #END IF
           
           IF g_xcca_d.getLength() = 0 THEN
              NEXT FIELD xcca001
           END IF
 
      END INPUT
]]>
  </section>
  <section id="axct300.insert" ver="7" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION axct300_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_xcca_d.clear()
   CALL g_xcca2_d.clear()
 
 
   INITIALIZE g_xcca_m.* LIKE xcca_t.*             #DEFAULT 設定
   LET g_xccald_t = NULL
   LET g_xcca003_t = NULL
   LET g_xcca004_t = NULL
   LET g_xcca005_t = NULL
 
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL axct300_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xcca_m.* = g_xcca_m_t.*
         CALL axct300_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      CALL g_xcca_d.clear()
      CALL g_xcca2_d.clear()
 
      
      #add-point:單頭輸入後2
      {<point name="insert.after_insert2"/>}
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_xccald_t = g_xcca_m.xccald
   LET g_xcca003_t = g_xcca_m.xcca003
   LET g_xcca004_t = g_xcca_m.xcca004
   LET g_xcca005_t = g_xcca_m.xcca005
 
   
   LET g_wc = "(",g_wc,  
              " OR ( xccaent = '" ||g_enterprise|| "' AND ",
              " xccald = '", g_xcca_m.xccald CLIPPED, "' "
              ," AND xcca003 = '", g_xcca_m.xcca003 CLIPPED, "' "
              ," AND xcca004 = '", g_xcca_m.xcca004 CLIPPED, "' "
              ," AND xcca005 = '", g_xcca_m.xcca005 CLIPPED, "' "
 
              , ")) "
   
END FUNCTION
]]>
  </section>
  <section id="axct300.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION axct300_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
 
   
END FUNCTION
]]>
  </section>
  <section id="axct300.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION axct300_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL axct300_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="axct300.main" ver="15" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT xccacomp,'',xccald,'',xcca004,xcca005,xcca003,''", 
                      " FROM xcca_t",
                      " WHERE xccaent= ? AND xccald=? AND xcca003=? AND xcca004=? AND xcca005=? FOR  
                          UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axct300_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE xccacomp,xccald,xcca004,xcca005,xcca003,t1.ooefl003 ,t2.glaal002 ,t3.xcatl003", 

               " FROM xcca_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=xccacomp AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN glaal_t t2 ON t2.glaalent='"||g_enterprise||"' AND t2.glaalld=xccald AND t2.glaal001='"||g_dlang||"' ",
               " LEFT JOIN xcatl_t t3 ON t3.xcatlent='"||g_enterprise||"' AND t3.xcatl001=xcca003 AND t3.xcatl002='"||g_dlang||"' ",
 
               " WHERE xccaent = '" ||g_enterprise|| "' AND xccald = ? AND xcca003 = ? AND xcca004 = ? AND xcca005 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axct300_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axct300 WITH FORM cl_ap_formpath("axc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axct300_init()   
 
      #進入選單 Menu (="N")
      CALL axct300_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axct300
      
   END IF 
   
   CLOSE axct300_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="axct300.modify" ver="6" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION axct300_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_xcca_m.xccald IS NULL
   OR g_xcca_m.xcca003 IS NULL
   OR g_xcca_m.xcca004 IS NULL
   OR g_xcca_m.xcca005 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE axct300_master_referesh USING g_xcca_m.xccald,g_xcca_m.xcca003,g_xcca_m.xcca004,g_xcca_m.xcca005 INTO g_xcca_m.xccacomp, 
       g_xcca_m.xccald,g_xcca_m.xcca004,g_xcca_m.xcca005,g_xcca_m.xcca003,g_xcca_m.xccacomp_desc,g_xcca_m.xccald_desc, 
       g_xcca_m.xcca003_desc
 
   ERROR ""
  
   LET g_xccald_t = g_xcca_m.xccald
   LET g_xcca003_t = g_xcca_m.xcca003
   LET g_xcca004_t = g_xcca_m.xcca004
   LET g_xcca005_t = g_xcca_m.xcca005
 
   CALL s_transaction_begin()
   
   OPEN axct300_cl USING g_enterprise,g_xcca_m.xccald
                                                       ,g_xcca_m.xcca003
                                                       ,g_xcca_m.xcca004
                                                       ,g_xcca_m.xcca005
 
   IF STATUS THEN
      CALL cl_err("OPEN axct300_cl:", STATUS, 1)
      CLOSE axct300_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH axct300_cl INTO g_xcca_m.xccacomp,g_xcca_m.xccacomp_desc,g_xcca_m.xccald,g_xcca_m.xccald_desc, 
       g_xcca_m.xcca004,g_xcca_m.xcca005,g_xcca_m.xcca003,g_xcca_m.xcca003_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_xcca_m.xccald,SQLCA.sqlcode,0)
      CLOSE axct300_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   CALL s_transaction_end('Y','0')
 
   CALL axct300_show()
   WHILE TRUE
      LET g_xccald_t = g_xcca_m.xccald
      LET g_xcca003_t = g_xcca_m.xcca003
      LET g_xcca004_t = g_xcca_m.xcca004
      LET g_xcca005_t = g_xcca_m.xcca005
 
 
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL axct300_input("u")     #欄位更改
      
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xcca_m.* = g_xcca_m_t.*
         CALL axct300_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_xcca_m.xccald != g_xccald_t 
      OR g_xcca_m.xcca003 != g_xcca003_t 
      OR g_xcca_m.xcca004 != g_xcca004_t 
      OR g_xcca_m.xcca005 != g_xcca005_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前
         {<point name="modify.b_key_update" mark="Y"/>}
         #end add-point
         
         #更新單頭key值
         UPDATE xcca_t SET xccald = g_xcca_m.xccald
                                       , xcca003 = g_xcca_m.xcca003
                                       , xcca004 = g_xcca_m.xcca004
                                       , xcca005 = g_xcca_m.xcca005
 
          WHERE xccaent = g_enterprise AND xccald = g_xccald_t
            AND xcca003 = g_xcca003_t
            AND xcca004 = g_xcca004_t
            AND xcca005 = g_xcca005_t
 
         #add-point:單頭(偽)修改中
         {<point name="modify.m_key_update"/>}
         #end add-point
         
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("xcca_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("xcca_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
 
 
         
         #add-point:單頭(偽)修改後
         {<point name="modify.a_key_update"/>}
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_xcca_m.xccald,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE axct300_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_xcca_m.xccald,'U')
 
   CALL axct300_b_fill("1=1")
   
END FUNCTION   
]]>
  </section>
  <section id="axct300.modify_detail_chk" ver="3" status="" src="s">
    <![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION axct300_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "xcca001"
      WHEN "s_detail2"
         LET ls_return = "xcca001_2"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="axct300.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="axct300.query" ver="2" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axct300_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #add-point:query開始前
   {<point name="query.befroe_query"/>}
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xcca_d.clear()
   CALL g_xcca2_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axct300_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL axct300_browser_fill(g_wc)
      CALL axct300_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL axct300_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = ""
      LET g_errparam.code = "-100"
      LET g_errparam.popup = TRUE
      CALL cl_err("","-100",1)
   ELSE
      CALL axct300_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION
]]>
  </section>
  <section id="axct300.ref_show" ver="3" status="" src="s">
    <![CDATA[#+ 帶出reference資料
PRIVATE FUNCTION axct300_ref_show()
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define
   {<point name="ref_show.define"/>}
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference
   {<point name="ref_show.head.reference"/>}
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xcca_d.getLength()
      #add-point:ref_show段d_reference
      {<point name="ref_show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xcca2_d.getLength()
      #add-point:ref_show段d2_reference
      {<point name="ref_show.body2.reference"/>}
      #end add-point
   END FOR
 
   
   #add-point:ref_show段自訂
   {<point name="ref_show.other_reference"/>}
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION
]]>
  </section>
  <section id="axct300.reproduce" ver="8" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION axct300_reproduce()
   DEFINE l_newno     LIKE xcca_t.xccald 
   DEFINE l_oldno     LIKE xcca_t.xccald 
   DEFINE l_newno02     LIKE xcca_t.xcca003 
   DEFINE l_oldno02     LIKE xcca_t.xcca003 
   DEFINE l_newno03     LIKE xcca_t.xcca004 
   DEFINE l_oldno03     LIKE xcca_t.xcca004 
   DEFINE l_newno04     LIKE xcca_t.xcca005 
   DEFINE l_oldno04     LIKE xcca_t.xcca005 
 
   DEFINE l_master    RECORD LIKE xcca_t.*
   DEFINE l_detail    RECORD LIKE xcca_t.*
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_xcca_m.xccald IS NULL
      OR g_xcca_m.xcca003 IS NULL
      OR g_xcca_m.xcca004 IS NULL
      OR g_xcca_m.xcca005 IS NULL
 
      THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_xccald_t = g_xcca_m.xccald
   LET g_xcca003_t = g_xcca_m.xcca003
   LET g_xcca004_t = g_xcca_m.xcca004
   LET g_xcca005_t = g_xcca_m.xcca005
 
   
   LET g_xcca_m.xccald = ""
   LET g_xcca_m.xcca003 = ""
   LET g_xcca_m.xcca004 = ""
   LET g_xcca_m.xcca005 = ""
 
    
   CALL axct300_set_entry('a')
   CALL axct300_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL axct300_input("r")
   
      LET g_xcca_m.xccald_desc = ''
   DISPLAY BY NAME g_xcca_m.xccald_desc
   LET g_xcca_m.xcca003_desc = ''
   DISPLAY BY NAME g_xcca_m.xcca003_desc
 
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = "(", g_wc,  
              " OR (",
              " xccald = '", l_newno CLIPPED, "' "
              ," AND xcca003 = '", l_newno02 CLIPPED, "' "
              ," AND xcca004 = '", l_newno03 CLIPPED, "' "
              ," AND xcca005 = '", l_newno04 CLIPPED, "' "
 
              , ")) "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="axct300.set_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION axct300_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xccald,xcca003,xcca004,xcca005",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="axct300.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION axct300_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="axct300.set_no_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION axct300_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xccald,xcca003,xcca004,xcca005",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="axct300.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION axct300_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b段"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="axct300.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION axct300_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xcca_m.xccald
   LET g_pk_array[1].column = 'xccald'
   LET g_pk_array[2].values = g_xcca_m.xcca003
   LET g_pk_array[2].column = 'xcca003'
   LET g_pk_array[3].values = g_xcca_m.xcca004
   LET g_pk_array[3].column = 'xcca004'
   LET g_pk_array[4].values = g_xcca_m.xcca005
   LET g_pk_array[4].column = 'xcca005'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="axct300.show" ver="7" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axct300_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL axct300_b_fill(g_wc2) #單身填充
      CALL axct300_b_fill2('0') #單身填充
   END IF
   
   
 
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL axct300_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   DISPLAY BY NAME g_xcca_m.xccacomp,g_xcca_m.xccacomp_desc,g_xcca_m.xccald,g_xcca_m.xccald_desc,g_xcca_m.xcca004, 
       g_xcca_m.xcca005,g_xcca_m.xcca003,g_xcca_m.xcca003_desc
   CALL axct300_b_fill(g_wc2_table1)                 #單身
   CALL axct300_b_fill2('0') #單身填充
 
   CALL axct300_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point   
   
END FUNCTION
]]>
  </section>
  <section id="axct300.state_change" ver="1" status="" src="s">
    <![CDATA[    
]]>
  </section>
  <section id="axct300.ui_browser_refresh" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axct300_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xccald = g_xcca_m.xccald 
         AND g_browser[l_i].b_xcca003 = g_xcca_m.xcca003 
         AND g_browser[l_i].b_xcca004 = g_xcca_m.xcca004 
         AND g_browser[l_i].b_xcca005 = g_xcca_m.xcca005 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="axct300.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION axct300_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
      #add-point:ui_detailshow段more
      {<point name="ui_detailshow.more"/>}
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="axct300.ui_dialog" ver="41" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION axct300_ui_dialog()
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point  
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL axct300_browser_fill("")
 
      
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_xccald = g_xccald_t
               AND g_browser[li_idx].b_xcca003 = g_xcca003_t
               AND g_browser[li_idx].b_xcca004 = g_xcca004_t
               AND g_browser[li_idx].b_xcca005 = g_xcca005_t
 
               THEN
               LET g_current_row = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
      
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_xcca_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL axct300_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_xcca2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL axct300_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)      
            
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axct300_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axct300_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         
         
         ON ACTION first
            CALL axct300_fetch('F')
            LET g_current_row = g_current_idx         
          
         ON ACTION previous
            CALL axct300_fetch('P')
            LET g_current_row = g_current_idx
          
         ON ACTION jump
            CALL axct300_fetch('/')
            LET g_current_row = g_current_idx
        
         ON ACTION next
            CALL axct300_fetch('N')
            LET g_current_row = g_current_idx
         
         ON ACTION last
            CALL axct300_fetch('L')
            LET g_current_row = g_current_idx
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xcca001
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axct300_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axct300_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = ""
                  LET g_errparam.code = "-100"
                  LET g_errparam.popup = TRUE
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL axct300_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axct300_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axct300_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axct300_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axct300_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axct300_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axct300_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_axct300_s01
            LET g_action_choice="open_axct300_s01"
            IF cl_auth_chk_act("open_axct300_s01") THEN
               
               #add-point:ON ACTION open_axct300_s01
               {<point name="menu.open_axct300_s01" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_axct300_02
            LET g_action_choice="open_axct300_02"
            IF cl_auth_chk_act("open_axct300_02") THEN
               
               #add-point:ON ACTION open_axct300_02
               {<point name="menu.open_axct300_02" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL axct300_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axct300_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axct300_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
]]>
  </section>
  <section id="axct300.ui_headershow" ver="4" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION axct300_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_xcca_m.xccald = g_browser[g_current_idx].b_xccald   
   LET g_xcca_m.xcca003 = g_browser[g_current_idx].b_xcca003   
   LET g_xcca_m.xcca004 = g_browser[g_current_idx].b_xcca004   
   LET g_xcca_m.xcca005 = g_browser[g_current_idx].b_xcca005   
 
   EXECUTE axct300_master_referesh USING g_xcca_m.xccald,g_xcca_m.xcca003,g_xcca_m.xcca004,g_xcca_m.xcca005 INTO g_xcca_m.xccacomp, 
       g_xcca_m.xccald,g_xcca_m.xcca004,g_xcca_m.xcca005,g_xcca_m.xcca003,g_xcca_m.xccacomp_desc,g_xcca_m.xccald_desc, 
       g_xcca_m.xcca003_desc
   CALL axct300_show()
   
END FUNCTION
]]>
  </section>
  <section id="axct300.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axct300_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
 
 
END FUNCTION
]]>
  </section>
  <section id="axct300.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION axct300_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
 
   
END FUNCTION
]]>
  </section>
</add_points>
