#該程式已解開Section, 不再透過樣板產出!
{<section id="axcq501.description" >}
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000044
#+ 
#+ Filename...: axcq501
#+ Description: 在製主件成本查詢作業
#+ Creator....: 00537(2014/08/22)
#+ Modifier...: 00537(2014/08/25) -SD/PR-
#+ Buildtype..: 應用 q02 樣板自動產生
#+ 以上段落由子樣板a00產生

{</section>}

{<section id="axcq501.global" >}
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_xccd_m RECORD
   xccdcomp LIKE xccd_t.xccdcomp,
   xccdcomp_desc LIKE ooefl_t.ooefl003,
   xccdld   LIKE xccd_t.xccdld,
   xccdld_desc   LIKE glaal_t.glaal002,
   xccd003  LIKE xccd_t.xccd003,
   xccd003_desc  LIKE xcatl_t.xcatl003,
   xccd004  LIKE xccd_t.xccd004,
   xccd005  LIKE xccd_t.xccd005,
   xccd006  LIKE xccd_t.xccd006,
   xccd007  LIKE xccd_t.xccd007,
   xccd007_desc  LIKE imaal_t.imaal003,
   xccd007_desc_1  LIKE imaal_t.imaal004,
   xccd008  LIKE xccd_t.xccd008,
   imag014  LIKE imag_t.imag014,
   imag014_desc  LIKE oocal_t.oocal003,
   sfaa048  LIKE sfaa_t.sfaa048,
   xcbb006  LIKE xcbb_t.xcbb006,
   sfaa042  LIKE sfaa_t.sfaa042,
   xccd002  LIKE xccd_t.xccd002,
   xccd002_desc    LIKE xcbfl_t.xcbfl003,
   xccd010  LIKE xccd_t.xccd010,
   xccd200  LIKE xccd_t.xccd200
     END RECORD
PRIVATE TYPE type_g_xccd_d RECORD
       #statepic       LIKE type_t.chr1,
       
       item LIKE type_t.chr80, 
   xccd001 LIKE xccd_t.xccd001, 
   xccd102a LIKE xccd_t.xccd102a, 
   xccd202a LIKE xccd_t.xccd202a, 
   xccd204a LIKE xccd_t.xccd204a, 
   xccd302a LIKE xccd_t.xccd302a, 
   xccd304a LIKE xccd_t.xccd304a, 
   xccd902a LIKE xccd_t.xccd902a, 
   xccdld LIKE xccd_t.xccdld, 
   xccd002 LIKE xccd_t.xccd002, 
   xccd003 LIKE xccd_t.xccd003, 
   xccd004 LIKE xccd_t.xccd004, 
   xccd005 LIKE xccd_t.xccd005, 
   xccd006 LIKE xccd_t.xccd006 
       END RECORD
PRIVATE TYPE type_g_xccd2_d RECORD
       item2 LIKE type_t.chr80, 
   xccd001 LIKE xccd_t.xccd001, 
   xccd102b LIKE xccd_t.xccd102b, 
   xccd202b LIKE xccd_t.xccd202b, 
   xccd204b LIKE xccd_t.xccd204b, 
   xccd302b LIKE xccd_t.xccd302b, 
   xccd304b LIKE xccd_t.xccd304b, 
   xccd902b LIKE xccd_t.xccd902b, 
   xccdld LIKE xccd_t.xccdld, 
   xccd002 LIKE xccd_t.xccd002, 
   xccd003 LIKE xccd_t.xccd003, 
   xccd004 LIKE xccd_t.xccd004, 
   xccd005 LIKE xccd_t.xccd005, 
   xccd006 LIKE xccd_t.xccd006
       END RECORD
 
PRIVATE TYPE type_g_xccd3_d RECORD
       item3 LIKE type_t.chr80, 
   xccd001 LIKE xccd_t.xccd001, 
   xccd102c LIKE xccd_t.xccd102c, 
   xccd202c LIKE xccd_t.xccd202c, 
   xccd204c LIKE xccd_t.xccd204c, 
   xccd302c LIKE xccd_t.xccd302c, 
   xccd304c LIKE xccd_t.xccd304c, 
   xccd902c LIKE xccd_t.xccd902c, 
   xccdld LIKE xccd_t.xccdld, 
   xccd002 LIKE xccd_t.xccd002, 
   xccd003 LIKE xccd_t.xccd003, 
   xccd004 LIKE xccd_t.xccd004, 
   xccd005 LIKE xccd_t.xccd005, 
   xccd006 LIKE xccd_t.xccd006
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_master                     type_g_xccd_m
DEFINE g_master_t                   type_g_xccd_m
DEFINE g_xccd_d          DYNAMIC ARRAY OF type_g_xccd_d
DEFINE g_xccd_d_t        type_g_xccd_d
DEFINE g_xccd2_d   DYNAMIC ARRAY OF type_g_xccd2_d
DEFINE g_xccd2_d_t type_g_xccd2_d
 
DEFINE g_xccd3_d   DYNAMIC ARRAY OF type_g_xccd3_d
DEFINE g_xccd3_d_t type_g_xccd3_d
 
 
      
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              
DEFINE l_ac_d               LIKE type_t.num5              #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num5              #目前所在頁數
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_detail_cnt2        LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num5
DEFINE g_detail_idx         LIKE type_t.num5
DEFINE g_detail_idx2        LIKE type_t.num5
DEFINE g_hyper_url          STRING                        #hyperlink的主要網址
 
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
 
DEFINE g_wc_filter_table           STRING
 
 
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="axcq501.main" >}
#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " ", 
                      " FROM ",
                      " "
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axcq501_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT  ",
               " FROM  t0",
               
               " WHERE  "
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axcq501_master_referesh FROM g_sql
 
   #add-point:main段define_sql
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = ""
   #add-point:main段define_sql
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axcq501_bcl CURSOR FROM g_forupd_sql
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axcq501 WITH FORM cl_ap_formpath("axc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axcq501_init()   
 
      #進入選單 Menu (="N")
      CALL axcq501_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axcq501
      
   END IF 
   
   CLOSE axcq501_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 

{</section>}

{<section id="axcq501.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION axcq501_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
   
   
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
 
   CALL axcq501_default_search()  
END FUNCTION

{</section>}

{<section id="axcq501.default_search" >}
PRIVATE FUNCTION axcq501_default_search()
 
   #預設查詢條件
   LET g_wc = cl_qbe_get_default_qryplan()
   
   IF NOT cl_null(g_argv[01]) THEN
      LET g_wc = g_wc," xccdcomp = '",g_argv[01],"' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET g_wc = g_wc," xccdld = '",g_argv[02],"' AND "
   END IF

   IF NOT cl_null(g_argv[03]) THEN
      LET g_wc = g_wc," xccd003 = '",g_argv[03],"' AND "
   END IF

   IF NOT cl_null(g_argv[04]) THEN
      LET g_wc = g_wc," xccd004 = '",g_argv[04],"' AND "
   END IF

   IF NOT cl_null(g_argv[05]) THEN
      LET g_wc = g_wc," xccd005 = '",g_argv[05],"' AND "
   END IF

   IF NOT cl_null(g_argv[06]) THEN
      LET g_wc = g_wc," xccd007 = '",g_argv[06],"' AND "
   END IF

   IF NOT cl_null(g_argv[07]) THEN
      LET g_wc = g_wc," xccd008 = '",g_argv[07],"' AND "
   END IF

   IF NOT cl_null(g_argv[08]) THEN
      LET g_wc = g_wc," xccd002 = '",g_argv[08],"' AND "
   END IF
   #160617-00002#3 add-S
   IF NOT cl_null(g_argv[09]) THEN
      LET g_wc = g_wc," xccd006 = '",g_argv[09],"' AND "
   END IF
   #160617-00002#3 add-E
   IF NOT cl_null(g_wc) THEN
      LET g_wc = g_wc.subString(1,g_wc.getLength()-5)
   ELSE
      #若無外部參數則預設為1=2
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   IF cl_null(g_wc2) THEN LET g_wc2 = ' 1=1' END IF
   
END FUNCTION

{</section>}

{<section id="axcq501.ui_dialog" >}
#+ 功能選單 
PRIVATE FUNCTION axcq501_ui_dialog()
   DEFINE ls_wc    STRING
   DEFINE li_idx   LIKE type_t.num5
   #add-point:ui_dialog段define
{<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   #add-point:ui_dialog段before dialog 
{<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   IF NOT cl_null(g_wc) AND g_wc != " 1=1" THEN
      CALL axcq501_browser_fill()
      CALL axcq501_fetch("F")
      CALL axcq501_b_fill()
   ELSE
      CALL axcq501_query()
   END IF
   
   WHILE TRUE
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_xccd_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               DISPLAY g_xccd_d.getLength() TO FORMONLY.cnt
               CALL axcq501_fetch('')
               LET g_master_idx = l_ac
               #add-point:input段before row
{<point name="input.body.before_row"/>}
               #end add-point  
            
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
         DISPLAY ARRAY g_xccd2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               LET g_current_page = 2
            
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               DISPLAY g_xccd2_d.getLength() TO FORMONLY.cnt
               CALL axcq501_fetch('')
               LET g_master_idx = l_ac
               #add-point:input段before row
{<point name="input.body2.before_row"/>}
               #end add-point  
 
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
         DISPLAY ARRAY g_xccd3_d TO s_detail3.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               LET g_current_page = 3
            
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail3")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               DISPLAY g_xccd3_d.getLength() TO FORMONLY.cnt
               CALL axcq501_fetch('')
               LET g_master_idx = l_ac
               #add-point:input段before row
{<point name="input.body3.before_row"/>}
               #end add-point  
 
            #自訂ACTION(detail_show,page_3)
            
               
         END DISPLAY
 
 
         
 
      
         #add-point:ui_dialog段自定義display array
{<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG      
            CALL DIALOG.setSelectionMode("s_detail1", 1)
 
            #add-point:ui_dialog段before dialog
{<point name="ui_dialog.bef_dialog"/>}
            #end add-point
 
         
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axcq501_insert()
               #add-point:ON ACTION insert
{<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
{<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axcq501_query()
               #add-point:ON ACTION query
{<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo
{<point name="menu.datainfo" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL axcq501_filter()
            #add-point:ON ACTION filter
{<point name="menu.filter" />}
            #END add-point
            EXIT DIALOG
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axcq501_b_fill()
            END IF
 
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
      #  ON ACTION qbeclear   # 條件清除
      #     CLEAR FORM
 
         ON ACTION datarefresh   # 重新整理
            LET g_error_show = 1
            CALL axcq501_b_fill()
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum
{<point name="ui_dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
 
         
         
 
         #add-point:ui_dialog段自定義action
{<point name="ui_dialog.more_action"/>}
         #end add-point
      
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION

{</section>}

{<section id="axcq501.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION axcq501_query()
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
{<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0

   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
   
   LET g_qryparam.state = "c"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   
   #wc備份
   LET ls_wc = g_wc
   LET g_master_idx = l_ac

   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #單頭
      CONSTRUCT BY NAME g_wc ON xccdcomp,xccdld,xccd003,xccd004,xccd005,xccd006,xccd007,xccd008,xccd002,xccd010,xccd200
 
         BEFORE CONSTRUCT

           
         ON ACTION controlp INFIELD xccdcomp
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            #160802-00020#10-add-(S)
            #增加法人過濾條件
            IF NOT cl_null(g_wc_cs_comp) THEN
               LET g_qryparam.where = " ooef001 IN ",g_wc_cs_comp
            END IF
            #160802-00020#10-add-(E)
            CALL q_ooef001_2()                      #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccdcomp  #顯示到畫面上

            NEXT FIELD xccdcomp                     #返回原欄位         
         
         
         
         ON ACTION controlp INFIELD xccdld
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept 
            #160802-00020#4-add-(S)
            IF NOT cl_null(g_wc_cs_ld) THEN
               LET g_qryparam.where = " glaald IN ",g_wc_cs_ld
            END IF
            #160802-00020#4-add-(E)
            CALL q_authorised_ld()                #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccdld  #顯示到畫面上
            NEXT FIELD xccdld                     #返回原欄位        
         
         
         
         ON ACTION controlp INFIELD xccd003
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xcat001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccd003  #顯示到畫面上
            NEXT FIELD xccd003                     #返回原欄位         
         
         
         
         ON ACTION controlp INFIELD xccd006
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = 'F'
            CALL q_sfaadocno_1()                   #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccd006  #顯示到畫面上
            NEXT FIELD xccd006                     #返回原欄位           
         
         
         
         ON ACTION controlp INFIELD xccd007
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccd007  #顯示到畫面上

            NEXT FIELD xccd007                     #返回原欄位         
         
          ON ACTION controlp INFIELD xccd008
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xccd008()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccd008  #顯示到畫面上

            NEXT FIELD xccd008                     #返回原欄位  
         
         ON ACTION controlp INFIELD xccd002
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xcbf001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccd002  #顯示到畫面上

            NEXT FIELD xccd002                     #返回原欄位         
         
         
         
         ON ACTION controlp INFIELD xccd010
         
        
         
      END CONSTRUCT


      #單身根據table分拆construct
      CONSTRUCT g_wc_table ON xccd001,xccd102a,xccd202a,xccd204a,xccd302a,xccd304a,xccd902a,xccd102b, 
          xccd202b,xccd204b,xccd302b,xccd304b,xccd902b,xccd102c,xccd202c,xccd204c,xccd302c,xccd304c, 
          xccd902c
           FROM s_detail1[1].b_xccd001,s_detail1[1].b_xccd102a,s_detail1[1].b_xccd202a,s_detail1[1].b_xccd204a, 
               s_detail1[1].b_xccd302a,s_detail1[1].b_xccd304a,s_detail1[1].b_xccd902a,s_detail2[1].b_xccd102b, 
               s_detail2[1].b_xccd202b,s_detail2[1].b_xccd204b,s_detail2[1].b_xccd302b,s_detail2[1].b_xccd304b, 
               s_detail2[1].b_xccd902b,s_detail3[1].b_xccd102c,s_detail3[1].b_xccd202c,s_detail3[1].b_xccd204c, 
               s_detail3[1].b_xccd302c,s_detail3[1].b_xccd304c,s_detail3[1].b_xccd902c
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
{<point name="cs.head.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #----<<b_item>>----
         #----<<b_xccd001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xccd001
            #add-point:BEFORE FIELD b_xccd001
{<point name="construct.b.page1.b_xccd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xccd001
            
            #add-point:AFTER FIELD b_xccd001
{<point name="construct.a.page1.b_xccd001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_xccd001
         ON ACTION controlp INFIELD b_xccd001
            #add-point:ON ACTION controlp INFIELD b_xccd001
{<point name="construct.c.page1.b_xccd001" />}
            #END add-point
 
         #----<<b_xccd102a>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xccd102a
            #add-point:BEFORE FIELD b_xccd102a
{<point name="construct.b.page1.b_xccd102a" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xccd102a
            
            #add-point:AFTER FIELD b_xccd102a
{<point name="construct.a.page1.b_xccd102a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_xccd102a
         ON ACTION controlp INFIELD b_xccd102a
            #add-point:ON ACTION controlp INFIELD b_xccd102a
{<point name="construct.c.page1.b_xccd102a" />}
            #END add-point
 
         #----<<b_xccd202a>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xccd202a
            #add-point:BEFORE FIELD b_xccd202a
{<point name="construct.b.page1.b_xccd202a" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xccd202a
            
            #add-point:AFTER FIELD b_xccd202a
{<point name="construct.a.page1.b_xccd202a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_xccd202a
         ON ACTION controlp INFIELD b_xccd202a
            #add-point:ON ACTION controlp INFIELD b_xccd202a
{<point name="construct.c.page1.b_xccd202a" />}
            #END add-point
 
         #----<<b_xccd204a>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xccd204a
            #add-point:BEFORE FIELD b_xccd204a
{<point name="construct.b.page1.b_xccd204a" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xccd204a
            
            #add-point:AFTER FIELD b_xccd204a
{<point name="construct.a.page1.b_xccd204a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_xccd204a
         ON ACTION controlp INFIELD b_xccd204a
            #add-point:ON ACTION controlp INFIELD b_xccd204a
{<point name="construct.c.page1.b_xccd204a" />}
            #END add-point
 
         #----<<b_xccd302a>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xccd302a
            #add-point:BEFORE FIELD b_xccd302a
{<point name="construct.b.page1.b_xccd302a" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xccd302a
            
            #add-point:AFTER FIELD b_xccd302a
{<point name="construct.a.page1.b_xccd302a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_xccd302a
         ON ACTION controlp INFIELD b_xccd302a
            #add-point:ON ACTION controlp INFIELD b_xccd302a
{<point name="construct.c.page1.b_xccd302a" />}
            #END add-point
 
         #----<<b_xccd304a>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xccd304a
            #add-point:BEFORE FIELD b_xccd304a
{<point name="construct.b.page1.b_xccd304a" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xccd304a
            
            #add-point:AFTER FIELD b_xccd304a
{<point name="construct.a.page1.b_xccd304a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_xccd304a
         ON ACTION controlp INFIELD b_xccd304a
            #add-point:ON ACTION controlp INFIELD b_xccd304a
{<point name="construct.c.page1.b_xccd304a" />}
            #END add-point
 
         #----<<b_xccd902a>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xccd902a
            #add-point:BEFORE FIELD b_xccd902a
{<point name="construct.b.page1.b_xccd902a" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xccd902a
            
            #add-point:AFTER FIELD b_xccd902a
{<point name="construct.a.page1.b_xccd902a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_xccd902a
         ON ACTION controlp INFIELD b_xccd902a
            #add-point:ON ACTION controlp INFIELD b_xccd902a
{<point name="construct.c.page1.b_xccd902a" />}
            #END add-point
 
         #----<<b_xccdld_1>>----
         #----<<b_xccd002_1>>----
         #----<<b_xccd003_1>>----
         #----<<b_xccd004_1>>----
         #----<<b_xccd005_1>>----
         #----<<b_xccd006_1>>----
         #----<<b_item2>>----
         #----<<b_xccd001_2>>----
         #----<<b_xccd102b>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xccd102b
            #add-point:BEFORE FIELD b_xccd102b
{<point name="construct.b.page2.b_xccd102b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xccd102b
            
            #add-point:AFTER FIELD b_xccd102b
{<point name="construct.a.page2.b_xccd102b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.b_xccd102b
         ON ACTION controlp INFIELD b_xccd102b
            #add-point:ON ACTION controlp INFIELD b_xccd102b
{<point name="construct.c.page2.b_xccd102b" />}
            #END add-point
 
         #----<<b_xccd202b>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xccd202b
            #add-point:BEFORE FIELD b_xccd202b
{<point name="construct.b.page2.b_xccd202b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xccd202b
            
            #add-point:AFTER FIELD b_xccd202b
{<point name="construct.a.page2.b_xccd202b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.b_xccd202b
         ON ACTION controlp INFIELD b_xccd202b
            #add-point:ON ACTION controlp INFIELD b_xccd202b
{<point name="construct.c.page2.b_xccd202b" />}
            #END add-point
 
         #----<<b_xccd204b>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xccd204b
            #add-point:BEFORE FIELD b_xccd204b
{<point name="construct.b.page2.b_xccd204b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xccd204b
            
            #add-point:AFTER FIELD b_xccd204b
{<point name="construct.a.page2.b_xccd204b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.b_xccd204b
         ON ACTION controlp INFIELD b_xccd204b
            #add-point:ON ACTION controlp INFIELD b_xccd204b
{<point name="construct.c.page2.b_xccd204b" />}
            #END add-point
 
         #----<<b_xccd302b>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xccd302b
            #add-point:BEFORE FIELD b_xccd302b
{<point name="construct.b.page2.b_xccd302b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xccd302b
            
            #add-point:AFTER FIELD b_xccd302b
{<point name="construct.a.page2.b_xccd302b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.b_xccd302b
         ON ACTION controlp INFIELD b_xccd302b
            #add-point:ON ACTION controlp INFIELD b_xccd302b
{<point name="construct.c.page2.b_xccd302b" />}
            #END add-point
 
         #----<<b_xccd304b>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xccd304b
            #add-point:BEFORE FIELD b_xccd304b
{<point name="construct.b.page2.b_xccd304b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xccd304b
            
            #add-point:AFTER FIELD b_xccd304b
{<point name="construct.a.page2.b_xccd304b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.b_xccd304b
         ON ACTION controlp INFIELD b_xccd304b
            #add-point:ON ACTION controlp INFIELD b_xccd304b
{<point name="construct.c.page2.b_xccd304b" />}
            #END add-point
 
         #----<<b_xccd902b>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xccd902b
            #add-point:BEFORE FIELD b_xccd902b
{<point name="construct.b.page2.b_xccd902b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xccd902b
            
            #add-point:AFTER FIELD b_xccd902b
{<point name="construct.a.page2.b_xccd902b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.b_xccd902b
         ON ACTION controlp INFIELD b_xccd902b
            #add-point:ON ACTION controlp INFIELD b_xccd902b
{<point name="construct.c.page2.b_xccd902b" />}
            #END add-point
 
         #----<<b_xccdld_2>>----
         #----<<b_xccd002_2>>----
         #----<<b_xccd003_2>>----
         #----<<b_xccd004_2>>----
         #----<<b_xccd005_2>>----
         #----<<b_xccd006_2>>----
         #----<<b_item3>>----
         #----<<b_xccd102c>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xccd102c
            #add-point:BEFORE FIELD b_xccd102c
{<point name="construct.b.page3.b_xccd102c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xccd102c
            
            #add-point:AFTER FIELD b_xccd102c
{<point name="construct.a.page3.b_xccd102c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.b_xccd102c
         ON ACTION controlp INFIELD b_xccd102c
            #add-point:ON ACTION controlp INFIELD b_xccd102c
{<point name="construct.c.page3.b_xccd102c" />}
            #END add-point
 
         #----<<b_xccd202c>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xccd202c
            #add-point:BEFORE FIELD b_xccd202c
{<point name="construct.b.page3.b_xccd202c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xccd202c
            
            #add-point:AFTER FIELD b_xccd202c
{<point name="construct.a.page3.b_xccd202c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.b_xccd202c
         ON ACTION controlp INFIELD b_xccd202c
            #add-point:ON ACTION controlp INFIELD b_xccd202c
{<point name="construct.c.page3.b_xccd202c" />}
            #END add-point
 
         #----<<b_xccd204c>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xccd204c
            #add-point:BEFORE FIELD b_xccd204c
{<point name="construct.b.page3.b_xccd204c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xccd204c
            
            #add-point:AFTER FIELD b_xccd204c
{<point name="construct.a.page3.b_xccd204c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.b_xccd204c
         ON ACTION controlp INFIELD b_xccd204c
            #add-point:ON ACTION controlp INFIELD b_xccd204c
{<point name="construct.c.page3.b_xccd204c" />}
            #END add-point
 
         #----<<b_xccd302c>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xccd302c
            #add-point:BEFORE FIELD b_xccd302c
{<point name="construct.b.page3.b_xccd302c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xccd302c
            
            #add-point:AFTER FIELD b_xccd302c
{<point name="construct.a.page3.b_xccd302c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.b_xccd302c
         ON ACTION controlp INFIELD b_xccd302c
            #add-point:ON ACTION controlp INFIELD b_xccd302c
{<point name="construct.c.page3.b_xccd302c" />}
            #END add-point
 
         #----<<b_xccd304c>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xccd304c
            #add-point:BEFORE FIELD b_xccd304c
{<point name="construct.b.page3.b_xccd304c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xccd304c
            
            #add-point:AFTER FIELD b_xccd304c
{<point name="construct.a.page3.b_xccd304c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.b_xccd304c
         ON ACTION controlp INFIELD b_xccd304c
            #add-point:ON ACTION controlp INFIELD b_xccd304c
{<point name="construct.c.page3.b_xccd304c" />}
            #END add-point
 
         #----<<b_xccd902c>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xccd902c
            #add-point:BEFORE FIELD b_xccd902c
{<point name="construct.b.page3.b_xccd902c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xccd902c
            
            #add-point:AFTER FIELD b_xccd902c
{<point name="construct.a.page3.b_xccd902c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.b_xccd902c
         ON ACTION controlp INFIELD b_xccd902c
            #add-point:ON ACTION controlp INFIELD b_xccd902c
{<point name="construct.c.page3.b_xccd902c" />}
            #END add-point
 
         #----<<b_xccdld_3>>----
         #----<<b_xccd002_3>>----
         #----<<b_xccd003_3>>----
         #----<<b_xccd004_3>>----
         #----<<b_xccd005_3>>----
         #----<<b_xccd006_3>>----
   
       
      END CONSTRUCT
      
 
      
 
  
      #add-point:query段more_construct
{<point name="query.more_construct"/>}
      #end add-point 
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
 
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION qbeclear   # 條件清除
         CLEAR FORM
 
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc = ls_wc
   ELSE
      LET g_master_idx = 1
   END IF
           
   LET g_wc2 = g_wc_table
 
        
   #add-point:cs段after_construct
{<point name="cs.after_construct"/>}
   #end add-point
        
   LET g_error_show = 1
#   CALL axcq501_b_fill()
   LET l_ac = g_master_idx
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   END IF
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
   
END FUNCTION

{</section>}

{<section id="axcq501.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axcq501_b_fill()
   DEFINE ls_wc           STRING
   #add-point:b_fill段define
{<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before
{<point name="b_fill.sql_before"/>}

{<point name="b_fill.sql_after"/>}
   #end add-point
 
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE axcq501_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR axcq501_pb
   
   
 
   CALL g_xccd_d.clear()
   CALL g_xccd2_d.clear()   
 
   CALL g_xccd3_d.clear()   
   
   OPEN b_fill_curs USING g_enterprise,g_master.xccdld,'1',g_master.xccd002,g_master.xccd003,g_master.xccd004,g_master.xccd005,g_master.xccd006
   
{<point name="b_fill.array_clear" />}
   #end add-point      
{<point name="b_fill.fill"/>}
 
{<point name="b_fill.array_deleteElement" />}
   
{<point name="b_fill.others.fill"/>}

END FUNCTION

{</section>}

{<section id="axcq501.fetch" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axcq501_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   DEFINE l_cnt      LIKE type_t.num5
   

{<point name="fetch.define"/>}

{<point name="fetch.array_clear" />}

{<point name="fetch.after_fill" />}

{<point name="fetch.array_deleteElement" />}

   LET g_sql = " SELECT DISTINCT xccdcomp,xccdld,xccd003,xccd004,xccd005,xccd006,xccd007,xccd008,xccd002,xccd010,xccd200 ",
               "   FROM xccd_t ",
               "  WHERE xccdent= ? AND xccdld = ? ",
               "    AND xccd002 = ? AND xccd003 = ? AND xccd004 = ? AND xccd005 = ? AND xccd006 = ? "
  
   PREPARE axcq501_fetch_pre FROM g_sql
            
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser_cnt              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_browser_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser_cnt THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
   
   
   LET g_detail_cnt = g_browser_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF

   DISPLAY g_current_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 THEN
      RETURN
   END IF

#单身总行数是固定的
   DISPLAY '1' TO FORMONLY.idx
   DISPLAY '10' TO FORMONLY.cnt   
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axcq501_fetch_pre USING g_browser[g_current_idx].xccdent,g_browser[g_current_idx].xccdld,g_browser[g_current_idx].xccd002,
                                   g_browser[g_current_idx].xccd003,g_browser[g_current_idx].xccd004,g_browser[g_current_idx].xccd005,g_browser[g_current_idx].xccd006                                   
      INTO g_master.xccdcomp,g_master.xccdld,g_master.xccd003,g_master.xccd004,g_master.xccd005,g_master.xccd006,g_master.xccd007,g_master.xccd008,g_master.xccd002,g_master.xccd010,g_master.xccd200
      
   FREE axcq501_fetch_pre
            
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xccd_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      INITIALIZE g_master.* TO NULL
      RETURN
   END IF

   #重新顯示   
   CALL axcq501_show()   

  
   
END FUNCTION

{</section>}

{<section id="axcq501.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION axcq501_detail_show(ps_page)
   DEFINE ps_page    STRING
   DEFINE ls_sql     STRING
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
 
   #讀入ref值
   IF ps_page.getIndexOf("'1'",1) > 0 THEN
      #帶出公用欄位reference值page1
      
 
      #add-point:show段單身reference
      {<point name="detail_show.body.reference"/>}
      #end add-point
   END IF
   
   IF ps_page.getIndexOf("'2'",1) > 0 THEN
      #帶出公用欄位reference值page2
      
 
      #add-point:show段單身reference
      {<point name="detail_show.body2.reference"/>}
      #end add-point
   END IF
 
   IF ps_page.getIndexOf("'3'",1) > 0 THEN
      #帶出公用欄位reference值page3
      
 
      #add-point:show段單身reference
      {<point name="detail_show.body3.reference"/>}
      #end add-point
   END IF
 
 
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="axcq501.filter" >}
#+ filter過濾功能
PRIVATE FUNCTION axcq501_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point    
   
   LET l_ac = 1
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xccd001,xccd102a,xccd202a,xccd204a,xccd302a,xccd304a,xccd902a,xccd102b, 
          xccd202b,xccd204b,xccd302b,xccd304b,xccd902b,xccd102c,xccd202c,xccd204c,xccd302c,xccd304c, 
          xccd902c
                          FROM s_detail1[1].b_xccd001,s_detail1[1].b_xccd102a,s_detail1[1].b_xccd202a, 
                              s_detail1[1].b_xccd204a,s_detail1[1].b_xccd302a,s_detail1[1].b_xccd304a, 
                              s_detail1[1].b_xccd902a,s_detail2[1].b_xccd102b,s_detail2[1].b_xccd202b, 
                              s_detail2[1].b_xccd204b,s_detail2[1].b_xccd302b,s_detail2[1].b_xccd304b, 
                              s_detail2[1].b_xccd902b,s_detail3[1].b_xccd102c,s_detail3[1].b_xccd202c, 
                              s_detail3[1].b_xccd204c,s_detail3[1].b_xccd302c,s_detail3[1].b_xccd304c, 
                              s_detail3[1].b_xccd902c
 
         BEFORE CONSTRUCT
#saki       CALL cl_qbe_init()
                     DISPLAY axcq501_filter_parser('xccd001') TO s_detail1[1].b_xccd001
            DISPLAY axcq501_filter_parser('xccd102a') TO s_detail1[1].b_xccd102a
            DISPLAY axcq501_filter_parser('xccd202a') TO s_detail1[1].b_xccd202a
            DISPLAY axcq501_filter_parser('xccd204a') TO s_detail1[1].b_xccd204a
            DISPLAY axcq501_filter_parser('xccd302a') TO s_detail1[1].b_xccd302a
            DISPLAY axcq501_filter_parser('xccd304a') TO s_detail1[1].b_xccd304a
            DISPLAY axcq501_filter_parser('xccd902a') TO s_detail1[1].b_xccd902a
            DISPLAY axcq501_filter_parser('xccd102b') TO s_detail2[1].b_xccd102b
            DISPLAY axcq501_filter_parser('xccd202b') TO s_detail2[1].b_xccd202b
            DISPLAY axcq501_filter_parser('xccd204b') TO s_detail2[1].b_xccd204b
            DISPLAY axcq501_filter_parser('xccd302b') TO s_detail2[1].b_xccd302b
            DISPLAY axcq501_filter_parser('xccd304b') TO s_detail2[1].b_xccd304b
            DISPLAY axcq501_filter_parser('xccd902b') TO s_detail2[1].b_xccd902b
            DISPLAY axcq501_filter_parser('xccd102c') TO s_detail3[1].b_xccd102c
            DISPLAY axcq501_filter_parser('xccd202c') TO s_detail3[1].b_xccd202c
            DISPLAY axcq501_filter_parser('xccd204c') TO s_detail3[1].b_xccd204c
            DISPLAY axcq501_filter_parser('xccd302c') TO s_detail3[1].b_xccd302c
            DISPLAY axcq501_filter_parser('xccd304c') TO s_detail3[1].b_xccd304c
            DISPLAY axcq501_filter_parser('xccd902c') TO s_detail3[1].b_xccd902c
 
 
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
      ON ACTION accept
         ACCEPT DIALOG 
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
 
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
   
      CALL axcq501_filter_show('xccd001','b_xccd001')
   CALL axcq501_filter_show('xccd102a','b_xccd102a')
   CALL axcq501_filter_show('xccd202a','b_xccd202a')
   CALL axcq501_filter_show('xccd204a','b_xccd204a')
   CALL axcq501_filter_show('xccd302a','b_xccd302a')
   CALL axcq501_filter_show('xccd304a','b_xccd304a')
   CALL axcq501_filter_show('xccd902a','b_xccd902a')
   CALL axcq501_filter_show('xccd102b','b_xccd102b')
   CALL axcq501_filter_show('xccd202b','b_xccd202b')
   CALL axcq501_filter_show('xccd204b','b_xccd204b')
   CALL axcq501_filter_show('xccd302b','b_xccd302b')
   CALL axcq501_filter_show('xccd304b','b_xccd304b')
   CALL axcq501_filter_show('xccd902b','b_xccd902b')
   CALL axcq501_filter_show('xccd102c','b_xccd102c')
   CALL axcq501_filter_show('xccd202c','b_xccd202c')
   CALL axcq501_filter_show('xccd204c','b_xccd204c')
   CALL axcq501_filter_show('xccd302c','b_xccd302c')
   CALL axcq501_filter_show('xccd304c','b_xccd304c')
   CALL axcq501_filter_show('xccd902c','b_xccd902c')
 
    
   CALL axcq501_b_fill()
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
 
END FUNCTION

{</section>}

{<section id="axcq501.filter_parser" >}
#+ filter欄位解析
PRIVATE FUNCTION axcq501_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION

{</section>}

{<section id="axcq501.filter_show" >}
#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION axcq501_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axcq501_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION

{</section>}

{<section id="axcq501.insert" >}
#+ insert
PRIVATE FUNCTION axcq501_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point
 
   #add-point:insert段control
   {<point name="insert.control"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="axcq501.modify" >}
#+ modify
PRIVATE FUNCTION axcq501_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point
 
   #add-point:modify段control
   {<point name="modify.control"/>}
   #end add-point 
END FUNCTION

{</section>}

{<section id="axcq501.reproduce" >}
#+ reproduce
PRIVATE FUNCTION axcq501_reproduce()
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #add-point:reproduce段control
   {<point name="reproduce.control"/>}
   #end add-point 
END FUNCTION

{</section>}

{<section id="axcq501.delete" >}
#+ delete
PRIVATE FUNCTION axcq501_delete()
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point
 
   #add-point:delete段control
   {<point name="delete.control"/>}
   #end add-point 
END FUNCTION

{</section>}

{<section id="axcq501.other_function" >}
{<point name="other.function"/>}

{</section>}

