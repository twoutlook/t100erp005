#該程式已解開Section, 不再透過樣板產出!
{<section id="axcq540.description" >}
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000017
#+ 
#+ Filename...: axcq540
#+ Description: 在製成本匯總查詢作業
#+ Creator....: 00537(2014-09-16 13:41:40)
#+ Modifier...: 00537(2014-09-18 09:33:31) -SD/PR-
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生

{</section>}

{<section id="axcq540.global" >}
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xccd_m        RECORD
       xccdcomp LIKE xccd_t.xccdcomp, 
   xccdcomp_desc LIKE type_t.chr80, 
   xccdld LIKE xccd_t.xccdld, 
   xccdld_desc LIKE type_t.chr80, 
   xccd004 LIKE xccd_t.xccd004, 
   xccd005 LIKE xccd_t.xccd005, 
   xccd004_1 LIKE type_t.num5, 
   xccd005_1 LIKE type_t.num5, 
   xccd001 LIKE xccd_t.xccd001, 
   xccd001_desc LIKE type_t.chr80, 
   xccd003 LIKE xccd_t.xccd003, 
   xccd003_desc LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xccd_d        RECORD
       #sfaa068 LIKE xcce_t.xcce006,     #故意改的，为了能放下“小计-组织”的汉字  #160201-00004#1 
       sfaa068 LIKE type_t.chr500,     #160201-00004#1 增加了栏位长度
   sfaa068_desc LIKE type_t.chr500, 
   #xccd006 LIKE xccd_t.xccd006,   #160201-00004#1  mark
   xccd006 LIKE type_t.chr500,     #160201-00004#1 增加了栏位长度
   xccd007 LIKE xccd_t.xccd007,          #fengmy150303
   xccd007_desc LIKE type_t.chr500,      #fengmy150303
   xccd007_desc_desc LIKE type_t.chr500, #fengmy150303
   xccd008 LIKE xccd_t.xccd008,          #liuym150810
   xccd301 LIKE xccd_t.xccd301,          #151202-00029 by whitney add
   xcce007 LIKE xcce_t.xcce007, 
   xcce007_desc LIKE type_t.chr500, 
   xcce007_desc_1 LIKE type_t.chr500, 
   xcce008 LIKE xcce_t.xcce008, 
   xcce009 LIKE xcce_t.xcce009, 
   xcbb005 LIKE xcbb_t.xcbb005, 
   xcbb005_desc LIKE type_t.chr500, 
   xccd002 LIKE xccd_t.xccd002, 
   xcce101 LIKE xcce_t.xcce101, 
   xcce102 LIKE xcce_t.xcce102, 
   xcce201 LIKE xcce_t.xcce201, 
   xcce202 LIKE xcce_t.xcce202, 
   xcce301 LIKE xcce_t.xcce301, 
   xcce302 LIKE xcce_t.xcce302, 
   xcce303 LIKE xcce_t.xcce303, 
   xcce304 LIKE xcce_t.xcce304, 
   xcce307 LIKE xcce_t.xcce307, 
   xcce308 LIKE xcce_t.xcce308, 
   xcce901 LIKE xcce_t.xcce901, 
   xcce902 LIKE xcce_t.xcce902
       END RECORD

PRIVATE TYPE type_g_xccd2_d RECORD
       #sfaa068 LIKE xcce_t.xcce006,     #故意改的，为了能放下“小计-组织”的汉字  #160201-00004#1
       sfaa068 LIKE type_t.chr500,     #160201-00004#1 增加了栏位长度
   sfaa068_2_desc LIKE type_t.chr500, 
   #xcce006 LIKE xcce_t.xcce006,   #160201-00004#1 mark
   xcce006 LIKE type_t.chr500,     #160201-00004#1 增加了栏位长度
   xccd007 LIKE xccd_t.xccd007,            #fengmy150303
   xccd007_2_desc LIKE type_t.chr500,      #fengmy150303
   xccd007_2_desc_desc LIKE type_t.chr500, #fengmy150303
   xccd008 LIKE xccd_t.xccd008,             #liuym150810
   xccd301 LIKE xccd_t.xccd301,          #151202-00029 by whitney add
   xcce007 LIKE xcce_t.xcce007, 
   xcce007_2_desc LIKE type_t.chr500, 
   xcce007_2_desc_1 LIKE type_t.chr500, 
   xcce008 LIKE xcce_t.xcce008, 
   xcce009 LIKE xcce_t.xcce009, 
   xcbb005 LIKE xcbb_t.xcbb005, 
   xcbb005_2_desc LIKE type_t.chr500, 
   xcce002 LIKE xcce_t.xcce002, 
   xcce101 LIKE xcce_t.xcce101, 
   xcce102a LIKE type_t.num20_6, 
   xcce102b LIKE type_t.num20_6, 
   xcce102c LIKE type_t.num20_6, 
   xcce102d LIKE type_t.num20_6, 
   xcce102e LIKE type_t.num20_6, 
   xcce102f LIKE type_t.num20_6, 
   xcce102g LIKE type_t.num20_6, 
   xcce102h LIKE type_t.num20_6, 
   xcce102 LIKE type_t.num20_6, 
   xcce201 LIKE type_t.num20_6, 
   xcce202a LIKE type_t.num20_6, 
   xcce202b LIKE type_t.num20_6, 
   xcce202c LIKE type_t.num20_6, 
   xcce202d LIKE type_t.num20_6, 
   xcce202e LIKE type_t.num20_6, 
   xcce202f LIKE type_t.num20_6, 
   xcce202g LIKE type_t.num20_6, 
   xcce202h LIKE type_t.num20_6, 
   xcce202 LIKE type_t.num20_6, 
   xcce301 LIKE type_t.num20_6, 
   xcce302a LIKE type_t.num20_6, 
   xcce302b LIKE type_t.num20_6, 
   xcce302c LIKE type_t.num20_6, 
   xcce302d LIKE type_t.num20_6, 
   xcce302e LIKE type_t.num20_6, 
   xcce302f LIKE type_t.num20_6, 
   xcce302g LIKE type_t.num20_6, 
   xcce302h LIKE type_t.num20_6, 
   xcce302 LIKE type_t.num20_6, 
   xcce303 LIKE type_t.num20_6, 
   xcce304a LIKE type_t.num20_6, 
   xcce304b LIKE type_t.num20_6, 
   xcce304c LIKE type_t.num20_6, 
   xcce304d LIKE type_t.num20_6, 
   xcce304e LIKE type_t.num20_6, 
   xcce304f LIKE type_t.num20_6, 
   xcce304g LIKE type_t.num20_6, 
   xcce304h LIKE type_t.num20_6, 
   xcce304 LIKE type_t.num20_6, 
   xcce307 LIKE type_t.num20_6, 
   xcce308a LIKE type_t.num20_6, 
   xcce308b LIKE type_t.num20_6, 
   xcce308c LIKE type_t.num20_6, 
   xcce308d LIKE type_t.num20_6, 
   xcce308e LIKE type_t.num20_6, 
   xcce308f LIKE type_t.num20_6, 
   xcce308g LIKE type_t.num20_6, 
   xcce308h LIKE type_t.num20_6, 
   xcce308 LIKE type_t.num20_6, 
   xcce901 LIKE type_t.num20_6, 
   xcce902a LIKE type_t.num20_6, 
   xcce902b LIKE type_t.num20_6, 
   xcce902c LIKE type_t.num20_6, 
   xcce902d LIKE type_t.num20_6, 
   xcce902e LIKE type_t.num20_6, 
   xcce902f LIKE type_t.num20_6, 
   xcce902g LIKE type_t.num20_6, 
   xcce902h LIKE type_t.num20_6, 
   xcce902 LIKE type_t.num20_6
       END RECORD
PRIVATE TYPE type_g_xccd3_d RECORD
       #sfaa068 LIKE xcce_t.xcce006,     #故意改的，为了能放下“小计-组织”的汉字 #160201-00004#1 mark
       sfaa068 LIKE type_t.chr500,     #160201-00004#1 增加了栏位长度
   sfaa068_3_desc LIKE type_t.chr500, 
   #xcci006 LIKE xcci_t.xcci006,   #160201-00004#1 mark
   xcci006 LIKE type_t.chr500,     #160201-00004#1 增加了栏位长度
   xcch007 LIKE xccd_t.xccd007,          #fengmy150303
   xcch007_desc LIKE type_t.chr500,      #fengmy150303
   xcch007_desc_desc LIKE type_t.chr500, #fengmy150303
   xcch008 LIKE xccd_t.xccd008,          #liuym150810
   xcch301 LIKE xccd_t.xccd301,          #151202-00029 by whitney add
   xcci007 LIKE xcci_t.xcci007, 
   xcci007_desc LIKE type_t.chr500, 
   xcci007_desc_1 LIKE type_t.chr500, 
   xcci008 LIKE xcci_t.xcci008, 
   xcci009 LIKE xcci_t.xcci009, 
   xcbb005 LIKE xcbb_t.xcbb005, 
   xcbb005_3_desc LIKE type_t.chr500, 
   xcci002 LIKE xcci_t.xcci002, 
   xcci101 LIKE xcci_t.xcci101, 
   xcci102a LIKE type_t.num20_6, 
   xcci102b LIKE type_t.num20_6, 
   xcci102c LIKE type_t.num20_6, 
   xcci102d LIKE type_t.num20_6, 
   xcci102e LIKE type_t.num20_6, 
   xcci102f LIKE type_t.num20_6, 
   xcci102g LIKE type_t.num20_6, 
   xcci102h LIKE type_t.num20_6, 
   xcci102 LIKE type_t.num20_6, 
   xcci201 LIKE type_t.num20_6, 
   xcci202a LIKE type_t.num20_6, 
   xcci202b LIKE type_t.num20_6, 
   xcci202c LIKE type_t.num20_6, 
   xcci202d LIKE type_t.num20_6, 
   xcci202e LIKE type_t.num20_6, 
   xcci202f LIKE type_t.num20_6, 
   xcci202g LIKE type_t.num20_6, 
   xcci202h LIKE type_t.num20_6, 
   xcci202 LIKE type_t.num20_6, 
   xcci301 LIKE type_t.num20_6, 
   xcci302a LIKE type_t.num20_6, 
   xcci302b LIKE type_t.num20_6, 
   xcci302c LIKE type_t.num20_6, 
   xcci302d LIKE type_t.num20_6, 
   xcci302e LIKE type_t.num20_6, 
   xcci302f LIKE type_t.num20_6, 
   xcci302g LIKE type_t.num20_6, 
   xcci302h LIKE type_t.num20_6, 
   xcci302 LIKE type_t.num20_6, 
   xcci303 LIKE type_t.num20_6, 
   xcci304a LIKE type_t.num20_6, 
   xcci304b LIKE type_t.num20_6, 
   xcci304c LIKE type_t.num20_6, 
   xcci304d LIKE type_t.num20_6, 
   xcci304e LIKE type_t.num20_6, 
   xcci304f LIKE type_t.num20_6, 
   xcci304g LIKE type_t.num20_6, 
   xcci304h LIKE type_t.num20_6, 
   xcci304 LIKE type_t.num20_6,  
   xcci901 LIKE type_t.num20_6, 
   xcci902a LIKE type_t.num20_6, 
   xcci902b LIKE type_t.num20_6, 
   xcci902c LIKE type_t.num20_6, 
   xcci902d LIKE type_t.num20_6, 
   xcci902e LIKE type_t.num20_6, 
   xcci902f LIKE type_t.num20_6, 
   xcci902g LIKE type_t.num20_6, 
   xcci902h LIKE type_t.num20_6, 
   xcci902 LIKE type_t.num20_6
       END RECORD

 
#模組變數(Module Variables)
DEFINE g_xccd_m          type_g_xccd_m
DEFINE g_xccd_m_t        type_g_xccd_m
DEFINE g_xccd_m_o        type_g_xccd_m
 
   DEFINE g_xccdld_t LIKE xccd_t.xccdld
DEFINE g_xccd004_t LIKE xccd_t.xccd004
DEFINE g_xccd005_t LIKE xccd_t.xccd005
DEFINE g_xccd001_t LIKE xccd_t.xccd001
DEFINE g_xccd003_t LIKE xccd_t.xccd003
 
 
DEFINE g_xccd_d          DYNAMIC ARRAY OF type_g_xccd_d
DEFINE g_xccd_d_t        type_g_xccd_d
DEFINE g_xccd_d_o        type_g_xccd_d
DEFINE g_xccd2_d   DYNAMIC ARRAY OF type_g_xccd2_d
DEFINE g_xccd2_d_t type_g_xccd2_d
DEFINE g_xccd2_d_o type_g_xccd2_d
DEFINE g_xccd3_d   DYNAMIC ARRAY OF type_g_xccd3_d
DEFINE g_xccd3_d_t type_g_xccd3_d
DEFINE g_xccd3_d_o type_g_xccd3_d

DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_xccdld LIKE xccd_t.xccdld,
      b_xccd001 LIKE xccd_t.xccd001,
      b_xccd003 LIKE xccd_t.xccd003,
      b_xccd004 LIKE xccd_t.xccd004,
      b_xccd005 LIKE xccd_t.xccd005
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
       b_statepic     LIKE type_t.chr50,
          b_xccdld LIKE xccd_t.xccdld,
      b_xccd001 LIKE xccd_t.xccd001,
      b_xccd003 LIKE xccd_t.xccd003,
      b_xccd004 LIKE xccd_t.xccd004,
      b_xccd005 LIKE xccd_t.xccd005
      END RECORD 
      
#DEFINE g_detail_multi_table_t    RECORD
#      sfaadocno LIKE sfaa_t.sfaadocno,
#      sfaa068 LIKE sfaa_t.sfaa068,
#      xcceld LIKE xcce_t.xcceld,
#      xcce001 LIKE xcce_t.xcce001,
#      xcce002 LIKE xcce_t.xcce002,
#      xcce003 LIKE xcce_t.xcce003,
#      xcce004 LIKE xcce_t.xcce004,
#      xcce005 LIKE xcce_t.xcce005,
#      xcce006 LIKE xcce_t.xcce006,
#      xcce007 LIKE xcce_t.xcce007,
#      xcce008 LIKE xcce_t.xcce008,
#      xcce009 LIKE xcce_t.xcce009,
#      xcce007 LIKE xcce_t.xcce007,
#      xcce008 LIKE xcce_t.xcce008,
#      xcce009 LIKE xcce_t.xcce009,
#      xcce101 LIKE xcce_t.xcce101,
#      xcce102 LIKE xcce_t.xcce102,
#      xcce201 LIKE xcce_t.xcce201,
#      xcce202 LIKE xcce_t.xcce202,
#      xcce301 LIKE xcce_t.xcce301,
#      xcce302 LIKE xcce_t.xcce302,
#      xcce303 LIKE xcce_t.xcce303,
#      xcce304 LIKE xcce_t.xcce304,
#      xcce307 LIKE xcce_t.xcce307,
#      xcce308 LIKE xcce_t.xcce308,
#      xcce901 LIKE xcce_t.xcce901,
#      xcce902 LIKE xcce_t.xcce902,
#      xcbbcomp LIKE xcbb_t.xcbbcomp,
#      xcbb001 LIKE xcbb_t.xcbb001,
#      xcbb002 LIKE xcbb_t.xcbb002,
#      xcbb003 LIKE xcbb_t.xcbb003,
#      xcbb004 LIKE xcbb_t.xcbb004,
#      xcbb005 LIKE xcbb_t.xcbb005
#      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="axcq540.main" >}
#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT xccdcomp,'',xccdld,'',xccd004,xccd005,xccd001,'',xccd003,''", 
                      " FROM xccd_t",
                      " WHERE xccdent= ? AND xccdld=? AND xccd001=? AND xccd003=? AND xccd004=? AND  
                          xccd005=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axcq540_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.xccdcomp,t0.xccdld,t0.xccd004,t0.xccd005,t0.xccd001,t0.xccd003,t1.ooefl003 , 
       t2.glaal002 ,t3.xcatl003",
               " FROM xccd_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.xccdcomp AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN glaal_t t2 ON t2.glaalent='"||g_enterprise||"' AND t2.glaalld=t0.xccdld AND t2.glaal001='"||g_dlang||"' ",
               " LEFT JOIN xcatl_t t3 ON t3.xcatlent='"||g_enterprise||"' AND t3.xcatl001=t0.xccd003 AND t3.xcatl002='"||g_dlang||"' ",
 
               " WHERE t0.xccdent = '" ||g_enterprise|| "' AND t0.xccdld = ? AND t0.xccd001 = ? AND t0.xccd003 = ? AND t0.xccd004 = ? AND t0.xccd005 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axcq540_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axcq540 WITH FORM cl_ap_formpath("axc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axcq540_init()   
 
      #進入選單 Menu (="N")
      CALL axcq540_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axcq540
      
   END IF 
   
   CLOSE axcq540_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 

{</section>}

{<section id="axcq540.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axcq540_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
   
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL axcq540_default_search()
    
END FUNCTION

{</section>}

{<section id="axcq540.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axcq540_ui_dialog()
   DEFINE li_idx    LIKE type_t.num10
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
{<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
{<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      #先填充browser資料
      CALL axcq540_browser_fill("")
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
 
 
               
      
         
        
         DISPLAY ARRAY g_xccd_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axcq540_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
{<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL axcq540_idx_chk()
               #add-point:page1自定義行為
{<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
{<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_xccd2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axcq540_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
{<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL axcq540_idx_chk()
               #add-point:page2自定義行為
{<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
{<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xccd3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axcq540_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               
               #add-point:page3, before row動作
{<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL axcq540_idx_chk()
               #add-point:page3自定義行為
{<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
{<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         
 
         
         #add-point:ui_dialog段自定義display array
{<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axcq540_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axcq540_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 4
            CALL axcq540_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
{<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
 
    
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axcq540_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axcq540_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CLEAR FORM
               ELSE
                  CALL axcq540_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            CALL axcq540_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq540_idx_chk()
            
         ON ACTION previous
            CALL axcq540_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq540_idx_chk()
            
         ON ACTION jump
            CALL axcq540_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq540_idx_chk()
            
         ON ACTION next
            CALL axcq540_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq540_idx_chk()
            
         ON ACTION last
            CALL axcq540_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq540_idx_chk()
            
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xccd_d)
                  LET g_export_node[2] = base.typeInfo.create(g_xccd2_d)
                  LET g_export_node[3] = base.typeInfo.create(g_xccd3_d)
 
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
       
         #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
{<point name="menu.output" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axcq540_query()
               #add-point:ON ACTION query
{<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL axcq540_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
{<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axcq540_set_pk_array()
            #add-point:ON ACTION agendum
{<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axcq540_set_pk_array()
            #add-point:ON ACTION followup
{<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
{<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION

{</section>}

{<section id="axcq540.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axcq540_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
{<point name="browser_fill.define"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
{<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "xccdld,xccd001,xccd003,xccd004,xccd005"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
{<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xccdld,xccd001,xccd003,xccd004,xccd005 ",
                      " FROM xccd_t ",
                      " LEFT JOIN sfaa_t ON sfaaent = '"||g_enterprise||"' AND xccdld = sfaadocno ",
                      " WHERE xccdent = '" ||g_enterprise|| "' AND xccdent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xccd_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xccdld,xccd001,xccd003,xccd004,xccd005 ",
                      " FROM xccd_t ", 
                      "  ",
                      "  ",
                      " WHERE xccdent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xccd_t")
   END IF
   
   #add-point:browser_fill,cnt wc
{<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
{<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   IF g_browser_cnt > g_max_rec THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_rec
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   #CASE g_state
   #   WHEN "insert"
   #      LET l_wc  = g_add_browse
   #      LET l_wc2 = " 1=1" 
   #      LET g_cnt = g_browser.getLength() + 1
   #   WHEN "modify"
   #      LET l_wc  = g_add_browse
   #      LET l_wc2 = " 1=1" 
   #      LET g_cnt = g_current_idx
   #   OTHERWISE
   #      #清除畫面
   #      CLEAR FORM                
   #      INITIALIZE g_xccd_m.* TO NULL
   #      CALL g_xccd_d.clear()        
   #      CALL g_xccd2_d.clear() 
   #      CALL g_xccd3_d.clear() 
 
   #      CALL g_browser.clear()
   #      LET g_cnt = 1
   #END CASE
   
   IF NOT cl_null(g_state) THEN   #2015/10/16 by stellar add:查詢時，g_add_browse會是null
      IF cl_null(g_add_browse) THEN
         #清除畫面
         CLEAR FORM                
         INITIALIZE g_xccd_m.* TO NULL
         CALL g_xccd_d.clear()        
         CALL g_xccd2_d.clear() 
         CALL g_xccd3_d.clear() 
    
         CALL g_browser.clear()
         LET g_cnt = 1
      ELSE
         LET l_wc  = g_add_browse
         LET l_wc2 = " 1=1" 
         LET g_cnt = g_current_idx
         LET g_add_browse = ""
      END IF
   #2015/10/16 by stellar add ----- (S)
   ELSE
      LET g_cnt = 1
   END IF  
   #2015/10/16 by stellar add ----- (E)
 
   #依照t0.xccdld,t0.xccd001,t0.xccd003,t0.xccd004,t0.xccd005 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT '',t0.xccdld,t0.xccd001,t0.xccd003,t0.xccd004,t0.xccd005 ",
               " FROM xccd_t t0",
               "  LEFT JOIN sfaa_t ON sfaaent = '"||g_enterprise||"' AND xccdld = sfaadocno ",               
               " WHERE t0.xccdent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xccd_t")
   #add-point:browser_fill,sql wc
{<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
{<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"xccd_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
{<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xccdld,g_browser[g_cnt].b_xccd001, 
       g_browser[g_cnt].b_xccd003,g_browser[g_cnt].b_xccd004,g_browser[g_cnt].b_xccd005
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
{<point name="browser_fill.reference"/>}
      #end add-point
  
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF cl_null(g_browser[g_cnt].b_xccdld) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
    
   
   #清空填充狀態
   LET g_state = ""
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
   DISPLAY g_current_idx TO FORMONLY.b_index   #當下筆數的顯示
   DISPLAY g_current_idx TO FORMONLY.h_index   #當下筆數的顯示
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
   #add-point:browser_fill段結束前
{<point name="browser_fill.after"/>}
   #end add-point   
   
END FUNCTION

{</section>}

{<section id="axcq540.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axcq540_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_xccd_m.xccdld = g_browser[g_current_idx].b_xccdld   
   LET g_xccd_m.xccd001 = g_browser[g_current_idx].b_xccd001   
   LET g_xccd_m.xccd003 = g_browser[g_current_idx].b_xccd003   
   LET g_xccd_m.xccd004 = g_browser[g_current_idx].b_xccd004   
   LET g_xccd_m.xccd005 = g_browser[g_current_idx].b_xccd005   
 
   EXECUTE axcq540_master_referesh USING g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd004, 
       g_xccd_m.xccd005 INTO g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd001, 
       g_xccd_m.xccd003,g_xccd_m.xccdcomp_desc,g_xccd_m.xccdld_desc,g_xccd_m.xccd003_desc
   CALL axcq540_show()
   
END FUNCTION

{</section>}

{<section id="axcq540.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axcq540_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="axcq540.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axcq540_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xccdld = g_xccd_m.xccdld 
         AND g_browser[l_i].b_xccd001 = g_xccd_m.xccd001 
         AND g_browser[l_i].b_xccd003 = g_xccd_m.xccd003 
         AND g_browser[l_i].b_xccd004 = g_xccd_m.xccd004 
         AND g_browser[l_i].b_xccd005 = g_xccd_m.xccd005 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser.getLength()
   #IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
   #   LET g_current_row = g_browser_cnt
   #END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION

{</section>}

{<section id="axcq540.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axcq540_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
{<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xccd_m.* TO NULL
   CALL g_xccd_d.clear()        
   CALL g_xccd2_d.clear() 
   CALL g_xccd3_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
{<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xccdcomp,xccdld,xccd001,xccd003
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
{<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.xccdcomp
         ON ACTION controlp INFIELD xccdcomp
            #add-point:ON ACTION controlp INFIELD xccdcomp
{<point name="construct.c.xccdcomp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccdcomp
            #add-point:BEFORE FIELD xccdcomp
{<point name="construct.b.xccdcomp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccdcomp
            
            #add-point:AFTER FIELD xccdcomp
{<point name="construct.a.xccdcomp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccdld
         ON ACTION controlp INFIELD xccdld
            #add-point:ON ACTION controlp INFIELD xccdld
{<point name="construct.c.xccdld" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccdld
            #add-point:BEFORE FIELD xccdld
{<point name="construct.b.xccdld" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccdld
            
            #add-point:AFTER FIELD xccdld
{<point name="construct.a.xccdld" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccd004
            #add-point:BEFORE FIELD xccd004
{<point name="construct.b.xccd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccd004
            
            #add-point:AFTER FIELD xccd004
{<point name="construct.a.xccd004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccd004
         ON ACTION controlp INFIELD xccd004
            #add-point:ON ACTION controlp INFIELD xccd004
{<point name="construct.c.xccd004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccd005
            #add-point:BEFORE FIELD xccd005
{<point name="construct.b.xccd005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccd005
            
            #add-point:AFTER FIELD xccd005
{<point name="construct.a.xccd005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccd005
         ON ACTION controlp INFIELD xccd005
            #add-point:ON ACTION controlp INFIELD xccd005
{<point name="construct.c.xccd005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccd001
            #add-point:BEFORE FIELD xccd001
{<point name="construct.b.xccd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccd001
            
            #add-point:AFTER FIELD xccd001
{<point name="construct.a.xccd001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccd001
         ON ACTION controlp INFIELD xccd001
            #add-point:ON ACTION controlp INFIELD xccd001
{<point name="construct.c.xccd001" />}
            #END add-point
 
         #此段落由子樣板a01產生
{<point name="construct.b.xccd001_desc" />}
            #END add-point
 

            

{<point name="construct.a.xccd001_desc" />}

{<point name="construct.c.xccd001_desc" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccd003
            #add-point:BEFORE FIELD xccd003
{<point name="construct.b.xccd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccd003
            
            #add-point:AFTER FIELD xccd003
{<point name="construct.a.xccd003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccd003
         ON ACTION controlp INFIELD xccd003
            #add-point:ON ACTION controlp INFIELD xccd003
{<point name="construct.c.xccd003" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
#fengmy150215----begin  带出栏位不放开查询

#      CONSTRUCT g_wc2_table1 ON xccd006,xcce007,xcce008,xcce009,xccd002,xcce101,xcce102, 
#          xcce201,xcce202,xcce301,xcce302,xcce303,xcce304,xcce307,xcce308,xcce901,xcce902
#           FROM s_detail1[1].xccd006,s_detail1[1].xcce007,s_detail1[1].xcce008, 
#               s_detail1[1].xcce009,s_detail1[1].xccd002,s_detail1[1].xcce101,s_detail1[1].xcce102, 
#               s_detail1[1].xcce201,s_detail1[1].xcce202,s_detail1[1].xcce301,s_detail1[1].xcce302,s_detail1[1].xcce303, 
#               s_detail1[1].xcce304,s_detail1[1].xcce307,s_detail1[1].xcce308,s_detail1[1].xcce901,s_detail1[1].xcce902 
       CONSTRUCT g_wc2_table1 ON sfaa068,xccd006,xcce007,xcce008,xcce009,xcbb005,xccd002,xcce101,xcce102, 
           xcce201,xcce202,xcce301,xcce302,xcce303,xcce304,xcce307,xcce308,xcce901,xcce902
            FROM s_detail1[1].sfaa068,s_detail1[1].xccd006,s_detail1[1].xcce007,s_detail1[1].xcce008, 
                s_detail1[1].xcce009,s_detail1[1].xcbb005,s_detail1[1].xccd002,s_detail1[1].xcce101,s_detail1[1].xcce102, 
                s_detail1[1].xcce201,s_detail1[1].xcce202,s_detail1[1].xcce301,s_detail1[1].xcce302,s_detail1[1].xcce303, 
                s_detail1[1].xcce304,s_detail1[1].xcce307,s_detail1[1].xcce308,s_detail1[1].xcce901,s_detail1[1].xcce902
#fengmy150215----end
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
{<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #此段落由子樣板a01產生
         BEFORE FIELD sfaa068
            #add-point:BEFORE FIELD sfaa068
{<point name="construct.b.page1.sfaa068" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa068
            
            #add-point:AFTER FIELD sfaa068
{<point name="construct.a.page1.sfaa068" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.sfaa068
         ON ACTION controlp INFIELD sfaa068
            #add-point:ON ACTION controlp INFIELD sfaa068
{<point name="construct.c.page1.sfaa068" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccd006
            #add-point:BEFORE FIELD xccd006
{<point name="construct.b.page1.xccd006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccd006
            
            #add-point:AFTER FIELD xccd006
{<point name="construct.a.page1.xccd006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccd006
         ON ACTION controlp INFIELD xccd006
            #add-point:ON ACTION controlp INFIELD xccd006
{<point name="construct.c.page1.xccd006" />}
            #END add-point
 
         ON ACTION controlp INFIELD xccd007
            #add-point:ON ACTION controlp INFIELD xccd006
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xccd007()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xccd007  #顯示到畫面上
            NEXT FIELD xccd007                     #返回原欄位
            
         #此段落由子樣板a01產生
         BEFORE FIELD xcce007
            #add-point:BEFORE FIELD xcce007
{<point name="construct.b.page1.xcce007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce007
            
            #add-point:AFTER FIELD xcce007
{<point name="construct.a.page1.xcce007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce007
         ON ACTION controlp INFIELD xcce007
            #add-point:ON ACTION controlp INFIELD xcce007
{<point name="construct.c.page1.xcce007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce008
            #add-point:BEFORE FIELD xcce008
{<point name="construct.b.page1.xcce008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce008
            
            #add-point:AFTER FIELD xcce008
{<point name="construct.a.page1.xcce008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce008
         ON ACTION controlp INFIELD xcce008
            #add-point:ON ACTION controlp INFIELD xcce008
{<point name="construct.c.page1.xcce008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce009
            #add-point:BEFORE FIELD xcce009
{<point name="construct.b.page1.xcce009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce009
            
            #add-point:AFTER FIELD xcce009
{<point name="construct.a.page1.xcce009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce009
         ON ACTION controlp INFIELD xcce009
            #add-point:ON ACTION controlp INFIELD xcce009
{<point name="construct.c.page1.xcce009" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xcbb005
         ON ACTION controlp INFIELD xcbb005
            #add-point:ON ACTION controlp INFIELD xcbb005
{<point name="construct.c.page1.xcbb005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcbb005
            #add-point:BEFORE FIELD xcbb005
{<point name="construct.b.page1.xcbb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcbb005
            
            #add-point:AFTER FIELD xcbb005
{<point name="construct.a.page1.xcbb005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccd002
            #add-point:BEFORE FIELD xccd002
{<point name="construct.b.page1.xccd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccd002
            
            #add-point:AFTER FIELD xccd002
{<point name="construct.a.page1.xccd002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccd002
         ON ACTION controlp INFIELD xccd002
            #add-point:ON ACTION controlp INFIELD xccd002
{<point name="construct.c.page1.xccd002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce101
            #add-point:BEFORE FIELD xcce101
{<point name="construct.b.page1.xcce101" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce101
            
            #add-point:AFTER FIELD xcce101
{<point name="construct.a.page1.xcce101" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce101
         ON ACTION controlp INFIELD xcce101
            #add-point:ON ACTION controlp INFIELD xcce101
{<point name="construct.c.page1.xcce101" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce102
            #add-point:BEFORE FIELD xcce102
{<point name="construct.b.page1.xcce102" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce102
            
            #add-point:AFTER FIELD xcce102
{<point name="construct.a.page1.xcce102" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce102
         ON ACTION controlp INFIELD xcce102
            #add-point:ON ACTION controlp INFIELD xcce102
{<point name="construct.c.page1.xcce102" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce201
            #add-point:BEFORE FIELD xcce201
{<point name="construct.b.page1.xcce201" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce201
            
            #add-point:AFTER FIELD xcce201
{<point name="construct.a.page1.xcce201" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce201
         ON ACTION controlp INFIELD xcce201
            #add-point:ON ACTION controlp INFIELD xcce201
{<point name="construct.c.page1.xcce201" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce202
            #add-point:BEFORE FIELD xcce202
{<point name="construct.b.page1.xcce202" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce202
            
            #add-point:AFTER FIELD xcce202
{<point name="construct.a.page1.xcce202" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce202
         ON ACTION controlp INFIELD xcce202
            #add-point:ON ACTION controlp INFIELD xcce202
{<point name="construct.c.page1.xcce202" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce301
            #add-point:BEFORE FIELD xcce301
{<point name="construct.b.page1.xcce301" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce301
            
            #add-point:AFTER FIELD xcce301
{<point name="construct.a.page1.xcce301" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce301
         ON ACTION controlp INFIELD xcce301
            #add-point:ON ACTION controlp INFIELD xcce301
{<point name="construct.c.page1.xcce301" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce302
            #add-point:BEFORE FIELD xcce302
{<point name="construct.b.page1.xcce302" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce302
            
            #add-point:AFTER FIELD xcce302
{<point name="construct.a.page1.xcce302" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce302
         ON ACTION controlp INFIELD xcce302
            #add-point:ON ACTION controlp INFIELD xcce302
{<point name="construct.c.page1.xcce302" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce303
            #add-point:BEFORE FIELD xcce303
{<point name="construct.b.page1.xcce303" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce303
            
            #add-point:AFTER FIELD xcce303
{<point name="construct.a.page1.xcce303" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce303
         ON ACTION controlp INFIELD xcce303
            #add-point:ON ACTION controlp INFIELD xcce303
{<point name="construct.c.page1.xcce303" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce304
            #add-point:BEFORE FIELD xcce304
{<point name="construct.b.page1.xcce304" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce304
            
            #add-point:AFTER FIELD xcce304
{<point name="construct.a.page1.xcce304" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce304
         ON ACTION controlp INFIELD xcce304
            #add-point:ON ACTION controlp INFIELD xcce304
{<point name="construct.c.page1.xcce304" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce307
            #add-point:BEFORE FIELD xcce307
{<point name="construct.b.page1.xcce307" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce307
            
            #add-point:AFTER FIELD xcce307
{<point name="construct.a.page1.xcce307" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce307
         ON ACTION controlp INFIELD xcce307
            #add-point:ON ACTION controlp INFIELD xcce307
{<point name="construct.c.page1.xcce307" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce308
            #add-point:BEFORE FIELD xcce308
{<point name="construct.b.page1.xcce308" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce308
            
            #add-point:AFTER FIELD xcce308
{<point name="construct.a.page1.xcce308" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce308
         ON ACTION controlp INFIELD xcce308
            #add-point:ON ACTION controlp INFIELD xcce308
{<point name="construct.c.page1.xcce308" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce901
            #add-point:BEFORE FIELD xcce901
{<point name="construct.b.page1.xcce901" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce901
            
            #add-point:AFTER FIELD xcce901
{<point name="construct.a.page1.xcce901" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce901
         ON ACTION controlp INFIELD xcce901
            #add-point:ON ACTION controlp INFIELD xcce901
{<point name="construct.c.page1.xcce901" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce902
            #add-point:BEFORE FIELD xcce902
{<point name="construct.b.page1.xcce902" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce902
            
            #add-point:AFTER FIELD xcce902
{<point name="construct.a.page1.xcce902" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce902
         ON ACTION controlp INFIELD xcce902
            #add-point:ON ACTION controlp INFIELD xcce902
{<point name="construct.c.page1.xcce902" />}
            #END add-point
 
   
       
      END CONSTRUCT
  
      CONSTRUCT g_wc2_table2 ON xcce102a,xcce102b,xcce102c,xcce102d,xcce102e,xcce102f,xcce102g,xcce102h, 
          xcce201,xcce202a,xcce202b,xcce202c,xcce202d,xcce202e,xcce202f,xcce202g,xcce202h,xcce301,xcce302a, 
          xcce302b,xcce302c,xcce302d,xcce302e,xcce302f,xcce302g,xcce302h,xcce303,xcce304a,xcce304b,xcce304c, 
          xcce304d,xcce304e,xcce304f,xcce304g,xcce304h,xcce307,xcce308a,xcce308b,xcce308c,xcce308d,xcce308e, 
          xcce308f,xcce308g,xcce308h,xcce901,xcce902a,xcce902b,xcce902c,xcce902d,xcce902e,xcce902f,xcce902g, 
          xcce902h
          ,xcce006,xcce007,xcce008,xcce009,xcce002,xcce101,sfaa068     #fengmy150303
           FROM s_detail2[1].xcce102a,s_detail2[1].xcce102b,s_detail2[1].xcce102c,s_detail2[1].xcce102d, 
               s_detail2[1].xcce102e,s_detail2[1].xcce102f,s_detail2[1].xcce102g,s_detail2[1].xcce102h, 
               s_detail2[1].xcce201,s_detail2[1].xcce202a,s_detail2[1].xcce202b,s_detail2[1].xcce202c, 
               s_detail2[1].xcce202d,s_detail2[1].xcce202e,s_detail2[1].xcce202f,s_detail2[1].xcce202g, 
               s_detail2[1].xcce202h,s_detail2[1].xcce301,s_detail2[1].xcce302a,s_detail2[1].xcce302b, 
               s_detail2[1].xcce302c,s_detail2[1].xcce302d,s_detail2[1].xcce302e,s_detail2[1].xcce302f, 
               s_detail2[1].xcce302g,s_detail2[1].xcce302h,s_detail2[1].xcce303,s_detail2[1].xcce304a, 
               s_detail2[1].xcce304b,s_detail2[1].xcce304c,s_detail2[1].xcce304d,s_detail2[1].xcce304e, 
               s_detail2[1].xcce304f,s_detail2[1].xcce304g,s_detail2[1].xcce304h,s_detail2[1].xcce307, 
               s_detail2[1].xcce308a,s_detail2[1].xcce308b,s_detail2[1].xcce308c,s_detail2[1].xcce308d, 
               s_detail2[1].xcce308e,s_detail2[1].xcce308f,s_detail2[1].xcce308g,s_detail2[1].xcce308h, 
               s_detail2[1].xcce901,s_detail2[1].xcce902a,s_detail2[1].xcce902b,s_detail2[1].xcce902c, 
               s_detail2[1].xcce902d,s_detail2[1].xcce902e,s_detail2[1].xcce902f,s_detail2[1].xcce902g, 
               s_detail2[1].xcce902h
               ,s_detail2[1].xcce006_2,s_detail2[1].xcce007_2,s_detail2[1].xcce008_2,s_detail2[1].xcce009_2,  #fengmy150303 
               s_detail2[1].xcce002_2,s_detail2[1].xcce101_2,s_detail2[1].sfaa068_2 #fengmy150303 
                
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
{<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
        ON ACTION controlp INFIELD sfaa068_2
            #add-point:ON ACTION controlp INFIELD sfaa068
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = cl_get_today()
            CALL q_ooeg001_8()                        #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfaa068_2  #顯示到畫面上
            NEXT FIELD sfaa068_2                     #返回原欄位  
            
         ON ACTION controlp INFIELD xcce007_2
            #add-point:ON ACTION controlp INFIELD xcce007
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xcce007()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcce007_2  #顯示到畫面上
            NEXT FIELD xcce007_2                     #返回原欄位
            #END add-point
            
        ON ACTION controlp INFIELD xcce008_2
            #add-point:ON ACTION controlp INFIELD xcce008
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xcce007()                           #呼叫開窗
            DISPLAY g_qryparam.return2 TO xcce008_2  #顯示到畫面上
            NEXT FIELD xcce008_2                     #返回原欄位
            #END add-point
            
            
        ON ACTION controlp INFIELD xcce009_2
            #add-point:ON ACTION controlp INFIELD xcce009
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xcce007()                           #呼叫開窗
            DISPLAY g_qryparam.return3 TO xcce009_2  #顯示到畫面上
            NEXT FIELD xcce009_2                     #返回原欄位
            #END add-point       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD xcce102a
            #add-point:BEFORE FIELD xcce102a
{<point name="construct.b.page2.xcce102a" />}
            #END add-point
         ON ACTION controlp INFIELD xcce006_2
            #add-point:ON ACTION controlp INFIELD xccd006
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xccd006()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xcce006_2  #顯示到畫面上
            NEXT FIELD xcce006_2
         #此段落由子樣板a02產生
         AFTER FIELD xcce102a
            
            #add-point:AFTER FIELD xcce102a
{<point name="construct.a.page2.xcce102a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce102a
         ON ACTION controlp INFIELD xcce102a
            #add-point:ON ACTION controlp INFIELD xcce102a
{<point name="construct.c.page2.xcce102a" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce102b
            #add-point:BEFORE FIELD xcce102b
{<point name="construct.b.page2.xcce102b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce102b
            
            #add-point:AFTER FIELD xcce102b
{<point name="construct.a.page2.xcce102b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce102b
         ON ACTION controlp INFIELD xcce102b
            #add-point:ON ACTION controlp INFIELD xcce102b
{<point name="construct.c.page2.xcce102b" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce102c
            #add-point:BEFORE FIELD xcce102c
{<point name="construct.b.page2.xcce102c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce102c
            
            #add-point:AFTER FIELD xcce102c
{<point name="construct.a.page2.xcce102c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce102c
         ON ACTION controlp INFIELD xcce102c
            #add-point:ON ACTION controlp INFIELD xcce102c
{<point name="construct.c.page2.xcce102c" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce102d
            #add-point:BEFORE FIELD xcce102d
{<point name="construct.b.page2.xcce102d" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce102d
            
            #add-point:AFTER FIELD xcce102d
{<point name="construct.a.page2.xcce102d" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce102d
         ON ACTION controlp INFIELD xcce102d
            #add-point:ON ACTION controlp INFIELD xcce102d
{<point name="construct.c.page2.xcce102d" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce102e
            #add-point:BEFORE FIELD xcce102e
{<point name="construct.b.page2.xcce102e" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce102e
            
            #add-point:AFTER FIELD xcce102e
{<point name="construct.a.page2.xcce102e" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce102e
         ON ACTION controlp INFIELD xcce102e
            #add-point:ON ACTION controlp INFIELD xcce102e
{<point name="construct.c.page2.xcce102e" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce102f
            #add-point:BEFORE FIELD xcce102f
{<point name="construct.b.page2.xcce102f" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce102f
            
            #add-point:AFTER FIELD xcce102f
{<point name="construct.a.page2.xcce102f" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce102f
         ON ACTION controlp INFIELD xcce102f
            #add-point:ON ACTION controlp INFIELD xcce102f
{<point name="construct.c.page2.xcce102f" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce102g
            #add-point:BEFORE FIELD xcce102g
{<point name="construct.b.page2.xcce102g" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce102g
            
            #add-point:AFTER FIELD xcce102g
{<point name="construct.a.page2.xcce102g" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce102g
         ON ACTION controlp INFIELD xcce102g
            #add-point:ON ACTION controlp INFIELD xcce102g
{<point name="construct.c.page2.xcce102g" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce102h
            #add-point:BEFORE FIELD xcce102h
{<point name="construct.b.page2.xcce102h" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce102h
            
            #add-point:AFTER FIELD xcce102h
{<point name="construct.a.page2.xcce102h" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce102h
         ON ACTION controlp INFIELD xcce102h
            #add-point:ON ACTION controlp INFIELD xcce102h
{<point name="construct.c.page2.xcce102h" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce102
            #add-point:BEFORE FIELD xcce102
{<point name="construct.b.page2.xcce102" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce102
            
            #add-point:AFTER FIELD xcce102
{<point name="construct.a.page2.xcce102" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce102
         ON ACTION controlp INFIELD xcce102
            #add-point:ON ACTION controlp INFIELD xcce102
{<point name="construct.c.page2.xcce102" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce201
            #add-point:BEFORE FIELD xcce201
{<point name="construct.b.page2.xcce201" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce201
            
            #add-point:AFTER FIELD xcce201
{<point name="construct.a.page2.xcce201" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce201
         ON ACTION controlp INFIELD xcce201
            #add-point:ON ACTION controlp INFIELD xcce201
{<point name="construct.c.page2.xcce201" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce202a
            #add-point:BEFORE FIELD xcce202a
{<point name="construct.b.page2.xcce202a" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce202a
            
            #add-point:AFTER FIELD xcce202a
{<point name="construct.a.page2.xcce202a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce202a
         ON ACTION controlp INFIELD xcce202a
            #add-point:ON ACTION controlp INFIELD xcce202a
{<point name="construct.c.page2.xcce202a" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce202b
            #add-point:BEFORE FIELD xcce202b
{<point name="construct.b.page2.xcce202b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce202b
            
            #add-point:AFTER FIELD xcce202b
{<point name="construct.a.page2.xcce202b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce202b
         ON ACTION controlp INFIELD xcce202b
            #add-point:ON ACTION controlp INFIELD xcce202b
{<point name="construct.c.page2.xcce202b" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce202c
            #add-point:BEFORE FIELD xcce202c
{<point name="construct.b.page2.xcce202c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce202c
            
            #add-point:AFTER FIELD xcce202c
{<point name="construct.a.page2.xcce202c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce202c
         ON ACTION controlp INFIELD xcce202c
            #add-point:ON ACTION controlp INFIELD xcce202c
{<point name="construct.c.page2.xcce202c" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce202d
            #add-point:BEFORE FIELD xcce202d
{<point name="construct.b.page2.xcce202d" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce202d
            
            #add-point:AFTER FIELD xcce202d
{<point name="construct.a.page2.xcce202d" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce202d
         ON ACTION controlp INFIELD xcce202d
            #add-point:ON ACTION controlp INFIELD xcce202d
{<point name="construct.c.page2.xcce202d" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce202e
            #add-point:BEFORE FIELD xcce202e
{<point name="construct.b.page2.xcce202e" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce202e
            
            #add-point:AFTER FIELD xcce202e
{<point name="construct.a.page2.xcce202e" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce202e
         ON ACTION controlp INFIELD xcce202e
            #add-point:ON ACTION controlp INFIELD xcce202e
{<point name="construct.c.page2.xcce202e" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce202f
            #add-point:BEFORE FIELD xcce202f
{<point name="construct.b.page2.xcce202f" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce202f
            
            #add-point:AFTER FIELD xcce202f
{<point name="construct.a.page2.xcce202f" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce202f
         ON ACTION controlp INFIELD xcce202f
            #add-point:ON ACTION controlp INFIELD xcce202f
{<point name="construct.c.page2.xcce202f" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce202g
            #add-point:BEFORE FIELD xcce202g
{<point name="construct.b.page2.xcce202g" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce202g
            
            #add-point:AFTER FIELD xcce202g
{<point name="construct.a.page2.xcce202g" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce202g
         ON ACTION controlp INFIELD xcce202g
            #add-point:ON ACTION controlp INFIELD xcce202g
{<point name="construct.c.page2.xcce202g" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce202h
            #add-point:BEFORE FIELD xcce202h
{<point name="construct.b.page2.xcce202h" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce202h
            
            #add-point:AFTER FIELD xcce202h
{<point name="construct.a.page2.xcce202h" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce202h
         ON ACTION controlp INFIELD xcce202h
            #add-point:ON ACTION controlp INFIELD xcce202h
{<point name="construct.c.page2.xcce202h" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce202
            #add-point:BEFORE FIELD xcce202
{<point name="construct.b.page2.xcce202" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce202
            
            #add-point:AFTER FIELD xcce202
{<point name="construct.a.page2.xcce202" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce202
         ON ACTION controlp INFIELD xcce202
            #add-point:ON ACTION controlp INFIELD xcce202
{<point name="construct.c.page2.xcce202" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce301
            #add-point:BEFORE FIELD xcce301
{<point name="construct.b.page2.xcce301" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce301
            
            #add-point:AFTER FIELD xcce301
{<point name="construct.a.page2.xcce301" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce301
         ON ACTION controlp INFIELD xcce301
            #add-point:ON ACTION controlp INFIELD xcce301
{<point name="construct.c.page2.xcce301" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce302a
            #add-point:BEFORE FIELD xcce302a
{<point name="construct.b.page2.xcce302a" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce302a
            
            #add-point:AFTER FIELD xcce302a
{<point name="construct.a.page2.xcce302a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce302a
         ON ACTION controlp INFIELD xcce302a
            #add-point:ON ACTION controlp INFIELD xcce302a
{<point name="construct.c.page2.xcce302a" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce302b
            #add-point:BEFORE FIELD xcce302b
{<point name="construct.b.page2.xcce302b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce302b
            
            #add-point:AFTER FIELD xcce302b
{<point name="construct.a.page2.xcce302b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce302b
         ON ACTION controlp INFIELD xcce302b
            #add-point:ON ACTION controlp INFIELD xcce302b
{<point name="construct.c.page2.xcce302b" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce302c
            #add-point:BEFORE FIELD xcce302c
{<point name="construct.b.page2.xcce302c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce302c
            
            #add-point:AFTER FIELD xcce302c
{<point name="construct.a.page2.xcce302c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce302c
         ON ACTION controlp INFIELD xcce302c
            #add-point:ON ACTION controlp INFIELD xcce302c
{<point name="construct.c.page2.xcce302c" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce302d
            #add-point:BEFORE FIELD xcce302d
{<point name="construct.b.page2.xcce302d" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce302d
            
            #add-point:AFTER FIELD xcce302d
{<point name="construct.a.page2.xcce302d" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce302d
         ON ACTION controlp INFIELD xcce302d
            #add-point:ON ACTION controlp INFIELD xcce302d
{<point name="construct.c.page2.xcce302d" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce302e
            #add-point:BEFORE FIELD xcce302e
{<point name="construct.b.page2.xcce302e" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce302e
            
            #add-point:AFTER FIELD xcce302e
{<point name="construct.a.page2.xcce302e" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce302e
         ON ACTION controlp INFIELD xcce302e
            #add-point:ON ACTION controlp INFIELD xcce302e
{<point name="construct.c.page2.xcce302e" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce302f
            #add-point:BEFORE FIELD xcce302f
{<point name="construct.b.page2.xcce302f" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce302f
            
            #add-point:AFTER FIELD xcce302f
{<point name="construct.a.page2.xcce302f" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce302f
         ON ACTION controlp INFIELD xcce302f
            #add-point:ON ACTION controlp INFIELD xcce302f
{<point name="construct.c.page2.xcce302f" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce302g
            #add-point:BEFORE FIELD xcce302g
{<point name="construct.b.page2.xcce302g" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce302g
            
            #add-point:AFTER FIELD xcce302g
{<point name="construct.a.page2.xcce302g" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce302g
         ON ACTION controlp INFIELD xcce302g
            #add-point:ON ACTION controlp INFIELD xcce302g
{<point name="construct.c.page2.xcce302g" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce302h
            #add-point:BEFORE FIELD xcce302h
{<point name="construct.b.page2.xcce302h" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce302h
            
            #add-point:AFTER FIELD xcce302h
{<point name="construct.a.page2.xcce302h" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce302h
         ON ACTION controlp INFIELD xcce302h
            #add-point:ON ACTION controlp INFIELD xcce302h
{<point name="construct.c.page2.xcce302h" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce302
            #add-point:BEFORE FIELD xcce302
{<point name="construct.b.page2.xcce302" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce302
            
            #add-point:AFTER FIELD xcce302
{<point name="construct.a.page2.xcce302" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce302
         ON ACTION controlp INFIELD xcce302
            #add-point:ON ACTION controlp INFIELD xcce302
{<point name="construct.c.page2.xcce302" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce303
            #add-point:BEFORE FIELD xcce303
{<point name="construct.b.page2.xcce303" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce303
            
            #add-point:AFTER FIELD xcce303
{<point name="construct.a.page2.xcce303" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce303
         ON ACTION controlp INFIELD xcce303
            #add-point:ON ACTION controlp INFIELD xcce303
{<point name="construct.c.page2.xcce303" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce304a
            #add-point:BEFORE FIELD xcce304a
{<point name="construct.b.page2.xcce304a" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce304a
            
            #add-point:AFTER FIELD xcce304a
{<point name="construct.a.page2.xcce304a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce304a
         ON ACTION controlp INFIELD xcce304a
            #add-point:ON ACTION controlp INFIELD xcce304a
{<point name="construct.c.page2.xcce304a" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce304b
            #add-point:BEFORE FIELD xcce304b
{<point name="construct.b.page2.xcce304b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce304b
            
            #add-point:AFTER FIELD xcce304b
{<point name="construct.a.page2.xcce304b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce304b
         ON ACTION controlp INFIELD xcce304b
            #add-point:ON ACTION controlp INFIELD xcce304b
{<point name="construct.c.page2.xcce304b" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce304c
            #add-point:BEFORE FIELD xcce304c
{<point name="construct.b.page2.xcce304c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce304c
            
            #add-point:AFTER FIELD xcce304c
{<point name="construct.a.page2.xcce304c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce304c
         ON ACTION controlp INFIELD xcce304c
            #add-point:ON ACTION controlp INFIELD xcce304c
{<point name="construct.c.page2.xcce304c" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce304d
            #add-point:BEFORE FIELD xcce304d
{<point name="construct.b.page2.xcce304d" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce304d
            
            #add-point:AFTER FIELD xcce304d
{<point name="construct.a.page2.xcce304d" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce304d
         ON ACTION controlp INFIELD xcce304d
            #add-point:ON ACTION controlp INFIELD xcce304d
{<point name="construct.c.page2.xcce304d" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce304e
            #add-point:BEFORE FIELD xcce304e
{<point name="construct.b.page2.xcce304e" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce304e
            
            #add-point:AFTER FIELD xcce304e
{<point name="construct.a.page2.xcce304e" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce304e
         ON ACTION controlp INFIELD xcce304e
            #add-point:ON ACTION controlp INFIELD xcce304e
{<point name="construct.c.page2.xcce304e" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce304f
            #add-point:BEFORE FIELD xcce304f
{<point name="construct.b.page2.xcce304f" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce304f
            
            #add-point:AFTER FIELD xcce304f
{<point name="construct.a.page2.xcce304f" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce304f
         ON ACTION controlp INFIELD xcce304f
            #add-point:ON ACTION controlp INFIELD xcce304f
{<point name="construct.c.page2.xcce304f" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce304g
            #add-point:BEFORE FIELD xcce304g
{<point name="construct.b.page2.xcce304g" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce304g
            
            #add-point:AFTER FIELD xcce304g
{<point name="construct.a.page2.xcce304g" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce304g
         ON ACTION controlp INFIELD xcce304g
            #add-point:ON ACTION controlp INFIELD xcce304g
{<point name="construct.c.page2.xcce304g" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce304h
            #add-point:BEFORE FIELD xcce304h
{<point name="construct.b.page2.xcce304h" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce304h
            
            #add-point:AFTER FIELD xcce304h
{<point name="construct.a.page2.xcce304h" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce304h
         ON ACTION controlp INFIELD xcce304h
            #add-point:ON ACTION controlp INFIELD xcce304h
{<point name="construct.c.page2.xcce304h" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce304
            #add-point:BEFORE FIELD xcce304
{<point name="construct.b.page2.xcce304" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce304
            
            #add-point:AFTER FIELD xcce304
{<point name="construct.a.page2.xcce304" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce304
         ON ACTION controlp INFIELD xcce304
            #add-point:ON ACTION controlp INFIELD xcce304
{<point name="construct.c.page2.xcce304" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce307
            #add-point:BEFORE FIELD xcce307
{<point name="construct.b.page2.xcce307" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce307
            
            #add-point:AFTER FIELD xcce307
{<point name="construct.a.page2.xcce307" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce307
         ON ACTION controlp INFIELD xcce307
            #add-point:ON ACTION controlp INFIELD xcce307
{<point name="construct.c.page2.xcce307" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce308a
            #add-point:BEFORE FIELD xcce308a
{<point name="construct.b.page2.xcce308a" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce308a
            
            #add-point:AFTER FIELD xcce308a
{<point name="construct.a.page2.xcce308a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce308a
         ON ACTION controlp INFIELD xcce308a
            #add-point:ON ACTION controlp INFIELD xcce308a
{<point name="construct.c.page2.xcce308a" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce308b
            #add-point:BEFORE FIELD xcce308b
{<point name="construct.b.page2.xcce308b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce308b
            
            #add-point:AFTER FIELD xcce308b
{<point name="construct.a.page2.xcce308b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce308b
         ON ACTION controlp INFIELD xcce308b
            #add-point:ON ACTION controlp INFIELD xcce308b
{<point name="construct.c.page2.xcce308b" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce308c
            #add-point:BEFORE FIELD xcce308c
{<point name="construct.b.page2.xcce308c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce308c
            
            #add-point:AFTER FIELD xcce308c
{<point name="construct.a.page2.xcce308c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce308c
         ON ACTION controlp INFIELD xcce308c
            #add-point:ON ACTION controlp INFIELD xcce308c
{<point name="construct.c.page2.xcce308c" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce308d
            #add-point:BEFORE FIELD xcce308d
{<point name="construct.b.page2.xcce308d" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce308d
            
            #add-point:AFTER FIELD xcce308d
{<point name="construct.a.page2.xcce308d" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce308d
         ON ACTION controlp INFIELD xcce308d
            #add-point:ON ACTION controlp INFIELD xcce308d
{<point name="construct.c.page2.xcce308d" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce308e
            #add-point:BEFORE FIELD xcce308e
{<point name="construct.b.page2.xcce308e" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce308e
            
            #add-point:AFTER FIELD xcce308e
{<point name="construct.a.page2.xcce308e" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce308e
         ON ACTION controlp INFIELD xcce308e
            #add-point:ON ACTION controlp INFIELD xcce308e
{<point name="construct.c.page2.xcce308e" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce308f
            #add-point:BEFORE FIELD xcce308f
{<point name="construct.b.page2.xcce308f" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce308f
            
            #add-point:AFTER FIELD xcce308f
{<point name="construct.a.page2.xcce308f" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce308f
         ON ACTION controlp INFIELD xcce308f
            #add-point:ON ACTION controlp INFIELD xcce308f
{<point name="construct.c.page2.xcce308f" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce308g
            #add-point:BEFORE FIELD xcce308g
{<point name="construct.b.page2.xcce308g" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce308g
            
            #add-point:AFTER FIELD xcce308g
{<point name="construct.a.page2.xcce308g" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce308g
         ON ACTION controlp INFIELD xcce308g
            #add-point:ON ACTION controlp INFIELD xcce308g
{<point name="construct.c.page2.xcce308g" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce308h
            #add-point:BEFORE FIELD xcce308h
{<point name="construct.b.page2.xcce308h" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce308h
            
            #add-point:AFTER FIELD xcce308h
{<point name="construct.a.page2.xcce308h" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce308h
         ON ACTION controlp INFIELD xcce308h
            #add-point:ON ACTION controlp INFIELD xcce308h
{<point name="construct.c.page2.xcce308h" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce308
            #add-point:BEFORE FIELD xcce308
{<point name="construct.b.page2.xcce308" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce308
            
            #add-point:AFTER FIELD xcce308
{<point name="construct.a.page2.xcce308" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce308
         ON ACTION controlp INFIELD xcce308
            #add-point:ON ACTION controlp INFIELD xcce308
{<point name="construct.c.page2.xcce308" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce901
            #add-point:BEFORE FIELD xcce901
{<point name="construct.b.page2.xcce901" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce901
            
            #add-point:AFTER FIELD xcce901
{<point name="construct.a.page2.xcce901" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce901
         ON ACTION controlp INFIELD xcce901
            #add-point:ON ACTION controlp INFIELD xcce901
{<point name="construct.c.page2.xcce901" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce902a
            #add-point:BEFORE FIELD xcce902a
{<point name="construct.b.page2.xcce902a" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce902a
            
            #add-point:AFTER FIELD xcce902a
{<point name="construct.a.page2.xcce902a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce902a
         ON ACTION controlp INFIELD xcce902a
            #add-point:ON ACTION controlp INFIELD xcce902a
{<point name="construct.c.page2.xcce902a" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce902b
            #add-point:BEFORE FIELD xcce902b
{<point name="construct.b.page2.xcce902b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce902b
            
            #add-point:AFTER FIELD xcce902b
{<point name="construct.a.page2.xcce902b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce902b
         ON ACTION controlp INFIELD xcce902b
            #add-point:ON ACTION controlp INFIELD xcce902b
{<point name="construct.c.page2.xcce902b" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce902c
            #add-point:BEFORE FIELD xcce902c
{<point name="construct.b.page2.xcce902c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce902c
            
            #add-point:AFTER FIELD xcce902c
{<point name="construct.a.page2.xcce902c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce902c
         ON ACTION controlp INFIELD xcce902c
            #add-point:ON ACTION controlp INFIELD xcce902c
{<point name="construct.c.page2.xcce902c" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce902d
            #add-point:BEFORE FIELD xcce902d
{<point name="construct.b.page2.xcce902d" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce902d
            
            #add-point:AFTER FIELD xcce902d
{<point name="construct.a.page2.xcce902d" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce902d
         ON ACTION controlp INFIELD xcce902d
            #add-point:ON ACTION controlp INFIELD xcce902d
{<point name="construct.c.page2.xcce902d" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce902e
            #add-point:BEFORE FIELD xcce902e
{<point name="construct.b.page2.xcce902e" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce902e
            
            #add-point:AFTER FIELD xcce902e
{<point name="construct.a.page2.xcce902e" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce902e
         ON ACTION controlp INFIELD xcce902e
            #add-point:ON ACTION controlp INFIELD xcce902e
{<point name="construct.c.page2.xcce902e" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce902f
            #add-point:BEFORE FIELD xcce902f
{<point name="construct.b.page2.xcce902f" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce902f
            
            #add-point:AFTER FIELD xcce902f
{<point name="construct.a.page2.xcce902f" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce902f
         ON ACTION controlp INFIELD xcce902f
            #add-point:ON ACTION controlp INFIELD xcce902f
{<point name="construct.c.page2.xcce902f" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce902g
            #add-point:BEFORE FIELD xcce902g
{<point name="construct.b.page2.xcce902g" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce902g
            
            #add-point:AFTER FIELD xcce902g
{<point name="construct.a.page2.xcce902g" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce902g
         ON ACTION controlp INFIELD xcce902g
            #add-point:ON ACTION controlp INFIELD xcce902g
{<point name="construct.c.page2.xcce902g" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce902h
            #add-point:BEFORE FIELD xcce902h
{<point name="construct.b.page2.xcce902h" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce902h
            
            #add-point:AFTER FIELD xcce902h
{<point name="construct.a.page2.xcce902h" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce902h
         ON ACTION controlp INFIELD xcce902h
            #add-point:ON ACTION controlp INFIELD xcce902h
{<point name="construct.c.page2.xcce902h" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcce902
            #add-point:BEFORE FIELD xcce902
{<point name="construct.b.page2.xcce902" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcce902
            
            #add-point:AFTER FIELD xcce902
{<point name="construct.a.page2.xcce902" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcce902
         ON ACTION controlp INFIELD xcce902
            #add-point:ON ACTION controlp INFIELD xcce902
{<point name="construct.c.page2.xcce902" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON xcci006,xcci007,xcci008,xcci009,xcci002
           ,sfaa068         #fengmy150303
           FROM s_detail3[1].xcci006,s_detail3[1].xcci007,s_detail3[1].xcci008,s_detail3[1].xcci009,s_detail3[1].xcci002
                ,s_detail3[1].sfaa068_3         #fengmy150303      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
{<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
        ON ACTION controlp INFIELD sfaa068_3
            #add-point:ON ACTION controlp INFIELD sfaa068
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = cl_get_today()
            CALL q_ooeg001_8()                        #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfaa068_3  #顯示到畫面上
            NEXT FIELD sfaa068_3                     #返回原欄位         
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD xcci006
            #add-point:BEFORE FIELD xcci006
{<point name="construct.b.page3.xcci006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcci006
            
            #add-point:AFTER FIELD xcci006
{<point name="construct.a.page3.xcci006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xcci006
         ON ACTION controlp INFIELD xcci006
            #add-point:ON ACTION controlp INFIELD xcci006
{<point name="construct.c.page3.xcci006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcci007
            #add-point:BEFORE FIELD xcci007
{<point name="construct.b.page3.xcci007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcci007
            
            #add-point:AFTER FIELD xcci007
{<point name="construct.a.page3.xcci007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xcci007
         ON ACTION controlp INFIELD xcci007
            #add-point:ON ACTION controlp INFIELD xcci007
{<point name="construct.c.page3.xcci007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcci008
            #add-point:BEFORE FIELD xcci008
{<point name="construct.b.page3.xcci008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcci008
            
            #add-point:AFTER FIELD xcci008
{<point name="construct.a.page3.xcci008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xcci008
         ON ACTION controlp INFIELD xcci008
            #add-point:ON ACTION controlp INFIELD xcci008
{<point name="construct.c.page3.xcci008" />}
            #END add-point
        ON ACTION controlp INFIELD xcci009
            #add-point:ON ACTION controlp INFIELD xcci009
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xcci007()                           #呼叫開窗
            DISPLAY g_qryparam.return3 TO xcci009  #顯示到畫面上
            NEXT FIELD xcci009                     #返回原欄位
         #此段落由子樣板a01產生
         BEFORE FIELD xcci002
            #add-point:BEFORE FIELD xcci002
{<point name="construct.b.page3.xcci002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcci002
            
            #add-point:AFTER FIELD xcci002
{<point name="construct.a.page3.xcci002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xcci002
         ON ACTION controlp INFIELD xcci002
            #add-point:ON ACTION controlp INFIELD xcci002
{<point name="construct.c.page3.xcci002" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
{<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
{<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
 
 
 
   
   #add-point:cs段結束前
{<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION

{</section>}

{<section id="axcq540.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axcq540_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xccd_d.clear()
   CALL g_xccd2_d.clear()
   CALL g_xccd3_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axcq540_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL axcq540_browser_fill("")
      CALL axcq540_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL axcq540_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   ELSE
      CALL axcq540_fetch("F") 
   END IF
 
END FUNCTION

{</section>}

{<section id="axcq540.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axcq540_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
{<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
   
   CALL axcq540_browser_fill(p_flag)
   
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xccd_m.xccdld = g_browser[g_current_idx].b_xccdld
   LET g_xccd_m.xccd001 = g_browser[g_current_idx].b_xccd001
   LET g_xccd_m.xccd003 = g_browser[g_current_idx].b_xccd003
   LET g_xccd_m.xccd004 = g_browser[g_current_idx].b_xccd004
   LET g_xccd_m.xccd005 = g_browser[g_current_idx].b_xccd005
 
   

   
   #add-point:fetch段action控制
{<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
{<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_xccd_m_t.* = g_xccd_m.*
   LET g_xccd_m_o.* = g_xccd_m.*
   
   
   #重新顯示   
   CALL axcq540_show()
 
   
 
END FUNCTION

{</section>}

{<section id="axcq540.insert" >}
#+ 資料新增
PRIVATE FUNCTION axcq540_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xccd_d.clear()   
   CALL g_xccd2_d.clear()  
   CALL g_xccd3_d.clear()  
 
 
   INITIALIZE g_xccd_m.* LIKE xccd_t.*             #DEFAULT 設定
   
   LET g_xccdld_t = NULL
   LET g_xccd001_t = NULL
   LET g_xccd003_t = NULL
   LET g_xccd004_t = NULL
   LET g_xccd005_t = NULL
 
   
   LET g_master_insert = FALSE
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #顯示狀態(stus)圖片
      
    
      CALL axcq540_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xccd_m.* TO NULL
         INITIALIZE g_xccd_d TO NULL
         INITIALIZE g_xccd2_d TO NULL
         INITIALIZE g_xccd3_d TO NULL
 
         CALL axcq540_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_xccd_d.clear()
      #CALL g_xccd2_d.clear()
      #CALL g_xccd3_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_xccdld_t = g_xccd_m.xccdld
   LET g_xccd001_t = g_xccd_m.xccd001
   LET g_xccd003_t = g_xccd_m.xccd003
   LET g_xccd004_t = g_xccd_m.xccd004
   LET g_xccd005_t = g_xccd_m.xccd005
 
   
   #組合新增資料的條件
   LET g_add_browse = " xccdent = '" ||g_enterprise|| "' AND",
                      " xccdld = '", g_xccd_m.xccdld CLIPPED, "' "
                      ," AND xccd001 = '", g_xccd_m.xccd001 CLIPPED, "' "
                      ," AND xccd003 = '", g_xccd_m.xccd003 CLIPPED, "' "
                      ," AND xccd004 = '", g_xccd_m.xccd004 CLIPPED, "' "
                      ," AND xccd005 = '", g_xccd_m.xccd005 CLIPPED, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axcq540_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE axcq540_cl
   
   CALL axcq540_idx_chk()
   
END FUNCTION

{</section>}

{<section id="axcq540.modify" >}
#+ 資料修改
PRIVATE FUNCTION axcq540_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
{<point name="modify.define"/>}
   #end add-point    
   
   #保存單頭舊值
#   LET g_xccd_m_t.* = g_xccd_m.*
#   LET g_xccd_m_o.* = g_xccd_m.*
#   
#   IF g_xccd_m.xccdld IS NULL
#   OR g_xccd_m.xccd001 IS NULL
#   OR g_xccd_m.xccd003 IS NULL
#   OR g_xccd_m.xccd004 IS NULL
#   OR g_xccd_m.xccd005 IS NULL
# 
#   THEN
#      INITIALIZE g_errparam TO NULL 
#      LET g_errparam.extend = "" 
#      LET g_errparam.code   = "std-00003" 
#      LET g_errparam.popup  = FALSE 
#      CALL cl_err()
# 
#      RETURN
#   END IF
# 
#   ERROR ""
#  
#   LET g_xccdld_t = g_xccd_m.xccdld
#   LET g_xccd001_t = g_xccd_m.xccd001
#   LET g_xccd003_t = g_xccd_m.xccd003
#   LET g_xccd004_t = g_xccd_m.xccd004
#   LET g_xccd005_t = g_xccd_m.xccd005
# 
#   CALL s_transaction_begin()
#   
#   OPEN axcq540_cl USING g_enterprise,g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005
#   IF STATUS THEN
#      INITIALIZE g_errparam TO NULL 
#      LET g_errparam.extend = "OPEN axcq540_cl:" 
#      LET g_errparam.code   = STATUS 
#      LET g_errparam.popup  = TRUE 
#      CALL cl_err()
#      CLOSE axcq540_cl
#      CALL s_transaction_end('N','0')
#      RETURN
#   END IF
# 
#   #顯示最新的資料
#   EXECUTE axcq540_master_referesh USING g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd004, 
#       g_xccd_m.xccd005 INTO g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd001, 
#       g_xccd_m.xccd003,g_xccd_m.xccdcomp_desc,g_xccd_m.xccdld_desc,g_xccd_m.xccd003_desc
# 
#   #資料被他人LOCK, 或是sql執行時出現錯誤
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL 
#      LET g_errparam.extend = g_xccd_m.xccdld 
#      LET g_errparam.code   = SQLCA.sqlcode 
#      LET g_errparam.popup  = FALSE 
#      CALL cl_err()
# 
#      CLOSE axcq540_cl
#      CALL s_transaction_end('N','0')
#      RETURN
#   END IF
#   
#   
#   
#   #add-point:modify段show之前
{<point name="modify.before_show"/>}
#   #end add-point  
#   
#   CALL axcq540_show()
#   WHILE TRUE
#      LET g_xccdld_t = g_xccd_m.xccdld
#      LET g_xccd001_t = g_xccd_m.xccd001
#      LET g_xccd003_t = g_xccd_m.xccd003
#      LET g_xccd004_t = g_xccd_m.xccd004
#      LET g_xccd005_t = g_xccd_m.xccd005
# 
#      
#      #寫入修改者/修改日期資訊(單頭)
#      
#      
#      #add-point:modify段修改前
{<point name="modify.before_input"/>}
#      #end add-point
#      
#      #欄位更改
#      CALL axcq540_input("u")
# 
#      #add-point:modify段修改後
{<point name="modify.after_input"/>}
#      #end add-point
#      
#      IF INT_FLAG THEN
#         LET INT_FLAG = 0
#         LET g_xccd_m.* = g_xccd_m_t.*
#         CALL axcq540_show()
#         INITIALIZE g_errparam TO NULL 
#         LET g_errparam.extend = '' 
#         LET g_errparam.code   = 9001 
#         LET g_errparam.popup  = FALSE 
#         CALL cl_err()
#         CALL s_transaction_end('N','0')
#         RETURN
#      END IF 
#      
#      #若有modid跟moddt則進行update
# 
#                  
#      #若單頭key欄位有變更
#      IF g_xccd_m.xccdld != g_xccdld_t 
#      OR g_xccd_m.xccd001 != g_xccd001_t 
#      OR g_xccd_m.xccd003 != g_xccd003_t 
#      OR g_xccd_m.xccd004 != g_xccd004_t 
#      OR g_xccd_m.xccd005 != g_xccd005_t 
# 
#      THEN
#         CALL s_transaction_begin()
#         
#         #add-point:單身fk修改前
{<point name="modify.body.b_fk_update" mark="Y"/>}
#         #end add-point
#         
#         #更新單身key值
#         UPDATE xccd_t SET  = g_xccd_m.xccdld
#                                       , = g_xccd_m.xccd001
#                                       , = g_xccd_m.xccd003
#                                       , = g_xccd_m.xccd004
#                                       , = g_xccd_m.xccd005
# 
#          WHERE xccdent = g_enterprise AND  = g_xccdld_t
#            AND  = g_xccd001_t
#            AND  = g_xccd003_t
#            AND  = g_xccd004_t
#            AND  = g_xccd005_t
# 
#            
#         #add-point:單身fk修改中
{<point name="modify.body.m_fk_update"/>}
#         #end add-point
# 
#         CASE
#            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = "xccd_t" 
#               LET g_errparam.code   = "std-00009" 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
#               CALL s_transaction_end('N','0')
#               CONTINUE WHILE
#            WHEN SQLCA.sqlcode #其他錯誤
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = "xccd_t" 
#               LET g_errparam.code   = SQLCA.sqlcode 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
# 
#               CALL s_transaction_end('N','0')
#               CONTINUE WHILE
#         END CASE
#         
#         #add-point:單身fk修改後
{<point name="modify.body.a_fk_update"/>}
#         #end add-point
#         
#         #更新單身key值
#         #add-point:單身fk修改前
{<point name="modify.body.b_fk_update2" mark="Y"/>}
#         #end add-point
#         UPDATE xcce_t
#            SET xcceld = g_xccd_m.xccdld
#               ,xcce001 = g_xccd_m.xccd001
#               ,xcce003 = g_xccd_m.xccd003
#               ,xcce004 = g_xccd_m.xccd004
#               ,xcce005 = g_xccd_m.xccd005
# 
#          WHERE xcceent = g_enterprise AND
#                xcceld = g_xccdld_t
#            AND xcce001 = g_xccd001_t
#            AND xcce003 = g_xccd003_t
#            AND xcce004 = g_xccd004_t
#            AND xcce005 = g_xccd005_t
# 
#         #add-point:單身fk修改中
{<point name="modify.body.m_fk_update2"/>}
#         #end add-point
#         CASE
#            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = "xcce_t" 
#               LET g_errparam.code   = "std-00009" 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
# 
#               CALL s_transaction_end('N','0')
#               CONTINUE WHILE
#            WHEN SQLCA.sqlcode #其他錯誤
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = "xcce_t" 
#               LET g_errparam.code   = SQLCA.sqlcode 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
# 
#               CALL s_transaction_end('N','0')
#               CONTINUE WHILE
#         END CASE
#         #add-point:單身fk修改後
{<point name="modify.body.a_fk_update2"/>}
#         #end add-point
# 
#         #更新單身key值
#         #add-point:單身fk修改前
{<point name="modify.body.b_fk_update3" mark="Y"/>}
#         #end add-point
#         UPDATE xcci_t
#            SET xccild = g_xccd_m.xccdld
#               ,xcci001 = g_xccd_m.xccd001
#               ,xcci003 = g_xccd_m.xccd003
#               ,xcci004 = g_xccd_m.xccd004
#               ,xcci005 = g_xccd_m.xccd005
# 
#          WHERE xccient = g_enterprise AND
#                xccild = g_xccdld_t
#            AND xcci001 = g_xccd001_t
#            AND xcci003 = g_xccd003_t
#            AND xcci004 = g_xccd004_t
#            AND xcci005 = g_xccd005_t
# 
#         #add-point:單身fk修改中
{<point name="modify.body.m_fk_update3"/>}
#         #end add-point
#         CASE
#            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = "xcci_t" 
#               LET g_errparam.code   = "std-00009" 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
# 
#               CALL s_transaction_end('N','0')
#               CONTINUE WHILE
#            WHEN SQLCA.sqlcode #其他錯誤
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = "xcci_t" 
#               LET g_errparam.code   = SQLCA.sqlcode 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
# 
#               CALL s_transaction_end('N','0')
#               CONTINUE WHILE
#         END CASE
#         #add-point:單身fk修改後
{<point name="modify.body.a_fk_update3"/>}
#         #end add-point
# 
# 
#         
# 
#         
#         #UPDATE 多語言table key值
#         
#         
#         
# 
#         CALL s_transaction_end('Y','0')
#      END IF
#    
#      EXIT WHILE
#   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_xccd_m.xccdld,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   #LET g_state = "modify"
 
   #組合新增資料的條件
   LET g_add_browse = " xccdent = '" ||g_enterprise|| "' AND",
                      " xccdld = '", g_xccd_m.xccdld CLIPPED, "' "
                      ," AND xccd001 = '", g_xccd_m.xccd001 CLIPPED, "' "
                      ," AND xccd003 = '", g_xccd_m.xccd003 CLIPPED, "' "
                      ," AND xccd004 = '", g_xccd_m.xccd004 CLIPPED, "' "
                      ," AND xccd005 = '", g_xccd_m.xccd005 CLIPPED, "' "
 
   #填到對應位置
   CALL axcq540_browser_fill("")
 
   CLOSE axcq540_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_xccd_m.xccdld,'U')
 
END FUNCTION   

{</section>}

{<section id="axcq540.input" >}
#+ 資料輸入
PRIVATE FUNCTION axcq540_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
{<point name="input.define"/>}
   #end add-point  
 
#   #先做狀態判定
#   IF p_cmd = 'r' THEN
#      LET l_cmd_t = 'r'
#      LET p_cmd   = 'a'
#   ELSE
#      LET l_cmd_t = p_cmd
#   END IF   
#   
#   #將資料輸出到畫面上
#   DISPLAY BY NAME g_xccd_m.xccdcomp,g_xccd_m.xccdcomp_desc,g_xccd_m.xccdld,g_xccd_m.xccdld_desc,g_xccd_m.xccd004, 
#       g_xccd_m.xccd005,g_xccd_m.xccd001,g_xccd_m.xccd001_desc,g_xccd_m.xccd003,g_xccd_m.xccd003_desc 
#
#   
#   #切換畫面
# 
#   CALL cl_set_head_visible("","YES")  
# 
#   LET l_insert = FALSE
#   LET g_action_choice = ""
# 
#   #add-point:input段define_sql
{<point name="input.define_sql" mark="Y"/>}
#   #end add-point 
#   LET g_forupd_sql = "SELECT xccd006,xccd002 FROM xccd_t WHERE xccdent=? AND xccdld=? AND xccd001=?  
#       AND xccd003=? AND xccd004=? AND xccd005=? FOR UPDATE"
#   #add-point:input段define_sql
{<point name="input.after_define_sql"/>}
#   #end add-point 
#   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
#   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
#   DECLARE axcq540_bcl CURSOR FROM g_forupd_sql
#   
#   #add-point:input段define_sql
{<point name="input.define_sql2" mark="Y"/>}
#   #end add-point    
#   LET g_forupd_sql = "SELECT xcce006,xcce007,xcce008,xcce009,xcce002,xcce101,xcce102a,xcce102b,xcce102c, 
#       xcce102d,xcce102e,xcce102f,xcce102g,xcce102h,xcce102,xcce201,xcce202a,xcce202b,xcce202c,xcce202d, 
#       xcce202e,xcce202f,xcce202g,xcce202h,xcce202,xcce301,xcce302a,xcce302b,xcce302c,xcce302d,xcce302e, 
#       xcce302f,xcce302g,xcce302h,xcce302,xcce303,xcce304a,xcce304b,xcce304c,xcce304d,xcce304e,xcce304f, 
#       xcce304g,xcce304h,xcce304,xcce307,xcce308a,xcce308b,xcce308c,xcce308d,xcce308e,xcce308f,xcce308g, 
#       xcce308h,xcce308,xcce901,xcce902a,xcce902b,xcce902c,xcce902d,xcce902e,xcce902f,xcce902g,xcce902h, 
#       xcce902 FROM xcce_t WHERE xcceent=? AND xcceld=? AND xcce001=? AND xcce003=? AND xcce004=? AND  
#       xcce005=? AND xcce002=? AND xcce006=? AND xcce007=? AND xcce008=? AND xcce009=? FOR UPDATE"
#   #add-point:input段define_sql
{<point name="input.after_define_sql2"/>}
#   #end add-point
#   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
#   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
#   DECLARE axcq540_bcl2 CURSOR FROM g_forupd_sql
# 
#   #add-point:input段define_sql
{<point name="input.define_sql3" mark="Y"/>}
#   #end add-point    
#   LET g_forupd_sql = "SELECT xcci006,xcci007,xcci008,xcci009,xcci002,xcci101,xcci102a,xcci102b,xcci102c, 
#       xcci102d,xcci102e,xcci102f,xcci102g,xcci102h,xcci102,xcci201,xcci202a,xcci202b,xcci202c,xcci202d, 
#       xcci202e,xcci202f,xcci202g,xcci202h,xcci202,xcci301,xcci302a,xcci302b,xcci302c,xcci302d,xcci302e, 
#       xcci302f,xcci302g,xcci302h,xcci302,xcci303,xcci304a,xcci304b,xcci304c,xcci304d,xcci304e,xcci304f, 
#       xcci304g,xcci304h,xcci304,xcci901,xcci902a,xcci902b,xcci902c,xcci902d,xcci902e,xcci902f,xcci902g, 
#       xcci902h,xcci902 FROM xcci_t WHERE xccient=? AND xccild=? AND xcci001=? AND xcci003=? AND xcci004=?  
#       AND xcci005=? AND xcci002=? AND xcci006=? AND xcci007=? AND xcci008=? AND xcci009=? FOR UPDATE" 
#
#   #add-point:input段define_sql
{<point name="input.after_define_sql3"/>}
#   #end add-point
#   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
#   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
#   DECLARE axcq540_bcl3 CURSOR FROM g_forupd_sql
# 
# 
#   
# 
# 
#   #add-point:input段define_sql
{<point name="input.other_sql"/>}
#   #end add-point 
# 
#   LET l_allow_insert = cl_auth_detail_input("insert")
#   LET l_allow_delete = cl_auth_detail_input("delete")
#   LET g_qryparam.state = 'i'
#   
#   #控制key欄位可否輸入
#   CALL axcq540_set_entry(p_cmd)
#   #add-point:set_entry後
{<point name="input.after_set_entry"/>}
#   #end add-point
#   CALL axcq540_set_no_entry(p_cmd)
# 
#   DISPLAY BY NAME g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd001, 
#       g_xccd_m.xccd003
#   
#   LET lb_reproduce = FALSE
#   
#   #add-point:資料輸入前
{<point name="input.before_input"/>}
#   #end add-point
#   
#   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
#   
#
{</section>}

{<section id="axcq540.input.head" >}
#      #單頭段
#      INPUT BY NAME g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd001, 
#          g_xccd_m.xccd003 
#         ATTRIBUTE(WITHOUT DEFAULTS)
#         
#         #自訂ACTION(master_input)
#         
#     
#         BEFORE INPUT
#            IF s_transaction_chk("N",0) THEN
#               CALL s_transaction_begin()
#            END IF
#            
#            IF l_cmd_t = 'r' THEN
#               
#            END IF
#            #add-point:資料輸入前
{<point name="input.m.before_input"/>}
#            #end add-point
# 
#                  #此段落由子樣板a02產生
#         AFTER FIELD xccdcomp
#            
#            #add-point:AFTER FIELD xccdcomp
{<point name="input.a.xccdcomp" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xccdcomp
#            #add-point:BEFORE FIELD xccdcomp
{<point name="input.b.xccdcomp" />}
#            #END add-point
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xccdcomp
#            #add-point:ON CHANGE xccdcomp
{<point name="input.g.xccdcomp" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xccdld
#            
#            #add-point:AFTER FIELD xccdld
{<point name="input.a.xccdld" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xccdld
#            #add-point:BEFORE FIELD xccdld
{<point name="input.b.xccdld" />}
#            #END add-point
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xccdld
#            #add-point:ON CHANGE xccdld
{<point name="input.g.xccdld" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xccd004
#            #add-point:BEFORE FIELD xccd004
{<point name="input.b.xccd004" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xccd004
#            
#            #add-point:AFTER FIELD xccd004
{<point name="input.a.xccd004" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xccd004
#            #add-point:ON CHANGE xccd004
{<point name="input.g.xccd004" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xccd005
#            #add-point:BEFORE FIELD xccd005
{<point name="input.b.xccd005" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xccd005
#            
#            #add-point:AFTER FIELD xccd005
{<point name="input.a.xccd005" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xccd005
#            #add-point:ON CHANGE xccd005
{<point name="input.g.xccd005" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xccd001
#            
#            #add-point:AFTER FIELD xccd001
{<point name="input.a.xccd001" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xccd001
#            #add-point:BEFORE FIELD xccd001
{<point name="input.b.xccd001" />}
#            #END add-point
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xccd001
#            #add-point:ON CHANGE xccd001
{<point name="input.g.xccd001" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xccd003
#            
#            #add-point:AFTER FIELD xccd003
{<point name="input.a.xccd003" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xccd003
#            #add-point:BEFORE FIELD xccd003
{<point name="input.b.xccd003" />}
#            #END add-point
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xccd003
#            #add-point:ON CHANGE xccd003
{<point name="input.g.xccd003" />}
#            #END add-point
# 
# #欄位檢查
#                  #Ctrlp:input.c.xccdcomp
#         ON ACTION controlp INFIELD xccdcomp
#            #add-point:ON ACTION controlp INFIELD xccdcomp
{<point name="input.c.xccdcomp" />}
#            #END add-point
# 
#         #Ctrlp:input.c.xccdld
#         ON ACTION controlp INFIELD xccdld
#            #add-point:ON ACTION controlp INFIELD xccdld
{<point name="input.c.xccdld" />}
#            #END add-point
# 
#         #Ctrlp:input.c.xccd004
#         ON ACTION controlp INFIELD xccd004
#            #add-point:ON ACTION controlp INFIELD xccd004
{<point name="input.c.xccd004" />}
#            #END add-point
# 
#         #Ctrlp:input.c.xccd005
#         ON ACTION controlp INFIELD xccd005
#            #add-point:ON ACTION controlp INFIELD xccd005
{<point name="input.c.xccd005" />}
#            #END add-point
# 
#         #Ctrlp:input.c.xccd001
#         ON ACTION controlp INFIELD xccd001
#            #add-point:ON ACTION controlp INFIELD xccd001
{<point name="input.c.xccd001" />}
#            #END add-point
# 
#         #Ctrlp:input.c.xccd003
#         ON ACTION controlp INFIELD xccd003
#            #add-point:ON ACTION controlp INFIELD xccd003
{<point name="input.c.xccd003" />}
#            #END add-point
# 
# #欄位開窗
#            
#         AFTER INPUT
#            IF INT_FLAG THEN
#               EXIT DIALOG
#            END IF
# 
#            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
#            #CALL cl_showmsg()
#            DISPLAY BY NAME g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005 
#
#                        
#            #add-point:單頭INPUT後
{<point name="input.head.after_input"/>}
#            #end add-point
#                        
#            IF p_cmd <> 'u' THEN
#    
#               CALL s_transaction_begin()
#               
#               #add-point:單頭新增前
{<point name="input.head.b_insert" mark="Y"/>}
#               #end add-point
#               
#               INSERT INTO xccd_t (xccdent,xccdcomp,xccdld,xccd004,xccd005,xccd001,xccd003)
#               VALUES (g_enterprise,g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd004,g_xccd_m.xccd005, 
#                   g_xccd_m.xccd001,g_xccd_m.xccd003) 
#               IF SQLCA.sqlcode THEN
#                  INITIALIZE g_errparam TO NULL 
#                  LET g_errparam.extend = "g_xccd_m" 
#                  LET g_errparam.code   = SQLCA.sqlcode 
#                  LET g_errparam.popup  = TRUE 
#                  CALL cl_err()
# 
#                  CALL s_transaction_end('N','0')
#                  CONTINUE DIALOG
#               END IF
#               
#               #add-point:單頭新增中
{<point name="input.head.m_insert"/>}
#               #end add-point
#               
#               
#               
#               
#               #add-point:單頭新增後
{<point name="input.head.a_insert"/>}
#               #end add-point
#               CALL s_transaction_end('Y','0') 
#               
#               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
#                  CALL axcq540_detail_reproduce()
#                  #因應特定程式需求, 重新刷新單身資料
#                  CALL axcq540_b_fill()
#               END IF
#               
#               LET g_master_insert = TRUE
#               
#               LET p_cmd = 'u'
#            ELSE
#               CALL s_transaction_begin()
#            
#               #add-point:單頭修改前
{<point name="input.head.b_update" mark="Y"/>}
#               #end add-point
#               
#               UPDATE xccd_t SET (xccdcomp,xccdld,xccd004,xccd005,xccd001,xccd003) = (g_xccd_m.xccdcomp, 
#                   g_xccd_m.xccdld,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd001,g_xccd_m.xccd003) 
#
#                WHERE xccdent = g_enterprise AND xccdld = g_xccdld_t
#                  AND xccd001 = g_xccd001_t
#                  AND xccd003 = g_xccd003_t
#                  AND xccd004 = g_xccd004_t
#                  AND xccd005 = g_xccd005_t
# 
#               IF SQLCA.sqlcode THEN
#                  INITIALIZE g_errparam TO NULL 
#                  LET g_errparam.extend = "xccd_t" 
#                  LET g_errparam.code   = SQLCA.sqlcode 
#                  LET g_errparam.popup  = TRUE 
#                  CALL cl_err()
# 
#                  CALL s_transaction_end('N','0')
#                  CONTINUE DIALOG
#               END IF
#               
#               #add-point:單頭修改中
{<point name="input.head.m_update"/>}
#               #end add-point
#               
#               
#               
#               
#               #修改歷程記錄
#               LET g_log1 = util.JSON.stringify(g_xccd_m_t)
#               LET g_log2 = util.JSON.stringify(g_xccd_m)
#               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
#                  CALL s_transaction_end('N','0')
#               ELSE
#                  CALL s_transaction_end('Y','0')
#               END IF
#               
#               #add-point:單頭修改後
{<point name="input.head.a_update"/>}
#               #end add-point
#            END IF
#            
#            LET g_xccdld_t = g_xccd_m.xccdld
#            LET g_xccd001_t = g_xccd_m.xccd001
#            LET g_xccd003_t = g_xccd_m.xccd003
#            LET g_xccd004_t = g_xccd_m.xccd004
#            LET g_xccd005_t = g_xccd_m.xccd005
# 
#            
#      END INPUT
#   
#
{</section>}

{<section id="axcq540.input.body" >}
#   
#      #Page1 預設值產生於此處
#      INPUT ARRAY g_xccd_d FROM s_detail1.*
#          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
#                  INSERT ROW = l_allow_insert, 
#                  DELETE ROW = l_allow_delete,
#                  APPEND ROW = l_allow_insert)
# 
#         #自訂ACTION(detail_input,page_1)
#         
#         
#         BEFORE INPUT
#            #add-point:資料輸入前
{<point name="input.body.before_input2"/>}
#            #end add-point
#            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
#              CALL FGL_SET_ARR_CURR(g_xccd_d.getLength()+1) 
#              LET g_insert = 'N' 
#           END IF 
# 
#            CALL axcq540_b_fill()
#            LET g_rec_b = g_xccd_d.getLength()
#            #add-point:資料輸入前
{<point name="input.d.before_input"/>}
#            #end add-point
#         
#         BEFORE ROW
#            #add-point:modify段before row2
{<point name="input.body.before_row2"/>}
#            #end add-point  
#            LET l_insert = FALSE
#            LET l_cmd = ''
#            LET l_ac = ARR_CURR()
#            LET g_detail_idx = l_ac
#            
#            LET l_lock_sw = 'N'            #DEFAULT
#            LET l_n = ARR_COUNT()
#            DISPLAY l_ac TO FORMONLY.idx
#         
#            CALL s_transaction_begin()
#            OPEN axcq540_cl USING g_enterprise,g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005
#            IF STATUS THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = "OPEN axcq540_cl:" 
#               LET g_errparam.code   = STATUS 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
# 
#               CLOSE axcq540_cl
#               CALL s_transaction_end('N','0')
#               RETURN
#            END IF
#            
#            LET g_rec_b = g_xccd_d.getLength()
#            
#            IF g_rec_b >= l_ac 
#               AND g_xccd_d[l_ac].xccdld IS NOT NULL
#               AND g_xccd_d[l_ac].xccd001 IS NOT NULL
#               AND g_xccd_d[l_ac].xccd003 IS NOT NULL
#               AND g_xccd_d[l_ac].xccd004 IS NOT NULL
#               AND g_xccd_d[l_ac].xccd005 IS NOT NULL
# 
#            THEN
#               LET l_cmd='u'
#               LET g_xccd_d_t.* = g_xccd_d[l_ac].*  #BACKUP
#               LET g_xccd_d_o.* = g_xccd_d[l_ac].*  #BACKUP
#               CALL axcq540_set_entry_b(l_cmd)
#               #add-point:modify段after_set_entry_b
{<point name="input.body.after_set_entry_b"/>}
#               #end add-point  
#               CALL axcq540_set_no_entry_b(l_cmd)
#               IF NOT axcq540_lock_b("xccd_t","'1'") THEN
#                  LET l_lock_sw='Y'
#               ELSE
#                  FETCH axcq540_bcl INTO g_xccd_d[l_ac].xccd006,g_xccd_d[l_ac].xccd002
#                  IF SQLCA.sqlcode THEN
#                     INITIALIZE g_errparam TO NULL 
#                     LET g_errparam.extend = g_xccd_d_t.xccdld 
#                     LET g_errparam.code   = SQLCA.sqlcode 
#                     LET g_errparam.popup  = TRUE 
#                     CALL cl_err()
# 
#                     LET l_lock_sw = "Y"
#                  END IF
#                  
#                  LET g_bfill = "N"
#                  CALL axcq540_show()
#                  LET g_bfill = "Y"
#                  
#                  CALL cl_show_fld_cont()
#               END IF
#            ELSE
#               LET l_cmd='a'
#            END IF
#            #add-point:modify段before row
{<point name="input.body.before_row"/>}
#            #end add-point  
#            #其他table資料備份(確定是否更改用)
#            LET g_detail_multi_table_t.xcbbcomp = g_xccd_m.xccdld
#LET g_detail_multi_table_t.xcbb001 = g_xccd_m.xccd001
#LET g_detail_multi_table_t.xcbb002 = g_xccd_m.xccd003
#LET g_detail_multi_table_t.xcbb003 = g_xccd_m.xccd004
#LET g_detail_multi_table_t.xcbb004 = g_xccd_m.xccd005
#LET g_detail_multi_table_t.xcbb005 = g_xccd3_d[l_ac].xcci002
# 
#            #其他table進行lock
#                        INITIALIZE l_var_keys TO NULL 
#            INITIALIZE l_field_keys TO NULL 
#            LET l_field_keys[01] = 'xcbbcomp'
#            LET l_var_keys[01] = g_xccd_m.xccdld
#            LET l_field_keys[02] = 'xcbb001'
#            LET l_var_keys[02] = g_xccd_m.xccd001
#            LET l_field_keys[03] = 'xcbb002'
#            LET l_var_keys[03] = g_xccd_m.xccd003
#            LET l_field_keys[04] = 'xcbb003'
#            LET l_var_keys[04] = g_xccd_m.xccd004
#            LET l_field_keys[05] = 'xcbb004'
#            LET l_var_keys[05] = g_xccd_m.xccd005
#            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'xcbb_t') THEN
#               RETURN 
#            END IF 
# 
#        
#         BEFORE INSERT
#            
#            LET l_insert = TRUE
#            LET l_n = ARR_COUNT()
#            LET l_cmd = 'a'
#            INITIALIZE g_xccd_d[l_ac].* TO NULL 
#            INITIALIZE g_xccd_d_t.* TO NULL 
#            INITIALIZE g_xccd_d_o.* TO NULL 
#            #公用欄位給值(單身)
#            
#            #自定義預設值
#            
#            #add-point:modify段before備份
{<point name="input.body.insert.before_bak"/>}
#            #end add-point
#            LET g_xccd_d_t.* = g_xccd_d[l_ac].*     #新輸入資料
#            LET g_xccd_d_o.* = g_xccd_d[l_ac].*     #新輸入資料
#            CALL cl_show_fld_cont()
#            CALL axcq540_set_entry_b(l_cmd)
#            #add-point:modify段after_set_entry_b
{<point name="input.body.insert.after_set_entry_b"/>}
#            #end add-point
#            CALL axcq540_set_no_entry_b(l_cmd)
#            IF lb_reproduce THEN
#               LET lb_reproduce = FALSE
#               LET g_xccd_d[li_reproduce_target].* = g_xccd_d[li_reproduce].*
# 
#               LET g_xccd_d[li_reproduce_target].xccdld = NULL
#               LET g_xccd_d[li_reproduce_target].xccd001 = NULL
#               LET g_xccd_d[li_reproduce_target].xccd003 = NULL
#               LET g_xccd_d[li_reproduce_target].xccd004 = NULL
#               LET g_xccd_d[li_reproduce_target].xccd005 = NULL
# 
#            END IF
#            LET g_detail_multi_table_t.xcbbcomp = g_xccd_m.xccdld
#LET g_detail_multi_table_t.xcbb001 = g_xccd_m.xccd001
#LET g_detail_multi_table_t.xcbb002 = g_xccd_m.xccd003
#LET g_detail_multi_table_t.xcbb003 = g_xccd_m.xccd004
#LET g_detail_multi_table_t.xcbb004 = g_xccd_m.xccd005
#LET g_detail_multi_table_t.xcbb005 = g_xccd3_d[l_ac].xcci002
# 
#            #add-point:modify段before insert
{<point name="input.body.before_insert"/>}
#            #end add-point  
#  
#         AFTER INSERT
#            LET l_insert = FALSE
#            IF INT_FLAG THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = '' 
#               LET g_errparam.code   = 9001 
#               LET g_errparam.popup  = FALSE 
#               CALL cl_err()
# 
#               LET INT_FLAG = 0
#               CANCEL INSERT
#            END IF
#               
#            #add-point:單身新增
{<point name="input.body.b_a_insert"/>}
#            #end add-point
#               
#            LET l_count = 1  
#            SELECT COUNT(*) INTO l_count FROM xccd_t 
#             WHERE xccdent = g_enterprise AND  = g_xccd_m.xccdld
#               AND  = g_xccd_m.xccd001
#               AND  = g_xccd_m.xccd003
#               AND  = g_xccd_m.xccd004
#               AND  = g_xccd_m.xccd005
# 
#               AND xccdld = g_xccd_d[l_ac].xccdld
#               AND xccd001 = g_xccd_d[l_ac].xccd001
#               AND xccd003 = g_xccd_d[l_ac].xccd003
#               AND xccd004 = g_xccd_d[l_ac].xccd004
#               AND xccd005 = g_xccd_d[l_ac].xccd005
# 
#                
#            #資料未重複, 插入新增資料
#            IF l_count = 0 THEN 
#               #add-point:單身新增前
{<point name="input.body.b_insert"/>}
#               #end add-point
#            
#               #同步新增到同層的table
#                              INITIALIZE gs_keys TO NULL 
#               LET gs_keys[1] = g_xccd_m.xccdld
#               LET gs_keys[2] = g_xccd_m.xccd001
#               LET gs_keys[3] = g_xccd_m.xccd003
#               LET gs_keys[4] = g_xccd_m.xccd004
#               LET gs_keys[5] = g_xccd_m.xccd005
#               LET gs_keys[6] = g_xccd_d[g_detail_idx].xccdld
#               LET gs_keys[7] = g_xccd_d[g_detail_idx].xccd001
#               LET gs_keys[8] = g_xccd_d[g_detail_idx].xccd003
#               LET gs_keys[9] = g_xccd_d[g_detail_idx].xccd004
#               LET gs_keys[10] = g_xccd_d[g_detail_idx].xccd005
#               CALL axcq540_insert_b('xccd_t',gs_keys,"'1'")
#                           
#               #add-point:單身新增後
{<point name="input.body.a_insert"/>}
#               #end add-point
#            ELSE    
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = 'INSERT' 
#               LET g_errparam.code   = "std-00006" 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
# 
#               INITIALIZE g_xccd_d[l_ac].* TO NULL
#               CALL s_transaction_end('N','0')
#               CANCEL INSERT
#            END IF
# 
#            IF SQLCA.SQLcode  THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = "xccd_t" 
#               LET g_errparam.code   = SQLCA.sqlcode 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
# 
#               CALL s_transaction_end('N','0')                    
#               CANCEL INSERT
#            ELSE
#               #先刷新資料
#               #CALL axcq540_b_fill()
#               #資料多語言用-增/改
#                        INITIALIZE l_var_keys TO NULL 
#         INITIALIZE l_field_keys TO NULL 
#         INITIALIZE l_vars TO NULL 
#         INITIALIZE l_fields TO NULL 
#         INITIALIZE l_var_keys_bak TO NULL 
#         IF g_xccd_m.xccdld = g_detail_multi_table_t.sfaadocno AND
#         g_xccd_m.xccd001 = g_detail_multi_table_t.sfaa068 AND
#         g_xccd_m.xccd003 =  AND
#         g_xccd_m.xccd004 =  AND
#         g_xccd_m.xccd005 =  AND
#         g_xccd3_d[l_ac].xcci002 =  AND
#         g_xccd3_d[l_ac].xcci006 =  AND
#         g_xccd3_d[l_ac].xcci007 =  AND
#         g_xccd3_d[l_ac].xcci008 =  AND
#         g_xccd3_d[l_ac].xcci009 =  AND
#         g_xccd_d[l_ac].sfaa068 =  THEN
#         ELSE 
#            LET l_var_keys[01] = g_xccd_m.xccdld
#            LET l_field_keys[01] = 'sfaadocno'
#            LET l_vars[01] = g_xccd_d[l_ac].sfaa068
#            LET l_fields[01] = 'sfaa068'
#            LET l_vars[02] = g_site 
#            LET l_fields[02] = 'sfaasite'
#            LET l_vars[03] = g_enterprise 
#            LET l_fields[03] = 'sfaaent'
#            LET l_var_keys_bak[01] = g_detail_multi_table_t.sfaadocno
#            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'sfaa_t')
#         END IF 
#          INITIALIZE l_var_keys TO NULL 
#         INITIALIZE l_field_keys TO NULL 
#         INITIALIZE l_vars TO NULL 
#         INITIALIZE l_fields TO NULL 
#         INITIALIZE l_var_keys_bak TO NULL 
#         IF g_xccd_m.xccdld = g_detail_multi_table_t.xcceld AND
#         g_xccd_m.xccd001 = g_detail_multi_table_t.xcce001 AND
#         g_xccd_m.xccd003 = g_detail_multi_table_t.xcce002 AND
#         g_xccd_m.xccd004 = g_detail_multi_table_t.xcce003 AND
#         g_xccd_m.xccd005 = g_detail_multi_table_t.xcce004 AND
#         g_xccd3_d[l_ac].xcci002 = g_detail_multi_table_t.xcce005 AND
#         g_xccd3_d[l_ac].xcci006 = g_detail_multi_table_t.xcce006 AND
#         g_xccd3_d[l_ac].xcci007 = g_detail_multi_table_t.xcce007 AND
#         g_xccd3_d[l_ac].xcci008 = g_detail_multi_table_t.xcce008 AND
#         g_xccd3_d[l_ac].xcci009 = g_detail_multi_table_t.xcce009 AND
#         g_xccd_d[l_ac].xcce007 = g_detail_multi_table_t.xcce007 AND
#         g_xccd_d[l_ac].xcce008 = g_detail_multi_table_t.xcce008 AND
#         g_xccd_d[l_ac].xcce009 = g_detail_multi_table_t.xcce009 AND
#         g_xccd_d[l_ac].xcce101 = g_detail_multi_table_t.xcce101 AND
#         g_xccd_d[l_ac].xcce102 = g_detail_multi_table_t.xcce102 AND
#         g_xccd_d[l_ac].xcce201 = g_detail_multi_table_t.xcce201 AND
#         g_xccd_d[l_ac].xcce202 = g_detail_multi_table_t.xcce202 AND
#         g_xccd_d[l_ac].xcce301 = g_detail_multi_table_t.xcce301 AND
#         g_xccd_d[l_ac].xcce302 = g_detail_multi_table_t.xcce302 AND
#         g_xccd_d[l_ac].xcce303 = g_detail_multi_table_t.xcce303 AND
#         g_xccd_d[l_ac].xcce304 = g_detail_multi_table_t.xcce304 AND
#         g_xccd_d[l_ac].xcce307 = g_detail_multi_table_t.xcce307 AND
#         g_xccd_d[l_ac].xcce308 = g_detail_multi_table_t.xcce308 AND
#         g_xccd_d[l_ac].xcce901 = g_detail_multi_table_t.xcce901 AND
#         g_xccd_d[l_ac].xcce902 = g_detail_multi_table_t.xcce902 THEN
#         ELSE 
#            LET l_var_keys[01] = g_xccd_m.xccdld
#            LET l_field_keys[01] = 'xcceld'
#            LET l_var_keys[02] = g_xccd_m.xccd001
#            LET l_field_keys[02] = 'xcce001'
#            LET l_var_keys[03] = g_xccd_m.xccd003
#            LET l_field_keys[03] = 'xcce002'
#            LET l_var_keys[04] = g_xccd_m.xccd004
#            LET l_field_keys[04] = 'xcce003'
#            LET l_var_keys[05] = g_xccd_m.xccd005
#            LET l_field_keys[05] = 'xcce004'
#            LET l_var_keys[06] = g_xccd3_d[l_ac].xcci002
#            LET l_field_keys[06] = 'xcce005'
#            LET l_var_keys[07] = g_xccd3_d[l_ac].xcci006
#            LET l_field_keys[07] = 'xcce006'
#            LET l_var_keys[08] = g_xccd3_d[l_ac].xcci007
#            LET l_field_keys[08] = 'xcce007'
#            LET l_var_keys[09] = g_xccd3_d[l_ac].xcci008
#            LET l_field_keys[09] = 'xcce008'
#            LET l_var_keys[10] = g_xccd3_d[l_ac].xcci009
#            LET l_field_keys[10] = 'xcce009'
#            LET l_vars[01] = g_xccd_d[l_ac].xcce007
#            LET l_fields[01] = 'xcce007'
#            LET l_vars[02] = g_xccd_d[l_ac].xcce008
#            LET l_fields[02] = 'xcce008'
#            LET l_vars[03] = g_xccd_d[l_ac].xcce009
#            LET l_fields[03] = 'xcce009'
#            LET l_vars[04] = g_xccd_d[l_ac].xcce101
#            LET l_fields[04] = 'xcce101'
#            LET l_vars[05] = g_xccd_d[l_ac].xcce102
#            LET l_fields[05] = 'xcce102'
#            LET l_vars[06] = g_xccd_d[l_ac].xcce201
#            LET l_fields[06] = 'xcce201'
#            LET l_vars[07] = g_xccd_d[l_ac].xcce202
#            LET l_fields[07] = 'xcce202'
#            LET l_vars[08] = g_xccd_d[l_ac].xcce301
#            LET l_fields[08] = 'xcce301'
#            LET l_vars[09] = g_xccd_d[l_ac].xcce302
#            LET l_fields[09] = 'xcce302'
#            LET l_vars[10] = g_xccd_d[l_ac].xcce303
#            LET l_fields[10] = 'xcce303'
#            LET l_vars[11] = g_xccd_d[l_ac].xcce304
#            LET l_fields[11] = 'xcce304'
#            LET l_vars[12] = g_xccd_d[l_ac].xcce307
#            LET l_fields[12] = 'xcce307'
#            LET l_vars[13] = g_xccd_d[l_ac].xcce308
#            LET l_fields[13] = 'xcce308'
#            LET l_vars[14] = g_xccd_d[l_ac].xcce901
#            LET l_fields[14] = 'xcce901'
#            LET l_vars[15] = g_xccd_d[l_ac].xcce902
#            LET l_fields[15] = 'xcce902'
#            LET l_vars[16] = g_enterprise 
#            LET l_fields[16] = 'xcceent'
#            LET l_var_keys_bak[01] = g_detail_multi_table_t.xcceld
#            LET l_var_keys_bak[02] = g_detail_multi_table_t.xcce001
#            LET l_var_keys_bak[03] = g_detail_multi_table_t.xcce002
#            LET l_var_keys_bak[04] = g_detail_multi_table_t.xcce003
#            LET l_var_keys_bak[05] = g_detail_multi_table_t.xcce004
#            LET l_var_keys_bak[06] = g_detail_multi_table_t.xcce005
#            LET l_var_keys_bak[07] = g_detail_multi_table_t.xcce006
#            LET l_var_keys_bak[08] = g_detail_multi_table_t.xcce007
#            LET l_var_keys_bak[09] = g_detail_multi_table_t.xcce008
#            LET l_var_keys_bak[10] = g_detail_multi_table_t.xcce009
#            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'xcce_t')
#         END IF 
#          INITIALIZE l_var_keys TO NULL 
#         INITIALIZE l_field_keys TO NULL 
#         INITIALIZE l_vars TO NULL 
#         INITIALIZE l_fields TO NULL 
#         INITIALIZE l_var_keys_bak TO NULL 
#         IF g_xccd_m.xccdld = g_detail_multi_table_t.xcbbcomp AND
#         g_xccd_m.xccd001 = g_detail_multi_table_t.xcbb001 AND
#         g_xccd_m.xccd003 = g_detail_multi_table_t.xcbb002 AND
#         g_xccd_m.xccd004 = g_detail_multi_table_t.xcbb003 AND
#         g_xccd_m.xccd005 = g_detail_multi_table_t.xcbb004 AND
#         g_xccd3_d[l_ac].xcci002 = g_detail_multi_table_t.xcbb005 AND
#         g_xccd3_d[l_ac].xcci006 =  AND
#         g_xccd3_d[l_ac].xcci007 =  AND
#         g_xccd3_d[l_ac].xcci008 =  AND
#         g_xccd3_d[l_ac].xcci009 =  AND
#         g_xccd_d[l_ac].xcbb005 =  THEN
#         ELSE 
#            LET l_var_keys[01] = g_xccd_m.xccdld
#            LET l_field_keys[01] = 'xcbbcomp'
#            LET l_var_keys[02] = g_xccd_m.xccd001
#            LET l_field_keys[02] = 'xcbb001'
#            LET l_var_keys[03] = g_xccd_m.xccd003
#            LET l_field_keys[03] = 'xcbb002'
#            LET l_var_keys[04] = g_xccd_m.xccd004
#            LET l_field_keys[04] = 'xcbb003'
#            LET l_var_keys[05] = g_xccd_m.xccd005
#            LET l_field_keys[05] = 'xcbb004'
#            LET l_vars[01] = g_xccd_d[l_ac].xcbb005
#            LET l_fields[01] = 'xcbb005'
#            LET l_vars[02] = g_enterprise 
#            LET l_fields[02] = 'xcbbent'
#            LET l_var_keys_bak[01] = g_detail_multi_table_t.xcbbcomp
#            LET l_var_keys_bak[02] = g_detail_multi_table_t.xcbb001
#            LET l_var_keys_bak[03] = g_detail_multi_table_t.xcbb002
#            LET l_var_keys_bak[04] = g_detail_multi_table_t.xcbb003
#            LET l_var_keys_bak[05] = g_detail_multi_table_t.xcbb004
#            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'xcbb_t')
#         END IF 
# 
#               #add-point:input段-after_insert
{<point name="input.body.a_insert2"/>}
#               #end add-point
#               CALL s_transaction_end('Y','0')
#               ERROR 'INSERT O.K'
#               LET g_rec_b = g_rec_b + 1
#            END IF
#              
#         BEFORE DELETE                            #是否取消單身
#            IF l_cmd = 'a' THEN
#               LET l_cmd='d'
#            ELSE
#               IF NOT cl_ask_del_detail() THEN
#                  CANCEL DELETE
#               END IF
#               IF l_lock_sw = "Y" THEN
#                  INITIALIZE g_errparam TO NULL 
#                  LET g_errparam.extend = "" 
#                  LET g_errparam.code   = -263 
#                  LET g_errparam.popup  = TRUE 
#                  CALL cl_err()
# 
#                  CANCEL DELETE
#               END IF
#               
#               #add-point:單身刪除前
{<point name="input.body.b_delete" mark="Y"/>}
#               #end add-point 
#               
#               DELETE FROM xccd_t
#                WHERE xccdent = g_enterprise AND  = g_xccd_m.xccdld AND
#                                           = g_xccd_m.xccd001 AND
#                                           = g_xccd_m.xccd003 AND
#                                           = g_xccd_m.xccd004 AND
#                                           = g_xccd_m.xccd005 AND
# 
#                      xccdld = g_xccd_d_t.xccdld
#                  AND xccd001 = g_xccd_d_t.xccd001
#                  AND xccd003 = g_xccd_d_t.xccd003
#                  AND xccd004 = g_xccd_d_t.xccd004
#                  AND xccd005 = g_xccd_d_t.xccd005
# 
#                  
#               #add-point:單身刪除中
{<point name="input.body.m_delete"/>}
#               #end add-point 
#               
#               IF SQLCA.sqlcode THEN
#                  INITIALIZE g_errparam TO NULL 
#                  LET g_errparam.extend = "xccd_t" 
#                  LET g_errparam.code   = SQLCA.sqlcode 
#                  LET g_errparam.popup  = TRUE 
#                  CALL cl_err()
# 
#                  CALL s_transaction_end('N','0')
#                  CANCEL DELETE   
#               ELSE
#                  LET g_rec_b = g_rec_b-1
#                  INITIALIZE l_var_keys_bak TO NULL 
#                  INITIALIZE l_field_keys TO NULL 
#                  LET l_field_keys[01] = 'xcbbcomp'
#                  LET l_field_keys[02] = 'xcbb001'
#                  LET l_field_keys[03] = 'xcbb002'
#                  LET l_field_keys[04] = 'xcbb003'
#                  LET l_field_keys[05] = 'xcbb004'
#                  LET l_var_keys_bak[01] = g_detail_multi_table_t.xcbbcomp
#                  LET l_var_keys_bak[02] = g_detail_multi_table_t.xcbb001
#                  LET l_var_keys_bak[03] = g_detail_multi_table_t.xcbb002
#                  LET l_var_keys_bak[04] = g_detail_multi_table_t.xcbb003
#                  LET l_var_keys_bak[05] = g_detail_multi_table_t.xcbb004
#                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'xcbb_t')
# 
#                  #add-point:單身刪除後
{<point name="input.body.a_delete"/>}
#                  #end add-point
#                  CALL s_transaction_end('Y','0')
#               END IF 
#               CLOSE axcq540_bcl
#               LET l_count = g_xccd_d.getLength()
#                              INITIALIZE gs_keys TO NULL 
#               LET gs_keys[1] = g_xccd_m.xccdld
#               LET gs_keys[2] = g_xccd_m.xccd001
#               LET gs_keys[3] = g_xccd_m.xccd003
#               LET gs_keys[4] = g_xccd_m.xccd004
#               LET gs_keys[5] = g_xccd_m.xccd005
#               LET gs_keys[6] = g_xccd_d[g_detail_idx].xccdld
#               LET gs_keys[7] = g_xccd_d[g_detail_idx].xccd001
#               LET gs_keys[8] = g_xccd_d[g_detail_idx].xccd003
#               LET gs_keys[9] = g_xccd_d[g_detail_idx].xccd004
#               LET gs_keys[10] = g_xccd_d[g_detail_idx].xccd005
# 
#            END IF 
#              
#         AFTER DELETE 
#            IF l_cmd <> 'd' THEN
#               #add-point:單身刪除後2
{<point name="input.body.after_delete"/>}
#               #end add-point
#                              CALL axcq540_delete_b('xccd_t',gs_keys,"'1'")
#            END IF
#            #如果是最後一筆
#            IF l_ac = (g_xccd_d.getLength() + 1) THEN
#               CALL FGL_SET_ARR_CURR(l_ac-1)
#            END IF
# 
#                  #此段落由子樣板a02產生
#         AFTER FIELD sfaa068
#            
#            #add-point:AFTER FIELD sfaa068
{<point name="input.a.page1.sfaa068" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD sfaa068
#            #add-point:BEFORE FIELD sfaa068
{<point name="input.b.page1.sfaa068" />}
#            #END add-point
# 
#         #此段落由子樣板a04產生
#         ON CHANGE sfaa068
#            #add-point:ON CHANGE sfaa068
{<point name="input.g.page1.sfaa068" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xccd006
#            #add-point:BEFORE FIELD xccd006
{<point name="input.b.page1.xccd006" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xccd006
#            
#            #add-point:AFTER FIELD xccd006
{<point name="input.a.page1.xccd006" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xccd006
#            #add-point:ON CHANGE xccd006
{<point name="input.g.page1.xccd006" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce007
#            
#            #add-point:AFTER FIELD xcce007
{<point name="input.a.page1.xcce007" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce007
#            #add-point:BEFORE FIELD xcce007
{<point name="input.b.page1.xcce007" />}
#            #END add-point
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce007
#            #add-point:ON CHANGE xcce007
{<point name="input.g.page1.xcce007" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce008
#            #add-point:BEFORE FIELD xcce008
{<point name="input.b.page1.xcce008" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce008
#            
#            #add-point:AFTER FIELD xcce008
{<point name="input.a.page1.xcce008" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce008
#            #add-point:ON CHANGE xcce008
{<point name="input.g.page1.xcce008" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce009
#            #add-point:BEFORE FIELD xcce009
{<point name="input.b.page1.xcce009" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce009
#            
#            #add-point:AFTER FIELD xcce009
{<point name="input.a.page1.xcce009" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce009
#            #add-point:ON CHANGE xcce009
{<point name="input.g.page1.xcce009" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcbb005
#            
#            #add-point:AFTER FIELD xcbb005
{<point name="input.a.page1.xcbb005" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcbb005
#            #add-point:BEFORE FIELD xcbb005
{<point name="input.b.page1.xcbb005" />}
#            #END add-point
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcbb005
#            #add-point:ON CHANGE xcbb005
{<point name="input.g.page1.xcbb005" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xccd002
#            #add-point:BEFORE FIELD xccd002
{<point name="input.b.page1.xccd002" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xccd002
#            
#            #add-point:AFTER FIELD xccd002
{<point name="input.a.page1.xccd002" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xccd002
#            #add-point:ON CHANGE xccd002
{<point name="input.g.page1.xccd002" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce101
#            #add-point:BEFORE FIELD xcce101
{<point name="input.b.page1.xcce101" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce101
#            
#            #add-point:AFTER FIELD xcce101
{<point name="input.a.page1.xcce101" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce101
#            #add-point:ON CHANGE xcce101
{<point name="input.g.page1.xcce101" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce102
#            #add-point:BEFORE FIELD xcce102
{<point name="input.b.page1.xcce102" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce102
#            
#            #add-point:AFTER FIELD xcce102
{<point name="input.a.page1.xcce102" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce102
#            #add-point:ON CHANGE xcce102
{<point name="input.g.page1.xcce102" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce201
#            #add-point:BEFORE FIELD xcce201
{<point name="input.b.page1.xcce201" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce201
#            
#            #add-point:AFTER FIELD xcce201
{<point name="input.a.page1.xcce201" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce201
#            #add-point:ON CHANGE xcce201
{<point name="input.g.page1.xcce201" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce202
#            #add-point:BEFORE FIELD xcce202
{<point name="input.b.page1.xcce202" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce202
#            
#            #add-point:AFTER FIELD xcce202
{<point name="input.a.page1.xcce202" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce202
#            #add-point:ON CHANGE xcce202
{<point name="input.g.page1.xcce202" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce301
#            #add-point:BEFORE FIELD xcce301
{<point name="input.b.page1.xcce301" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce301
#            
#            #add-point:AFTER FIELD xcce301
{<point name="input.a.page1.xcce301" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce301
#            #add-point:ON CHANGE xcce301
{<point name="input.g.page1.xcce301" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce302
#            #add-point:BEFORE FIELD xcce302
{<point name="input.b.page1.xcce302" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce302
#            
#            #add-point:AFTER FIELD xcce302
{<point name="input.a.page1.xcce302" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce302
#            #add-point:ON CHANGE xcce302
{<point name="input.g.page1.xcce302" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce303
#            #add-point:BEFORE FIELD xcce303
{<point name="input.b.page1.xcce303" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce303
#            
#            #add-point:AFTER FIELD xcce303
{<point name="input.a.page1.xcce303" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce303
#            #add-point:ON CHANGE xcce303
{<point name="input.g.page1.xcce303" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce304
#            #add-point:BEFORE FIELD xcce304
{<point name="input.b.page1.xcce304" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce304
#            
#            #add-point:AFTER FIELD xcce304
{<point name="input.a.page1.xcce304" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce304
#            #add-point:ON CHANGE xcce304
{<point name="input.g.page1.xcce304" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce307
#            #add-point:BEFORE FIELD xcce307
{<point name="input.b.page1.xcce307" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce307
#            
#            #add-point:AFTER FIELD xcce307
{<point name="input.a.page1.xcce307" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce307
#            #add-point:ON CHANGE xcce307
{<point name="input.g.page1.xcce307" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce308
#            #add-point:BEFORE FIELD xcce308
{<point name="input.b.page1.xcce308" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce308
#            
#            #add-point:AFTER FIELD xcce308
{<point name="input.a.page1.xcce308" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce308
#            #add-point:ON CHANGE xcce308
{<point name="input.g.page1.xcce308" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce901
#            #add-point:BEFORE FIELD xcce901
{<point name="input.b.page1.xcce901" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce901
#            
#            #add-point:AFTER FIELD xcce901
{<point name="input.a.page1.xcce901" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce901
#            #add-point:ON CHANGE xcce901
{<point name="input.g.page1.xcce901" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce902
#            #add-point:BEFORE FIELD xcce902
{<point name="input.b.page1.xcce902" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce902
#            
#            #add-point:AFTER FIELD xcce902
{<point name="input.a.page1.xcce902" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce902
#            #add-point:ON CHANGE xcce902
{<point name="input.g.page1.xcce902" />}
#            #END add-point
# 
# 
#                  #Ctrlp:input.c.page1.sfaa068
#         ON ACTION controlp INFIELD sfaa068
#            #add-point:ON ACTION controlp INFIELD sfaa068
{<point name="input.c.page1.sfaa068" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xccd006
#         ON ACTION controlp INFIELD xccd006
#            #add-point:ON ACTION controlp INFIELD xccd006
{<point name="input.c.page1.xccd006" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xcce007
#         ON ACTION controlp INFIELD xcce007
#            #add-point:ON ACTION controlp INFIELD xcce007
{<point name="input.c.page1.xcce007" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xcce008
#         ON ACTION controlp INFIELD xcce008
#            #add-point:ON ACTION controlp INFIELD xcce008
{<point name="input.c.page1.xcce008" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xcce009
#         ON ACTION controlp INFIELD xcce009
#            #add-point:ON ACTION controlp INFIELD xcce009
{<point name="input.c.page1.xcce009" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xcbb005
#         ON ACTION controlp INFIELD xcbb005
#            #add-point:ON ACTION controlp INFIELD xcbb005
{<point name="input.c.page1.xcbb005" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xccd002
#         ON ACTION controlp INFIELD xccd002
#            #add-point:ON ACTION controlp INFIELD xccd002
{<point name="input.c.page1.xccd002" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xcce101
#         ON ACTION controlp INFIELD xcce101
#            #add-point:ON ACTION controlp INFIELD xcce101
{<point name="input.c.page1.xcce101" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xcce102
#         ON ACTION controlp INFIELD xcce102
#            #add-point:ON ACTION controlp INFIELD xcce102
{<point name="input.c.page1.xcce102" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xcce201
#         ON ACTION controlp INFIELD xcce201
#            #add-point:ON ACTION controlp INFIELD xcce201
{<point name="input.c.page1.xcce201" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xcce202
#         ON ACTION controlp INFIELD xcce202
#            #add-point:ON ACTION controlp INFIELD xcce202
{<point name="input.c.page1.xcce202" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xcce301
#         ON ACTION controlp INFIELD xcce301
#            #add-point:ON ACTION controlp INFIELD xcce301
{<point name="input.c.page1.xcce301" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xcce302
#         ON ACTION controlp INFIELD xcce302
#            #add-point:ON ACTION controlp INFIELD xcce302
{<point name="input.c.page1.xcce302" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xcce303
#         ON ACTION controlp INFIELD xcce303
#            #add-point:ON ACTION controlp INFIELD xcce303
{<point name="input.c.page1.xcce303" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xcce304
#         ON ACTION controlp INFIELD xcce304
#            #add-point:ON ACTION controlp INFIELD xcce304
{<point name="input.c.page1.xcce304" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xcce307
#         ON ACTION controlp INFIELD xcce307
#            #add-point:ON ACTION controlp INFIELD xcce307
{<point name="input.c.page1.xcce307" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xcce308
#         ON ACTION controlp INFIELD xcce308
#            #add-point:ON ACTION controlp INFIELD xcce308
{<point name="input.c.page1.xcce308" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xcce901
#         ON ACTION controlp INFIELD xcce901
#            #add-point:ON ACTION controlp INFIELD xcce901
{<point name="input.c.page1.xcce901" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page1.xcce902
#         ON ACTION controlp INFIELD xcce902
#            #add-point:ON ACTION controlp INFIELD xcce902
{<point name="input.c.page1.xcce902" />}
#            #END add-point
# 
# 
# 
#         ON ROW CHANGE
#            IF INT_FLAG THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = '' 
#               LET g_errparam.code   = 9001 
#               LET g_errparam.popup  = FALSE 
#               CALL cl_err()
# 
#               LET INT_FLAG = 0
#               LET g_xccd_d[l_ac].* = g_xccd_d_t.*
#               CLOSE axcq540_bcl
#               CALL s_transaction_end('N','0')
#               EXIT DIALOG 
#            END IF
#              
#            IF l_lock_sw = 'Y' THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = g_xccd_d[l_ac].xccdld 
#               LET g_errparam.code   = -263 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
# 
#               LET g_xccd_d[l_ac].* = g_xccd_d_t.*
#            ELSE
#            
#               #add-point:單身修改前
{<point name="input.body.b_update" mark="Y"/>}
#               #end add-point
#               
#               #寫入修改者/修改日期資訊(單身)
#               
#      
#               UPDATE xccd_t SET (xccd006,xccd002) = (g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd003, 
#                   g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_d[l_ac].xccd006,g_xccd_d[l_ac].xccd002)
#                WHERE xccdent = g_enterprise AND  = g_xccd_m.xccdld 
#                  AND  = g_xccd_m.xccd001 
#                  AND  = g_xccd_m.xccd003 
#                  AND  = g_xccd_m.xccd004 
#                  AND  = g_xccd_m.xccd005 
# 
#                  AND xccdld = g_xccd_d_t.xccdld #項次   
#                  AND xccd001 = g_xccd_d_t.xccd001  
#                  AND xccd003 = g_xccd_d_t.xccd003  
#                  AND xccd004 = g_xccd_d_t.xccd004  
#                  AND xccd005 = g_xccd_d_t.xccd005  
# 
#                  
#               #add-point:單身修改中
{<point name="input.body.m_update"/>}
#               #end add-point
#               CASE
#                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
#                     INITIALIZE g_errparam TO NULL 
#                     LET g_errparam.extend = "xccd_t" 
#                     LET g_errparam.code   = "std-00009" 
#                     LET g_errparam.popup  = TRUE 
#                     CALL cl_err()
#                     CALL s_transaction_end('N','0')
#                     LET g_xccd_d[l_ac].* = g_xccd_d_t.*
#                  WHEN SQLCA.sqlcode #其他錯誤
#                     INITIALIZE g_errparam TO NULL 
#                     LET g_errparam.extend = "xccd_t" 
#                     LET g_errparam.code   = SQLCA.sqlcode 
#                     LET g_errparam.popup  = TRUE 
#                     CALL cl_err()                   
#                     CALL s_transaction_end('N','0')
#                     LET g_xccd_d[l_ac].* = g_xccd_d_t.*  
#                  OTHERWISE
#                                    INITIALIZE gs_keys TO NULL 
#               LET gs_keys[1] = g_xccd_m.xccdld
#               LET gs_keys_bak[1] = g_xccdld_t
#               LET gs_keys[2] = g_xccd_m.xccd001
#               LET gs_keys_bak[2] = g_xccd001_t
#               LET gs_keys[3] = g_xccd_m.xccd003
#               LET gs_keys_bak[3] = g_xccd003_t
#               LET gs_keys[4] = g_xccd_m.xccd004
#               LET gs_keys_bak[4] = g_xccd004_t
#               LET gs_keys[5] = g_xccd_m.xccd005
#               LET gs_keys_bak[5] = g_xccd005_t
#               LET gs_keys[6] = g_xccd_d[g_detail_idx].xccdld
#               LET gs_keys_bak[6] = g_xccd_d_t.xccdld
#               LET gs_keys[7] = g_xccd_d[g_detail_idx].xccd001
#               LET gs_keys_bak[7] = g_xccd_d_t.xccd001
#               LET gs_keys[8] = g_xccd_d[g_detail_idx].xccd003
#               LET gs_keys_bak[8] = g_xccd_d_t.xccd003
#               LET gs_keys[9] = g_xccd_d[g_detail_idx].xccd004
#               LET gs_keys_bak[9] = g_xccd_d_t.xccd004
#               LET gs_keys[10] = g_xccd_d[g_detail_idx].xccd005
#               LET gs_keys_bak[10] = g_xccd_d_t.xccd005
#               CALL axcq540_update_b('xccd_t',gs_keys,gs_keys_bak,"'1'")
#                     #資料多語言用-增/改
#                              INITIALIZE l_var_keys TO NULL 
#         INITIALIZE l_field_keys TO NULL 
#         INITIALIZE l_vars TO NULL 
#         INITIALIZE l_fields TO NULL 
#         INITIALIZE l_var_keys_bak TO NULL 
#         IF g_xccd_m.xccdld = g_detail_multi_table_t.sfaadocno AND
#         g_xccd_m.xccd001 = g_detail_multi_table_t.sfaa068 AND
#         g_xccd_m.xccd003 =  AND
#         g_xccd_m.xccd004 =  AND
#         g_xccd_m.xccd005 =  AND
#         g_xccd3_d[l_ac].xcci002 =  AND
#         g_xccd3_d[l_ac].xcci006 =  AND
#         g_xccd3_d[l_ac].xcci007 =  AND
#         g_xccd3_d[l_ac].xcci008 =  AND
#         g_xccd3_d[l_ac].xcci009 =  AND
#         g_xccd_d[l_ac].sfaa068 =  THEN
#         ELSE 
#            LET l_var_keys[01] = g_xccd_m.xccdld
#            LET l_field_keys[01] = 'sfaadocno'
#            LET l_vars[01] = g_xccd_d[l_ac].sfaa068
#            LET l_fields[01] = 'sfaa068'
#            LET l_vars[02] = g_site 
#            LET l_fields[02] = 'sfaasite'
#            LET l_vars[03] = g_enterprise 
#            LET l_fields[03] = 'sfaaent'
#            LET l_var_keys_bak[01] = g_detail_multi_table_t.sfaadocno
#            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'sfaa_t')
#         END IF 
#          INITIALIZE l_var_keys TO NULL 
#         INITIALIZE l_field_keys TO NULL 
#         INITIALIZE l_vars TO NULL 
#         INITIALIZE l_fields TO NULL 
#         INITIALIZE l_var_keys_bak TO NULL 
#         IF g_xccd_m.xccdld = g_detail_multi_table_t.xcceld AND
#         g_xccd_m.xccd001 = g_detail_multi_table_t.xcce001 AND
#         g_xccd_m.xccd003 = g_detail_multi_table_t.xcce002 AND
#         g_xccd_m.xccd004 = g_detail_multi_table_t.xcce003 AND
#         g_xccd_m.xccd005 = g_detail_multi_table_t.xcce004 AND
#         g_xccd3_d[l_ac].xcci002 = g_detail_multi_table_t.xcce005 AND
#         g_xccd3_d[l_ac].xcci006 = g_detail_multi_table_t.xcce006 AND
#         g_xccd3_d[l_ac].xcci007 = g_detail_multi_table_t.xcce007 AND
#         g_xccd3_d[l_ac].xcci008 = g_detail_multi_table_t.xcce008 AND
#         g_xccd3_d[l_ac].xcci009 = g_detail_multi_table_t.xcce009 AND
#         g_xccd_d[l_ac].xcce007 = g_detail_multi_table_t.xcce007 AND
#         g_xccd_d[l_ac].xcce008 = g_detail_multi_table_t.xcce008 AND
#         g_xccd_d[l_ac].xcce009 = g_detail_multi_table_t.xcce009 AND
#         g_xccd_d[l_ac].xcce101 = g_detail_multi_table_t.xcce101 AND
#         g_xccd_d[l_ac].xcce102 = g_detail_multi_table_t.xcce102 AND
#         g_xccd_d[l_ac].xcce201 = g_detail_multi_table_t.xcce201 AND
#         g_xccd_d[l_ac].xcce202 = g_detail_multi_table_t.xcce202 AND
#         g_xccd_d[l_ac].xcce301 = g_detail_multi_table_t.xcce301 AND
#         g_xccd_d[l_ac].xcce302 = g_detail_multi_table_t.xcce302 AND
#         g_xccd_d[l_ac].xcce303 = g_detail_multi_table_t.xcce303 AND
#         g_xccd_d[l_ac].xcce304 = g_detail_multi_table_t.xcce304 AND
#         g_xccd_d[l_ac].xcce307 = g_detail_multi_table_t.xcce307 AND
#         g_xccd_d[l_ac].xcce308 = g_detail_multi_table_t.xcce308 AND
#         g_xccd_d[l_ac].xcce901 = g_detail_multi_table_t.xcce901 AND
#         g_xccd_d[l_ac].xcce902 = g_detail_multi_table_t.xcce902 THEN
#         ELSE 
#            LET l_var_keys[01] = g_xccd_m.xccdld
#            LET l_field_keys[01] = 'xcceld'
#            LET l_var_keys[02] = g_xccd_m.xccd001
#            LET l_field_keys[02] = 'xcce001'
#            LET l_var_keys[03] = g_xccd_m.xccd003
#            LET l_field_keys[03] = 'xcce002'
#            LET l_var_keys[04] = g_xccd_m.xccd004
#            LET l_field_keys[04] = 'xcce003'
#            LET l_var_keys[05] = g_xccd_m.xccd005
#            LET l_field_keys[05] = 'xcce004'
#            LET l_var_keys[06] = g_xccd3_d[l_ac].xcci002
#            LET l_field_keys[06] = 'xcce005'
#            LET l_var_keys[07] = g_xccd3_d[l_ac].xcci006
#            LET l_field_keys[07] = 'xcce006'
#            LET l_var_keys[08] = g_xccd3_d[l_ac].xcci007
#            LET l_field_keys[08] = 'xcce007'
#            LET l_var_keys[09] = g_xccd3_d[l_ac].xcci008
#            LET l_field_keys[09] = 'xcce008'
#            LET l_var_keys[10] = g_xccd3_d[l_ac].xcci009
#            LET l_field_keys[10] = 'xcce009'
#            LET l_vars[01] = g_xccd_d[l_ac].xcce007
#            LET l_fields[01] = 'xcce007'
#            LET l_vars[02] = g_xccd_d[l_ac].xcce008
#            LET l_fields[02] = 'xcce008'
#            LET l_vars[03] = g_xccd_d[l_ac].xcce009
#            LET l_fields[03] = 'xcce009'
#            LET l_vars[04] = g_xccd_d[l_ac].xcce101
#            LET l_fields[04] = 'xcce101'
#            LET l_vars[05] = g_xccd_d[l_ac].xcce102
#            LET l_fields[05] = 'xcce102'
#            LET l_vars[06] = g_xccd_d[l_ac].xcce201
#            LET l_fields[06] = 'xcce201'
#            LET l_vars[07] = g_xccd_d[l_ac].xcce202
#            LET l_fields[07] = 'xcce202'
#            LET l_vars[08] = g_xccd_d[l_ac].xcce301
#            LET l_fields[08] = 'xcce301'
#            LET l_vars[09] = g_xccd_d[l_ac].xcce302
#            LET l_fields[09] = 'xcce302'
#            LET l_vars[10] = g_xccd_d[l_ac].xcce303
#            LET l_fields[10] = 'xcce303'
#            LET l_vars[11] = g_xccd_d[l_ac].xcce304
#            LET l_fields[11] = 'xcce304'
#            LET l_vars[12] = g_xccd_d[l_ac].xcce307
#            LET l_fields[12] = 'xcce307'
#            LET l_vars[13] = g_xccd_d[l_ac].xcce308
#            LET l_fields[13] = 'xcce308'
#            LET l_vars[14] = g_xccd_d[l_ac].xcce901
#            LET l_fields[14] = 'xcce901'
#            LET l_vars[15] = g_xccd_d[l_ac].xcce902
#            LET l_fields[15] = 'xcce902'
#            LET l_vars[16] = g_enterprise 
#            LET l_fields[16] = 'xcceent'
#            LET l_var_keys_bak[01] = g_detail_multi_table_t.xcceld
#            LET l_var_keys_bak[02] = g_detail_multi_table_t.xcce001
#            LET l_var_keys_bak[03] = g_detail_multi_table_t.xcce002
#            LET l_var_keys_bak[04] = g_detail_multi_table_t.xcce003
#            LET l_var_keys_bak[05] = g_detail_multi_table_t.xcce004
#            LET l_var_keys_bak[06] = g_detail_multi_table_t.xcce005
#            LET l_var_keys_bak[07] = g_detail_multi_table_t.xcce006
#            LET l_var_keys_bak[08] = g_detail_multi_table_t.xcce007
#            LET l_var_keys_bak[09] = g_detail_multi_table_t.xcce008
#            LET l_var_keys_bak[10] = g_detail_multi_table_t.xcce009
#            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'xcce_t')
#         END IF 
#          INITIALIZE l_var_keys TO NULL 
#         INITIALIZE l_field_keys TO NULL 
#         INITIALIZE l_vars TO NULL 
#         INITIALIZE l_fields TO NULL 
#         INITIALIZE l_var_keys_bak TO NULL 
#         IF g_xccd_m.xccdld = g_detail_multi_table_t.xcbbcomp AND
#         g_xccd_m.xccd001 = g_detail_multi_table_t.xcbb001 AND
#         g_xccd_m.xccd003 = g_detail_multi_table_t.xcbb002 AND
#         g_xccd_m.xccd004 = g_detail_multi_table_t.xcbb003 AND
#         g_xccd_m.xccd005 = g_detail_multi_table_t.xcbb004 AND
#         g_xccd3_d[l_ac].xcci002 = g_detail_multi_table_t.xcbb005 AND
#         g_xccd3_d[l_ac].xcci006 =  AND
#         g_xccd3_d[l_ac].xcci007 =  AND
#         g_xccd3_d[l_ac].xcci008 =  AND
#         g_xccd3_d[l_ac].xcci009 =  AND
#         g_xccd_d[l_ac].xcbb005 =  THEN
#         ELSE 
#            LET l_var_keys[01] = g_xccd_m.xccdld
#            LET l_field_keys[01] = 'xcbbcomp'
#            LET l_var_keys[02] = g_xccd_m.xccd001
#            LET l_field_keys[02] = 'xcbb001'
#            LET l_var_keys[03] = g_xccd_m.xccd003
#            LET l_field_keys[03] = 'xcbb002'
#            LET l_var_keys[04] = g_xccd_m.xccd004
#            LET l_field_keys[04] = 'xcbb003'
#            LET l_var_keys[05] = g_xccd_m.xccd005
#            LET l_field_keys[05] = 'xcbb004'
#            LET l_vars[01] = g_xccd_d[l_ac].xcbb005
#            LET l_fields[01] = 'xcbb005'
#            LET l_vars[02] = g_enterprise 
#            LET l_fields[02] = 'xcbbent'
#            LET l_var_keys_bak[01] = g_detail_multi_table_t.xcbbcomp
#            LET l_var_keys_bak[02] = g_detail_multi_table_t.xcbb001
#            LET l_var_keys_bak[03] = g_detail_multi_table_t.xcbb002
#            LET l_var_keys_bak[04] = g_detail_multi_table_t.xcbb003
#            LET l_var_keys_bak[05] = g_detail_multi_table_t.xcbb004
#            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'xcbb_t')
#         END IF 
# 
#               END CASE
#               
#               #修改歷程記錄
#               LET g_log1 = util.JSON.stringify(g_xccd_m),util.JSON.stringify(g_xccd_d_t)
#               LET g_log2 = util.JSON.stringify(g_xccd_m),util.JSON.stringify(g_xccd_d[l_ac])
#               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
#                  CALL s_transaction_end('N','0')
#               END IF
#               
#               #add-point:單身修改後
{<point name="input.body.a_update"/>}
#               #end add-point
# 
#            END IF
#            
#         AFTER ROW
#            #add-point:單身after_row
{<point name="input.body.after_row"/>}
#            #end add-point
#            CALL axcq540_unlock_b("xccd_t","'1'")
#            CALL s_transaction_end('Y','0')
#            #其他table進行unlock
#            #add-point:單身after_row2
{<point name="input.body.after_row2"/>}
#            #end add-point
#              
#         AFTER INPUT
#            #add-point:input段after input 
{<point name="input.body.after_input"/>}
#            #end add-point 
# 
#         ON ACTION controlo    
#            CALL FGL_SET_ARR_CURR(g_xccd_d.getLength()+1)
#            LET lb_reproduce = TRUE
#            LET li_reproduce = l_ac
#            LET li_reproduce_target = g_xccd_d.getLength()+1
#            
#         #ON ACTION cancel
#         #   LET INT_FLAG = 1
#         #   LET g_detail_idx = 1
#         #   EXIT DIALOG 
# 
#      END INPUT
#      
#      INPUT ARRAY g_xccd2_d FROM s_detail2.*
#         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
#                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
#
#                 DELETE ROW = l_allow_delete,
#                 APPEND ROW = l_allow_insert)
#                 
#         #自訂ACTION(detail_input,page_2)
#         
#         
#         BEFORE INPUT
#            #add-point:資料輸入前
{<point name="input.body2.before_input2"/>}
#            #end add-point
#            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
#              CALL FGL_SET_ARR_CURR(g_xccd2_d.getLength()+1) 
#              LET g_insert = 'N' 
#           END IF 
# 
#            CALL axcq540_b_fill()
#            LET g_rec_b = g_xccd2_d.getLength()
#            #add-point:資料輸入前
{<point name="input.body2.before_input"/>}
#            #end add-point
#            
#         BEFORE INSERT
#            
#            LET l_insert = TRUE
#            LET l_n = ARR_COUNT()
#            LET l_cmd = 'a'
#            INITIALIZE g_xccd2_d[l_ac].* TO NULL 
#            INITIALIZE g_xccd2_d_t.* TO NULL 
#            INITIALIZE g_xccd2_d_o.* TO NULL 
#            #公用欄位給值(單身2)
#            
#            #自定義預設值(單身2)
#            
#            #add-point:modify段before備份
{<point name="input.body2.insert.before_bak"/>}
#            #end add-point
#            LET g_xccd2_d_t.* = g_xccd2_d[l_ac].*     #新輸入資料
#            LET g_xccd2_d_o.* = g_xccd2_d[l_ac].*     #新輸入資料
#            CALL cl_show_fld_cont()
#            CALL axcq540_set_entry_b(l_cmd)
#            #add-point:modify段after_set_entry_b
{<point name="input.body2.insert.after_set_entry_b"/>}
#            #end add-point
#            CALL axcq540_set_no_entry_b(l_cmd)
#            IF lb_reproduce THEN
#               LET lb_reproduce = FALSE
#               LET g_xccd2_d[li_reproduce_target].* = g_xccd2_d[li_reproduce].*
# 
#               LET g_xccd2_d[li_reproduce_target].xcce002 = NULL
#               LET g_xccd2_d[li_reproduce_target].xcce006 = NULL
#               LET g_xccd2_d[li_reproduce_target].xcce007 = NULL
#               LET g_xccd2_d[li_reproduce_target].xcce008 = NULL
#               LET g_xccd2_d[li_reproduce_target].xcce009 = NULL
#            END IF
#            LET g_detail_multi_table_t.xcbbcomp = g_xccd_m.xccdld
#LET g_detail_multi_table_t.xcbb001 = g_xccd_m.xccd001
#LET g_detail_multi_table_t.xcbb002 = g_xccd_m.xccd003
#LET g_detail_multi_table_t.xcbb003 = g_xccd_m.xccd004
#LET g_detail_multi_table_t.xcbb004 = g_xccd_m.xccd005
#LET g_detail_multi_table_t.xcbb005 = g_xccd3_d[l_ac].xcci002
# 
#            #add-point:modify段before insert
{<point name="input.body2.before_insert"/>}
#            #end add-point  
#            
#         BEFORE ROW     
#            #add-point:modify段before row2
{<point name="input.body2.before_row2"/>}
#            #end add-point  
#            LET l_insert = FALSE
#            LET l_cmd = ''
#            LET l_ac = ARR_CURR()
#            LET g_detail_idx = l_ac
#              
#            LET l_lock_sw = 'N'            #DEFAULT
#            LET l_n = ARR_COUNT()
#            DISPLAY l_ac TO FORMONLY.idx
#         
#            CALL s_transaction_begin()
#            OPEN axcq540_cl USING g_enterprise,g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005
#            IF STATUS THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = "OPEN axcq540_cl:" 
#               LET g_errparam.code   = STATUS 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
#               CLOSE axcq540_cl
#               CALL s_transaction_end('N','0')
#               RETURN
#            END IF
#            
#            LET g_rec_b = g_xccd2_d.getLength()
#            
#            IF g_rec_b >= l_ac 
#               AND g_xccd2_d[l_ac].xcce002 IS NOT NULL
#               AND g_xccd2_d[l_ac].xcce006 IS NOT NULL
#               AND g_xccd2_d[l_ac].xcce007 IS NOT NULL
#               AND g_xccd2_d[l_ac].xcce008 IS NOT NULL
#               AND g_xccd2_d[l_ac].xcce009 IS NOT NULL
#            THEN 
#               LET l_cmd='u'
#               LET g_xccd2_d_t.* = g_xccd2_d[l_ac].*  #BACKUP
#               LET g_xccd2_d_o.* = g_xccd2_d[l_ac].*  #BACKUP
#               CALL axcq540_set_entry_b(l_cmd)
#               #add-point:modify段after_set_entry_b
{<point name="input.body2.after_set_entry_b"/>}
#               #end add-point  
#               CALL axcq540_set_no_entry_b(l_cmd)
#               IF NOT axcq540_lock_b("xcce_t","'2'") THEN
#                  LET l_lock_sw='Y'
#               ELSE
#                  FETCH axcq540_bcl2 INTO g_xccd2_d[l_ac].xcce006,g_xccd2_d[l_ac].xcce007,g_xccd2_d[l_ac].xcce008, 
#                      g_xccd2_d[l_ac].xcce009,g_xccd2_d[l_ac].xcce002,g_xccd2_d[l_ac].xcce101,g_xccd2_d[l_ac].xcce102a, 
#                      g_xccd2_d[l_ac].xcce102b,g_xccd2_d[l_ac].xcce102c,g_xccd2_d[l_ac].xcce102d,g_xccd2_d[l_ac].xcce102e, 
#                      g_xccd2_d[l_ac].xcce102f,g_xccd2_d[l_ac].xcce102g,g_xccd2_d[l_ac].xcce102h,g_xccd2_d[l_ac].xcce102, 
#                      g_xccd2_d[l_ac].xcce201,g_xccd2_d[l_ac].xcce202a,g_xccd2_d[l_ac].xcce202b,g_xccd2_d[l_ac].xcce202c, 
#                      g_xccd2_d[l_ac].xcce202d,g_xccd2_d[l_ac].xcce202e,g_xccd2_d[l_ac].xcce202f,g_xccd2_d[l_ac].xcce202g, 
#                      g_xccd2_d[l_ac].xcce202h,g_xccd2_d[l_ac].xcce202,g_xccd2_d[l_ac].xcce301,g_xccd2_d[l_ac].xcce302a, 
#                      g_xccd2_d[l_ac].xcce302b,g_xccd2_d[l_ac].xcce302c,g_xccd2_d[l_ac].xcce302d,g_xccd2_d[l_ac].xcce302e, 
#                      g_xccd2_d[l_ac].xcce302f,g_xccd2_d[l_ac].xcce302g,g_xccd2_d[l_ac].xcce302h,g_xccd2_d[l_ac].xcce302, 
#                      g_xccd2_d[l_ac].xcce303,g_xccd2_d[l_ac].xcce304a,g_xccd2_d[l_ac].xcce304b,g_xccd2_d[l_ac].xcce304c, 
#                      g_xccd2_d[l_ac].xcce304d,g_xccd2_d[l_ac].xcce304e,g_xccd2_d[l_ac].xcce304f,g_xccd2_d[l_ac].xcce304g, 
#                      g_xccd2_d[l_ac].xcce304h,g_xccd2_d[l_ac].xcce304,g_xccd2_d[l_ac].xcce307,g_xccd2_d[l_ac].xcce308a, 
#                      g_xccd2_d[l_ac].xcce308b,g_xccd2_d[l_ac].xcce308c,g_xccd2_d[l_ac].xcce308d,g_xccd2_d[l_ac].xcce308e, 
#                      g_xccd2_d[l_ac].xcce308f,g_xccd2_d[l_ac].xcce308g,g_xccd2_d[l_ac].xcce308h,g_xccd2_d[l_ac].xcce308, 
#                      g_xccd2_d[l_ac].xcce901,g_xccd2_d[l_ac].xcce902a,g_xccd2_d[l_ac].xcce902b,g_xccd2_d[l_ac].xcce902c, 
#                      g_xccd2_d[l_ac].xcce902d,g_xccd2_d[l_ac].xcce902e,g_xccd2_d[l_ac].xcce902f,g_xccd2_d[l_ac].xcce902g, 
#                      g_xccd2_d[l_ac].xcce902h,g_xccd2_d[l_ac].xcce902
#                  IF SQLCA.sqlcode THEN
#                     INITIALIZE g_errparam TO NULL 
#                     LET g_errparam.extend = '' 
#                     LET g_errparam.code   = SQLCA.sqlcode 
#                     LET g_errparam.popup  = TRUE 
#                     CALL cl_err()
#                     LET l_lock_sw = "Y"
#                  END IF
#                  
#                  LET g_bfill = "N"
#                  CALL axcq540_show()
#                  LET g_bfill = "Y"
#                  
#                  CALL cl_show_fld_cont()
#               END IF
#            ELSE
#               LET l_cmd='a'
#            END IF
#            #add-point:modify段before row
{<point name="input.body2.before_row"/>}
#            #end add-point  
#            #其他table資料備份(確定是否更改用)
#            LET g_detail_multi_table_t.xcbbcomp = g_xccd_m.xccdld
#LET g_detail_multi_table_t.xcbb001 = g_xccd_m.xccd001
#LET g_detail_multi_table_t.xcbb002 = g_xccd_m.xccd003
#LET g_detail_multi_table_t.xcbb003 = g_xccd_m.xccd004
#LET g_detail_multi_table_t.xcbb004 = g_xccd_m.xccd005
#LET g_detail_multi_table_t.xcbb005 = g_xccd3_d[l_ac].xcci002
# 
#            #其他table進行lock
#            
#            
#         BEFORE DELETE                            #是否取消單身
#            IF l_cmd = 'a' THEN
#               LET l_cmd='d'
#            ELSE
#               IF NOT cl_ask_del_detail() THEN
#                  CANCEL DELETE
#               END IF
#               IF l_lock_sw = "Y" THEN
#                  INITIALIZE g_errparam TO NULL 
#                  LET g_errparam.extend = "" 
#                  LET g_errparam.code   = -263 
#                  LET g_errparam.popup  = TRUE 
#                  CALL cl_err()
#                  CANCEL DELETE
#               END IF
#               
#               #add-point:單身2刪除前
{<point name="input.body2.b_delete" mark="Y"/>}
#               #end add-point    
#               
#               DELETE FROM xcce_t
#                WHERE xcceent = g_enterprise AND xcceld = g_xccd_m.xccdld AND
#                                          xcce001 = g_xccd_m.xccd001 AND
#                                          xcce003 = g_xccd_m.xccd003 AND
#                                          xcce004 = g_xccd_m.xccd004 AND
#                                          xcce005 = g_xccd_m.xccd005 AND
#                      xcce002 = g_xccd2_d_t.xcce002
#                  AND xcce006 = g_xccd2_d_t.xcce006
#                  AND xcce007 = g_xccd2_d_t.xcce007
#                  AND xcce008 = g_xccd2_d_t.xcce008
#                  AND xcce009 = g_xccd2_d_t.xcce009
#                  
#               #add-point:單身2刪除中
{<point name="input.body2.m_delete"/>}
#               #end add-point    
#                  
#               IF SQLCA.sqlcode THEN
#                  INITIALIZE g_errparam TO NULL 
#                  LET g_errparam.extend = "xccd_t" 
#                  LET g_errparam.code   = SQLCA.sqlcode 
#                  LET g_errparam.popup  = TRUE 
#                  CALL cl_err()
#                  CALL s_transaction_end('N','0')
#                  CANCEL DELETE   
#               ELSE
#                  LET g_rec_b = g_rec_b-1
#                  INITIALIZE l_var_keys_bak TO NULL 
#                  INITIALIZE l_field_keys TO NULL 
#                  LET l_field_keys[01] = 'xcbbcomp'
#                  LET l_field_keys[02] = 'xcbb001'
#                  LET l_field_keys[03] = 'xcbb002'
#                  LET l_field_keys[04] = 'xcbb003'
#                  LET l_field_keys[05] = 'xcbb004'
#                  LET l_var_keys_bak[01] = g_detail_multi_table_t.xcbbcomp
#                  LET l_var_keys_bak[02] = g_detail_multi_table_t.xcbb001
#                  LET l_var_keys_bak[03] = g_detail_multi_table_t.xcbb002
#                  LET l_var_keys_bak[04] = g_detail_multi_table_t.xcbb003
#                  LET l_var_keys_bak[05] = g_detail_multi_table_t.xcbb004
#                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'xcbb_t')
# 
#                  #add-point:單身2刪除後
{<point name="input.body2.a_delete"/>}
#                  #end add-point
#                  CALL s_transaction_end('Y','0')
#               END IF 
#               CLOSE axcq540_bcl
#               LET l_count = g_xccd_d.getLength()
#                              INITIALIZE gs_keys TO NULL 
#               LET gs_keys[1] = g_xccd_m.xccdld
#               LET gs_keys[2] = g_xccd_m.xccd001
#               LET gs_keys[3] = g_xccd_m.xccd003
#               LET gs_keys[4] = g_xccd_m.xccd004
#               LET gs_keys[5] = g_xccd_m.xccd005
#               LET gs_keys[6] = g_xccd2_d[g_detail_idx].xcce002
#               LET gs_keys[7] = g_xccd2_d[g_detail_idx].xcce006
#               LET gs_keys[8] = g_xccd2_d[g_detail_idx].xcce007
#               LET gs_keys[9] = g_xccd2_d[g_detail_idx].xcce008
#               LET gs_keys[10] = g_xccd2_d[g_detail_idx].xcce009
# 
#            END IF 
#            
#         AFTER DELETE 
#            IF l_cmd <> 'd' THEN
#               #add-point:單身AFTER DELETE 
{<point name="input.body2.after_delete"/>}
#               #end add-point
#                              CALL axcq540_delete_b('xcce_t',gs_keys,"'2'")
#            END IF
#            #如果是最後一筆
#            IF l_ac = (g_xccd2_d.getLength() + 1) THEN
#               CALL FGL_SET_ARR_CURR(l_ac-1)
#            END IF
# 
#         AFTER INSERT    
#            LET l_insert = FALSE
#            IF INT_FLAG THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = '' 
#               LET g_errparam.code   = 9001 
#               LET g_errparam.popup  = FALSE 
#               CALL cl_err()
#               LET INT_FLAG = 0
#               CANCEL INSERT
#            END IF
#               
#            #add-point:單身2新增前
{<point name="input.body2.b_a_insert"/>}
#            #end add-point
#               
#            LET l_count = 1  
#            SELECT COUNT(*) INTO l_count FROM xcce_t 
#             WHERE xcceent = g_enterprise AND xcceld = g_xccd_m.xccdld
#               AND xcce001 = g_xccd_m.xccd001
#               AND xcce003 = g_xccd_m.xccd003
#               AND xcce004 = g_xccd_m.xccd004
#               AND xcce005 = g_xccd_m.xccd005
#               AND xcce002 = g_xccd2_d[l_ac].xcce002
#               AND xcce006 = g_xccd2_d[l_ac].xcce006
#               AND xcce007 = g_xccd2_d[l_ac].xcce007
#               AND xcce008 = g_xccd2_d[l_ac].xcce008
#               AND xcce009 = g_xccd2_d[l_ac].xcce009
#                
#            #資料未重複, 插入新增資料
#            IF l_count = 0 THEN 
#               #add-point:單身2新增前
{<point name="input.body2.b_insert"/>}
#               #end add-point
#            
#                              INITIALIZE gs_keys TO NULL 
#               LET gs_keys[1] = g_xccd_m.xccdld
#               LET gs_keys[2] = g_xccd_m.xccd001
#               LET gs_keys[3] = g_xccd_m.xccd003
#               LET gs_keys[4] = g_xccd_m.xccd004
#               LET gs_keys[5] = g_xccd_m.xccd005
#               LET gs_keys[6] = g_xccd2_d[g_detail_idx].xcce002
#               LET gs_keys[7] = g_xccd2_d[g_detail_idx].xcce006
#               LET gs_keys[8] = g_xccd2_d[g_detail_idx].xcce007
#               LET gs_keys[9] = g_xccd2_d[g_detail_idx].xcce008
#               LET gs_keys[10] = g_xccd2_d[g_detail_idx].xcce009
#               CALL axcq540_insert_b('xcce_t',gs_keys,"'2'")
#                           
#               #add-point:單身新增後2
{<point name="input.body2.a_insert"/>}
#               #end add-point
#            ELSE    
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = 'INSERT' 
#               LET g_errparam.code   = "std-00006" 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
#               INITIALIZE g_xccd_d[l_ac].* TO NULL
#               CALL s_transaction_end('N','0')
#               CANCEL INSERT
#            END IF
# 
#            IF SQLCA.SQLcode  THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = "xcce_t" 
#               LET g_errparam.code   = SQLCA.sqlcode 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
#               CALL s_transaction_end('N','0')                    
#               CANCEL INSERT
#            ELSE
#               #先刷新資料
#               #CALL axcq540_b_fill()
#               #資料多語言用-增/改
#               
#               #add-point:單身新增後
{<point name="input.body2.after_insert"/>}
#               #end add-point
#               CALL s_transaction_end('Y','0')
#               ERROR 'INSERT O.K'
#               LET g_rec_b = g_rec_b + 1
#            END IF
#            
#         ON ROW CHANGE 
#            IF INT_FLAG THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = '' 
#               LET g_errparam.code   = 9001 
#               LET g_errparam.popup  = FALSE 
#               CALL cl_err()
#               LET INT_FLAG = 0
#               LET g_xccd2_d[l_ac].* = g_xccd2_d_t.*
#               CLOSE axcq540_bcl2
#               CALL s_transaction_end('N','0')
#               EXIT DIALOG 
#            END IF
#            
#            IF l_lock_sw = 'Y' THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = '' 
#               LET g_errparam.code   = -263 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
#               LET g_xccd2_d[l_ac].* = g_xccd2_d_t.*
#            ELSE
#               #add-point:單身page2修改前
{<point name="input.body2.b_update" mark="Y"/>}
#               #end add-point
#               
#               #寫入修改者/修改日期資訊(單身2)
#               
#               
#               UPDATE xcce_t SET (xcceld,xcce001,xcce003,xcce004,xcce005,xcce006,xcce007,xcce008,xcce009, 
#                   xcce002,xcce101,xcce102a,xcce102b,xcce102c,xcce102d,xcce102e,xcce102f,xcce102g,xcce102h, 
#                   xcce201,xcce202a,xcce202b,xcce202c,xcce202d,xcce202e,xcce202f,xcce202g,xcce202h,xcce301, 
#                   xcce302a,xcce302b,xcce302c,xcce302d,xcce302e,xcce302f,xcce302g,xcce302h,xcce303,xcce304a, 
#                   xcce304b,xcce304c,xcce304d,xcce304e,xcce304f,xcce304g,xcce304h,xcce307,xcce308a,xcce308b, 
#                   xcce308c,xcce308d,xcce308e,xcce308f,xcce308g,xcce308h,xcce901,xcce902a,xcce902b,xcce902c, 
#                   xcce902d,xcce902e,xcce902f,xcce902g,xcce902h) = (g_xccd_m.xccdld,g_xccd_m.xccd001, 
#                   g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd2_d[l_ac].xcce006,g_xccd2_d[l_ac].xcce007, 
#                   g_xccd2_d[l_ac].xcce008,g_xccd2_d[l_ac].xcce009,g_xccd2_d[l_ac].xcce002,g_xccd2_d[l_ac].xcce101, 
#                   g_xccd2_d[l_ac].xcce102a,g_xccd2_d[l_ac].xcce102b,g_xccd2_d[l_ac].xcce102c,g_xccd2_d[l_ac].xcce102d, 
#                   g_xccd2_d[l_ac].xcce102e,g_xccd2_d[l_ac].xcce102f,g_xccd2_d[l_ac].xcce102g,g_xccd2_d[l_ac].xcce102h, 
#                   g_xccd2_d[l_ac].xcce201,g_xccd2_d[l_ac].xcce202a,g_xccd2_d[l_ac].xcce202b,g_xccd2_d[l_ac].xcce202c, 
#                   g_xccd2_d[l_ac].xcce202d,g_xccd2_d[l_ac].xcce202e,g_xccd2_d[l_ac].xcce202f,g_xccd2_d[l_ac].xcce202g, 
#                   g_xccd2_d[l_ac].xcce202h,g_xccd2_d[l_ac].xcce301,g_xccd2_d[l_ac].xcce302a,g_xccd2_d[l_ac].xcce302b, 
#                   g_xccd2_d[l_ac].xcce302c,g_xccd2_d[l_ac].xcce302d,g_xccd2_d[l_ac].xcce302e,g_xccd2_d[l_ac].xcce302f, 
#                   g_xccd2_d[l_ac].xcce302g,g_xccd2_d[l_ac].xcce302h,g_xccd2_d[l_ac].xcce303,g_xccd2_d[l_ac].xcce304a, 
#                   g_xccd2_d[l_ac].xcce304b,g_xccd2_d[l_ac].xcce304c,g_xccd2_d[l_ac].xcce304d,g_xccd2_d[l_ac].xcce304e, 
#                   g_xccd2_d[l_ac].xcce304f,g_xccd2_d[l_ac].xcce304g,g_xccd2_d[l_ac].xcce304h,g_xccd2_d[l_ac].xcce307, 
#                   g_xccd2_d[l_ac].xcce308a,g_xccd2_d[l_ac].xcce308b,g_xccd2_d[l_ac].xcce308c,g_xccd2_d[l_ac].xcce308d, 
#                   g_xccd2_d[l_ac].xcce308e,g_xccd2_d[l_ac].xcce308f,g_xccd2_d[l_ac].xcce308g,g_xccd2_d[l_ac].xcce308h, 
#                   g_xccd2_d[l_ac].xcce901,g_xccd2_d[l_ac].xcce902a,g_xccd2_d[l_ac].xcce902b,g_xccd2_d[l_ac].xcce902c, 
#                   g_xccd2_d[l_ac].xcce902d,g_xccd2_d[l_ac].xcce902e,g_xccd2_d[l_ac].xcce902f,g_xccd2_d[l_ac].xcce902g, 
#                   g_xccd2_d[l_ac].xcce902h) #自訂欄位頁簽
#                WHERE xcceent = g_enterprise AND xcceld = g_xccd_m.xccdld
#                  AND xcce001 = g_xccd_m.xccd001
#                  AND xcce003 = g_xccd_m.xccd003
#                  AND xcce004 = g_xccd_m.xccd004
#                  AND xcce005 = g_xccd_m.xccd005
#                  AND xcce002 = g_xccd2_d_t.xcce002 #項次 
#                  AND xcce006 = g_xccd2_d_t.xcce006
#                  AND xcce007 = g_xccd2_d_t.xcce007
#                  AND xcce008 = g_xccd2_d_t.xcce008
#                  AND xcce009 = g_xccd2_d_t.xcce009
#                  
#               #add-point:單身page2修改中
{<point name="input.body2.m_update"/>}
#               #end add-point
#                  
#               CASE
#                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
#                     INITIALIZE g_errparam TO NULL 
#                     LET g_errparam.extend = "xcce_t" 
#                     LET g_errparam.code   = "std-00009" 
#                     LET g_errparam.popup  = TRUE 
#                     CALL cl_err()
#                     CALL s_transaction_end('N','0')
#                     LET g_xccd2_d[l_ac].* = g_xccd2_d_t.*
#                  WHEN SQLCA.sqlcode #其他錯誤
#                     INITIALIZE g_errparam TO NULL 
#                     LET g_errparam.extend = "xcce_t" 
#                     LET g_errparam.code   = SQLCA.sqlcode 
#                     LET g_errparam.popup  = TRUE 
#                     CALL cl_err()
#                     CALL s_transaction_end('N','0')
#                     LET g_xccd2_d[l_ac].* = g_xccd2_d_t.*
#                  OTHERWISE
#                                    INITIALIZE gs_keys TO NULL 
#               LET gs_keys[1] = g_xccd_m.xccdld
#               LET gs_keys_bak[1] = g_xccdld_t
#               LET gs_keys[2] = g_xccd_m.xccd001
#               LET gs_keys_bak[2] = g_xccd001_t
#               LET gs_keys[3] = g_xccd_m.xccd003
#               LET gs_keys_bak[3] = g_xccd003_t
#               LET gs_keys[4] = g_xccd_m.xccd004
#               LET gs_keys_bak[4] = g_xccd004_t
#               LET gs_keys[5] = g_xccd_m.xccd005
#               LET gs_keys_bak[5] = g_xccd005_t
#               LET gs_keys[6] = g_xccd2_d[g_detail_idx].xcce002
#               LET gs_keys_bak[6] = g_xccd2_d_t.xcce002
#               LET gs_keys[7] = g_xccd2_d[g_detail_idx].xcce006
#               LET gs_keys_bak[7] = g_xccd2_d_t.xcce006
#               LET gs_keys[8] = g_xccd2_d[g_detail_idx].xcce007
#               LET gs_keys_bak[8] = g_xccd2_d_t.xcce007
#               LET gs_keys[9] = g_xccd2_d[g_detail_idx].xcce008
#               LET gs_keys_bak[9] = g_xccd2_d_t.xcce008
#               LET gs_keys[10] = g_xccd2_d[g_detail_idx].xcce009
#               LET gs_keys_bak[10] = g_xccd2_d_t.xcce009
#               CALL axcq540_update_b('xcce_t',gs_keys,gs_keys_bak,"'2'")
#                     #資料多語言用-增/改
#                     
#               END CASE
#               
#               #修改歷程記錄
#               LET g_log1 = util.JSON.stringify(g_xccd_m),util.JSON.stringify(g_xccd2_d_t)
#               LET g_log2 = util.JSON.stringify(g_xccd_m),util.JSON.stringify(g_xccd2_d[l_ac])
#               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
#                  CALL s_transaction_end('N','0')
#               END IF
#               
#               #add-point:單身page2修改後
{<point name="input.body2.a_update"/>}
#               #end add-point
#            END IF
#         
#                  #此段落由子樣板a01產生
#         BEFORE FIELD xcce102a
#            #add-point:BEFORE FIELD xcce102a
{<point name="input.b.page2.xcce102a" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce102a
#            
#            #add-point:AFTER FIELD xcce102a
{<point name="input.a.page2.xcce102a" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce102a
#            #add-point:ON CHANGE xcce102a
{<point name="input.g.page2.xcce102a" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce102b
#            #add-point:BEFORE FIELD xcce102b
{<point name="input.b.page2.xcce102b" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce102b
#            
#            #add-point:AFTER FIELD xcce102b
{<point name="input.a.page2.xcce102b" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce102b
#            #add-point:ON CHANGE xcce102b
{<point name="input.g.page2.xcce102b" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce102c
#            #add-point:BEFORE FIELD xcce102c
{<point name="input.b.page2.xcce102c" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce102c
#            
#            #add-point:AFTER FIELD xcce102c
{<point name="input.a.page2.xcce102c" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce102c
#            #add-point:ON CHANGE xcce102c
{<point name="input.g.page2.xcce102c" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce102d
#            #add-point:BEFORE FIELD xcce102d
{<point name="input.b.page2.xcce102d" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce102d
#            
#            #add-point:AFTER FIELD xcce102d
{<point name="input.a.page2.xcce102d" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce102d
#            #add-point:ON CHANGE xcce102d
{<point name="input.g.page2.xcce102d" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce102e
#            #add-point:BEFORE FIELD xcce102e
{<point name="input.b.page2.xcce102e" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce102e
#            
#            #add-point:AFTER FIELD xcce102e
{<point name="input.a.page2.xcce102e" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce102e
#            #add-point:ON CHANGE xcce102e
{<point name="input.g.page2.xcce102e" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce102f
#            #add-point:BEFORE FIELD xcce102f
{<point name="input.b.page2.xcce102f" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce102f
#            
#            #add-point:AFTER FIELD xcce102f
{<point name="input.a.page2.xcce102f" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce102f
#            #add-point:ON CHANGE xcce102f
{<point name="input.g.page2.xcce102f" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce102g
#            #add-point:BEFORE FIELD xcce102g
{<point name="input.b.page2.xcce102g" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce102g
#            
#            #add-point:AFTER FIELD xcce102g
{<point name="input.a.page2.xcce102g" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce102g
#            #add-point:ON CHANGE xcce102g
{<point name="input.g.page2.xcce102g" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce102h
#            #add-point:BEFORE FIELD xcce102h
{<point name="input.b.page2.xcce102h" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce102h
#            
#            #add-point:AFTER FIELD xcce102h
{<point name="input.a.page2.xcce102h" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce102h
#            #add-point:ON CHANGE xcce102h
{<point name="input.g.page2.xcce102h" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce102
#            #add-point:BEFORE FIELD xcce102
{<point name="input.b.page2.xcce102" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce102
#            
#            #add-point:AFTER FIELD xcce102
{<point name="input.a.page2.xcce102" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce102
#            #add-point:ON CHANGE xcce102
{<point name="input.g.page2.xcce102" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce201
#            #add-point:BEFORE FIELD xcce201
{<point name="input.b.page2.xcce201" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce201
#            
#            #add-point:AFTER FIELD xcce201
{<point name="input.a.page2.xcce201" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce201
#            #add-point:ON CHANGE xcce201
{<point name="input.g.page2.xcce201" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce202a
#            #add-point:BEFORE FIELD xcce202a
{<point name="input.b.page2.xcce202a" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce202a
#            
#            #add-point:AFTER FIELD xcce202a
{<point name="input.a.page2.xcce202a" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce202a
#            #add-point:ON CHANGE xcce202a
{<point name="input.g.page2.xcce202a" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce202b
#            #add-point:BEFORE FIELD xcce202b
{<point name="input.b.page2.xcce202b" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce202b
#            
#            #add-point:AFTER FIELD xcce202b
{<point name="input.a.page2.xcce202b" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce202b
#            #add-point:ON CHANGE xcce202b
{<point name="input.g.page2.xcce202b" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce202c
#            #add-point:BEFORE FIELD xcce202c
{<point name="input.b.page2.xcce202c" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce202c
#            
#            #add-point:AFTER FIELD xcce202c
{<point name="input.a.page2.xcce202c" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce202c
#            #add-point:ON CHANGE xcce202c
{<point name="input.g.page2.xcce202c" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce202d
#            #add-point:BEFORE FIELD xcce202d
{<point name="input.b.page2.xcce202d" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce202d
#            
#            #add-point:AFTER FIELD xcce202d
{<point name="input.a.page2.xcce202d" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce202d
#            #add-point:ON CHANGE xcce202d
{<point name="input.g.page2.xcce202d" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce202e
#            #add-point:BEFORE FIELD xcce202e
{<point name="input.b.page2.xcce202e" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce202e
#            
#            #add-point:AFTER FIELD xcce202e
{<point name="input.a.page2.xcce202e" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce202e
#            #add-point:ON CHANGE xcce202e
{<point name="input.g.page2.xcce202e" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce202f
#            #add-point:BEFORE FIELD xcce202f
{<point name="input.b.page2.xcce202f" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce202f
#            
#            #add-point:AFTER FIELD xcce202f
{<point name="input.a.page2.xcce202f" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce202f
#            #add-point:ON CHANGE xcce202f
{<point name="input.g.page2.xcce202f" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce202g
#            #add-point:BEFORE FIELD xcce202g
{<point name="input.b.page2.xcce202g" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce202g
#            
#            #add-point:AFTER FIELD xcce202g
{<point name="input.a.page2.xcce202g" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce202g
#            #add-point:ON CHANGE xcce202g
{<point name="input.g.page2.xcce202g" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce202h
#            #add-point:BEFORE FIELD xcce202h
{<point name="input.b.page2.xcce202h" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce202h
#            
#            #add-point:AFTER FIELD xcce202h
{<point name="input.a.page2.xcce202h" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce202h
#            #add-point:ON CHANGE xcce202h
{<point name="input.g.page2.xcce202h" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce202
#            #add-point:BEFORE FIELD xcce202
{<point name="input.b.page2.xcce202" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce202
#            
#            #add-point:AFTER FIELD xcce202
{<point name="input.a.page2.xcce202" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce202
#            #add-point:ON CHANGE xcce202
{<point name="input.g.page2.xcce202" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce301
#            #add-point:BEFORE FIELD xcce301
{<point name="input.b.page2.xcce301" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce301
#            
#            #add-point:AFTER FIELD xcce301
{<point name="input.a.page2.xcce301" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce301
#            #add-point:ON CHANGE xcce301
{<point name="input.g.page2.xcce301" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce302a
#            #add-point:BEFORE FIELD xcce302a
{<point name="input.b.page2.xcce302a" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce302a
#            
#            #add-point:AFTER FIELD xcce302a
{<point name="input.a.page2.xcce302a" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce302a
#            #add-point:ON CHANGE xcce302a
{<point name="input.g.page2.xcce302a" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce302b
#            #add-point:BEFORE FIELD xcce302b
{<point name="input.b.page2.xcce302b" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce302b
#            
#            #add-point:AFTER FIELD xcce302b
{<point name="input.a.page2.xcce302b" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce302b
#            #add-point:ON CHANGE xcce302b
{<point name="input.g.page2.xcce302b" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce302c
#            #add-point:BEFORE FIELD xcce302c
{<point name="input.b.page2.xcce302c" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce302c
#            
#            #add-point:AFTER FIELD xcce302c
{<point name="input.a.page2.xcce302c" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce302c
#            #add-point:ON CHANGE xcce302c
{<point name="input.g.page2.xcce302c" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce302d
#            #add-point:BEFORE FIELD xcce302d
{<point name="input.b.page2.xcce302d" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce302d
#            
#            #add-point:AFTER FIELD xcce302d
{<point name="input.a.page2.xcce302d" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce302d
#            #add-point:ON CHANGE xcce302d
{<point name="input.g.page2.xcce302d" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce302e
#            #add-point:BEFORE FIELD xcce302e
{<point name="input.b.page2.xcce302e" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce302e
#            
#            #add-point:AFTER FIELD xcce302e
{<point name="input.a.page2.xcce302e" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce302e
#            #add-point:ON CHANGE xcce302e
{<point name="input.g.page2.xcce302e" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce302f
#            #add-point:BEFORE FIELD xcce302f
{<point name="input.b.page2.xcce302f" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce302f
#            
#            #add-point:AFTER FIELD xcce302f
{<point name="input.a.page2.xcce302f" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce302f
#            #add-point:ON CHANGE xcce302f
{<point name="input.g.page2.xcce302f" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce302g
#            #add-point:BEFORE FIELD xcce302g
{<point name="input.b.page2.xcce302g" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce302g
#            
#            #add-point:AFTER FIELD xcce302g
{<point name="input.a.page2.xcce302g" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce302g
#            #add-point:ON CHANGE xcce302g
{<point name="input.g.page2.xcce302g" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce302h
#            #add-point:BEFORE FIELD xcce302h
{<point name="input.b.page2.xcce302h" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce302h
#            
#            #add-point:AFTER FIELD xcce302h
{<point name="input.a.page2.xcce302h" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce302h
#            #add-point:ON CHANGE xcce302h
{<point name="input.g.page2.xcce302h" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce302
#            #add-point:BEFORE FIELD xcce302
{<point name="input.b.page2.xcce302" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce302
#            
#            #add-point:AFTER FIELD xcce302
{<point name="input.a.page2.xcce302" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce302
#            #add-point:ON CHANGE xcce302
{<point name="input.g.page2.xcce302" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce303
#            #add-point:BEFORE FIELD xcce303
{<point name="input.b.page2.xcce303" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce303
#            
#            #add-point:AFTER FIELD xcce303
{<point name="input.a.page2.xcce303" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce303
#            #add-point:ON CHANGE xcce303
{<point name="input.g.page2.xcce303" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce304a
#            #add-point:BEFORE FIELD xcce304a
{<point name="input.b.page2.xcce304a" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce304a
#            
#            #add-point:AFTER FIELD xcce304a
{<point name="input.a.page2.xcce304a" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce304a
#            #add-point:ON CHANGE xcce304a
{<point name="input.g.page2.xcce304a" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce304b
#            #add-point:BEFORE FIELD xcce304b
{<point name="input.b.page2.xcce304b" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce304b
#            
#            #add-point:AFTER FIELD xcce304b
{<point name="input.a.page2.xcce304b" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce304b
#            #add-point:ON CHANGE xcce304b
{<point name="input.g.page2.xcce304b" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce304c
#            #add-point:BEFORE FIELD xcce304c
{<point name="input.b.page2.xcce304c" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce304c
#            
#            #add-point:AFTER FIELD xcce304c
{<point name="input.a.page2.xcce304c" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce304c
#            #add-point:ON CHANGE xcce304c
{<point name="input.g.page2.xcce304c" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce304d
#            #add-point:BEFORE FIELD xcce304d
{<point name="input.b.page2.xcce304d" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce304d
#            
#            #add-point:AFTER FIELD xcce304d
{<point name="input.a.page2.xcce304d" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce304d
#            #add-point:ON CHANGE xcce304d
{<point name="input.g.page2.xcce304d" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce304e
#            #add-point:BEFORE FIELD xcce304e
{<point name="input.b.page2.xcce304e" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce304e
#            
#            #add-point:AFTER FIELD xcce304e
{<point name="input.a.page2.xcce304e" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce304e
#            #add-point:ON CHANGE xcce304e
{<point name="input.g.page2.xcce304e" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce304f
#            #add-point:BEFORE FIELD xcce304f
{<point name="input.b.page2.xcce304f" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce304f
#            
#            #add-point:AFTER FIELD xcce304f
{<point name="input.a.page2.xcce304f" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce304f
#            #add-point:ON CHANGE xcce304f
{<point name="input.g.page2.xcce304f" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce304g
#            #add-point:BEFORE FIELD xcce304g
{<point name="input.b.page2.xcce304g" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce304g
#            
#            #add-point:AFTER FIELD xcce304g
{<point name="input.a.page2.xcce304g" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce304g
#            #add-point:ON CHANGE xcce304g
{<point name="input.g.page2.xcce304g" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce304h
#            #add-point:BEFORE FIELD xcce304h
{<point name="input.b.page2.xcce304h" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce304h
#            
#            #add-point:AFTER FIELD xcce304h
{<point name="input.a.page2.xcce304h" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce304h
#            #add-point:ON CHANGE xcce304h
{<point name="input.g.page2.xcce304h" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce304
#            #add-point:BEFORE FIELD xcce304
{<point name="input.b.page2.xcce304" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce304
#            
#            #add-point:AFTER FIELD xcce304
{<point name="input.a.page2.xcce304" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce304
#            #add-point:ON CHANGE xcce304
{<point name="input.g.page2.xcce304" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce307
#            #add-point:BEFORE FIELD xcce307
{<point name="input.b.page2.xcce307" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce307
#            
#            #add-point:AFTER FIELD xcce307
{<point name="input.a.page2.xcce307" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce307
#            #add-point:ON CHANGE xcce307
{<point name="input.g.page2.xcce307" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce308a
#            #add-point:BEFORE FIELD xcce308a
{<point name="input.b.page2.xcce308a" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce308a
#            
#            #add-point:AFTER FIELD xcce308a
{<point name="input.a.page2.xcce308a" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce308a
#            #add-point:ON CHANGE xcce308a
{<point name="input.g.page2.xcce308a" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce308b
#            #add-point:BEFORE FIELD xcce308b
{<point name="input.b.page2.xcce308b" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce308b
#            
#            #add-point:AFTER FIELD xcce308b
{<point name="input.a.page2.xcce308b" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce308b
#            #add-point:ON CHANGE xcce308b
{<point name="input.g.page2.xcce308b" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce308c
#            #add-point:BEFORE FIELD xcce308c
{<point name="input.b.page2.xcce308c" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce308c
#            
#            #add-point:AFTER FIELD xcce308c
{<point name="input.a.page2.xcce308c" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce308c
#            #add-point:ON CHANGE xcce308c
{<point name="input.g.page2.xcce308c" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce308d
#            #add-point:BEFORE FIELD xcce308d
{<point name="input.b.page2.xcce308d" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce308d
#            
#            #add-point:AFTER FIELD xcce308d
{<point name="input.a.page2.xcce308d" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce308d
#            #add-point:ON CHANGE xcce308d
{<point name="input.g.page2.xcce308d" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce308e
#            #add-point:BEFORE FIELD xcce308e
{<point name="input.b.page2.xcce308e" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce308e
#            
#            #add-point:AFTER FIELD xcce308e
{<point name="input.a.page2.xcce308e" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce308e
#            #add-point:ON CHANGE xcce308e
{<point name="input.g.page2.xcce308e" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce308f
#            #add-point:BEFORE FIELD xcce308f
{<point name="input.b.page2.xcce308f" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce308f
#            
#            #add-point:AFTER FIELD xcce308f
{<point name="input.a.page2.xcce308f" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce308f
#            #add-point:ON CHANGE xcce308f
{<point name="input.g.page2.xcce308f" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce308g
#            #add-point:BEFORE FIELD xcce308g
{<point name="input.b.page2.xcce308g" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce308g
#            
#            #add-point:AFTER FIELD xcce308g
{<point name="input.a.page2.xcce308g" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce308g
#            #add-point:ON CHANGE xcce308g
{<point name="input.g.page2.xcce308g" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce308h
#            #add-point:BEFORE FIELD xcce308h
{<point name="input.b.page2.xcce308h" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce308h
#            
#            #add-point:AFTER FIELD xcce308h
{<point name="input.a.page2.xcce308h" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce308h
#            #add-point:ON CHANGE xcce308h
{<point name="input.g.page2.xcce308h" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce308
#            #add-point:BEFORE FIELD xcce308
{<point name="input.b.page2.xcce308" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce308
#            
#            #add-point:AFTER FIELD xcce308
{<point name="input.a.page2.xcce308" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce308
#            #add-point:ON CHANGE xcce308
{<point name="input.g.page2.xcce308" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce901
#            #add-point:BEFORE FIELD xcce901
{<point name="input.b.page2.xcce901" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce901
#            
#            #add-point:AFTER FIELD xcce901
{<point name="input.a.page2.xcce901" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce901
#            #add-point:ON CHANGE xcce901
{<point name="input.g.page2.xcce901" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce902a
#            #add-point:BEFORE FIELD xcce902a
{<point name="input.b.page2.xcce902a" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce902a
#            
#            #add-point:AFTER FIELD xcce902a
{<point name="input.a.page2.xcce902a" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce902a
#            #add-point:ON CHANGE xcce902a
{<point name="input.g.page2.xcce902a" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce902b
#            #add-point:BEFORE FIELD xcce902b
{<point name="input.b.page2.xcce902b" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce902b
#            
#            #add-point:AFTER FIELD xcce902b
{<point name="input.a.page2.xcce902b" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce902b
#            #add-point:ON CHANGE xcce902b
{<point name="input.g.page2.xcce902b" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce902c
#            #add-point:BEFORE FIELD xcce902c
{<point name="input.b.page2.xcce902c" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce902c
#            
#            #add-point:AFTER FIELD xcce902c
{<point name="input.a.page2.xcce902c" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce902c
#            #add-point:ON CHANGE xcce902c
{<point name="input.g.page2.xcce902c" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce902d
#            #add-point:BEFORE FIELD xcce902d
{<point name="input.b.page2.xcce902d" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce902d
#            
#            #add-point:AFTER FIELD xcce902d
{<point name="input.a.page2.xcce902d" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce902d
#            #add-point:ON CHANGE xcce902d
{<point name="input.g.page2.xcce902d" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce902e
#            #add-point:BEFORE FIELD xcce902e
{<point name="input.b.page2.xcce902e" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce902e
#            
#            #add-point:AFTER FIELD xcce902e
{<point name="input.a.page2.xcce902e" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce902e
#            #add-point:ON CHANGE xcce902e
{<point name="input.g.page2.xcce902e" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce902f
#            #add-point:BEFORE FIELD xcce902f
{<point name="input.b.page2.xcce902f" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce902f
#            
#            #add-point:AFTER FIELD xcce902f
{<point name="input.a.page2.xcce902f" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce902f
#            #add-point:ON CHANGE xcce902f
{<point name="input.g.page2.xcce902f" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce902g
#            #add-point:BEFORE FIELD xcce902g
{<point name="input.b.page2.xcce902g" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce902g
#            
#            #add-point:AFTER FIELD xcce902g
{<point name="input.a.page2.xcce902g" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce902g
#            #add-point:ON CHANGE xcce902g
{<point name="input.g.page2.xcce902g" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce902h
#            #add-point:BEFORE FIELD xcce902h
{<point name="input.b.page2.xcce902h" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce902h
#            
#            #add-point:AFTER FIELD xcce902h
{<point name="input.a.page2.xcce902h" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce902h
#            #add-point:ON CHANGE xcce902h
{<point name="input.g.page2.xcce902h" />}
#            #END add-point
# 
#         #此段落由子樣板a01產生
#         BEFORE FIELD xcce902
#            #add-point:BEFORE FIELD xcce902
{<point name="input.b.page2.xcce902" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcce902
#            
#            #add-point:AFTER FIELD xcce902
{<point name="input.a.page2.xcce902" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcce902
#            #add-point:ON CHANGE xcce902
{<point name="input.g.page2.xcce902" />}
#            #END add-point
# 
# 
#                  #Ctrlp:input.c.page2.xcce102a
#         ON ACTION controlp INFIELD xcce102a
#            #add-point:ON ACTION controlp INFIELD xcce102a
{<point name="input.c.page2.xcce102a" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce102b
#         ON ACTION controlp INFIELD xcce102b
#            #add-point:ON ACTION controlp INFIELD xcce102b
{<point name="input.c.page2.xcce102b" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce102c
#         ON ACTION controlp INFIELD xcce102c
#            #add-point:ON ACTION controlp INFIELD xcce102c
{<point name="input.c.page2.xcce102c" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce102d
#         ON ACTION controlp INFIELD xcce102d
#            #add-point:ON ACTION controlp INFIELD xcce102d
{<point name="input.c.page2.xcce102d" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce102e
#         ON ACTION controlp INFIELD xcce102e
#            #add-point:ON ACTION controlp INFIELD xcce102e
{<point name="input.c.page2.xcce102e" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce102f
#         ON ACTION controlp INFIELD xcce102f
#            #add-point:ON ACTION controlp INFIELD xcce102f
{<point name="input.c.page2.xcce102f" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce102g
#         ON ACTION controlp INFIELD xcce102g
#            #add-point:ON ACTION controlp INFIELD xcce102g
{<point name="input.c.page2.xcce102g" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce102h
#         ON ACTION controlp INFIELD xcce102h
#            #add-point:ON ACTION controlp INFIELD xcce102h
{<point name="input.c.page2.xcce102h" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce102
#         ON ACTION controlp INFIELD xcce102
#            #add-point:ON ACTION controlp INFIELD xcce102
{<point name="input.c.page2.xcce102" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce201
#         ON ACTION controlp INFIELD xcce201
#            #add-point:ON ACTION controlp INFIELD xcce201
{<point name="input.c.page2.xcce201" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce202a
#         ON ACTION controlp INFIELD xcce202a
#            #add-point:ON ACTION controlp INFIELD xcce202a
{<point name="input.c.page2.xcce202a" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce202b
#         ON ACTION controlp INFIELD xcce202b
#            #add-point:ON ACTION controlp INFIELD xcce202b
{<point name="input.c.page2.xcce202b" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce202c
#         ON ACTION controlp INFIELD xcce202c
#            #add-point:ON ACTION controlp INFIELD xcce202c
{<point name="input.c.page2.xcce202c" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce202d
#         ON ACTION controlp INFIELD xcce202d
#            #add-point:ON ACTION controlp INFIELD xcce202d
{<point name="input.c.page2.xcce202d" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce202e
#         ON ACTION controlp INFIELD xcce202e
#            #add-point:ON ACTION controlp INFIELD xcce202e
{<point name="input.c.page2.xcce202e" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce202f
#         ON ACTION controlp INFIELD xcce202f
#            #add-point:ON ACTION controlp INFIELD xcce202f
{<point name="input.c.page2.xcce202f" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce202g
#         ON ACTION controlp INFIELD xcce202g
#            #add-point:ON ACTION controlp INFIELD xcce202g
{<point name="input.c.page2.xcce202g" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce202h
#         ON ACTION controlp INFIELD xcce202h
#            #add-point:ON ACTION controlp INFIELD xcce202h
{<point name="input.c.page2.xcce202h" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce202
#         ON ACTION controlp INFIELD xcce202
#            #add-point:ON ACTION controlp INFIELD xcce202
{<point name="input.c.page2.xcce202" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce301
#         ON ACTION controlp INFIELD xcce301
#            #add-point:ON ACTION controlp INFIELD xcce301
{<point name="input.c.page2.xcce301" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce302a
#         ON ACTION controlp INFIELD xcce302a
#            #add-point:ON ACTION controlp INFIELD xcce302a
{<point name="input.c.page2.xcce302a" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce302b
#         ON ACTION controlp INFIELD xcce302b
#            #add-point:ON ACTION controlp INFIELD xcce302b
{<point name="input.c.page2.xcce302b" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce302c
#         ON ACTION controlp INFIELD xcce302c
#            #add-point:ON ACTION controlp INFIELD xcce302c
{<point name="input.c.page2.xcce302c" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce302d
#         ON ACTION controlp INFIELD xcce302d
#            #add-point:ON ACTION controlp INFIELD xcce302d
{<point name="input.c.page2.xcce302d" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce302e
#         ON ACTION controlp INFIELD xcce302e
#            #add-point:ON ACTION controlp INFIELD xcce302e
{<point name="input.c.page2.xcce302e" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce302f
#         ON ACTION controlp INFIELD xcce302f
#            #add-point:ON ACTION controlp INFIELD xcce302f
{<point name="input.c.page2.xcce302f" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce302g
#         ON ACTION controlp INFIELD xcce302g
#            #add-point:ON ACTION controlp INFIELD xcce302g
{<point name="input.c.page2.xcce302g" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce302h
#         ON ACTION controlp INFIELD xcce302h
#            #add-point:ON ACTION controlp INFIELD xcce302h
{<point name="input.c.page2.xcce302h" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce302
#         ON ACTION controlp INFIELD xcce302
#            #add-point:ON ACTION controlp INFIELD xcce302
{<point name="input.c.page2.xcce302" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce303
#         ON ACTION controlp INFIELD xcce303
#            #add-point:ON ACTION controlp INFIELD xcce303
{<point name="input.c.page2.xcce303" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce304a
#         ON ACTION controlp INFIELD xcce304a
#            #add-point:ON ACTION controlp INFIELD xcce304a
{<point name="input.c.page2.xcce304a" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce304b
#         ON ACTION controlp INFIELD xcce304b
#            #add-point:ON ACTION controlp INFIELD xcce304b
{<point name="input.c.page2.xcce304b" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce304c
#         ON ACTION controlp INFIELD xcce304c
#            #add-point:ON ACTION controlp INFIELD xcce304c
{<point name="input.c.page2.xcce304c" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce304d
#         ON ACTION controlp INFIELD xcce304d
#            #add-point:ON ACTION controlp INFIELD xcce304d
{<point name="input.c.page2.xcce304d" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce304e
#         ON ACTION controlp INFIELD xcce304e
#            #add-point:ON ACTION controlp INFIELD xcce304e
{<point name="input.c.page2.xcce304e" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce304f
#         ON ACTION controlp INFIELD xcce304f
#            #add-point:ON ACTION controlp INFIELD xcce304f
{<point name="input.c.page2.xcce304f" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce304g
#         ON ACTION controlp INFIELD xcce304g
#            #add-point:ON ACTION controlp INFIELD xcce304g
{<point name="input.c.page2.xcce304g" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce304h
#         ON ACTION controlp INFIELD xcce304h
#            #add-point:ON ACTION controlp INFIELD xcce304h
{<point name="input.c.page2.xcce304h" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce304
#         ON ACTION controlp INFIELD xcce304
#            #add-point:ON ACTION controlp INFIELD xcce304
{<point name="input.c.page2.xcce304" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce307
#         ON ACTION controlp INFIELD xcce307
#            #add-point:ON ACTION controlp INFIELD xcce307
{<point name="input.c.page2.xcce307" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce308a
#         ON ACTION controlp INFIELD xcce308a
#            #add-point:ON ACTION controlp INFIELD xcce308a
{<point name="input.c.page2.xcce308a" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce308b
#         ON ACTION controlp INFIELD xcce308b
#            #add-point:ON ACTION controlp INFIELD xcce308b
{<point name="input.c.page2.xcce308b" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce308c
#         ON ACTION controlp INFIELD xcce308c
#            #add-point:ON ACTION controlp INFIELD xcce308c
{<point name="input.c.page2.xcce308c" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce308d
#         ON ACTION controlp INFIELD xcce308d
#            #add-point:ON ACTION controlp INFIELD xcce308d
{<point name="input.c.page2.xcce308d" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce308e
#         ON ACTION controlp INFIELD xcce308e
#            #add-point:ON ACTION controlp INFIELD xcce308e
{<point name="input.c.page2.xcce308e" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce308f
#         ON ACTION controlp INFIELD xcce308f
#            #add-point:ON ACTION controlp INFIELD xcce308f
{<point name="input.c.page2.xcce308f" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce308g
#         ON ACTION controlp INFIELD xcce308g
#            #add-point:ON ACTION controlp INFIELD xcce308g
{<point name="input.c.page2.xcce308g" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce308h
#         ON ACTION controlp INFIELD xcce308h
#            #add-point:ON ACTION controlp INFIELD xcce308h
{<point name="input.c.page2.xcce308h" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce308
#         ON ACTION controlp INFIELD xcce308
#            #add-point:ON ACTION controlp INFIELD xcce308
{<point name="input.c.page2.xcce308" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce901
#         ON ACTION controlp INFIELD xcce901
#            #add-point:ON ACTION controlp INFIELD xcce901
{<point name="input.c.page2.xcce901" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce902a
#         ON ACTION controlp INFIELD xcce902a
#            #add-point:ON ACTION controlp INFIELD xcce902a
{<point name="input.c.page2.xcce902a" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce902b
#         ON ACTION controlp INFIELD xcce902b
#            #add-point:ON ACTION controlp INFIELD xcce902b
{<point name="input.c.page2.xcce902b" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce902c
#         ON ACTION controlp INFIELD xcce902c
#            #add-point:ON ACTION controlp INFIELD xcce902c
{<point name="input.c.page2.xcce902c" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce902d
#         ON ACTION controlp INFIELD xcce902d
#            #add-point:ON ACTION controlp INFIELD xcce902d
{<point name="input.c.page2.xcce902d" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce902e
#         ON ACTION controlp INFIELD xcce902e
#            #add-point:ON ACTION controlp INFIELD xcce902e
{<point name="input.c.page2.xcce902e" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce902f
#         ON ACTION controlp INFIELD xcce902f
#            #add-point:ON ACTION controlp INFIELD xcce902f
{<point name="input.c.page2.xcce902f" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce902g
#         ON ACTION controlp INFIELD xcce902g
#            #add-point:ON ACTION controlp INFIELD xcce902g
{<point name="input.c.page2.xcce902g" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce902h
#         ON ACTION controlp INFIELD xcce902h
#            #add-point:ON ACTION controlp INFIELD xcce902h
{<point name="input.c.page2.xcce902h" />}
#            #END add-point
# 
#         #Ctrlp:input.c.page2.xcce902
#         ON ACTION controlp INFIELD xcce902
#            #add-point:ON ACTION controlp INFIELD xcce902
{<point name="input.c.page2.xcce902" />}
#            #END add-point
# 
# 
# 
#         AFTER ROW
#            #add-point:單身page2 after_row
{<point name="input.body2.after_row"/>}
#            #end add-point
#            LET l_ac = ARR_CURR()
#            IF INT_FLAG THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = '' 
#               LET g_errparam.code   = 9001 
#               LET g_errparam.popup  = FALSE 
#               CALL cl_err()
#               LET INT_FLAG = 0
#               IF l_cmd = 'u' THEN
#                  LET g_xccd2_d[l_ac].* = g_xccd2_d_t.*
#               END IF
#               CLOSE axcq540_bcl2
#               CALL s_transaction_end('N','0')
#               EXIT DIALOG 
#            END IF
#            
#            #其他table進行unlock
#            
#            CALL axcq540_unlock_b("xcce_t","'2'")
#            CALL s_transaction_end('Y','0')
#            #add-point:單身page2 after_row2
{<point name="input.body2.after_row2"/>}
#            #end add-point
# 
#         AFTER INPUT
#            #add-point:input段after input 
{<point name="input.body2.after_input"/>}
#            #end add-point   
#    
#         ON ACTION controlo
#            CALL FGL_SET_ARR_CURR(g_xccd2_d.getLength()+1)
#            LET lb_reproduce = TRUE
#            LET li_reproduce = l_ac
#            LET li_reproduce_target = g_xccd2_d.getLength()+1
# 
#      END INPUT
#      INPUT ARRAY g_xccd3_d FROM s_detail3.*
#         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
#                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
#
#                 DELETE ROW = l_allow_delete,
#                 APPEND ROW = l_allow_insert)
#                 
#         #自訂ACTION(detail_input,page_3)
#         
#         
#         BEFORE INPUT
#            #add-point:資料輸入前
{<point name="input.body3.before_input2"/>}
#            #end add-point
#            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
#              CALL FGL_SET_ARR_CURR(g_xccd3_d.getLength()+1) 
#              LET g_insert = 'N' 
#           END IF 
# 
#            CALL axcq540_b_fill()
#            LET g_rec_b = g_xccd3_d.getLength()
#            #add-point:資料輸入前
{<point name="input.body3.before_input"/>}
#            #end add-point
#            
#         BEFORE INSERT
#            
#            LET l_insert = TRUE
#            LET l_n = ARR_COUNT()
#            LET l_cmd = 'a'
#            INITIALIZE g_xccd3_d[l_ac].* TO NULL 
#            INITIALIZE g_xccd3_d_t.* TO NULL 
#            INITIALIZE g_xccd3_d_o.* TO NULL 
#            #公用欄位給值(單身3)
#            
#            #自定義預設值(單身3)
#            
#            #add-point:modify段before備份
{<point name="input.body3.insert.before_bak"/>}
#            #end add-point
#            LET g_xccd3_d_t.* = g_xccd3_d[l_ac].*     #新輸入資料
#            LET g_xccd3_d_o.* = g_xccd3_d[l_ac].*     #新輸入資料
#            CALL cl_show_fld_cont()
#            CALL axcq540_set_entry_b(l_cmd)
#            #add-point:modify段after_set_entry_b
{<point name="input.body3.insert.after_set_entry_b"/>}
#            #end add-point
#            CALL axcq540_set_no_entry_b(l_cmd)
#            IF lb_reproduce THEN
#               LET lb_reproduce = FALSE
#               LET g_xccd3_d[li_reproduce_target].* = g_xccd3_d[li_reproduce].*
# 
#               LET g_xccd3_d[li_reproduce_target].xcci002 = NULL
#               LET g_xccd3_d[li_reproduce_target].xcci006 = NULL
#               LET g_xccd3_d[li_reproduce_target].xcci007 = NULL
#               LET g_xccd3_d[li_reproduce_target].xcci008 = NULL
#               LET g_xccd3_d[li_reproduce_target].xcci009 = NULL
#            END IF
#            LET g_detail_multi_table_t.xcbbcomp = g_xccd_m.xccdld
#LET g_detail_multi_table_t.xcbb001 = g_xccd_m.xccd001
#LET g_detail_multi_table_t.xcbb002 = g_xccd_m.xccd003
#LET g_detail_multi_table_t.xcbb003 = g_xccd_m.xccd004
#LET g_detail_multi_table_t.xcbb004 = g_xccd_m.xccd005
#LET g_detail_multi_table_t.xcbb005 = g_xccd3_d[l_ac].xcci002
# 
#            #add-point:modify段before insert
{<point name="input.body3.before_insert"/>}
#            #end add-point  
#            
#         BEFORE ROW     
#            #add-point:modify段before row2
{<point name="input.body3.before_row2"/>}
#            #end add-point  
#            LET l_insert = FALSE
#            LET l_cmd = ''
#            LET l_ac = ARR_CURR()
#            LET g_detail_idx = l_ac
#              
#            LET l_lock_sw = 'N'            #DEFAULT
#            LET l_n = ARR_COUNT()
#            DISPLAY l_ac TO FORMONLY.idx
#         
#            CALL s_transaction_begin()
#            OPEN axcq540_cl USING g_enterprise,g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005
#            IF STATUS THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = "OPEN axcq540_cl:" 
#               LET g_errparam.code   = STATUS 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
#               CLOSE axcq540_cl
#               CALL s_transaction_end('N','0')
#               RETURN
#            END IF
#            
#            LET g_rec_b = g_xccd3_d.getLength()
#            
#            IF g_rec_b >= l_ac 
#               AND g_xccd3_d[l_ac].xcci002 IS NOT NULL
#               AND g_xccd3_d[l_ac].xcci006 IS NOT NULL
#               AND g_xccd3_d[l_ac].xcci007 IS NOT NULL
#               AND g_xccd3_d[l_ac].xcci008 IS NOT NULL
#               AND g_xccd3_d[l_ac].xcci009 IS NOT NULL
#            THEN 
#               LET l_cmd='u'
#               LET g_xccd3_d_t.* = g_xccd3_d[l_ac].*  #BACKUP
#               LET g_xccd3_d_o.* = g_xccd3_d[l_ac].*  #BACKUP
#               CALL axcq540_set_entry_b(l_cmd)
#               #add-point:modify段after_set_entry_b
{<point name="input.body3.after_set_entry_b"/>}
#               #end add-point  
#               CALL axcq540_set_no_entry_b(l_cmd)
#               IF NOT axcq540_lock_b("xcci_t","'3'") THEN
#                  LET l_lock_sw='Y'
#               ELSE
#                  FETCH axcq540_bcl3 INTO g_xccd3_d[l_ac].xcci006,g_xccd3_d[l_ac].xcci007,g_xccd3_d[l_ac].xcci008, 
#                      g_xccd3_d[l_ac].xcci009,g_xccd3_d[l_ac].xcci002,g_xccd3_d[l_ac].xcci101,g_xccd3_d[l_ac].xcci102a, 
#                      g_xccd3_d[l_ac].xcci102b,g_xccd3_d[l_ac].xcci102c,g_xccd3_d[l_ac].xcci102d,g_xccd3_d[l_ac].xcci102e, 
#                      g_xccd3_d[l_ac].xcci102f,g_xccd3_d[l_ac].xcci102g,g_xccd3_d[l_ac].xcci102h,g_xccd3_d[l_ac].xcci102, 
#                      g_xccd3_d[l_ac].xcci201,g_xccd3_d[l_ac].xcci202a,g_xccd3_d[l_ac].xcci202b,g_xccd3_d[l_ac].xcci202c, 
#                      g_xccd3_d[l_ac].xcci202d,g_xccd3_d[l_ac].xcci202e,g_xccd3_d[l_ac].xcci202f,g_xccd3_d[l_ac].xcci202g, 
#                      g_xccd3_d[l_ac].xcci202h,g_xccd3_d[l_ac].xcci202,g_xccd3_d[l_ac].xcci301,g_xccd3_d[l_ac].xcci302a, 
#                      g_xccd3_d[l_ac].xcci302b,g_xccd3_d[l_ac].xcci302c,g_xccd3_d[l_ac].xcci302d,g_xccd3_d[l_ac].xcci302e, 
#                      g_xccd3_d[l_ac].xcci302f,g_xccd3_d[l_ac].xcci302g,g_xccd3_d[l_ac].xcci302h,g_xccd3_d[l_ac].xcci302, 
#                      g_xccd3_d[l_ac].xcci303,g_xccd3_d[l_ac].xcci304a,g_xccd3_d[l_ac].xcci304b,g_xccd3_d[l_ac].xcci304c, 
#                      g_xccd3_d[l_ac].xcci304d,g_xccd3_d[l_ac].xcci304e,g_xccd3_d[l_ac].xcci304f,g_xccd3_d[l_ac].xcci304g, 
#                      g_xccd3_d[l_ac].xcci304h,g_xccd3_d[l_ac].xcci304,g_xccd3_d[l_ac].xcci901,g_xccd3_d[l_ac].xcci902a, 
#                      g_xccd3_d[l_ac].xcci902b,g_xccd3_d[l_ac].xcci902c,g_xccd3_d[l_ac].xcci902d,g_xccd3_d[l_ac].xcci902e, 
#                      g_xccd3_d[l_ac].xcci902f,g_xccd3_d[l_ac].xcci902g,g_xccd3_d[l_ac].xcci902h,g_xccd3_d[l_ac].xcci902 
#
#                  IF SQLCA.sqlcode THEN
#                     INITIALIZE g_errparam TO NULL 
#                     LET g_errparam.extend = '' 
#                     LET g_errparam.code   = SQLCA.sqlcode 
#                     LET g_errparam.popup  = TRUE 
#                     CALL cl_err()
#                     LET l_lock_sw = "Y"
#                  END IF
#                  
#                  LET g_bfill = "N"
#                  CALL axcq540_show()
#                  LET g_bfill = "Y"
#                  
#                  CALL cl_show_fld_cont()
#               END IF
#            ELSE
#               LET l_cmd='a'
#            END IF
#            #add-point:modify段before row
{<point name="input.body3.before_row"/>}
#            #end add-point  
#            #其他table資料備份(確定是否更改用)
#            LET g_detail_multi_table_t.xcbbcomp = g_xccd_m.xccdld
#LET g_detail_multi_table_t.xcbb001 = g_xccd_m.xccd001
#LET g_detail_multi_table_t.xcbb002 = g_xccd_m.xccd003
#LET g_detail_multi_table_t.xcbb003 = g_xccd_m.xccd004
#LET g_detail_multi_table_t.xcbb004 = g_xccd_m.xccd005
#LET g_detail_multi_table_t.xcbb005 = g_xccd3_d[l_ac].xcci002
# 
#            #其他table進行lock
#            
#            
#         BEFORE DELETE                            #是否取消單身
#            IF l_cmd = 'a' THEN
#               LET l_cmd='d'
#            ELSE
#               IF NOT cl_ask_del_detail() THEN
#                  CANCEL DELETE
#               END IF
#               IF l_lock_sw = "Y" THEN
#                  INITIALIZE g_errparam TO NULL 
#                  LET g_errparam.extend = "" 
#                  LET g_errparam.code   = -263 
#                  LET g_errparam.popup  = TRUE 
#                  CALL cl_err()
#                  CANCEL DELETE
#               END IF
#               
#               #add-point:單身3刪除前
{<point name="input.body3.b_delete" mark="Y"/>}
#               #end add-point    
#               
#               DELETE FROM xcci_t
#                WHERE xccient = g_enterprise AND xccild = g_xccd_m.xccdld AND
#                                          xcci001 = g_xccd_m.xccd001 AND
#                                          xcci003 = g_xccd_m.xccd003 AND
#                                          xcci004 = g_xccd_m.xccd004 AND
#                                          xcci005 = g_xccd_m.xccd005 AND
#                      xcci002 = g_xccd3_d_t.xcci002
#                  AND xcci006 = g_xccd3_d_t.xcci006
#                  AND xcci007 = g_xccd3_d_t.xcci007
#                  AND xcci008 = g_xccd3_d_t.xcci008
#                  AND xcci009 = g_xccd3_d_t.xcci009
#                  
#               #add-point:單身3刪除中
{<point name="input.body3.m_delete"/>}
#               #end add-point    
#                  
#               IF SQLCA.sqlcode THEN
#                  INITIALIZE g_errparam TO NULL 
#                  LET g_errparam.extend = "xccd_t" 
#                  LET g_errparam.code   = SQLCA.sqlcode 
#                  LET g_errparam.popup  = TRUE 
#                  CALL cl_err()
#                  CALL s_transaction_end('N','0')
#                  CANCEL DELETE   
#               ELSE
#                  LET g_rec_b = g_rec_b-1
#                  INITIALIZE l_var_keys_bak TO NULL 
#                  INITIALIZE l_field_keys TO NULL 
#                  LET l_field_keys[01] = 'xcbbcomp'
#                  LET l_field_keys[02] = 'xcbb001'
#                  LET l_field_keys[03] = 'xcbb002'
#                  LET l_field_keys[04] = 'xcbb003'
#                  LET l_field_keys[05] = 'xcbb004'
#                  LET l_var_keys_bak[01] = g_detail_multi_table_t.xcbbcomp
#                  LET l_var_keys_bak[02] = g_detail_multi_table_t.xcbb001
#                  LET l_var_keys_bak[03] = g_detail_multi_table_t.xcbb002
#                  LET l_var_keys_bak[04] = g_detail_multi_table_t.xcbb003
#                  LET l_var_keys_bak[05] = g_detail_multi_table_t.xcbb004
#                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'xcbb_t')
# 
#                  #add-point:單身3刪除後
{<point name="input.body3.a_delete"/>}
#                  #end add-point
#                  CALL s_transaction_end('Y','0')
#               END IF 
#               CLOSE axcq540_bcl
#               LET l_count = g_xccd_d.getLength()
#                              INITIALIZE gs_keys TO NULL 
#               LET gs_keys[1] = g_xccd_m.xccdld
#               LET gs_keys[2] = g_xccd_m.xccd001
#               LET gs_keys[3] = g_xccd_m.xccd003
#               LET gs_keys[4] = g_xccd_m.xccd004
#               LET gs_keys[5] = g_xccd_m.xccd005
#               LET gs_keys[6] = g_xccd3_d[g_detail_idx].xcci002
#               LET gs_keys[7] = g_xccd3_d[g_detail_idx].xcci006
#               LET gs_keys[8] = g_xccd3_d[g_detail_idx].xcci007
#               LET gs_keys[9] = g_xccd3_d[g_detail_idx].xcci008
#               LET gs_keys[10] = g_xccd3_d[g_detail_idx].xcci009
# 
#            END IF 
#            
#         AFTER DELETE 
#            IF l_cmd <> 'd' THEN
#               #add-point:單身AFTER DELETE 
{<point name="input.body3.after_delete"/>}
#               #end add-point
#                              CALL axcq540_delete_b('xcci_t',gs_keys,"'3'")
#            END IF
#            #如果是最後一筆
#            IF l_ac = (g_xccd3_d.getLength() + 1) THEN
#               CALL FGL_SET_ARR_CURR(l_ac-1)
#            END IF
# 
#         AFTER INSERT    
#            LET l_insert = FALSE
#            IF INT_FLAG THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = '' 
#               LET g_errparam.code   = 9001 
#               LET g_errparam.popup  = FALSE 
#               CALL cl_err()
#               LET INT_FLAG = 0
#               CANCEL INSERT
#            END IF
#               
#            #add-point:單身3新增前
{<point name="input.body3.b_a_insert"/>}
#            #end add-point
#               
#            LET l_count = 1  
#            SELECT COUNT(*) INTO l_count FROM xcci_t 
#             WHERE xccient = g_enterprise AND xccild = g_xccd_m.xccdld
#               AND xcci001 = g_xccd_m.xccd001
#               AND xcci003 = g_xccd_m.xccd003
#               AND xcci004 = g_xccd_m.xccd004
#               AND xcci005 = g_xccd_m.xccd005
#               AND xcci002 = g_xccd3_d[l_ac].xcci002
#               AND xcci006 = g_xccd3_d[l_ac].xcci006
#               AND xcci007 = g_xccd3_d[l_ac].xcci007
#               AND xcci008 = g_xccd3_d[l_ac].xcci008
#               AND xcci009 = g_xccd3_d[l_ac].xcci009
#                
#            #資料未重複, 插入新增資料
#            IF l_count = 0 THEN 
#               #add-point:單身3新增前
{<point name="input.body3.b_insert"/>}
#               #end add-point
#            
#                              INITIALIZE gs_keys TO NULL 
#               LET gs_keys[1] = g_xccd_m.xccdld
#               LET gs_keys[2] = g_xccd_m.xccd001
#               LET gs_keys[3] = g_xccd_m.xccd003
#               LET gs_keys[4] = g_xccd_m.xccd004
#               LET gs_keys[5] = g_xccd_m.xccd005
#               LET gs_keys[6] = g_xccd3_d[g_detail_idx].xcci002
#               LET gs_keys[7] = g_xccd3_d[g_detail_idx].xcci006
#               LET gs_keys[8] = g_xccd3_d[g_detail_idx].xcci007
#               LET gs_keys[9] = g_xccd3_d[g_detail_idx].xcci008
#               LET gs_keys[10] = g_xccd3_d[g_detail_idx].xcci009
#               CALL axcq540_insert_b('xcci_t',gs_keys,"'3'")
#                           
#               #add-point:單身新增後3
{<point name="input.body3.a_insert"/>}
#               #end add-point
#            ELSE    
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = 'INSERT' 
#               LET g_errparam.code   = "std-00006" 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
#               INITIALIZE g_xccd_d[l_ac].* TO NULL
#               CALL s_transaction_end('N','0')
#               CANCEL INSERT
#            END IF
# 
#            IF SQLCA.SQLcode  THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = "xcci_t" 
#               LET g_errparam.code   = SQLCA.sqlcode 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
#               CALL s_transaction_end('N','0')                    
#               CANCEL INSERT
#            ELSE
#               #先刷新資料
#               #CALL axcq540_b_fill()
#               #資料多語言用-增/改
#               
#               #add-point:單身新增後
{<point name="input.body3.after_insert"/>}
#               #end add-point
#               CALL s_transaction_end('Y','0')
#               ERROR 'INSERT O.K'
#               LET g_rec_b = g_rec_b + 1
#            END IF
#            
#         ON ROW CHANGE 
#            IF INT_FLAG THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = '' 
#               LET g_errparam.code   = 9001 
#               LET g_errparam.popup  = FALSE 
#               CALL cl_err()
#               LET INT_FLAG = 0
#               LET g_xccd3_d[l_ac].* = g_xccd3_d_t.*
#               CLOSE axcq540_bcl3
#               CALL s_transaction_end('N','0')
#               EXIT DIALOG 
#            END IF
#            
#            IF l_lock_sw = 'Y' THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = '' 
#               LET g_errparam.code   = -263 
#               LET g_errparam.popup  = TRUE 
#               CALL cl_err()
#               LET g_xccd3_d[l_ac].* = g_xccd3_d_t.*
#            ELSE
#               #add-point:單身page3修改前
{<point name="input.body3.b_update" mark="Y"/>}
#               #end add-point
#               
#               #寫入修改者/修改日期資訊(單身3)
#               
#               
#               UPDATE xcci_t SET (xccild,xcci001,xcci003,xcci004,xcci005,xcci006,xcci007,xcci008,xcci009, 
#                   xcci002,xcci101,xcci102a,xcci102b,xcci102c,xcci102d,xcci102e,xcci102f,xcci102g,xcci102h, 
#                   xcci201,xcci202a,xcci202b,xcci202c,xcci202d,xcci202e,xcci202f,xcci202g,xcci202h,xcci301, 
#                   xcci302a,xcci302b,xcci302c,xcci302d,xcci302e,xcci302f,xcci302g,xcci302h,xcci303,xcci304a, 
#                   xcci304b,xcci304c,xcci304d,xcci304e,xcci304f,xcci304g,xcci304h,xcci901,xcci902a,xcci902b, 
#                   xcci902c,xcci902d,xcci902e,xcci902f,xcci902g,xcci902h) = (g_xccd_m.xccdld,g_xccd_m.xccd001, 
#                   g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd3_d[l_ac].xcci006,g_xccd3_d[l_ac].xcci007, 
#                   g_xccd3_d[l_ac].xcci008,g_xccd3_d[l_ac].xcci009,g_xccd3_d[l_ac].xcci002,g_xccd3_d[l_ac].xcci101, 
#                   g_xccd3_d[l_ac].xcci102a,g_xccd3_d[l_ac].xcci102b,g_xccd3_d[l_ac].xcci102c,g_xccd3_d[l_ac].xcci102d, 
#                   g_xccd3_d[l_ac].xcci102e,g_xccd3_d[l_ac].xcci102f,g_xccd3_d[l_ac].xcci102g,g_xccd3_d[l_ac].xcci102h, 
#                   g_xccd3_d[l_ac].xcci201,g_xccd3_d[l_ac].xcci202a,g_xccd3_d[l_ac].xcci202b,g_xccd3_d[l_ac].xcci202c, 
#                   g_xccd3_d[l_ac].xcci202d,g_xccd3_d[l_ac].xcci202e,g_xccd3_d[l_ac].xcci202f,g_xccd3_d[l_ac].xcci202g, 
#                   g_xccd3_d[l_ac].xcci202h,g_xccd3_d[l_ac].xcci301,g_xccd3_d[l_ac].xcci302a,g_xccd3_d[l_ac].xcci302b, 
#                   g_xccd3_d[l_ac].xcci302c,g_xccd3_d[l_ac].xcci302d,g_xccd3_d[l_ac].xcci302e,g_xccd3_d[l_ac].xcci302f, 
#                   g_xccd3_d[l_ac].xcci302g,g_xccd3_d[l_ac].xcci302h,g_xccd3_d[l_ac].xcci303,g_xccd3_d[l_ac].xcci304a, 
#                   g_xccd3_d[l_ac].xcci304b,g_xccd3_d[l_ac].xcci304c,g_xccd3_d[l_ac].xcci304d,g_xccd3_d[l_ac].xcci304e, 
#                   g_xccd3_d[l_ac].xcci304f,g_xccd3_d[l_ac].xcci304g,g_xccd3_d[l_ac].xcci304h,g_xccd3_d[l_ac].xcci901, 
#                   g_xccd3_d[l_ac].xcci902a,g_xccd3_d[l_ac].xcci902b,g_xccd3_d[l_ac].xcci902c,g_xccd3_d[l_ac].xcci902d, 
#                   g_xccd3_d[l_ac].xcci902e,g_xccd3_d[l_ac].xcci902f,g_xccd3_d[l_ac].xcci902g,g_xccd3_d[l_ac].xcci902h)  
#                   #自訂欄位頁簽
#                WHERE xccient = g_enterprise AND xccild = g_xccd_m.xccdld
#                  AND xcci001 = g_xccd_m.xccd001
#                  AND xcci003 = g_xccd_m.xccd003
#                  AND xcci004 = g_xccd_m.xccd004
#                  AND xcci005 = g_xccd_m.xccd005
#                  AND xcci002 = g_xccd3_d_t.xcci002 #項次 
#                  AND xcci006 = g_xccd3_d_t.xcci006
#                  AND xcci007 = g_xccd3_d_t.xcci007
#                  AND xcci008 = g_xccd3_d_t.xcci008
#                  AND xcci009 = g_xccd3_d_t.xcci009
#                  
#               #add-point:單身page3修改中
{<point name="input.body3.m_update"/>}
#               #end add-point
#                  
#               CASE
#                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
#                     INITIALIZE g_errparam TO NULL 
#                     LET g_errparam.extend = "xcci_t" 
#                     LET g_errparam.code   = "std-00009" 
#                     LET g_errparam.popup  = TRUE 
#                     CALL cl_err()
#                     CALL s_transaction_end('N','0')
#                     LET g_xccd3_d[l_ac].* = g_xccd3_d_t.*
#                  WHEN SQLCA.sqlcode #其他錯誤
#                     INITIALIZE g_errparam TO NULL 
#                     LET g_errparam.extend = "xcci_t" 
#                     LET g_errparam.code   = SQLCA.sqlcode 
#                     LET g_errparam.popup  = TRUE 
#                     CALL cl_err()
#                     CALL s_transaction_end('N','0')
#                     LET g_xccd3_d[l_ac].* = g_xccd3_d_t.*
#                  OTHERWISE
#                                    INITIALIZE gs_keys TO NULL 
#               LET gs_keys[1] = g_xccd_m.xccdld
#               LET gs_keys_bak[1] = g_xccdld_t
#               LET gs_keys[2] = g_xccd_m.xccd001
#               LET gs_keys_bak[2] = g_xccd001_t
#               LET gs_keys[3] = g_xccd_m.xccd003
#               LET gs_keys_bak[3] = g_xccd003_t
#               LET gs_keys[4] = g_xccd_m.xccd004
#               LET gs_keys_bak[4] = g_xccd004_t
#               LET gs_keys[5] = g_xccd_m.xccd005
#               LET gs_keys_bak[5] = g_xccd005_t
#               LET gs_keys[6] = g_xccd3_d[g_detail_idx].xcci002
#               LET gs_keys_bak[6] = g_xccd3_d_t.xcci002
#               LET gs_keys[7] = g_xccd3_d[g_detail_idx].xcci006
#               LET gs_keys_bak[7] = g_xccd3_d_t.xcci006
#               LET gs_keys[8] = g_xccd3_d[g_detail_idx].xcci007
#               LET gs_keys_bak[8] = g_xccd3_d_t.xcci007
#               LET gs_keys[9] = g_xccd3_d[g_detail_idx].xcci008
#               LET gs_keys_bak[9] = g_xccd3_d_t.xcci008
#               LET gs_keys[10] = g_xccd3_d[g_detail_idx].xcci009
#               LET gs_keys_bak[10] = g_xccd3_d_t.xcci009
#               CALL axcq540_update_b('xcci_t',gs_keys,gs_keys_bak,"'3'")
#                     #資料多語言用-增/改
#                     
#               END CASE
#               
#               #修改歷程記錄
#               LET g_log1 = util.JSON.stringify(g_xccd_m),util.JSON.stringify(g_xccd3_d_t)
#               LET g_log2 = util.JSON.stringify(g_xccd_m),util.JSON.stringify(g_xccd3_d[l_ac])
#               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
#                  CALL s_transaction_end('N','0')
#               END IF
#               
#               #add-point:單身page3修改後
{<point name="input.body3.a_update"/>}
#               #end add-point
#            END IF
#         
#                  #此段落由子樣板a01產生
#         BEFORE FIELD xcci006
#            #add-point:BEFORE FIELD xcci006
{<point name="input.b.page3.xcci006" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcci006
#            
#            #add-point:AFTER FIELD xcci006
{<point name="input.a.page3.xcci006" />}
#            #END add-point
#            
# 
#         #此段落由子樣板a04產生
#         ON CHANGE xcci006
#            #add-point:ON CHANGE xcci006
{<point name="input.g.page3.xcci006" />}
#            #END add-point
# 
#         #此段落由子樣板a02產生
#         AFTER FIELD xcci007
#            
#            #add-point:AFTER FIELD xcci007
{<point name="input.a.page3.xcci007" />}
##            #END add-point
##            
## 
##         #此段落由子樣板a01產生
##         BEFORE FIELD xcci007
##            #add-point:BEFORE FIELD xcci007
{<point name="input.b.page3.xcci007" />}
##            #END add-point
## 
##         #此段落由子樣板a04產生
##         ON CHANGE xcci007
##            #add-point:ON CHANGE xcci007
{<point name="input.g.page3.xcci007" />}
##            #END add-point
## 
##         #此段落由子樣板a01產生
##         BEFORE FIELD xcci008
##            #add-point:BEFORE FIELD xcci008
{<point name="input.b.page3.xcci008" />}
##            #END add-point
## 
##         #此段落由子樣板a02產生
##         AFTER FIELD xcci008
##            
##            #add-point:AFTER FIELD xcci008
{<point name="input.a.page3.xcci008" />}
##            #END add-point
##            
## 
##         #此段落由子樣板a04產生
##         ON CHANGE xcci008
##            #add-point:ON CHANGE xcci008
{<point name="input.g.page3.xcci008" />}
##            #END add-point
## 
##         #此段落由子樣板a01產生
##         BEFORE FIELD xcci002
##            #add-point:BEFORE FIELD xcci002
{<point name="input.b.page3.xcci002" />}
##            #END add-point
## 
##         #此段落由子樣板a02產生
##         AFTER FIELD xcci002
##            
##            #add-point:AFTER FIELD xcci002
{<point name="input.a.page3.xcci002" />}
##            #END add-point
##            
## 
##         #此段落由子樣板a04產生
##         ON CHANGE xcci002
##            #add-point:ON CHANGE xcci002
{<point name="input.g.page3.xcci002" />}
##            #END add-point
## 
## 
##                  #Ctrlp:input.c.page3.xcci006
##         ON ACTION controlp INFIELD xcci006
##            #add-point:ON ACTION controlp INFIELD xcci006
{<point name="input.c.page3.xcci006" />}
##            #END add-point
## 
##         #Ctrlp:input.c.page3.xcci007
##         ON ACTION controlp INFIELD xcci007
##            #add-point:ON ACTION controlp INFIELD xcci007
{<point name="input.c.page3.xcci007" />}
##            #END add-point
## 
##         #Ctrlp:input.c.page3.xcci008
##         ON ACTION controlp INFIELD xcci008
##            #add-point:ON ACTION controlp INFIELD xcci008
{<point name="input.c.page3.xcci008" />}
##            #END add-point
## 
##         #Ctrlp:input.c.page3.xcci002
##         ON ACTION controlp INFIELD xcci002
##            #add-point:ON ACTION controlp INFIELD xcci002
{<point name="input.c.page3.xcci002" />}
##            #END add-point
## 
## 
## 
##         AFTER ROW
##            #add-point:單身page3 after_row
{<point name="input.body3.after_row"/>}
##            #end add-point
##            LET l_ac = ARR_CURR()
##            IF INT_FLAG THEN
##               INITIALIZE g_errparam TO NULL 
##               LET g_errparam.extend = '' 
##               LET g_errparam.code   = 9001 
##               LET g_errparam.popup  = FALSE 
##               CALL cl_err()
##               LET INT_FLAG = 0
##               IF l_cmd = 'u' THEN
##                  LET g_xccd3_d[l_ac].* = g_xccd3_d_t.*
##               END IF
##               CLOSE axcq540_bcl3
##               CALL s_transaction_end('N','0')
##               EXIT DIALOG 
##            END IF
##            
##            #其他table進行unlock
##            
##            CALL axcq540_unlock_b("xcci_t","'3'")
##            CALL s_transaction_end('Y','0')
##            #add-point:單身page3 after_row2
{<point name="input.body3.after_row2"/>}
##            #end add-point
## 
##         AFTER INPUT
##            #add-point:input段after input 
{<point name="input.body3.after_input"/>}
##            #end add-point   
##    
##         ON ACTION controlo
##            CALL FGL_SET_ARR_CURR(g_xccd3_d.getLength()+1)
##            LET lb_reproduce = TRUE
##            LET li_reproduce = l_ac
##            LET li_reproduce_target = g_xccd3_d.getLength()+1
## 
##      END INPUT
## 
##      
## 
##      
## 
##      
## 
##      
##
{</section>}

{<section id="axcq540.input.other" >}
##      
##      #add-point:自定義input
{<point name="input.more_input"/>}
##      #end add-point
##      
##      BEFORE DIALOG 
##         #CALL cl_err_collect_init()    
##         #add-point:input段before dialog
{<point name="input.before_dialog"/>}
##         #end add-point    
##         #新增時強制從單頭開始填
##         IF p_cmd = 'a' THEN
##            NEXT FIELD xccdld
##         ELSE
##            CASE g_aw
##               WHEN "s_detail1"
##                  NEXT FIELD sfaa068
##               WHEN "s_detail2"
##                  NEXT FIELD sfaa068
##               WHEN "s_detail3"
##                  NEXT FIELD sfaa068
## 
##            END CASE
##         END IF
##    
##      ON ACTION controlf
##         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
##         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
## 
##      ON ACTION controlr
##         CALL cl_show_req_fields()
## 
##      ON ACTION controls
##         IF g_header_hidden THEN
##            CALL gfrm_curr.setElementHidden("vb_master",0)
##            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
##            LET g_header_hidden = 0     #visible
##         ELSE
##            CALL gfrm_curr.setElementHidden("vb_master",1)
##            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
##            LET g_header_hidden = 1     #hidden     
##         END IF
## 
##      ON ACTION accept
##         #add-point:input段accept 
{<point name="input.accept"/>}
##         #end add-point    
##         ACCEPT DIALOG
##        
##      ON ACTION cancel      #在dialog button (放棄)
##         LET INT_FLAG = TRUE 
##         LET g_detail_idx  = 1
##         LET g_detail_idx2 = 1
##         EXIT DIALOG
## 
##      ON ACTION close       #在dialog 右上角 (X)
##         LET INT_FLAG = TRUE 
##         EXIT DIALOG
## 
##      ON ACTION exit        #toolbar 離開
##         LET INT_FLAG = TRUE 
##         EXIT DIALOG
## 
##      #交談指令共用ACTION
##      &include "common_action.4gl" 
##         CONTINUE DIALOG 
##         
##   END DIALOG
##    
#   #add-point:input段after input 
{<point name="input.after_input"/>}
#   #end add-point    
# 
END FUNCTION

{</section>}

{<section id="axcq540.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axcq540_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
{<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
{<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL axcq540_b_fill() #單身填充
      CALL axcq540_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL axcq540_set_pk_array()
   #add-point:ON ACTION agendum
{<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
{<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xccd_m.xccdcomp,g_xccd_m.xccdcomp_desc,g_xccd_m.xccdld,g_xccd_m.xccdld_desc,g_xccd_m.xccd004, 
       g_xccd_m.xccd005,g_xccd_m.xccd001,g_xccd_m.xccd001_desc,g_xccd_m.xccd003,g_xccd_m.xccd003_desc 

   
   #顯示狀態(stus)圖片
   
   
   #讀入ref值(單身)
#   FOR l_ac = 1 TO g_xccd_d.getLength()
#      #add-point:show段單身reference
{<point name="show.body.reference"/>}
#      #end add-point
#   END FOR
#   
#   FOR l_ac = 1 TO g_xccd2_d.getLength()
#      #add-point:show段單身reference
{<point name="show.body2.reference"/>}
#      #end add-point
#   END FOR
#   FOR l_ac = 1 TO g_xccd3_d.getLength()
#      #add-point:show段單身reference
{<point name="show.body3.reference"/>}
#      #end add-point
#   END FOR
# 
#   
#    
#   
   #add-point:show段other
{<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL axcq540_detail_show()
   
   #add-point:show段之後
{<point name="show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="axcq540.detail_show" >}
##+ 第二階單身reference
PRIVATE FUNCTION axcq540_detail_show()
#   #add-point:detail_show段define
{<point name="detail_show.define"/>}
#   #end add-point  
# 
#   #add-point:detail_show段之前
{<point name="detail_show.before"/>}
#   #end add-point
#   
#   #add-point:detail_show段之後
{<point name="detail_show.after"/>}
#   #end add-point
#   
END FUNCTION
#
{</section>}

{<section id="axcq540.reproduce" >}
##+ 資料複製
PRIVATE FUNCTION axcq540_reproduce()
#   DEFINE l_newno     LIKE xccd_t.xccdld 
#   DEFINE l_oldno     LIKE xccd_t.xccdld 
#   DEFINE l_newno02     LIKE xccd_t.xccd001 
#   DEFINE l_oldno02     LIKE xccd_t.xccd001 
#   DEFINE l_newno03     LIKE xccd_t.xccd003 
#   DEFINE l_oldno03     LIKE xccd_t.xccd003 
#   DEFINE l_newno04     LIKE xccd_t.xccd004 
#   DEFINE l_oldno04     LIKE xccd_t.xccd004 
#   DEFINE l_newno05     LIKE xccd_t.xccd005 
#   DEFINE l_oldno05     LIKE xccd_t.xccd005 
# 
#   DEFINE l_master    RECORD LIKE xccd_t.*
#   DEFINE l_detail    RECORD LIKE xccd_t.*
#   DEFINE l_detail2    RECORD LIKE xcce_t.*
# 
#   DEFINE l_detail3    RECORD LIKE xcci_t.*
# 
# 
# 
#   DEFINE l_cnt       LIKE type_t.num5
#   #add-point:reproduce段define
{<point name="reproduce.define"/>}
#   #end add-point   
# 
#   #切換畫面
#   
#   LET g_master_insert = FALSE
#   
#   IF g_xccd_m.xccdld IS NULL
#   OR g_xccd_m.xccd001 IS NULL
#   OR g_xccd_m.xccd003 IS NULL
#   OR g_xccd_m.xccd004 IS NULL
#   OR g_xccd_m.xccd005 IS NULL
# 
#   THEN
#      INITIALIZE g_errparam TO NULL 
#      LET g_errparam.extend = "" 
#      LET g_errparam.code   = "std-00003" 
#      LET g_errparam.popup  = FALSE 
#      CALL cl_err()
#      RETURN
#   END IF
#    
#   LET g_xccdld_t = g_xccd_m.xccdld
#   LET g_xccd001_t = g_xccd_m.xccd001
#   LET g_xccd003_t = g_xccd_m.xccd003
#   LET g_xccd004_t = g_xccd_m.xccd004
#   LET g_xccd005_t = g_xccd_m.xccd005
# 
#    
#   LET g_xccd_m.xccdld = ""
#   LET g_xccd_m.xccd001 = ""
#   LET g_xccd_m.xccd003 = ""
#   LET g_xccd_m.xccd004 = ""
#   LET g_xccd_m.xccd005 = ""
# 
#    
#   CALL axcq540_set_entry('a')
#   CALL axcq540_set_no_entry('a')
# 
#   CALL cl_set_head_visible("","YES")
# 
#   #公用欄位給予預設值
#   
#   
#   CALL s_transaction_begin()
#   
#   #add-point:複製輸入前
{<point name="reproduce.head.b_input"/>}
#   #end add-point
#   
#   #顯示狀態(stus)圖片
#   
#   
#   CALL axcq540_input("r")
#   
#      LET g_xccd_m.xccdld_desc = ''
#   DISPLAY BY NAME g_xccd_m.xccdld_desc
#   LET g_xccd_m.xccd001_desc = ''
#   DISPLAY BY NAME g_xccd_m.xccd001_desc
#   LET g_xccd_m.xccd003_desc = ''
#   DISPLAY BY NAME g_xccd_m.xccd003_desc
# 
#   
#   IF INT_FLAG AND NOT g_master_insert THEN
#      INITIALIZE g_errparam TO NULL 
#      LET g_errparam.extend = '' 
#      LET g_errparam.code   = 9001 
#      LET g_errparam.popup  = FALSE 
#      CALL cl_err()
#      CALL s_transaction_end('N','0')
#      LET INT_FLAG = 0
#      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
#      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
#      LET INT_FLAG = 0
#      INITIALIZE g_xccd_m.* TO NULL
#      INITIALIZE g_xccd_d TO NULL
#      INITIALIZE g_xccd2_d TO NULL
#      INITIALIZE g_xccd3_d TO NULL
# 
#      CALL axcq540_show()
#      RETURN
#   END IF
#   
#   #將新增的資料併入搜尋條件中
#   LET g_state = "insert"
#   
#   LET g_xccdld_t = g_xccd_m.xccdld
#   LET g_xccd001_t = g_xccd_m.xccd001
#   LET g_xccd003_t = g_xccd_m.xccd003
#   LET g_xccd004_t = g_xccd_m.xccd004
#   LET g_xccd005_t = g_xccd_m.xccd005
# 
#   
#   #組合新增資料的條件
#   LET g_add_browse = " xccdent = '" ||g_enterprise|| "' AND",
#                      " xccdld = '", g_xccd_m.xccdld CLIPPED, "' "
#                      ," AND xccd001 = '", g_xccd_m.xccd001 CLIPPED, "' "
#                      ," AND xccd003 = '", g_xccd_m.xccd003 CLIPPED, "' "
#                      ," AND xccd004 = '", g_xccd_m.xccd004 CLIPPED, "' "
#                      ," AND xccd005 = '", g_xccd_m.xccd005 CLIPPED, "' "
# 
#   #填到最後面
#   LET g_current_idx = g_browser.getLength() + 1
#   CALL axcq540_browser_fill("")
#   
#   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
#   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
#   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
#   
#   #add-point:完成複製段落後
{<point name="reproduce.after_reproduce" />}
#   #end add-point
#   
#   CALL axcq540_idx_chk()
   
END FUNCTION

{</section>}

{<section id="axcq540.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axcq540_detail_reproduce()
#   DEFINE ls_sql      STRING
#   DEFINE ld_date     DATETIME YEAR TO SECOND
#   DEFINE l_detail    RECORD LIKE xccd_t.*
#   DEFINE l_detail2    RECORD LIKE xcce_t.*
# 
#   DEFINE l_detail3    RECORD LIKE xcci_t.*
# 
# 
# 
#   #add-point:delete段define
{<point name="detail_reproduce.define"/>}
#   #end add-point    
#   
#   CALL s_transaction_begin()
#   
#   LET ld_date = cl_get_current()
#   
#   DROP TABLE axcq540_detail
#   
#   #add-point:單身複製前1
{<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
#   #end add-point
#   
#   #CREATE TEMP TABLE
#   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axcq540_detail AS ",
#                "SELECT * FROM xccd_t "
#   PREPARE repro_tbl FROM ls_sql
#   EXECUTE repro_tbl
#   FREE repro_tbl
#                
#   #將符合條件的資料丟入TEMP TABLE
#   INSERT INTO axcq540_detail SELECT * FROM xccd_t 
#                                         WHERE xccdent = g_enterprise AND  = g_xccdld_t
#                                         AND  = g_xccd001_t
#                                         AND  = g_xccd003_t
#                                         AND  = g_xccd004_t
#                                         AND  = g_xccd005_t
# 
#   
#   #將key修正為調整後   
#   UPDATE axcq540_detail 
#      #更新key欄位
#      SET  = g_xccd_m.xccdld
#          ,  = g_xccd_m.xccd001
#          ,  = g_xccd_m.xccd003
#          ,  = g_xccd_m.xccd004
#          ,  = g_xccd_m.xccd005
# 
#      #更新共用欄位
#      
# 
#   #add-point:單身修改前
{<point name="detail_reproduce.body.table1.b_update"/>}
#   #end add-point                                       
#  
#   #將資料塞回原table   
#   INSERT INTO xccd_t SELECT * FROM axcq540_detail
#   
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL 
#      LET g_errparam.extend = "reproduce" 
#      LET g_errparam.code   = SQLCA.sqlcode 
#      LET g_errparam.popup  = TRUE 
#      CALL cl_err()
# 
#      RETURN
#   END IF
#   
#   #add-point:單身複製中1
{<point name="detail_reproduce.body.table1.m_insert"/>}
#   #end add-point
#   
#   #刪除TEMP TABLE
#   DROP TABLE axcq540_detail
#   
#   #add-point:單身複製後1
{<point name="detail_reproduce.body.table1.a_insert"/>}
#   #end add-point
# 
#   #add-point:單身複製前
{<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
#   #end add-point
#   
#   #CREATE TEMP TABLE
#   LET ls_sql = 
#      "CREATE GLOBAL TEMPORARY TABLE axcq540_detail AS ",
#      "SELECT * FROM xcce_t "
#   PREPARE repro_tbl2 FROM ls_sql
#   EXECUTE repro_tbl2
#   FREE repro_tbl2
#      
#   #將符合條件的資料丟入TEMP TABLE
#   INSERT INTO axcq540_detail SELECT * FROM xcce_t
#                                         WHERE xcceent = g_enterprise AND xcceld = g_xccdld_t
#                                         AND xcce001 = g_xccd001_t
#                                         AND xcce003 = g_xccd003_t
#                                         AND xcce004 = g_xccd004_t
#                                         AND xcce005 = g_xccd005_t
# 
# 
#   #將key修正為調整後   
#   UPDATE axcq540_detail SET xcceld = g_xccd_m.xccdld
#                                       , xcce001 = g_xccd_m.xccd001
#                                       , xcce003 = g_xccd_m.xccd003
#                                       , xcce004 = g_xccd_m.xccd004
#                                       , xcce005 = g_xccd_m.xccd005
# 
#  
#   #將資料塞回原table   
#   INSERT INTO xcce_t SELECT * FROM axcq540_detail
#   
#   #add-point:單身複製中
{<point name="detail_reproduce.body.table2.m_insert"/>}
#   #end add-point
#   
#   #刪除TEMP TABLE
#   DROP TABLE axcq540_detail
#   
#   #add-point:單身複製後
{<point name="detail_reproduce.body.table2.a_insert"/>}
#   #end add-point
# 
#   #add-point:單身複製前
{<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
#   #end add-point
#   
#   #CREATE TEMP TABLE
#   LET ls_sql = 
#      "CREATE GLOBAL TEMPORARY TABLE axcq540_detail AS ",
#      "SELECT * FROM xcci_t "
#   PREPARE repro_tbl3 FROM ls_sql
#   EXECUTE repro_tbl3
#   FREE repro_tbl3
#      
#   #將符合條件的資料丟入TEMP TABLE
#   INSERT INTO axcq540_detail SELECT * FROM xcci_t
#                                         WHERE xccient = g_enterprise AND xccild = g_xccdld_t
#                                         AND xcci001 = g_xccd001_t
#                                         AND xcci003 = g_xccd003_t
#                                         AND xcci004 = g_xccd004_t
#                                         AND xcci005 = g_xccd005_t
# 
# 
#   #將key修正為調整後   
#   UPDATE axcq540_detail SET xccild = g_xccd_m.xccdld
#                                       , xcci001 = g_xccd_m.xccd001
#                                       , xcci003 = g_xccd_m.xccd003
#                                       , xcci004 = g_xccd_m.xccd004
#                                       , xcci005 = g_xccd_m.xccd005
# 
#  
#   #將資料塞回原table   
#   INSERT INTO xcci_t SELECT * FROM axcq540_detail
#   
#   #add-point:單身複製中
{<point name="detail_reproduce.body.table3.m_insert"/>}
#   #end add-point
#   
#   #刪除TEMP TABLE
#   DROP TABLE axcq540_detail
#   
#   #add-point:單身複製後
{<point name="detail_reproduce.body.table3.a_insert"/>}
#   #end add-point
# 
# 
#   
# 
#   
#   #多語言複製段落
#      #此段落由子樣板a38產生
#   #單身多語言複製
#   DROP TABLE axcq540_detail_lang
#   
#   #add-point:單身複製前1
{<point name="detail_reproduce.body.lang0.b_insert" mark="Y"/>}
#   #end add-point
#   
#   #CREATE TEMP TABLE
#   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axcq540_detail_lang AS ",
#                "SELECT * FROM sfaa_t "
#   PREPARE repro_sfaa_t FROM ls_sql
#   EXECUTE repro_sfaa_t
#   FREE repro_sfaa_t
#                
#   #將符合條件的資料丟入TEMP TABLE
#   INSERT INTO axcq540_detail_lang SELECT * FROM sfaa_t 
#                                             WHERE sfaaent = g_enterprise AND sfaadocno = g_xccdld_t
#                                             AND  = g_xccd001_t                                             AND  = g_xccd003_t                                             AND  = g_xccd004_t                                             AND  = g_xccd005_t
#   
#   #將key修正為調整後   
#   UPDATE axcq540_detail_lang 
#      #更新key欄位
#      SET sfaadocno = g_xccd_m.xccdld
#          ,  = g_xccd_m.xccd001          ,  = g_xccd_m.xccd003          ,  = g_xccd_m.xccd004          ,  = g_xccd_m.xccd005
#  
#   #將資料塞回原table   
#   INSERT INTO sfaa_t SELECT * FROM axcq540_detail_lang
#   
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL 
#      LET g_errparam.extend = "reproduce" 
#      LET g_errparam.code   = SQLCA.sqlcode 
#      LET g_errparam.popup  = TRUE 
#      CALL cl_err()
# 
#      RETURN
#   END IF
#   
#   #add-point:單身複製中1
{<point name="detail_reproduce.lang0.table1.m_insert"/>}
#   #end add-point
#   
#   #刪除TEMP TABLE
#   DROP TABLE axcq540_detail_lang
#   
#   #add-point:單身複製後1
{<point name="detail_reproduce.lang0.table1.a_insert"/>}
#   #end add-point
# 
#   #此段落由子樣板a38產生
#   #單身多語言複製
#   DROP TABLE axcq540_detail_lang
#   
#   #add-point:單身複製前1
{<point name="detail_reproduce.body.lang1.b_insert" mark="Y"/>}
#   #end add-point
#   
#   #CREATE TEMP TABLE
#   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axcq540_detail_lang AS ",
#                "SELECT * FROM xcce_t "
#   PREPARE repro_xcce_t FROM ls_sql
#   EXECUTE repro_xcce_t
#   FREE repro_xcce_t
#                
#   #將符合條件的資料丟入TEMP TABLE
#   INSERT INTO axcq540_detail_lang SELECT * FROM xcce_t 
#                                             WHERE xcceent = g_enterprise AND xcceld = g_xccdld_t
#                                             AND xcce001 = g_xccd001_t                                             AND xcce002 = g_xccd003_t                                             AND xcce003 = g_xccd004_t                                             AND xcce004 = g_xccd005_t
#   
#   #將key修正為調整後   
#   UPDATE axcq540_detail_lang 
#      #更新key欄位
#      SET xcceld = g_xccd_m.xccdld
#          , xcce001 = g_xccd_m.xccd001          , xcce002 = g_xccd_m.xccd003          , xcce003 = g_xccd_m.xccd004          , xcce004 = g_xccd_m.xccd005
#  
#   #將資料塞回原table   
#   INSERT INTO xcce_t SELECT * FROM axcq540_detail_lang
#   
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL 
#      LET g_errparam.extend = "reproduce" 
#      LET g_errparam.code   = SQLCA.sqlcode 
#      LET g_errparam.popup  = TRUE 
#      CALL cl_err()
# 
#      RETURN
#   END IF
#   
#   #add-point:單身複製中1
{<point name="detail_reproduce.lang1.table1.m_insert"/>}
#   #end add-point
#   
#   #刪除TEMP TABLE
#   DROP TABLE axcq540_detail_lang
#   
#   #add-point:單身複製後1
{<point name="detail_reproduce.lang1.table1.a_insert"/>}
#   #end add-point
# 
#   #此段落由子樣板a38產生
#   #單身多語言複製
#   DROP TABLE axcq540_detail_lang
#   
#   #add-point:單身複製前1
{<point name="detail_reproduce.body.lang2.b_insert" mark="Y"/>}
#   #end add-point
#   
#   #CREATE TEMP TABLE
#   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axcq540_detail_lang AS ",
#                "SELECT * FROM xcbb_t "
#   PREPARE repro_xcbb_t FROM ls_sql
#   EXECUTE repro_xcbb_t
#   FREE repro_xcbb_t
#                
#   #將符合條件的資料丟入TEMP TABLE
#   INSERT INTO axcq540_detail_lang SELECT * FROM xcbb_t 
#                                             WHERE xcbbent = g_enterprise AND xcbbcomp = g_xccdld_t
#                                             AND xcbb001 = g_xccd001_t                                             AND xcbb002 = g_xccd003_t                                             AND xcbb003 = g_xccd004_t                                             AND xcbb004 = g_xccd005_t
#   
#   #將key修正為調整後   
#   UPDATE axcq540_detail_lang 
#      #更新key欄位
#      SET xcbbcomp = g_xccd_m.xccdld
#          , xcbb001 = g_xccd_m.xccd001          , xcbb002 = g_xccd_m.xccd003          , xcbb003 = g_xccd_m.xccd004          , xcbb004 = g_xccd_m.xccd005
#  
#   #將資料塞回原table   
#   INSERT INTO xcbb_t SELECT * FROM axcq540_detail_lang
#   
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL 
#      LET g_errparam.extend = "reproduce" 
#      LET g_errparam.code   = SQLCA.sqlcode 
#      LET g_errparam.popup  = TRUE 
#      CALL cl_err()
# 
#      RETURN
#   END IF
#   
#   #add-point:單身複製中1
{<point name="detail_reproduce.lang2.table1.m_insert"/>}
#   #end add-point
#   
#   #刪除TEMP TABLE
#   DROP TABLE axcq540_detail_lang
#   
#   #add-point:單身複製後1
{<point name="detail_reproduce.lang2.table1.a_insert"/>}
#   #end add-point
# 
# 
#   
#   CALL s_transaction_end('Y','0')
#   
#   #已新增完, 調整資料內容(修改時使用)
#   LET g_xccdld_t = g_xccd_m.xccdld
#   LET g_xccd001_t = g_xccd_m.xccd001
#   LET g_xccd003_t = g_xccd_m.xccd003
#   LET g_xccd004_t = g_xccd_m.xccd004
#   LET g_xccd005_t = g_xccd_m.xccd005
# 
#   
#   DROP TABLE axcq540_detail
   
END FUNCTION

{</section>}

{<section id="axcq540.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axcq540_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
{<point name="delete.define"/>}
   #end add-point     
   
#   IF g_xccd_m.xccdld IS NULL
#   OR g_xccd_m.xccd001 IS NULL
#   OR g_xccd_m.xccd003 IS NULL
#   OR g_xccd_m.xccd004 IS NULL
#   OR g_xccd_m.xccd005 IS NULL
# 
#   THEN
#      INITIALIZE g_errparam TO NULL 
#      LET g_errparam.extend = "" 
#      LET g_errparam.code   = "std-00003" 
#      LET g_errparam.popup  = FALSE 
#      CALL cl_err()
#      RETURN
#   END IF
#   
#   
# 
#   CALL axcq540_show()
#   
#   CALL s_transaction_begin()
# 
#   OPEN axcq540_cl USING g_enterprise,g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005
#   IF STATUS THEN
#      INITIALIZE g_errparam TO NULL 
#      LET g_errparam.extend = "OPEN axcq540_cl:" 
#      LET g_errparam.code   = STATUS 
#      LET g_errparam.popup  = TRUE 
#      CALL cl_err()
# 
#      CLOSE axcq540_cl
#      CALL s_transaction_end('N','0')
#      RETURN
#   END IF
# 
#   #顯示最新的資料
#   EXECUTE axcq540_master_referesh USING g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd004, 
#       g_xccd_m.xccd005 INTO g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd001, 
#       g_xccd_m.xccd003,g_xccd_m.xccdcomp_desc,g_xccd_m.xccdld_desc,g_xccd_m.xccd003_desc
# 
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL 
#      LET g_errparam.extend = g_xccd_m.xccdld 
#      LET g_errparam.code   = SQLCA.sqlcode 
#      LET g_errparam.popup  = FALSE 
#      CALL cl_err()
#      CALL s_transaction_end('N','0')
#      RETURN
#   END IF
#   
#   #add-point:delete段before ask
{<point name="delete.before_ask"/>}
#   #end add-point 
# 
#   IF cl_ask_del_master() THEN              #確認一下
#   
#      #add-point:單頭刪除前
{<point name="delete.head.b_delete" mark="Y"/>}
#      #end add-point   
#      
#      #+ 此段落由子樣板a47產生
#      #刪除相關文件
#      CALL axcq540_set_pk_array()
#      #add-point:相關文件刪除前
{<point name="delete.befroe.related_document_remove"/>}
#      #end add-point   
#      CALL cl_doc_remove()  
# 
#  
#  
#      #資料備份
#      LET g_xccdld_t = g_xccd_m.xccdld
#      LET g_xccd001_t = g_xccd_m.xccd001
#      LET g_xccd003_t = g_xccd_m.xccd003
#      LET g_xccd004_t = g_xccd_m.xccd004
#      LET g_xccd005_t = g_xccd_m.xccd005
# 
# 
#      DELETE FROM xccd_t
#       WHERE xccdent = g_enterprise AND xccdld = g_xccd_m.xccdld
#         AND xccd001 = g_xccd_m.xccd001
#         AND xccd003 = g_xccd_m.xccd003
#         AND xccd004 = g_xccd_m.xccd004
#         AND xccd005 = g_xccd_m.xccd005
# 
#       
#      #add-point:單頭刪除中
{<point name="delete.head.m_delete"/>}
#      #end add-point
#       
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL 
#         LET g_errparam.extend = g_xccd_m.xccdld 
#         LET g_errparam.code   = SQLCA.sqlcode 
#         LET g_errparam.popup  = FALSE 
#         CALL cl_err()
# 
#         CALL s_transaction_end('N','0')
#         RETURN
#      END IF
#      
#      #add-point:單頭刪除後
{<point name="delete.head.a_delete"/>}
#      #end add-point
#  
#      #add-point:單身刪除前
{<point name="delete.body.b_delete" mark="Y"/>}
#      #end add-point
#      
#      DELETE FROM xccd_t
#       WHERE xccdent = g_enterprise AND  = g_xccd_m.xccdld
#         AND  = g_xccd_m.xccd001
#         AND  = g_xccd_m.xccd003
#         AND  = g_xccd_m.xccd004
#         AND  = g_xccd_m.xccd005
# 
# 
#      #add-point:單身刪除中
{<point name="delete.body.m_delete"/>}
#      #end add-point
#         
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL 
#         LET g_errparam.extend = "xccd_t" 
#         LET g_errparam.code   = SQLCA.sqlcode 
#         LET g_errparam.popup  = FALSE 
#         CALL cl_err()
# 
#         CALL s_transaction_end('N','0')
#         RETURN
#      END IF    
# 
#      #add-point:單身刪除後
{<point name="delete.body.a_delete"/>}
#      #end add-point
#      
#            
#                                                               
#      #add-point:單身刪除前
{<point name="delete.body.b_delete2" mark="Y"/>}
#      #end add-point
#      DELETE FROM xcce_t
#       WHERE xcceent = g_enterprise AND
#             xcceld = g_xccd_m.xccdld AND xcce001 = g_xccd_m.xccd001 AND xcce003 = g_xccd_m.xccd003 AND xcce004 = g_xccd_m.xccd004 AND xcce005 = g_xccd_m.xccd005
#      #add-point:單身刪除中
{<point name="delete.body.m_delete2"/>}
#      #end add-point
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL 
#         LET g_errparam.extend = "xcce_t" 
#         LET g_errparam.code   = SQLCA.sqlcode 
#         LET g_errparam.popup  = FALSE 
#         CALL cl_err()
# 
#         CALL s_transaction_end('N','0')
#         RETURN
#      END IF      
# 
#      #add-point:單身刪除後
{<point name="delete.body.a_delete2"/>}
#      #end add-point
# 
#      #add-point:單身刪除前
{<point name="delete.body.b_delete3" mark="Y"/>}
#      #end add-point
#      DELETE FROM xcci_t
#       WHERE xccient = g_enterprise AND
#             xccild = g_xccd_m.xccdld AND xcci001 = g_xccd_m.xccd001 AND xcci003 = g_xccd_m.xccd003 AND xcci004 = g_xccd_m.xccd004 AND xcci005 = g_xccd_m.xccd005
#      #add-point:單身刪除中
{<point name="delete.body.m_delete3"/>}
#      #end add-point
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL 
#         LET g_errparam.extend = "xcci_t" 
#         LET g_errparam.code   = SQLCA.sqlcode 
#         LET g_errparam.popup  = FALSE 
#         CALL cl_err()
# 
#         CALL s_transaction_end('N','0')
#         RETURN
#      END IF      
# 
#      #add-point:單身刪除後
{<point name="delete.body.a_delete3"/>}
#      #end add-point
# 
# 
# 
# 
#                                                               
#      CLEAR FORM
#      CALL g_xccd_d.clear() 
#      CALL g_xccd2_d.clear()       
#      CALL g_xccd3_d.clear()       
# 
#     
#      CALL axcq540_ui_browser_refresh()  
#      #CALL axcq540_ui_headershow()  
#      #CALL axcq540_ui_detailshow()
#      
#      IF g_browser_cnt > 0 THEN 
#         #CALL axcq540_browser_fill("")
#         CALL axcq540_fetch('P')
#         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
#         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
#      ELSE
#         #LET g_wc = " 1=2"
#         #CALL axcq540_browser_fill("F")
#         CLEAR FORM
#      END IF
# 
#      #add-point:多語言刪除
{<point name="delete.lang.before_delete"/>}
#      #end add-point
#      
#      #單頭多語言刪除
#      
#      
#      #單身多語言刪除
#      INITIALIZE l_var_keys_bak TO NULL 
#         INITIALIZE l_field_keys TO NULL 
#         LET l_field_keys[01] = 'xcbbcomp'
#         LET l_field_keys[02] = 'xcbb001'
#         LET l_field_keys[03] = 'xcbb002'
#         LET l_field_keys[04] = 'xcbb003'
#         LET l_field_keys[05] = 'xcbb004'
#         LET l_var_keys_bak[01] = g_detail_multi_table_t.xcbbcomp
#         LET l_var_keys_bak[02] = g_detail_multi_table_t.xcbb001
#         LET l_var_keys_bak[03] = g_detail_multi_table_t.xcbb002
#         LET l_var_keys_bak[04] = g_detail_multi_table_t.xcbb003
#         LET l_var_keys_bak[05] = g_detail_multi_table_t.xcbb004
#         CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'xcbb_t')
# 
#      
# 
#      
# 
# 
# 
#   
#      #add-point:多語言刪除
{<point name="delete.lang.delete"/>}
#      #end add-point
#   
#   END IF
# 
#   CALL s_transaction_end('Y','0')
#   
#   CLOSE axcq540_cl
# 
#   #流程通知預埋點-D
#   CALL cl_flow_notify(g_xccd_m.xccdld,'D')
    
END FUNCTION

{</section>}

{<section id="axcq540.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axcq540_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
{<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_xccd_d.clear()    #g_xccd_d 單頭及單身 
   CALL g_xccd2_d.clear()
   CALL g_xccd3_d.clear()
 
 
   #add-point:b_fill段sql_before
{<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF axcq540_fill_chk(1) THEN
   
#     LET g_sql = "SELECT  UNIQUE xccd006,xccd002  FROM xccd_t",   
#                 " INNER JOIN xccd_t ON xccdld =  ",
#                 " AND xccd001 =  ",
#                 " AND xccd003 =  ",
#                 " AND xccd004 =  ",
#                 " AND xccd005 =  ",
#
#                 #" LEFT JOIN sfaa_t ON sfaaent = '"||g_enterprise||"' AND xccdld = sfaadocnoxccd001 = xccd003 = xccd004 = xccd005 = xcci002 = xcci006 = xcci007 = xcci008 = xcci009 =  LEFT JOIN xcce_t ON xcceent = '"||g_enterprise||"' AND xccdld = xcceld AND xccd001 = xcce001 AND xccd003 = xcce002 AND xccd004 = xcce003 AND xccd005 = xcce004 AND xcci002 = xcce005 AND xcci006 = xcce006 AND xcci007 = xcce007 AND xcci008 = xcce008 AND xcci009 = xcce009 LEFT JOIN xcbb_t ON xcbbent = '"||g_enterprise||"' AND xccdld = xcbbcomp AND xccd001 = xcbb001 AND xccd003 = xcbb002 AND xccd004 = xcbb003 AND xccd005 = xcbb004xcci002 = xcci006 = xcci007 = xcci008 = xcci009 =",
#                 
#                 " LEFT JOIN sfaa_t ON sfaaent = '"||g_enterprise||"' AND xccdld = sfaadocno LEFT JOIN xcce_t ON xcceent = '"||g_enterprise||"' AND xccdld = xcceld AND xccd001 = xcce001 AND xccd003 = xcce002 AND xccd004 = xcce003 AND xccd005 = xcce004 AND xcci002 = xcce005 AND xcci006 = xcce006 AND xcci007 = xcce007 AND xcci008 = xcce008 AND xcci009 = xcce009 LEFT JOIN xcbb_t ON xcbbent = '"||g_enterprise||"' AND xccdld = xcbbcomp AND xccd001 = xcbb001 AND xccd003 = xcbb002 AND xccd004 = xcbb003 AND xccd005 = xcbb004",
#                 
#                 " WHERE"
#     LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
#     #add-point:b_fill段sql_before
{<point name="b_fill.body.fill_sql"/>}
#     #end add-point
#     IF NOT cl_null(g_wc2_table1) THEN
#        LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
#     END IF
#     
#     #子單身的WC
#     
#     
#     LET g_sql = g_sql, " ORDER BY xccd_t.xccdld,xccd_t.xccd001,xccd_t.xccd003,xccd_t.xccd004,xccd_t.xccd005"
#     
      #add-point:單身填充控制
{<point name="b_fill.sql"/>}
      #end add-point
#     
#     LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
#     PREPARE axcq540_pb FROM g_sql
#     DECLARE b_fill_cs CURSOR FOR axcq540_pb
#     
#     LET g_cnt = l_ac
#     LET l_ac = 1
#     
#     OPEN b_fill_cs USING g_enterprise,g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005
#                                              
#     FOREACH b_fill_cs INTO g_xccd_d[l_ac].xccd006,g_xccd_d[l_ac].xccd002
#        IF SQLCA.sqlcode THEN
#           INITIALIZE g_errparam TO NULL 
#           LET g_errparam.extend = "FOREACH:" 
#           LET g_errparam.code   = SQLCA.sqlcode 
#           LET g_errparam.popup  = TRUE 
#           CALL cl_err()
#
#           EXIT FOREACH
#        END IF
#       
#        #add-point:b_fill段資料填充
{<point name="b_fill.fill"/>}
#        #end add-point
#     
#        IF l_ac > g_max_rec THEN
#           IF g_error_show = 1 THEN
#              INITIALIZE g_errparam TO NULL 
#              LET g_errparam.extend = l_ac
#              LET g_errparam.code   = 9035 
#              LET g_errparam.popup  = TRUE 
#              CALL cl_err()
#           END IF
#           EXIT FOREACH
#        END IF
#        
#        LET l_ac = l_ac + 1
#     END FOREACH
#     LET g_error_show = 0
#  
#  END IF
#  
#  #判斷是否填充
#  IF axcq540_fill_chk(2) THEN
#     LET g_sql = "SELECT  UNIQUE xcce006,xcce007,xcce008,xcce009,xcce002,xcce101,xcce102a,xcce102b, 
#         xcce102c,xcce102d,xcce102e,xcce102f,xcce102g,xcce102h,xcce102,xcce201,xcce202a,xcce202b,xcce202c, 
#         xcce202d,xcce202e,xcce202f,xcce202g,xcce202h,xcce202,xcce301,xcce302a,xcce302b,xcce302c,xcce302d, 
#         xcce302e,xcce302f,xcce302g,xcce302h,xcce302,xcce303,xcce304a,xcce304b,xcce304c,xcce304d,xcce304e, 
#         xcce304f,xcce304g,xcce304h,xcce304,xcce307,xcce308a,xcce308b,xcce308c,xcce308d,xcce308e,xcce308f, 
#         xcce308g,xcce308h,xcce308,xcce901,xcce902a,xcce902b,xcce902c,xcce902d,xcce902e,xcce902f,xcce902g, 
#         xcce902h,xcce902  FROM xcce_t",   
#                 " INNER JOIN xccd_t ON xccdld = xcceld ",
#                 " AND xccd001 = xcce001 ",
#                 " AND xccd003 = xcce003 ",
#                 " AND xccd004 = xcce004 ",
#                 " AND xccd005 = xcce005 ",
#
#                 "",
#                 
#                 
#                 " WHERE xcceent=? AND xcceld=? AND xcce001=? AND xcce003=? AND xcce004=? AND xcce005=?"   
#     LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
#     #add-point:b_fill段sql_before
{<point name="b_fill.body2.fill_sql"/>}
#     #end add-point
#     IF NOT cl_null(g_wc2_table2) THEN
#        LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
#     END IF
#     
#     #子單身的WC
#     
#     
#     LET g_sql = g_sql, " ORDER BY xcce_t.xcce002,xcce_t.xcce006,xcce_t.xcce007,xcce_t.xcce008,xcce_t.xcce009"
#     
#     #add-point:單身填充控制
{<point name="b_fill.sql2"/>}
#     #end add-point
#     
#     LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
#     PREPARE axcq540_pb2 FROM g_sql
#     DECLARE b_fill_cs2 CURSOR FOR axcq540_pb2
#     
#     LET l_ac = 1
#     
#     OPEN b_fill_cs2 USING g_enterprise,g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005
#                                              
#     FOREACH b_fill_cs2 INTO g_xccd2_d[l_ac].xcce006,g_xccd2_d[l_ac].xcce007,g_xccd2_d[l_ac].xcce008, 
#         g_xccd2_d[l_ac].xcce009,g_xccd2_d[l_ac].xcce002,g_xccd2_d[l_ac].xcce101,g_xccd2_d[l_ac].xcce102a, 
#         g_xccd2_d[l_ac].xcce102b,g_xccd2_d[l_ac].xcce102c,g_xccd2_d[l_ac].xcce102d,g_xccd2_d[l_ac].xcce102e, 
#         g_xccd2_d[l_ac].xcce102f,g_xccd2_d[l_ac].xcce102g,g_xccd2_d[l_ac].xcce102h,g_xccd2_d[l_ac].xcce102, 
#         g_xccd2_d[l_ac].xcce201,g_xccd2_d[l_ac].xcce202a,g_xccd2_d[l_ac].xcce202b,g_xccd2_d[l_ac].xcce202c, 
#         g_xccd2_d[l_ac].xcce202d,g_xccd2_d[l_ac].xcce202e,g_xccd2_d[l_ac].xcce202f,g_xccd2_d[l_ac].xcce202g, 
#         g_xccd2_d[l_ac].xcce202h,g_xccd2_d[l_ac].xcce202,g_xccd2_d[l_ac].xcce301,g_xccd2_d[l_ac].xcce302a, 
#         g_xccd2_d[l_ac].xcce302b,g_xccd2_d[l_ac].xcce302c,g_xccd2_d[l_ac].xcce302d,g_xccd2_d[l_ac].xcce302e, 
#         g_xccd2_d[l_ac].xcce302f,g_xccd2_d[l_ac].xcce302g,g_xccd2_d[l_ac].xcce302h,g_xccd2_d[l_ac].xcce302, 
#         g_xccd2_d[l_ac].xcce303,g_xccd2_d[l_ac].xcce304a,g_xccd2_d[l_ac].xcce304b,g_xccd2_d[l_ac].xcce304c, 
#         g_xccd2_d[l_ac].xcce304d,g_xccd2_d[l_ac].xcce304e,g_xccd2_d[l_ac].xcce304f,g_xccd2_d[l_ac].xcce304g, 
#         g_xccd2_d[l_ac].xcce304h,g_xccd2_d[l_ac].xcce304,g_xccd2_d[l_ac].xcce307,g_xccd2_d[l_ac].xcce308a, 
#         g_xccd2_d[l_ac].xcce308b,g_xccd2_d[l_ac].xcce308c,g_xccd2_d[l_ac].xcce308d,g_xccd2_d[l_ac].xcce308e, 
#         g_xccd2_d[l_ac].xcce308f,g_xccd2_d[l_ac].xcce308g,g_xccd2_d[l_ac].xcce308h,g_xccd2_d[l_ac].xcce308, 
#         g_xccd2_d[l_ac].xcce901,g_xccd2_d[l_ac].xcce902a,g_xccd2_d[l_ac].xcce902b,g_xccd2_d[l_ac].xcce902c, 
#         g_xccd2_d[l_ac].xcce902d,g_xccd2_d[l_ac].xcce902e,g_xccd2_d[l_ac].xcce902f,g_xccd2_d[l_ac].xcce902g, 
#         g_xccd2_d[l_ac].xcce902h,g_xccd2_d[l_ac].xcce902
#        IF SQLCA.sqlcode THEN
#           INITIALIZE g_errparam TO NULL 
#           LET g_errparam.extend = "FOREACH:" 
#           LET g_errparam.code   = SQLCA.sqlcode 
#           LET g_errparam.popup  = TRUE 
#           CALL cl_err()
#
#           EXIT FOREACH
#        END IF
#       
#        #add-point:b_fill段資料填充
{<point name="b_fill2.fill"/>}
#        #end add-point
#     
#        LET l_ac = l_ac + 1
#        IF l_ac > g_max_rec THEN
#           INITIALIZE g_errparam TO NULL 
#           LET g_errparam.extend = l_ac
#           LET g_errparam.code   = 9035 
#           LET g_errparam.popup  = TRUE 
#           CALL cl_err()
#           EXIT FOREACH
#        END IF
#        
#     END FOREACH
#  END IF
#
#  #判斷是否填充
#  IF axcq540_fill_chk(3) THEN
#     LET g_sql = "SELECT  UNIQUE xcci006,xcci007,xcci008,xcci009,xcci002,xcci101,xcci102a,xcci102b, 
#         xcci102c,xcci102d,xcci102e,xcci102f,xcci102g,xcci102h,xcci102,xcci201,xcci202a,xcci202b,xcci202c, 
#         xcci202d,xcci202e,xcci202f,xcci202g,xcci202h,xcci202,xcci301,xcci302a,xcci302b,xcci302c,xcci302d, 
#         xcci302e,xcci302f,xcci302g,xcci302h,xcci302,xcci303,xcci304a,xcci304b,xcci304c,xcci304d,xcci304e, 
#         xcci304f,xcci304g,xcci304h,xcci304,xcci901,xcci902a,xcci902b,xcci902c,xcci902d,xcci902e,xcci902f, 
#         xcci902g,xcci902h,xcci902 ,t4.imaal003 FROM xcci_t",   
#                 " INNER JOIN xccd_t ON xccdld = xccild ",
#                 " AND xccd001 = xcci001 ",
#                 " AND xccd003 = xcci003 ",
#                 " AND xccd004 = xcci004 ",
#                 " AND xccd005 = xcci005 ",
#
#                 "",
#                 
#                                " LEFT JOIN imaal_t t4 ON t4.imaalent='"||g_enterprise||"' AND t4.imaal001=xcci007 AND t4.imaal002='"||g_dlang||"' ",
#
#                 " WHERE xccient=? AND xccild=? AND xcci001=? AND xcci003=? AND xcci004=? AND xcci005=?"   
#     LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
#     #add-point:b_fill段sql_before
{<point name="b_fill.body3.fill_sql"/>}
#     #end add-point
#     IF NOT cl_null(g_wc2_table3) THEN
#        LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
#     END IF
#     
#     #子單身的WC
#     
#     
#     LET g_sql = g_sql, " ORDER BY xcci_t.xcci002,xcci_t.xcci006,xcci_t.xcci007,xcci_t.xcci008,xcci_t.xcci009"
#     
#     #add-point:單身填充控制
{<point name="b_fill.sql3"/>}
#     #end add-point
#     
#     LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
#     PREPARE axcq540_pb3 FROM g_sql
#     DECLARE b_fill_cs3 CURSOR FOR axcq540_pb3
#     
#     LET l_ac = 1
#     
#     OPEN b_fill_cs3 USING g_enterprise,g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005
#                                              
#     FOREACH b_fill_cs3 INTO g_xccd3_d[l_ac].xcci006,g_xccd3_d[l_ac].xcci007,g_xccd3_d[l_ac].xcci008, 
#         g_xccd3_d[l_ac].xcci009,g_xccd3_d[l_ac].xcci002,g_xccd3_d[l_ac].xcci101,g_xccd3_d[l_ac].xcci102a, 
#         g_xccd3_d[l_ac].xcci102b,g_xccd3_d[l_ac].xcci102c,g_xccd3_d[l_ac].xcci102d,g_xccd3_d[l_ac].xcci102e, 
#         g_xccd3_d[l_ac].xcci102f,g_xccd3_d[l_ac].xcci102g,g_xccd3_d[l_ac].xcci102h,g_xccd3_d[l_ac].xcci102, 
#         g_xccd3_d[l_ac].xcci201,g_xccd3_d[l_ac].xcci202a,g_xccd3_d[l_ac].xcci202b,g_xccd3_d[l_ac].xcci202c, 
#         g_xccd3_d[l_ac].xcci202d,g_xccd3_d[l_ac].xcci202e,g_xccd3_d[l_ac].xcci202f,g_xccd3_d[l_ac].xcci202g, 
#         g_xccd3_d[l_ac].xcci202h,g_xccd3_d[l_ac].xcci202,g_xccd3_d[l_ac].xcci301,g_xccd3_d[l_ac].xcci302a, 
#         g_xccd3_d[l_ac].xcci302b,g_xccd3_d[l_ac].xcci302c,g_xccd3_d[l_ac].xcci302d,g_xccd3_d[l_ac].xcci302e, 
#         g_xccd3_d[l_ac].xcci302f,g_xccd3_d[l_ac].xcci302g,g_xccd3_d[l_ac].xcci302h,g_xccd3_d[l_ac].xcci302, 
#         g_xccd3_d[l_ac].xcci303,g_xccd3_d[l_ac].xcci304a,g_xccd3_d[l_ac].xcci304b,g_xccd3_d[l_ac].xcci304c, 
#         g_xccd3_d[l_ac].xcci304d,g_xccd3_d[l_ac].xcci304e,g_xccd3_d[l_ac].xcci304f,g_xccd3_d[l_ac].xcci304g, 
#         g_xccd3_d[l_ac].xcci304h,g_xccd3_d[l_ac].xcci304,g_xccd3_d[l_ac].xcci901,g_xccd3_d[l_ac].xcci902a, 
#         g_xccd3_d[l_ac].xcci902b,g_xccd3_d[l_ac].xcci902c,g_xccd3_d[l_ac].xcci902d,g_xccd3_d[l_ac].xcci902e, 
#         g_xccd3_d[l_ac].xcci902f,g_xccd3_d[l_ac].xcci902g,g_xccd3_d[l_ac].xcci902h,g_xccd3_d[l_ac].xcci902, 
#         g_xccd3_d[l_ac].xcci007_desc
#        IF SQLCA.sqlcode THEN
#           INITIALIZE g_errparam TO NULL 
#           LET g_errparam.extend = "FOREACH:" 
#           LET g_errparam.code   = SQLCA.sqlcode 
#           LET g_errparam.popup  = TRUE 
#           CALL cl_err()
#
#           EXIT FOREACH
#        END IF
#       
#        #add-point:b_fill段資料填充
{<point name="b_fill3.fill"/>}
#        #end add-point
#     
#        LET l_ac = l_ac + 1
#        IF l_ac > g_max_rec THEN
#           INITIALIZE g_errparam TO NULL 
#           LET g_errparam.extend = l_ac
#           LET g_errparam.code   = 9035 
#           LET g_errparam.popup  = TRUE 
#           CALL cl_err()
#           EXIT FOREACH
#        END IF
#        
#     END FOREACH
#  END IF
#
#
#  
#  #add-point:browser_fill段其他table處理
{<point name="browser_fill.other_fill"/>}
#  #end add-point
#  
#  CALL g_xccd_d.deleteElement(g_xccd_d.getLength())
#  CALL g_xccd2_d.deleteElement(g_xccd2_d.getLength())
#  CALL g_xccd3_d.deleteElement(g_xccd3_d.getLength())
#
#  
#
#  LET l_ac = g_cnt
#  LET g_cnt = 0  
#  
#  FREE axcq540_pb
#  FREE axcq540_pb2
#
#  FREE axcq540_pb3
 
 
   
END FUNCTION

{</section>}

{<section id="axcq540.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axcq540_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM xccd_t
       WHERE xccdent = g_enterprise AND
         xccdld = ps_keys_bak[1] AND xccd001 = ps_keys_bak[2] AND xccd003 = ps_keys_bak[3] AND xccd004 = ps_keys_bak[4] AND xccd005 = ps_keys_bak[5]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM xcce_t
       WHERE xcceent = g_enterprise AND
         xcceld = ps_keys_bak[1] AND xcce001 = ps_keys_bak[2] AND xcce003 = ps_keys_bak[3] AND xcce004 = ps_keys_bak[4] AND xcce005 = ps_keys_bak[5] AND xcce002 = ps_keys_bak[6] AND xcce006 = ps_keys_bak[7] AND xcce007 = ps_keys_bak[8] AND xcce008 = ps_keys_bak[9] AND xcce009 = ps_keys_bak[10]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xcce_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM xcci_t
       WHERE xccient = g_enterprise AND
         xccild = ps_keys_bak[1] AND xcci001 = ps_keys_bak[2] AND xcci003 = ps_keys_bak[3] AND xcci004 = ps_keys_bak[4] AND xcci005 = ps_keys_bak[5] AND xcci002 = ps_keys_bak[6] AND xcci006 = ps_keys_bak[7] AND xcci007 = ps_keys_bak[8] AND xcci008 = ps_keys_bak[9] AND xcci009 = ps_keys_bak[10]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xcci_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="axcq540.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axcq540_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
{<point name="insert_b.define"/>}
   #end add-point     
   
#   #判斷是否是同一群組的table
#   LET ls_group = "'1',"
#   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
#      #add-point:insert_b段資料新增前
{<point name="insert_b.before_insert" mark="Y"/>}
#      #end add-point 
#      INSERT INTO xccd_t
#                  (xccdent,
#                   ,
#                   xccdld,xccd001,xccd003,xccd004,xccd005
#                   ,xccd006,xccd002) 
#            VALUES(g_enterprise,
#                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5]
#                   ,g_xccd_d[g_detail_idx].xccd006,g_xccd_d[g_detail_idx].xccd002)
#      #add-point:insert_b段資料新增中
{<point name="insert_b.m_insert"/>}
#      #end add-point 
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL 
#         LET g_errparam.extend = "xccd_t" 
#         LET g_errparam.code   = SQLCA.sqlcode 
#         LET g_errparam.popup  = FALSE 
#         CALL cl_err()
# 
#      END IF
#      #add-point:insert_b段資料新增後
{<point name="insert_b.after_insert"/>}
#      #end add-point 
#   END IF
#   
#   LET ls_group = "'2',"
#   #判斷是否是同一群組的table
#   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
#      #add-point:insert_b段資料新增前
{<point name="insert_b.before_insert2" mark="Y"/>}
#      #end add-point 
#      INSERT INTO xcce_t
#                  (xcceent,
#                   xcceld,xcce001,xcce003,xcce004,xcce005,
#                   xcce002,xcce006,xcce007,xcce008,xcce009
#                   ,xcce101,xcce102a,xcce102b,xcce102c,xcce102d,xcce102e,xcce102f,xcce102g,xcce102h,xcce102,xcce201,xcce202a,xcce202b,xcce202c,xcce202d,xcce202e,xcce202f,xcce202g,xcce202h,xcce202,xcce301,xcce302a,xcce302b,xcce302c,xcce302d,xcce302e,xcce302f,xcce302g,xcce302h,xcce302,xcce303,xcce304a,xcce304b,xcce304c,xcce304d,xcce304e,xcce304f,xcce304g,xcce304h,xcce304,xcce307,xcce308a,xcce308b,xcce308c,xcce308d,xcce308e,xcce308f,xcce308g,xcce308h,xcce308,xcce901,xcce902a,xcce902b,xcce902c,xcce902d,xcce902e,xcce902f,xcce902g,xcce902h,xcce902) 
#            VALUES(g_enterprise,
#                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6],ps_keys[7],ps_keys[8],ps_keys[9],ps_keys[10]
#                   ,g_xccd2_d[g_detail_idx].xcce101,g_xccd2_d[g_detail_idx].xcce102a,g_xccd2_d[g_detail_idx].xcce102b, 
#                       g_xccd2_d[g_detail_idx].xcce102c,g_xccd2_d[g_detail_idx].xcce102d,g_xccd2_d[g_detail_idx].xcce102e, 
#                       g_xccd2_d[g_detail_idx].xcce102f,g_xccd2_d[g_detail_idx].xcce102g,g_xccd2_d[g_detail_idx].xcce102h, 
#                       g_xccd2_d[g_detail_idx].xcce102,g_xccd2_d[g_detail_idx].xcce201,g_xccd2_d[g_detail_idx].xcce202a, 
#                       g_xccd2_d[g_detail_idx].xcce202b,g_xccd2_d[g_detail_idx].xcce202c,g_xccd2_d[g_detail_idx].xcce202d, 
#                       g_xccd2_d[g_detail_idx].xcce202e,g_xccd2_d[g_detail_idx].xcce202f,g_xccd2_d[g_detail_idx].xcce202g, 
#                       g_xccd2_d[g_detail_idx].xcce202h,g_xccd2_d[g_detail_idx].xcce202,g_xccd2_d[g_detail_idx].xcce301, 
#                       g_xccd2_d[g_detail_idx].xcce302a,g_xccd2_d[g_detail_idx].xcce302b,g_xccd2_d[g_detail_idx].xcce302c, 
#                       g_xccd2_d[g_detail_idx].xcce302d,g_xccd2_d[g_detail_idx].xcce302e,g_xccd2_d[g_detail_idx].xcce302f, 
#                       g_xccd2_d[g_detail_idx].xcce302g,g_xccd2_d[g_detail_idx].xcce302h,g_xccd2_d[g_detail_idx].xcce302, 
#                       g_xccd2_d[g_detail_idx].xcce303,g_xccd2_d[g_detail_idx].xcce304a,g_xccd2_d[g_detail_idx].xcce304b, 
#                       g_xccd2_d[g_detail_idx].xcce304c,g_xccd2_d[g_detail_idx].xcce304d,g_xccd2_d[g_detail_idx].xcce304e, 
#                       g_xccd2_d[g_detail_idx].xcce304f,g_xccd2_d[g_detail_idx].xcce304g,g_xccd2_d[g_detail_idx].xcce304h, 
#                       g_xccd2_d[g_detail_idx].xcce304,g_xccd2_d[g_detail_idx].xcce307,g_xccd2_d[g_detail_idx].xcce308a, 
#                       g_xccd2_d[g_detail_idx].xcce308b,g_xccd2_d[g_detail_idx].xcce308c,g_xccd2_d[g_detail_idx].xcce308d, 
#                       g_xccd2_d[g_detail_idx].xcce308e,g_xccd2_d[g_detail_idx].xcce308f,g_xccd2_d[g_detail_idx].xcce308g, 
#                       g_xccd2_d[g_detail_idx].xcce308h,g_xccd2_d[g_detail_idx].xcce308,g_xccd2_d[g_detail_idx].xcce901, 
#                       g_xccd2_d[g_detail_idx].xcce902a,g_xccd2_d[g_detail_idx].xcce902b,g_xccd2_d[g_detail_idx].xcce902c, 
#                       g_xccd2_d[g_detail_idx].xcce902d,g_xccd2_d[g_detail_idx].xcce902e,g_xccd2_d[g_detail_idx].xcce902f, 
#                       g_xccd2_d[g_detail_idx].xcce902g,g_xccd2_d[g_detail_idx].xcce902h,g_xccd2_d[g_detail_idx].xcce902) 
#
#      #add-point:insert_b段資料新增中
{<point name="insert_b.m_insert2"/>}
#      #end add-point
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL 
#         LET g_errparam.extend = "xcce_t" 
#         LET g_errparam.code   = SQLCA.sqlcode 
#         LET g_errparam.popup  = FALSE 
#         CALL cl_err()
# 
#      END IF
#      #add-point:insert_b段資料新增後
{<point name="insert_b.after_insert2"/>}
#      #end add-point
#   END IF
# 
#   LET ls_group = "'3',"
#   #判斷是否是同一群組的table
#   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
#      #add-point:insert_b段資料新增前
{<point name="insert_b.before_insert3" mark="Y"/>}
#      #end add-point 
#      INSERT INTO xcci_t
#                  (xccient,
#                   xccild,xcci001,xcci003,xcci004,xcci005,
#                   xcci002,xcci006,xcci007,xcci008,xcci009
#                   ,xcci101,xcci102a,xcci102b,xcci102c,xcci102d,xcci102e,xcci102f,xcci102g,xcci102h,xcci102,xcci201,xcci202a,xcci202b,xcci202c,xcci202d,xcci202e,xcci202f,xcci202g,xcci202h,xcci202,xcci301,xcci302a,xcci302b,xcci302c,xcci302d,xcci302e,xcci302f,xcci302g,xcci302h,xcci302,xcci303,xcci304a,xcci304b,xcci304c,xcci304d,xcci304e,xcci304f,xcci304g,xcci304h,xcci304,xcci901,xcci902a,xcci902b,xcci902c,xcci902d,xcci902e,xcci902f,xcci902g,xcci902h,xcci902) 
#            VALUES(g_enterprise,
#                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6],ps_keys[7],ps_keys[8],ps_keys[9],ps_keys[10]
#                   ,g_xccd3_d[g_detail_idx].xcci101,g_xccd3_d[g_detail_idx].xcci102a,g_xccd3_d[g_detail_idx].xcci102b, 
#                       g_xccd3_d[g_detail_idx].xcci102c,g_xccd3_d[g_detail_idx].xcci102d,g_xccd3_d[g_detail_idx].xcci102e, 
#                       g_xccd3_d[g_detail_idx].xcci102f,g_xccd3_d[g_detail_idx].xcci102g,g_xccd3_d[g_detail_idx].xcci102h, 
#                       g_xccd3_d[g_detail_idx].xcci102,g_xccd3_d[g_detail_idx].xcci201,g_xccd3_d[g_detail_idx].xcci202a, 
#                       g_xccd3_d[g_detail_idx].xcci202b,g_xccd3_d[g_detail_idx].xcci202c,g_xccd3_d[g_detail_idx].xcci202d, 
#                       g_xccd3_d[g_detail_idx].xcci202e,g_xccd3_d[g_detail_idx].xcci202f,g_xccd3_d[g_detail_idx].xcci202g, 
#                       g_xccd3_d[g_detail_idx].xcci202h,g_xccd3_d[g_detail_idx].xcci202,g_xccd3_d[g_detail_idx].xcci301, 
#                       g_xccd3_d[g_detail_idx].xcci302a,g_xccd3_d[g_detail_idx].xcci302b,g_xccd3_d[g_detail_idx].xcci302c, 
#                       g_xccd3_d[g_detail_idx].xcci302d,g_xccd3_d[g_detail_idx].xcci302e,g_xccd3_d[g_detail_idx].xcci302f, 
#                       g_xccd3_d[g_detail_idx].xcci302g,g_xccd3_d[g_detail_idx].xcci302h,g_xccd3_d[g_detail_idx].xcci302, 
#                       g_xccd3_d[g_detail_idx].xcci303,g_xccd3_d[g_detail_idx].xcci304a,g_xccd3_d[g_detail_idx].xcci304b, 
#                       g_xccd3_d[g_detail_idx].xcci304c,g_xccd3_d[g_detail_idx].xcci304d,g_xccd3_d[g_detail_idx].xcci304e, 
#                       g_xccd3_d[g_detail_idx].xcci304f,g_xccd3_d[g_detail_idx].xcci304g,g_xccd3_d[g_detail_idx].xcci304h, 
#                       g_xccd3_d[g_detail_idx].xcci304,g_xccd3_d[g_detail_idx].xcci901,g_xccd3_d[g_detail_idx].xcci902a, 
#                       g_xccd3_d[g_detail_idx].xcci902b,g_xccd3_d[g_detail_idx].xcci902c,g_xccd3_d[g_detail_idx].xcci902d, 
#                       g_xccd3_d[g_detail_idx].xcci902e,g_xccd3_d[g_detail_idx].xcci902f,g_xccd3_d[g_detail_idx].xcci902g, 
#                       g_xccd3_d[g_detail_idx].xcci902h,g_xccd3_d[g_detail_idx].xcci902)
#      #add-point:insert_b段資料新增中
{<point name="insert_b.m_insert3"/>}
#      #end add-point
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL 
#         LET g_errparam.extend = "xcci_t" 
#         LET g_errparam.code   = SQLCA.sqlcode 
#         LET g_errparam.popup  = FALSE 
#         CALL cl_err()
# 
#      END IF
#      #add-point:insert_b段資料新增後
{<point name="insert_b.after_insert3"/>}
#      #end add-point
#   END IF
# 
# 
#   
# 
#   
#   #add-point:insert_b段other
{<point name="insert_b.other"/>}
#   #end add-point     
   
END FUNCTION

{</section>}

{<section id="axcq540.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axcq540_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
{<point name="update_b.define"/>}
   #end add-point     
   
#   #判斷key是否有改變
#   LET lb_chk = TRUE
#   FOR li_idx = 1 TO ps_keys.getLength()
#      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
#         LET lb_chk = FALSE
#         EXIT FOR
#      END IF
#   END FOR
#   
#   #不需要做處理
#   IF lb_chk THEN
#      RETURN
#   END IF
#   
#   #判斷是否是同一群組的table
#   LET ls_group = "'1',"
#   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xccd_t" THEN
#      #add-point:update_b段修改前
{<point name="update_b.before_update" mark="Y"/>}
#      #end add-point     
#      UPDATE xccd_t 
#         SET (,
#              xccdld,xccd001,xccd003,xccd004,xccd005
#              ,xccd006,xccd002) 
#              = 
#             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5]
#              ,g_xccd_d[g_detail_idx].xccd006,g_xccd_d[g_detail_idx].xccd002) 
#         WHERE xccdent = g_enterprise AND xccdld = ps_keys_bak[1] AND xccd001 = ps_keys_bak[2] AND xccd003 = ps_keys_bak[3] AND xccd004 = ps_keys_bak[4] AND xccd005 = ps_keys_bak[5]
#      #add-point:update_b段修改中
{<point name="update_b.m_update"/>}
#      #end add-point   
#      CASE
#         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
#            INITIALIZE g_errparam TO NULL 
#            LET g_errparam.extend = "xccd_t" 
#            LET g_errparam.code   = "std-00009" 
#            LET g_errparam.popup  = TRUE 
#            CALL cl_err()
#            CALL s_transaction_end('N','0')
#         WHEN SQLCA.sqlcode #其他錯誤
#            INITIALIZE g_errparam TO NULL 
#            LET g_errparam.extend = "xccd_t" 
#            LET g_errparam.code   = SQLCA.sqlcode 
#            LET g_errparam.popup  = TRUE 
#            CALL cl_err()
# 
#            CALL s_transaction_end('N','0')
#         OTHERWISE
#            LET l_new_key[01] = ps_keys[01] 
#LET l_old_key[01] = ps_keys_bak[01] 
#LET l_field_key[01] = 'xcbbcomp'
#LET l_new_key[02] = ps_keys[02] 
#LET l_old_key[02] = ps_keys_bak[02] 
#LET l_field_key[02] = 'xcbb001'
#LET l_new_key[03] = ps_keys[03] 
#LET l_old_key[03] = ps_keys_bak[03] 
#LET l_field_key[03] = 'xcbb002'
#LET l_new_key[04] = ps_keys[04] 
#LET l_old_key[04] = ps_keys_bak[04] 
#LET l_field_key[04] = 'xcbb003'
#LET l_new_key[05] = ps_keys[05] 
#LET l_old_key[05] = ps_keys_bak[05] 
#LET l_field_key[05] = 'xcbb004'
#CALL cl_multitable_key_upd(l_new_key, l_old_key, l_field_key, 'xcbb_t')
#      END CASE
#      #add-point:update_b段修改後
{<point name="update_b.after_update"/>}
#      #end add-point  
#   END IF
#   
#   LET ls_group = "'2',"
#   #判斷是否是同一群組的table
#   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xcce_t" THEN
#      #add-point:update_b段修改前
{<point name="update_b.before_update2" mark="Y"/>}
#      #end add-point     
#      UPDATE xcce_t 
#         SET (xcceld,xcce001,xcce003,xcce004,xcce005,
#              xcce002,xcce006,xcce007,xcce008,xcce009
#              ,xcce101,xcce102a,xcce102b,xcce102c,xcce102d,xcce102e,xcce102f,xcce102g,xcce102h,xcce102,xcce201,xcce202a,xcce202b,xcce202c,xcce202d,xcce202e,xcce202f,xcce202g,xcce202h,xcce202,xcce301,xcce302a,xcce302b,xcce302c,xcce302d,xcce302e,xcce302f,xcce302g,xcce302h,xcce302,xcce303,xcce304a,xcce304b,xcce304c,xcce304d,xcce304e,xcce304f,xcce304g,xcce304h,xcce304,xcce307,xcce308a,xcce308b,xcce308c,xcce308d,xcce308e,xcce308f,xcce308g,xcce308h,xcce308,xcce901,xcce902a,xcce902b,xcce902c,xcce902d,xcce902e,xcce902f,xcce902g,xcce902h,xcce902) 
#              = 
#             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6],ps_keys[7],ps_keys[8],ps_keys[9],ps_keys[10]
#              ,g_xccd2_d[g_detail_idx].xcce101,g_xccd2_d[g_detail_idx].xcce102a,g_xccd2_d[g_detail_idx].xcce102b, 
#                  g_xccd2_d[g_detail_idx].xcce102c,g_xccd2_d[g_detail_idx].xcce102d,g_xccd2_d[g_detail_idx].xcce102e, 
#                  g_xccd2_d[g_detail_idx].xcce102f,g_xccd2_d[g_detail_idx].xcce102g,g_xccd2_d[g_detail_idx].xcce102h, 
#                  g_xccd2_d[g_detail_idx].xcce102,g_xccd2_d[g_detail_idx].xcce201,g_xccd2_d[g_detail_idx].xcce202a, 
#                  g_xccd2_d[g_detail_idx].xcce202b,g_xccd2_d[g_detail_idx].xcce202c,g_xccd2_d[g_detail_idx].xcce202d, 
#                  g_xccd2_d[g_detail_idx].xcce202e,g_xccd2_d[g_detail_idx].xcce202f,g_xccd2_d[g_detail_idx].xcce202g, 
#                  g_xccd2_d[g_detail_idx].xcce202h,g_xccd2_d[g_detail_idx].xcce202,g_xccd2_d[g_detail_idx].xcce301, 
#                  g_xccd2_d[g_detail_idx].xcce302a,g_xccd2_d[g_detail_idx].xcce302b,g_xccd2_d[g_detail_idx].xcce302c, 
#                  g_xccd2_d[g_detail_idx].xcce302d,g_xccd2_d[g_detail_idx].xcce302e,g_xccd2_d[g_detail_idx].xcce302f, 
#                  g_xccd2_d[g_detail_idx].xcce302g,g_xccd2_d[g_detail_idx].xcce302h,g_xccd2_d[g_detail_idx].xcce302, 
#                  g_xccd2_d[g_detail_idx].xcce303,g_xccd2_d[g_detail_idx].xcce304a,g_xccd2_d[g_detail_idx].xcce304b, 
#                  g_xccd2_d[g_detail_idx].xcce304c,g_xccd2_d[g_detail_idx].xcce304d,g_xccd2_d[g_detail_idx].xcce304e, 
#                  g_xccd2_d[g_detail_idx].xcce304f,g_xccd2_d[g_detail_idx].xcce304g,g_xccd2_d[g_detail_idx].xcce304h, 
#                  g_xccd2_d[g_detail_idx].xcce304,g_xccd2_d[g_detail_idx].xcce307,g_xccd2_d[g_detail_idx].xcce308a, 
#                  g_xccd2_d[g_detail_idx].xcce308b,g_xccd2_d[g_detail_idx].xcce308c,g_xccd2_d[g_detail_idx].xcce308d, 
#                  g_xccd2_d[g_detail_idx].xcce308e,g_xccd2_d[g_detail_idx].xcce308f,g_xccd2_d[g_detail_idx].xcce308g, 
#                  g_xccd2_d[g_detail_idx].xcce308h,g_xccd2_d[g_detail_idx].xcce308,g_xccd2_d[g_detail_idx].xcce901, 
#                  g_xccd2_d[g_detail_idx].xcce902a,g_xccd2_d[g_detail_idx].xcce902b,g_xccd2_d[g_detail_idx].xcce902c, 
#                  g_xccd2_d[g_detail_idx].xcce902d,g_xccd2_d[g_detail_idx].xcce902e,g_xccd2_d[g_detail_idx].xcce902f, 
#                  g_xccd2_d[g_detail_idx].xcce902g,g_xccd2_d[g_detail_idx].xcce902h,g_xccd2_d[g_detail_idx].xcce902)  
#
#         WHERE xcceent = g_enterprise AND xcceld = ps_keys_bak[1] AND xcce001 = ps_keys_bak[2] AND xcce003 = ps_keys_bak[3] AND xcce004 = ps_keys_bak[4] AND xcce005 = ps_keys_bak[5] AND xcce002 = ps_keys_bak[6] AND xcce006 = ps_keys_bak[7] AND xcce007 = ps_keys_bak[8] AND xcce008 = ps_keys_bak[9] AND xcce009 = ps_keys_bak[10]
#      #add-point:update_b段修改中
{<point name="update_b.m_update2"/>}
#      #end add-point  
#      CASE
#         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
#            INITIALIZE g_errparam TO NULL 
#            LET g_errparam.extend = "xcce_t" 
#            LET g_errparam.code   = "std-00009" 
#            LET g_errparam.popup  = TRUE 
#            CALL cl_err()
#            CALL s_transaction_end('N','0')
#         WHEN SQLCA.sqlcode #其他錯誤
#            INITIALIZE g_errparam TO NULL 
#            LET g_errparam.extend = "xcce_t" 
#            LET g_errparam.code   = SQLCA.sqlcode 
#            LET g_errparam.popup  = TRUE 
#            CALL cl_err()
# 
#            CALL s_transaction_end('N','0')
#         OTHERWISE
#            
#      END CASE
#      #add-point:update_b段修改後
{<point name="update_b.after_update2"/>}
#      #end add-point  
#   END IF
# 
#   LET ls_group = "'3',"
#   #判斷是否是同一群組的table
#   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xcci_t" THEN
#      #add-point:update_b段修改前
{<point name="update_b.before_update3" mark="Y"/>}
#      #end add-point     
#      UPDATE xcci_t 
#         SET (xccild,xcci001,xcci003,xcci004,xcci005,
#              xcci002,xcci006,xcci007,xcci008,xcci009
#              ,xcci101,xcci102a,xcci102b,xcci102c,xcci102d,xcci102e,xcci102f,xcci102g,xcci102h,xcci102,xcci201,xcci202a,xcci202b,xcci202c,xcci202d,xcci202e,xcci202f,xcci202g,xcci202h,xcci202,xcci301,xcci302a,xcci302b,xcci302c,xcci302d,xcci302e,xcci302f,xcci302g,xcci302h,xcci302,xcci303,xcci304a,xcci304b,xcci304c,xcci304d,xcci304e,xcci304f,xcci304g,xcci304h,xcci304,xcci901,xcci902a,xcci902b,xcci902c,xcci902d,xcci902e,xcci902f,xcci902g,xcci902h,xcci902) 
#              = 
#             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6],ps_keys[7],ps_keys[8],ps_keys[9],ps_keys[10]
#              ,g_xccd3_d[g_detail_idx].xcci101,g_xccd3_d[g_detail_idx].xcci102a,g_xccd3_d[g_detail_idx].xcci102b, 
#                  g_xccd3_d[g_detail_idx].xcci102c,g_xccd3_d[g_detail_idx].xcci102d,g_xccd3_d[g_detail_idx].xcci102e, 
#                  g_xccd3_d[g_detail_idx].xcci102f,g_xccd3_d[g_detail_idx].xcci102g,g_xccd3_d[g_detail_idx].xcci102h, 
#                  g_xccd3_d[g_detail_idx].xcci102,g_xccd3_d[g_detail_idx].xcci201,g_xccd3_d[g_detail_idx].xcci202a, 
#                  g_xccd3_d[g_detail_idx].xcci202b,g_xccd3_d[g_detail_idx].xcci202c,g_xccd3_d[g_detail_idx].xcci202d, 
#                  g_xccd3_d[g_detail_idx].xcci202e,g_xccd3_d[g_detail_idx].xcci202f,g_xccd3_d[g_detail_idx].xcci202g, 
#                  g_xccd3_d[g_detail_idx].xcci202h,g_xccd3_d[g_detail_idx].xcci202,g_xccd3_d[g_detail_idx].xcci301, 
#                  g_xccd3_d[g_detail_idx].xcci302a,g_xccd3_d[g_detail_idx].xcci302b,g_xccd3_d[g_detail_idx].xcci302c, 
#                  g_xccd3_d[g_detail_idx].xcci302d,g_xccd3_d[g_detail_idx].xcci302e,g_xccd3_d[g_detail_idx].xcci302f, 
#                  g_xccd3_d[g_detail_idx].xcci302g,g_xccd3_d[g_detail_idx].xcci302h,g_xccd3_d[g_detail_idx].xcci302, 
#                  g_xccd3_d[g_detail_idx].xcci303,g_xccd3_d[g_detail_idx].xcci304a,g_xccd3_d[g_detail_idx].xcci304b, 
#                  g_xccd3_d[g_detail_idx].xcci304c,g_xccd3_d[g_detail_idx].xcci304d,g_xccd3_d[g_detail_idx].xcci304e, 
#                  g_xccd3_d[g_detail_idx].xcci304f,g_xccd3_d[g_detail_idx].xcci304g,g_xccd3_d[g_detail_idx].xcci304h, 
#                  g_xccd3_d[g_detail_idx].xcci304,g_xccd3_d[g_detail_idx].xcci901,g_xccd3_d[g_detail_idx].xcci902a, 
#                  g_xccd3_d[g_detail_idx].xcci902b,g_xccd3_d[g_detail_idx].xcci902c,g_xccd3_d[g_detail_idx].xcci902d, 
#                  g_xccd3_d[g_detail_idx].xcci902e,g_xccd3_d[g_detail_idx].xcci902f,g_xccd3_d[g_detail_idx].xcci902g, 
#                  g_xccd3_d[g_detail_idx].xcci902h,g_xccd3_d[g_detail_idx].xcci902) 
#         WHERE xccient = g_enterprise AND xccild = ps_keys_bak[1] AND xcci001 = ps_keys_bak[2] AND xcci003 = ps_keys_bak[3] AND xcci004 = ps_keys_bak[4] AND xcci005 = ps_keys_bak[5] AND xcci002 = ps_keys_bak[6] AND xcci006 = ps_keys_bak[7] AND xcci007 = ps_keys_bak[8] AND xcci008 = ps_keys_bak[9] AND xcci009 = ps_keys_bak[10]
#      #add-point:update_b段修改中
{<point name="update_b.m_update3"/>}
#      #end add-point  
#      CASE
#         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
#            INITIALIZE g_errparam TO NULL 
#            LET g_errparam.extend = "xcci_t" 
#            LET g_errparam.code   = "std-00009" 
#            LET g_errparam.popup  = TRUE 
#            CALL cl_err()
#            CALL s_transaction_end('N','0')
#         WHEN SQLCA.sqlcode #其他錯誤
#            INITIALIZE g_errparam TO NULL 
#            LET g_errparam.extend = "xcci_t" 
#            LET g_errparam.code   = SQLCA.sqlcode 
#            LET g_errparam.popup  = TRUE 
#            CALL cl_err()
# 
#            CALL s_transaction_end('N','0')
#         OTHERWISE
#            
#      END CASE
#      #add-point:update_b段修改後
{<point name="update_b.after_update3"/>}
#      #end add-point  
#   END IF
# 
# 
#   
# 
#   
# 
#   
#   #add-point:update_b段other
{<point name="update_b.other"/>}
#   #end add-point  
   
END FUNCTION

{</section>}

{<section id="axcq540.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axcq540_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
{<point name="lock_b.define"/>}
   #end add-point   
   
#   #先刷新資料
#   #CALL axcq540_b_fill()
#   
#   #鎖定整組table
#   #LET ls_group = "'1',"
#   #僅鎖定自身table
#   LET ls_group = "xccd_t"
#   
#   IF ls_group.getIndexOf(ps_table,1) THEN
#      OPEN axcq540_bcl USING g_enterprise,
#                                       g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd004, 
#                                           g_xccd_m.xccd005,g_xccd_d[g_detail_idx].xccdld,g_xccd_d[g_detail_idx].xccd001, 
#                                           g_xccd_d[g_detail_idx].xccd003,g_xccd_d[g_detail_idx].xccd004, 
#                                           g_xccd_d[g_detail_idx].xccd005     
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL 
#         LET g_errparam.extend = "axcq540_bcl" 
#         LET g_errparam.code   = SQLCA.sqlcode 
#         LET g_errparam.popup  = TRUE 
#         CALL cl_err()
# 
#         RETURN FALSE
#      END IF
#   END IF
#                                    
#   #鎖定整組table
#   #LET ls_group = "'2',"
#   #僅鎖定自身table
#   LET ls_group = "xcce_t"
#   IF ls_group.getIndexOf(ps_table,1) THEN
#   
#      OPEN axcq540_bcl2 USING g_enterprise,
#                                             g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd004, 
#                                                 g_xccd_m.xccd005,g_xccd2_d[g_detail_idx].xcce002,g_xccd2_d[g_detail_idx].xcce006, 
#                                                 g_xccd2_d[g_detail_idx].xcce007,g_xccd2_d[g_detail_idx].xcce008, 
#                                                 g_xccd2_d[g_detail_idx].xcce009
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL 
#         LET g_errparam.extend = "axcq540_bcl2" 
#         LET g_errparam.code   = SQLCA.sqlcode 
#         LET g_errparam.popup  = TRUE 
#         CALL cl_err()
# 
#         RETURN FALSE
#      END IF
#   END IF
# 
#   #鎖定整組table
#   #LET ls_group = "'3',"
#   #僅鎖定自身table
#   LET ls_group = "xcci_t"
#   IF ls_group.getIndexOf(ps_table,1) THEN
#   
#      OPEN axcq540_bcl3 USING g_enterprise,
#                                             g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd004, 
#                                                 g_xccd_m.xccd005,g_xccd3_d[g_detail_idx].xcci002,g_xccd3_d[g_detail_idx].xcci006, 
#                                                 g_xccd3_d[g_detail_idx].xcci007,g_xccd3_d[g_detail_idx].xcci008, 
#                                                 g_xccd3_d[g_detail_idx].xcci009
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL 
#         LET g_errparam.extend = "axcq540_bcl3" 
#         LET g_errparam.code   = SQLCA.sqlcode 
#         LET g_errparam.popup  = TRUE 
#         CALL cl_err()
# 
#         RETURN FALSE
#      END IF
#   END IF
# 
# 
#   
# 
#   
#   #add-point:lock_b段other
{<point name="lock_b.other"/>}
#   #end add-point  
#   
#   RETURN TRUE
# 
END FUNCTION

{</section>}

{<section id="axcq540.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axcq540_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
{<point name="unlock_b.define"/>}
   #end add-point  
   
#   LET ls_group = "'1',"
#   
#   IF ls_group.getIndexOf(ps_page,1) THEN
#      CLOSE axcq540_bcl
#   END IF
#   
#   LET ls_group = "'2',"
#   
#   IF ls_group.getIndexOf(ps_page,1) THEN
#      CLOSE axcq540_bcl2
#   END IF
# 
#   LET ls_group = "'3',"
#   
#   IF ls_group.getIndexOf(ps_page,1) THEN
#      CLOSE axcq540_bcl3
#   END IF
# 
# 
#   
# 
# 
   #add-point:unlock_b段other
{<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="axcq540.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axcq540_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xccdld,xccd001,xccd003,xccd004,xccd005",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="axcq540.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axcq540_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xccdld,xccd001,xccd003,xccd004,xccd005",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="axcq540.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axcq540_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION

{</section>}

{<section id="axcq540.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axcq540_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION

{</section>}

{<section id="axcq540.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axcq540_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xccdld = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xccd001 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xccd003 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " xccd004 = '", g_argv[04], "' AND "
   END IF
   IF NOT cl_null(g_argv[05]) THEN
      LET ls_wc = ls_wc, " xccd005 = '", g_argv[05], "' AND "
   END IF
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="axcq540.state_change" >}
   

{</section>}

{<section id="axcq540.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axcq540_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xccd_d.getLength() THEN
         LET g_detail_idx = g_xccd_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xccd_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xccd_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_xccd2_d.getLength() THEN
         LET g_detail_idx = g_xccd2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xccd2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xccd2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_xccd3_d.getLength() THEN
         LET g_detail_idx = g_xccd3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xccd3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xccd3_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="axcq540.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axcq540_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL axcq540_detail_show()
   
END FUNCTION

{</section>}

{<section id="axcq540.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axcq540_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 3 AND
      ((NOT cl_null(g_wc2_table3) AND g_wc2_table3.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
 
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN FALSE
 
END FUNCTION

{</section>}

{<section id="axcq540.signature" >}
   

{</section>}

{<section id="axcq540.set_pk_array" >}
   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION axcq540_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xccd_m.xccdld
   LET g_pk_array[1].column = 'xccdld'
   LET g_pk_array[2].values = g_xccd_m.xccd001
   LET g_pk_array[2].column = 'xccd001'
   LET g_pk_array[3].values = g_xccd_m.xccd003
   LET g_pk_array[3].column = 'xccd003'
   LET g_pk_array[4].values = g_xccd_m.xccd004
   LET g_pk_array[4].column = 'xccd004'
   LET g_pk_array[5].values = g_xccd_m.xccd005
   LET g_pk_array[5].column = 'xccd005'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 

{</section>}

{<section id="axcq540.other_dialog" readonly="Y" >}
   

{</section>}

{<section id="axcq540.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

