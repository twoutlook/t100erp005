#該程式已解開Section, 不再透過樣板產出!
{<section id="axct312.description" >}
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000321
#+ 
#+ Filename...: axct312
#+ Description: 雜收入庫成本維護作業
#+ Creator....: (1899/12/31)
#+ Modifier...: 03297(2014/09/02) -SD/PR-
#+ Buildtype..: 應用 i07 樣板自動產生
#+ 以上段落由子樣板a00產生

{</section>}

{<section id="axct312.global" >}
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xccw_m        RECORD
       xccwld LIKE xccw_t.xccwld, 
   xccwld_desc LIKE type_t.chr80, 
   xccwcomp LIKE xccw_t.xccwcomp, 
   xccwcomp_desc LIKE type_t.chr80, 
   xccw003 LIKE xccw_t.xccw003, 
   xccw003_desc LIKE type_t.chr80, 
   xccw012 LIKE xccw_t.xccw012, 
   xccw006 LIKE xccw_t.xccw006, 
   xccw013 LIKE xccw_t.xccw013, 
   xccw004 LIKE xccw_t.xccw004, 
   xccw005 LIKE xccw_t.xccw005, 
   xcat003 LIKE xcat_t.xcat003
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xccw_d        RECORD
       xccw001 LIKE xccw_t.xccw001, 
   xccw007 LIKE xccw_t.xccw007, 
   xccw008 LIKE xccw_t.xccw008, 
   xccw002 LIKE xccw_t.xccw002,
   xccw002_desc LIKE xcbfl_t.xcbfl003,   
   xccwsite LIKE xccw_t.xccwsite, 
   xccw010 LIKE xccw_t.xccw010,
   xccw010_desc LIKE imaal_t.imaal003,
   xccw010_desc_desc LIKE imaal_t.imaal004,   
   xccw011 LIKE xccw_t.xccw011, 
   xccw015 LIKE xccw_t.xccw015, 
   xccw015_desc LIKE type_t.chr1000, 
   xccw016 LIKE xccw_t.xccw016,
   xccw016_desc LIKE type_t.chr1000,   
   xccw017 LIKE xccw_t.xccw017, 
   xccw009 LIKE xccw_t.xccw009,     
   xccw043 LIKE xccw_t.xccw043, 
   xccw046 LIKE xccw_t.xccw046, 
   xccw044 LIKE xccw_t.xccw044, 
   xccw045 LIKE xccw_t.xccw045, 
   xccw201 LIKE xccw_t.xccw201, 
   xccw282a LIKE xccw_t.xccw282a, 
   xccw282b LIKE xccw_t.xccw282b, 
   xccw282c LIKE xccw_t.xccw282c, 
   xccw282d LIKE xccw_t.xccw282d, 
   xccw282e LIKE xccw_t.xccw282e, 
   xccw282f LIKE xccw_t.xccw282f, 
   xccw282g LIKE xccw_t.xccw282g, 
   xccw282h LIKE xccw_t.xccw282h, 
   xccw282 LIKE xccw_t.xccw282, 
   xccw202 LIKE xccw_t.xccw202, 
   xccw202a LIKE xccw_t.xccw202a, 
   xccw202b LIKE xccw_t.xccw202b, 
   xccw202c LIKE xccw_t.xccw202c, 
   xccw202d LIKE xccw_t.xccw202d, 
   xccw202e LIKE xccw_t.xccw202e, 
   xccw202f LIKE xccw_t.xccw202f, 
   xccw202g LIKE xccw_t.xccw202g, 
   xccw202h LIKE xccw_t.xccw202h,
   xccw020 LIKE xccw_t.xccw020, 
   xccw021 LIKE xccw_t.xccw021,
   xccw021_desc LIKE type_t.chr1000,
   inba004_desc LIKE type_t.chr1000,  #dorislai-20151005-add----(S)
   inbb020 LIKE inbb_t.inbb020,
   inbb021 LIKE inbb_t.inbb021        #dorislai-20151005-add----(E)
       END RECORD
PRIVATE TYPE type_g_xccw2_d RECORD
       xccw001 LIKE xccw_t.xccw001, 
   xccw007 LIKE xccw_t.xccw007, 
   xccw008 LIKE xccw_t.xccw008, 
   xccw002 LIKE xccw_t.xccw002,   
   xccw010 LIKE xccw_t.xccw010, 
   xccw011 LIKE xccw_t.xccw011, 
   xcckownid LIKE xcck_t.xcckownid, 
   xcckownid_desc LIKE type_t.chr500, 
   xcckowndp LIKE xcck_t.xcckowndp, 
   xcckowndp_desc LIKE type_t.chr500, 
   xcckcrtid LIKE xcck_t.xcckcrtid, 
   xcckcrtid_desc LIKE type_t.chr500, 
   xcckcrtdp LIKE xcck_t.xcckcrtdp, 
   xcckcrtdp_desc LIKE type_t.chr500, 
   xcckcrtdt DATETIME YEAR TO SECOND, 
   xcckmodid LIKE xcck_t.xcckmodid, 
   xcckmodid_desc LIKE type_t.chr500, 
   xcckmoddt DATETIME YEAR TO SECOND
       END RECORD
PRIVATE TYPE type_g_xccw3_d RECORD
       xccw001 LIKE xccw_t.xccw001, 
   xccw007 LIKE xccw_t.xccw007, 
   xccw008 LIKE xccw_t.xccw008, 
   xccw002 LIKE xccw_t.xccw002, 
   xccw002_desc LIKE xcbfl_t.xcbfl003, 
   xccwsite LIKE xccw_t.xccwsite, 
   xccw010 LIKE xccw_t.xccw010, 
   xccw010_desc LIKE imaal_t.imaal003,
   xccw010_desc_desc LIKE imaal_t.imaal004, 
   xccw011 LIKE xccw_t.xccw011,       
   xccw032 LIKE xccw_t.xccw032,
   xccw032_desc LIKE type_t.chr500,
   xccw033 LIKE xccw_t.xccw033, 
   xccw033_desc LIKE type_t.chr500,   
   xccw022 LIKE xccw_t.xccw022,
   xccw022_desc LIKE type_t.chr500,   
   xccw023 LIKE xccw_t.xccw023, 
   xccw023_desc LIKE type_t.chr500,   
   xccw024 LIKE xccw_t.xccw024,
   xccw024_desc LIKE type_t.chr500,      
   xccw025 LIKE xccw_t.xccw025, 
   xccw025_desc LIKE type_t.chr500,   
   xccw026 LIKE xccw_t.xccw026,
   xccw026_desc LIKE type_t.chr500,      
   xccw027 LIKE xccw_t.xccw027,
   xccw027_desc LIKE type_t.chr500,      
   xccw028 LIKE xccw_t.xccw028, 
   xccw028_desc LIKE type_t.chr500,   
   xccw029 LIKE xccw_t.xccw029,
   xccw029_desc LIKE type_t.chr500,      
   xccw030 LIKE xccw_t.xccw030,
   xccw030_desc LIKE type_t.chr500,      
   xccw031 LIKE xccw_t.xccw031,
   xccw031_desc LIKE type_t.chr500,      
   xccw201 LIKE xccw_t.xccw201, 
   xccw282 LIKE xccw_t.xccw282, 
   xccw202 LIKE xccw_t.xccw202, 
   xccw009 LIKE xccw_t.xccw009,
   xccw021 LIKE xccw_t.xccw021,
   xccw021_desc LIKE type_t.chr1000,
   inba004_desc LIKE type_t.chr1000,  #dorislai-20151006-add----(S)
   inbb020 LIKE inbb_t.inbb020,
   inbb021 LIKE inbb_t.inbb021        #dorislai-20151006-add----(E)
       END RECORD
 
 
DEFINE g_detail_multi_table_t    RECORD
      xcckownid LIKE xcck_t.xcckownid,
      xcckowndp LIKE xcck_t.xcckowndp,
      xcckcrtid LIKE xcck_t.xcckcrtid,
      xcckcrtdp LIKE xcck_t.xcckcrtdp,
      xcckcrtdt LIKE xcck_t.xcckcrtdt,
      xcckmodid LIKE xcck_t.xcckmodid,
      xcckmoddt LIKE xcck_t.xcckmoddt
      
      END RECORD
 
#模組變數(Module Variables)
DEFINE g_xccw_m          type_g_xccw_m
DEFINE g_xccw_m_t        type_g_xccw_m
DEFINE g_xccw_m_o        type_g_xccw_m
 
   DEFINE g_xccwld_t LIKE xccw_t.xccwld
DEFINE g_xccw003_t LIKE xccw_t.xccw003
DEFINE g_xccw006_t LIKE xccw_t.xccw006
DEFINE g_xccw004_t LIKE xccw_t.xccw004
DEFINE g_xccw005_t LIKE xccw_t.xccw005
 
 
DEFINE g_xccw_d          DYNAMIC ARRAY OF type_g_xccw_d
DEFINE g_xccw_d_t        type_g_xccw_d
DEFINE g_xccw_d_o        type_g_xccw_d
DEFINE g_xccw2_d   DYNAMIC ARRAY OF type_g_xccw2_d
DEFINE g_xccw2_d_t type_g_xccw2_d
DEFINE g_xccw2_d_o type_g_xccw2_d
DEFINE g_xccw3_d   DYNAMIC ARRAY OF type_g_xccw3_d
DEFINE g_xccw3_d_t type_g_xccw3_d
DEFINE g_xccw3_d_o type_g_xccw3_d
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_xccwld LIKE xccw_t.xccwld,
      b_xccw003 LIKE xccw_t.xccw003,
      b_xccw004 LIKE xccw_t.xccw004,
      b_xccw005 LIKE xccw_t.xccw005,
      b_xccw006 LIKE xccw_t.xccw006
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5 
#161108-00013#1-s-mod
#DEFINE g_rec_b               LIKE type_t.num5           
#DEFINE l_ac                  LIKE type_t.num5    
#DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
# 
#DEFINE g_pagestart           LIKE type_t.num5           
#DEFINE gwin_curr             ui.Window                     #Current Window
#DEFINE gfrm_curr             ui.Form                       #Current Form
#DEFINE g_page_action         STRING                        #page action
#DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
#DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
#DEFINE g_page                STRING                        #第幾頁
#DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
# 
#DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
#DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
#DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
#DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數  
#DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
#DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
# 
#DEFINE g_searchcol           STRING                        #查詢欄位代碼
#DEFINE g_searchstr           STRING                        #查詢欄位字串
#DEFINE g_order               STRING                        #查詢排序欄位
#DEFINE g_state               STRING                        
#DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
#DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num10             #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10             #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10             #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10             #Browser總筆數  
DEFINE g_browser_idx         LIKE type_t.num10             #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10             #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num10             #Browser所在筆數
#161108-00013#1-e-mod
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="axct312.main" >}
#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT xccwld,'',xccwcomp,'',xccw003,'',xccw012,xccw006,xccw013,xccw004,xccw005, 
       ''", 
                      " FROM xccw_t",
                      " WHERE xccwent= ? AND xccwld=? AND xccw003=? AND xccw004=? AND xccw005=? AND  
                          xccw006=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axct312_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.xccwld,t0.xccwcomp,t0.xccw003,t0.xccw012,t0.xccw006,t0.xccw013,t0.xccw004, 
       t0.xccw005,t1.glaal002 ,t2.ooefl003 ,t3.xcatl003",
               " FROM xccw_t t0",
                              " LEFT JOIN glaal_t t1 ON t1.glaalent='"||g_enterprise||"' AND t1.glaalld=t0.xccwld AND t1.glaal001='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.xccwcomp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN xcatl_t t3 ON t3.xcatlent='"||g_enterprise||"' AND t3.xcatl001=t0.xccw003 AND t3.xcatl002='"||g_dlang||"' ",
 
               " WHERE t0.xccwent = '" ||g_enterprise|| "' AND t0.xccwld = ? AND t0.xccw003 = ? AND t0.xccw004 = ? AND t0.xccw005 = ? AND t0.xccw006 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axct312_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axct312 WITH FORM cl_ap_formpath("axc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axct312_init()   
 
      #進入選單 Menu (="N")
      CALL axct312_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axct312
      
   END IF 
   
   CLOSE axct312_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 

{</section>}

{<section id="axct312.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axct312_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
  
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
      CALL cl_set_combo_scc('xcat003','8904') 
 
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL axct312_default_search()
    
END FUNCTION

{</section>}

{<section id="axct312.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axct312_ui_dialog()
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   #add-point:ui_dialog段define
{<point name="ui_dialog.define"/>}
   #end add-point  
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   
   #add-point:ui_dialog段before dialog 
{<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL axct312_browser_fill("")
 
      
      ##判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      #IF g_state = "Y" THEN
      #   FOR li_idx = 1 TO g_browser.getLength()
      #      IF g_browser[li_idx].b_xccwld = g_xccwld_t
      #         AND g_browser[li_idx].b_xccw003 = g_xccw003_t
      #         AND g_browser[li_idx].b_xccw004 = g_xccw004_t
      #         AND g_browser[li_idx].b_xccw005 = g_xccw005_t
      #         AND g_browser[li_idx].b_xccw006 = g_xccw006_t
 
      #         THEN
      #         LET g_current_row = li_idx
      #         EXIT FOR
      #      END IF
      #   END FOR
      #   LET g_state = ""
      #END IF
      
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_xccw_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL axct312_ui_detailshow()
               
               #add-point:page1自定義行為
{<point name="ui_dialog.body.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為
{<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_xccw2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL axct312_ui_detailshow()
               
               #add-point:page1自定義行為
{<point name="ui_dialog.body2.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)      
            
            
         
            #add-point:page2自定義行為
{<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_xccw3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL axct312_ui_detailshow()
               
               #add-point:page1自定義行為
{<point name="ui_dialog.body3.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)      
            
            
         
            #add-point:page3自定義行為
{<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
{<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axct312_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axct312_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2
{<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         
         
         ON ACTION first
            CALL axct312_fetch('F')
            LET g_current_row = g_current_idx         
          
         ON ACTION previous
            CALL axct312_fetch('P')
            LET g_current_row = g_current_idx
          
         ON ACTION jump
            CALL axct312_fetch('/')
            LET g_current_row = g_current_idx
        
         ON ACTION next
            CALL axct312_fetch('N')
            LET g_current_row = g_current_idx
         
         ON ACTION last
            CALL axct312_fetch('L')
            LET g_current_row = g_current_idx
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xccw001
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axct312_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axct312_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CLEAR FORM
               ELSE
                  CALL axct312_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axct312_modify()
               #add-point:ON ACTION modify
{<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axct312_modify()
               #add-point:ON ACTION modify_detail
{<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axct312_delete()
               #add-point:ON ACTION delete
{<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axct312_insert()
               #add-point:ON ACTION insert
{<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_axct312_01
            LET g_action_choice="open_axct312_01"
            IF cl_auth_chk_act("open_axct312_01") THEN
               
               #add-point:ON ACTION open_axct312_01
{<point name="menu.open_axct312_01" />}
               #END add-point
               EXIT DIALOG
            END IF
 
         ON ACTION axct322
            LET g_action_choice="axct322"
            IF cl_auth_chk_act("axct322") THEN

               #add-point:ON ACTION axct320
               CALL axct312_generate_xcdw()
               #END add-point
               EXIT DIALOG
            END IF
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
{<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axct312_reproduce()
               #add-point:ON ACTION reproduce
{<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axct312_query()
               #add-point:ON ACTION query
{<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL axct312_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
{<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axct312_set_pk_array()
            #add-point:ON ACTION agendum
{<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axct312_set_pk_array()
            #add-point:ON ACTION followup
{<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
         CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION

{</section>}

{<section id="axct312.browser_search" >}
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axct312_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "searchcol" 
      LET g_errparam.code   = "std-00005" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1"
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY xccwld"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL axct312_browser_fill("F")
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="axct312.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axct312_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
{<point name="browser_fill.define"/>}
   #end add-point    
   
   #add-point:browser_fill段動作開始前
{<point name="browser_fill.before_browser_fill"/>}
   #end add-point    
   
   CALL g_browser.clear()
 
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "xccwld"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF l_wc2 <> " 1=1" OR NOT cl_null(l_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xccwld ",
                      ", xccw003 ",
                      ", xccw004 ",
                      ", xccw005 ",
                      ", xccw006 ",
 
                      " FROM xccw_t ",
                      " ",
                    # " LEFT JOIN xcck_t ON xcckent = '"||g_enterprise||"' AND ",
 
                      " WHERE xccwent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xccw_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xccwld ",
                      ", xccw003 ",
                      ", xccw004 ",
                      ", xccw005 ",
                      ", xccw006 ",
 
                      " FROM xccw_t ",
                      " ",
                    #" LEFT JOIN xcck_t ON xcckent = '"||g_enterprise||"' AND ",
                      " WHERE xccwent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xccw_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前
{<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse AND g_error_show = 1 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_browser_cnt 
      LET g_errparam.code   = 9035
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      LET g_browser_cnt = g_max_browse
   END IF
   LET g_error_show = 0
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照t0.xccwld,t0.xccw003,t0.xccw004,t0.xccw005,t0.xccw006 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT t0.xccwld,t0.xccw003,t0.xccw004,t0.xccw005,t0.xccw006",
                " FROM xccw_t t0",
 
                
                " WHERE t0.xccwent = '" ||g_enterprise|| "' AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("xccw_t")
 
   #add-point:browser_fill,sql_rank前
{<point name="browser_fill.before_sql_rank"/>}
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前
{<point name="browser_fill.before_pre"/>}
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"xccw_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_xccwld,g_browser[g_cnt].b_xccw003,g_browser[g_cnt].b_xccw004, 
       g_browser[g_cnt].b_xccw005,g_browser[g_cnt].b_xccw006 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
{<point name="browser_fill.reference"/>}
      #end add-point    
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_xccw_m.* TO NULL
      CALL g_xccw_d.clear()
      CALL g_xccw2_d.clear()
      CALL g_xccw3_d.clear()
 
      #add-point:browser_fill段after_clear
{<point name="browser_fill.after_clear"/>}
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION

{</section>}

{<section id="axct312.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axct312_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_xccw_m.xccwld = g_browser[g_current_idx].b_xccwld   
   LET g_xccw_m.xccw003 = g_browser[g_current_idx].b_xccw003   
   LET g_xccw_m.xccw004 = g_browser[g_current_idx].b_xccw004   
   LET g_xccw_m.xccw005 = g_browser[g_current_idx].b_xccw005   
   LET g_xccw_m.xccw006 = g_browser[g_current_idx].b_xccw006   
 
   EXECUTE axct312_master_referesh USING g_xccw_m.xccwld,g_xccw_m.xccw003,g_xccw_m.xccw004,g_xccw_m.xccw005, 
       g_xccw_m.xccw006 INTO g_xccw_m.xccwld,g_xccw_m.xccwcomp,g_xccw_m.xccw003,g_xccw_m.xccw012,g_xccw_m.xccw006, 
       g_xccw_m.xccw013,g_xccw_m.xccw004,g_xccw_m.xccw005,g_xccw_m.xccwld_desc,g_xccw_m.xccwcomp_desc, 
       g_xccw_m.xccw003_desc
   CALL axct312_show()
   
END FUNCTION

{</section>}

{<section id="axct312.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axct312_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
 
      #add-point:ui_detailshow段more
      {<point name="ui_detailshow.more"/>}
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point 
   
END FUNCTION

{</section>}

{<section id="axct312.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axct312_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xccwld = g_xccw_m.xccwld 
         AND g_browser[l_i].b_xccw003 = g_xccw_m.xccw003 
         AND g_browser[l_i].b_xccw004 = g_xccw_m.xccw004 
         AND g_browser[l_i].b_xccw005 = g_xccw_m.xccw005 
         AND g_browser[l_i].b_xccw006 = g_xccw_m.xccw006 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION

{</section>}

{<section id="axct312.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axct312_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
{<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_xccw_m.* TO NULL
   CALL g_xccw_d.clear()
   CALL g_xccw2_d.clear()
   CALL g_xccw3_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外
{<point name="cs.head.before"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xccwld,xccwcomp,xccw003,xccw012,xccw006,xccw013,xccw004,xccw005
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
{<point name="cs.head.before_construct"/>}
            #end add-point 
            
                 #Ctrlp:construct.c.xccwld
         ON ACTION controlp INFIELD xccwld
            #add-point:ON ACTION controlp INFIELD xccwld
{<point name="construct.c.xccwld" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccwld
            #add-point:BEFORE FIELD xccwld
{<point name="construct.b.xccwld" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccwld
            
            #add-point:AFTER FIELD xccwld
{<point name="construct.a.xccwld" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccwcomp
         ON ACTION controlp INFIELD xccwcomp
            #add-point:ON ACTION controlp INFIELD xccwcomp
{<point name="construct.c.xccwcomp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccwcomp
            #add-point:BEFORE FIELD xccwcomp
{<point name="construct.b.xccwcomp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccwcomp
            
            #add-point:AFTER FIELD xccwcomp
{<point name="construct.a.xccwcomp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccw003
         ON ACTION controlp INFIELD xccw003
            #add-point:ON ACTION controlp INFIELD xccw003
{<point name="construct.c.xccw003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw003
            #add-point:BEFORE FIELD xccw003
{<point name="construct.b.xccw003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw003
            
            #add-point:AFTER FIELD xccw003
{<point name="construct.a.xccw003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw012
            #add-point:BEFORE FIELD xccw012
{<point name="construct.b.xccw012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw012
            
            #add-point:AFTER FIELD xccw012
{<point name="construct.a.xccw012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccw012
         ON ACTION controlp INFIELD xccw012
            #add-point:ON ACTION controlp INFIELD xccw012
{<point name="construct.c.xccw012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw006
            #add-point:BEFORE FIELD xccw006
{<point name="construct.b.xccw006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw006
            
            #add-point:AFTER FIELD xccw006
{<point name="construct.a.xccw006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccw006
         ON ACTION controlp INFIELD xccw006
            #add-point:ON ACTION controlp INFIELD xccw006
{<point name="construct.c.xccw006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw013
            #add-point:BEFORE FIELD xccw013
{<point name="construct.b.xccw013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw013
            
            #add-point:AFTER FIELD xccw013
{<point name="construct.a.xccw013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccw013
         ON ACTION controlp INFIELD xccw013
            #add-point:ON ACTION controlp INFIELD xccw013
{<point name="construct.c.xccw013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw004
            #add-point:BEFORE FIELD xccw004
{<point name="construct.b.xccw004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw004
            
            #add-point:AFTER FIELD xccw004
{<point name="construct.a.xccw004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccw004
         ON ACTION controlp INFIELD xccw004
            #add-point:ON ACTION controlp INFIELD xccw004
{<point name="construct.c.xccw004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw005
            #add-point:BEFORE FIELD xccw005
{<point name="construct.b.xccw005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw005
            
            #add-point:AFTER FIELD xccw005
{<point name="construct.a.xccw005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccw005
         ON ACTION controlp INFIELD xccw005
            #add-point:ON ACTION controlp INFIELD xccw005
{<point name="construct.c.xccw005" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON xccw001,xccw007,xccw008,xccw002,xccwsite,xccw010,xccw011,xccw015,xccw016, 
          xccw017,xccw009,xccw020,xccw021,inba004_desc,inbb020,inbb021,xccw043,xccw046,xccw044,xccw045,xccw201,xccw282a,xccw282b, 
          xccw282c,xccw282d,xccw282e,xccw282f,xccw282g,xccw282h,xccw202,xccw202a,xccw202b,xccw202c,xccw202d, 
          xccw202e,xccw202f,xccw202g,xccw202h,xccw032,xccw033,xccw022,xccw023,xccw024, 
          xccw025,xccw026,xccw027,xccw028,xccw029,xccw030,xccw031
           FROM s_detail1[1].xccw001,s_detail1[1].xccw007,s_detail1[1].xccw008,s_detail1[1].xccw002, 
               s_detail1[1].xccwsite,s_detail1[1].xccw010,s_detail1[1].xccw011,s_detail1[1].xccw015, 
               s_detail1[1].xccw016,s_detail1[1].xccw017,s_detail1[1].xccw009,s_detail1[1].xccw020,s_detail1[1].xccw021,
               s_detail1[1].inba004_desc,s_detail1[1].inbb020,s_detail1[1].inbb021, #dorislai-20151005-add
               s_detail1[1].xccw043,s_detail1[1].xccw046,s_detail1[1].xccw044,s_detail1[1].xccw045,s_detail1[1].xccw201, 
               s_detail1[1].xccw282a,s_detail1[1].xccw282b,s_detail1[1].xccw282c,s_detail1[1].xccw282d, 
               s_detail1[1].xccw282e,s_detail1[1].xccw282f,s_detail1[1].xccw282g,s_detail1[1].xccw282h, 
               s_detail1[1].xccw202,s_detail1[1].xccw202a,s_detail1[1].xccw202b,s_detail1[1].xccw202c, 
               s_detail1[1].xccw202d,s_detail1[1].xccw202e,s_detail1[1].xccw202f,s_detail1[1].xccw202g, 
               s_detail1[1].xccw202h,s_detail3[1].xccw032, 
               s_detail3[1].xccw033,s_detail3[1].xccw022,s_detail3[1].xccw023,s_detail3[1].xccw024,s_detail3[1].xccw025, 
               s_detail3[1].xccw026,s_detail3[1].xccw027,s_detail3[1].xccw028,s_detail3[1].xccw029,s_detail3[1].xccw030, 
               s_detail3[1].xccw031
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
{<point name="cs.body.before_construct"/>}
            #end add-point 
            
         #單身公用欄位開窗相關處理
         
           
         #單身一般欄位開窗相關處理
                  #此段落由子樣板a01產生
         BEFORE FIELD xccw001
            #add-point:BEFORE FIELD xccw001
{<point name="construct.b.page1.xccw001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw001
            
            #add-point:AFTER FIELD xccw001
{<point name="construct.a.page1.xccw001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw001
         ON ACTION controlp INFIELD xccw001
            #add-point:ON ACTION controlp INFIELD xccw001
{<point name="construct.c.page1.xccw001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw007
            #add-point:BEFORE FIELD xccw007
{<point name="construct.b.page1.xccw007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw007
            
            #add-point:AFTER FIELD xccw007
{<point name="construct.a.page1.xccw007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw007
         ON ACTION controlp INFIELD xccw007
            #add-point:ON ACTION controlp INFIELD xccw007
{<point name="construct.c.page1.xccw007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw008
            #add-point:BEFORE FIELD xccw008
{<point name="construct.b.page1.xccw008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw008
            
            #add-point:AFTER FIELD xccw008
{<point name="construct.a.page1.xccw008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw008
         ON ACTION controlp INFIELD xccw008
            #add-point:ON ACTION controlp INFIELD xccw008
{<point name="construct.c.page1.xccw008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw002
            #add-point:BEFORE FIELD xccw002
{<point name="construct.b.page1.xccw002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw002
            
            #add-point:AFTER FIELD xccw002
{<point name="construct.a.page1.xccw002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw002
         ON ACTION controlp INFIELD xccw002
            #add-point:ON ACTION controlp INFIELD xccw002
{<point name="construct.c.page1.xccw002" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xccwsite
         ON ACTION controlp INFIELD xccwsite
            #add-point:ON ACTION controlp INFIELD xccwsite
{<point name="construct.c.page1.xccwsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccwsite
            #add-point:BEFORE FIELD xccwsite
{<point name="construct.b.page1.xccwsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccwsite
            
            #add-point:AFTER FIELD xccwsite
{<point name="construct.a.page1.xccwsite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw010
            #add-point:BEFORE FIELD xccw010
{<point name="construct.b.page1.xccw010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw010
            
            #add-point:AFTER FIELD xccw010
{<point name="construct.a.page1.xccw010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw010
         ON ACTION controlp INFIELD xccw010
            #add-point:ON ACTION controlp INFIELD xccw010
{<point name="construct.c.page1.xccw010" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xccw011
         ON ACTION controlp INFIELD xccw011
            #add-point:ON ACTION controlp INFIELD xccw011
{<point name="construct.c.page1.xccw011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw011
            #add-point:BEFORE FIELD xccw011
{<point name="construct.b.page1.xccw011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw011
            
            #add-point:AFTER FIELD xccw011
{<point name="construct.a.page1.xccw011" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw015
            #add-point:BEFORE FIELD xccw015
{<point name="construct.b.page1.xccw015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw015
            
            #add-point:AFTER FIELD xccw015
{<point name="construct.a.page1.xccw015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw015
         ON ACTION controlp INFIELD xccw015
            #add-point:ON ACTION controlp INFIELD xccw015
{<point name="construct.c.page1.xccw015" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xccw016
         ON ACTION controlp INFIELD xccw016
            #add-point:ON ACTION controlp INFIELD xccw016
{<point name="construct.c.page1.xccw016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw016
            #add-point:BEFORE FIELD xccw016
{<point name="construct.b.page1.xccw016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw016
            
            #add-point:AFTER FIELD xccw016
{<point name="construct.a.page1.xccw016" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw017
            #add-point:BEFORE FIELD xccw017
{<point name="construct.b.page1.xccw017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw017
            
            #add-point:AFTER FIELD xccw017
{<point name="construct.a.page1.xccw017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw017
         ON ACTION controlp INFIELD xccw017
            #add-point:ON ACTION controlp INFIELD xccw017
{<point name="construct.c.page1.xccw017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw009
            #add-point:BEFORE FIELD xccw009
{<point name="construct.b.page1.xccw009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw009
            
            #add-point:AFTER FIELD xccw009
{<point name="construct.a.page1.xccw009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw009
         ON ACTION controlp INFIELD xccw009
            #add-point:ON ACTION controlp INFIELD xccw009
{<point name="construct.c.page1.xccw009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw020
            #add-point:BEFORE FIELD xccw020
{<point name="construct.b.page1.xccw020" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw020
            
            #add-point:AFTER FIELD xccw020
{<point name="construct.a.page1.xccw020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw020
         ON ACTION controlp INFIELD xccw020
            #add-point:ON ACTION controlp INFIELD xccw020
{<point name="construct.c.page1.xccw020" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xccw021
         ON ACTION controlp INFIELD xccw021
            #add-point:ON ACTION controlp INFIELD xccw021
{<point name="construct.c.page1.xccw021" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw021
            #add-point:BEFORE FIELD xccw021
{<point name="construct.b.page1.xccw021" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw021
            
            #add-point:AFTER FIELD xccw021
{<point name="construct.a.page1.xccw021" />}
            #END add-point
            
         #Ctrlp:construct.c.page1.inba004_desc
         ON ACTION controlp INFIELD inba004_desc
            #add-point:ON ACTION controlp INFIELD inba004_desc
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inba004_desc #顯示到畫面上
            NEXT FIELD inba004_desc                    #返回原欄位
    
            #END add-point
   
         #此段落由子樣板a01產生
         BEFORE FIELD xccw043
            #add-point:BEFORE FIELD xccw043
{<point name="construct.b.page1.xccw043" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw043
            
            #add-point:AFTER FIELD xccw043
{<point name="construct.a.page1.xccw043" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw043
         ON ACTION controlp INFIELD xccw043
            #add-point:ON ACTION controlp INFIELD xccw043
{<point name="construct.c.page1.xccw043" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw046
            #add-point:BEFORE FIELD xccw046
{<point name="construct.b.page1.xccw046" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw046
            
            #add-point:AFTER FIELD xccw046
{<point name="construct.a.page1.xccw046" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw046
         ON ACTION controlp INFIELD xccw046
            #add-point:ON ACTION controlp INFIELD xccw046
{<point name="construct.c.page1.xccw046" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xccw044
         ON ACTION controlp INFIELD xccw044
            #add-point:ON ACTION controlp INFIELD xccw044
{<point name="construct.c.page1.xccw044" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw044
            #add-point:BEFORE FIELD xccw044
{<point name="construct.b.page1.xccw044" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw044
            
            #add-point:AFTER FIELD xccw044
{<point name="construct.a.page1.xccw044" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw045
            #add-point:BEFORE FIELD xccw045
{<point name="construct.b.page1.xccw045" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw045
            
            #add-point:AFTER FIELD xccw045
{<point name="construct.a.page1.xccw045" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw045
         ON ACTION controlp INFIELD xccw045
            #add-point:ON ACTION controlp INFIELD xccw045
{<point name="construct.c.page1.xccw045" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw201
            #add-point:BEFORE FIELD xccw201
{<point name="construct.b.page1.xccw201" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw201
            
            #add-point:AFTER FIELD xccw201
{<point name="construct.a.page1.xccw201" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw201
         ON ACTION controlp INFIELD xccw201
            #add-point:ON ACTION controlp INFIELD xccw201
{<point name="construct.c.page1.xccw201" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw282a
            #add-point:BEFORE FIELD xccw282a
{<point name="construct.b.page1.xccw282a" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw282a
            
            #add-point:AFTER FIELD xccw282a
{<point name="construct.a.page1.xccw282a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw282a
         ON ACTION controlp INFIELD xccw282a
            #add-point:ON ACTION controlp INFIELD xccw282a
{<point name="construct.c.page1.xccw282a" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw282b
            #add-point:BEFORE FIELD xccw282b
{<point name="construct.b.page1.xccw282b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw282b
            
            #add-point:AFTER FIELD xccw282b
{<point name="construct.a.page1.xccw282b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw282b
         ON ACTION controlp INFIELD xccw282b
            #add-point:ON ACTION controlp INFIELD xccw282b
{<point name="construct.c.page1.xccw282b" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw282c
            #add-point:BEFORE FIELD xccw282c
{<point name="construct.b.page1.xccw282c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw282c
            
            #add-point:AFTER FIELD xccw282c
{<point name="construct.a.page1.xccw282c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw282c
         ON ACTION controlp INFIELD xccw282c
            #add-point:ON ACTION controlp INFIELD xccw282c
{<point name="construct.c.page1.xccw282c" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw282d
            #add-point:BEFORE FIELD xccw282d
{<point name="construct.b.page1.xccw282d" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw282d
            
            #add-point:AFTER FIELD xccw282d
{<point name="construct.a.page1.xccw282d" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw282d
         ON ACTION controlp INFIELD xccw282d
            #add-point:ON ACTION controlp INFIELD xccw282d
{<point name="construct.c.page1.xccw282d" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw282e
            #add-point:BEFORE FIELD xccw282e
{<point name="construct.b.page1.xccw282e" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw282e
            
            #add-point:AFTER FIELD xccw282e
{<point name="construct.a.page1.xccw282e" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw282e
         ON ACTION controlp INFIELD xccw282e
            #add-point:ON ACTION controlp INFIELD xccw282e
{<point name="construct.c.page1.xccw282e" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw282f
            #add-point:BEFORE FIELD xccw282f
{<point name="construct.b.page1.xccw282f" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw282f
            
            #add-point:AFTER FIELD xccw282f
{<point name="construct.a.page1.xccw282f" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw282f
         ON ACTION controlp INFIELD xccw282f
            #add-point:ON ACTION controlp INFIELD xccw282f
{<point name="construct.c.page1.xccw282f" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw282g
            #add-point:BEFORE FIELD xccw282g
{<point name="construct.b.page1.xccw282g" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw282g
            
            #add-point:AFTER FIELD xccw282g
{<point name="construct.a.page1.xccw282g" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw282g
         ON ACTION controlp INFIELD xccw282g
            #add-point:ON ACTION controlp INFIELD xccw282g
{<point name="construct.c.page1.xccw282g" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw282h
            #add-point:BEFORE FIELD xccw282h
{<point name="construct.b.page1.xccw282h" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw282h
            
            #add-point:AFTER FIELD xccw282h
{<point name="construct.a.page1.xccw282h" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw282h
         ON ACTION controlp INFIELD xccw282h
            #add-point:ON ACTION controlp INFIELD xccw282h
{<point name="construct.c.page1.xccw282h" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw282
            #add-point:BEFORE FIELD xccw282
{<point name="construct.b.page1.xccw282" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw282
            
            #add-point:AFTER FIELD xccw282
{<point name="construct.a.page1.xccw282" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw282
         ON ACTION controlp INFIELD xccw282
            #add-point:ON ACTION controlp INFIELD xccw282
{<point name="construct.c.page1.xccw282" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw202
            #add-point:BEFORE FIELD xccw202
{<point name="construct.b.page1.xccw202" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw202
            
            #add-point:AFTER FIELD xccw202
{<point name="construct.a.page1.xccw202" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw202
         ON ACTION controlp INFIELD xccw202
            #add-point:ON ACTION controlp INFIELD xccw202
{<point name="construct.c.page1.xccw202" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw202a
            #add-point:BEFORE FIELD xccw202a
{<point name="construct.b.page1.xccw202a" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw202a
            
            #add-point:AFTER FIELD xccw202a
{<point name="construct.a.page1.xccw202a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw202a
         ON ACTION controlp INFIELD xccw202a
            #add-point:ON ACTION controlp INFIELD xccw202a
{<point name="construct.c.page1.xccw202a" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw202b
            #add-point:BEFORE FIELD xccw202b
{<point name="construct.b.page1.xccw202b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw202b
            
            #add-point:AFTER FIELD xccw202b
{<point name="construct.a.page1.xccw202b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw202b
         ON ACTION controlp INFIELD xccw202b
            #add-point:ON ACTION controlp INFIELD xccw202b
{<point name="construct.c.page1.xccw202b" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw202c
            #add-point:BEFORE FIELD xccw202c
{<point name="construct.b.page1.xccw202c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw202c
            
            #add-point:AFTER FIELD xccw202c
{<point name="construct.a.page1.xccw202c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw202c
         ON ACTION controlp INFIELD xccw202c
            #add-point:ON ACTION controlp INFIELD xccw202c
{<point name="construct.c.page1.xccw202c" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw202d
            #add-point:BEFORE FIELD xccw202d
{<point name="construct.b.page1.xccw202d" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw202d
            
            #add-point:AFTER FIELD xccw202d
{<point name="construct.a.page1.xccw202d" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw202d
         ON ACTION controlp INFIELD xccw202d
            #add-point:ON ACTION controlp INFIELD xccw202d
{<point name="construct.c.page1.xccw202d" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw202e
            #add-point:BEFORE FIELD xccw202e
{<point name="construct.b.page1.xccw202e" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw202e
            
            #add-point:AFTER FIELD xccw202e
{<point name="construct.a.page1.xccw202e" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw202e
         ON ACTION controlp INFIELD xccw202e
            #add-point:ON ACTION controlp INFIELD xccw202e
{<point name="construct.c.page1.xccw202e" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw202f
            #add-point:BEFORE FIELD xccw202f
{<point name="construct.b.page1.xccw202f" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw202f
            
            #add-point:AFTER FIELD xccw202f
{<point name="construct.a.page1.xccw202f" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw202f
         ON ACTION controlp INFIELD xccw202f
            #add-point:ON ACTION controlp INFIELD xccw202f
{<point name="construct.c.page1.xccw202f" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw202g
            #add-point:BEFORE FIELD xccw202g
{<point name="construct.b.page1.xccw202g" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw202g
            
            #add-point:AFTER FIELD xccw202g
{<point name="construct.a.page1.xccw202g" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw202g
         ON ACTION controlp INFIELD xccw202g
            #add-point:ON ACTION controlp INFIELD xccw202g
{<point name="construct.c.page1.xccw202g" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw202h
            #add-point:BEFORE FIELD xccw202h
{<point name="construct.b.page1.xccw202h" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw202h
            
            #add-point:AFTER FIELD xccw202h
{<point name="construct.a.page1.xccw202h" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccw202h
         ON ACTION controlp INFIELD xccw202h
            #add-point:ON ACTION controlp INFIELD xccw202h
{<point name="construct.c.page1.xccw202h" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.xcckowndp
         ON ACTION controlp INFIELD xcckowndp
            #add-point:ON ACTION controlp INFIELD xcckowndp
{<point name="construct.c.page2.xcckowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcckowndp
            #add-point:BEFORE FIELD xcckowndp
{<point name="construct.b.page2.xcckowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcckowndp
            
            #add-point:AFTER FIELD xcckowndp
{<point name="construct.a.page2.xcckowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.xcckcrtid
         ON ACTION controlp INFIELD xcckcrtid
            #add-point:ON ACTION controlp INFIELD xcckcrtid
{<point name="construct.c.page2.xcckcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcckcrtid
            #add-point:BEFORE FIELD xcckcrtid
{<point name="construct.b.page2.xcckcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcckcrtid
            
            #add-point:AFTER FIELD xcckcrtid
{<point name="construct.a.page2.xcckcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xccw032
         ON ACTION controlp INFIELD xccw032
            #add-point:ON ACTION controlp INFIELD xccw032
{<point name="construct.c.page3.xccw032" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw032
            #add-point:BEFORE FIELD xccw032
{<point name="construct.b.page3.xccw032" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw032
            
            #add-point:AFTER FIELD xccw032
{<point name="construct.a.page3.xccw032" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xccw033
         ON ACTION controlp INFIELD xccw033
            #add-point:ON ACTION controlp INFIELD xccw033
{<point name="construct.c.page3.xccw033" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw033
            #add-point:BEFORE FIELD xccw033
{<point name="construct.b.page3.xccw033" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw033
            
            #add-point:AFTER FIELD xccw033
{<point name="construct.a.page3.xccw033" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xccw022
         ON ACTION controlp INFIELD xccw022
            #add-point:ON ACTION controlp INFIELD xccw022
{<point name="construct.c.page3.xccw022" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw022
            #add-point:BEFORE FIELD xccw022
{<point name="construct.b.page3.xccw022" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw022
            
            #add-point:AFTER FIELD xccw022
{<point name="construct.a.page3.xccw022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xccw023
         ON ACTION controlp INFIELD xccw023
            #add-point:ON ACTION controlp INFIELD xccw023
{<point name="construct.c.page3.xccw023" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw023
            #add-point:BEFORE FIELD xccw023
{<point name="construct.b.page3.xccw023" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw023
            
            #add-point:AFTER FIELD xccw023
{<point name="construct.a.page3.xccw023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xccw024
         ON ACTION controlp INFIELD xccw024
            #add-point:ON ACTION controlp INFIELD xccw024
{<point name="construct.c.page3.xccw024" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw024
            #add-point:BEFORE FIELD xccw024
{<point name="construct.b.page3.xccw024" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw024
            
            #add-point:AFTER FIELD xccw024
{<point name="construct.a.page3.xccw024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xccw025
         ON ACTION controlp INFIELD xccw025
            #add-point:ON ACTION controlp INFIELD xccw025
{<point name="construct.c.page3.xccw025" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw025
            #add-point:BEFORE FIELD xccw025
{<point name="construct.b.page3.xccw025" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw025
            
            #add-point:AFTER FIELD xccw025
{<point name="construct.a.page3.xccw025" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xccw026
         ON ACTION controlp INFIELD xccw026
            #add-point:ON ACTION controlp INFIELD xccw026
{<point name="construct.c.page3.xccw026" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw026
            #add-point:BEFORE FIELD xccw026
{<point name="construct.b.page3.xccw026" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw026
            
            #add-point:AFTER FIELD xccw026
{<point name="construct.a.page3.xccw026" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xccw027
         ON ACTION controlp INFIELD xccw027
            #add-point:ON ACTION controlp INFIELD xccw027
{<point name="construct.c.page3.xccw027" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw027
            #add-point:BEFORE FIELD xccw027
{<point name="construct.b.page3.xccw027" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw027
            
            #add-point:AFTER FIELD xccw027
{<point name="construct.a.page3.xccw027" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xccw028
         ON ACTION controlp INFIELD xccw028
            #add-point:ON ACTION controlp INFIELD xccw028
{<point name="construct.c.page3.xccw028" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw028
            #add-point:BEFORE FIELD xccw028
{<point name="construct.b.page3.xccw028" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw028
            
            #add-point:AFTER FIELD xccw028
{<point name="construct.a.page3.xccw028" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xccw029
         ON ACTION controlp INFIELD xccw029
            #add-point:ON ACTION controlp INFIELD xccw029
{<point name="construct.c.page3.xccw029" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw029
            #add-point:BEFORE FIELD xccw029
{<point name="construct.b.page3.xccw029" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw029
            
            #add-point:AFTER FIELD xccw029
{<point name="construct.a.page3.xccw029" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xccw030
         ON ACTION controlp INFIELD xccw030
            #add-point:ON ACTION controlp INFIELD xccw030
{<point name="construct.c.page3.xccw030" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw030
            #add-point:BEFORE FIELD xccw030
{<point name="construct.b.page3.xccw030" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw030
            
            #add-point:AFTER FIELD xccw030
{<point name="construct.a.page3.xccw030" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xccw031
         ON ACTION controlp INFIELD xccw031
            #add-point:ON ACTION controlp INFIELD xccw031
{<point name="construct.c.page3.xccw031" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw031
            #add-point:BEFORE FIELD xccw031
{<point name="construct.b.page3.xccw031" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw031
            
            #add-point:AFTER FIELD xccw031
{<point name="construct.a.page3.xccw031" />}
            #END add-point
            
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct
{<point name="cs.more_construct"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog
{<point name="cs.before_dialog"/>}
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct
{<point name="cs.after_construct"/>}
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION

{</section>}

{<section id="axct312.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axct312_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #add-point:query開始前
   {<point name="query.befroe_query"/>}
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xccw_d.clear()
   CALL g_xccw2_d.clear()
   CALL g_xccw3_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axct312_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL axct312_browser_fill(g_wc)
      CALL axct312_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL axct312_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   ELSE
      CALL axct312_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION

{</section>}

{<section id="axct312.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axct312_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   #add-point:fetch段動作開始前
   {<point name="fetch.before_fetch"/>}
   #end add-point    
 
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L' 
         LET g_current_idx = g_header_cnt
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   CALL axct312_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xccw_m.xccwld = g_browser[g_current_idx].b_xccwld
   LET g_xccw_m.xccw003 = g_browser[g_current_idx].b_xccw003
   LET g_xccw_m.xccw004 = g_browser[g_current_idx].b_xccw004
   LET g_xccw_m.xccw005 = g_browser[g_current_idx].b_xccw005
   LET g_xccw_m.xccw006 = g_browser[g_current_idx].b_xccw006
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axct312_master_referesh USING g_xccw_m.xccwld,g_xccw_m.xccw003,g_xccw_m.xccw004,g_xccw_m.xccw005, 
       g_xccw_m.xccw006 INTO g_xccw_m.xccwld,g_xccw_m.xccwcomp,g_xccw_m.xccw003,g_xccw_m.xccw012,g_xccw_m.xccw006, 
       g_xccw_m.xccw013,g_xccw_m.xccw004,g_xccw_m.xccw005,g_xccw_m.xccwld_desc,g_xccw_m.xccwcomp_desc, 
       g_xccw_m.xccw003_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xccw_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      INITIALIZE g_xccw_m.* TO NULL
      RETURN
   END IF
   
   #LET g_data_owner =       
   #LET g_data_dept =   
   
   #保存單頭舊值
   LET g_xccw_m_t.* = g_xccw_m.*
   LET g_xccw_m_o.* = g_xccw_m.*
   
   #重新顯示   
   CALL axct312_show()
 
   
 
END FUNCTION

{</section>}

{<section id="axct312.insert" >}
#+ 資料新增
PRIVATE FUNCTION axct312_insert()
   #add-point:insert段define
{<point name="insert.define"/>}
   #end add-point    
   
   #add-point:insert段before
{<point name="insert.before"/>}
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_xccw_d.clear()
   CALL g_xccw2_d.clear()
   CALL g_xccw3_d.clear()
 
 
   INITIALIZE g_xccw_m.* LIKE xccw_t.*             #DEFAULT 設定
   LET g_xccwld_t = NULL
   LET g_xccw003_t = NULL
   LET g_xccw004_t = NULL
   LET g_xccw005_t = NULL
   LET g_xccw006_t = NULL
 
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值
{<point name="insert.default"/>}
      #end add-point 
 
      CALL axct312_input("a")
      
      #add-point:單頭輸入後
{<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xccw_m.* = g_xccw_m_t.*
         CALL axct312_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
#         INITIALIZE g_xccw_m.* TO NULL
         INITIALIZE g_xccw_d TO NULL
         INITIALIZE g_xccw2_d TO NULL
         INITIALIZE g_xccw3_d TO NULL
 
         CALL axct312_show()
         RETURN
      END IF
    
      #CALL g_xccw_d.clear()
      #CALL g_xccw2_d.clear()
      #CALL g_xccw3_d.clear()
 
      
      #add-point:單頭輸入後2
{<point name="insert.after_insert2"/>}
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_xccwld_t = g_xccw_m.xccwld
   LET g_xccw003_t = g_xccw_m.xccw003
   LET g_xccw004_t = g_xccw_m.xccw004
   LET g_xccw005_t = g_xccw_m.xccw005
   LET g_xccw006_t = g_xccw_m.xccw006
 
   
   LET g_current_idx = g_browser.getLength() + 1
   LET g_browser[g_current_idx].b_xccwld = g_xccw_m.xccwld
   LET g_browser[g_current_idx].b_xccw003 = g_xccw_m.xccw003
   LET g_browser[g_current_idx].b_xccw004 = g_xccw_m.xccw004
   LET g_browser[g_current_idx].b_xccw005 = g_xccw_m.xccw005
   LET g_browser[g_current_idx].b_xccw006 = g_xccw_m.xccw006
 
   
   LET g_detail_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
   
   #LET g_wc = "(",g_wc,  
   #           " OR ( xccwent = '" ||g_enterprise|| "' AND ",
   #           " xccwld = '", g_xccw_m.xccwld CLIPPED, "' "
   #           ," AND xccw003 = '", g_xccw_m.xccw003 CLIPPED, "' "
   #           ," AND xccw004 = '", g_xccw_m.xccw004 CLIPPED, "' "
   #           ," AND xccw005 = '", g_xccw_m.xccw005 CLIPPED, "' "
   #           ," AND xccw006 = '", g_xccw_m.xccw006 CLIPPED, "' "
 
   #           , ")) "
   
END FUNCTION

{</section>}

{<section id="axct312.modify" >}
#+ 資料修改
PRIVATE FUNCTION axct312_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_xccw_m.xccwld IS NULL
   OR g_xccw_m.xccw003 IS NULL
   OR g_xccw_m.xccw004 IS NULL
   OR g_xccw_m.xccw005 IS NULL
   OR g_xccw_m.xccw006 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
   
   EXECUTE axct312_master_referesh USING g_xccw_m.xccwld,g_xccw_m.xccw003,g_xccw_m.xccw004,g_xccw_m.xccw005, 
       g_xccw_m.xccw006 INTO g_xccw_m.xccwld,g_xccw_m.xccwcomp,g_xccw_m.xccw003,g_xccw_m.xccw012,g_xccw_m.xccw006, 
       g_xccw_m.xccw013,g_xccw_m.xccw004,g_xccw_m.xccw005,g_xccw_m.xccwld_desc,g_xccw_m.xccwcomp_desc, 
       g_xccw_m.xccw003_desc
 
   ERROR ""
  
   LET g_xccwld_t = g_xccw_m.xccwld
   LET g_xccw003_t = g_xccw_m.xccw003
   LET g_xccw004_t = g_xccw_m.xccw004
   LET g_xccw005_t = g_xccw_m.xccw005
   LET g_xccw006_t = g_xccw_m.xccw006
 
   CALL s_transaction_begin()
   
   OPEN axct312_cl USING g_enterprise,g_xccw_m.xccwld
                                                       ,g_xccw_m.xccw003
                                                       ,g_xccw_m.xccw004
                                                       ,g_xccw_m.xccw005
                                                       ,g_xccw_m.xccw006
 
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axct312_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      CLOSE axct312_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH axct312_cl INTO g_xccw_m.xccwld,g_xccw_m.xccwld_desc,g_xccw_m.xccwcomp,g_xccw_m.xccwcomp_desc, 
       g_xccw_m.xccw003,g_xccw_m.xccw003_desc,g_xccw_m.xccw012,g_xccw_m.xccw006,g_xccw_m.xccw013,g_xccw_m.xccw004, 
       g_xccw_m.xccw005,g_xccw_m.xcat003
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_xccw_m.xccwld 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      CLOSE axct312_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   CALL s_transaction_end('Y','0')
 
   CALL axct312_show()
   WHILE TRUE
      LET g_xccwld_t = g_xccw_m.xccwld
      LET g_xccw003_t = g_xccw_m.xccw003
      LET g_xccw004_t = g_xccw_m.xccw004
      LET g_xccw005_t = g_xccw_m.xccw005
      LET g_xccw006_t = g_xccw_m.xccw006
 
 
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL axct312_input("u")     #欄位更改
      
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xccw_m.* = g_xccw_m_t.*
         CALL axct312_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_xccw_m.xccwld != g_xccwld_t 
      OR g_xccw_m.xccw003 != g_xccw003_t 
      OR g_xccw_m.xccw004 != g_xccw004_t 
      OR g_xccw_m.xccw005 != g_xccw005_t 
      OR g_xccw_m.xccw006 != g_xccw006_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前
         {<point name="modify.b_key_update" mark="Y"/>}
         #end add-point
         
         #更新單頭key值
         UPDATE xccw_t SET xccwld = g_xccw_m.xccwld
                                       , xccw003 = g_xccw_m.xccw003
                                       , xccw004 = g_xccw_m.xccw004
                                       , xccw005 = g_xccw_m.xccw005
                                       , xccw006 = g_xccw_m.xccw006
 
          WHERE xccwent = g_enterprise AND xccwld = g_xccwld_t
            AND xccw003 = g_xccw003_t
            AND xccw004 = g_xccw004_t
            AND xccw005 = g_xccw005_t
            AND xccw006 = g_xccw006_t
 
         #add-point:單頭(偽)修改中
         {<point name="modify.m_key_update"/>}
         #end add-point
         
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xccw_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xccw_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
 
 
         
         #add-point:單頭(偽)修改後
         {<point name="modify.a_key_update"/>}
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_xccw_m.xccwld,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE axct312_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_xccw_m.xccwld,'U')
 
   CALL axct312_b_fill("1=1")
   
END FUNCTION   

{</section>}

{<section id="axct312.input" >}
#+ 資料輸入
PRIVATE FUNCTION axct312_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
{<point name="input.define"/>}
   #end add-point    
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
{<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT xccw001,xccw007,xccw008,xccw002,xccwsite,xccw010,xccw011,xccw015,xccw016, 
       xccw017,xccw009,xccw020,xccw021,xccw043,xccw046,xccw044,xccw045,xccw201,xccw282a,xccw282b,xccw282c, 
       xccw282d,xccw282e,xccw282f,xccw282g,xccw282h,xccw282,xccw202,xccw202a,xccw202b,xccw202c,xccw202d, 
       xccw202e,xccw202f,xccw202g,xccw202h,xccw001,xccw007,xccw008,xccw002,xccw010,xccw011,xccw001,xccw007, 
       xccw008,xccw002,xccwsite,xccw010,xccw011,xccw021,xccw032,xccw033,xccw022,xccw023,xccw024,xccw025, 
       xccw026,xccw027,xccw028,xccw029,xccw030,xccw031,xccw201,xccw282,xccw202,xccw009 FROM xccw_t WHERE  
       xccwent=? AND xccwld=? AND xccw003=? AND xccw004=? AND xccw005=? AND xccw006=? AND xccw001=?  
       AND xccw002=? AND xccw007=? AND xccw008=? AND xccw009=? FOR UPDATE"
   #add-point:input段define_sql
{<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axct312_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axct312_set_entry(p_cmd)
   #add-point:set_entry後
{<point name="input.after_set_entry"/>}
   #end add-point
   CALL axct312_set_no_entry(p_cmd)
   #add-point:set_no_entry後
{<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_xccw_m.xccwld,g_xccw_m.xccwcomp,g_xccw_m.xccw003,g_xccw_m.xccw012,g_xccw_m.xccw006, 
       g_xccw_m.xccw013,g_xccw_m.xccw004,g_xccw_m.xccw005,g_xccw_m.xcat003
   
   LET lb_reproduce = FALSE
   
   #add-point:進入修改段前
{<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

{</section>}

{<section id="axct312.input.head" >}
   
      #單頭段
      INPUT BY NAME g_xccw_m.xccwld,g_xccw_m.xccwcomp,g_xccw_m.xccw003,g_xccw_m.xccw012,g_xccw_m.xccw006, 
          g_xccw_m.xccw013,g_xccw_m.xccw004,g_xccw_m.xccw005,g_xccw_m.xcat003 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前
            {<point name="input.head.b_input"/>}
            #end add-point
          
                  #此段落由子樣板a02產生
         AFTER FIELD xccwld
            
            #add-point:AFTER FIELD xccwld
            {<point name="input.a.xccwld" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccwld
            #add-point:BEFORE FIELD xccwld
            {<point name="input.b.xccwld" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xccwld
            #add-point:ON CHANGE xccwld
            {<point name="input.g.xccwld" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccwcomp
            
            #add-point:AFTER FIELD xccwcomp
            {<point name="input.a.xccwcomp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccwcomp
            #add-point:BEFORE FIELD xccwcomp
            {<point name="input.b.xccwcomp" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xccwcomp
            #add-point:ON CHANGE xccwcomp
            {<point name="input.g.xccwcomp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw003
            
            #add-point:AFTER FIELD xccw003
            {<point name="input.a.xccw003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw003
            #add-point:BEFORE FIELD xccw003
            {<point name="input.b.xccw003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xccw003
            #add-point:ON CHANGE xccw003
            {<point name="input.g.xccw003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw012
            #add-point:BEFORE FIELD xccw012
            {<point name="input.b.xccw012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw012
            
            #add-point:AFTER FIELD xccw012
            {<point name="input.a.xccw012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw012
            #add-point:ON CHANGE xccw012
            {<point name="input.g.xccw012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw006
            #add-point:BEFORE FIELD xccw006
            {<point name="input.b.xccw006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw006
            
            #add-point:AFTER FIELD xccw006
            {<point name="input.a.xccw006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw006
            #add-point:ON CHANGE xccw006
            {<point name="input.g.xccw006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw013
            #add-point:BEFORE FIELD xccw013
            {<point name="input.b.xccw013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw013
            
            #add-point:AFTER FIELD xccw013
            {<point name="input.a.xccw013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw013
            #add-point:ON CHANGE xccw013
            {<point name="input.g.xccw013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw004
            #add-point:BEFORE FIELD xccw004
            {<point name="input.b.xccw004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw004
            
            #add-point:AFTER FIELD xccw004
            {<point name="input.a.xccw004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw004
            #add-point:ON CHANGE xccw004
            {<point name="input.g.xccw004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw005
            #add-point:BEFORE FIELD xccw005
            {<point name="input.b.xccw005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw005
            
            #add-point:AFTER FIELD xccw005
            {<point name="input.a.xccw005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw005
            #add-point:ON CHANGE xccw005
            {<point name="input.g.xccw005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xcat003
            #add-point:BEFORE FIELD xcat003
            {<point name="input.b.xcat003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xcat003
            
            #add-point:AFTER FIELD xcat003
            {<point name="input.a.xcat003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xcat003
            #add-point:ON CHANGE xcat003
            {<point name="input.g.xcat003" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.xccwld
         ON ACTION controlp INFIELD xccwld
            #add-point:ON ACTION controlp INFIELD xccwld
            {<point name="input.c.xccwld" />}
            #END add-point
 
         #Ctrlp:input.c.xccwcomp
         ON ACTION controlp INFIELD xccwcomp
            #add-point:ON ACTION controlp INFIELD xccwcomp
            {<point name="input.c.xccwcomp" />}
            #END add-point
 
         #Ctrlp:input.c.xccw003
         ON ACTION controlp INFIELD xccw003
            #add-point:ON ACTION controlp INFIELD xccw003
            {<point name="input.c.xccw003" />}
            #END add-point
 
         #Ctrlp:input.c.xccw012
         ON ACTION controlp INFIELD xccw012
            #add-point:ON ACTION controlp INFIELD xccw012
            {<point name="input.c.xccw012" />}
            #END add-point
 
         #Ctrlp:input.c.xccw006
         ON ACTION controlp INFIELD xccw006
            #add-point:ON ACTION controlp INFIELD xccw006
            {<point name="input.c.xccw006" />}
            #END add-point
 
         #Ctrlp:input.c.xccw013
         ON ACTION controlp INFIELD xccw013
            #add-point:ON ACTION controlp INFIELD xccw013
            {<point name="input.c.xccw013" />}
            #END add-point
 
         #Ctrlp:input.c.xccw004
         ON ACTION controlp INFIELD xccw004
            #add-point:ON ACTION controlp INFIELD xccw004
            {<point name="input.c.xccw004" />}
            #END add-point
 
         #Ctrlp:input.c.xccw005
         ON ACTION controlp INFIELD xccw005
            #add-point:ON ACTION controlp INFIELD xccw005
            {<point name="input.c.xccw005" />}
            #END add-point
 
         #Ctrlp:input.c.xcat003
         ON ACTION controlp INFIELD xcat003
            #add-point:ON ACTION controlp INFIELD xcat003
            {<point name="input.c.xcat003" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
 
            #多語言處理
            
            
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xccw_m.xccwld             
                            ,g_xccw_m.xccw003   
                            ,g_xccw_m.xccw004   
                            ,g_xccw_m.xccw005   
                            ,g_xccw_m.xccw006   
 
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
            
               UPDATE xccw_t SET (xccwld,xccwcomp,xccw003,xccw012,xccw006,xccw013,xccw004,xccw005) = (g_xccw_m.xccwld, 
                   g_xccw_m.xccwcomp,g_xccw_m.xccw003,g_xccw_m.xccw012,g_xccw_m.xccw006,g_xccw_m.xccw013, 
                   g_xccw_m.xccw004,g_xccw_m.xccw005)
                WHERE xccwent = g_enterprise AND xccwld = g_xccwld_t
                  AND xccw003 = g_xccw003_t
                  AND xccw004 = g_xccw004_t
                  AND xccw005 = g_xccw005_t
                  AND xccw006 = g_xccw006_t
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xccw_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xccw_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xccw_m.xccwld
               LET gs_keys_bak[1] = g_xccwld_t
               LET gs_keys[2] = g_xccw_m.xccw003
               LET gs_keys_bak[2] = g_xccw003_t
               LET gs_keys[3] = g_xccw_m.xccw004
               LET gs_keys_bak[3] = g_xccw004_t
               LET gs_keys[4] = g_xccw_m.xccw005
               LET gs_keys_bak[4] = g_xccw005_t
               LET gs_keys[5] = g_xccw_m.xccw006
               LET gs_keys_bak[5] = g_xccw006_t
               LET gs_keys[6] = g_xccw_d[g_detail_idx].xccw001
               LET gs_keys_bak[6] = g_xccw_d_t.xccw001
               LET gs_keys[7] = g_xccw_d[g_detail_idx].xccw002
               LET gs_keys_bak[7] = g_xccw_d_t.xccw002
               LET gs_keys[8] = g_xccw_d[g_detail_idx].xccw007
               LET gs_keys_bak[8] = g_xccw_d_t.xccw007
               LET gs_keys[9] = g_xccw_d[g_detail_idx].xccw008
               LET gs_keys_bak[9] = g_xccw_d_t.xccw008
               LET gs_keys[10] = g_xccw_d[g_detail_idx].xccw009
               LET gs_keys_bak[10] = g_xccw_d_t.xccw009
               CALL axct312_update_b('xccw_t',gs_keys,gs_keys_bak,"'1'")
                     
                     LET g_xccwld_t = g_xccw_m.xccwld
                     LET g_xccw003_t = g_xccw_m.xccw003
                     LET g_xccw004_t = g_xccw_m.xccw004
                     LET g_xccw005_t = g_xccw_m.xccw005
                     LET g_xccw006_t = g_xccw_m.xccw006
 
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     
                     LET g_log1 = util.JSON.stringify(g_xccw_m_t)
                     LET g_log2 = util.JSON.stringify(g_xccw_m)
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
               END CASE
            
            ELSE    
               #add-point:單頭新增
               {<point name="input.head.a_insert"/>}
               #end add-point
                                 
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axct312_detail_reproduce()
               END IF
            END IF
           #controlp
                     
           LET g_xccwld_t = g_xccw_m.xccwld
           LET g_xccw003_t = g_xccw_m.xccw003
           LET g_xccw004_t = g_xccw_m.xccw004
           LET g_xccw005_t = g_xccw_m.xccw005
           LET g_xccw006_t = g_xccw_m.xccw006
 
           
           #若單身還沒有輸入資料, 強制切換至單身
           #IF cl_null(g_xccw_d[1].xccw001) THEN
           #   CALL g_xccw_d.deleteElement(1)
           #   NEXT FIELD xccw001
           #END IF
           
           IF g_xccw_d.getLength() = 0 THEN
              NEXT FIELD xccw001
           END IF
 
      END INPUT

{</section>}

{<section id="axct312.input.body" >}
      #Page1 預設值產生於此處
      INPUT ARRAY g_xccw_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = FALSE,
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xccw_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axct312_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前
{<point name="input.body.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axct312_cl USING g_enterprise,
                                               g_xccw_m.xccwld
                                               ,g_xccw_m.xccw003
                                               ,g_xccw_m.xccw004
                                               ,g_xccw_m.xccw005
                                               ,g_xccw_m.xccw006
 
                                               
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct312_cl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CLOSE axct312_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_xccw_d[l_ac].xccw001 IS NOT NULL
               AND g_xccw_d[l_ac].xccw002 IS NOT NULL
               AND g_xccw_d[l_ac].xccw007 IS NOT NULL
               AND g_xccw_d[l_ac].xccw008 IS NOT NULL
               AND g_xccw_d[l_ac].xccw009 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xccw_d_t.* = g_xccw_d[l_ac].*  #BACKUP
               LET g_xccw_d_o.* = g_xccw_d[l_ac].*  #BACKUP
               CALL axct312_set_entry_b(l_cmd)
               #add-point:set_entry_b後
{<point name="input.body.before_row.set_entry_b"/>}
               #end add-point
               CALL axct312_set_no_entry_b(l_cmd)
               OPEN axct312_bcl USING g_enterprise,g_xccw_m.xccwld,
                                                g_xccw_m.xccw003,
                                                g_xccw_m.xccw004,
                                                g_xccw_m.xccw005,
                                                g_xccw_m.xccw006,
 
                                                g_xccw_d_t.xccw001
                                                ,g_xccw_d_t.xccw002
                                                ,g_xccw_d_t.xccw007
                                                ,g_xccw_d_t.xccw008
                                                ,g_xccw_d_t.xccw009
 
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axct312_bcl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axct312_bcl INTO g_xccw_d[l_ac].xccw001,g_xccw_d[l_ac].xccw007,g_xccw_d[l_ac].xccw008, 
                      g_xccw_d[l_ac].xccw002,g_xccw_d[l_ac].xccwsite,g_xccw_d[l_ac].xccw010,g_xccw_d[l_ac].xccw011, 
                      g_xccw_d[l_ac].xccw015,g_xccw_d[l_ac].xccw016,g_xccw_d[l_ac].xccw017,g_xccw_d[l_ac].xccw009, 
                      g_xccw_d[l_ac].xccw020,g_xccw_d[l_ac].xccw021,g_xccw_d[l_ac].xccw043,g_xccw_d[l_ac].xccw046, 
                      g_xccw_d[l_ac].xccw044,g_xccw_d[l_ac].xccw045,g_xccw_d[l_ac].xccw201,g_xccw_d[l_ac].xccw282a, 
                      g_xccw_d[l_ac].xccw282b,g_xccw_d[l_ac].xccw282c,g_xccw_d[l_ac].xccw282d,g_xccw_d[l_ac].xccw282e, 
                      g_xccw_d[l_ac].xccw282f,g_xccw_d[l_ac].xccw282g,g_xccw_d[l_ac].xccw282h,g_xccw_d[l_ac].xccw282, 
                      g_xccw_d[l_ac].xccw202,g_xccw_d[l_ac].xccw202a,g_xccw_d[l_ac].xccw202b,g_xccw_d[l_ac].xccw202c, 
                      g_xccw_d[l_ac].xccw202d,g_xccw_d[l_ac].xccw202e,g_xccw_d[l_ac].xccw202f,g_xccw_d[l_ac].xccw202g, 
                      g_xccw_d[l_ac].xccw202h,g_xccw2_d[l_ac].xccw001,g_xccw2_d[l_ac].xccw007,g_xccw2_d[l_ac].xccw008, 
                      g_xccw2_d[l_ac].xccw002,g_xccw2_d[l_ac].xccw010,g_xccw2_d[l_ac].xccw011,g_xccw3_d[l_ac].xccw001, 
                      g_xccw3_d[l_ac].xccw007,g_xccw3_d[l_ac].xccw008,g_xccw3_d[l_ac].xccw002,g_xccw3_d[l_ac].xccwsite, 
                      g_xccw3_d[l_ac].xccw010,g_xccw3_d[l_ac].xccw011,g_xccw3_d[l_ac].xccw021,g_xccw3_d[l_ac].xccw032, 
                      g_xccw3_d[l_ac].xccw033,g_xccw3_d[l_ac].xccw022,g_xccw3_d[l_ac].xccw023,g_xccw3_d[l_ac].xccw024, 
                      g_xccw3_d[l_ac].xccw025,g_xccw3_d[l_ac].xccw026,g_xccw3_d[l_ac].xccw027,g_xccw3_d[l_ac].xccw028, 
                      g_xccw3_d[l_ac].xccw029,g_xccw3_d[l_ac].xccw030,g_xccw3_d[l_ac].xccw031,g_xccw3_d[l_ac].xccw201, 
                      g_xccw3_d[l_ac].xccw282,g_xccw3_d[l_ac].xccw202,g_xccw3_d[l_ac].xccw009
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_xccw_d_t.xccw001 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
 
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axct312_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
{<point name="input.body.before_row"/>}
            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_xccw_d_t.* TO NULL
            INITIALIZE g_xccw_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xccw_d[l_ac].* TO NULL
            #公用欄位預設值
              
            #一般欄位預設值
            
            
            #add-point:modify段before備份
{<point name="input.body.before_insert.before_bak"/>}
            #end add-point
            LET g_xccw_d_t.* = g_xccw_d[l_ac].*     #新輸入資料
            LET g_xccw_d_o.* = g_xccw_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axct312_set_entry_b(l_cmd)
            #add-point:set_entry_b後
{<point name="input.body.before_insert.set_entry_b"/>}
            #end add-point
            CALL axct312_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xccw_d[li_reproduce_target].* = g_xccw_d[li_reproduce].*
               LET g_xccw2_d[li_reproduce_target].* = g_xccw2_d[li_reproduce].*
               LET g_xccw3_d[li_reproduce_target].* = g_xccw3_d[li_reproduce].*
 
               LET g_xccw_d[g_xccw_d.getLength()].xccw001 = NULL
               LET g_xccw_d[g_xccw_d.getLength()].xccw002 = NULL
               LET g_xccw_d[g_xccw_d.getLength()].xccw007 = NULL
               LET g_xccw_d[g_xccw_d.getLength()].xccw008 = NULL
               LET g_xccw_d[g_xccw_d.getLength()].xccw009 = NULL
 
            END IF
            
            #add-point:modify段before insert
{<point name="input.body.before_insert"/>}
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xccw_t 
             WHERE xccwent = g_enterprise AND xccwld = g_xccw_m.xccwld
               AND xccw003 = g_xccw_m.xccw003
               AND xccw004 = g_xccw_m.xccw004
               AND xccw005 = g_xccw_m.xccw005
               AND xccw006 = g_xccw_m.xccw006
 
               AND xccw001 = g_xccw_d[l_ac].xccw001
               AND xccw002 = g_xccw_d[l_ac].xccw002
               AND xccw007 = g_xccw_d[l_ac].xccw007
               AND xccw008 = g_xccw_d[l_ac].xccw008
               AND xccw009 = g_xccw_d[l_ac].xccw009
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
{<point name="input.body.b_insert" mark="Y"/>}
               #end add-point
               INSERT INTO xccw_t
                           (xccwent,
                            xccwld,xccwcomp,xccw003,xccw012,xccw006,xccw013,xccw004,xccw005,
                            xccw001,xccw002,xccw007,xccw008,xccw009
                            ,xccwsite,xccw010,xccw011,xccw015,xccw016,xccw017,xccw020,xccw021,
                            xccw043,xccw046,xccw044,xccw045,xccw201,
                            xccw282a,xccw282b,xccw282c,xccw282d,xccw282e,xccw282f,xccw282g,xccw282h,
                            xccw282,xccw202,xccw202a,xccw202b,xccw202c,xccw202d,xccw202e,xccw202f,
                            xccw202g,xccw202h,xccw010,xccw011,xccwsite,xccw010,xccw011,xccw021,xccw032,
                            xccw033,xccw022,xccw023,xccw024,xccw025,xccw026,xccw027,xccw028,xccw029,
                            xccw030,xccw031,xccw201,xccw282,xccw202) 
                     VALUES(g_enterprise,
                            g_xccw_m.xccwld,g_xccw_m.xccwcomp,g_xccw_m.xccw003,g_xccw_m.xccw012,g_xccw_m.xccw006,g_xccw_m.xccw013,g_xccw_m.xccw004,g_xccw_m.xccw005,
                            g_xccw_d[l_ac].xccw001,g_xccw_d[l_ac].xccw002,g_xccw_d[l_ac].xccw007,g_xccw_d[l_ac].xccw008, 
                                g_xccw_d[l_ac].xccw009
                            ,g_xccw_d[l_ac].xccwsite,g_xccw_d[l_ac].xccw010,g_xccw_d[l_ac].xccw011,g_xccw_d[l_ac].xccw015, 
                                g_xccw_d[l_ac].xccw016,g_xccw_d[l_ac].xccw017,g_xccw_d[l_ac].xccw020, 
                                g_xccw_d[l_ac].xccw021,g_xccw_d[l_ac].xccw043,g_xccw_d[l_ac].xccw046, 
                                g_xccw_d[l_ac].xccw044,g_xccw_d[l_ac].xccw045,g_xccw_d[l_ac].xccw201, 
                                g_xccw_d[l_ac].xccw282a,g_xccw_d[l_ac].xccw282b,g_xccw_d[l_ac].xccw282c, 
                                g_xccw_d[l_ac].xccw282d,g_xccw_d[l_ac].xccw282e,g_xccw_d[l_ac].xccw282f, 
                                g_xccw_d[l_ac].xccw282g,g_xccw_d[l_ac].xccw282h,g_xccw_d[l_ac].xccw282, 
                                g_xccw_d[l_ac].xccw202,g_xccw_d[l_ac].xccw202a,g_xccw_d[l_ac].xccw202b, 
                                g_xccw_d[l_ac].xccw202c,g_xccw_d[l_ac].xccw202d,g_xccw_d[l_ac].xccw202e, 
                                g_xccw_d[l_ac].xccw202f,g_xccw_d[l_ac].xccw202g,g_xccw_d[l_ac].xccw202h, 
                                g_xccw_d[l_ac].xccw010,g_xccw_d[l_ac].xccw011,g_xccw_d[l_ac].xccwsite, 
                                g_xccw_d[l_ac].xccw010,g_xccw_d[l_ac].xccw011,g_xccw_d[l_ac].xccw021, 
                                g_xccw3_d[l_ac].xccw032,g_xccw3_d[l_ac].xccw033,g_xccw3_d[l_ac].xccw022, 
                                g_xccw3_d[l_ac].xccw023,g_xccw3_d[l_ac].xccw024,g_xccw3_d[l_ac].xccw025, 
                                g_xccw3_d[l_ac].xccw026,g_xccw3_d[l_ac].xccw027,g_xccw3_d[l_ac].xccw028, 
                                g_xccw3_d[l_ac].xccw029,g_xccw3_d[l_ac].xccw030,g_xccw3_d[l_ac].xccw031, 
                                g_xccw_d[l_ac].xccw201,g_xccw_d[l_ac].xccw282,g_xccw_d[l_ac].xccw202) 

               #add-point:單身新增中
{<point name="input.body.m_insert"/>}
               #end add-point
               LET p_cmd = 'u'
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               INITIALIZE g_xccw_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xccw_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
{<point name="input.body.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後
{<point name="input.body.after_insert"/>}
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前
{<point name="input.body.b_delete"/>}
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CANCEL DELETE
               END IF
               IF axct312_before_delete() THEN 
                  
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axct312_bcl
               LET l_count = g_xccw_d.getLength()
            END IF 
            
            #add-point:單身刪除後
{<point name="input.body.a_delete"/>}
            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE 
{<point name="input.body.after_delete"/>}
               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_xccw_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #此段落由子樣板a01產生
         BEFORE FIELD xccw001
            #add-point:BEFORE FIELD xccw001
{<point name="input.b.page1.xccw001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw001
            
            #add-point:AFTER FIELD xccw001
{<point name="input.a.page1.xccw001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw001
            #add-point:ON CHANGE xccw001
{<point name="input.g.page1.xccw001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw007
            #add-point:BEFORE FIELD xccw007
{<point name="input.b.page1.xccw007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw007
            
            #add-point:AFTER FIELD xccw007
{<point name="input.a.page1.xccw007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw007
            #add-point:ON CHANGE xccw007
{<point name="input.g.page1.xccw007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw008
            #add-point:BEFORE FIELD xccw008
{<point name="input.b.page1.xccw008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw008
            
            #add-point:AFTER FIELD xccw008
{<point name="input.a.page1.xccw008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw008
            #add-point:ON CHANGE xccw008
{<point name="input.g.page1.xccw008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw002
            #add-point:BEFORE FIELD xccw002
{<point name="input.b.page1.xccw002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw002
            
            #add-point:AFTER FIELD xccw002
{<point name="input.a.page1.xccw002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw002
            #add-point:ON CHANGE xccw002
{<point name="input.g.page1.xccw002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccwsite
            #add-point:BEFORE FIELD xccwsite
{<point name="input.b.page1.xccwsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccwsite
            
            #add-point:AFTER FIELD xccwsite
{<point name="input.a.page1.xccwsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccwsite
            #add-point:ON CHANGE xccwsite
{<point name="input.g.page1.xccwsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw010
            #add-point:BEFORE FIELD xccw010
{<point name="input.b.page1.xccw010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw010
            
            #add-point:AFTER FIELD xccw010
{<point name="input.a.page1.xccw010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw010
            #add-point:ON CHANGE xccw010
{<point name="input.g.page1.xccw010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw011
            #add-point:BEFORE FIELD xccw011
{<point name="input.b.page1.xccw011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw011
            
            #add-point:AFTER FIELD xccw011
{<point name="input.a.page1.xccw011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw011
            #add-point:ON CHANGE xccw011
{<point name="input.g.page1.xccw011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw015
            #add-point:BEFORE FIELD xccw015
{<point name="input.b.page1.xccw015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw015
            
            #add-point:AFTER FIELD xccw015
{<point name="input.a.page1.xccw015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw015
            #add-point:ON CHANGE xccw015
{<point name="input.g.page1.xccw015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw016
            #add-point:BEFORE FIELD xccw016
{<point name="input.b.page1.xccw016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw016
            
            #add-point:AFTER FIELD xccw016
{<point name="input.a.page1.xccw016" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw016
            #add-point:ON CHANGE xccw016
{<point name="input.g.page1.xccw016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw017
            #add-point:BEFORE FIELD xccw017
{<point name="input.b.page1.xccw017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw017
            
            #add-point:AFTER FIELD xccw017
{<point name="input.a.page1.xccw017" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw017
            #add-point:ON CHANGE xccw017
{<point name="input.g.page1.xccw017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw009
            #add-point:BEFORE FIELD xccw009
{<point name="input.b.page1.xccw009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw009
            
            #add-point:AFTER FIELD xccw009
{<point name="input.a.page1.xccw009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw009
            #add-point:ON CHANGE xccw009
{<point name="input.g.page1.xccw009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw020
            #add-point:BEFORE FIELD xccw020
{<point name="input.b.page1.xccw020" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw020
            
            #add-point:AFTER FIELD xccw020
{<point name="input.a.page1.xccw020" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw020
            #add-point:ON CHANGE xccw020
{<point name="input.g.page1.xccw020" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw021
            #add-point:BEFORE FIELD xccw021
{<point name="input.b.page1.xccw021" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw021
            
            #add-point:AFTER FIELD xccw021
{<point name="input.a.page1.xccw021" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw021
            #add-point:ON CHANGE xccw021
{<point name="input.g.page1.xccw021" />}
            #END add-point
                  
         #此段落由子樣板a01產生
         BEFORE FIELD xccw043
            #add-point:BEFORE FIELD xccw043
{<point name="input.b.page1.xccw043" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw043
            
            #add-point:AFTER FIELD xccw043
{<point name="input.a.page1.xccw043" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw043
            #add-point:ON CHANGE xccw043
{<point name="input.g.page1.xccw043" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw046
            #add-point:BEFORE FIELD xccw046
{<point name="input.b.page1.xccw046" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw046
            
            #add-point:AFTER FIELD xccw046
{<point name="input.a.page1.xccw046" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw046
            #add-point:ON CHANGE xccw046
{<point name="input.g.page1.xccw046" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw044
            #add-point:BEFORE FIELD xccw044
{<point name="input.b.page1.xccw044" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw044
            
            #add-point:AFTER FIELD xccw044
{<point name="input.a.page1.xccw044" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw044
            #add-point:ON CHANGE xccw044
{<point name="input.g.page1.xccw044" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw045
            #add-point:BEFORE FIELD xccw045
{<point name="input.b.page1.xccw045" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw045
            
            #add-point:AFTER FIELD xccw045
{<point name="input.a.page1.xccw045" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw045
            #add-point:ON CHANGE xccw045
{<point name="input.g.page1.xccw045" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw201
            #add-point:BEFORE FIELD xccw201
{<point name="input.b.page1.xccw201" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw201
            
            #add-point:AFTER FIELD xccw201
{<point name="input.a.page1.xccw201" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw201
            #add-point:ON CHANGE xccw201
{<point name="input.g.page1.xccw201" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw282a
            #add-point:BEFORE FIELD xccw282a
{<point name="input.b.page1.xccw282a" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw282a
            
            #add-point:AFTER FIELD xccw282a
{<point name="input.a.page1.xccw282a" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw282a
            #add-point:ON CHANGE xccw282a
{<point name="input.g.page1.xccw282a" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw282b
            #add-point:BEFORE FIELD xccw282b
{<point name="input.b.page1.xccw282b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw282b
            
            #add-point:AFTER FIELD xccw282b
{<point name="input.a.page1.xccw282b" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw282b
            #add-point:ON CHANGE xccw282b
{<point name="input.g.page1.xccw282b" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw282c
            #add-point:BEFORE FIELD xccw282c
{<point name="input.b.page1.xccw282c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw282c
            
            #add-point:AFTER FIELD xccw282c
{<point name="input.a.page1.xccw282c" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw282c
            #add-point:ON CHANGE xccw282c
{<point name="input.g.page1.xccw282c" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw282d
            #add-point:BEFORE FIELD xccw282d
{<point name="input.b.page1.xccw282d" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw282d
            
            #add-point:AFTER FIELD xccw282d
{<point name="input.a.page1.xccw282d" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw282d
            #add-point:ON CHANGE xccw282d
{<point name="input.g.page1.xccw282d" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw282e
            #add-point:BEFORE FIELD xccw282e
{<point name="input.b.page1.xccw282e" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw282e
            
            #add-point:AFTER FIELD xccw282e
{<point name="input.a.page1.xccw282e" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw282e
            #add-point:ON CHANGE xccw282e
{<point name="input.g.page1.xccw282e" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw282f
            #add-point:BEFORE FIELD xccw282f
{<point name="input.b.page1.xccw282f" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw282f
            
            #add-point:AFTER FIELD xccw282f
{<point name="input.a.page1.xccw282f" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw282f
            #add-point:ON CHANGE xccw282f
{<point name="input.g.page1.xccw282f" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw282g
            #add-point:BEFORE FIELD xccw282g
{<point name="input.b.page1.xccw282g" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw282g
            
            #add-point:AFTER FIELD xccw282g
{<point name="input.a.page1.xccw282g" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw282g
            #add-point:ON CHANGE xccw282g
{<point name="input.g.page1.xccw282g" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw282h
            #add-point:BEFORE FIELD xccw282h
{<point name="input.b.page1.xccw282h" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw282h
            
            #add-point:AFTER FIELD xccw282h
{<point name="input.a.page1.xccw282h" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw282h
            #add-point:ON CHANGE xccw282h
{<point name="input.g.page1.xccw282h" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw282
            #add-point:BEFORE FIELD xccw282
{<point name="input.b.page1.xccw282" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw282
            
            #add-point:AFTER FIELD xccw282
{<point name="input.a.page1.xccw282" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw282
            #add-point:ON CHANGE xccw282
{<point name="input.g.page1.xccw282" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw202
            #add-point:BEFORE FIELD xccw202
{<point name="input.b.page1.xccw202" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw202
            
            #add-point:AFTER FIELD xccw202
{<point name="input.a.page1.xccw202" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw202
            #add-point:ON CHANGE xccw202
{<point name="input.g.page1.xccw202" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw202a
            #add-point:BEFORE FIELD xccw202a
{<point name="input.b.page1.xccw202a" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw202a
            
            #add-point:AFTER FIELD xccw202a
{<point name="input.a.page1.xccw202a" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw202a
            #add-point:ON CHANGE xccw202a
{<point name="input.g.page1.xccw202a" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw202b
            #add-point:BEFORE FIELD xccw202b
{<point name="input.b.page1.xccw202b" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw202b
            
            #add-point:AFTER FIELD xccw202b
{<point name="input.a.page1.xccw202b" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw202b
            #add-point:ON CHANGE xccw202b
{<point name="input.g.page1.xccw202b" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw202c
            #add-point:BEFORE FIELD xccw202c
{<point name="input.b.page1.xccw202c" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw202c
            
            #add-point:AFTER FIELD xccw202c
{<point name="input.a.page1.xccw202c" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw202c
            #add-point:ON CHANGE xccw202c
{<point name="input.g.page1.xccw202c" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw202d
            #add-point:BEFORE FIELD xccw202d
{<point name="input.b.page1.xccw202d" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw202d
            
            #add-point:AFTER FIELD xccw202d
{<point name="input.a.page1.xccw202d" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw202d
            #add-point:ON CHANGE xccw202d
{<point name="input.g.page1.xccw202d" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw202e
            #add-point:BEFORE FIELD xccw202e
{<point name="input.b.page1.xccw202e" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw202e
            
            #add-point:AFTER FIELD xccw202e
{<point name="input.a.page1.xccw202e" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw202e
            #add-point:ON CHANGE xccw202e
{<point name="input.g.page1.xccw202e" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw202f
            #add-point:BEFORE FIELD xccw202f
{<point name="input.b.page1.xccw202f" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw202f
            
            #add-point:AFTER FIELD xccw202f
{<point name="input.a.page1.xccw202f" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw202f
            #add-point:ON CHANGE xccw202f
{<point name="input.g.page1.xccw202f" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw202g
            #add-point:BEFORE FIELD xccw202g
{<point name="input.b.page1.xccw202g" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw202g
            
            #add-point:AFTER FIELD xccw202g
{<point name="input.a.page1.xccw202g" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw202g
            #add-point:ON CHANGE xccw202g
{<point name="input.g.page1.xccw202g" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xccw202h
            #add-point:BEFORE FIELD xccw202h
{<point name="input.b.page1.xccw202h" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xccw202h
            
            #add-point:AFTER FIELD xccw202h
{<point name="input.a.page1.xccw202h" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xccw202h
            #add-point:ON CHANGE xccw202h
{<point name="input.g.page1.xccw202h" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.xccw001
         ON ACTION controlp INFIELD xccw001
            #add-point:ON ACTION controlp INFIELD xccw001
{<point name="input.c.page1.xccw001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw007
         ON ACTION controlp INFIELD xccw007
            #add-point:ON ACTION controlp INFIELD xccw007
{<point name="input.c.page1.xccw007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw008
         ON ACTION controlp INFIELD xccw008
            #add-point:ON ACTION controlp INFIELD xccw008
{<point name="input.c.page1.xccw008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw002
         ON ACTION controlp INFIELD xccw002
            #add-point:ON ACTION controlp INFIELD xccw002
{<point name="input.c.page1.xccw002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccwsite
         ON ACTION controlp INFIELD xccwsite
            #add-point:ON ACTION controlp INFIELD xccwsite
{<point name="input.c.page1.xccwsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw010
         ON ACTION controlp INFIELD xccw010
            #add-point:ON ACTION controlp INFIELD xccw010
{<point name="input.c.page1.xccw010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw011
         ON ACTION controlp INFIELD xccw011
            #add-point:ON ACTION controlp INFIELD xccw011
{<point name="input.c.page1.xccw011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw015
         ON ACTION controlp INFIELD xccw015
            #add-point:ON ACTION controlp INFIELD xccw015
{<point name="input.c.page1.xccw015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw016
         ON ACTION controlp INFIELD xccw016
            #add-point:ON ACTION controlp INFIELD xccw016
{<point name="input.c.page1.xccw016" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw017
         ON ACTION controlp INFIELD xccw017
            #add-point:ON ACTION controlp INFIELD xccw017
{<point name="input.c.page1.xccw017" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw009
         ON ACTION controlp INFIELD xccw009
            #add-point:ON ACTION controlp INFIELD xccw009
{<point name="input.c.page1.xccw009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw020
         ON ACTION controlp INFIELD xccw020
            #add-point:ON ACTION controlp INFIELD xccw020
{<point name="input.c.page1.xccw020" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw021
         ON ACTION controlp INFIELD xccw021
            #add-point:ON ACTION controlp INFIELD xccw021
{<point name="input.c.page1.xccw021" />}
            #END add-point
         
         #Ctrlp:input.c.page1.xccw021
         ON ACTION controlp INFIELD inba004_desc
            #add-point:ON ACTION controlp INFIELD inba004_desc

            #END add-point
         
         #Ctrlp:input.c.page1.xccw043
         ON ACTION controlp INFIELD xccw043
            #add-point:ON ACTION controlp INFIELD xccw043
{<point name="input.c.page1.xccw043" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw046
         ON ACTION controlp INFIELD xccw046
            #add-point:ON ACTION controlp INFIELD xccw046
{<point name="input.c.page1.xccw046" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw044
         ON ACTION controlp INFIELD xccw044
            #add-point:ON ACTION controlp INFIELD xccw044
{<point name="input.c.page1.xccw044" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw045
         ON ACTION controlp INFIELD xccw045
            #add-point:ON ACTION controlp INFIELD xccw045
{<point name="input.c.page1.xccw045" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw201
         ON ACTION controlp INFIELD xccw201
            #add-point:ON ACTION controlp INFIELD xccw201
{<point name="input.c.page1.xccw201" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw282a
         ON ACTION controlp INFIELD xccw282a
            #add-point:ON ACTION controlp INFIELD xccw282a
{<point name="input.c.page1.xccw282a" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw282b
         ON ACTION controlp INFIELD xccw282b
            #add-point:ON ACTION controlp INFIELD xccw282b
{<point name="input.c.page1.xccw282b" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw282c
         ON ACTION controlp INFIELD xccw282c
            #add-point:ON ACTION controlp INFIELD xccw282c
{<point name="input.c.page1.xccw282c" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw282d
         ON ACTION controlp INFIELD xccw282d
            #add-point:ON ACTION controlp INFIELD xccw282d
{<point name="input.c.page1.xccw282d" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw282e
         ON ACTION controlp INFIELD xccw282e
            #add-point:ON ACTION controlp INFIELD xccw282e
{<point name="input.c.page1.xccw282e" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw282f
         ON ACTION controlp INFIELD xccw282f
            #add-point:ON ACTION controlp INFIELD xccw282f
{<point name="input.c.page1.xccw282f" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw282g
         ON ACTION controlp INFIELD xccw282g
            #add-point:ON ACTION controlp INFIELD xccw282g
{<point name="input.c.page1.xccw282g" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw282h
         ON ACTION controlp INFIELD xccw282h
            #add-point:ON ACTION controlp INFIELD xccw282h
{<point name="input.c.page1.xccw282h" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw282
         ON ACTION controlp INFIELD xccw282
            #add-point:ON ACTION controlp INFIELD xccw282
{<point name="input.c.page1.xccw282" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw202
         ON ACTION controlp INFIELD xccw202
            #add-point:ON ACTION controlp INFIELD xccw202
{<point name="input.c.page1.xccw202" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw202a
         ON ACTION controlp INFIELD xccw202a
            #add-point:ON ACTION controlp INFIELD xccw202a
{<point name="input.c.page1.xccw202a" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw202b
         ON ACTION controlp INFIELD xccw202b
            #add-point:ON ACTION controlp INFIELD xccw202b
{<point name="input.c.page1.xccw202b" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw202c
         ON ACTION controlp INFIELD xccw202c
            #add-point:ON ACTION controlp INFIELD xccw202c
{<point name="input.c.page1.xccw202c" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw202d
         ON ACTION controlp INFIELD xccw202d
            #add-point:ON ACTION controlp INFIELD xccw202d
{<point name="input.c.page1.xccw202d" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw202e
         ON ACTION controlp INFIELD xccw202e
            #add-point:ON ACTION controlp INFIELD xccw202e
{<point name="input.c.page1.xccw202e" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw202f
         ON ACTION controlp INFIELD xccw202f
            #add-point:ON ACTION controlp INFIELD xccw202f
{<point name="input.c.page1.xccw202f" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw202g
         ON ACTION controlp INFIELD xccw202g
            #add-point:ON ACTION controlp INFIELD xccw202g
{<point name="input.c.page1.xccw202g" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xccw202h
         ON ACTION controlp INFIELD xccw202h
            #add-point:ON ACTION controlp INFIELD xccw202h
{<point name="input.c.page1.xccw202h" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               LET g_xccw_d[l_ac].* = g_xccw_d_t.*
               CLOSE axct312_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xccw_d[l_ac].xccw001 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               LET g_xccw_d[l_ac].* = g_xccw_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               
            
               #add-point:單身修改前
{<point name="input.body.b_update" mark="Y"/>}
               #end add-point
         
               UPDATE xccw_t SET (xccwld,xccw003,xccw004,xccw005,xccw006,xccw001,xccw007,xccw008,xccw002, 
                   xccwsite,xccw010,xccw011,xccw015,xccw016,xccw017,xccw009,xccw020,xccw021,
                   xccw043,xccw046,xccw044,xccw045,xccw201,xccw282a,xccw282b,xccw282c,xccw282d,
                   xccw282e,xccw282f,xccw282g,xccw282h,xccw202,xccw202a,xccw202b,xccw202c,xccw202d,xccw202e,
                   xccw202f,xccw202g,xccw202h,xccw032,xccw033,xccw022,xccw023,xccw024,xccw025,xccw026,xccw027,xccw028, 
                   xccw029,xccw030,xccw031) = (g_xccw_m.xccwld,g_xccw_m.xccw003,g_xccw_m.xccw004,g_xccw_m.xccw005, 
                   g_xccw_m.xccw006,g_xccw_d[l_ac].xccw001,g_xccw_d[l_ac].xccw007,g_xccw_d[l_ac].xccw008, 
                   g_xccw_d[l_ac].xccw002,g_xccw_d[l_ac].xccwsite,g_xccw_d[l_ac].xccw010,g_xccw_d[l_ac].xccw011, 
                   g_xccw_d[l_ac].xccw015,g_xccw_d[l_ac].xccw016,g_xccw_d[l_ac].xccw017,g_xccw_d[l_ac].xccw009, 
                   g_xccw_d[l_ac].xccw020,g_xccw_d[l_ac].xccw021,g_xccw_d[l_ac].xccw043,g_xccw_d[l_ac].xccw046, 
                   g_xccw_d[l_ac].xccw044,g_xccw_d[l_ac].xccw045,g_xccw_d[l_ac].xccw201,g_xccw_d[l_ac].xccw282a, 
                   g_xccw_d[l_ac].xccw282b,g_xccw_d[l_ac].xccw282c,g_xccw_d[l_ac].xccw282d,g_xccw_d[l_ac].xccw282e, 
                   g_xccw_d[l_ac].xccw282f,g_xccw_d[l_ac].xccw282g,g_xccw_d[l_ac].xccw282h,g_xccw_d[l_ac].xccw202, 
                   g_xccw_d[l_ac].xccw202a,g_xccw_d[l_ac].xccw202b,g_xccw_d[l_ac].xccw202c,g_xccw_d[l_ac].xccw202d, 
                   g_xccw_d[l_ac].xccw202e,g_xccw_d[l_ac].xccw202f,g_xccw_d[l_ac].xccw202g,g_xccw_d[l_ac].xccw202h, 
                   g_xccw3_d[l_ac].xccw032,g_xccw3_d[l_ac].xccw033,g_xccw3_d[l_ac].xccw022,g_xccw3_d[l_ac].xccw023, 
                   g_xccw3_d[l_ac].xccw024,g_xccw3_d[l_ac].xccw025,g_xccw3_d[l_ac].xccw026,g_xccw3_d[l_ac].xccw027, 
                   g_xccw3_d[l_ac].xccw028,g_xccw3_d[l_ac].xccw029,g_xccw3_d[l_ac].xccw030,g_xccw3_d[l_ac].xccw031) 

                WHERE xccwent = g_enterprise AND xccwld = g_xccw_m.xccwld 
                 AND xccw003 = g_xccw_m.xccw003 
                 AND xccw004 = g_xccw_m.xccw004 
                 AND xccw005 = g_xccw_m.xccw005 
                 AND xccw006 = g_xccw_m.xccw006 
 
                 AND xccw001 = g_xccw_d_t.xccw001 #項次   
                 AND xccw002 = g_xccw_d_t.xccw002  
                 AND xccw007 = g_xccw_d_t.xccw007  
                 AND xccw008 = g_xccw_d_t.xccw008  
                 AND xccw009 = g_xccw_d_t.xccw009  
 
                 
               #add-point:單身修改中
{<point name="input.body.m_update"/>}
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xccw_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "xccw_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
 
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xccw_m.xccwld
               LET gs_keys_bak[1] = g_xccwld_t
               LET gs_keys[2] = g_xccw_m.xccw003
               LET gs_keys_bak[2] = g_xccw003_t
               LET gs_keys[3] = g_xccw_m.xccw004
               LET gs_keys_bak[3] = g_xccw004_t
               LET gs_keys[4] = g_xccw_m.xccw005
               LET gs_keys_bak[4] = g_xccw005_t
               LET gs_keys[5] = g_xccw_m.xccw006
               LET gs_keys_bak[5] = g_xccw006_t
               LET gs_keys[6] = g_xccw_d[g_detail_idx].xccw001
               LET gs_keys_bak[6] = g_xccw_d_t.xccw001
               LET gs_keys[7] = g_xccw_d[g_detail_idx].xccw002
               LET gs_keys_bak[7] = g_xccw_d_t.xccw002
               LET gs_keys[8] = g_xccw_d[g_detail_idx].xccw007
               LET gs_keys_bak[8] = g_xccw_d_t.xccw007
               LET gs_keys[9] = g_xccw_d[g_detail_idx].xccw008
               LET gs_keys_bak[9] = g_xccw_d_t.xccw008
               LET gs_keys[10] = g_xccw_d[g_detail_idx].xccw009
               LET gs_keys_bak[10] = g_xccw_d_t.xccw009
               CALL axct312_update_b('xccw_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_xccw_m),util.JSON.stringify(g_xccw_d_t)
                     LET g_log2 = util.JSON.stringify(g_xccw_m),util.JSON.stringify(g_xccw_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後
{<point name="input.body.a_update"/>}
               #end add-point
            END IF
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xccw_d.getLength() = 0 THEN
               NEXT FIELD xccw001
            END IF
            #add-point:input段after input 
{<point name="input.body.after_input"/>}
            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xccw_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xccw_d.getLength()+1
            
      END INPUT
 
      INPUT ARRAY g_xccw3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b, WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                   INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 

                   DELETE ROW = FALSE,
                   APPEND ROW = FALSE)
 
         #自訂單身ACTION
         
                 
         BEFORE INPUT
            
            CALL axct312_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN             
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前
{<point name="input.body3.before_input"/>}
            #end add-point
 
         BEFORE ROW 
            LET l_cmd = ''
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()                #returns the current row
            IF l_ac > g_rec_b THEN               #不可超過最後一筆
               CALL fgl_set_arr_curr(g_rec_b)   #moves to a specific row         
            END IF
           
            LET l_lock_sw = 'N'                  #DEFAULT
            LET l_n = ARR_COUNT()                #the number of rows containing  
            
            
            CALL s_transaction_begin()
            IF g_rec_b >= l_ac THEN
               LET l_cmd='u'
               CALL axct312_set_entry_b(l_cmd)
               #add-point:set_entry_b後
{<point name="input.body3.before_row.set_entry_b"/>}
               #end add-point
               CALL axct312_set_no_entry_b(l_cmd)
               LET g_xccw3_d_t.* = g_xccw3_d[l_ac].*   #BACKUP  #page1
               LET g_xccw3_d_o.* = g_xccw3_d[l_ac].*   #BACKUP  #page1
            END IF 
            
             
         BEFORE INSERT
            LET g_insert = 'Y' 
            NEXT FIELD xccw001
 
            INITIALIZE g_xccw3_d_t.* TO NULL
            INITIALIZE g_xccw3_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xccw3_d[l_ac].* TO NULL
            #公用欄位預設值
              
            #一般欄位預設值
            
            
            #add-point:modify段before備份
{<point name="input.body3.before_insert.before_bak"/>}
            #end add-point
            LET g_xccw3_d_t.* = g_xccw3_d[l_ac].*     #新輸入資料
            LET g_xccw3_d_o.* = g_xccw3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axct312_set_entry_b(l_cmd)
            #add-point:set_entry_b後
{<point name="input.body3.before_insert.set_entry_b"/>}
            #end add-point
            CALL axct312_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xccw_d[li_reproduce_target].* = g_xccw_d[li_reproduce].*
               LET g_xccw2_d[li_reproduce_target].* = g_xccw2_d[li_reproduce].*
               LET g_xccw3_d[li_reproduce_target].* = g_xccw3_d[li_reproduce].*
 
               LET g_xccw3_d[li_reproduce_target].xccw001 = NULL
               LET g_xccw3_d[li_reproduce_target].xccw002 = NULL
               LET g_xccw3_d[li_reproduce_target].xccw007 = NULL
               LET g_xccw3_d[li_reproduce_target].xccw008 = NULL
               LET g_xccw3_d[li_reproduce_target].xccw009 = NULL
            END IF
            
#            #add-point:modify段before insert
{<point name="input.body3.before_insert"/>}
#            #end add-point
#            
#         BEFORE DELETE                            #是否取消單身
#            IF l_cmd = 'a' THEN
#               LET l_cmd='d'
#            ELSE
#               IF NOT cl_ask_del_detail() THEN
#                  CANCEL DELETE
#               END IF
#               IF l_lock_sw = "Y" THEN
#                  INITIALIZE g_errparam TO NULL 
#                  LET g_errparam.extend = "" 
#                  LET g_errparam.code   =  -263 
#                  LET g_errparam.popup  = TRUE 
#                  CALL cl_err()
#                  CANCEL DELETE
#               END IF
#               IF axct312_before_delete() THEN 
#                  
#                  CALL s_transaction_end('Y','0')
#               ELSE 
#                  CALL s_transaction_end('N','0')
#                  CANCEL DELETE   
#               END IF 
#               CLOSE axct312_bcl
#               CALL s_transaction_end('Y','0') 
#               LET l_count = g_xccw3_d.getLength()
#            END IF
#            
#         AFTER DELETE 
#            IF l_cmd <> 'd' THEN
#               #add-point:單身AFTER DELETE 
{<point name="input.body3.after_delete"/>}
#               #end add-point
#                              CALL axct312_delete_b('xccw_t',gs_keys,"'3'")
#            END IF
#            #如果是最後一筆
#            IF l_ac = (g_xccw3_d.getLength() + 1) THEN
#               CALL FGL_SET_ARR_CURR(l_ac-1)
#            END IF
# 
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_xccw3_d[l_ac].* = g_xccw3_d_t.*
               CLOSE axct312_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xccw_d[l_ac].xccw001 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xccw3_d[l_ac].* = g_xccw3_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               
                
               #add-point:單身修改前
{<point name="modify.body3.b_update" mark="Y"/>}
#               #end add-point
#      
#               UPDATE xccw_t SET (xccwld,xccw003,xccw004,xccw005,xccw006,xccw001,xccw007,xccw008,xccw002, 
#                   xccwsite,xccw010,xccw011,xccw015,xccw016,xccw017,xccw009,xccw020,xccw021,xccw043, 
#                  xccw046,xccw044,xccw045,xccw201,xccw282a,xccw282b,xccw282c,xccw282d,xccw282e,xccw282f, 
#                  xccw282g,xccw282h,xccw202,xccw202a,xccw202b,xccw202c,xccw202d,xccw202e,xccw202f,xccw202g, 
#                  xccw202h,xccw032,xccw033,xccw022,xccw023,xccw024,xccw025,xccw026,xccw027,xccw028, 
#                  xccw029,xccw030,xccw031) = (g_xccw_m.xccwld,g_xccw_m.xccw003,g_xccw_m.xccw004,g_xccw_m.xccw005, 
#                  g_xccw_m.xccw006,g_xccw_d[l_ac].xccw001,g_xccw_d[l_ac].xccw007,g_xccw_d[l_ac].xccw008, 
#                  g_xccw_d[l_ac].xccw002,g_xccw_d[l_ac].xccwsite,g_xccw_d[l_ac].xccw010,g_xccw_d[l_ac].xccw011, 
#                  g_xccw_d[l_ac].xccw015,g_xccw_d[l_ac].xccw016,g_xccw_d[l_ac].xccw017,g_xccw_d[l_ac].xccw009, 
#                  g_xccw_d[l_ac].xccw020,g_xccw_d[l_ac].xccw021,g_xccw_d[l_ac].xccw043,g_xccw_d[l_ac].xccw046, 
#                  g_xccw_d[l_ac].xccw044,g_xccw_d[l_ac].xccw045,g_xccw_d[l_ac].xccw201,g_xccw_d[l_ac].xccw282a, 
#                  g_xccw_d[l_ac].xccw282b,g_xccw_d[l_ac].xccw282c,g_xccw_d[l_ac].xccw282d,g_xccw_d[l_ac].xccw282e, 
#                  g_xccw_d[l_ac].xccw282f,g_xccw_d[l_ac].xccw282g,g_xccw_d[l_ac].xccw282h,g_xccw_d[l_ac].xccw202, 
#                  g_xccw_d[l_ac].xccw202a,g_xccw_d[l_ac].xccw202b,g_xccw_d[l_ac].xccw202c,g_xccw_d[l_ac].xccw202d, 
#                  g_xccw_d[l_ac].xccw202e,g_xccw_d[l_ac].xccw202f,g_xccw_d[l_ac].xccw202g,g_xccw_d[l_ac].xccw202h, 
#                  g_xccw3_d[l_ac].xccw032,g_xccw3_d[l_ac].xccw033,g_xccw3_d[l_ac].xccw022,g_xccw3_d[l_ac].xccw023, 
#                  g_xccw3_d[l_ac].xccw024,g_xccw3_d[l_ac].xccw025,g_xccw3_d[l_ac].xccw026,g_xccw3_d[l_ac].xccw027, 
#                  g_xccw3_d[l_ac].xccw028,g_xccw3_d[l_ac].xccw029,g_xccw3_d[l_ac].xccw030,g_xccw3_d[l_ac].xccw031)  
#                  #自訂欄位頁簽
#               WHERE xccwent = g_enterprise AND xccwld = g_xccw_m.xccwld
#                AND xccw003 = g_xccw_m.xccw003
#                AND xccw004 = g_xccw_m.xccw004
#                AND xccw005 = g_xccw_m.xccw005
#                AND xccw006 = g_xccw_m.xccw006
#                AND xccw001 = g_xccw3_d_t.xccw001 #項次 
#                AND xccw002 = g_xccw3_d_t.xccw002
#                AND xccw007 = g_xccw3_d_t.xccw007
#                AND xccw008 = g_xccw3_d_t.xccw008
#                AND xccw009 = g_xccw3_d_t.xccw009
#              #add-point:單身修改中
{<point name="modify.body3.m_update"/>}
#              #end add-point
              CASE
                 WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                    INITIALIZE g_errparam TO NULL 
                    LET g_errparam.extend = "xccw_t" 
                    LET g_errparam.code   = "std-00009" 
                    LET g_errparam.popup  = TRUE 
                    CALL cl_err()
                    CALL s_transaction_end('N','0')
                 WHEN SQLCA.sqlcode #其他錯誤
                    INITIALIZE g_errparam TO NULL 
                    LET g_errparam.extend = "xccw_t" 
                    LET g_errparam.code   = SQLCA.sqlcode 
                    LET g_errparam.popup  = TRUE 
                    CALL cl_err()
                    CALL s_transaction_end('N','0')
                 OTHERWISE
#                                   INITIALIZE gs_keys TO NULL 
#              LET gs_keys[1] = g_xccw_m.xccwld
#              LET gs_keys_bak[1] = g_xccwld_t
#              LET gs_keys[2] = g_xccw_m.xccw003
#              LET gs_keys_bak[2] = g_xccw003_t
#              LET gs_keys[3] = g_xccw_m.xccw004
#              LET gs_keys_bak[3] = g_xccw004_t
#              LET gs_keys[4] = g_xccw_m.xccw005
#              LET gs_keys_bak[4] = g_xccw005_t
#              LET gs_keys[5] = g_xccw_m.xccw006
#              LET gs_keys_bak[5] = g_xccw006_t
#              LET gs_keys[6] = g_xccw3_d[g_detail_idx].xccw001
#              LET gs_keys_bak[6] = g_xccw3_d_t.xccw001
#              LET gs_keys[7] = g_xccw3_d[g_detail_idx].xccw002
#              LET gs_keys_bak[7] = g_xccw3_d_t.xccw002
#              LET gs_keys[8] = g_xccw3_d[g_detail_idx].xccw007
#              LET gs_keys_bak[8] = g_xccw3_d_t.xccw007
#              LET gs_keys[9] = g_xccw3_d[g_detail_idx].xccw008
#              LET gs_keys_bak[9] = g_xccw3_d_t.xccw008
#              LET gs_keys[10] = g_xccw3_d[g_detail_idx].xccw009
#              LET gs_keys_bak[10] = g_xccw3_d_t.xccw009
#              CALL axct312_update_b('xccw_t',gs_keys,gs_keys_bak,"'3'")
#                    #多語言處理
#                    
#                    LET g_log1 = util.JSON.stringify(g_xccw_m),util.JSON.stringify(g_xccw3_d_t)
#                    LET g_log2 = util.JSON.stringify(g_xccw_m),util.JSON.stringify(g_xccw3_d[l_ac])
#                    IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
#                       CALL s_transaction_end('N','0')
#                    END IF
                 CALL s_transaction_end('Y','0')
              END CASE
              
#              #add-point:單身修改後
{<point name="modify.body3.a_update"/>}
#              #end add-point
           END IF
#        
#                 #此段落由子樣板a01產生
        BEFORE FIELD xccw032
           #add-point:BEFORE FIELD xccw032
{<point name="input.b.page3.xccw032" />}
           #END add-point

        #此段落由子樣板a02產生
        AFTER FIELD xccw032
           
           #add-point:AFTER FIELD xccw032
{<point name="input.a.page3.xccw032" />}
           #END add-point
           

        #此段落由子樣板a04產生
        ON CHANGE xccw032
           #add-point:ON CHANGE xccw032
{<point name="input.g.page3.xccw032" />}
           #END add-point

        #此段落由子樣板a01產生
        BEFORE FIELD xccw033
           #add-point:BEFORE FIELD xccw033
{<point name="input.b.page3.xccw033" />}
           #END add-point

        #此段落由子樣板a02產生
        AFTER FIELD xccw033
#           
           #add-point:AFTER FIELD xccw033
{<point name="input.a.page3.xccw033" />}
           #END add-point
           

        #此段落由子樣板a04產生
        ON CHANGE xccw033
           #add-point:ON CHANGE xccw033
{<point name="input.g.page3.xccw033" />}
           #END add-point

        #此段落由子樣板a01產生
        BEFORE FIELD xccw022
           #add-point:BEFORE FIELD xccw022
{<point name="input.b.page3.xccw022" />}
           #END add-point

        #此段落由子樣板a02產生
        AFTER FIELD xccw022
#           
           #add-point:AFTER FIELD xccw022
{<point name="input.a.page3.xccw022" />}
           #END add-point
           

        #此段落由子樣板a04產生
        ON CHANGE xccw022
           #add-point:ON CHANGE xccw022
{<point name="input.g.page3.xccw022" />}
           #END add-point

        #此段落由子樣板a01產生
        BEFORE FIELD xccw023
           #add-point:BEFORE FIELD xccw023
{<point name="input.b.page3.xccw023" />}
           #END add-point

        #此段落由子樣板a02產生
        AFTER FIELD xccw023
           
           #add-point:AFTER FIELD xccw023
{<point name="input.a.page3.xccw023" />}
           #END add-point
           

        #此段落由子樣板a04產生
        ON CHANGE xccw023
           #add-point:ON CHANGE xccw023
{<point name="input.g.page3.xccw023" />}
           #END add-point

        #此段落由子樣板a01產生
        BEFORE FIELD xccw024
           #add-point:BEFORE FIELD xccw024
{<point name="input.b.page3.xccw024" />}
           #END add-point

        #此段落由子樣板a02產生
        AFTER FIELD xccw024
#           
           #add-point:AFTER FIELD xccw024
{<point name="input.a.page3.xccw024" />}
           #END add-point
           

        #此段落由子樣板a04產生
        ON CHANGE xccw024
           #add-point:ON CHANGE xccw024
{<point name="input.g.page3.xccw024" />}
           #END add-point

        #此段落由子樣板a01產生
        BEFORE FIELD xccw025
           #add-point:BEFORE FIELD xccw025
{<point name="input.b.page3.xccw025" />}
           #END add-point

        #此段落由子樣板a02產生
        AFTER FIELD xccw025
#           
           #add-point:AFTER FIELD xccw025
{<point name="input.a.page3.xccw025" />}
           #END add-point
           

        #此段落由子樣板a04產生
        ON CHANGE xccw025
           #add-point:ON CHANGE xccw025
{<point name="input.g.page3.xccw025" />}
           #END add-point

        #此段落由子樣板a01產生
        BEFORE FIELD xccw026
           #add-point:BEFORE FIELD xccw026
{<point name="input.b.page3.xccw026" />}
           #END add-point

        #此段落由子樣板a02產生
        AFTER FIELD xccw026
           
           #add-point:AFTER FIELD xccw026
{<point name="input.a.page3.xccw026" />}
           #END add-point
           

        #此段落由子樣板a04產生
        ON CHANGE xccw026
           #add-point:ON CHANGE xccw026
{<point name="input.g.page3.xccw026" />}
           #END add-point

        #此段落由子樣板a01產生
        BEFORE FIELD xccw027
           #add-point:BEFORE FIELD xccw027
{<point name="input.b.page3.xccw027" />}
           #END add-point

        #此段落由子樣板a02產生
        AFTER FIELD xccw027
           
           #add-point:AFTER FIELD xccw027
{<point name="input.a.page3.xccw027" />}
           #END add-point
           

        #此段落由子樣板a04產生
        ON CHANGE xccw027
           #add-point:ON CHANGE xccw027
{<point name="input.g.page3.xccw027" />}
           #END add-point

        #此段落由子樣板a01產生
        BEFORE FIELD xccw028
           #add-point:BEFORE FIELD xccw028
{<point name="input.b.page3.xccw028" />}
           #END add-point

        #此段落由子樣板a02產生
        AFTER FIELD xccw028
           
           #add-point:AFTER FIELD xccw028
{<point name="input.a.page3.xccw028" />}
           #END add-point
           

        #此段落由子樣板a04產生
        ON CHANGE xccw028
           #add-point:ON CHANGE xccw028
{<point name="input.g.page3.xccw028" />}
           #END add-point

        #此段落由子樣板a01產生
        BEFORE FIELD xccw029
           #add-point:BEFORE FIELD xccw029
{<point name="input.b.page3.xccw029" />}
           #END add-point

        #此段落由子樣板a02產生
        AFTER FIELD xccw029
           
           #add-point:AFTER FIELD xccw029
{<point name="input.a.page3.xccw029" />}
           #END add-point
           

        #此段落由子樣板a04產生
        ON CHANGE xccw029
           #add-point:ON CHANGE xccw029
{<point name="input.g.page3.xccw029" />}
           #END add-point

        #此段落由子樣板a01產生
        BEFORE FIELD xccw030
           #add-point:BEFORE FIELD xccw030
{<point name="input.b.page3.xccw030" />}
           #END add-point

        #此段落由子樣板a02產生
        AFTER FIELD xccw030
           
           #add-point:AFTER FIELD xccw030
{<point name="input.a.page3.xccw030" />}
           #END add-point
           

        #此段落由子樣板a04產生
        ON CHANGE xccw030
           #add-point:ON CHANGE xccw030
{<point name="input.g.page3.xccw030" />}
           #END add-point

        #此段落由子樣板a01產生
        BEFORE FIELD xccw031
           #add-point:BEFORE FIELD xccw031
{<point name="input.b.page3.xccw031" />}
           #END add-point

        #此段落由子樣板a02產生
        AFTER FIELD xccw031
           
           #add-point:AFTER FIELD xccw031
{<point name="input.a.page3.xccw031" />}
           #END add-point
           

        #此段落由子樣板a04產生
        ON CHANGE xccw031
           #add-point:ON CHANGE xccw031
{<point name="input.g.page3.xccw031" />}
           #END add-point


                 #Ctrlp:input.c.page3.xccw032
        ON ACTION controlp INFIELD xccw032
           #add-point:ON ACTION controlp INFIELD xccw032
{<point name="input.c.page3.xccw032" />}
           #END add-point

        #Ctrlp:input.c.page3.xccw033
        ON ACTION controlp INFIELD xccw033
           #add-point:ON ACTION controlp INFIELD xccw033
{<point name="input.c.page3.xccw033" />}
           #END add-point

        #Ctrlp:input.c.page3.xccw022
        ON ACTION controlp INFIELD xccw022
           #add-point:ON ACTION controlp INFIELD xccw022
{<point name="input.c.page3.xccw022" />}
           #END add-point

        #Ctrlp:input.c.page3.xccw023
        ON ACTION controlp INFIELD xccw023
           #add-point:ON ACTION controlp INFIELD xccw023
{<point name="input.c.page3.xccw023" />}
           #END add-point

        #Ctrlp:input.c.page3.xccw024
        ON ACTION controlp INFIELD xccw024
           #add-point:ON ACTION controlp INFIELD xccw024
{<point name="input.c.page3.xccw024" />}
           #END add-point

        #Ctrlp:input.c.page3.xccw025
        ON ACTION controlp INFIELD xccw025
           #add-point:ON ACTION controlp INFIELD xccw025
{<point name="input.c.page3.xccw025" />}
           #END add-point

        #Ctrlp:input.c.page3.xccw026
        ON ACTION controlp INFIELD xccw026
           #add-point:ON ACTION controlp INFIELD xccw026
{<point name="input.c.page3.xccw026" />}
           #END add-point

        #Ctrlp:input.c.page3.xccw027
        ON ACTION controlp INFIELD xccw027
           #add-point:ON ACTION controlp INFIELD xccw027
{<point name="input.c.page3.xccw027" />}
           #END add-point

        #Ctrlp:input.c.page3.xccw028
        ON ACTION controlp INFIELD xccw028
           #add-point:ON ACTION controlp INFIELD xccw028
{<point name="input.c.page3.xccw028" />}
           #END add-point

        #Ctrlp:input.c.page3.xccw029
        ON ACTION controlp INFIELD xccw029
           #add-point:ON ACTION controlp INFIELD xccw029
{<point name="input.c.page3.xccw029" />}
           #END add-point

        #Ctrlp:input.c.page3.xccw030
        ON ACTION controlp INFIELD xccw030
           #add-point:ON ACTION controlp INFIELD xccw030
{<point name="input.c.page3.xccw030" />}
           #END add-point

        #Ctrlp:input.c.page3.xccw031
        ON ACTION controlp INFIELD xccw031
           #add-point:ON ACTION controlp INFIELD xccw031
{<point name="input.c.page3.xccw031" />}
           #END add-point



        AFTER ROW
           LET l_ac = ARR_CURR()
           LET l_ac_t = l_ac
           IF INT_FLAG THEN
              INITIALIZE g_errparam TO NULL 
              LET g_errparam.extend = '' 
              LET g_errparam.code   = 9001 
              LET g_errparam.popup  = FALSE 
              CALL cl_err()
              LET INT_FLAG = 0
              IF l_cmd = 'u' THEN
                 LET g_xccw3_d[l_ac].* = g_xccw3_d_t.*
              END IF
              CLOSE axct312_bcl
              CALL s_transaction_end('N','0')
              EXIT DIALOG 
           END IF

           CLOSE axct312_bcl
           CALL s_transaction_end('Y','0')

        AFTER INPUT
           #add-point:input段after input 
{<point name="input.body3.after_input"/>}
           #end add-point    

        ON ACTION controlo
           CALL FGL_SET_ARR_CURR(g_xccw3_d.getLength()+1)
           LET lb_reproduce = TRUE
           LET li_reproduce = l_ac
           LET li_reproduce_target = g_xccw3_d.getLength()+1

     END INPUT
 
      
      DISPLAY ARRAY g_xccw2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
      
         BEFORE ROW
            CALL axct312_b_fill(g_wc2) 
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL axct312_ui_detailshow()
        
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)      
         
         #add-point:page2自定義行為
{<point name="input.body2.action"/>}
         #end add-point
         
      END DISPLAY
 
      
 
      
      #add-point:input段more_input
{<point name="input.more_inputarray"/>}
      #end add-point    
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()    
         #add-point:input段before_dialog
{<point name="input.before_dialog"/>}
         #end add-point 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xccwld
        ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xccw001
               WHEN "s_detail2"
                  NEXT FIELD xccw001_2
               WHEN "s_detail3"
                  NEXT FIELD xccw001_3
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #add-point:input段after_input
{<point name="input.after_input"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="axct312.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axct312_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL axct312_b_fill(g_wc2) #單身填充
      CALL axct312_b_fill2('0') #單身填充
   END IF
   
   
 
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL axct312_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   DISPLAY BY NAME g_xccw_m.xccwld,g_xccw_m.xccwld_desc,g_xccw_m.xccwcomp,g_xccw_m.xccwcomp_desc,g_xccw_m.xccw003, 
       g_xccw_m.xccw003_desc,g_xccw_m.xccw012,g_xccw_m.xccw006,g_xccw_m.xccw013,g_xccw_m.xccw004,g_xccw_m.xccw005, 
       g_xccw_m.xcat003
   CALL axct312_b_fill(g_wc2_table1)                 #單身
   CALL axct312_b_fill2('0') #單身填充
 
   CALL axct312_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point   
   
END FUNCTION

{</section>}

{<section id="axct312.ref_show" >}
#+ 帶出reference資料
PRIVATE FUNCTION axct312_ref_show()
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define
   {<point name="ref_show.define"/>}
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference
   {<point name="ref_show.head.reference"/>}
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xccw_d.getLength()
      #add-point:ref_show段d_reference
      {<point name="ref_show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xccw2_d.getLength()
      #add-point:ref_show段d2_reference
      {<point name="ref_show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xccw3_d.getLength()
      #add-point:ref_show段d3_reference
      {<point name="ref_show.body3.reference"/>}
      #end add-point
   END FOR
 
   
   #add-point:ref_show段自訂
   {<point name="ref_show.other_reference"/>}
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION

{</section>}

{<section id="axct312.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axct312_reproduce()
   DEFINE l_newno     LIKE xccw_t.xccwld 
   DEFINE l_oldno     LIKE xccw_t.xccwld 
   DEFINE l_newno02     LIKE xccw_t.xccw003 
   DEFINE l_oldno02     LIKE xccw_t.xccw003 
   DEFINE l_newno03     LIKE xccw_t.xccw004 
   DEFINE l_oldno03     LIKE xccw_t.xccw004 
   DEFINE l_newno04     LIKE xccw_t.xccw005 
   DEFINE l_oldno04     LIKE xccw_t.xccw005 
   DEFINE l_newno05     LIKE xccw_t.xccw006 
   DEFINE l_oldno05     LIKE xccw_t.xccw006 
 
   DEFINE l_master    RECORD LIKE xccw_t.*
   DEFINE l_detail    RECORD LIKE xccw_t.*
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_xccw_m.xccwld IS NULL
      OR g_xccw_m.xccw003 IS NULL
      OR g_xccw_m.xccw004 IS NULL
      OR g_xccw_m.xccw005 IS NULL
      OR g_xccw_m.xccw006 IS NULL
 
      THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
   
   LET g_xccwld_t = g_xccw_m.xccwld
   LET g_xccw003_t = g_xccw_m.xccw003
   LET g_xccw004_t = g_xccw_m.xccw004
   LET g_xccw005_t = g_xccw_m.xccw005
   LET g_xccw006_t = g_xccw_m.xccw006
 
   
   LET g_xccw_m.xccwld = ""
   LET g_xccw_m.xccw003 = ""
   LET g_xccw_m.xccw004 = ""
   LET g_xccw_m.xccw005 = ""
   LET g_xccw_m.xccw006 = ""
 
    
   CALL axct312_set_entry('a')
   CALL axct312_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL axct312_input("r")
   
      LET g_xccw_m.xccwld_desc = ''
   DISPLAY BY NAME g_xccw_m.xccwld_desc
   LET g_xccw_m.xccw003_desc = ''
   DISPLAY BY NAME g_xccw_m.xccw003_desc
 
    
   IF INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      INITIALIZE g_xccw_m.* TO NULL
      INITIALIZE g_xccw_d TO NULL
      INITIALIZE g_xccw2_d TO NULL
      INITIALIZE g_xccw3_d TO NULL
 
      CALL axct312_show()
      LET INT_FLAG = 0
      RETURN
   END IF
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_xccwld_t = g_xccw_m.xccwld
   LET g_xccw003_t = g_xccw_m.xccw003
   LET g_xccw004_t = g_xccw_m.xccw004
   LET g_xccw005_t = g_xccw_m.xccw005
   LET g_xccw006_t = g_xccw_m.xccw006
 
   
   LET g_current_idx = g_browser.getLength() + 1
   LET g_browser[g_current_idx].b_xccwld = g_xccw_m.xccwld
   LET g_browser[g_current_idx].b_xccw003 = g_xccw_m.xccw003
   LET g_browser[g_current_idx].b_xccw004 = g_xccw_m.xccw004
   LET g_browser[g_current_idx].b_xccw005 = g_xccw_m.xccw005
   LET g_browser[g_current_idx].b_xccw006 = g_xccw_m.xccw006
 
   
   LET g_detail_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
   
   #LET g_wc = "(", g_wc,  
   #           " OR (",
   #           " xccwld = '", g_xccw_m.xccwld CLIPPED, "' "
   #           ," AND xccw003 = '", g_xccw_m.xccw003 CLIPPED, "' "
   #           ," AND xccw004 = '", g_xccw_m.xccw004 CLIPPED, "' "
   #           ," AND xccw005 = '", g_xccw_m.xccw005 CLIPPED, "' "
   #           ," AND xccw006 = '", g_xccw_m.xccw006 CLIPPED, "' "
 
   #           , ")) "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="axct312.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axct312_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xccw_t.*
 
 
   #add-point:delete段define
{<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axct312_detail
   
   #add-point:單身複製前1
{<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axct312_detail AS ",
                "SELECT * FROM xccw_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axct312_detail SELECT * FROM xccw_t 
                                         WHERE xccwent = g_enterprise AND xccwld = g_xccwld_t
                                         AND xccw003 = g_xccw003_t
                                         AND xccw004 = g_xccw004_t
                                         AND xccw005 = g_xccw005_t
                                         AND xccw006 = g_xccw006_t
 
   
   #將key修正為調整後   
   UPDATE axct312_detail 
      #更新key欄位
      SET xccwld = g_xccw_m.xccwld
          , xccw003 = g_xccw_m.xccw003
          , xccw004 = g_xccw_m.xccw004
          , xccw005 = g_xccw_m.xccw005
          , xccw006 = g_xccw_m.xccw006
 
      #更新共用欄位
      
                                       
   #將資料塞回原table   
   INSERT INTO xccw_t SELECT * FROM axct312_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      RETURN
   END IF
   
   #add-point:單身複製中1
{<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axct312_detail
   
   #add-point:單身複製後1
{<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
      #此段落由子樣板a38產生
   #單身多語言複製
   DROP TABLE axct312_detail_lang
   
   #add-point:單身複製前1
{<point name="detail_reproduce.body.lang0.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axct312_detail_lang AS ",
                "SELECT * FROM xcck_t "
   PREPARE repro_xcck_t FROM ls_sql
   EXECUTE repro_xcck_t
   FREE repro_xcck_t
                
   #將符合條件的資料丟入TEMP TABLE
 #  INSERT INTO axct312_detail_lang SELECT * FROM xcck_t 
 #                                            WHERE xcckent = g_enterprise AND  = g_xccwld_t
 #                                            AND  = g_xccw003_t                                             AND  = g_xccw004_t                                             AND  = g_xccw005_t                                             AND  = g_xccw006_t
 #  
 #  #將key修正為調整後   
 #  UPDATE axct312_detail_lang 
 #     #更新key欄位
 #     SET  = g_xccw_m.xccwld
 #         ,  = g_xccw_m.xccw003          ,  = g_xccw_m.xccw004          ,  = g_xccw_m.xccw005          ,  = g_xccw_m.xccw006
  
   #將資料塞回原table   
   INSERT INTO xcck_t SELECT * FROM axct312_detail_lang
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      RETURN
   END IF
   
   #add-point:單身複製中1
{<point name="detail_reproduce.lang0.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axct312_detail_lang
   
   #add-point:單身複製後1
{<point name="detail_reproduce.lang0.table1.a_insert"/>}
   #end add-point
 
 
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xccwld_t = g_xccw_m.xccwld
   LET g_xccw003_t = g_xccw_m.xccw003
   LET g_xccw004_t = g_xccw_m.xccw004
   LET g_xccw005_t = g_xccw_m.xccw005
   LET g_xccw006_t = g_xccw_m.xccw006
 
   
   DROP TABLE axct312_detail
   
END FUNCTION

{</section>}

{<section id="axct312.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axct312_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_xccw_m.xccwld IS NULL
   OR g_xccw_m.xccw003 IS NULL
   OR g_xccw_m.xccw004 IS NULL
   OR g_xccw_m.xccw005 IS NULL
   OR g_xccw_m.xccw006 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
 
   EXECUTE axct312_master_referesh USING g_xccw_m.xccwld,g_xccw_m.xccw003,g_xccw_m.xccw004,g_xccw_m.xccw005, 
       g_xccw_m.xccw006 INTO g_xccw_m.xccwld,g_xccw_m.xccwcomp,g_xccw_m.xccw003,g_xccw_m.xccw012,g_xccw_m.xccw006, 
       g_xccw_m.xccw013,g_xccw_m.xccw004,g_xccw_m.xccw005,g_xccw_m.xccwld_desc,g_xccw_m.xccwcomp_desc, 
       g_xccw_m.xccw003_desc
   
   CALL axct312_show()
   
   CALL s_transaction_begin()
   
   
 
   OPEN axct312_cl USING g_enterprise,g_xccw_m.xccwld
                                                       ,g_xccw_m.xccw003
                                                       ,g_xccw_m.xccw004
                                                       ,g_xccw_m.xccw005
                                                       ,g_xccw_m.xccw006
 
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axct312_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      CLOSE axct312_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH axct312_cl INTO g_xccw_m.xccwld,g_xccw_m.xccwld_desc,g_xccw_m.xccwcomp,g_xccw_m.xccwcomp_desc, 
       g_xccw_m.xccw003,g_xccw_m.xccw003_desc,g_xccw_m.xccw012,g_xccw_m.xccw006,g_xccw_m.xccw013,g_xccw_m.xccw004, 
       g_xccw_m.xccw005,g_xccw_m.xcat003
   
   #若資料已被他人LOCK
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_xccw_m.xccwld 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL axct312_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM xccw_t WHERE xccwent = g_enterprise AND xccwld = g_xccw_m.xccwld
                                                               AND xccw003 = g_xccw_m.xccw003
                                                               AND xccw004 = g_xccw_m.xccw004
                                                               AND xccw005 = g_xccw_m.xccw005
                                                               AND xccw006 = g_xccw_m.xccw006
 
                                                               
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xccw_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
      END IF
 
      
  
      #add-point:單身刪除後 
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
 
      
      CLEAR FORM
      CALL g_xccw_d.clear() 
      CALL g_xccw2_d.clear()       
      CALL g_xccw3_d.clear()       
 
     
      CALL axct312_ui_browser_refresh()  
      CALL axct312_ui_headershow()  
      CALL axct312_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axct312_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         LET g_wc2 = " 1=1"
         CALL axct312_browser_fill("F")
      END IF
       
   END IF
 
   CLOSE axct312_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_xccw_m.xccwld,'D')
    
END FUNCTION

{</section>}

{<section id="axct312.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axct312_b_fill(p_wc2)
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
{<point name="b_fill.define"/>}
   #end add-point     
 
   #先清空單身變數內容
   CALL g_xccw_d.clear()
   CALL g_xccw2_d.clear()
   CALL g_xccw3_d.clear()
 
 
   #add-point:b_fill段sql_before
{<point name="b_fill.sql_before"/>}
   #end add-point
   
   LET g_sql = "SELECT  UNIQUE xccw001,xccw007,xccw008,xccw002,xccwsite,xccw010,xccw011,xccw015,xccw016, 
       xccw017,xccw009,xccw020,xccw021,xccw043,xccw046,xccw044,xccw045,xccw201,xccw282a,xccw282b,xccw282c, 
       xccw282d,xccw282e,xccw282f,xccw282g,xccw282h,xccw282,xccw202,xccw202a,xccw202b,xccw202c,xccw202d, 
       xccw202e,xccw202f,xccw202g,xccw202h,xccw001,xccw007,xccw008,xccw002,xccw010,xccw011,xccw001,xccw007, 
       xccw008,xccw002,xccwsite,xccw010,xccw011,xccw021,xccw032,xccw033,xccw022,xccw023,xccw024,xccw025, 
       xccw026,xccw027,xccw028,xccw029,xccw030,xccw031,xccw201,xccw282,xccw202,xccw009 FROM xccw_t", 
          
             # " LEFT JOIN xcck_t ON xcckent = '"||g_enterprise||"' AND xccwld = xccw003 = xccw004 = xccw005 = xccw006 = xccw001 = xccw002 = xccw007 = xccw008 = xccw009 =",
               
               
               " WHERE xccwent= ? AND xccwld=? AND xccw003=? AND xccw004=? AND xccw005=? AND xccw006=?" 
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("xccw_t")
   END IF
   
   #add-point:b_fill段sql_after
{<point name="b_fill.sql_after"/>}
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axct312_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY xccw_t.xccw001,xccw_t.xccw002,xccw_t.xccw007,xccw_t.xccw008,xccw_t.xccw009"
      
      #add-point:b_fill段fill_before
{<point name="b_fill.fill_before"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE axct312_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR axct312_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xccw_m.xccwld,g_xccw_m.xccw003,g_xccw_m.xccw004,g_xccw_m.xccw005,g_xccw_m.xccw006
                                               
      FOREACH b_fill_cs INTO g_xccw_d[l_ac].xccw001,g_xccw_d[l_ac].xccw007,g_xccw_d[l_ac].xccw008,g_xccw_d[l_ac].xccw002, 
          g_xccw_d[l_ac].xccwsite,g_xccw_d[l_ac].xccw010,g_xccw_d[l_ac].xccw011,g_xccw_d[l_ac].xccw015, 
          g_xccw_d[l_ac].xccw016,g_xccw_d[l_ac].xccw017,g_xccw_d[l_ac].xccw009,g_xccw_d[l_ac].xccw020, 
          g_xccw_d[l_ac].xccw021,g_xccw_d[l_ac].xccw043,g_xccw_d[l_ac].xccw046,g_xccw_d[l_ac].xccw044, 
          g_xccw_d[l_ac].xccw045,g_xccw_d[l_ac].xccw201,g_xccw_d[l_ac].xccw282a,g_xccw_d[l_ac].xccw282b, 
          g_xccw_d[l_ac].xccw282c,g_xccw_d[l_ac].xccw282d,g_xccw_d[l_ac].xccw282e,g_xccw_d[l_ac].xccw282f, 
          g_xccw_d[l_ac].xccw282g,g_xccw_d[l_ac].xccw282h,g_xccw_d[l_ac].xccw282,g_xccw_d[l_ac].xccw202, 
          g_xccw_d[l_ac].xccw202a,g_xccw_d[l_ac].xccw202b,g_xccw_d[l_ac].xccw202c,g_xccw_d[l_ac].xccw202d, 
          g_xccw_d[l_ac].xccw202e,g_xccw_d[l_ac].xccw202f,g_xccw_d[l_ac].xccw202g,g_xccw_d[l_ac].xccw202h, 
          g_xccw2_d[l_ac].xccw001,g_xccw2_d[l_ac].xccw007,g_xccw2_d[l_ac].xccw008,g_xccw2_d[l_ac].xccw002, 
          g_xccw2_d[l_ac].xccw010,g_xccw2_d[l_ac].xccw011,g_xccw3_d[l_ac].xccw001,g_xccw3_d[l_ac].xccw007, 
          g_xccw3_d[l_ac].xccw008,g_xccw3_d[l_ac].xccw002,g_xccw3_d[l_ac].xccwsite,g_xccw3_d[l_ac].xccw010, 
          g_xccw3_d[l_ac].xccw011,g_xccw3_d[l_ac].xccw021,g_xccw3_d[l_ac].xccw032,g_xccw3_d[l_ac].xccw033, 
          g_xccw3_d[l_ac].xccw022,g_xccw3_d[l_ac].xccw023,g_xccw3_d[l_ac].xccw024,g_xccw3_d[l_ac].xccw025, 
          g_xccw3_d[l_ac].xccw026,g_xccw3_d[l_ac].xccw027,g_xccw3_d[l_ac].xccw028,g_xccw3_d[l_ac].xccw029, 
          g_xccw3_d[l_ac].xccw030,g_xccw3_d[l_ac].xccw031,g_xccw3_d[l_ac].xccw201,g_xccw3_d[l_ac].xccw282, 
          g_xccw3_d[l_ac].xccw202,g_xccw3_d[l_ac].xccw009
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充
{<point name="b_fill.fill"/>}
         #end add-point
      
         #帶出公用欄位reference值
         
         
         
         
 
        
         #add-point:單身資料抓取
{<point name="bfill.foreach"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF 
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         
      END FOREACH
 
            CALL g_xccw_d.deleteElement(g_xccw_d.getLength())
      CALL g_xccw2_d.deleteElement(g_xccw2_d.getLength())
      CALL g_xccw3_d.deleteElement(g_xccw3_d.getLength())
 
      
   END IF
   
   #add-point:b_fill段more
{<point name="b_fill.more"/>}
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE axct312_pb   
   
END FUNCTION

{</section>}

{<section id="axct312.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axct312_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION

{</section>}

{<section id="axct312.before_delete" >}
#+ 單身db資料刪除
PRIVATE FUNCTION axct312_before_delete()
   #add-point:before_delete段define
   {<point name="before_delete.define"/>}
   #end add-point 
   
   #add-point:單筆刪除前
   {<point name="delete.body.b_single_delete" mark="Y"/>}
   #end add-point
   
   DELETE FROM xccw_t
    WHERE xccwent = g_enterprise AND xccwld = g_xccw_m.xccwld AND
                              xccw003 = g_xccw_m.xccw003 AND
                              xccw004 = g_xccw_m.xccw004 AND
                              xccw005 = g_xccw_m.xccw005 AND
                              xccw006 = g_xccw_m.xccw006 AND
 
          xccw001 = g_xccw_d_t.xccw001
      AND xccw002 = g_xccw_d_t.xccw002
      AND xccw007 = g_xccw_d_t.xccw007
      AND xccw008 = g_xccw_d_t.xccw008
      AND xccw009 = g_xccw_d_t.xccw009
 
      
   #add-point:單筆刪除中
   {<point name="delete.body.m_single_delete"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xccw_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後
   {<point name="delete.body.a_single_delete"/>}
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION

{</section>}

{<section id="axct312.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axct312_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
 
   
END FUNCTION

{</section>}

{<section id="axct312.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axct312_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
 
   
END FUNCTION

{</section>}

{<section id="axct312.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axct312_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
 
   
END FUNCTION

{</section>}

{<section id="axct312.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axct312_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL axct312_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="axct312.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axct312_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
 
 
END FUNCTION

{</section>}

{<section id="axct312.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axct312_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xccwld,xccw003,xccw004,xccw005,xccw006",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="axct312.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axct312_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xccwld,xccw003,xccw004,xccw005,xccw006",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="axct312.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axct312_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="axct312.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axct312_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b段"/>}
   #end add-point 
   
END FUNCTION

{</section>}

{<section id="axct312.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axct312_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xccwld = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xccw003 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xccw004 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " xccw005 = '", g_argv[04], "' AND "
   END IF
   IF NOT cl_null(g_argv[05]) THEN
      LET ls_wc = ls_wc, " xccw006 = '", g_argv[05], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="axct312.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axct312_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   
   #add-point:fill_chk段other
   {<point name="fill_chk.other"/>}
   #end add-point
   
   RETURN FALSE
 
END FUNCTION

{</section>}

{<section id="axct312.modify_detail_chk" >}
#+ 單身輸入判定
PRIVATE FUNCTION axct312_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "xccw001"
      WHEN "s_detail2"
         LET ls_return = "xccw001_2"
      WHEN "s_detail3"
         LET ls_return = "xccw001_3"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION

{</section>}

{<section id="axct312.state_change" >}
    

{</section>}

{<section id="axct312.set_pk_array" >}
   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION axct312_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xccw_m.xccwld
   LET g_pk_array[1].column = 'xccwld'
   LET g_pk_array[2].values = g_xccw_m.xccw003
   LET g_pk_array[2].column = 'xccw003'
   LET g_pk_array[3].values = g_xccw_m.xccw004
   LET g_pk_array[3].column = 'xccw004'
   LET g_pk_array[4].values = g_xccw_m.xccw005
   LET g_pk_array[4].column = 'xccw005'
   LET g_pk_array[5].values = g_xccw_m.xccw006
   LET g_pk_array[5].column = 'xccw006'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 

{</section>}

{<section id="axct312.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

