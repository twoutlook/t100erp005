#該程式未解開Section, 採用最新樣板產出!
{<section id="axcq703_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:1(2015-05-07 11:40:27), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000041
#+ Filename...: axcq703_x01
#+ Description: ...
#+ Creator....: 06821(2015-05-07 10:38:14)
#+ Modifier...: 06821 -SD/PR-

{</section>}

{<section id="axcq703_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:8)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明 name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #where condition 
       a1 STRING,                  #tmp table name 
       a2 STRING,                  #g_hide_flag 
       a3 STRING                   #g_hide_flag1
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point

{</section>}

{<section id="axcq703_x01.main" readonly="Y" >}
PUBLIC FUNCTION axcq703_x01(p_arg1,p_arg2,p_arg3,p_arg4)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 STRING                  #tm.a1  tmp table name 
DEFINE  p_arg3 STRING                  #tm.a2  g_hide_flag 
DEFINE  p_arg4 STRING                  #tm.a3  g_hide_flag1
#add-point:init段define(客製用) name="component.define_customerization"
{<point name="component.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.a1 = p_arg2
   LET tm.a2 = p_arg3
   LET tm.a3 = p_arg4
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "axcq703_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL axcq703_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL axcq703_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL axcq703_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL axcq703_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL axcq703_x01_rep_data()
 
END FUNCTION

{</section>}

{<section id="axcq703_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION axcq703_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "l_xccdcomp_desc.type_t.chr500,l_xccd004_xccd005_desc.type_t.chr500,l_xccdld_desc.type_t.chr500,xccd006.xccd_t.xccd006,l_xccd003_desc.type_t.chr500,l_xccd007_desc.type_t.chr500,l_imag014_desc.type_t.chr500,l_xccd002_desc.type_t.chr500,l_sfaa048_desc.type_t.chr500,xccd009.xccd_t.xccd009,xcbb006.type_t.num5,xccd200.type_t.num20_6,xcdf007.xcdf_t.xcdf007,xcdf008.xcdf_t.xcdf008,xcdf009.xcdf_t.xcdf009,l_xcdf009_desc.type_t.chr500,l_xcdf009_desc_desc.type_t.chr500,xcdf010.xcdf_t.xcdf010,xcdf011.xcdf_t.xcdf011,xcdf012.xcdf_t.xcdf012,l_xcdf012_desc.type_t.chr500,l_xcau003_desc.type_t.chr500,l_xcdf002.type_t.chr500,l_xcdf002_desc.type_t.chr500,xcdf101.xcdf_t.xcdf101,xcdf102.xcdf_t.xcdf102,xcdf201.xcdf_t.xcdf201,xcdf202.xcdf_t.xcdf202,xcdf203.xcdf_t.xcdf203,xcdf204.xcdf_t.xcdf204,xcdf205.xcdf_t.xcdf205,xcdf206.xcdf_t.xcdf206,xcdf207.xcdf_t.xcdf207,xcdf208.xcdf_t.xcdf208,xcdf209.xcdf_t.xcdf209,xcdf210.xcdf_t.xcdf210,xcdf301.xcdf_t.xcdf301,xcdf302.xcdf_t.xcdf302,xcdf303.xcdf_t.xcdf303,xcdf304.xcdf_t.xcdf304,xcdf331.xcdf_t.xcdf331,xcdf332.xcdf_t.xcdf332,xcdf901.xcdf_t.xcdf901,xcdf902.xcdf_t.xcdf902" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION

{</section>}

{<section id="axcq703_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION axcq703_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"
{<point name="ins_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         {<point name="insert_prep"/>}
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION

{</section>}

{<section id="axcq703_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION axcq703_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"
{<point name="sel_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT '','','','','','','','','','','','',xcdf007,xcdf008,xcdf009,'','',xcdf010, 
       '',xcdf012,'','','','','','','','','','','','','','','','','','','','','','','',''"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM xcdf_t"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("xcdf_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE axcq703_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE axcq703_x01_curs CURSOR FOR axcq703_x01_prepare
 
END FUNCTION

{</section>}

{<section id="axcq703_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION axcq703_x01_ins_data()
DEFINE sr RECORD 
   l_xccdcomp_desc LIKE type_t.chr500, 
   l_xccd004_xccd005_desc LIKE type_t.chr500, 
   l_xccdld_desc LIKE type_t.chr500, 
   xccd006 LIKE xccd_t.xccd006, 
   l_xccd003_desc LIKE type_t.chr500, 
   l_xccd007_desc LIKE type_t.chr500, 
   l_imag014_desc LIKE type_t.chr500, 
   l_xccd002_desc LIKE type_t.chr500, 
   l_sfaa048_desc LIKE type_t.chr500, 
   xccd009 LIKE xccd_t.xccd009, 
   xcbb006 LIKE type_t.num5, 
   xccd200 LIKE type_t.num20_6, 
   xcdf007 LIKE xcdf_t.xcdf007, 
   xcdf008 LIKE xcdf_t.xcdf008, 
   xcdf009 LIKE xcdf_t.xcdf009, 
   l_xcdf009_desc LIKE type_t.chr500, 
   l_xcdf009_desc_desc LIKE type_t.chr500, 
   xcdf010 LIKE xcdf_t.xcdf010, 
   xcdf011 LIKE xcdf_t.xcdf011, 
   xcdf012 LIKE xcdf_t.xcdf012, 
   l_xcdf012_desc LIKE type_t.chr500, 
   l_xcau003_desc LIKE type_t.chr500, 
   l_xcdf002 LIKE type_t.chr500, 
   l_xcdf002_desc LIKE type_t.chr500, 
   xcdf101 LIKE xcdf_t.xcdf101, 
   xcdf102 LIKE xcdf_t.xcdf102, 
   xcdf201 LIKE xcdf_t.xcdf201, 
   xcdf202 LIKE xcdf_t.xcdf202, 
   xcdf203 LIKE xcdf_t.xcdf203, 
   xcdf204 LIKE xcdf_t.xcdf204, 
   xcdf205 LIKE xcdf_t.xcdf205, 
   xcdf206 LIKE xcdf_t.xcdf206, 
   xcdf207 LIKE xcdf_t.xcdf207, 
   xcdf208 LIKE xcdf_t.xcdf208, 
   xcdf209 LIKE xcdf_t.xcdf209, 
   xcdf210 LIKE xcdf_t.xcdf210, 
   xcdf301 LIKE xcdf_t.xcdf301, 
   xcdf302 LIKE xcdf_t.xcdf302, 
   xcdf303 LIKE xcdf_t.xcdf303, 
   xcdf304 LIKE xcdf_t.xcdf304, 
   xcdf331 LIKE xcdf_t.xcdf331, 
   xcdf332 LIKE xcdf_t.xcdf332, 
   xcdf901 LIKE xcdf_t.xcdf901, 
   xcdf902 LIKE xcdf_t.xcdf902
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"
{<point name="ins_data.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH axcq703_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.l_xccdcomp_desc,sr.l_xccd004_xccd005_desc,sr.l_xccdld_desc,sr.xccd006,sr.l_xccd003_desc,sr.l_xccd007_desc,sr.l_imag014_desc,sr.l_xccd002_desc,sr.l_sfaa048_desc,sr.xccd009,sr.xcbb006,sr.xccd200,sr.xcdf007,sr.xcdf008,sr.xcdf009,sr.l_xcdf009_desc,sr.l_xcdf009_desc_desc,sr.xcdf010,sr.xcdf011,sr.xcdf012,sr.l_xcdf012_desc,sr.l_xcau003_desc,sr.l_xcdf002,sr.l_xcdf002_desc,sr.xcdf101,sr.xcdf102,sr.xcdf201,sr.xcdf202,sr.xcdf203,sr.xcdf204,sr.xcdf205,sr.xcdf206,sr.xcdf207,sr.xcdf208,sr.xcdf209,sr.xcdf210,sr.xcdf301,sr.xcdf302,sr.xcdf303,sr.xcdf304,sr.xcdf331,sr.xcdf332,sr.xcdf901,sr.xcdf902
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "axcq703_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION

{</section>}

{<section id="axcq703_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION axcq703_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"
{<point name="rep_data.define_customerization" edit="c" mark="Y"/>}
#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION

{</section>}

{<section id="axcq703_x01.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

