#該程式已解開Section, 不再透過樣板產出!
{<section id="axcq503.description" >}
#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000041
#+ 
#+ Filename...: axcq503
#+ Description: 在制元件工藝成本查詢作業
#+ Creator....: 05426(2015-05-07 15:48:34)
#+ Modifier...: 05426(2015-05-11 10:36:21) -SD/PR-

{</section>}

{<section id="axcq503.global" >}
#應用 i07 樣板自動產生(Version:19)
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xccd_m        RECORD
       xccdcomp LIKE xccd_t.xccdcomp, 
   xccdcomp_desc LIKE type_t.chr80, 
   xccdld LIKE xccd_t.xccdld, 
   xccdld_desc LIKE type_t.chr80, 
   xccd003 LIKE xccd_t.xccd003, 
   xccd003_desc LIKE type_t.chr80, 
   xccd004 LIKE xccd_t.xccd004, 
   xccd005 LIKE xccd_t.xccd005, 
   xccd006 LIKE xccd_t.xccd006, 
   xccd007 LIKE xccd_t.xccd007, 
   xccd007_desc LIKE type_t.chr80, 
   xccd007_desc_1 LIKE type_t.chr80, 
   imag014 LIKE imag_t.imag014, 
   imag014_desc LIKE type_t.chr80, 
   sfaa048 LIKE sfaa_t.sfaa048, 
   xcbb006 LIKE xcbb_t.xcbb006, 
   sfaa042 LIKE sfaa_t.sfaa042, 
   xccd008 LIKE xccd_t.xccd008, 
   xccd010 LIKE xccd_t.xccd010, 
   xccd009 LIKE xccd_t.xccd009, 
   xccd002 LIKE xccd_t.xccd002, 
   xccf007 LIKE xccf_t.xccf007, 
   xccf007_desc LIKE type_t.chr80, 
   xccf008 LIKE xccf_t.xccf008, 
   xccf007_desc_1 LIKE type_t.chr80, 
   imaa004 LIKE imaa_t.imaa004, 
   imag014_1 LIKE type_t.chr10, 
   imag014_1_desc LIKE type_t.chr80, 
   xcbb006_1 LIKE type_t.num5, 
   sfba023 LIKE sfba_t.sfba023, 
   sfba013 LIKE sfba_t.sfba013, 
   xccf009 LIKE xccf_t.xccf009, 
   xccf002 LIKE xccf_t.xccf002,
   xccf010 LIKE xccf_t.xccf010,
   xccf011 LIKE xccf_t.xccf011,
   xccf012 LIKE xccf_t.xccf012
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xccd_d        RECORD
       item LIKE type_t.chr500, 
   xccd101 LIKE xccd_t.xccd101, 
   xccd201 LIKE xccd_t.xccd201, 
   xccd204 LIKE xccd_t.xccd204, 
   xccd301 LIKE xccd_t.xccd301, 
   xccd303 LIKE xccd_t.xccd303, 
   xccd901 LIKE xccd_t.xccd901, 
   xccd001 LIKE xccd_t.xccd001
       END RECORD
PRIVATE TYPE type_g_xccd2_d RECORD
       item1 LIKE type_t.chr500, 
   xccf101 LIKE xccf_t.xccf101, 
   xccf102a LIKE xccf_t.xccf102a, 
   xccf102b LIKE xccf_t.xccf102b, 
   xccf102d LIKE xccf_t.xccf102d, 
   xccf102e LIKE xccf_t.xccf102e, 
   xccf102f LIKE xccf_t.xccf102f, 
   xccf102g LIKE xccf_t.xccf102g, 
   xccf102h LIKE xccf_t.xccf102h, 
   xccf102c LIKE xccf_t.xccf102c, 
   count    LIKE xccf_t.xccf102
       END RECORD
PRIVATE TYPE type_g_xccd3_d RECORD
   item_2 LIKE type_t.chr500, 
   xccd101_2 LIKE xccd_t.xccd101, 
   xccd201_2 LIKE xccd_t.xccd201, 
   xccd204_2 LIKE xccd_t.xccd204, 
   xccd301_2 LIKE xccd_t.xccd301, 
   xccd303_2 LIKE xccd_t.xccd303, 
   xccd901_2 LIKE xccd_t.xccd901,    
   xccd001_2 LIKE xccd_t.xccd001
       END RECORD
 
 
#DEFINE g_detail_multi_table_t    RECORD
#      xccf101 LIKE xccf_t.xccf101,
#      xccf102a LIKE xccf_t.xccf102a,
#      xccf102b LIKE xccf_t.xccf102b,
#      xccf102d LIKE xccf_t.xccf102d,
#      xccf102e LIKE xccf_t.xccf102e,
#      xccf102f LIKE xccf_t.xccf102f,
#      xccf102g LIKE xccf_t.xccf102g,
#      xccf102h LIKE xccf_t.xccf102h,
#      xccf102c LIKE xccf_t.xccf102c,
#      xccf101 LIKE xccf_t.xccf101,
#      xccf102a LIKE xccf_t.xccf102a,
#      xccf102b LIKE xccf_t.xccf102b,
#      xccf102d LIKE xccf_t.xccf102d,
#      xccf102e LIKE xccf_t.xccf102e,
#      xccf102f LIKE xccf_t.xccf102f,
#      xccf102g LIKE xccf_t.xccf102g,
#      xccf102h LIKE xccf_t.xccf102h,
#      xccf102c LIKE xccf_t.xccf102c
#      END RECORD
 
#模組變數(Module Variables)
DEFINE g_xccd_m          type_g_xccd_m
DEFINE g_xccd_m_t        type_g_xccd_m
DEFINE g_xccd_m_o        type_g_xccd_m
DEFINE g_xccd_m_mask_o   type_g_xccd_m #轉換遮罩前資料
DEFINE g_xccd_m_mask_n   type_g_xccd_m #轉換遮罩後資料
 
   DEFINE g_xccdld_t LIKE xccd_t.xccdld
DEFINE g_xccd003_t LIKE xccd_t.xccd003
DEFINE g_xccd004_t LIKE xccd_t.xccd004
DEFINE g_xccd005_t LIKE xccd_t.xccd005
DEFINE g_xccd006_t LIKE xccd_t.xccd006
DEFINE g_xccd002_t LIKE xccd_t.xccd002
 
 
DEFINE g_xccd_d          DYNAMIC ARRAY OF type_g_xccd_d
DEFINE g_xccd_d_t        type_g_xccd_d
DEFINE g_xccd_d_o        type_g_xccd_d
DEFINE g_xccd_d_mask_o   DYNAMIC ARRAY OF type_g_xccd_d #轉換遮罩前資料
DEFINE g_xccd_d_mask_n   DYNAMIC ARRAY OF type_g_xccd_d #轉換遮罩後資料
DEFINE g_xccd2_d   DYNAMIC ARRAY OF type_g_xccd2_d
DEFINE g_xccd2_d_t type_g_xccd2_d
DEFINE g_xccd2_d_o type_g_xccd2_d
DEFINE g_xccd2_d_mask_o   DYNAMIC ARRAY OF type_g_xccd2_d #轉換遮罩前資料
DEFINE g_xccd2_d_mask_n   DYNAMIC ARRAY OF type_g_xccd2_d #轉換遮罩後資料
DEFINE g_xccd3_d   DYNAMIC ARRAY OF type_g_xccd3_d
DEFINE g_xccd3_d_t type_g_xccd3_d
DEFINE g_xccd3_d_o type_g_xccd3_d
DEFINE g_xccd3_d_mask_o   DYNAMIC ARRAY OF type_g_xccd3_d #轉換遮罩前資料
DEFINE g_xccd3_d_mask_n   DYNAMIC ARRAY OF type_g_xccd3_d #轉換遮罩後資料
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_xccdld LIKE xccd_t.xccdld,
      b_xccd002 LIKE xccd_t.xccd002,
      b_xccd003 LIKE xccd_t.xccd003,
      b_xccd004 LIKE xccd_t.xccd004,
      b_xccd005 LIKE xccd_t.xccd005,
      b_xccd006 LIKE xccd_t.xccd006,
      b_xccf002 LIKE xccf_t.xccf002,
      b_xccf007 LIKE xccf_t.xccf007,
      b_xccf008 LIKE xccf_t.xccf008,
      b_xccf009 LIKE xccf_t.xccf009,
      b_xccf010 LIKE xccf_t.xccf010,
      b_xccf011 LIKE xccf_t.xccf011,
      b_xccf012 LIKE xccf_t.xccf012
      
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num10             #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10             #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10             #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10             #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10             #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10             #Browser目前所在筆數(暫存用)
DEFINE g_current_page        LIKE type_t.num10             #目前所在頁數
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num10             #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入(僅用於三階)
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="axcq503.main" >}
#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT xccdcomp,'',xccdld,'',xccd003,'',xccd004,xccd005,xccd006,xccd007,'','', 
       '','','','','',xccd008,xccd010,xccd009,xccd002,'','','','','','','','','','','',''", 
                      " FROM xccd_t",
                      " WHERE xccdent= ? AND xccdld=? AND xccd002=? AND xccd003=? AND xccd004=? AND  
                          xccd005=? AND xccd006=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axcq503_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.xccdcomp,t0.xccdld,t0.xccd003,t0.xccd004,t0.xccd005,t0.xccd006,t0.xccd007, 
       t0.xccd008,t0.xccd010,t0.xccd009,t0.xccd002,t4.imaal003",
               " FROM xccd_t t0",
                              " LEFT JOIN imaal_t t4 ON t4.imaalent='"||g_enterprise||"' AND t4.imaal001=t0.xccd007 AND t4.imaal002='"||g_dlang||"' ",
 
               " WHERE t0.xccdent = '" ||g_enterprise|| "' AND t0.xccdld = ? AND t0.xccd002 = ? AND t0.xccd003 = ? AND t0.xccd004 = ? AND t0.xccd005 = ? AND t0.xccd006 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axcq503_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axcq503 WITH FORM cl_ap_formpath("axc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axcq503_init()   
 
      #進入選單 Menu (="N")
      CALL axcq503_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axcq503
      
   END IF 
   
   CLOSE axcq503_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 

{</section>}

{<section id="axcq503.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axcq503_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point
   #add-point:init段define
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point   
  
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
      CALL cl_set_combo_scc('imaa004','1001') 
   CALL cl_set_combo_scc('xccd001','8914') 
 
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL axcq503_default_search()
    
END FUNCTION

{</section>}

{<section id="axcq503.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axcq503_ui_dialog()
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE li_idx    LIKE type_t.num10
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   #add-point:ui_dialog段define
{<point name="ui_dialog.define" edit="s"/>}
   #end add-point  
   #add-point:ui_dialog段define
{<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   #add-point:ui_dialog段before dialog 
{<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
      
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xccd_m.* TO NULL
         CALL g_xccd_d.clear()
         CALL g_xccd2_d.clear()
         CALL g_xccd3_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axcq503_init()
      END IF
 
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_xccd_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               #顯示單身筆數
               CALL axcq503_idx_chk()
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               CALL axcq503_ui_detailshow()
               
               #add-point:page1自定義行為
{<point name="ui_dialog.body.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
    
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為
{<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_xccd2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_curr_diag = ui.DIALOG.getCurrent()
               CALL axcq503_idx_chk()
               CALL axcq503_ui_detailshow()
               
               #add-point:page1自定義行為
{<point name="ui_dialog.body2.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'     
               LET g_current_page = 2
            
            
         
            #add-point:page2自定義行為
{<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_xccd3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_curr_diag = ui.DIALOG.getCurrent()
               CALL axcq503_idx_chk()
               CALL axcq503_ui_detailshow()
               
               #add-point:page1自定義行為
{<point name="ui_dialog.body3.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'     
               LET g_current_page = 3
            
            
         
            #add-point:page3自定義行為
{<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
{<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         
         BEFORE DIALOG
            #先填充browser資料
            CALL axcq503_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axcq503_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axcq503_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2
{<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         
    
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axcq503_fetch('F')
            LET g_current_row = g_current_idx         
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq503_idx_chk()
          
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axcq503_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq503_idx_chk()
          
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axcq503_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq503_idx_chk()
        
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axcq503_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq503_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axcq503_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq503_idx_chk()
            
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xccd_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_xccd2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_xccd3_d)
                  LET g_export_id[3]   = "s_detail3"
 
                  #add-point:ON ACTION exporttoexcel
{<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xccd001
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axcq503_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axcq503_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLEAR FORM
               ELSE
                  CALL axcq503_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
{<point name="menu.output" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axcq503_query()
               #add-point:ON ACTION query
{<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo
{<point name="menu.datainfo" />}
               #END add-point
               
            END IF
 
 
 
         
         
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL axcq503_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
{<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axcq503_set_pk_array()
            #add-point:ON ACTION agendum
{<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axcq503_set_pk_array()
            #add-point:ON ACTION followup
{<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
         CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION

{</section>}

{<section id="axcq503.browser_search" >}
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axcq503_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define" edit="s"/>}
   #end add-point
   #add-point:browser_search段define
   {<point name="browser_search.define_customerization" edit="c"/>}
   #end add-point   
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="axcq503.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axcq503_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
{<point name="browser_fill.define" edit="s"/>}
   #end add-point
   #add-point:browser_fill段define
{<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
{<point name="browser_fill.before_browser_fill"/>}
   #end add-point    
 
   LET l_searchcol = "xccdld,xccd002,xccd003,xccd004,xccd005,xccd006"
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF l_wc2 <> " 1=1" OR NOT cl_null(l_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xccdld ",
                      ", xccd002 ",
                      ", xccd003 ",
                      ", xccd004 ",
                      ", xccd005 ",
                      ", xccd006 ",
                      ", xccf002 ",
                      ", xccf007 ",
                      ", xccf008 ",
                      ", xccf009 ",
                      ", xccf010 ",
                      ", xccf011 ",
                      ", xccf012 ",
 
                     " FROM xccd_t,xccf_t ",
                      " WHERE xccdent=xccfent AND xccdld=xccfld AND xccd001=xccf001  ",
                         "AND xccd003=xccf003 AND xccd004=xccf004 AND xccd005=xccf005 AND xccd006=xccf006",
 
                      " AND xccdent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xccd_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xccdld ",
                      ", xccd002 ",
                      ", xccd003 ",
                      ", xccd004 ",
                      ", xccd005 ",
                      ", xccd006 ",
                      ", xccf002 ",
                      ", xccf007 ",
                      ", xccf008 ",
                      ", xccf009 ",
                      ", xccf010 ",
                      ", xccf011 ",
                      ", xccf012 ",
 
                      " FROM xccd_t,xccf_t ",
                      " WHERE xccdent=xccfent AND xccdld=xccfld AND xccd001=xccf001  ",
                         "AND xccd003=xccf003 AND xccd004=xccf004 AND xccd005=xccf005 AND xccd006=xccf006",
                      
                      " AND xccdent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xccd_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前
{<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt 
         LET g_errparam.code   = 9035
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   LET g_error_show = 0
 
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xccd_m.* TO NULL
      CALL g_xccd_d.clear()        
      CALL g_xccd2_d.clear() 
      CALL g_xccd3_d.clear() 
 
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xccdld,t0.xccd002,t0.xccd003,t0.xccd004,t0.xccd005,t0.xccd006 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT t0.xccdld,t0.xccd002,t0.xccd003,t0.xccd004,t0.xccd005,t0.xccd006,",
                " t1.xccf002,t1.xccf007,t1.xccf008,t1.xccf009,t1.xccf010,t1.xccf011,t1.xccf012",
                " FROM xccd_t t0,xccf_t t1",
                " WHERE t0.xccdent=t1.xccfent AND t0.xccdld=t1.xccfld AND t0.xccd001=t1.xccf001  ",
                " AND t0.xccd003=t1.xccf003 AND t0.xccd004=t1.xccf004 AND t0.xccd005=t1.xccf005 AND t0.xccd006=t1.xccf006",
                
                " AND t0.xccdent = '" ||g_enterprise|| "' AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("xccd_t")
 
   #add-point:browser_fill,sql_rank前
{<point name="browser_fill.before_sql_rank"/>}
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前
{<point name="browser_fill.before_pre"/>}
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"xccd_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   FOREACH browse_cur INTO g_browser[g_cnt].b_xccdld,g_browser[g_cnt].b_xccd002,g_browser[g_cnt].b_xccd003, 
       g_browser[g_cnt].b_xccd004,g_browser[g_cnt].b_xccd005,g_browser[g_cnt].b_xccd006,
       g_browser[g_cnt].b_xccf002,g_browser[g_cnt].b_xccf007,g_browser[g_cnt].b_xccf008,g_browser[g_cnt].b_xccf009,
       g_browser[g_cnt].b_xccf010,g_browser[g_cnt].b_xccf011,g_browser[g_cnt].b_xccf012
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'Foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
{<point name="browser_fill.reference"/>}
      #end add-point  
 
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
   END FOREACH
 
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xccdld) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_xccd_m.* TO NULL
      CALL g_xccd_d.clear()
      CALL g_xccd2_d.clear()
      CALL g_xccd3_d.clear()
 
      #add-point:browser_fill段after_clear
{<point name="browser_fill.after_clear"/>}
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   LET g_browser_cnt = g_browser.getLength()
   CALL axcq503_fetch('')
   
   #筆數顯示
   LET g_browser_idx = g_current_idx 
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
   
   FREE browse_pre
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   #add-point:browser_fill段結束前
{<point name="browser_fill.after"/>}
   #end add-point   
   
END FUNCTION

{</section>}

{<section id="axcq503.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axcq503_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point  
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_xccd_m.xccdld = g_browser[g_current_idx].b_xccdld   
   LET g_xccd_m.xccd002 = g_browser[g_current_idx].b_xccd002   
   LET g_xccd_m.xccd003 = g_browser[g_current_idx].b_xccd003   
   LET g_xccd_m.xccd004 = g_browser[g_current_idx].b_xccd004   
   LET g_xccd_m.xccd005 = g_browser[g_current_idx].b_xccd005   
   LET g_xccd_m.xccd006 = g_browser[g_current_idx].b_xccd006   
 
   EXECUTE axcq503_master_referesh USING g_xccd_m.xccdld,g_xccd_m.xccd002,g_xccd_m.xccd003,g_xccd_m.xccd004, 
       g_xccd_m.xccd005,g_xccd_m.xccd006 INTO g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd003,g_xccd_m.xccd004, 
       g_xccd_m.xccd005,g_xccd_m.xccd006,g_xccd_m.xccd007,g_xccd_m.xccd008,g_xccd_m.xccd010,g_xccd_m.xccd009, 
       g_xccd_m.xccd002,g_xccd_m.xccd007_desc
   CALL axcq503_show()
   
END FUNCTION

{</section>}

{<section id="axcq503.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axcq503_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
 
      #add-point:ui_detailshow段more
      {<point name="ui_detailshow.more"/>}
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point 
   
END FUNCTION

{</section>}

{<section id="axcq503.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axcq503_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point 
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xccdld = g_xccd_m.xccdld 
         AND g_browser[l_i].b_xccd002 = g_xccd_m.xccd002 
         AND g_browser[l_i].b_xccd003 = g_xccd_m.xccd003 
         AND g_browser[l_i].b_xccd004 = g_xccd_m.xccd004 
         AND g_browser[l_i].b_xccd005 = g_xccd_m.xccd005 
         AND g_browser[l_i].b_xccd006 = g_xccd_m.xccd006 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION

{</section>}

{<section id="axcq503.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axcq503_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
{<point name="cs.define" edit="s"/>}
   #end add-point 
    #add-point:cs段define
{<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
 
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_xccd_m.* TO NULL
   CALL g_xccd_d.clear()
   CALL g_xccd2_d.clear()
   CALL g_xccd3_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外
{<point name="cs.head.before"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xccdcomp,xccdld,xccd003,xccd004,xccd005,xccd006,xccd007,xccd008, 
          xccd010,xccd009,xccd002,xccf007,xccf008,xccf009,xccf002
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
{<point name="cs.head.before_construct"/>}
            #end add-point 
            
                 #Ctrlp:construct.c.xccdcomp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccdcomp
            #add-point:ON ACTION controlp INFIELD xccdcomp
{<point name="construct.c.xccdcomp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccdcomp
            #add-point:BEFORE FIELD xccdcomp
{<point name="construct.b.xccdcomp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccdcomp
            
            #add-point:AFTER FIELD xccdcomp
{<point name="construct.a.xccdcomp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccdld
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccdld
            #add-point:ON ACTION controlp INFIELD xccdld
{<point name="construct.c.xccdld" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccdld
            #add-point:BEFORE FIELD xccdld
{<point name="construct.b.xccdld" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccdld
            
            #add-point:AFTER FIELD xccdld
{<point name="construct.a.xccdld" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccd003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd003
            #add-point:ON ACTION controlp INFIELD xccd003
{<point name="construct.c.xccd003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd003
            #add-point:BEFORE FIELD xccd003
{<point name="construct.b.xccd003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd003
            
            #add-point:AFTER FIELD xccd003
{<point name="construct.a.xccd003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd004
            #add-point:BEFORE FIELD xccd004
{<point name="construct.b.xccd004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd004
            
            #add-point:AFTER FIELD xccd004
{<point name="construct.a.xccd004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccd004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd004
            #add-point:ON ACTION controlp INFIELD xccd004
{<point name="construct.c.xccd004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd005
            #add-point:BEFORE FIELD xccd005
{<point name="construct.b.xccd005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd005
            
            #add-point:AFTER FIELD xccd005
{<point name="construct.a.xccd005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccd005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd005
            #add-point:ON ACTION controlp INFIELD xccd005
{<point name="construct.c.xccd005" />}
            #END add-point
 
         #Ctrlp:construct.c.xccd006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd006
            #add-point:ON ACTION controlp INFIELD xccd006
{<point name="construct.c.xccd006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd006
            #add-point:BEFORE FIELD xccd006
{<point name="construct.b.xccd006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd006
            
            #add-point:AFTER FIELD xccd006
{<point name="construct.a.xccd006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccd007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd007
            #add-point:ON ACTION controlp INFIELD xccd007
{<point name="construct.c.xccd007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd007
            #add-point:BEFORE FIELD xccd007
{<point name="construct.b.xccd007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd007
            
            #add-point:AFTER FIELD xccd007
{<point name="construct.a.xccd007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfaa042
            #add-point:BEFORE FIELD sfaa042
{<point name="construct.b.sfaa042" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfaa042
            
            #add-point:AFTER FIELD sfaa042
{<point name="construct.a.sfaa042" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfaa042
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfaa042
            #add-point:ON ACTION controlp INFIELD sfaa042
{<point name="construct.c.sfaa042" />}
            #END add-point
 
         #Ctrlp:construct.c.xccd008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd008
            #add-point:ON ACTION controlp INFIELD xccd008
{<point name="construct.c.xccd008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd008
            #add-point:BEFORE FIELD xccd008
{<point name="construct.b.xccd008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd008
            
            #add-point:AFTER FIELD xccd008
{<point name="construct.a.xccd008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccd010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd010
            #add-point:ON ACTION controlp INFIELD xccd010
{<point name="construct.c.xccd010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd010
            #add-point:BEFORE FIELD xccd010
{<point name="construct.b.xccd010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd010
            
            #add-point:AFTER FIELD xccd010
{<point name="construct.a.xccd010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccd009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd009
            #add-point:ON ACTION controlp INFIELD xccd009
{<point name="construct.c.xccd009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd009
            #add-point:BEFORE FIELD xccd009
{<point name="construct.b.xccd009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd009
            
            #add-point:AFTER FIELD xccd009
{<point name="construct.a.xccd009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccd002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd002
            #add-point:ON ACTION controlp INFIELD xccd002
{<point name="construct.c.xccd002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd002
            #add-point:BEFORE FIELD xccd002
{<point name="construct.b.xccd002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd002
            
            #add-point:AFTER FIELD xccd002
{<point name="construct.a.xccd002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccf007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccf007
            #add-point:ON ACTION controlp INFIELD xccf007
{<point name="construct.c.xccf007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccf007
            #add-point:BEFORE FIELD xccf007
{<point name="construct.b.xccf007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccf007
            
            #add-point:AFTER FIELD xccf007
{<point name="construct.a.xccf007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccf008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccf008
            #add-point:ON ACTION controlp INFIELD xccf008
{<point name="construct.c.xccf008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccf008
            #add-point:BEFORE FIELD xccf008
{<point name="construct.b.xccf008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccf008
            
            #add-point:AFTER FIELD xccf008
{<point name="construct.a.xccf008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaa004
            #add-point:BEFORE FIELD imaa004
{<point name="construct.b.imaa004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaa004
            
            #add-point:AFTER FIELD imaa004
{<point name="construct.a.imaa004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaa004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaa004
            #add-point:ON ACTION controlp INFIELD imaa004
{<point name="construct.c.imaa004" />}
            #END add-point
 
         #Ctrlp:construct.c.xccf009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccf009
            #add-point:ON ACTION controlp INFIELD xccf009
{<point name="construct.c.xccf009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccf009
            #add-point:BEFORE FIELD xccf009
{<point name="construct.b.xccf009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccf009
            
            #add-point:AFTER FIELD xccf009
{<point name="construct.a.xccf009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccf002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccf002
            #add-point:ON ACTION controlp INFIELD xccf002
{<point name="construct.c.xccf002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccf002
            #add-point:BEFORE FIELD xccf002
{<point name="construct.b.xccf002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccf002
            
            #add-point:AFTER FIELD xccf002
{<point name="construct.a.xccf002" />}
            #END add-point
            
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON xccd001,xccd001_2
           FROM s_detail1[1].xccd001,s_detail3[1].xccd001_2
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
{<point name="cs.body.before_construct"/>}
            #end add-point 
            
         #單身公用欄位開窗相關處理
         
           
         #單身一般欄位開窗相關處理
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd001
            #add-point:BEFORE FIELD xccd001
{<point name="construct.b.page1.xccd001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd001
            
            #add-point:AFTER FIELD xccd001
{<point name="construct.a.page1.xccd001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xccd001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd001
            #add-point:ON ACTION controlp INFIELD xccd001
{<point name="construct.c.page1.xccd001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd001_2
            #add-point:BEFORE FIELD xccd001_2
{<point name="construct.b.page3.xccd001_1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd001_2
            
            #add-point:AFTER FIELD xccd001_2
{<point name="construct.a.page3.xccd001_1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.xccd001_2
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd001_2
            #add-point:ON ACTION controlp INFIELD xccd001_2
{<point name="construct.c.page3.xccd001_1" />}
            #END add-point
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct
{<point name="cs.more_construct"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog
{<point name="cs.before_dialog"/>}
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct
{<point name="cs.after_construct"/>}
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION

{</section>}

{<section id="axcq503.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axcq503_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point
   #add-point:query段define
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
 
   #add-point:query開始前
   {<point name="query.befroe_query"/>}
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xccd_d.clear()
   CALL g_xccd2_d.clear()
   CALL g_xccd3_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axcq503_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL axcq503_browser_fill(g_wc)
      CALL axcq503_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL axcq503_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL axcq503_fetch("F") 
   END IF
   
   CALL axcq503_idx_chk()
   
   LET g_wc_filter = ""
   
END FUNCTION

{</section>}

{<section id="axcq503.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axcq503_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
{<point name="fetch.define" edit="s"/>}
   #end add-point
   #add-point:fetch段define
{<point name="fetch.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:fetch段動作開始前
{<point name="fetch.before_fetch"/>}
   #end add-point    
 
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L' 
         LET g_current_idx = g_header_cnt
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   #CALL axcq503_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart + g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting(g_current_idx,g_detail_cnt)
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xccd_m.xccdld = g_browser[g_current_idx].b_xccdld
   LET g_xccd_m.xccd002 = g_browser[g_current_idx].b_xccd002
   LET g_xccd_m.xccd003 = g_browser[g_current_idx].b_xccd003
   LET g_xccd_m.xccd004 = g_browser[g_current_idx].b_xccd004
   LET g_xccd_m.xccd005 = g_browser[g_current_idx].b_xccd005
   LET g_xccd_m.xccd006 = g_browser[g_current_idx].b_xccd006
   LET g_xccd_m.xccf002 = g_browser[g_current_idx].b_xccf002
   LET g_xccd_m.xccf007 = g_browser[g_current_idx].b_xccf007
   LET g_xccd_m.xccf008 = g_browser[g_current_idx].b_xccf008
   LET g_xccd_m.xccf009 = g_browser[g_current_idx].b_xccf009
   LET g_xccd_m.xccf010 = g_browser[g_current_idx].b_xccf010
   LET g_xccd_m.xccf011 = g_browser[g_current_idx].b_xccf011
   LET g_xccd_m.xccf012 = g_browser[g_current_idx].b_xccf012
  
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axcq503_master_referesh USING g_xccd_m.xccdld,g_xccd_m.xccd002,g_xccd_m.xccd003,g_xccd_m.xccd004, 
       g_xccd_m.xccd005,g_xccd_m.xccd006 INTO g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd003,g_xccd_m.xccd004, 
       g_xccd_m.xccd005,g_xccd_m.xccd006,g_xccd_m.xccd007,g_xccd_m.xccd008,g_xccd_m.xccd010,g_xccd_m.xccd009, 
       g_xccd_m.xccd002,g_xccd_m.xccd007_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xccd_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      INITIALIZE g_xccd_m.* TO NULL
      RETURN
   END IF
 
   #遮罩相關處理
   LET g_xccd_m_mask_o.* =  g_xccd_m.*
   CALL axcq503_xccd_t_mask()
   LET g_xccd_m_mask_n.* =  g_xccd_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq503_set_act_visible()
   CALL axcq503_set_act_no_visible()
 
   #保存單頭舊值
   LET g_xccd_m_t.* = g_xccd_m.*
   LET g_xccd_m_o.* = g_xccd_m.*
   
   #重新顯示   
   CALL axcq503_show()
 
   
 
END FUNCTION

{</section>}

{<section id="axcq503.insert" >}
#+ 資料新增
PRIVATE FUNCTION axcq503_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point
   #add-point:insert段define
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_xccd_d.clear()
   CALL g_xccd2_d.clear()
   CALL g_xccd3_d.clear()
 
 
   INITIALIZE g_xccd_m.* LIKE xccd_t.*             #DEFAULT 設定
   LET g_xccdld_t = NULL
   LET g_xccd002_t = NULL
   LET g_xccd003_t = NULL
   LET g_xccd004_t = NULL
   LET g_xccd005_t = NULL
   LET g_xccd006_t = NULL
 
   LET g_master_insert = FALSE
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
            LET g_xccd_m.sfba023 = "0"
      LET g_xccd_m.sfba013 = "0"
 
     
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL axcq503_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         LET INT_FLAG = 0
         LET g_xccd_m.* = g_xccd_m_t.*
         CALL axcq503_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xccd_m.* TO NULL
         INITIALIZE g_xccd_d TO NULL
         INITIALIZE g_xccd2_d TO NULL
         INITIALIZE g_xccd3_d TO NULL
 
         CALL axcq503_show()
         RETURN
      END IF
    
      #CALL g_xccd_d.clear()
      #CALL g_xccd2_d.clear()
      #CALL g_xccd3_d.clear()
 
      
      #add-point:單頭輸入後2
      {<point name="insert.after_insert2"/>}
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq503_set_act_visible()
   CALL axcq503_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_xccdld_t = g_xccd_m.xccdld
   LET g_xccd002_t = g_xccd_m.xccd002
   LET g_xccd003_t = g_xccd_m.xccd003
   LET g_xccd004_t = g_xccd_m.xccd004
   LET g_xccd005_t = g_xccd_m.xccd005
   LET g_xccd006_t = g_xccd_m.xccd006
 
   
   #組合新增資料的條件
   LET g_add_browse = " xccdent = '" ||g_enterprise|| "' AND",
                      " xccdld = '", g_xccd_m.xccdld, "' "
                      ," AND xccd002 = '", g_xccd_m.xccd002, "' "
                      ," AND xccd003 = '", g_xccd_m.xccd003, "' "
                      ," AND xccd004 = '", g_xccd_m.xccd004, "' "
                      ," AND xccd005 = '", g_xccd_m.xccd005, "' "
                      ," AND xccd006 = '", g_xccd_m.xccd006, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axcq503_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CALL axcq503_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axcq503_master_referesh USING g_xccd_m.xccdld,g_xccd_m.xccd002,g_xccd_m.xccd003,g_xccd_m.xccd004, 
       g_xccd_m.xccd005,g_xccd_m.xccd006 INTO g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd003,g_xccd_m.xccd004, 
       g_xccd_m.xccd005,g_xccd_m.xccd006,g_xccd_m.xccd007,g_xccd_m.xccd008,g_xccd_m.xccd010,g_xccd_m.xccd009, 
       g_xccd_m.xccd002,g_xccd_m.xccd007_desc
   
   #遮罩相關處理
   LET g_xccd_m_mask_o.* =  g_xccd_m.*
   CALL axcq503_xccd_t_mask()
   LET g_xccd_m_mask_n.* =  g_xccd_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xccd_m.xccdcomp,g_xccd_m.xccdcomp_desc,g_xccd_m.xccdld,g_xccd_m.xccdld_desc,g_xccd_m.xccd003, 
       g_xccd_m.xccd003_desc,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006,g_xccd_m.xccd007,g_xccd_m.xccd007_desc, 
       g_xccd_m.xccd007_desc_1,g_xccd_m.imag014,g_xccd_m.imag014_desc,g_xccd_m.sfaa048,g_xccd_m.xcbb006, 
       g_xccd_m.sfaa042,g_xccd_m.xccd008,g_xccd_m.xccd010,g_xccd_m.xccd009,g_xccd_m.xccd002,g_xccd_m.xccf007, 
       g_xccd_m.xccf007_desc,g_xccd_m.xccf008,g_xccd_m.xccf007_desc_1,g_xccd_m.imaa004,g_xccd_m.imag014_1, 
       g_xccd_m.imag014_1_desc,g_xccd_m.xcbb006_1,g_xccd_m.sfba023,g_xccd_m.sfba013,g_xccd_m.xccf009, 
       g_xccd_m.xccf002
   
   #功能已完成,通報訊息中心
   CALL axcq503_msgcentre_notify('')
   
END FUNCTION

{</section>}

{<section id="axcq503.modify" >}
#+ 資料修改
PRIVATE FUNCTION axcq503_modify()
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point  
   #add-point:modify段define
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_xccd_m.xccdld IS NULL
   OR g_xccd_m.xccd002 IS NULL
   OR g_xccd_m.xccd003 IS NULL
   OR g_xccd_m.xccd004 IS NULL
   OR g_xccd_m.xccd005 IS NULL
   OR g_xccd_m.xccd006 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
   LET g_xccdld_t = g_xccd_m.xccdld
   LET g_xccd002_t = g_xccd_m.xccd002
   LET g_xccd003_t = g_xccd_m.xccd003
   LET g_xccd004_t = g_xccd_m.xccd004
   LET g_xccd005_t = g_xccd_m.xccd005
   LET g_xccd006_t = g_xccd_m.xccd006
 
   CALL s_transaction_begin()
   
   OPEN axcq503_cl USING g_enterprise,g_xccd_m.xccdld,g_xccd_m.xccd002,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axcq503_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE axcq503_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axcq503_master_referesh USING g_xccd_m.xccdld,g_xccd_m.xccd002,g_xccd_m.xccd003,g_xccd_m.xccd004, 
       g_xccd_m.xccd005,g_xccd_m.xccd006 INTO g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd003,g_xccd_m.xccd004, 
       g_xccd_m.xccd005,g_xccd_m.xccd006,g_xccd_m.xccd007,g_xccd_m.xccd008,g_xccd_m.xccd010,g_xccd_m.xccd009, 
       g_xccd_m.xccd002,g_xccd_m.xccd007_desc
   
   #遮罩相關處理
   LET g_xccd_m_mask_o.* =  g_xccd_m.*
   CALL axcq503_xccd_t_mask()
   LET g_xccd_m_mask_n.* =  g_xccd_m.*
   
   CALL s_transaction_end('Y','0')
 
   CALL axcq503_show()
   WHILE TRUE
      LET g_xccdld_t = g_xccd_m.xccdld
      LET g_xccd002_t = g_xccd_m.xccd002
      LET g_xccd003_t = g_xccd_m.xccd003
      LET g_xccd004_t = g_xccd_m.xccd004
      LET g_xccd005_t = g_xccd_m.xccd005
      LET g_xccd006_t = g_xccd_m.xccd006
 
 
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL axcq503_input("u")     #欄位更改
      
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xccd_m.* = g_xccd_m_t.*
         CALL axcq503_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更(更新單身table的key欄位值)
      IF g_xccd_m.xccdld != g_xccdld_t 
      OR g_xccd_m.xccd002 != g_xccd002_t 
      OR g_xccd_m.xccd003 != g_xccd003_t 
      OR g_xccd_m.xccd004 != g_xccd004_t 
      OR g_xccd_m.xccd005 != g_xccd005_t 
      OR g_xccd_m.xccd006 != g_xccd006_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前
         {<point name="modify.b_key_update" mark="Y"/>}
         #end add-point
         
         #add-point:單頭(偽)修改中
         {<point name="modify.m_key_update"/>}
         #end add-point
         
 
         
         #add-point:單頭(偽)修改後
         {<point name="modify.a_key_update"/>}
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq503_set_act_visible()
   CALL axcq503_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xccdent = '" ||g_enterprise|| "' AND",
                      " xccdld = '", g_xccd_m.xccdld, "' "
                      ," AND xccd002 = '", g_xccd_m.xccd002, "' "
                      ," AND xccd003 = '", g_xccd_m.xccd003, "' "
                      ," AND xccd004 = '", g_xccd_m.xccd004, "' "
                      ," AND xccd005 = '", g_xccd_m.xccd005, "' "
                      ," AND xccd006 = '", g_xccd_m.xccd006, "' "
 
   #填到對應位置
   CALL axcq503_browser_fill("")
 
   CALL axcq503_idx_chk()
 
   CLOSE axcq503_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axcq503_msgcentre_notify('')
   
END FUNCTION   

{</section>}

{<section id="axcq503.input" >}
#+ 資料輸入
PRIVATE FUNCTION axcq503_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num10               #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num10               #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10               #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point
   #add-point:input段define
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point   
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xccd_m.xccdcomp,g_xccd_m.xccdcomp_desc,g_xccd_m.xccdld,g_xccd_m.xccdld_desc,g_xccd_m.xccd003, 
       g_xccd_m.xccd003_desc,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006,g_xccd_m.xccd007,g_xccd_m.xccd007_desc, 
       g_xccd_m.xccd007_desc_1,g_xccd_m.imag014,g_xccd_m.imag014_desc,g_xccd_m.sfaa048,g_xccd_m.xcbb006, 
       g_xccd_m.sfaa042,g_xccd_m.xccd008,g_xccd_m.xccd010,g_xccd_m.xccd009,g_xccd_m.xccd002,g_xccd_m.xccf007, 
       g_xccd_m.xccf007_desc,g_xccd_m.xccf008,g_xccd_m.xccf007_desc_1,g_xccd_m.imaa004,g_xccd_m.imag014_1, 
       g_xccd_m.imag014_1_desc,g_xccd_m.xcbb006_1,g_xccd_m.sfba023,g_xccd_m.sfba013,g_xccd_m.xccf009, 
       g_xccd_m.xccf002
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT xccd101,xccd201,xccd204,xccd301,xccd303,xccd901,xccd001,xccd001 FROM xccd_t  
       WHERE xccdent=? AND xccdld=? AND xccd002=? AND xccd003=? AND xccd004=? AND xccd005=? AND xccd006=?  
       AND xccd001=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axcq503_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axcq503_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL axcq503_set_no_entry(p_cmd)
   #add-point:set_no_entry後
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005, 
       g_xccd_m.xccd006,g_xccd_m.xccd007,g_xccd_m.sfaa042,g_xccd_m.xccd008,g_xccd_m.xccd010,g_xccd_m.xccd009, 
       g_xccd_m.xccd002,g_xccd_m.xccf007,g_xccd_m.xccf008,g_xccd_m.imaa004,g_xccd_m.xccf009,g_xccd_m.xccf002 

   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:進入修改段前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

{</section>}

{<section id="axcq503.input.head" >}
   
      #單頭段
      INPUT BY NAME g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005, 
          g_xccd_m.xccd006,g_xccd_m.xccd007,g_xccd_m.sfaa042,g_xccd_m.xccd008,g_xccd_m.xccd010,g_xccd_m.xccd009, 
          g_xccd_m.xccd002,g_xccd_m.xccf007,g_xccd_m.xccf008,g_xccd_m.imaa004,g_xccd_m.xccf009,g_xccd_m.xccf002  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前
            {<point name="input.head.b_input"/>}
            #end add-point
          
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccdcomp
            
            #add-point:AFTER FIELD xccdcomp
            {<point name="input.a.xccdcomp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccdcomp
            #add-point:BEFORE FIELD xccdcomp
            {<point name="input.b.xccdcomp" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccdcomp
            #add-point:ON CHANGE xccdcomp
            {<point name="input.g.xccdcomp" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccdld
            
            #add-point:AFTER FIELD xccdld
            {<point name="input.a.xccdld" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccdld
            #add-point:BEFORE FIELD xccdld
            {<point name="input.b.xccdld" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccdld
            #add-point:ON CHANGE xccdld
            {<point name="input.g.xccdld" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd003
            
            #add-point:AFTER FIELD xccd003
            {<point name="input.a.xccd003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd003
            #add-point:BEFORE FIELD xccd003
            {<point name="input.b.xccd003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccd003
            #add-point:ON CHANGE xccd003
            {<point name="input.g.xccd003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd004
            #add-point:BEFORE FIELD xccd004
            {<point name="input.b.xccd004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd004
            
            #add-point:AFTER FIELD xccd004
            {<point name="input.a.xccd004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccd004
            #add-point:ON CHANGE xccd004
            {<point name="input.g.xccd004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd005
            #add-point:BEFORE FIELD xccd005
            {<point name="input.b.xccd005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd005
            
            #add-point:AFTER FIELD xccd005
            {<point name="input.a.xccd005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccd005
            #add-point:ON CHANGE xccd005
            {<point name="input.g.xccd005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd006
            #add-point:BEFORE FIELD xccd006
            {<point name="input.b.xccd006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd006
            
            #add-point:AFTER FIELD xccd006
            {<point name="input.a.xccd006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccd006
            #add-point:ON CHANGE xccd006
            {<point name="input.g.xccd006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd007
            
            #add-point:AFTER FIELD xccd007
            {<point name="input.a.xccd007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd007
            #add-point:BEFORE FIELD xccd007
            {<point name="input.b.xccd007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccd007
            #add-point:ON CHANGE xccd007
            {<point name="input.g.xccd007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfaa042
            #add-point:BEFORE FIELD sfaa042
            {<point name="input.b.sfaa042" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfaa042
            
            #add-point:AFTER FIELD sfaa042
            {<point name="input.a.sfaa042" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfaa042
            #add-point:ON CHANGE sfaa042
            {<point name="input.g.sfaa042" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd008
            #add-point:BEFORE FIELD xccd008
            {<point name="input.b.xccd008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd008
            
            #add-point:AFTER FIELD xccd008
            {<point name="input.a.xccd008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccd008
            #add-point:ON CHANGE xccd008
            {<point name="input.g.xccd008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd010
            #add-point:BEFORE FIELD xccd010
            {<point name="input.b.xccd010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd010
            
            #add-point:AFTER FIELD xccd010
            {<point name="input.a.xccd010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccd010
            #add-point:ON CHANGE xccd010
            {<point name="input.g.xccd010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd009
            #add-point:BEFORE FIELD xccd009
            {<point name="input.b.xccd009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd009
            
            #add-point:AFTER FIELD xccd009
            {<point name="input.a.xccd009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccd009
            #add-point:ON CHANGE xccd009
            {<point name="input.g.xccd009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd002
            #add-point:BEFORE FIELD xccd002
            {<point name="input.b.xccd002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd002
            
            #add-point:AFTER FIELD xccd002
            {<point name="input.a.xccd002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccd002
            #add-point:ON CHANGE xccd002
            {<point name="input.g.xccd002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccf007
            
            #add-point:AFTER FIELD xccf007
            {<point name="input.a.xccf007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccf007
            #add-point:BEFORE FIELD xccf007
            {<point name="input.b.xccf007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccf007
            #add-point:ON CHANGE xccf007
            {<point name="input.g.xccf007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccf008
            #add-point:BEFORE FIELD xccf008
            {<point name="input.b.xccf008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccf008
            
            #add-point:AFTER FIELD xccf008
            {<point name="input.a.xccf008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccf008
            #add-point:ON CHANGE xccf008
            {<point name="input.g.xccf008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaa004
            #add-point:BEFORE FIELD imaa004
            {<point name="input.b.imaa004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaa004
            
            #add-point:AFTER FIELD imaa004
            {<point name="input.a.imaa004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE imaa004
            #add-point:ON CHANGE imaa004
            {<point name="input.g.imaa004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccf009
            #add-point:BEFORE FIELD xccf009
            {<point name="input.b.xccf009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccf009
            
            #add-point:AFTER FIELD xccf009
            {<point name="input.a.xccf009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccf009
            #add-point:ON CHANGE xccf009
            {<point name="input.g.xccf009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccf002
            #add-point:BEFORE FIELD xccf002
            {<point name="input.b.xccf002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccf002
            
            #add-point:AFTER FIELD xccf002
            {<point name="input.a.xccf002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccf002
            #add-point:ON CHANGE xccf002
            {<point name="input.g.xccf002" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.xccdcomp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccdcomp
            #add-point:ON ACTION controlp INFIELD xccdcomp
            {<point name="input.c.xccdcomp" />}
            #END add-point
 
         #Ctrlp:input.c.xccdld
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccdld
            #add-point:ON ACTION controlp INFIELD xccdld
            {<point name="input.c.xccdld" />}
            #END add-point
 
         #Ctrlp:input.c.xccd003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd003
            #add-point:ON ACTION controlp INFIELD xccd003
            {<point name="input.c.xccd003" />}
            #END add-point
 
         #Ctrlp:input.c.xccd004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd004
            #add-point:ON ACTION controlp INFIELD xccd004
            {<point name="input.c.xccd004" />}
            #END add-point
 
         #Ctrlp:input.c.xccd005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd005
            #add-point:ON ACTION controlp INFIELD xccd005
            {<point name="input.c.xccd005" />}
            #END add-point
 
         #Ctrlp:input.c.xccd006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd006
            #add-point:ON ACTION controlp INFIELD xccd006
            {<point name="input.c.xccd006" />}
            #END add-point
 
         #Ctrlp:input.c.xccd007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd007
            #add-point:ON ACTION controlp INFIELD xccd007
            {<point name="input.c.xccd007" />}
            #END add-point
 
         #Ctrlp:input.c.sfaa042
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfaa042
            #add-point:ON ACTION controlp INFIELD sfaa042
            {<point name="input.c.sfaa042" />}
            #END add-point
 
         #Ctrlp:input.c.xccd008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd008
            #add-point:ON ACTION controlp INFIELD xccd008
            {<point name="input.c.xccd008" />}
            #END add-point
 
         #Ctrlp:input.c.xccd010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd010
            #add-point:ON ACTION controlp INFIELD xccd010
            {<point name="input.c.xccd010" />}
            #END add-point
 
         #Ctrlp:input.c.xccd009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd009
            #add-point:ON ACTION controlp INFIELD xccd009
            {<point name="input.c.xccd009" />}
            #END add-point
 
         #Ctrlp:input.c.xccd002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd002
            #add-point:ON ACTION controlp INFIELD xccd002
            {<point name="input.c.xccd002" />}
            #END add-point
 
         #Ctrlp:input.c.xccf007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccf007
            #add-point:ON ACTION controlp INFIELD xccf007
            {<point name="input.c.xccf007" />}
            #END add-point
 
         #Ctrlp:input.c.xccf008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccf008
            #add-point:ON ACTION controlp INFIELD xccf008
            {<point name="input.c.xccf008" />}
            #END add-point
 
         #Ctrlp:input.c.imaa004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaa004
            #add-point:ON ACTION controlp INFIELD imaa004
            {<point name="input.c.imaa004" />}
            #END add-point
 
         #Ctrlp:input.c.xccf009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccf009
            #add-point:ON ACTION controlp INFIELD xccf009
            {<point name="input.c.xccf009" />}
            #END add-point
 
         #Ctrlp:input.c.xccf002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccf002
            #add-point:ON ACTION controlp INFIELD xccf002
            {<point name="input.c.xccf002" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
 
            #多語言處理
            
            
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xccd_m.xccdld             
                            ,g_xccd_m.xccd002   
                            ,g_xccd_m.xccd003   
                            ,g_xccd_m.xccd004   
                            ,g_xccd_m.xccd005   
                            ,g_xccd_m.xccd006   
 
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
            
               #將遮罩欄位還原
               CALL axcq503_xccd_t_mask_restore('restore_mask_o')
            
               UPDATE xccd_t SET (xccdcomp,xccdld,xccd003,xccd004,xccd005,xccd006,xccd007,xccd008,xccd010, 
                   xccd009,xccd002) = (g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd003,g_xccd_m.xccd004, 
                   g_xccd_m.xccd005,g_xccd_m.xccd006,g_xccd_m.xccd007,g_xccd_m.xccd008,g_xccd_m.xccd010, 
                   g_xccd_m.xccd009,g_xccd_m.xccd002)
                WHERE xccdent = g_enterprise AND xccdld = g_xccdld_t
                  AND xccd002 = g_xccd002_t
                  AND xccd003 = g_xccd003_t
                  AND xccd004 = g_xccd004_t
                  AND xccd005 = g_xccd005_t
                  AND xccd006 = g_xccd006_t
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xccd_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xccd_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xccd_m.xccdld
               LET gs_keys_bak[1] = g_xccdld_t
               LET gs_keys[2] = g_xccd_m.xccd002
               LET gs_keys_bak[2] = g_xccd002_t
               LET gs_keys[3] = g_xccd_m.xccd003
               LET gs_keys_bak[3] = g_xccd003_t
               LET gs_keys[4] = g_xccd_m.xccd004
               LET gs_keys_bak[4] = g_xccd004_t
               LET gs_keys[5] = g_xccd_m.xccd005
               LET gs_keys_bak[5] = g_xccd005_t
               LET gs_keys[6] = g_xccd_m.xccd006
               LET gs_keys_bak[6] = g_xccd006_t
               LET gs_keys[7] = g_xccd_d[g_detail_idx].xccd001
               LET gs_keys_bak[7] = g_xccd_d_t.xccd001
               CALL axcq503_update_b('xccd_t',gs_keys,gs_keys_bak,"'1'")
                     
 
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
    
                     #頭先不紀錄
                     #LET g_log1 = util.JSON.stringify(g_xccd_m_t)
                     #LET g_log2 = util.JSON.stringify(g_xccd_m)
                     #IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                     #   CALL s_transaction_end('N','0')
                     #ELSE
                        CALL s_transaction_end('Y','0')
                     #END IF
               END CASE
            
               #將遮罩欄位進行遮蔽
               CALL axcq503_xccd_t_mask_restore('restore_mask_n')
            
            ELSE    
               #add-point:單頭新增
               {<point name="input.head.a_insert"/>}
               #end add-point
                         
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axcq503_detail_reproduce()
               END IF
            END IF
 
           LET g_xccdld_t = g_xccd_m.xccdld
           LET g_xccd002_t = g_xccd_m.xccd002
           LET g_xccd003_t = g_xccd_m.xccd003
           LET g_xccd004_t = g_xccd_m.xccd004
           LET g_xccd005_t = g_xccd_m.xccd005
           LET g_xccd006_t = g_xccd_m.xccd006
 
           
           IF g_xccd_d.getLength() = 0 THEN
              NEXT FIELD xccd001
           END IF
 
      END INPUT

{</section>}

{<section id="axcq503.input.body" >}
      #Page1 預設值產生於此處
      INPUT ARRAY g_xccd_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = FALSE,
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xccd_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axcq503_b_fill(g_wc2) #test 
            #如果一直都在單頭則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm' 
            #add-point:資料輸入前
{<point name="input.body.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row
{<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq503_idx_chk()
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN axcq503_cl USING g_enterprise,g_xccd_m.xccdld,g_xccd_m.xccd002,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006                          
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axcq503_cl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLOSE axcq503_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            IF g_rec_b >= l_ac 
               AND g_xccd_d[l_ac].xccd001 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xccd_d_t.* = g_xccd_d[l_ac].*  #BACKUP
               LET g_xccd_d_o.* = g_xccd_d[l_ac].*  #BACKUP
               CALL axcq503_set_entry_b(l_cmd)
               #add-point:set_entry_b後
{<point name="input.body.before_row.set_entry_b"/>}
               #end add-point
               CALL axcq503_set_no_entry_b(l_cmd)
               OPEN axcq503_bcl USING g_enterprise,g_xccd_m.xccdld,
                                                g_xccd_m.xccd002,
                                                g_xccd_m.xccd003,
                                                g_xccd_m.xccd004,
                                                g_xccd_m.xccd005,
                                                g_xccd_m.xccd006,
 
                                                g_xccd_d_t.xccd001
 
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN axcq503_bcl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axcq503_bcl INTO g_xccd_d[l_ac].xccd101,g_xccd_d[l_ac].xccd201,g_xccd_d[l_ac].xccd204, 
                      g_xccd_d[l_ac].xccd301,g_xccd_d[l_ac].xccd303,g_xccd_d[l_ac].xccd901,g_xccd_d[l_ac].xccd001, 
                      g_xccd3_d[l_ac].xccd001_2
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_xccd_d_t.xccd001 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
                      LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xccd_d_mask_o[l_ac].* =  g_xccd_d[l_ac].*
                  CALL axcq503_xccd_t_mask()
                  LET g_xccd_d_mask_n[l_ac].* =  g_xccd_d[l_ac].*
                  
                  CALL axcq503_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
{<point name="input.body.before_row"/>}
            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_xccd_d_t.* TO NULL
            INITIALIZE g_xccd_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xccd_d[l_ac].* TO NULL
            #公用欄位預設值
              
            #一般欄位預設值
                  LET g_xccd_d[l_ac].xccd001 = "1"
 
            
            #add-point:modify段before備份
{<point name="input.body.before_insert.before_bak"/>}
            #end add-point
            LET g_xccd_d_t.* = g_xccd_d[l_ac].*     #新輸入資料
            LET g_xccd_d_o.* = g_xccd_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axcq503_set_entry_b(l_cmd)
            #add-point:set_entry_b後
{<point name="input.body.before_insert.set_entry_b"/>}
            #end add-point
            CALL axcq503_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xccd_d[li_reproduce_target].* = g_xccd_d[li_reproduce].*
               LET g_xccd2_d[li_reproduce_target].* = g_xccd2_d[li_reproduce].*
               LET g_xccd3_d[li_reproduce_target].* = g_xccd3_d[li_reproduce].*
 
               LET g_xccd_d[g_xccd_d.getLength()].xccd001 = NULL
 
            END IF
            
            #add-point:modify段before insert
{<point name="input.body.before_insert"/>}
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xccd_t 
             WHERE xccdent = g_enterprise AND xccdld = g_xccd_m.xccdld
               AND xccd002 = g_xccd_m.xccd002
               AND xccd003 = g_xccd_m.xccd003
               AND xccd004 = g_xccd_m.xccd004
               AND xccd005 = g_xccd_m.xccd005
               AND xccd006 = g_xccd_m.xccd006
 
               AND xccd001 = g_xccd_d[l_ac].xccd001
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
{<point name="input.body.b_insert" mark="Y"/>}
               #end add-point
               INSERT INTO xccd_t
                           (xccdent,
                            xccdcomp,xccdld,xccd003,xccd004,xccd005,xccd006,xccd007,xccd008,xccd010,xccd009,xccd002,
                            xccd001
                            ,xccd101,xccd201,xccd204,xccd301,xccd303,xccd901) 
                     VALUES(g_enterprise,
                            g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006,g_xccd_m.xccd007,g_xccd_m.xccd008,g_xccd_m.xccd010,g_xccd_m.xccd009,g_xccd_m.xccd002,
                            g_xccd_d[l_ac].xccd001
                            ,g_xccd_d[l_ac].xccd101,g_xccd_d[l_ac].xccd201,g_xccd_d[l_ac].xccd204,g_xccd_d[l_ac].xccd301, 
                                g_xccd_d[l_ac].xccd303,g_xccd_d[l_ac].xccd901)
               #add-point:單身新增中
{<point name="input.body.m_insert"/>}
               #end add-point
               LET p_cmd = 'u'
               LET g_master_insert = TRUE
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_xccd_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xccd_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
{<point name="input.body.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後
{<point name="input.body.after_insert"/>}
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前
{<point name="input.body.b_delete"/>}
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               IF axcq503_before_delete() THEN 
                  
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axcq503_bcl
               LET l_count = g_xccd_d.getLength()
            END IF 
            
            #add-point:單身刪除後
{<point name="input.body.a_delete"/>}
            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE 
{<point name="input.body.after_delete"/>}
               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_xccd_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd001
            #add-point:BEFORE FIELD xccd001
{<point name="input.b.page1.xccd001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd001
            
            #add-point:AFTER FIELD xccd001
{<point name="input.a.page1.xccd001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccd001
            #add-point:ON CHANGE xccd001
{<point name="input.g.page1.xccd001" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.xccd001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd001
            #add-point:ON ACTION controlp INFIELD xccd001
{<point name="input.c.page1.xccd001" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_xccd_d[l_ac].* = g_xccd_d_t.*
               CLOSE axcq503_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xccd_d[l_ac].xccd001 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xccd_d[l_ac].* = g_xccd_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               
            
               #add-point:單身修改前
{<point name="input.body.b_update" mark="Y"/>}
               #end add-point
         
               #將遮罩欄位還原
               CALL axcq503_xccd_t_mask_restore('restore_mask_o')
         
               UPDATE xccd_t SET (xccdld,xccd002,xccd003,xccd004,xccd005,xccd006,xccd101,xccd201,xccd204, 
                   xccd301,xccd303,xccd901,xccd001) = (g_xccd_m.xccdld,g_xccd_m.xccd002,g_xccd_m.xccd003, 
                   g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006,g_xccd_d[l_ac].xccd101,g_xccd_d[l_ac].xccd201, 
                   g_xccd_d[l_ac].xccd204,g_xccd_d[l_ac].xccd301,g_xccd_d[l_ac].xccd303,g_xccd_d[l_ac].xccd901, 
                   g_xccd_d[l_ac].xccd001)
                WHERE xccdent = g_enterprise AND xccdld = g_xccd_m.xccdld 
                 AND xccd002 = g_xccd_m.xccd002 
                 AND xccd003 = g_xccd_m.xccd003 
                 AND xccd004 = g_xccd_m.xccd004 
                 AND xccd005 = g_xccd_m.xccd005 
                 AND xccd006 = g_xccd_m.xccd006 
 
                 AND xccd001 = g_xccd_d_t.xccd001 #項次   
 
                 
               #add-point:單身修改中
{<point name="input.body.m_update"/>}
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xccd_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "xccd_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xccd_m.xccdld
               LET gs_keys_bak[1] = g_xccdld_t
               LET gs_keys[2] = g_xccd_m.xccd002
               LET gs_keys_bak[2] = g_xccd002_t
               LET gs_keys[3] = g_xccd_m.xccd003
               LET gs_keys_bak[3] = g_xccd003_t
               LET gs_keys[4] = g_xccd_m.xccd004
               LET gs_keys_bak[4] = g_xccd004_t
               LET gs_keys[5] = g_xccd_m.xccd005
               LET gs_keys_bak[5] = g_xccd005_t
               LET gs_keys[6] = g_xccd_m.xccd006
               LET gs_keys_bak[6] = g_xccd006_t
               LET gs_keys[7] = g_xccd_d[g_detail_idx].xccd001
               LET gs_keys_bak[7] = g_xccd_d_t.xccd001
               CALL axcq503_update_b('xccd_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     #修改歷程記錄(單身修改)
                     LET g_log1 = util.JSON.stringify(g_xccd_m),util.JSON.stringify(g_xccd_d_t)
                     LET g_log2 = util.JSON.stringify(g_xccd_m),util.JSON.stringify(g_xccd_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axcq503_xccd_t_mask_restore('restore_mask_n')
               
               #若Key欄位有變動
               LET ls_keys[01] = g_xccd_m.xccdld
               LET ls_keys[ls_keys.getLength()+1] = g_xccd_m.xccd002
               LET ls_keys[ls_keys.getLength()+1] = g_xccd_m.xccd003
               LET ls_keys[ls_keys.getLength()+1] = g_xccd_m.xccd004
               LET ls_keys[ls_keys.getLength()+1] = g_xccd_m.xccd005
               LET ls_keys[ls_keys.getLength()+1] = g_xccd_m.xccd006
 
               LET ls_keys[ls_keys.getLength()+1] = g_xccd_d_t.xccd001
 
               CALL axcq503_key_update_b(ls_keys)
               
               #add-point:單身修改後
{<point name="input.body.a_update"/>}
               #end add-point
            END IF
 
         AFTER ROW
            #add-point:input段after row
{<point name="input.body.after_row"/>}
            #end add-point  
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xccd_d[l_ac].* = g_xccd_d_t.*
               END IF
               CLOSE axcq503_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
 
            CLOSE axcq503_bcl
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_xccd_d.getLength() = 0 THEN
               NEXT FIELD xccd001
            END IF
            #add-point:input段after input 
{<point name="input.body.after_input"/>}
            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xccd_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xccd_d.getLength()+1
            
      END INPUT
 
      INPUT ARRAY g_xccd3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b, WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                   INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 

                   DELETE ROW = l_allow_delete,
                   APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
                 
         BEFORE INPUT
            
            CALL axcq503_b_fill(g_wc2) #test 
            #如果一直都在單頭則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm' 
            #add-point:資料輸入前
{<point name="input.body3.before_input"/>}
            #end add-point
 
         BEFORE ROW 
            #add-point:before row
{<point name="input.body3.before_row2"/>}
            #end add-point
            LET l_cmd = ''
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()               #returns the current row
            IF l_ac > g_rec_b THEN              #不可超過最後一筆
               CALL fgl_set_arr_curr(g_rec_b)   #moves to a specific row         
            END IF
           
            LET l_lock_sw = 'N'                  #DEFAULT
            LET l_n = ARR_COUNT()                #the number of rows containing  
            
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq503_idx_chk()
            
            CALL s_transaction_begin()
            IF g_rec_b >= l_ac THEN
               LET l_cmd='u'
               CALL axcq503_set_entry_b(l_cmd)
               #add-point:set_entry_b後
{<point name="input.body3.before_row.set_entry_b"/>}
               #end add-point
               CALL axcq503_set_no_entry_b(l_cmd)
               LET g_xccd3_d_t.* = g_xccd3_d[l_ac].*   #BACKUP  #page1
               LET g_xccd3_d_o.* = g_xccd3_d[l_ac].*   #BACKUP  #page1
            END IF 
            
    
         BEFORE INSERT
            LET g_insert = 'Y' 
            NEXT FIELD xccd001
 
            INITIALIZE g_xccd3_d_t.* TO NULL
            INITIALIZE g_xccd3_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xccd3_d[l_ac].* TO NULL
            #公用欄位預設值
              
            #一般欄位預設值
                  LET g_xccd3_d[l_ac].xccd001_2 = "1"
 
            
            #add-point:modify段before備份
{<point name="input.body3.before_insert.before_bak"/>}
            #end add-point
            LET g_xccd3_d_t.* = g_xccd3_d[l_ac].*     #新輸入資料
            LET g_xccd3_d_o.* = g_xccd3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axcq503_set_entry_b(l_cmd)
            #add-point:set_entry_b後
{<point name="input.body3.before_insert.set_entry_b"/>}
            #end add-point
            CALL axcq503_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xccd_d[li_reproduce_target].* = g_xccd_d[li_reproduce].*
               LET g_xccd2_d[li_reproduce_target].* = g_xccd2_d[li_reproduce].*
               LET g_xccd3_d[li_reproduce_target].* = g_xccd3_d[li_reproduce].*
 
               LET g_xccd3_d[li_reproduce_target].xccd001_2 = NULL
            END IF
            
            #add-point:modify段before insert
{<point name="input.body3.before_insert"/>}
            #end add-point
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               IF axcq503_before_delete() THEN 
                  
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE axcq503_bcl
               CALL s_transaction_end('Y','0') 
               LET l_count = g_xccd3_d.getLength()
            END IF
            
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE 
{<point name="input.body3.after_delete"/>}
               #end add-point
                              CALL axcq503_delete_b('xccd_t',gs_keys,"'3'")
            END IF
            #如果是最後一筆
            IF l_ac = (g_xccd3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_xccd3_d[l_ac].* = g_xccd3_d_t.*
               CLOSE axcq503_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xccd_d[l_ac].xccd001 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xccd3_d[l_ac].* = g_xccd3_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               
                
               #add-point:單身修改前
{<point name="modify.body3.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL axcq503_xccd_t_mask_restore('restore_mask_o')
                     
               UPDATE xccd_t SET (xccdld,xccd002,xccd003,xccd004,xccd005,xccd006,xccd101,xccd201,xccd204, 
                   xccd301,xccd303,xccd901,xccd001) = (g_xccd_m.xccdld,g_xccd_m.xccd002,g_xccd_m.xccd003, 
                   g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006,g_xccd_d[l_ac].xccd101,g_xccd_d[l_ac].xccd201, 
                   g_xccd_d[l_ac].xccd204,g_xccd_d[l_ac].xccd301,g_xccd_d[l_ac].xccd303,g_xccd_d[l_ac].xccd901, 
                   g_xccd_d[l_ac].xccd001) #自訂欄位頁簽
                WHERE xccdent = g_enterprise AND xccdld = g_xccd_m.xccdld
                 AND xccd002 = g_xccd_m.xccd002
                 AND xccd003 = g_xccd_m.xccd003
                 AND xccd004 = g_xccd_m.xccd004
                 AND xccd005 = g_xccd_m.xccd005
                 AND xccd006 = g_xccd_m.xccd006
                 AND xccd001 = g_xccd3_d_t.xccd001_2 #項次 
               #add-point:單身修改中
{<point name="modify.body3.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xccd_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xccd_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xccd_m.xccdld
               LET gs_keys_bak[1] = g_xccdld_t
               LET gs_keys[2] = g_xccd_m.xccd002
               LET gs_keys_bak[2] = g_xccd002_t
               LET gs_keys[3] = g_xccd_m.xccd003
               LET gs_keys_bak[3] = g_xccd003_t
               LET gs_keys[4] = g_xccd_m.xccd004
               LET gs_keys_bak[4] = g_xccd004_t
               LET gs_keys[5] = g_xccd_m.xccd005
               LET gs_keys_bak[5] = g_xccd005_t
               LET gs_keys[6] = g_xccd_m.xccd006
               LET gs_keys_bak[6] = g_xccd006_t
               LET gs_keys[7] = g_xccd3_d[g_detail_idx].xccd001_2
               LET gs_keys_bak[7] = g_xccd3_d_t.xccd001_2
               CALL axcq503_update_b('xccd_t',gs_keys,gs_keys_bak,"'3'")
                     #多語言處理
                     
                     #修改歷程記錄(單身修改)
                     LET g_log1 = util.JSON.stringify(g_xccd_m),util.JSON.stringify(g_xccd3_d_t)
                     LET g_log2 = util.JSON.stringify(g_xccd_m),util.JSON.stringify(g_xccd3_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axcq503_xccd_t_mask_restore('restore_mask_n')
               
               #add-point:單身修改後
{<point name="modify.body3.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd001_2
            #add-point:BEFORE FIELD xccd001_2
{<point name="input.b.page3.xccd001_1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd001_2
            
            #add-point:AFTER FIELD xccd001_2
{<point name="input.a.page3.xccd001_1" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccd001_2
            #add-point:ON CHANGE xccd001_2
{<point name="input.g.page3.xccd001_1" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page3.xccd001_2
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd001_2
            #add-point:ON ACTION controlp INFIELD xccd001_2
{<point name="input.c.page3.xccd001_1" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:input段after row
{<point name="input.body3.after_row"/>}
            #end add-point  
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xccd3_d[l_ac].* = g_xccd3_d_t.*
               END IF
               CLOSE axcq503_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
 
            CLOSE axcq503_bcl
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #add-point:input段after input 
{<point name="input.body3.after_input"/>}
            #end add-point    
 
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_xccd3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xccd3_d.getLength()+1
 
      END INPUT
 
      
      DISPLAY ARRAY g_xccd2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
      
         BEFORE ROW
            CALL axcq503_b_fill(g_wc2) #test 
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_page = 2
            CALL axcq503_idx_chk()
            CALL axcq503_ui_detailshow()
        
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)      
         
         #add-point:page2自定義行為
{<point name="input.body2.action"/>}
         #end add-point
         
      END DISPLAY
 
      
 
      
 
    
      #add-point:input段more_input
{<point name="input.more_inputarray"/>}
      #end add-point    
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()    
         #add-point:input段before_dialog
{<point name="input.before_dialog"/>}
         #end add-point 
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail3",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD xccdld
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD item
               WHEN "s_detail2"
                  NEXT FIELD item1
               WHEN "s_detail3"
                  NEXT FIELD xccd001_3
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #將畫面指標同步到當下指定的位置上
   CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
   CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
 
 
   
   #add-point:input段after_input
{<point name="input.after_input"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="axcq503.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axcq503_show()
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point
   #add-point:show段define
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL axcq503_b_fill(g_wc2) #第一階單身填充
      CALL axcq503_b_fill2('0')  #第二階單身填充
   END IF
   
   
 
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL axcq503_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   DISPLAY BY NAME g_xccd_m.xccdcomp,g_xccd_m.xccdcomp_desc,g_xccd_m.xccdld,g_xccd_m.xccdld_desc,g_xccd_m.xccd003, 
       g_xccd_m.xccd003_desc,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006,g_xccd_m.xccd007,g_xccd_m.xccd007_desc, 
       g_xccd_m.xccd007_desc_1,g_xccd_m.imag014,g_xccd_m.imag014_desc,g_xccd_m.sfaa048,g_xccd_m.xcbb006, 
       g_xccd_m.sfaa042,g_xccd_m.xccd008,g_xccd_m.xccd010,g_xccd_m.xccd009,g_xccd_m.xccd002,g_xccd_m.xccf007, 
       g_xccd_m.xccf007_desc,g_xccd_m.xccf008,g_xccd_m.xccf007_desc_1,g_xccd_m.imaa004,g_xccd_m.imag014_1, 
       g_xccd_m.imag014_1_desc,g_xccd_m.xcbb006_1,g_xccd_m.sfba023,g_xccd_m.sfba013,g_xccd_m.xccf009, 
       g_xccd_m.xccf002
 
   CALL axcq503_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point   
   
END FUNCTION

{</section>}

{<section id="axcq503.ref_show" >}
#+ 帶出reference資料
PRIVATE FUNCTION axcq503_ref_show()
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define
   {<point name="ref_show.define" edit="s"/>}
   #end add-point
   #add-point:ref_show段define
   {<point name="ref_show.define_customerization" edit="c"/>}
   #end add-point 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference
   {<point name="ref_show.head.reference"/>}
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xccd_d.getLength()
      #add-point:ref_show段d_reference
      {<point name="ref_show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xccd2_d.getLength()
      #add-point:ref_show段d2_reference
      {<point name="ref_show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xccd3_d.getLength()
      #add-point:ref_show段d3_reference
      {<point name="ref_show.body3.reference"/>}
      #end add-point
   END FOR
 
   
   #add-point:ref_show段自訂
   {<point name="ref_show.other_reference"/>}
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION

{</section>}

{<section id="axcq503.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axcq503_reproduce()
   DEFINE l_newno     LIKE xccd_t.xccdld 
   DEFINE l_oldno     LIKE xccd_t.xccdld 
   DEFINE l_newno02     LIKE xccd_t.xccd002 
   DEFINE l_oldno02     LIKE xccd_t.xccd002 
   DEFINE l_newno03     LIKE xccd_t.xccd003 
   DEFINE l_oldno03     LIKE xccd_t.xccd003 
   DEFINE l_newno04     LIKE xccd_t.xccd004 
   DEFINE l_oldno04     LIKE xccd_t.xccd004 
   DEFINE l_newno05     LIKE xccd_t.xccd005 
   DEFINE l_oldno05     LIKE xccd_t.xccd005 
   DEFINE l_newno06     LIKE xccd_t.xccd006 
   DEFINE l_oldno06     LIKE xccd_t.xccd006 
 
   DEFINE l_master    RECORD LIKE xccd_t.*
   DEFINE l_detail    RECORD LIKE xccd_t.*
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point
   #add-point:reproduce段define
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_xccd_m.xccdld IS NULL
      OR g_xccd_m.xccd002 IS NULL
      OR g_xccd_m.xccd003 IS NULL
      OR g_xccd_m.xccd004 IS NULL
      OR g_xccd_m.xccd005 IS NULL
      OR g_xccd_m.xccd006 IS NULL
 
      THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_xccdld_t = g_xccd_m.xccdld
   LET g_xccd002_t = g_xccd_m.xccd002
   LET g_xccd003_t = g_xccd_m.xccd003
   LET g_xccd004_t = g_xccd_m.xccd004
   LET g_xccd005_t = g_xccd_m.xccd005
   LET g_xccd006_t = g_xccd_m.xccd006
 
   
   LET g_xccd_m.xccdld = ""
   LET g_xccd_m.xccd002 = ""
   LET g_xccd_m.xccd003 = ""
   LET g_xccd_m.xccd004 = ""
   LET g_xccd_m.xccd005 = ""
   LET g_xccd_m.xccd006 = ""
 
   LET g_master_insert = FALSE
   CALL axcq503_set_entry('a')
   CALL axcq503_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #清空key欄位的desc
      LET g_xccd_m.xccdld_desc = ''
   DISPLAY BY NAME g_xccd_m.xccdld_desc
   LET g_xccd_m.xccd003_desc = ''
   DISPLAY BY NAME g_xccd_m.xccd003_desc
 
   
   CALL axcq503_input("r")
    
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      INITIALIZE g_xccd_m.* TO NULL
      INITIALIZE g_xccd_d TO NULL
      INITIALIZE g_xccd2_d TO NULL
      INITIALIZE g_xccd3_d TO NULL
 
      CALL axcq503_show()
      LET INT_FLAG = 0
      RETURN 
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq503_set_act_visible()
   CALL axcq503_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_xccdld_t = g_xccd_m.xccdld
   LET g_xccd002_t = g_xccd_m.xccd002
   LET g_xccd003_t = g_xccd_m.xccd003
   LET g_xccd004_t = g_xccd_m.xccd004
   LET g_xccd005_t = g_xccd_m.xccd005
   LET g_xccd006_t = g_xccd_m.xccd006
 
   
   #組合新增資料的條件
   LET g_add_browse = " xccdent = '" ||g_enterprise|| "' AND",
                      " xccdld = '", g_xccd_m.xccdld, "' "
                      ," AND xccd002 = '", g_xccd_m.xccd002, "' "
                      ," AND xccd003 = '", g_xccd_m.xccd003, "' "
                      ," AND xccd004 = '", g_xccd_m.xccd004, "' "
                      ," AND xccd005 = '", g_xccd_m.xccd005, "' "
                      ," AND xccd006 = '", g_xccd_m.xccd006, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axcq503_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   LET g_curr_diag = ui.DIALOG.getCurrent()
   CALL axcq503_idx_chk()
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   #功能已完成,通報訊息中心
   CALL axcq503_msgcentre_notify('')
   
END FUNCTION

{</section>}

{<section id="axcq503.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axcq503_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xccd_t.*
 
 
   #add-point:delete段define
{<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define
{<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point 
#   
#   CALL s_transaction_begin()
#   
#   LET ld_date = cl_get_current()
#   
#   DROP TABLE axcq503_detail
   
   #add-point:單身複製前1
{<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
#   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axcq503_detail AS ",
#                "SELECT * FROM xccd_t "
#   PREPARE repro_tbl FROM ls_sql
#   EXECUTE repro_tbl
#   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
#   INSERT INTO axcq503_detail SELECT * FROM xccd_t 
#                                         WHERE xccdent = g_enterprise AND xccdld = g_xccdld_t
#                                         AND xccd002 = g_xccd002_t
#                                         AND xccd003 = g_xccd003_t
#                                         AND xccd004 = g_xccd004_t
#                                         AND xccd005 = g_xccd005_t
#                                         AND xccd006 = g_xccd006_t
# 
#   
   #將key修正為調整後   
#   UPDATE axcq503_detail 
#      #更新key欄位
#      SET xccdld = g_xccd_m.xccdld
#          , xccd002 = g_xccd_m.xccd002
#          , xccd003 = g_xccd_m.xccd003
#          , xccd004 = g_xccd_m.xccd004
#          , xccd005 = g_xccd_m.xccd005
#          , xccd006 = g_xccd_m.xccd006
# 
      #更新共用欄位
      
                                       
   #將資料塞回原table   
#   INSERT INTO xccd_t SELECT * FROM axcq503_detail
#   
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL 
#      LET g_errparam.extend = "reproduce" 
#      LET g_errparam.code   = SQLCA.sqlcode 
#      LET g_errparam.popup  = TRUE 
#      CALL cl_err()
#      RETURN
#   END IF
   
   #add-point:單身複製中1
{<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
#   DROP TABLE axcq503_detail
   
   #add-point:單身複製後1
{<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
      #應用 a38 樣板自動產生(Version:2)
   #單身多語言複製
#   DROP TABLE axcq503_detail_lang
   
   #add-point:單身複製前1
{<point name="detail_reproduce.body.lang0.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
#   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axcq503_detail_lang AS ",
#                "SELECT * FROM xccf_t "
#   PREPARE repro_xccf_t FROM ls_sql
#   EXECUTE repro_xccf_t
#   FREE repro_xccf_t
                
   #將符合條件的資料丟入TEMP TABLE
#   INSERT INTO axcq503_detail_lang SELECT * FROM xccf_t 
#                                             WHERE xccfent = g_enterprise AND  = g_xccdld_t
#                                             AND  = g_xccd002_t                                             AND  = g_xccd003_t                                             AND  = g_xccd004_t                                             AND  = g_xccd005_t                                             AND  = g_xccd006_t
   #將key修正為調整後   
#   UPDATE axcq503_detail_lang 
#      #更新key欄位
#      SET  = g_xccd_m.xccdld
#          ,  = g_xccd_m.xccd002          ,  = g_xccd_m.xccd003          ,  = g_xccd_m.xccd004          ,  = g_xccd_m.xccd005          ,  = g_xccd_m.xccd006
#  
   #將資料塞回原table   
#   INSERT INTO xccf_t SELECT * FROM axcq503_detail_lang
#   
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL 
#      LET g_errparam.extend = "reproduce" 
#      LET g_errparam.code   = SQLCA.sqlcode 
#      LET g_errparam.popup  = TRUE 
#      CALL cl_err()
# 
#      RETURN
#   END IF
   
   #add-point:單身複製中1
{<point name="detail_reproduce.lang0.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
#   DROP TABLE axcq503_detail_lang
   
   #add-point:單身複製後1
{<point name="detail_reproduce.lang0.table1.a_insert"/>}
   #end add-point
 
 
   
#   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
#   LET g_xccdld_t = g_xccd_m.xccdld
#   LET g_xccd002_t = g_xccd_m.xccd002
#   LET g_xccd003_t = g_xccd_m.xccd003
#   LET g_xccd004_t = g_xccd_m.xccd004
#   LET g_xccd005_t = g_xccd_m.xccd005
#   LET g_xccd006_t = g_xccd_m.xccd006
 
   
#   DROP TABLE axcq503_detail
   
END FUNCTION

{</section>}

{<section id="axcq503.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axcq503_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point
   
   IF g_xccd_m.xccdld IS NULL
   OR g_xccd_m.xccd002 IS NULL
   OR g_xccd_m.xccd003 IS NULL
   OR g_xccd_m.xccd004 IS NULL
   OR g_xccd_m.xccd005 IS NULL
   OR g_xccd_m.xccd006 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   
 
   OPEN axcq503_cl USING g_enterprise,g_xccd_m.xccdld,g_xccd_m.xccd002,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axcq503_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE axcq503_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axcq503_master_referesh USING g_xccd_m.xccdld,g_xccd_m.xccd002,g_xccd_m.xccd003,g_xccd_m.xccd004, 
       g_xccd_m.xccd005,g_xccd_m.xccd006 INTO g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd003,g_xccd_m.xccd004, 
       g_xccd_m.xccd005,g_xccd_m.xccd006,g_xccd_m.xccd007,g_xccd_m.xccd008,g_xccd_m.xccd010,g_xccd_m.xccd009, 
       g_xccd_m.xccd002,g_xccd_m.xccd007_desc
   
   #遮罩相關處理
   LET g_xccd_m_mask_o.* =  g_xccd_m.*
   CALL axcq503_xccd_t_mask()
   LET g_xccd_m_mask_n.* =  g_xccd_m.*
   
   CALL axcq503_show()
 
   #單頭多語言資料備份
   
   
   IF cl_ask_del_master() THEN              #確認一下
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL axcq503_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM xccd_t WHERE xccdent = g_enterprise AND xccdld = g_xccd_m.xccdld
                                                               AND xccd002 = g_xccd_m.xccd002
                                                               AND xccd003 = g_xccd_m.xccd003
                                                               AND xccd004 = g_xccd_m.xccd004
                                                               AND xccd005 = g_xccd_m.xccd005
                                                               AND xccd006 = g_xccd_m.xccd006
 
                                                               
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xccd_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
      END IF
 
      
  
      #add-point:單身刪除後 
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
 
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
      
      #頭先不紀錄
      #IF NOT cl_log_modified_record('','') THEN 
      #   CLOSE axcq503_cl
      #   CALL s_transaction_end('N','0')
      #   RETURN 
      #END IF
      
      CLEAR FORM
      CALL g_xccd_d.clear() 
      CALL g_xccd2_d.clear()       
      CALL g_xccd3_d.clear()       
 
     
      CALL axcq503_ui_browser_refresh()  
      #CALL axcq503_ui_headershow()  
      #CALL axcq503_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axcq503_fetch('P')
      ELSE
         #LET g_wc = " 1=1"
         #LET g_wc2 = " 1=1"
         #CALL axcq503_browser_fill("F")
         CLEAR FORM
      END IF
       
   END IF
 
   CLOSE axcq503_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axcq503_msgcentre_notify('')
    
END FUNCTION

{</section>}

{<section id="axcq503.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axcq503_b_fill(p_wc2)
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
{<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define
{<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point
   
   #先清空單身變數內容
   CALL g_xccd_d.clear()
   CALL g_xccd2_d.clear()
   CALL g_xccd3_d.clear()
 
 
   #add-point:b_fill段sql_before
{<point name="b_fill.sql_before"/>}
   #end add-point
   
   LET g_sql = "SELECT  UNIQUE xccd101,xccd201,xccd204,xccd301,xccd303,xccd901,xccd001,xccd001 FROM xccd_t", 
          
               " LEFT JOIN xccf_t ON xccfent = '"||g_enterprise||"' AND xccdld = xccd002 = xccd003 = xccd004 = xccd005 = xccd006 = xccd001 =",
               
               
               " WHERE xccdent= ? AND xccdld=? AND xccd002=? AND xccd003=? AND xccd004=? AND xccd005=? AND xccd006=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("xccd_t")
   END IF
   
   #add-point:b_fill段sql_after
{<point name="b_fill.sql_after"/>}
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF axcq503_fill_chk(1) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = g_sql, " ORDER BY xccd_t.xccd001"
         #add-point:b_fill段fill_before
{<point name="b_fill.fill_before"/>}
         #end add-point
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axcq503_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axcq503_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xccd_m.xccdld,g_xccd_m.xccd002,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006
                                               
      FOREACH b_fill_cs INTO g_xccd_d[l_ac].xccd101,g_xccd_d[l_ac].xccd201,g_xccd_d[l_ac].xccd204,g_xccd_d[l_ac].xccd301, 
          g_xccd_d[l_ac].xccd303,g_xccd_d[l_ac].xccd901,g_xccd_d[l_ac].xccd001,g_xccd3_d[l_ac].xccd001_2 

                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充
{<point name="b_fill.fill"/>}
         #end add-point
      
         #帶出公用欄位reference值
         
         
         
         
 
        
         #add-point:單身資料抓取
{<point name="bfill.foreach"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF 
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         
      END FOREACH
 
            CALL g_xccd_d.deleteElement(g_xccd_d.getLength())
      CALL g_xccd2_d.deleteElement(g_xccd2_d.getLength())
      CALL g_xccd3_d.deleteElement(g_xccd3_d.getLength())
 
      
   END IF
   
   #add-point:b_fill段more
{<point name="b_fill.more"/>}
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   #遮罩相關處理
   FOR l_ac = 1 TO g_xccd_d.getLength()
      LET g_xccd_d_mask_o[l_ac].* =  g_xccd_d[l_ac].*
      CALL axcq503_xccd_t_mask()
      LET g_xccd_d_mask_n[l_ac].* =  g_xccd_d[l_ac].*
   END FOR
   
   LET g_xccd2_d_mask_o.* =  g_xccd2_d.*
   FOR l_ac = 1 TO g_xccd2_d.getLength()
      LET g_xccd2_d_mask_o[l_ac].* =  g_xccd2_d[l_ac].*
      CALL axcq503_xccd_t_mask()
      LET g_xccd2_d_mask_n[l_ac].* =  g_xccd2_d[l_ac].*
   END FOR
   LET g_xccd3_d_mask_o.* =  g_xccd3_d.*
   FOR l_ac = 1 TO g_xccd3_d.getLength()
      LET g_xccd3_d_mask_o[l_ac].* =  g_xccd3_d[l_ac].*
      CALL axcq503_xccd_t_mask()
      LET g_xccd3_d_mask_n[l_ac].* =  g_xccd3_d[l_ac].*
   END FOR
 
 
   FREE axcq503_pb   
   
END FUNCTION

{</section>}

{<section id="axcq503.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axcq503_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #判定目前選擇的頁面
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      #確保當下指標的位置未超過上限
      IF g_detail_idx > g_xccd_d.getLength() THEN
         LET g_detail_idx = g_xccd_d.getLength()
      END IF
      #確保資料位置不小於1
      IF g_detail_idx = 0 AND g_xccd_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      #將筆數資料顯示到畫面上
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xccd_d.getLength() TO FORMONLY.cnt
      #將位置顯示到正確筆數上
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   END IF
    
   #同第一個page的做法進行其他頁面的處理
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_xccd2_d.getLength() THEN
         LET g_detail_idx = g_xccd2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xccd2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xccd2_d.getLength() TO FORMONLY.cnt
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_xccd3_d.getLength() THEN
         LET g_detail_idx = g_xccd3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xccd3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xccd3_d.getLength() TO FORMONLY.cnt
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="axcq503.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axcq503_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_xccd_d.getLength() <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION

{</section>}

{<section id="axcq503.before_delete" >}
#+ 單身db資料刪除
PRIVATE FUNCTION axcq503_before_delete()
   #add-point:before_delete段define
   {<point name="before_delete.define" edit="s"/>}
   #end add-point 
   #add-point:before_delete段define
   {<point name="before_delete.define_customerization" edit="c"/>}
   #end add-point 
   #add-point:單筆刪除前
   {<point name="delete.body.b_single_delete" mark="Y"/>}
   #end add-point
   
   DELETE FROM xccd_t
    WHERE xccdent = g_enterprise AND xccdld = g_xccd_m.xccdld AND
                              xccd002 = g_xccd_m.xccd002 AND
                              xccd003 = g_xccd_m.xccd003 AND
                              xccd004 = g_xccd_m.xccd004 AND
                              xccd005 = g_xccd_m.xccd005 AND
                              xccd006 = g_xccd_m.xccd006 AND
 
          xccd001 = g_xccd_d_t.xccd001
 
      
   #add-point:單筆刪除中
   {<point name="delete.body.m_single_delete"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xccd_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後
   {<point name="delete.body.a_single_delete"/>}
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION

{</section>}

{<section id="axcq503.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axcq503_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION

{</section>}

{<section id="axcq503.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axcq503_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION

{</section>}

{<section id="axcq503.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axcq503_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point     
   #add-point:update_b段define
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point 
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
END FUNCTION

{</section>}

{<section id="axcq503.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正其他單身key欄位
PRIVATE FUNCTION axcq503_key_update_b(ps_keys_bak)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
   #判斷key是否有改變, 若無改變則返回
   IF g_xccd_d[l_ac].xccd001 = g_xccd_d_t.xccd001 
 
      THEN
      RETURN
   END IF
    
 
   
END FUNCTION

{</section>}

{<section id="axcq503.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axcq503_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point
   
   #先刷新資料
   #CALL axcq503_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="axcq503.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axcq503_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point
   
 
 
END FUNCTION

{</section>}

{<section id="axcq503.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axcq503_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point 
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xccdld,xccd002,xccd003,xccd004,xccd005,xccd006",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="axcq503.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axcq503_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xccdld,xccd002,xccd003,xccd004,xccd005,xccd006",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="axcq503.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axcq503_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point 
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="axcq503.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axcq503_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b段"/>}
   #end add-point 
   
END FUNCTION

{</section>}

{<section id="axcq503.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION axcq503_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point
END FUNCTION

{</section>}

{<section id="axcq503.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION axcq503_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point
END FUNCTION

{</section>}

{<section id="axcq503.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION axcq503_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point
END FUNCTION

{</section>}

{<section id="axcq503.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION axcq503_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point
END FUNCTION

{</section>}

{<section id="axcq503.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axcq503_default_search()
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point 
   #add-point:default_search段define
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xccdld = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xccd002 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xccd003 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " xccd004 = '", g_argv[04], "' AND "
   END IF
   IF NOT cl_null(g_argv[05]) THEN
      LET ls_wc = ls_wc, " xccd005 = '", g_argv[05], "' AND "
   END IF
   IF NOT cl_null(g_argv[06]) THEN
      LET ls_wc = ls_wc, " xccd006 = '", g_argv[06], "' AND "
   END IF
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
END FUNCTION

{</section>}

{<section id="axcq503.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axcq503_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
   
   #add-point:fill_chk段other
   {<point name="fill_chk.other"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="axcq503.modify_detail_chk" >}
#+ 單身輸入判定
PRIVATE FUNCTION axcq503_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define" edit="s"/>}
   #end add-point
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define_customerization" edit="c"/>}
   #end add-point
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "item"
      WHEN "s_detail2"
         LET ls_return = "item1"
      WHEN "s_detail3"
         LET ls_return = "xccd001_3"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION

{</section>}

{<section id="axcq503.mask_functions" >}
&include "erp/axc/axcq503_mask.4gl"

{</section>}

{<section id="axcq503.state_change" >}
    

{</section>}

{<section id="axcq503.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION axcq503_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xccd_m.xccdld
   LET g_pk_array[1].column = 'xccdld'
   LET g_pk_array[2].values = g_xccd_m.xccd002
   LET g_pk_array[2].column = 'xccd002'
   LET g_pk_array[3].values = g_xccd_m.xccd003
   LET g_pk_array[3].column = 'xccd003'
   LET g_pk_array[4].values = g_xccd_m.xccd004
   LET g_pk_array[4].column = 'xccd004'
   LET g_pk_array[5].values = g_xccd_m.xccd005
   LET g_pk_array[5].column = 'xccd005'
   LET g_pk_array[6].values = g_xccd_m.xccd006
   LET g_pk_array[6].column = 'xccd006'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 

{</section>}

{<section id="axcq503.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:2)
PRIVATE FUNCTION axcq503_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr5
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   IF g_action_choice = "statechange" THEN
      LET g_msgparam.state = g_action_choice,":",lc_state
   ELSE
      LET g_msgparam.state = g_action_choice
   END IF
 
   #PK資料填寫
   CALL axcq503_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xccd_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 

{</section>}

{<section id="axcq503.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

