#該程式未解開Section, 採用最新樣板產出!
{<section id="axcp801.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0001(2016-12-01 20:20:46), PR版次:
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:
#+ Build......: 000008
#+ Filename...: axcp801
#+ Description: LCM料件評價單價計算作業
#+ Creator....: 02040(2016-11-22 14:56:15)
#+ Modifier...: 02040 -SD/PR-

{</section>}

{<section id="axcp801.global" >}
#應用 p01 樣板自動產生(Version:19)
#add-point:填寫註解說明 name="global.memo" name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目 name="global.import"
{<point name="global.import"/>}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE g_chk_jobid          LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable) name="global.parameter"
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       xccccomp LIKE xccc_t.xccccomp, 
   xcccld_desc LIKE type_t.chr80, 
   xcccld LIKE xccc_t.xcccld, 
   xccccomp_desc LIKE type_t.chr80, 
   xccc004 LIKE xccc_t.xccc004, 
   xccc005 LIKE xccc_t.xccc005, 
   xccc003 LIKE xccc_t.xccc003, 
   xccc003_desc LIKE type_t.chr80, 
   xccc001 LIKE xccc_t.xccc001, 
   xccc006 LIKE xccc_t.xccc006, 
   xccc002 LIKE xccc_t.xccc002, 
   xccc007 LIKE xccc_t.xccc007, 
   xccc008 LIKE xccc_t.xccc008, 
   imaf011 LIKE imaf_t.imaf011, 
   imaf111 LIKE imaf_t.imaf111, 
   imaf051 LIKE imaf_t.imaf051, 
   imag011 LIKE imag_t.imag011, 
   bdate LIKE type_t.dat, 
   edate LIKE type_t.dat, 
   bdate2 LIKE type_t.dat, 
   ware_nor LIKE type_t.chr500, 
   ware_muti LIKE type_t.chr500, 
   ware_oth LIKE type_t.chr500, 
   xcfa006 LIKE xcfa_t.xcfa006, 
   xcfa007 LIKE xcfa_t.xcfa007, 
   xcfa008 LIKE xcfa_t.xcfa008, 
   xcfa009 LIKE xcfa_t.xcfa009, 
   xcfa012 LIKE type_t.chr500, 
   xcfa005 LIKE xcfa_t.xcfa005, 
   xcfa011 LIKE xcfa_t.xcfa011, 
   xcfa013_1 LIKE type_t.chr500, 
   xcfa013_2 LIKE type_t.chr500, 
   xcfa013_3 LIKE type_t.chr500, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable) name="global.variable"
{<point name="global.variable"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明 name="global.argv"
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="axcp801.main" >}
MAIN
   #add-point:main段define (客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point 
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define name="main.define"
   {<point name="main.define"/>}
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義 name="main.before_ap_init"
   {<point name="main.before_ap_init"/>}
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js name="main.background"
   {<point name="main.background"/>}
   #end add-point
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
     #CALL util.JSON.parse(ls_js,g_master)   #p類主要使用l_param,此處不解析
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall"/>}
      #end add-point
      CALL axcp801_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axcp801 WITH FORM cl_ap_formpath("axc",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL axcp801_init()
 
      #進入選單 Menu (="N")
      CALL axcp801_ui_dialog()
 
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close"/>}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_axcp801
   END IF
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit"/>}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN

{</section>}

{<section id="axcp801.init" >}
#+ 初始化作業
PRIVATE FUNCTION axcp801_init()
 
   #add-point:init段define (客製用) name="init.define_customerization"
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point
   #add-point:ui_dialog段define name="init.define"
   {<point name="init.define"/>}
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="axcp801.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION axcp801_ui_dialog()
 
   #add-point:ui_dialog段define (客製用) name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define name="ui_dialog.define"
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   #add-point:ui_dialog段before dialog name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2 name="ui_dialog.before_dialog2"
      {<point name="ui_dialog.before_dialog2"/>}
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:3)
         INPUT BY NAME g_master.xccccomp,g_master.xcccld,g_master.xccc004,g_master.xccc005,g_master.xccc003, 
             g_master.xccc001,g_master.bdate,g_master.edate,g_master.bdate2,g_master.ware_nor,g_master.ware_muti, 
             g_master.ware_oth 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前 name="input.m.before_input"
               {<point name="input.m.before_input"/>}
               #end add-point
         
                     #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccccomp
            
            #add-point:AFTER FIELD xccccomp name="input.a.xccccomp"
            {<point name="input.a.xccccomp" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccccomp
            #add-point:BEFORE FIELD xccccomp name="input.b.xccccomp"
            {<point name="input.b.xccccomp" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccccomp
            #add-point:ON CHANGE xccccomp name="input.g.xccccomp"
            {<point name="input.g.xccccomp" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xcccld
            
            #add-point:AFTER FIELD xcccld name="input.a.xcccld"
            {<point name="input.a.xcccld" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xcccld
            #add-point:BEFORE FIELD xcccld name="input.b.xcccld"
            {<point name="input.b.xcccld" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xcccld
            #add-point:ON CHANGE xcccld name="input.g.xcccld"
            {<point name="input.g.xcccld" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccc004
            #add-point:BEFORE FIELD xccc004 name="input.b.xccc004"
            {<point name="input.b.xccc004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccc004
            
            #add-point:AFTER FIELD xccc004 name="input.a.xccc004"
            {<point name="input.a.xccc004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccc004
            #add-point:ON CHANGE xccc004 name="input.g.xccc004"
            {<point name="input.g.xccc004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccc005
            #add-point:BEFORE FIELD xccc005 name="input.b.xccc005"
            {<point name="input.b.xccc005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccc005
            
            #add-point:AFTER FIELD xccc005 name="input.a.xccc005"
            {<point name="input.a.xccc005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccc005
            #add-point:ON CHANGE xccc005 name="input.g.xccc005"
            {<point name="input.g.xccc005" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccc003
            
            #add-point:AFTER FIELD xccc003 name="input.a.xccc003"
            {<point name="input.a.xccc003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccc003
            #add-point:BEFORE FIELD xccc003 name="input.b.xccc003"
            {<point name="input.b.xccc003" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccc003
            #add-point:ON CHANGE xccc003 name="input.g.xccc003"
            {<point name="input.g.xccc003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccc001
            #add-point:BEFORE FIELD xccc001 name="input.b.xccc001"
            {<point name="input.b.xccc001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccc001
            
            #add-point:AFTER FIELD xccc001 name="input.a.xccc001"
            {<point name="input.a.xccc001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xccc001
            #add-point:ON CHANGE xccc001 name="input.g.xccc001"
            {<point name="input.g.xccc001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bdate
            #add-point:BEFORE FIELD bdate name="input.b.bdate"
            {<point name="input.b.bdate" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bdate
            
            #add-point:AFTER FIELD bdate name="input.a.bdate"
            {<point name="input.a.bdate" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bdate
            #add-point:ON CHANGE bdate name="input.g.bdate"
            {<point name="input.g.bdate" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD edate
            #add-point:BEFORE FIELD edate name="input.b.edate"
            {<point name="input.b.edate" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD edate
            
            #add-point:AFTER FIELD edate name="input.a.edate"
            {<point name="input.a.edate" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE edate
            #add-point:ON CHANGE edate name="input.g.edate"
            {<point name="input.g.edate" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bdate2
            #add-point:BEFORE FIELD bdate2 name="input.b.bdate2"
            {<point name="input.b.bdate2" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bdate2
            
            #add-point:AFTER FIELD bdate2 name="input.a.bdate2"
            {<point name="input.a.bdate2" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bdate2
            #add-point:ON CHANGE bdate2 name="input.g.bdate2"
            {<point name="input.g.bdate2" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ware_nor
            #add-point:BEFORE FIELD ware_nor name="input.b.ware_nor"
            {<point name="input.b.ware_nor" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ware_nor
            
            #add-point:AFTER FIELD ware_nor name="input.a.ware_nor"
            {<point name="input.a.ware_nor" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE ware_nor
            #add-point:ON CHANGE ware_nor name="input.g.ware_nor"
            {<point name="input.g.ware_nor" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ware_muti
            #add-point:BEFORE FIELD ware_muti name="input.b.ware_muti"
            {<point name="input.b.ware_muti" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ware_muti
            
            #add-point:AFTER FIELD ware_muti name="input.a.ware_muti"
            {<point name="input.a.ware_muti" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE ware_muti
            #add-point:ON CHANGE ware_muti name="input.g.ware_muti"
            {<point name="input.g.ware_muti" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD ware_oth
            #add-point:BEFORE FIELD ware_oth name="input.b.ware_oth"
            {<point name="input.b.ware_oth" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD ware_oth
            
            #add-point:AFTER FIELD ware_oth name="input.a.ware_oth"
            {<point name="input.a.ware_oth" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE ware_oth
            #add-point:ON CHANGE ware_oth name="input.g.ware_oth"
            {<point name="input.g.ware_oth" />}
            #END add-point 
 
 
 
                     #Ctrlp:input.c.xccccomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccccomp
            #add-point:ON ACTION controlp INFIELD xccccomp name="input.c.xccccomp"
            {<point name="input.c.xccccomp" />}
            #END add-point
 
 
         #Ctrlp:input.c.xcccld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xcccld
            #add-point:ON ACTION controlp INFIELD xcccld name="input.c.xcccld"
            {<point name="input.c.xcccld" />}
            #END add-point
 
 
         #Ctrlp:input.c.xccc004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccc004
            #add-point:ON ACTION controlp INFIELD xccc004 name="input.c.xccc004"
            {<point name="input.c.xccc004" />}
            #END add-point
 
 
         #Ctrlp:input.c.xccc005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccc005
            #add-point:ON ACTION controlp INFIELD xccc005 name="input.c.xccc005"
            {<point name="input.c.xccc005" />}
            #END add-point
 
 
         #Ctrlp:input.c.xccc003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccc003
            #add-point:ON ACTION controlp INFIELD xccc003 name="input.c.xccc003"
            {<point name="input.c.xccc003" />}
            #END add-point
 
 
         #Ctrlp:input.c.xccc001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccc001
            #add-point:ON ACTION controlp INFIELD xccc001 name="input.c.xccc001"
            {<point name="input.c.xccc001" />}
            #END add-point
 
 
         #Ctrlp:input.c.bdate
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bdate
            #add-point:ON ACTION controlp INFIELD bdate name="input.c.bdate"
            {<point name="input.c.bdate" />}
            #END add-point
 
 
         #Ctrlp:input.c.edate
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD edate
            #add-point:ON ACTION controlp INFIELD edate name="input.c.edate"
            {<point name="input.c.edate" />}
            #END add-point
 
 
         #Ctrlp:input.c.bdate2
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bdate2
            #add-point:ON ACTION controlp INFIELD bdate2 name="input.c.bdate2"
            {<point name="input.c.bdate2" />}
            #END add-point
 
 
         #Ctrlp:input.c.ware_nor
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ware_nor
            #add-point:ON ACTION controlp INFIELD ware_nor name="input.c.ware_nor"
            {<point name="input.c.ware_nor" />}
            #END add-point
 
 
         #Ctrlp:input.c.ware_muti
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ware_muti
            #add-point:ON ACTION controlp INFIELD ware_muti name="input.c.ware_muti"
            {<point name="input.c.ware_muti" />}
            #END add-point
 
 
         #Ctrlp:input.c.ware_oth
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD ware_oth
            #add-point:ON ACTION controlp INFIELD ware_oth name="input.c.ware_oth"
            {<point name="input.c.ware_oth" />}
            #END add-point
 
 
 
               
            AFTER INPUT
               #add-point:資料輸入後 name="input.m.after_input"
               {<point name="input.m.after_input"/>}
               #end add-point
               
            #add-point:其他管控(on row change, etc...) name="input.other"
            {<point name="input.other"/>}
            #end add-point
         END INPUT
 
 
 
         
         #應用 a58 樣板自動產生(Version:3)
         CONSTRUCT BY NAME g_master.wc ON xccc006,xccc002,xccc007,xccc008,imaf011,imaf111,imaf051,imag011 

            BEFORE CONSTRUCT
               #add-point:cs段before_construct name="cs.head.before_construct"
               {<point name="cs.head.before_construct"/>}
               #end add-point 
         
            #公用欄位開窗相關處理
            
               
            #一般欄位開窗相關處理    
                     #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccc006
            #add-point:BEFORE FIELD xccc006 name="construct.b.xccc006"
            {<point name="construct.b.xccc006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccc006
            
            #add-point:AFTER FIELD xccc006 name="construct.a.xccc006"
            {<point name="construct.a.xccc006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xccc006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccc006
            #add-point:ON ACTION controlp INFIELD xccc006 name="construct.c.xccc006"
            {<point name="construct.c.xccc006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccc002
            #add-point:BEFORE FIELD xccc002 name="construct.b.xccc002"
            {<point name="construct.b.xccc002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccc002
            
            #add-point:AFTER FIELD xccc002 name="construct.a.xccc002"
            {<point name="construct.a.xccc002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xccc002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccc002
            #add-point:ON ACTION controlp INFIELD xccc002 name="construct.c.xccc002"
            {<point name="construct.c.xccc002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccc007
            #add-point:BEFORE FIELD xccc007 name="construct.b.xccc007"
            {<point name="construct.b.xccc007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccc007
            
            #add-point:AFTER FIELD xccc007 name="construct.a.xccc007"
            {<point name="construct.a.xccc007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xccc007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccc007
            #add-point:ON ACTION controlp INFIELD xccc007 name="construct.c.xccc007"
            {<point name="construct.c.xccc007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xccc008
            #add-point:BEFORE FIELD xccc008 name="construct.b.xccc008"
            {<point name="construct.b.xccc008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xccc008
            
            #add-point:AFTER FIELD xccc008 name="construct.a.xccc008"
            {<point name="construct.a.xccc008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.xccc008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xccc008
            #add-point:ON ACTION controlp INFIELD xccc008 name="construct.c.xccc008"
            {<point name="construct.c.xccc008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaf011
            #add-point:BEFORE FIELD imaf011 name="construct.b.imaf011"
            {<point name="construct.b.imaf011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaf011
            
            #add-point:AFTER FIELD imaf011 name="construct.a.imaf011"
            {<point name="construct.a.imaf011" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imaf011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaf011
            #add-point:ON ACTION controlp INFIELD imaf011 name="construct.c.imaf011"
            {<point name="construct.c.imaf011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaf111
            #add-point:BEFORE FIELD imaf111 name="construct.b.imaf111"
            {<point name="construct.b.imaf111" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaf111
            
            #add-point:AFTER FIELD imaf111 name="construct.a.imaf111"
            {<point name="construct.a.imaf111" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imaf111
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaf111
            #add-point:ON ACTION controlp INFIELD imaf111 name="construct.c.imaf111"
            {<point name="construct.c.imaf111" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaf051
            #add-point:BEFORE FIELD imaf051 name="construct.b.imaf051"
            {<point name="construct.b.imaf051" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaf051
            
            #add-point:AFTER FIELD imaf051 name="construct.a.imaf051"
            {<point name="construct.a.imaf051" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imaf051
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaf051
            #add-point:ON ACTION controlp INFIELD imaf051 name="construct.c.imaf051"
            {<point name="construct.c.imaf051" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imag011
            #add-point:BEFORE FIELD imag011 name="construct.b.imag011"
            {<point name="construct.b.imag011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imag011
            
            #add-point:AFTER FIELD imag011 name="construct.a.imag011"
            {<point name="construct.a.imag011" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imag011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imag011
            #add-point:ON ACTION controlp INFIELD imag011 name="construct.c.imag011"
            {<point name="construct.c.imag011" />}
            #END add-point
 
 
 
            
            #add-point:其他管控 name="cs.other"
            {<point name="cs.other"/>}
            #end add-point
            
         END CONSTRUCT
 
 
 
      
         #add-point:ui_dialog段construct name="ui_dialog.more_construct"
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input name="ui_dialog.more_input"
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL axcp801_get_buffer(l_dialog)
            #add-point:ui_dialog段before dialog name="ui_dialog.before_dialog3"
            {<point name="ui_dialog.before_dialog3"/>}
            #end add-point
 
         ON ACTION batch_execute
            LET g_action_choice = "batch_execute"
            ACCEPT DIALOG
 
         #add-point:ui_dialog段before_qbeclear name="ui_dialog.before_qbeclear"
         {<point name="ui_dialog.before_qbeclear" mark="Y"/>}
         #end add-point
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear name="ui_dialog.qbeclear"
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action name="ui_dialog.more_action"
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL axcp801_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
      
      LET lc_param.wc = g_master.wc    #把畫面上的wc傳遞到參數變數
      #請在下方的add-point內進行把畫面的輸入資料(g_master)轉換到傳遞參數變數(lc_param)的動作
      #add-point:ui_dialog段exit dialog name="process.exit_dialog"
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL axcp801_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = axcp801_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule name="process.after_schedule"
         {<point name="process.after_schedule"/>}
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION

{</section>}

{<section id="axcp801.transfer_argv" >}
#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION axcp801_transfer_argv(ls_js)
 
   #add-point:transfer_agrv段define (客製用) name="transfer_agrv.define_customerization"
   {<point name="transfer_agrv.define_customerization" edit="c"/>}
   #end add-point
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define name="transfer_agrv.define"
   {<point name="transfer_agrv.define"/>}
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容 name="transfer.argv.define"
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION

{</section>}

{<section id="axcp801.process" >}
#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION axcp801_process(ls_js)
 
   #add-point:process段define (客製用) name="process.define_customerization"
   {<point name="process.define_customerization" edit="c"/>}
   #end add-point
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_p01_status LIKE type_t.num5
   #add-point:process段define name="process.define"
   {<point name="process.define"/>}
   #end add-point
 
  #INITIALIZE lc_param TO NULL           #p類不可以清空
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
   LET li_p01_status = 1
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理 name="process.pre_process"
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress name="process.count_progress"
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE axcp801_process_cs CURSOR FROM ls_sql
#  FOREACH axcp801_process_cs INTO
   #add-point:process段process name="process.process"
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理 name="process.foreground_finish"
      {<point name="process.foreground_finish"/>}
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理 name="process.background_finish"
      {<point name="process.background_finish"/>}
      #end add-point
      CALL cl_schedule_exec_call(li_p01_status)
   END IF
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL axcp801_msgcentre_notify()
 
END FUNCTION

{</section>}

{<section id="axcp801.get_buffer" >}
PRIVATE FUNCTION axcp801_get_buffer(p_dialog)
 
   #add-point:process段define (客製用) name="get_buffer.define_customerization"
   {<point name="get_buffer.define_customerization" edit="c"/>}
   #end add-point
   DEFINE p_dialog   ui.DIALOG
   #add-point:process段define name="get_buffer.define"
   {<point name="get_buffer.define"/>}
   #end add-point
 
   
   LET g_master.xccccomp = p_dialog.getFieldBuffer('xccccomp')
   LET g_master.xcccld = p_dialog.getFieldBuffer('xcccld')
   LET g_master.xccc004 = p_dialog.getFieldBuffer('xccc004')
   LET g_master.xccc005 = p_dialog.getFieldBuffer('xccc005')
   LET g_master.xccc003 = p_dialog.getFieldBuffer('xccc003')
   LET g_master.xccc001 = p_dialog.getFieldBuffer('xccc001')
   LET g_master.bdate = p_dialog.getFieldBuffer('bdate')
   LET g_master.edate = p_dialog.getFieldBuffer('edate')
   LET g_master.bdate2 = p_dialog.getFieldBuffer('bdate2')
   LET g_master.ware_nor = p_dialog.getFieldBuffer('ware_nor')
   LET g_master.ware_muti = p_dialog.getFieldBuffer('ware_muti')
   LET g_master.ware_oth = p_dialog.getFieldBuffer('ware_oth')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理 name="get_buffer.others"
   {<point name="get_buffer.others"/>}
   #end add-point
END FUNCTION

{</section>}

{<section id="axcp801.msgcentre_notify" >}
PRIVATE FUNCTION axcp801_msgcentre_notify()
 
   #add-point:process段define (客製用) name="msgcentre_notify.define_customerization"
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point
   DEFINE lc_state LIKE type_t.chr5
   #add-point:process段define name="msgcentre_notify.define"
   {<point name="msgcentre_notify.define"/>}
   #end add-point
 
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = "process"
 
   #add-point:msgcentre其他通知 name="msg_centre.process"
   {<point name="msg_centre.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION

{</section>}

{<section id="axcp801.other_function" readonly="Y" >}
#add-point:自定義元件(Function) name="other.function"
{<point name="other.function"/>}
#end add-point

{</section>}

