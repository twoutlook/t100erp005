#該程式已解開Section, 不再透過樣板產出!
{<section id="axcq541.description" >}
#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000013
#+ 
#+ Filename...: axcq541
#+ Description: 工單在製累計投入和轉出查詢作業
#+ Creator....: 00537(2015-03-17 10:36:08)
#+ Modifier...: 00537(2015-03-18 11:08:28) -SD/PR-

{</section>}

{<section id="axcq541.global" >}
#應用 t01 樣板自動產生(Version:25)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xccd_m        RECORD
       xccdcomp LIKE xccd_t.xccdcomp, 
   xccdcomp_desc LIKE type_t.chr80, 
   xccdld LIKE xccd_t.xccdld, 
   xccdld_desc LIKE type_t.chr80, 
   xccd004 LIKE xccd_t.xccd004, 
   xccd005 LIKE xccd_t.xccd005, 
   xccd001 LIKE xccd_t.xccd001, 
   xccd001_desc LIKE type_t.chr80, 
   xccd003 LIKE xccd_t.xccd003, 
   xccd003_desc LIKE type_t.chr80, 
   xccd002 LIKE xccd_t.xccd002, 
   xccd002_desc LIKE type_t.chr80, 
   xccd006 LIKE xccd_t.xccd006, 
   sfaa019 LIKE type_t.chr80, 
   sfaa020 LIKE type_t.chr80, 
   xccd007 LIKE xccd_t.xccd007, 
   sfaa012 LIKE type_t.num20_6, 
   sfaa049 LIKE type_t.num20_6, 
   xccd007_desc LIKE type_t.chr80, 
   xccd301_sum LIKE type_t.num20_6, 
   xccd301 LIKE xccd_t.xccd301, 
   xccd007_desc_1 LIKE type_t.chr80, 
   xcbk100 LIKE type_t.num20_6, 
   xcbk100_1 LIKE type_t.num20_6,
   chk       LIKE type_t.chr1    #wujie 150419
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xcce_d        RECORD
       xcce002 LIKE xcce_t.xcce002, 
   xcce002_desc LIKE type_t.chr500, 
   xcce007 LIKE xcce_t.xcce007, 
   xcce007_desc LIKE type_t.chr500, 
   xcce007_desc_1 LIKE type_t.chr500, 
   xcce008 LIKE xcce_t.xcce008, 
   xcce009 LIKE xcce_t.xcce009, 
   xcbb005 LIKE type_t.chr500, 
   xcbb005_desc LIKE type_t.chr500, 
   xcce201 LIKE xcce_t.xcce201, 
   xcce202a LIKE xcce_t.xcce202a, 
   xcce202b LIKE xcce_t.xcce202b, 
   xcce202c LIKE xcce_t.xcce202c, 
   xcce202d LIKE xcce_t.xcce202d, 
   xcce202e LIKE xcce_t.xcce202e, 
   xcce202f LIKE xcce_t.xcce202f, 
   xcce202g LIKE xcce_t.xcce202g, 
   xcce202h LIKE xcce_t.xcce202h, 
   xcce202 LIKE xcce_t.xcce202, 
   xcce301_sum LIKE xcce_t.xcce301, 
   xcce302a_sum LIKE xcce_t.xcce302a, 
   xcce302b_sum LIKE xcce_t.xcce302b, 
   xcce302c_sum LIKE xcce_t.xcce302c, 
   xcce302d_sum LIKE xcce_t.xcce302d, 
   xcce302e_sum LIKE xcce_t.xcce302e, 
   xcce302f_sum LIKE xcce_t.xcce302f, 
   xcce302g_sum LIKE xcce_t.xcce302g, 
   xcce302h_sum LIKE xcce_t.xcce302h, 
   xcce302_sum LIKE xcce_t.xcce302, 
   xcce301 LIKE xcce_t.xcce301, 
   xcce302a LIKE xcce_t.xcce302a, 
   xcce302b LIKE xcce_t.xcce302b, 
   xcce302c LIKE xcce_t.xcce302c, 
   xcce302d LIKE xcce_t.xcce302d, 
   xcce302e LIKE xcce_t.xcce302e, 
   xcce302f LIKE xcce_t.xcce302f, 
   xcce302g LIKE xcce_t.xcce302g, 
   xcce302h LIKE xcce_t.xcce302h, 
   xcce302 LIKE xcce_t.xcce302,
   xcce_price LIKE xccc_t.xccc280,          
   xcce_conv_rate LIKE type_t.num26_10,    #wujie 150416
   xcce_conv_price LIKE xccc_t.xccc280,    #wujie 150416
   xcce303 LIKE xcce_t.xcce303, 
   xcce304a LIKE xcce_t.xcce304a, 
   xcce304b LIKE xcce_t.xcce304b, 
   xcce304c LIKE xcce_t.xcce304c, 
   xcce304d LIKE xcce_t.xcce304d, 
   xcce304e LIKE xcce_t.xcce304e, 
   xcce304f LIKE xcce_t.xcce304f, 
   xcce304g LIKE xcce_t.xcce304g, 
   xcce304h LIKE xcce_t.xcce304h, 
   xcce304 LIKE xcce_t.xcce304, 
   xcce901 LIKE xcce_t.xcce901, 
   xcce902a LIKE xcce_t.xcce902a, 
   xcce902b LIKE xcce_t.xcce902b, 
   xcce902c LIKE xcce_t.xcce902c, 
   xcce902d LIKE xcce_t.xcce902d, 
   xcce902e LIKE xcce_t.xcce902e, 
   xcce902f LIKE xcce_t.xcce902f, 
   xcce902g LIKE xcce_t.xcce902g, 
   xcce902h LIKE xcce_t.xcce902h, 
   xcce902 LIKE xcce_t.xcce902
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_xccd_m          type_g_xccd_m
DEFINE g_xccd_m_t        type_g_xccd_m
DEFINE g_xccd_m_o        type_g_xccd_m
 
   DEFINE g_xccdld_t LIKE xccd_t.xccdld
DEFINE g_xccd004_t LIKE xccd_t.xccd004
DEFINE g_xccd005_t LIKE xccd_t.xccd005
DEFINE g_xccd001_t LIKE xccd_t.xccd001
DEFINE g_xccd003_t LIKE xccd_t.xccd003
DEFINE g_xccd002_t LIKE xccd_t.xccd002
DEFINE g_xccd006_t LIKE xccd_t.xccd006
 
 
DEFINE g_xcce_d          DYNAMIC ARRAY OF type_g_xcce_d
DEFINE g_xcce_d_t        type_g_xcce_d
DEFINE g_xcce_d_o        type_g_xcce_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_xccdld LIKE xccd_t.xccdld,
      b_xccd001 LIKE xccd_t.xccd001,
      b_xccd002 LIKE xccd_t.xccd002,
      b_xccd003 LIKE xccd_t.xccd003,
      b_xccd004 LIKE xccd_t.xccd004,
      b_xccd005 LIKE xccd_t.xccd005,
      b_xccd006 LIKE xccd_t.xccd006
      END RECORD 
      
DEFINE g_browser_f  RECORD #資料瀏覽之欄位 
       b_statepic     LIKE type_t.chr50,
          b_xccdld LIKE xccd_t.xccdld,
      b_xccd001 LIKE xccd_t.xccd001,
      b_xccd002 LIKE xccd_t.xccd002,
      b_xccd003 LIKE xccd_t.xccd003,
      b_xccd004 LIKE xccd_t.xccd004,
      b_xccd005 LIKE xccd_t.xccd005,
      b_xccd006 LIKE xccd_t.xccd006
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10 #5           
DEFINE l_ac                  LIKE type_t.num10 #5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10 #5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num10 #5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10 #5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10 #5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10 #5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10 #5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10 #5              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10 #5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10 #5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="axcq541.main" >}
#應用 a26 樣板自動產生(Version:3)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT xccdcomp,'',xccdld,'',xccd004,xccd005,xccd001,'',xccd003,'',xccd002,'', 
       xccd006,'','',xccd007,'','','','',xccd301,'','',''", 
                      " FROM xccd_t",
                      " WHERE xccdent= ? AND xccdld=? AND xccd001=? AND xccd002=? AND xccd003=? AND  
                          xccd004=? AND xccd005=? AND xccd006=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axcq541_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.xccdcomp,t0.xccdld,t0.xccd004,t0.xccd005,t0.xccd001,t0.xccd003,t0.xccd002, 
       t0.xccd006,t0.xccd007,t0.xccd301,t5.xcbfl003 ,t6.imaal003",
               " FROM xccd_t t0",
                              " LEFT JOIN xcbfl_t t5 ON t5.xcbflent='"||g_enterprise||"' AND t5.xcbfl001=t0.xccd002 AND t5.xcbfl002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t6 ON t6.imaalent='"||g_enterprise||"' AND t6.imaal001=t0.xccd007 AND t6.imaal002='"||g_dlang||"' ",
 
               " WHERE t0.xccdent = '" ||g_enterprise|| "' AND t0.xccdld = ? AND t0.xccd001 = ? AND t0.xccd002 = ? AND t0.xccd003 = ? AND t0.xccd004 = ? AND t0.xccd005 = ? AND t0.xccd006 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axcq541_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axcq541 WITH FORM cl_ap_formpath("axc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axcq541_init()   
 
      #進入選單 Menu (="N")
      CALL axcq541_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axcq541
      
   END IF 
   
   CLOSE axcq541_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 

{</section>}

{<section id="axcq541.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axcq541_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
   
      CALL cl_set_combo_scc('xccd001','8914') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL axcq541_default_search()
    
END FUNCTION

{</section>}

{<section id="axcq541.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axcq541_ui_dialog()
   DEFINE li_idx    LIKE type_t.num10 #5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
{<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define
{<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL axcq541_insert()
            #add-point:ON ACTION insert
{<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
{<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
{<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
 
      IF g_action_choice = "logistics" THEN
 
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xccd_m.* TO NULL
         CALL g_xcce_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axcq541_init()
      END IF
 
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
    
         DISPLAY ARRAY g_xcce_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axcq541_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
{<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL axcq541_idx_chk()
               #add-point:page1自定義行為
{<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
{<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
{<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
      
         BEFORE DIALOG
            #先填充browser資料
            CALL axcq541_browser_fill("")
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axcq541_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axcq541_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL axcq541_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
{<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
 
 
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axcq541_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axcq541_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLEAR FORM
               ELSE
                  CALL axcq541_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axcq541_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq541_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axcq541_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq541_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axcq541_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq541_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axcq541_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq541_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axcq541_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axcq541_idx_chk()
            
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xcce_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel
{<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
        #170218-00009#1 ---mark (s)--- 因已變成freestyle，故需手動mark
        #ON ACTION insert
        #   LET g_action_choice="insert"
        #   IF cl_auth_chk_act("insert") THEN
        #      CALL axcq541_insert()
        #      #add-point:ON ACTION insert
{<point name="menu.insert" />}
        #      #END add-point
        #      
        #   END IF
        #170218-00009#1 ---mark (e)---
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
{<point name="menu.output" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axcq541_query()
               #add-point:ON ACTION query
{<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo
{<point name="menu.datainfo" />}
               #END add-point
               
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL axcq541_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
{<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axcq541_set_pk_array()
            #add-point:ON ACTION agendum
{<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axcq541_set_pk_array()
            #add-point:ON ACTION followup
{<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
{<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION

{</section>}

{<section id="axcq541.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axcq541_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
{<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define
{<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
{<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
{<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE xccdld,xccd001,xccd002,xccd003,xccd004,xccd005,xccd006 ",
                      " FROM xccd_t ",
                      " ",
                      " LEFT JOIN xcce_t ON xcceent = xccdent AND xccdld = xcceld AND xccd001 = xcce001 AND xccd002 = xcce003 AND xccd003 = xcce004 AND xccd004 = xcce005 AND xccd005 = xcce006 ", "  ",
                      #add-point:browser_fill段sql(xcce_t1)
{<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
 
 
                      " ", 
                      " ", 
                      " WHERE xccdent = '" ||g_enterprise|| "' AND xcceent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xccd_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE xccdld,xccd001,xccd002,xccd003,xccd004,xccd005,xccd006 ",
                      " FROM xccd_t ", 
                      "  ",
                      "  ",
                      " WHERE xccdent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("xccd_t")
   END IF
   
   #add-point:browser_fill,cnt wc
{<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
{<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xccd_m.* TO NULL
      CALL g_xcce_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理
{<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xccdld,t0.xccd001,t0.xccd002,t0.xccd003,t0.xccd004,t0.xccd005,t0.xccd006 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)

               
{<point name="browser_fill.join.xcce_t1"/>}
              
 
 
             
               

{<point name="browser_fill.fill_sqlwc"/>}


 
   #add-point:browser_fill,before_prepare
{<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"xccd_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
{<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xccdld,g_browser[g_cnt].b_xccd001, 
       g_browser[g_cnt].b_xccd002,g_browser[g_cnt].b_xccd003,g_browser[g_cnt].b_xccd004,g_browser[g_cnt].b_xccd005, 
       g_browser[g_cnt].b_xccd006
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
{<point name="browser_fill.reference"/>}
      #end add-point
  
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xccdld) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:browser_fill段結束前
{<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION

{</section>}

{<section id="axcq541.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axcq541_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_xccd_m.xccdld = g_browser[g_current_idx].b_xccdld   
   LET g_xccd_m.xccd001 = g_browser[g_current_idx].b_xccd001   
   LET g_xccd_m.xccd002 = g_browser[g_current_idx].b_xccd002   
   LET g_xccd_m.xccd003 = g_browser[g_current_idx].b_xccd003   
   LET g_xccd_m.xccd004 = g_browser[g_current_idx].b_xccd004   
   LET g_xccd_m.xccd005 = g_browser[g_current_idx].b_xccd005   
   LET g_xccd_m.xccd006 = g_browser[g_current_idx].b_xccd006   
 
   EXECUTE axcq541_master_referesh USING g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd002,g_xccd_m.xccd003, 
       g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006 INTO g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd004, 
       g_xccd_m.xccd005,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd002,g_xccd_m.xccd006,g_xccd_m.xccd007, 
       g_xccd_m.xccd301,g_xccd_m.xccd002_desc,g_xccd_m.xccd007_desc
   CALL axcq541_show()
      
END FUNCTION

{</section>}

{<section id="axcq541.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axcq541_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="axcq541.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axcq541_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xccdld = g_xccd_m.xccdld 
         AND g_browser[l_i].b_xccd001 = g_xccd_m.xccd001 
         AND g_browser[l_i].b_xccd002 = g_xccd_m.xccd002 
         AND g_browser[l_i].b_xccd003 = g_xccd_m.xccd003 
         AND g_browser[l_i].b_xccd004 = g_xccd_m.xccd004 
         AND g_browser[l_i].b_xccd005 = g_xccd_m.xccd005 
         AND g_browser[l_i].b_xccd006 = g_xccd_m.xccd006 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="axcq541.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axcq541_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xccd_m.* TO NULL
   CALL g_xcce_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xccdcomp,xccdld,xccd004,xccd005,xccd001,xccd003,xccd002,xccd006,xccd007 

 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.xccdcomp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccdcomp
            #add-point:ON ACTION controlp INFIELD xccdcomp
            {<point name="construct.c.xccdcomp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccdcomp
            #add-point:BEFORE FIELD xccdcomp
            {<point name="construct.b.xccdcomp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccdcomp
            
            #add-point:AFTER FIELD xccdcomp
            {<point name="construct.a.xccdcomp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccdld
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccdld
            #add-point:ON ACTION controlp INFIELD xccdld
            {<point name="construct.c.xccdld" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccdld
            #add-point:BEFORE FIELD xccdld
            {<point name="construct.b.xccdld" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccdld
            
            #add-point:AFTER FIELD xccdld
            {<point name="construct.a.xccdld" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd004
            #add-point:BEFORE FIELD xccd004
            {<point name="construct.b.xccd004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd004
            
            #add-point:AFTER FIELD xccd004
            {<point name="construct.a.xccd004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccd004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd004
            #add-point:ON ACTION controlp INFIELD xccd004
            {<point name="construct.c.xccd004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd005
            #add-point:BEFORE FIELD xccd005
            {<point name="construct.b.xccd005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd005
            
            #add-point:AFTER FIELD xccd005
            {<point name="construct.a.xccd005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccd005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd005
            #add-point:ON ACTION controlp INFIELD xccd005
            {<point name="construct.c.xccd005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd001
            #add-point:BEFORE FIELD xccd001
            {<point name="construct.b.xccd001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd001
            
            #add-point:AFTER FIELD xccd001
            {<point name="construct.a.xccd001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccd001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd001
            #add-point:ON ACTION controlp INFIELD xccd001
            {<point name="construct.c.xccd001" />}
            #END add-point
 
         #Ctrlp:construct.c.xccd003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd003
            #add-point:ON ACTION controlp INFIELD xccd003
            {<point name="construct.c.xccd003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd003
            #add-point:BEFORE FIELD xccd003
            {<point name="construct.b.xccd003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd003
            
            #add-point:AFTER FIELD xccd003
            {<point name="construct.a.xccd003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd002
            #add-point:BEFORE FIELD xccd002
            {<point name="construct.b.xccd002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd002
            
            #add-point:AFTER FIELD xccd002
            {<point name="construct.a.xccd002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccd002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd002
            #add-point:ON ACTION controlp INFIELD xccd002
            {<point name="construct.c.xccd002" />}
            #END add-point
 
         #Ctrlp:construct.c.xccd006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd006
            #add-point:ON ACTION controlp INFIELD xccd006
            {<point name="construct.c.xccd006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd006
            #add-point:BEFORE FIELD xccd006
            {<point name="construct.b.xccd006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd006
            
            #add-point:AFTER FIELD xccd006
            {<point name="construct.a.xccd006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.xccd007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd007
            #add-point:ON ACTION controlp INFIELD xccd007
            {<point name="construct.c.xccd007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd007
            #add-point:BEFORE FIELD xccd007
            {<point name="construct.b.xccd007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd007
            
            #add-point:AFTER FIELD xccd007
            {<point name="construct.a.xccd007" />}
            #END add-point
            
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON xcce002,xcce007,xcce008,xcce009,xcce201,xcce202a,xcce202b,xcce202c,xcce202d, 
          xcce202e,xcce202f,xcce202g,xcce202h,xcce202,xcce301,xcce302a,xcce302b,xcce302c,xcce302d,xcce302e, 
          xcce302f,xcce302g,xcce302h,xcce302,xcce303,xcce304a,xcce304b,xcce304c,xcce304d,xcce304e,xcce304f, 
          xcce304g,xcce304h,xcce304,xcce901,xcce902a,xcce902b,xcce902c,xcce902d,xcce902e,xcce902f,xcce902g, 
          xcce902h,xcce902
           FROM s_detail1[1].xcce002,s_detail1[1].xcce007,s_detail1[1].xcce008,s_detail1[1].xcce009, 
               s_detail1[1].xcce201,s_detail1[1].xcce202a,s_detail1[1].xcce202b,s_detail1[1].xcce202c, 
               s_detail1[1].xcce202d,s_detail1[1].xcce202e,s_detail1[1].xcce202f,s_detail1[1].xcce202g, 
               s_detail1[1].xcce202h,s_detail1[1].xcce202,s_detail1[1].xcce301,s_detail1[1].xcce302a, 
               s_detail1[1].xcce302b,s_detail1[1].xcce302c,s_detail1[1].xcce302d,s_detail1[1].xcce302e, 
               s_detail1[1].xcce302f,s_detail1[1].xcce302g,s_detail1[1].xcce302h,s_detail1[1].xcce302, 
               s_detail1[1].xcce303,s_detail1[1].xcce304a,s_detail1[1].xcce304b,s_detail1[1].xcce304c, 
               s_detail1[1].xcce304d,s_detail1[1].xcce304e,s_detail1[1].xcce304f,s_detail1[1].xcce304g, 
               s_detail1[1].xcce304h,s_detail1[1].xcce304,s_detail1[1].xcce901,s_detail1[1].xcce902a, 
               s_detail1[1].xcce902b,s_detail1[1].xcce902c,s_detail1[1].xcce902d,s_detail1[1].xcce902e, 
               s_detail1[1].xcce902f,s_detail1[1].xcce902g,s_detail1[1].xcce902h,s_detail1[1].xcce902 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce002
            #add-point:BEFORE FIELD xcce002
            {<point name="construct.b.page1.xcce002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce002
            
            #add-point:AFTER FIELD xcce002
            {<point name="construct.a.page1.xcce002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce002
            #add-point:ON ACTION controlp INFIELD xcce002
            {<point name="construct.c.page1.xcce002" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.xcce007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce007
            #add-point:ON ACTION controlp INFIELD xcce007
            {<point name="construct.c.page1.xcce007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce007
            #add-point:BEFORE FIELD xcce007
            {<point name="construct.b.page1.xcce007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce007
            
            #add-point:AFTER FIELD xcce007
            {<point name="construct.a.page1.xcce007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce008
            #add-point:BEFORE FIELD xcce008
            {<point name="construct.b.page1.xcce008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce008
            
            #add-point:AFTER FIELD xcce008
            {<point name="construct.a.page1.xcce008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce008
            #add-point:ON ACTION controlp INFIELD xcce008
            {<point name="construct.c.page1.xcce008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce009
            #add-point:BEFORE FIELD xcce009
            {<point name="construct.b.page1.xcce009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce009
            
            #add-point:AFTER FIELD xcce009
            {<point name="construct.a.page1.xcce009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce009
            #add-point:ON ACTION controlp INFIELD xcce009
            {<point name="construct.c.page1.xcce009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce201
            #add-point:BEFORE FIELD xcce201
            {<point name="construct.b.page1.xcce201" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce201
            
            #add-point:AFTER FIELD xcce201
            {<point name="construct.a.page1.xcce201" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce201
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce201
            #add-point:ON ACTION controlp INFIELD xcce201
            {<point name="construct.c.page1.xcce201" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce202a
            #add-point:BEFORE FIELD xcce202a
            {<point name="construct.b.page1.xcce202a" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce202a
            
            #add-point:AFTER FIELD xcce202a
            {<point name="construct.a.page1.xcce202a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce202a
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce202a
            #add-point:ON ACTION controlp INFIELD xcce202a
            {<point name="construct.c.page1.xcce202a" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce202b
            #add-point:BEFORE FIELD xcce202b
            {<point name="construct.b.page1.xcce202b" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce202b
            
            #add-point:AFTER FIELD xcce202b
            {<point name="construct.a.page1.xcce202b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce202b
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce202b
            #add-point:ON ACTION controlp INFIELD xcce202b
            {<point name="construct.c.page1.xcce202b" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce202c
            #add-point:BEFORE FIELD xcce202c
            {<point name="construct.b.page1.xcce202c" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce202c
            
            #add-point:AFTER FIELD xcce202c
            {<point name="construct.a.page1.xcce202c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce202c
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce202c
            #add-point:ON ACTION controlp INFIELD xcce202c
            {<point name="construct.c.page1.xcce202c" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce202d
            #add-point:BEFORE FIELD xcce202d
            {<point name="construct.b.page1.xcce202d" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce202d
            
            #add-point:AFTER FIELD xcce202d
            {<point name="construct.a.page1.xcce202d" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce202d
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce202d
            #add-point:ON ACTION controlp INFIELD xcce202d
            {<point name="construct.c.page1.xcce202d" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce202e
            #add-point:BEFORE FIELD xcce202e
            {<point name="construct.b.page1.xcce202e" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce202e
            
            #add-point:AFTER FIELD xcce202e
            {<point name="construct.a.page1.xcce202e" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce202e
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce202e
            #add-point:ON ACTION controlp INFIELD xcce202e
            {<point name="construct.c.page1.xcce202e" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce202f
            #add-point:BEFORE FIELD xcce202f
            {<point name="construct.b.page1.xcce202f" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce202f
            
            #add-point:AFTER FIELD xcce202f
            {<point name="construct.a.page1.xcce202f" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce202f
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce202f
            #add-point:ON ACTION controlp INFIELD xcce202f
            {<point name="construct.c.page1.xcce202f" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce202g
            #add-point:BEFORE FIELD xcce202g
            {<point name="construct.b.page1.xcce202g" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce202g
            
            #add-point:AFTER FIELD xcce202g
            {<point name="construct.a.page1.xcce202g" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce202g
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce202g
            #add-point:ON ACTION controlp INFIELD xcce202g
            {<point name="construct.c.page1.xcce202g" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce202h
            #add-point:BEFORE FIELD xcce202h
            {<point name="construct.b.page1.xcce202h" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce202h
            
            #add-point:AFTER FIELD xcce202h
            {<point name="construct.a.page1.xcce202h" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce202h
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce202h
            #add-point:ON ACTION controlp INFIELD xcce202h
            {<point name="construct.c.page1.xcce202h" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce202
            #add-point:BEFORE FIELD xcce202
            {<point name="construct.b.page1.xcce202" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce202
            
            #add-point:AFTER FIELD xcce202
            {<point name="construct.a.page1.xcce202" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce202
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce202
            #add-point:ON ACTION controlp INFIELD xcce202
            {<point name="construct.c.page1.xcce202" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce301
            #add-point:BEFORE FIELD xcce301
            {<point name="construct.b.page1.xcce301" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce301
            
            #add-point:AFTER FIELD xcce301
            {<point name="construct.a.page1.xcce301" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce301
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce301
            #add-point:ON ACTION controlp INFIELD xcce301
            {<point name="construct.c.page1.xcce301" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce302a
            #add-point:BEFORE FIELD xcce302a
            {<point name="construct.b.page1.xcce302a" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce302a
            
            #add-point:AFTER FIELD xcce302a
            {<point name="construct.a.page1.xcce302a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce302a
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce302a
            #add-point:ON ACTION controlp INFIELD xcce302a
            {<point name="construct.c.page1.xcce302a" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce302b
            #add-point:BEFORE FIELD xcce302b
            {<point name="construct.b.page1.xcce302b" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce302b
            
            #add-point:AFTER FIELD xcce302b
            {<point name="construct.a.page1.xcce302b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce302b
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce302b
            #add-point:ON ACTION controlp INFIELD xcce302b
            {<point name="construct.c.page1.xcce302b" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce302c
            #add-point:BEFORE FIELD xcce302c
            {<point name="construct.b.page1.xcce302c" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce302c
            
            #add-point:AFTER FIELD xcce302c
            {<point name="construct.a.page1.xcce302c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce302c
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce302c
            #add-point:ON ACTION controlp INFIELD xcce302c
            {<point name="construct.c.page1.xcce302c" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce302d
            #add-point:BEFORE FIELD xcce302d
            {<point name="construct.b.page1.xcce302d" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce302d
            
            #add-point:AFTER FIELD xcce302d
            {<point name="construct.a.page1.xcce302d" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce302d
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce302d
            #add-point:ON ACTION controlp INFIELD xcce302d
            {<point name="construct.c.page1.xcce302d" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce302e
            #add-point:BEFORE FIELD xcce302e
            {<point name="construct.b.page1.xcce302e" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce302e
            
            #add-point:AFTER FIELD xcce302e
            {<point name="construct.a.page1.xcce302e" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce302e
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce302e
            #add-point:ON ACTION controlp INFIELD xcce302e
            {<point name="construct.c.page1.xcce302e" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce302f
            #add-point:BEFORE FIELD xcce302f
            {<point name="construct.b.page1.xcce302f" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce302f
            
            #add-point:AFTER FIELD xcce302f
            {<point name="construct.a.page1.xcce302f" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce302f
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce302f
            #add-point:ON ACTION controlp INFIELD xcce302f
            {<point name="construct.c.page1.xcce302f" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce302g
            #add-point:BEFORE FIELD xcce302g
            {<point name="construct.b.page1.xcce302g" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce302g
            
            #add-point:AFTER FIELD xcce302g
            {<point name="construct.a.page1.xcce302g" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce302g
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce302g
            #add-point:ON ACTION controlp INFIELD xcce302g
            {<point name="construct.c.page1.xcce302g" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce302h
            #add-point:BEFORE FIELD xcce302h
            {<point name="construct.b.page1.xcce302h" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce302h
            
            #add-point:AFTER FIELD xcce302h
            {<point name="construct.a.page1.xcce302h" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce302h
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce302h
            #add-point:ON ACTION controlp INFIELD xcce302h
            {<point name="construct.c.page1.xcce302h" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce302
            #add-point:BEFORE FIELD xcce302
            {<point name="construct.b.page1.xcce302" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce302
            
            #add-point:AFTER FIELD xcce302
            {<point name="construct.a.page1.xcce302" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce302
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce302
            #add-point:ON ACTION controlp INFIELD xcce302
            {<point name="construct.c.page1.xcce302" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce303
            #add-point:BEFORE FIELD xcce303
            {<point name="construct.b.page1.xcce303" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce303
            
            #add-point:AFTER FIELD xcce303
            {<point name="construct.a.page1.xcce303" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce303
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce303
            #add-point:ON ACTION controlp INFIELD xcce303
            {<point name="construct.c.page1.xcce303" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce304a
            #add-point:BEFORE FIELD xcce304a
            {<point name="construct.b.page1.xcce304a" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce304a
            
            #add-point:AFTER FIELD xcce304a
            {<point name="construct.a.page1.xcce304a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce304a
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce304a
            #add-point:ON ACTION controlp INFIELD xcce304a
            {<point name="construct.c.page1.xcce304a" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce304b
            #add-point:BEFORE FIELD xcce304b
            {<point name="construct.b.page1.xcce304b" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce304b
            
            #add-point:AFTER FIELD xcce304b
            {<point name="construct.a.page1.xcce304b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce304b
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce304b
            #add-point:ON ACTION controlp INFIELD xcce304b
            {<point name="construct.c.page1.xcce304b" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce304c
            #add-point:BEFORE FIELD xcce304c
            {<point name="construct.b.page1.xcce304c" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce304c
            
            #add-point:AFTER FIELD xcce304c
            {<point name="construct.a.page1.xcce304c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce304c
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce304c
            #add-point:ON ACTION controlp INFIELD xcce304c
            {<point name="construct.c.page1.xcce304c" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce304d
            #add-point:BEFORE FIELD xcce304d
            {<point name="construct.b.page1.xcce304d" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce304d
            
            #add-point:AFTER FIELD xcce304d
            {<point name="construct.a.page1.xcce304d" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce304d
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce304d
            #add-point:ON ACTION controlp INFIELD xcce304d
            {<point name="construct.c.page1.xcce304d" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce304e
            #add-point:BEFORE FIELD xcce304e
            {<point name="construct.b.page1.xcce304e" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce304e
            
            #add-point:AFTER FIELD xcce304e
            {<point name="construct.a.page1.xcce304e" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce304e
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce304e
            #add-point:ON ACTION controlp INFIELD xcce304e
            {<point name="construct.c.page1.xcce304e" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce304f
            #add-point:BEFORE FIELD xcce304f
            {<point name="construct.b.page1.xcce304f" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce304f
            
            #add-point:AFTER FIELD xcce304f
            {<point name="construct.a.page1.xcce304f" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce304f
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce304f
            #add-point:ON ACTION controlp INFIELD xcce304f
            {<point name="construct.c.page1.xcce304f" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce304g
            #add-point:BEFORE FIELD xcce304g
            {<point name="construct.b.page1.xcce304g" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce304g
            
            #add-point:AFTER FIELD xcce304g
            {<point name="construct.a.page1.xcce304g" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce304g
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce304g
            #add-point:ON ACTION controlp INFIELD xcce304g
            {<point name="construct.c.page1.xcce304g" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce304h
            #add-point:BEFORE FIELD xcce304h
            {<point name="construct.b.page1.xcce304h" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce304h
            
            #add-point:AFTER FIELD xcce304h
            {<point name="construct.a.page1.xcce304h" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce304h
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce304h
            #add-point:ON ACTION controlp INFIELD xcce304h
            {<point name="construct.c.page1.xcce304h" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce304
            #add-point:BEFORE FIELD xcce304
            {<point name="construct.b.page1.xcce304" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce304
            
            #add-point:AFTER FIELD xcce304
            {<point name="construct.a.page1.xcce304" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce304
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce304
            #add-point:ON ACTION controlp INFIELD xcce304
            {<point name="construct.c.page1.xcce304" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce901
            #add-point:BEFORE FIELD xcce901
            {<point name="construct.b.page1.xcce901" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce901
            
            #add-point:AFTER FIELD xcce901
            {<point name="construct.a.page1.xcce901" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce901
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce901
            #add-point:ON ACTION controlp INFIELD xcce901
            {<point name="construct.c.page1.xcce901" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce902a
            #add-point:BEFORE FIELD xcce902a
            {<point name="construct.b.page1.xcce902a" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce902a
            
            #add-point:AFTER FIELD xcce902a
            {<point name="construct.a.page1.xcce902a" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce902a
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce902a
            #add-point:ON ACTION controlp INFIELD xcce902a
            {<point name="construct.c.page1.xcce902a" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce902b
            #add-point:BEFORE FIELD xcce902b
            {<point name="construct.b.page1.xcce902b" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce902b
            
            #add-point:AFTER FIELD xcce902b
            {<point name="construct.a.page1.xcce902b" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce902b
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce902b
            #add-point:ON ACTION controlp INFIELD xcce902b
            {<point name="construct.c.page1.xcce902b" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce902c
            #add-point:BEFORE FIELD xcce902c
            {<point name="construct.b.page1.xcce902c" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce902c
            
            #add-point:AFTER FIELD xcce902c
            {<point name="construct.a.page1.xcce902c" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce902c
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce902c
            #add-point:ON ACTION controlp INFIELD xcce902c
            {<point name="construct.c.page1.xcce902c" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce902d
            #add-point:BEFORE FIELD xcce902d
            {<point name="construct.b.page1.xcce902d" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce902d
            
            #add-point:AFTER FIELD xcce902d
            {<point name="construct.a.page1.xcce902d" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce902d
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce902d
            #add-point:ON ACTION controlp INFIELD xcce902d
            {<point name="construct.c.page1.xcce902d" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce902e
            #add-point:BEFORE FIELD xcce902e
            {<point name="construct.b.page1.xcce902e" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce902e
            
            #add-point:AFTER FIELD xcce902e
            {<point name="construct.a.page1.xcce902e" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce902e
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce902e
            #add-point:ON ACTION controlp INFIELD xcce902e
            {<point name="construct.c.page1.xcce902e" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce902f
            #add-point:BEFORE FIELD xcce902f
            {<point name="construct.b.page1.xcce902f" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce902f
            
            #add-point:AFTER FIELD xcce902f
            {<point name="construct.a.page1.xcce902f" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce902f
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce902f
            #add-point:ON ACTION controlp INFIELD xcce902f
            {<point name="construct.c.page1.xcce902f" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce902g
            #add-point:BEFORE FIELD xcce902g
            {<point name="construct.b.page1.xcce902g" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce902g
            
            #add-point:AFTER FIELD xcce902g
            {<point name="construct.a.page1.xcce902g" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce902g
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce902g
            #add-point:ON ACTION controlp INFIELD xcce902g
            {<point name="construct.c.page1.xcce902g" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce902h
            #add-point:BEFORE FIELD xcce902h
            {<point name="construct.b.page1.xcce902h" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce902h
            
            #add-point:AFTER FIELD xcce902h
            {<point name="construct.a.page1.xcce902h" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce902h
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce902h
            #add-point:ON ACTION controlp INFIELD xcce902h
            {<point name="construct.c.page1.xcce902h" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce902
            #add-point:BEFORE FIELD xcce902
            {<point name="construct.b.page1.xcce902" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce902
            
            #add-point:AFTER FIELD xcce902
            {<point name="construct.a.page1.xcce902" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xcce902
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce902
            #add-point:ON ACTION controlp INFIELD xcce902
            {<point name="construct.c.page1.xcce902" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION

{</section>}

{<section id="axcq541.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axcq541_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xcce_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL axcq541_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL axcq541_browser_fill("")
      CALL axcq541_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL axcq541_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL axcq541_fetch("F") 
      #顯示單身筆數
      CALL axcq541_idx_chk()
   END IF
 
END FUNCTION

{</section>}

{<section id="axcq541.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axcq541_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xccd_m.xccdld = g_browser[g_current_idx].b_xccdld
   LET g_xccd_m.xccd001 = g_browser[g_current_idx].b_xccd001
   LET g_xccd_m.xccd002 = g_browser[g_current_idx].b_xccd002
   LET g_xccd_m.xccd003 = g_browser[g_current_idx].b_xccd003
   LET g_xccd_m.xccd004 = g_browser[g_current_idx].b_xccd004
   LET g_xccd_m.xccd005 = g_browser[g_current_idx].b_xccd005
   LET g_xccd_m.xccd006 = g_browser[g_current_idx].b_xccd006
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axcq541_master_referesh USING g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd002,g_xccd_m.xccd003, 
       g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006 INTO g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd004, 
       g_xccd_m.xccd005,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd002,g_xccd_m.xccd006,g_xccd_m.xccd007, 
       g_xccd_m.xccd301,g_xccd_m.xccd002_desc,g_xccd_m.xccd007_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "xccd_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      INITIALIZE g_xccd_m.* TO NULL
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq541_set_act_visible()   
   CALL axcq541_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_xccd_m_t.* = g_xccd_m.*
   LET g_xccd_m_o.* = g_xccd_m.*
   
   
   #重新顯示   
   CALL axcq541_show()
 
   
 
END FUNCTION

{</section>}

{<section id="axcq541.insert" >}
#+ 資料新增
PRIVATE FUNCTION axcq541_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xcce_d.clear()   
 
 
   INITIALIZE g_xccd_m.* LIKE xccd_t.*             #DEFAULT 設定
   
   LET g_xccdld_t = NULL
   LET g_xccd001_t = NULL
   LET g_xccd002_t = NULL
   LET g_xccd003_t = NULL
   LET g_xccd004_t = NULL
   LET g_xccd005_t = NULL
   LET g_xccd006_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_xccd_m.xccd001 = "1"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #顯示狀態(stus)圖片
      
    
      CALL axcq541_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xccd_m.* TO NULL
         INITIALIZE g_xcce_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL axcq541_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_xcce_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq541_set_act_visible()   
   CALL axcq541_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xccdld_t = g_xccd_m.xccdld
   LET g_xccd001_t = g_xccd_m.xccd001
   LET g_xccd002_t = g_xccd_m.xccd002
   LET g_xccd003_t = g_xccd_m.xccd003
   LET g_xccd004_t = g_xccd_m.xccd004
   LET g_xccd005_t = g_xccd_m.xccd005
   LET g_xccd006_t = g_xccd_m.xccd006
 
   
   #組合新增資料的條件
   LET g_add_browse = " xccdent = '" ||g_enterprise|| "' AND",
                      " xccdld = '", g_xccd_m.xccdld, "' "
                      ," AND xccd001 = '", g_xccd_m.xccd001, "' "
                      ," AND xccd002 = '", g_xccd_m.xccd002, "' "
                      ," AND xccd003 = '", g_xccd_m.xccd003, "' "
                      ," AND xccd004 = '", g_xccd_m.xccd004, "' "
                      ," AND xccd005 = '", g_xccd_m.xccd005, "' "
                      ," AND xccd006 = '", g_xccd_m.xccd006, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axcq541_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE axcq541_cl
   
   CALL axcq541_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axcq541_master_referesh USING g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd002,g_xccd_m.xccd003, 
       g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006 INTO g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd004, 
       g_xccd_m.xccd005,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd002,g_xccd_m.xccd006,g_xccd_m.xccd007, 
       g_xccd_m.xccd301,g_xccd_m.xccd002_desc,g_xccd_m.xccd007_desc
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xccd_m.xccdcomp,g_xccd_m.xccdcomp_desc,g_xccd_m.xccdld,g_xccd_m.xccdld_desc,g_xccd_m.xccd004, 
       g_xccd_m.xccd005,g_xccd_m.xccd001,g_xccd_m.xccd001_desc,g_xccd_m.xccd003,g_xccd_m.xccd003_desc, 
       g_xccd_m.xccd002,g_xccd_m.xccd002_desc,g_xccd_m.xccd006,g_xccd_m.sfaa019,g_xccd_m.sfaa020,g_xccd_m.xccd007, 
       g_xccd_m.sfaa012,g_xccd_m.sfaa049,g_xccd_m.xccd007_desc,g_xccd_m.xccd301_sum,g_xccd_m.xccd301, 
       g_xccd_m.xccd007_desc_1,g_xccd_m.xcbk100,g_xccd_m.xcbk100_1
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
  
   #流程通知預埋點-I
   CALL axcq541_set_pk_array()
   CALL cl_flow_notify('','I')
 
END FUNCTION

{</section>}

{<section id="axcq541.modify" >}
#+ 資料修改
PRIVATE FUNCTION axcq541_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_xccd_m_t.* = g_xccd_m.*
   LET g_xccd_m_o.* = g_xccd_m.*
   
   IF g_xccd_m.xccdld IS NULL
   OR g_xccd_m.xccd001 IS NULL
   OR g_xccd_m.xccd002 IS NULL
   OR g_xccd_m.xccd003 IS NULL
   OR g_xccd_m.xccd004 IS NULL
   OR g_xccd_m.xccd005 IS NULL
   OR g_xccd_m.xccd006 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_xccdld_t = g_xccd_m.xccdld
   LET g_xccd001_t = g_xccd_m.xccd001
   LET g_xccd002_t = g_xccd_m.xccd002
   LET g_xccd003_t = g_xccd_m.xccd003
   LET g_xccd004_t = g_xccd_m.xccd004
   LET g_xccd005_t = g_xccd_m.xccd005
   LET g_xccd006_t = g_xccd_m.xccd006
 
   CALL s_transaction_begin()
   
   OPEN axcq541_cl USING g_enterprise,g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd002,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axcq541_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE axcq541_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axcq541_master_referesh USING g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd002,g_xccd_m.xccd003, 
       g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006 INTO g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd004, 
       g_xccd_m.xccd005,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd002,g_xccd_m.xccd006,g_xccd_m.xccd007, 
       g_xccd_m.xccd301,g_xccd_m.xccd002_desc,g_xccd_m.xccd007_desc
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL axcq541_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_xccdld_t = g_xccd_m.xccdld
      LET g_xccd001_t = g_xccd_m.xccd001
      LET g_xccd002_t = g_xccd_m.xccd002
      LET g_xccd003_t = g_xccd_m.xccd003
      LET g_xccd004_t = g_xccd_m.xccd004
      LET g_xccd005_t = g_xccd_m.xccd005
      LET g_xccd006_t = g_xccd_m.xccd006
 
      
      #寫入修改者/修改日期資訊(單頭)
      
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL axcq541_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
 
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_xccd_m.* = g_xccd_m_t.*
         CALL axcq541_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_xccd_m.xccdld != g_xccdld_t 
      OR g_xccd_m.xccd001 != g_xccd001_t 
      OR g_xccd_m.xccd002 != g_xccd002_t 
      OR g_xccd_m.xccd003 != g_xccd003_t 
      OR g_xccd_m.xccd004 != g_xccd004_t 
      OR g_xccd_m.xccd005 != g_xccd005_t 
      OR g_xccd_m.xccd006 != g_xccd006_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE xcce_t SET xcceld = g_xccd_m.xccdld
                                       ,xcce001 = g_xccd_m.xccd001
                                       ,xcce003 = g_xccd_m.xccd002
                                       ,xcce004 = g_xccd_m.xccd003
                                       ,xcce005 = g_xccd_m.xccd004
                                       ,xcce006 = g_xccd_m.xccd005
                                       , = g_xccd_m.xccd006
 
          WHERE xcceent = g_enterprise AND xcceld = g_xccdld_t
            AND xcce001 = g_xccd001_t
            AND xcce003 = g_xccd002_t
            AND xcce004 = g_xccd003_t
            AND xcce005 = g_xccd004_t
            AND xcce006 = g_xccd005_t
            AND  = g_xccd006_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcce_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcce_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq541_set_act_visible()   
   CALL axcq541_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xccdent = '" ||g_enterprise|| "' AND",
                      " xccdld = '", g_xccd_m.xccdld, "' "
                      ," AND xccd001 = '", g_xccd_m.xccd001, "' "
                      ," AND xccd002 = '", g_xccd_m.xccd002, "' "
                      ," AND xccd003 = '", g_xccd_m.xccd003, "' "
                      ," AND xccd004 = '", g_xccd_m.xccd004, "' "
                      ," AND xccd005 = '", g_xccd_m.xccd005, "' "
                      ," AND xccd006 = '", g_xccd_m.xccd006, "' "
 
   #填到對應位置
   CALL axcq541_browser_fill("")
 
   CLOSE axcq541_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL axcq541_set_pk_array()
   CALL cl_flow_notify('','U')
 
END FUNCTION   

{</section>}

{<section id="axcq541.input" >}
#+ 資料輸入
PRIVATE FUNCTION axcq541_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10 #5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10 #5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num10 #5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num10 #5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10 #5
   DEFINE  l_i                   LIKE type_t.num10 #5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xccd_m.xccdcomp,g_xccd_m.xccdcomp_desc,g_xccd_m.xccdld,g_xccd_m.xccdld_desc,g_xccd_m.xccd004, 
       g_xccd_m.xccd005,g_xccd_m.xccd001,g_xccd_m.xccd001_desc,g_xccd_m.xccd003,g_xccd_m.xccd003_desc, 
       g_xccd_m.xccd002,g_xccd_m.xccd002_desc,g_xccd_m.xccd006,g_xccd_m.sfaa019,g_xccd_m.sfaa020,g_xccd_m.xccd007, 
       g_xccd_m.sfaa012,g_xccd_m.sfaa049,g_xccd_m.xccd007_desc,g_xccd_m.xccd301_sum,g_xccd_m.xccd301, 
       g_xccd_m.xccd007_desc_1,g_xccd_m.xcbk100,g_xccd_m.xcbk100_1
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT xcce002,xcce007,xcce008,xcce009,xcce201,xcce202a,xcce202b,xcce202c,xcce202d, 
       xcce202e,xcce202f,xcce202g,xcce202h,xcce202,xcce301,xcce302a,xcce302b,xcce302c,xcce302d,xcce302e, 
       xcce302f,xcce302g,xcce302h,xcce302,xcce303,xcce304a,xcce304b,xcce304c,xcce304d,xcce304e,xcce304f, 
       xcce304g,xcce304h,xcce304,xcce901,xcce902a,xcce902b,xcce902c,xcce902d,xcce902e,xcce902f,xcce902g, 
       xcce902h,xcce902 FROM xcce_t WHERE xcceent=? AND xcceld=? AND xcce001=? AND xcce003=? AND xcce004=?  
       AND xcce005=? AND xcce006=? AND xcce002=? AND xcce007=? AND xcce008=? AND xcce009=? FOR UPDATE" 

   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axcq541_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axcq541_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL axcq541_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd001, 
       g_xccd_m.xccd003,g_xccd_m.xccd002,g_xccd_m.xccd006,g_xccd_m.xccd007
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

{</section>}

{<section id="axcq541.input.head" >}
      #單頭段
      INPUT BY NAME g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd001, 
          g_xccd_m.xccd003,g_xccd_m.xccd002,g_xccd_m.xccd006,g_xccd_m.xccd007 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN axcq541_cl USING g_enterprise,g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd002,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axcq541_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE axcq541_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            CALL axcq541_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL axcq541_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccdcomp
            
            #add-point:AFTER FIELD xccdcomp
            {<point name="input.a.xccdcomp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccdcomp
            #add-point:BEFORE FIELD xccdcomp
            {<point name="input.b.xccdcomp" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccdcomp
            #add-point:ON CHANGE xccdcomp
            {<point name="input.g.xccdcomp" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccdld
            
            #add-point:AFTER FIELD xccdld
            {<point name="input.a.xccdld" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccdld
            #add-point:BEFORE FIELD xccdld
            {<point name="input.b.xccdld" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccdld
            #add-point:ON CHANGE xccdld
            {<point name="input.g.xccdld" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd004
            #add-point:BEFORE FIELD xccd004
            {<point name="input.b.xccd004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd004
            
            #add-point:AFTER FIELD xccd004
            {<point name="input.a.xccd004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccd004
            #add-point:ON CHANGE xccd004
            {<point name="input.g.xccd004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd005
            #add-point:BEFORE FIELD xccd005
            {<point name="input.b.xccd005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd005
            
            #add-point:AFTER FIELD xccd005
            {<point name="input.a.xccd005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccd005
            #add-point:ON CHANGE xccd005
            {<point name="input.g.xccd005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd001
            
            #add-point:AFTER FIELD xccd001
            {<point name="input.a.xccd001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd001
            #add-point:BEFORE FIELD xccd001
            {<point name="input.b.xccd001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccd001
            #add-point:ON CHANGE xccd001
            {<point name="input.g.xccd001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd003
            
            #add-point:AFTER FIELD xccd003
            {<point name="input.a.xccd003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd003
            #add-point:BEFORE FIELD xccd003
            {<point name="input.b.xccd003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccd003
            #add-point:ON CHANGE xccd003
            {<point name="input.g.xccd003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd002
            
            #add-point:AFTER FIELD xccd002
            {<point name="input.a.xccd002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd002
            #add-point:BEFORE FIELD xccd002
            {<point name="input.b.xccd002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccd002
            #add-point:ON CHANGE xccd002
            {<point name="input.g.xccd002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd006
            #add-point:BEFORE FIELD xccd006
            {<point name="input.b.xccd006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd006
            
            #add-point:AFTER FIELD xccd006
            {<point name="input.a.xccd006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccd006
            #add-point:ON CHANGE xccd006
            {<point name="input.g.xccd006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xccd007
            
            #add-point:AFTER FIELD xccd007
            {<point name="input.a.xccd007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xccd007
            #add-point:BEFORE FIELD xccd007
            {<point name="input.b.xccd007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xccd007
            #add-point:ON CHANGE xccd007
            {<point name="input.g.xccd007" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.xccdcomp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccdcomp
            #add-point:ON ACTION controlp INFIELD xccdcomp
            {<point name="input.c.xccdcomp" />}
            #END add-point
 
         #Ctrlp:input.c.xccdld
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccdld
            #add-point:ON ACTION controlp INFIELD xccdld
            {<point name="input.c.xccdld" />}
            #END add-point
 
         #Ctrlp:input.c.xccd004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd004
            #add-point:ON ACTION controlp INFIELD xccd004
            {<point name="input.c.xccd004" />}
            #END add-point
 
         #Ctrlp:input.c.xccd005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd005
            #add-point:ON ACTION controlp INFIELD xccd005
            {<point name="input.c.xccd005" />}
            #END add-point
 
         #Ctrlp:input.c.xccd001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd001
            #add-point:ON ACTION controlp INFIELD xccd001
            {<point name="input.c.xccd001" />}
            #END add-point
 
         #Ctrlp:input.c.xccd003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd003
            #add-point:ON ACTION controlp INFIELD xccd003
            {<point name="input.c.xccd003" />}
            #END add-point
 
         #Ctrlp:input.c.xccd002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd002
            #add-point:ON ACTION controlp INFIELD xccd002
            {<point name="input.c.xccd002" />}
            #END add-point
 
         #Ctrlp:input.c.xccd006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd006
            #add-point:ON ACTION controlp INFIELD xccd006
            {<point name="input.c.xccd006" />}
            #END add-point
 
         #Ctrlp:input.c.xccd007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xccd007
            #add-point:ON ACTION controlp INFIELD xccd007
            {<point name="input.c.xccd007" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd002,g_xccd_m.xccd003,g_xccd_m.xccd004, 
                g_xccd_m.xccd005,g_xccd_m.xccd006
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO xccd_t (xccdent,xccdcomp,xccdld,xccd004,xccd005,xccd001,xccd003,xccd002,xccd006, 
                   xccd007,xccd301)
               VALUES (g_enterprise,g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd004,g_xccd_m.xccd005, 
                   g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd002,g_xccd_m.xccd006,g_xccd_m.xccd007, 
                   g_xccd_m.xccd301) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_xccd_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axcq541_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL axcq541_b_fill()
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE xccd_t SET (xccdcomp,xccdld,xccd004,xccd005,xccd001,xccd003,xccd002,xccd006,xccd007, 
                   xccd301) = (g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd001, 
                   g_xccd_m.xccd003,g_xccd_m.xccd002,g_xccd_m.xccd006,g_xccd_m.xccd007,g_xccd_m.xccd301) 

                WHERE xccdent = g_enterprise AND xccdld = g_xccdld_t
                  AND xccd001 = g_xccd001_t
                  AND xccd002 = g_xccd002_t
                  AND xccd003 = g_xccd003_t
                  AND xccd004 = g_xccd004_t
                  AND xccd005 = g_xccd005_t
                  AND xccd006 = g_xccd006_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xccd_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_xccd_m_t)
               LET g_log2 = util.JSON.stringify(g_xccd_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_xccdld_t = g_xccd_m.xccdld
            LET g_xccd001_t = g_xccd_m.xccd001
            LET g_xccd002_t = g_xccd_m.xccd002
            LET g_xccd003_t = g_xccd_m.xccd003
            LET g_xccd004_t = g_xccd_m.xccd004
            LET g_xccd005_t = g_xccd_m.xccd005
            LET g_xccd006_t = g_xccd_m.xccd006
 
            
      END INPUT
   

{</section>}

{<section id="axcq541.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_xcce_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
{<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xcce_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axcq541_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_xcce_d.getLength()
            #add-point:資料輸入前
{<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
{<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axcq541_cl USING g_enterprise,g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd002,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axcq541_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE axcq541_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_xcce_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xcce_d[l_ac].xcce002 IS NOT NULL
               AND g_xcce_d[l_ac].xcce007 IS NOT NULL
               AND g_xcce_d[l_ac].xcce008 IS NOT NULL
               AND g_xcce_d[l_ac].xcce009 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xcce_d_t.* = g_xcce_d[l_ac].*  #BACKUP
               LET g_xcce_d_o.* = g_xcce_d[l_ac].*  #BACKUP
               CALL axcq541_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
{<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL axcq541_set_no_entry_b(l_cmd)
               IF NOT axcq541_lock_b("xcce_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axcq541_bcl INTO g_xcce_d[l_ac].xcce002,g_xcce_d[l_ac].xcce007,g_xcce_d[l_ac].xcce008, 
                      g_xcce_d[l_ac].xcce009,g_xcce_d[l_ac].xcce201,g_xcce_d[l_ac].xcce202a,g_xcce_d[l_ac].xcce202b, 
                      g_xcce_d[l_ac].xcce202c,g_xcce_d[l_ac].xcce202d,g_xcce_d[l_ac].xcce202e,g_xcce_d[l_ac].xcce202f, 
                      g_xcce_d[l_ac].xcce202g,g_xcce_d[l_ac].xcce202h,g_xcce_d[l_ac].xcce202,g_xcce_d[l_ac].xcce301, 
                      g_xcce_d[l_ac].xcce302a,g_xcce_d[l_ac].xcce302b,g_xcce_d[l_ac].xcce302c,g_xcce_d[l_ac].xcce302d, 
                      g_xcce_d[l_ac].xcce302e,g_xcce_d[l_ac].xcce302f,g_xcce_d[l_ac].xcce302g,g_xcce_d[l_ac].xcce302h, 
                      g_xcce_d[l_ac].xcce302,g_xcce_d[l_ac].xcce303,g_xcce_d[l_ac].xcce304a,g_xcce_d[l_ac].xcce304b, 
                      g_xcce_d[l_ac].xcce304c,g_xcce_d[l_ac].xcce304d,g_xcce_d[l_ac].xcce304e,g_xcce_d[l_ac].xcce304f, 
                      g_xcce_d[l_ac].xcce304g,g_xcce_d[l_ac].xcce304h,g_xcce_d[l_ac].xcce304,g_xcce_d[l_ac].xcce901, 
                      g_xcce_d[l_ac].xcce902a,g_xcce_d[l_ac].xcce902b,g_xcce_d[l_ac].xcce902c,g_xcce_d[l_ac].xcce902d, 
                      g_xcce_d[l_ac].xcce902e,g_xcce_d[l_ac].xcce902f,g_xcce_d[l_ac].xcce902g,g_xcce_d[l_ac].xcce902h, 
                      g_xcce_d[l_ac].xcce902
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_xcce_d_t.xcce002 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL axcq541_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
{<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xcce_d[l_ac].* TO NULL 
            INITIALIZE g_xcce_d_t.* TO NULL 
            INITIALIZE g_xcce_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
            
            #add-point:modify段before備份
{<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_xcce_d_t.* = g_xcce_d[l_ac].*     #新輸入資料
            LET g_xcce_d_o.* = g_xcce_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axcq541_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
{<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL axcq541_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xcce_d[li_reproduce_target].* = g_xcce_d[li_reproduce].*
 
               LET g_xcce_d[li_reproduce_target].xcce002 = NULL
               LET g_xcce_d[li_reproduce_target].xcce007 = NULL
               LET g_xcce_d[li_reproduce_target].xcce008 = NULL
               LET g_xcce_d[li_reproduce_target].xcce009 = NULL
 
            END IF
            
            #add-point:modify段before insert
{<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
{<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xcce_t 
             WHERE xcceent = g_enterprise AND xcceld = g_xccd_m.xccdld
               AND xcce001 = g_xccd_m.xccd001
               AND xcce003 = g_xccd_m.xccd003
               AND xcce004 = g_xccd_m.xccd004
               AND xcce005 = g_xccd_m.xccd005
               AND xcce006 = g_xccd_m.xccd006 
               AND xcce002 = g_xcce_d[l_ac].xcce002
               AND xcce007 = g_xcce_d[l_ac].xcce007
               AND xcce008 = g_xcce_d[l_ac].xcce008
               AND xcce009 = g_xcce_d[l_ac].xcce009
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
{<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xccd_m.xccdld
               LET gs_keys[2] = g_xccd_m.xccd001
               LET gs_keys[3] = g_xccd_m.xccd002
               LET gs_keys[4] = g_xccd_m.xccd003
               LET gs_keys[5] = g_xccd_m.xccd004
               LET gs_keys[6] = g_xccd_m.xccd005
               LET gs_keys[7] = g_xccd_m.xccd006
               LET gs_keys[8] = g_xcce_d[g_detail_idx].xcce002
               LET gs_keys[9] = g_xcce_d[g_detail_idx].xcce007
               LET gs_keys[10] = g_xcce_d[g_detail_idx].xcce008
               LET gs_keys[11] = g_xcce_d[g_detail_idx].xcce009
               CALL axcq541_insert_b('xcce_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
{<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_xcce_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xcce_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axcq541_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
{<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
{<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
{<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xccd_m.xccdld
               LET gs_keys[gs_keys.getLength()+1] = g_xccd_m.xccd001
               LET gs_keys[gs_keys.getLength()+1] = g_xccd_m.xccd002
               LET gs_keys[gs_keys.getLength()+1] = g_xccd_m.xccd003
               LET gs_keys[gs_keys.getLength()+1] = g_xccd_m.xccd004
               LET gs_keys[gs_keys.getLength()+1] = g_xccd_m.xccd005
               LET gs_keys[gs_keys.getLength()+1] = g_xccd_m.xccd006
 
               LET gs_keys[gs_keys.getLength()+1] = g_xcce_d_t.xcce002
               LET gs_keys[gs_keys.getLength()+1] = g_xcce_d_t.xcce007
               LET gs_keys[gs_keys.getLength()+1] = g_xcce_d_t.xcce008
               LET gs_keys[gs_keys.getLength()+1] = g_xcce_d_t.xcce009
 
            
               #刪除同層單身
               IF NOT axcq541_delete_b('xcce_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axcq541_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axcq541_key_delete_b(gs_keys,'xcce_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axcq541_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
{<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE axcq541_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
{<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_xcce_d.getLength()
               
               #add-point:單身刪除後(<>d)
{<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xcce_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce002
            
            #add-point:AFTER FIELD xcce002
{<point name="input.a.page1.xcce002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce002
            #add-point:BEFORE FIELD xcce002
{<point name="input.b.page1.xcce002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce002
            #add-point:ON CHANGE xcce002
{<point name="input.g.page1.xcce002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce007
            
            #add-point:AFTER FIELD xcce007
{<point name="input.a.page1.xcce007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce007
            #add-point:BEFORE FIELD xcce007
{<point name="input.b.page1.xcce007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce007
            #add-point:ON CHANGE xcce007
{<point name="input.g.page1.xcce007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce008
            #add-point:BEFORE FIELD xcce008
{<point name="input.b.page1.xcce008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce008
            
            #add-point:AFTER FIELD xcce008
{<point name="input.a.page1.xcce008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce008
            #add-point:ON CHANGE xcce008
{<point name="input.g.page1.xcce008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce009
            #add-point:BEFORE FIELD xcce009
{<point name="input.b.page1.xcce009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce009
            
            #add-point:AFTER FIELD xcce009
{<point name="input.a.page1.xcce009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce009
            #add-point:ON CHANGE xcce009
{<point name="input.g.page1.xcce009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce201
            #add-point:BEFORE FIELD xcce201
{<point name="input.b.page1.xcce201" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce201
            
            #add-point:AFTER FIELD xcce201
{<point name="input.a.page1.xcce201" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce201
            #add-point:ON CHANGE xcce201
{<point name="input.g.page1.xcce201" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce202a
            #add-point:BEFORE FIELD xcce202a
{<point name="input.b.page1.xcce202a" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce202a
            
            #add-point:AFTER FIELD xcce202a
{<point name="input.a.page1.xcce202a" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce202a
            #add-point:ON CHANGE xcce202a
{<point name="input.g.page1.xcce202a" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce202b
            #add-point:BEFORE FIELD xcce202b
{<point name="input.b.page1.xcce202b" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce202b
            
            #add-point:AFTER FIELD xcce202b
{<point name="input.a.page1.xcce202b" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce202b
            #add-point:ON CHANGE xcce202b
{<point name="input.g.page1.xcce202b" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce202c
            #add-point:BEFORE FIELD xcce202c
{<point name="input.b.page1.xcce202c" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce202c
            
            #add-point:AFTER FIELD xcce202c
{<point name="input.a.page1.xcce202c" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce202c
            #add-point:ON CHANGE xcce202c
{<point name="input.g.page1.xcce202c" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce202d
            #add-point:BEFORE FIELD xcce202d
{<point name="input.b.page1.xcce202d" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce202d
            
            #add-point:AFTER FIELD xcce202d
{<point name="input.a.page1.xcce202d" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce202d
            #add-point:ON CHANGE xcce202d
{<point name="input.g.page1.xcce202d" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce202e
            #add-point:BEFORE FIELD xcce202e
{<point name="input.b.page1.xcce202e" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce202e
            
            #add-point:AFTER FIELD xcce202e
{<point name="input.a.page1.xcce202e" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce202e
            #add-point:ON CHANGE xcce202e
{<point name="input.g.page1.xcce202e" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce202f
            #add-point:BEFORE FIELD xcce202f
{<point name="input.b.page1.xcce202f" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce202f
            
            #add-point:AFTER FIELD xcce202f
{<point name="input.a.page1.xcce202f" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce202f
            #add-point:ON CHANGE xcce202f
{<point name="input.g.page1.xcce202f" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce202g
            #add-point:BEFORE FIELD xcce202g
{<point name="input.b.page1.xcce202g" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce202g
            
            #add-point:AFTER FIELD xcce202g
{<point name="input.a.page1.xcce202g" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce202g
            #add-point:ON CHANGE xcce202g
{<point name="input.g.page1.xcce202g" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce202h
            #add-point:BEFORE FIELD xcce202h
{<point name="input.b.page1.xcce202h" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce202h
            
            #add-point:AFTER FIELD xcce202h
{<point name="input.a.page1.xcce202h" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce202h
            #add-point:ON CHANGE xcce202h
{<point name="input.g.page1.xcce202h" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce202
            #add-point:BEFORE FIELD xcce202
{<point name="input.b.page1.xcce202" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce202
            
            #add-point:AFTER FIELD xcce202
{<point name="input.a.page1.xcce202" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce202
            #add-point:ON CHANGE xcce202
{<point name="input.g.page1.xcce202" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce301
            #add-point:BEFORE FIELD xcce301
{<point name="input.b.page1.xcce301" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce301
            
            #add-point:AFTER FIELD xcce301
{<point name="input.a.page1.xcce301" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce301
            #add-point:ON CHANGE xcce301
{<point name="input.g.page1.xcce301" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce302a
            #add-point:BEFORE FIELD xcce302a
{<point name="input.b.page1.xcce302a" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce302a
            
            #add-point:AFTER FIELD xcce302a
{<point name="input.a.page1.xcce302a" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce302a
            #add-point:ON CHANGE xcce302a
{<point name="input.g.page1.xcce302a" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce302b
            #add-point:BEFORE FIELD xcce302b
{<point name="input.b.page1.xcce302b" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce302b
            
            #add-point:AFTER FIELD xcce302b
{<point name="input.a.page1.xcce302b" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce302b
            #add-point:ON CHANGE xcce302b
{<point name="input.g.page1.xcce302b" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce302c
            #add-point:BEFORE FIELD xcce302c
{<point name="input.b.page1.xcce302c" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce302c
            
            #add-point:AFTER FIELD xcce302c
{<point name="input.a.page1.xcce302c" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce302c
            #add-point:ON CHANGE xcce302c
{<point name="input.g.page1.xcce302c" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce302d
            #add-point:BEFORE FIELD xcce302d
{<point name="input.b.page1.xcce302d" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce302d
            
            #add-point:AFTER FIELD xcce302d
{<point name="input.a.page1.xcce302d" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce302d
            #add-point:ON CHANGE xcce302d
{<point name="input.g.page1.xcce302d" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce302e
            #add-point:BEFORE FIELD xcce302e
{<point name="input.b.page1.xcce302e" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce302e
            
            #add-point:AFTER FIELD xcce302e
{<point name="input.a.page1.xcce302e" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce302e
            #add-point:ON CHANGE xcce302e
{<point name="input.g.page1.xcce302e" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce302f
            #add-point:BEFORE FIELD xcce302f
{<point name="input.b.page1.xcce302f" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce302f
            
            #add-point:AFTER FIELD xcce302f
{<point name="input.a.page1.xcce302f" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce302f
            #add-point:ON CHANGE xcce302f
{<point name="input.g.page1.xcce302f" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce302g
            #add-point:BEFORE FIELD xcce302g
{<point name="input.b.page1.xcce302g" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce302g
            
            #add-point:AFTER FIELD xcce302g
{<point name="input.a.page1.xcce302g" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce302g
            #add-point:ON CHANGE xcce302g
{<point name="input.g.page1.xcce302g" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce302h
            #add-point:BEFORE FIELD xcce302h
{<point name="input.b.page1.xcce302h" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce302h
            
            #add-point:AFTER FIELD xcce302h
{<point name="input.a.page1.xcce302h" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce302h
            #add-point:ON CHANGE xcce302h
{<point name="input.g.page1.xcce302h" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce302
            #add-point:BEFORE FIELD xcce302
{<point name="input.b.page1.xcce302" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce302
            
            #add-point:AFTER FIELD xcce302
{<point name="input.a.page1.xcce302" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce302
            #add-point:ON CHANGE xcce302
{<point name="input.g.page1.xcce302" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce303
            #add-point:BEFORE FIELD xcce303
{<point name="input.b.page1.xcce303" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce303
            
            #add-point:AFTER FIELD xcce303
{<point name="input.a.page1.xcce303" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce303
            #add-point:ON CHANGE xcce303
{<point name="input.g.page1.xcce303" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce304a
            #add-point:BEFORE FIELD xcce304a
{<point name="input.b.page1.xcce304a" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce304a
            
            #add-point:AFTER FIELD xcce304a
{<point name="input.a.page1.xcce304a" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce304a
            #add-point:ON CHANGE xcce304a
{<point name="input.g.page1.xcce304a" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce304b
            #add-point:BEFORE FIELD xcce304b
{<point name="input.b.page1.xcce304b" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce304b
            
            #add-point:AFTER FIELD xcce304b
{<point name="input.a.page1.xcce304b" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce304b
            #add-point:ON CHANGE xcce304b
{<point name="input.g.page1.xcce304b" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce304c
            #add-point:BEFORE FIELD xcce304c
{<point name="input.b.page1.xcce304c" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce304c
            
            #add-point:AFTER FIELD xcce304c
{<point name="input.a.page1.xcce304c" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce304c
            #add-point:ON CHANGE xcce304c
{<point name="input.g.page1.xcce304c" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce304d
            #add-point:BEFORE FIELD xcce304d
{<point name="input.b.page1.xcce304d" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce304d
            
            #add-point:AFTER FIELD xcce304d
{<point name="input.a.page1.xcce304d" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce304d
            #add-point:ON CHANGE xcce304d
{<point name="input.g.page1.xcce304d" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce304e
            #add-point:BEFORE FIELD xcce304e
{<point name="input.b.page1.xcce304e" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce304e
            
            #add-point:AFTER FIELD xcce304e
{<point name="input.a.page1.xcce304e" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce304e
            #add-point:ON CHANGE xcce304e
{<point name="input.g.page1.xcce304e" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce304f
            #add-point:BEFORE FIELD xcce304f
{<point name="input.b.page1.xcce304f" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce304f
            
            #add-point:AFTER FIELD xcce304f
{<point name="input.a.page1.xcce304f" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce304f
            #add-point:ON CHANGE xcce304f
{<point name="input.g.page1.xcce304f" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce304g
            #add-point:BEFORE FIELD xcce304g
{<point name="input.b.page1.xcce304g" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce304g
            
            #add-point:AFTER FIELD xcce304g
{<point name="input.a.page1.xcce304g" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce304g
            #add-point:ON CHANGE xcce304g
{<point name="input.g.page1.xcce304g" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce304h
            #add-point:BEFORE FIELD xcce304h
{<point name="input.b.page1.xcce304h" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce304h
            
            #add-point:AFTER FIELD xcce304h
{<point name="input.a.page1.xcce304h" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce304h
            #add-point:ON CHANGE xcce304h
{<point name="input.g.page1.xcce304h" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce304
            #add-point:BEFORE FIELD xcce304
{<point name="input.b.page1.xcce304" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce304
            
            #add-point:AFTER FIELD xcce304
{<point name="input.a.page1.xcce304" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce304
            #add-point:ON CHANGE xcce304
{<point name="input.g.page1.xcce304" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce901
            #add-point:BEFORE FIELD xcce901
{<point name="input.b.page1.xcce901" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce901
            
            #add-point:AFTER FIELD xcce901
{<point name="input.a.page1.xcce901" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce901
            #add-point:ON CHANGE xcce901
{<point name="input.g.page1.xcce901" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce902a
            #add-point:BEFORE FIELD xcce902a
{<point name="input.b.page1.xcce902a" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce902a
            
            #add-point:AFTER FIELD xcce902a
{<point name="input.a.page1.xcce902a" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce902a
            #add-point:ON CHANGE xcce902a
{<point name="input.g.page1.xcce902a" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce902b
            #add-point:BEFORE FIELD xcce902b
{<point name="input.b.page1.xcce902b" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce902b
            
            #add-point:AFTER FIELD xcce902b
{<point name="input.a.page1.xcce902b" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce902b
            #add-point:ON CHANGE xcce902b
{<point name="input.g.page1.xcce902b" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce902c
            #add-point:BEFORE FIELD xcce902c
{<point name="input.b.page1.xcce902c" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce902c
            
            #add-point:AFTER FIELD xcce902c
{<point name="input.a.page1.xcce902c" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce902c
            #add-point:ON CHANGE xcce902c
{<point name="input.g.page1.xcce902c" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce902d
            #add-point:BEFORE FIELD xcce902d
{<point name="input.b.page1.xcce902d" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce902d
            
            #add-point:AFTER FIELD xcce902d
{<point name="input.a.page1.xcce902d" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce902d
            #add-point:ON CHANGE xcce902d
{<point name="input.g.page1.xcce902d" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce902e
            #add-point:BEFORE FIELD xcce902e
{<point name="input.b.page1.xcce902e" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce902e
            
            #add-point:AFTER FIELD xcce902e
{<point name="input.a.page1.xcce902e" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce902e
            #add-point:ON CHANGE xcce902e
{<point name="input.g.page1.xcce902e" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce902f
            #add-point:BEFORE FIELD xcce902f
{<point name="input.b.page1.xcce902f" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce902f
            
            #add-point:AFTER FIELD xcce902f
{<point name="input.a.page1.xcce902f" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce902f
            #add-point:ON CHANGE xcce902f
{<point name="input.g.page1.xcce902f" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce902g
            #add-point:BEFORE FIELD xcce902g
{<point name="input.b.page1.xcce902g" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce902g
            
            #add-point:AFTER FIELD xcce902g
{<point name="input.a.page1.xcce902g" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce902g
            #add-point:ON CHANGE xcce902g
{<point name="input.g.page1.xcce902g" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce902h
            #add-point:BEFORE FIELD xcce902h
{<point name="input.b.page1.xcce902h" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce902h
            
            #add-point:AFTER FIELD xcce902h
{<point name="input.a.page1.xcce902h" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce902h
            #add-point:ON CHANGE xcce902h
{<point name="input.g.page1.xcce902h" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xcce902
            #add-point:BEFORE FIELD xcce902
{<point name="input.b.page1.xcce902" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xcce902
            
            #add-point:AFTER FIELD xcce902
{<point name="input.a.page1.xcce902" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xcce902
            #add-point:ON CHANGE xcce902
{<point name="input.g.page1.xcce902" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.xcce002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce002
            #add-point:ON ACTION controlp INFIELD xcce002
{<point name="input.c.page1.xcce002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce007
            #add-point:ON ACTION controlp INFIELD xcce007
{<point name="input.c.page1.xcce007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce008
            #add-point:ON ACTION controlp INFIELD xcce008
{<point name="input.c.page1.xcce008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce009
            #add-point:ON ACTION controlp INFIELD xcce009
{<point name="input.c.page1.xcce009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce201
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce201
            #add-point:ON ACTION controlp INFIELD xcce201
{<point name="input.c.page1.xcce201" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce202a
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce202a
            #add-point:ON ACTION controlp INFIELD xcce202a
{<point name="input.c.page1.xcce202a" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce202b
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce202b
            #add-point:ON ACTION controlp INFIELD xcce202b
{<point name="input.c.page1.xcce202b" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce202c
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce202c
            #add-point:ON ACTION controlp INFIELD xcce202c
{<point name="input.c.page1.xcce202c" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce202d
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce202d
            #add-point:ON ACTION controlp INFIELD xcce202d
{<point name="input.c.page1.xcce202d" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce202e
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce202e
            #add-point:ON ACTION controlp INFIELD xcce202e
{<point name="input.c.page1.xcce202e" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce202f
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce202f
            #add-point:ON ACTION controlp INFIELD xcce202f
{<point name="input.c.page1.xcce202f" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce202g
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce202g
            #add-point:ON ACTION controlp INFIELD xcce202g
{<point name="input.c.page1.xcce202g" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce202h
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce202h
            #add-point:ON ACTION controlp INFIELD xcce202h
{<point name="input.c.page1.xcce202h" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce202
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce202
            #add-point:ON ACTION controlp INFIELD xcce202
{<point name="input.c.page1.xcce202" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce301
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce301
            #add-point:ON ACTION controlp INFIELD xcce301
{<point name="input.c.page1.xcce301" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce302a
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce302a
            #add-point:ON ACTION controlp INFIELD xcce302a
{<point name="input.c.page1.xcce302a" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce302b
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce302b
            #add-point:ON ACTION controlp INFIELD xcce302b
{<point name="input.c.page1.xcce302b" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce302c
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce302c
            #add-point:ON ACTION controlp INFIELD xcce302c
{<point name="input.c.page1.xcce302c" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce302d
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce302d
            #add-point:ON ACTION controlp INFIELD xcce302d
{<point name="input.c.page1.xcce302d" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce302e
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce302e
            #add-point:ON ACTION controlp INFIELD xcce302e
{<point name="input.c.page1.xcce302e" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce302f
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce302f
            #add-point:ON ACTION controlp INFIELD xcce302f
{<point name="input.c.page1.xcce302f" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce302g
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce302g
            #add-point:ON ACTION controlp INFIELD xcce302g
{<point name="input.c.page1.xcce302g" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce302h
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce302h
            #add-point:ON ACTION controlp INFIELD xcce302h
{<point name="input.c.page1.xcce302h" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce302
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce302
            #add-point:ON ACTION controlp INFIELD xcce302
{<point name="input.c.page1.xcce302" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce303
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce303
            #add-point:ON ACTION controlp INFIELD xcce303
{<point name="input.c.page1.xcce303" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce304a
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce304a
            #add-point:ON ACTION controlp INFIELD xcce304a
{<point name="input.c.page1.xcce304a" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce304b
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce304b
            #add-point:ON ACTION controlp INFIELD xcce304b
{<point name="input.c.page1.xcce304b" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce304c
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce304c
            #add-point:ON ACTION controlp INFIELD xcce304c
{<point name="input.c.page1.xcce304c" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce304d
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce304d
            #add-point:ON ACTION controlp INFIELD xcce304d
{<point name="input.c.page1.xcce304d" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce304e
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce304e
            #add-point:ON ACTION controlp INFIELD xcce304e
{<point name="input.c.page1.xcce304e" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce304f
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce304f
            #add-point:ON ACTION controlp INFIELD xcce304f
{<point name="input.c.page1.xcce304f" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce304g
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce304g
            #add-point:ON ACTION controlp INFIELD xcce304g
{<point name="input.c.page1.xcce304g" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce304h
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce304h
            #add-point:ON ACTION controlp INFIELD xcce304h
{<point name="input.c.page1.xcce304h" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce304
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce304
            #add-point:ON ACTION controlp INFIELD xcce304
{<point name="input.c.page1.xcce304" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce901
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce901
            #add-point:ON ACTION controlp INFIELD xcce901
{<point name="input.c.page1.xcce901" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce902a
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce902a
            #add-point:ON ACTION controlp INFIELD xcce902a
{<point name="input.c.page1.xcce902a" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce902b
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce902b
            #add-point:ON ACTION controlp INFIELD xcce902b
{<point name="input.c.page1.xcce902b" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce902c
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce902c
            #add-point:ON ACTION controlp INFIELD xcce902c
{<point name="input.c.page1.xcce902c" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce902d
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce902d
            #add-point:ON ACTION controlp INFIELD xcce902d
{<point name="input.c.page1.xcce902d" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce902e
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce902e
            #add-point:ON ACTION controlp INFIELD xcce902e
{<point name="input.c.page1.xcce902e" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce902f
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce902f
            #add-point:ON ACTION controlp INFIELD xcce902f
{<point name="input.c.page1.xcce902f" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce902g
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce902g
            #add-point:ON ACTION controlp INFIELD xcce902g
{<point name="input.c.page1.xcce902g" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce902h
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce902h
            #add-point:ON ACTION controlp INFIELD xcce902h
{<point name="input.c.page1.xcce902h" />}
            #END add-point
 
         #Ctrlp:input.c.page1.xcce902
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xcce902
            #add-point:ON ACTION controlp INFIELD xcce902
{<point name="input.c.page1.xcce902" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_xcce_d[l_ac].* = g_xcce_d_t.*
               CLOSE axcq541_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xcce_d[l_ac].xcce002 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_xcce_d[l_ac].* = g_xcce_d_t.*
            ELSE
            
               #add-point:單身修改前
{<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE xcce_t SET (xcceld,xcce001,xcce002,xcce003,xcce004,xcce005,xcce006,xcce007,xcce008, 
                   xcce009,xcce201,xcce202a,xcce202b,xcce202c,xcce202d,xcce202e,xcce202f,xcce202g,xcce202h, 
                   xcce202,xcce301,xcce302a,xcce302b,xcce302c,xcce302d,xcce302e,xcce302f,xcce302g,xcce302h, 
                   xcce302,xcce303,xcce304a,xcce304b,xcce304c,xcce304d,xcce304e,xcce304f,xcce304g,xcce304h, 
                   xcce304,xcce901,xcce902a,xcce902b,xcce902c,xcce902d,xcce902e,xcce902f,xcce902g,xcce902h, 
                   xcce902) = (g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd002,g_xccd_m.xccd003,g_xccd_m.xccd004, 
                   g_xccd_m.xccd005,g_xccd_m.xccd006,g_xcce_d[l_ac].xcce007,g_xcce_d[l_ac].xcce008, 
                   g_xcce_d[l_ac].xcce009,g_xcce_d[l_ac].xcce201,g_xcce_d[l_ac].xcce202a,g_xcce_d[l_ac].xcce202b, 
                   g_xcce_d[l_ac].xcce202c,g_xcce_d[l_ac].xcce202d,g_xcce_d[l_ac].xcce202e,g_xcce_d[l_ac].xcce202f, 
                   g_xcce_d[l_ac].xcce202g,g_xcce_d[l_ac].xcce202h,g_xcce_d[l_ac].xcce202,g_xcce_d[l_ac].xcce301, 
                   g_xcce_d[l_ac].xcce302a,g_xcce_d[l_ac].xcce302b,g_xcce_d[l_ac].xcce302c,g_xcce_d[l_ac].xcce302d, 
                   g_xcce_d[l_ac].xcce302e,g_xcce_d[l_ac].xcce302f,g_xcce_d[l_ac].xcce302g,g_xcce_d[l_ac].xcce302h, 
                   g_xcce_d[l_ac].xcce302,g_xcce_d[l_ac].xcce303,g_xcce_d[l_ac].xcce304a,g_xcce_d[l_ac].xcce304b, 
                   g_xcce_d[l_ac].xcce304c,g_xcce_d[l_ac].xcce304d,g_xcce_d[l_ac].xcce304e,g_xcce_d[l_ac].xcce304f, 
                   g_xcce_d[l_ac].xcce304g,g_xcce_d[l_ac].xcce304h,g_xcce_d[l_ac].xcce304,g_xcce_d[l_ac].xcce901, 
                   g_xcce_d[l_ac].xcce902a,g_xcce_d[l_ac].xcce902b,g_xcce_d[l_ac].xcce902c,g_xcce_d[l_ac].xcce902d, 
                   g_xcce_d[l_ac].xcce902e,g_xcce_d[l_ac].xcce902f,g_xcce_d[l_ac].xcce902g,g_xcce_d[l_ac].xcce902h, 
                   g_xcce_d[l_ac].xcce902)
                WHERE xcceent = g_enterprise AND xcceld = g_xccd_m.xccdld 
                  AND xcce001 = g_xccd_m.xccd001 
                  AND xcce003 = g_xccd_m.xccd003 
                  AND xcce004 = g_xccd_m.xccd004 
                  AND xcce005 = g_xccd_m.xccd005 
                  AND xcce006 = g_xccd_m.xccd006 
                  AND xcce002 = g_xcce_d_t.xcce002 #項次   
                  AND xcce007 = g_xcce_d_t.xcce007  
                  AND xcce008 = g_xcce_d_t.xcce008  
                  AND xcce009 = g_xcce_d_t.xcce009  
 
                  
               #add-point:單身修改中
{<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcce_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_xcce_d[l_ac].* = g_xcce_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xcce_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_xcce_d[l_ac].* = g_xcce_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xccd_m.xccdld
               LET gs_keys_bak[1] = g_xccdld_t
               LET gs_keys[2] = g_xccd_m.xccd001
               LET gs_keys_bak[2] = g_xccd001_t
               LET gs_keys[3] = g_xccd_m.xccd002
               LET gs_keys_bak[3] = g_xccd002_t
               LET gs_keys[4] = g_xccd_m.xccd003
               LET gs_keys_bak[4] = g_xccd003_t
               LET gs_keys[5] = g_xccd_m.xccd004
               LET gs_keys_bak[5] = g_xccd004_t
               LET gs_keys[6] = g_xccd_m.xccd005
               LET gs_keys_bak[6] = g_xccd005_t
               LET gs_keys[7] = g_xccd_m.xccd006
               LET gs_keys_bak[7] = g_xccd006_t
               LET gs_keys[8] = g_xcce_d[g_detail_idx].xcce002
               LET gs_keys_bak[8] = g_xcce_d_t.xcce002
               LET gs_keys[9] = g_xcce_d[g_detail_idx].xcce007
               LET gs_keys_bak[9] = g_xcce_d_t.xcce007
               LET gs_keys[10] = g_xcce_d[g_detail_idx].xcce008
               LET gs_keys_bak[10] = g_xcce_d_t.xcce008
               LET gs_keys[11] = g_xcce_d[g_detail_idx].xcce009
               LET gs_keys_bak[11] = g_xcce_d_t.xcce009
               CALL axcq541_update_b('xcce_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_xcce_d[g_detail_idx].xcce002 = g_xcce_d_t.xcce002 
                  AND g_xcce_d[g_detail_idx].xcce007 = g_xcce_d_t.xcce007 
                  AND g_xcce_d[g_detail_idx].xcce008 = g_xcce_d_t.xcce008 
                  AND g_xcce_d[g_detail_idx].xcce009 = g_xcce_d_t.xcce009 
 
                  ) THEN
                  LET gs_keys[01] = g_xccd_m.xccdld
                  LET gs_keys[gs_keys.getLength()+1] = g_xccd_m.xccd001
                  LET gs_keys[gs_keys.getLength()+1] = g_xccd_m.xccd002
                  LET gs_keys[gs_keys.getLength()+1] = g_xccd_m.xccd003
                  LET gs_keys[gs_keys.getLength()+1] = g_xccd_m.xccd004
                  LET gs_keys[gs_keys.getLength()+1] = g_xccd_m.xccd005
                  LET gs_keys[gs_keys.getLength()+1] = g_xccd_m.xccd006
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xcce_d_t.xcce002
                  LET gs_keys[gs_keys.getLength()+1] = g_xcce_d_t.xcce007
                  LET gs_keys[gs_keys.getLength()+1] = g_xcce_d_t.xcce008
                  LET gs_keys[gs_keys.getLength()+1] = g_xcce_d_t.xcce009
 
                  CALL axcq541_key_update_b(gs_keys,'xcce_t')
               END IF
               
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_xccd_m),util.JSON.stringify(g_xcce_d_t)
               LET g_log2 = util.JSON.stringify(g_xccd_m),util.JSON.stringify(g_xcce_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
{<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
{<point name="input.body.after_row"/>}
            #end add-point
            CALL axcq541_unlock_b("xcce_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
{<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
{<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_xcce_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xcce_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 

{</section>}

{<section id="axcq541.input.other" >}
      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD xccdld
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xcce002
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION

{</section>}

{<section id="axcq541.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axcq541_show()
   DEFINE l_ac_t    LIKE type_t.num10 #5
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL axcq541_b_fill() #單身填充
      CALL axcq541_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL axcq541_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xccd_m.xccdcomp,g_xccd_m.xccdcomp_desc,g_xccd_m.xccdld,g_xccd_m.xccdld_desc,g_xccd_m.xccd004, 
       g_xccd_m.xccd005,g_xccd_m.xccd001,g_xccd_m.xccd001_desc,g_xccd_m.xccd003,g_xccd_m.xccd003_desc, 
       g_xccd_m.xccd002,g_xccd_m.xccd002_desc,g_xccd_m.xccd006,g_xccd_m.sfaa019,g_xccd_m.sfaa020,g_xccd_m.xccd007, 
       g_xccd_m.sfaa012,g_xccd_m.sfaa049,g_xccd_m.xccd007_desc,g_xccd_m.xccd301_sum,g_xccd_m.xccd301, 
       g_xccd_m.xccd007_desc_1,g_xccd_m.xcbk100,g_xccd_m.xcbk100_1
   
   #顯示狀態(stus)圖片
   
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xcce_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL axcq541_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="axcq541.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION axcq541_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="axcq541.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axcq541_reproduce()
   DEFINE l_newno     LIKE xccd_t.xccdld 
   DEFINE l_oldno     LIKE xccd_t.xccdld 
   DEFINE l_newno02     LIKE xccd_t.xccd001 
   DEFINE l_oldno02     LIKE xccd_t.xccd001 
   DEFINE l_newno03     LIKE xccd_t.xccd002 
   DEFINE l_oldno03     LIKE xccd_t.xccd002 
   DEFINE l_newno04     LIKE xccd_t.xccd003 
   DEFINE l_oldno04     LIKE xccd_t.xccd003 
   DEFINE l_newno05     LIKE xccd_t.xccd004 
   DEFINE l_oldno05     LIKE xccd_t.xccd004 
   DEFINE l_newno06     LIKE xccd_t.xccd005 
   DEFINE l_oldno06     LIKE xccd_t.xccd005 
   DEFINE l_newno07     LIKE xccd_t.xccd006 
   DEFINE l_oldno07     LIKE xccd_t.xccd006 
 
   DEFINE l_master    RECORD LIKE xccd_t.*
   DEFINE l_detail    RECORD LIKE xcce_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num10 #5
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   
   LET g_master_insert = FALSE
   
   IF g_xccd_m.xccdld IS NULL
   OR g_xccd_m.xccd001 IS NULL
   OR g_xccd_m.xccd002 IS NULL
   OR g_xccd_m.xccd003 IS NULL
   OR g_xccd_m.xccd004 IS NULL
   OR g_xccd_m.xccd005 IS NULL
   OR g_xccd_m.xccd006 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_xccdld_t = g_xccd_m.xccdld
   LET g_xccd001_t = g_xccd_m.xccd001
   LET g_xccd002_t = g_xccd_m.xccd002
   LET g_xccd003_t = g_xccd_m.xccd003
   LET g_xccd004_t = g_xccd_m.xccd004
   LET g_xccd005_t = g_xccd_m.xccd005
   LET g_xccd006_t = g_xccd_m.xccd006
 
    
   LET g_xccd_m.xccdld = ""
   LET g_xccd_m.xccd001 = ""
   LET g_xccd_m.xccd002 = ""
   LET g_xccd_m.xccd003 = ""
   LET g_xccd_m.xccd004 = ""
   LET g_xccd_m.xccd005 = ""
   LET g_xccd_m.xccd006 = ""
 
    
   CALL axcq541_set_entry('a')
   CALL axcq541_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
   
   
   #清空key欄位的desc
      LET g_xccd_m.xccdld_desc = ''
   DISPLAY BY NAME g_xccd_m.xccdld_desc
   LET g_xccd_m.xccd001_desc = ''
   DISPLAY BY NAME g_xccd_m.xccd001_desc
   LET g_xccd_m.xccd003_desc = ''
   DISPLAY BY NAME g_xccd_m.xccd003_desc
   LET g_xccd_m.xccd002_desc = ''
   DISPLAY BY NAME g_xccd_m.xccd002_desc
 
   
   CALL axcq541_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_xccd_m.* TO NULL
      INITIALIZE g_xcce_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL axcq541_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axcq541_set_act_visible()   
   CALL axcq541_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xccdld_t = g_xccd_m.xccdld
   LET g_xccd001_t = g_xccd_m.xccd001
   LET g_xccd002_t = g_xccd_m.xccd002
   LET g_xccd003_t = g_xccd_m.xccd003
   LET g_xccd004_t = g_xccd_m.xccd004
   LET g_xccd005_t = g_xccd_m.xccd005
   LET g_xccd006_t = g_xccd_m.xccd006
 
   
   #組合新增資料的條件
   LET g_add_browse = " xccdent = '" ||g_enterprise|| "' AND",
                      " xccdld = '", g_xccd_m.xccdld, "' "
                      ," AND xccd001 = '", g_xccd_m.xccd001, "' "
                      ," AND xccd002 = '", g_xccd_m.xccd002, "' "
                      ," AND xccd003 = '", g_xccd_m.xccd003, "' "
                      ," AND xccd004 = '", g_xccd_m.xccd004, "' "
                      ," AND xccd005 = '", g_xccd_m.xccd005, "' "
                      ," AND xccd006 = '", g_xccd_m.xccd006, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axcq541_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL axcq541_idx_chk()
 
   #流程通知預埋點-R
   CALL axcq541_set_pk_array()
   CALL cl_flow_notify('','R')
   
END FUNCTION

{</section>}

{<section id="axcq541.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axcq541_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xcce_t.*
 
 
   #add-point:delete段define
{<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define
{<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axcq541_detail
   
   #add-point:單身複製前1
{<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axcq541_detail AS ",
                "SELECT * FROM xcce_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axcq541_detail SELECT * FROM xcce_t 
                                         WHERE xcceent = g_enterprise AND xcceld = g_xccdld_t
                                         AND xcce001 = g_xccd001_t
                                         AND xcce003 = g_xccd003_t
                                         AND xcce004 = g_xccd004_t
                                         AND xcce005 = g_xccd005_t
                                         AND xcce006 = g_xccd006_t

 
   
   #將key修正為調整後   
   UPDATE axcq541_detail 
      #更新key欄位
      SET xcceld = g_xccd_m.xccdld
          , xcce001 = g_xccd_m.xccd001
          , xcce003 = g_xccd_m.xccd003
          , xcce004 = g_xccd_m.xccd004
          , xcce005 = g_xccd_m.xccd005
          , xcce006 = g_xccd_m.xccd006

 
      #更新共用欄位
      
 
   #add-point:單身修改前
{<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO xcce_t SELECT * FROM axcq541_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
{<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axcq541_detail
   
   #add-point:單身複製後1
{<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xccdld_t = g_xccd_m.xccdld
   LET g_xccd001_t = g_xccd_m.xccd001
   LET g_xccd002_t = g_xccd_m.xccd002
   LET g_xccd003_t = g_xccd_m.xccd003
   LET g_xccd004_t = g_xccd_m.xccd004
   LET g_xccd005_t = g_xccd_m.xccd005
   LET g_xccd006_t = g_xccd_m.xccd006
 
   
END FUNCTION

{</section>}

{<section id="axcq541.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axcq541_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
{<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define
{<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_xccd_m.xccdld IS NULL
   OR g_xccd_m.xccd001 IS NULL
   OR g_xccd_m.xccd002 IS NULL
   OR g_xccd_m.xccd003 IS NULL
   OR g_xccd_m.xccd004 IS NULL
   OR g_xccd_m.xccd005 IS NULL
   OR g_xccd_m.xccd006 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN axcq541_cl USING g_enterprise,g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd002,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axcq541_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE axcq541_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axcq541_master_referesh USING g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd002,g_xccd_m.xccd003, 
       g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006 INTO g_xccd_m.xccdcomp,g_xccd_m.xccdld,g_xccd_m.xccd004, 
       g_xccd_m.xccd005,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd002,g_xccd_m.xccd006,g_xccd_m.xccd007, 
       g_xccd_m.xccd301,g_xccd_m.xccd002_desc,g_xccd_m.xccd007_desc
   
   CALL axcq541_show()
   
   #add-point:delete段before ask
{<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
{<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL axcq541_set_pk_array()
      #add-point:相關文件刪除前
{<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_xccdld_t = g_xccd_m.xccdld
      LET g_xccd001_t = g_xccd_m.xccd001
      LET g_xccd002_t = g_xccd_m.xccd002
      LET g_xccd003_t = g_xccd_m.xccd003
      LET g_xccd004_t = g_xccd_m.xccd004
      LET g_xccd005_t = g_xccd_m.xccd005
      LET g_xccd006_t = g_xccd_m.xccd006
 
 
      DELETE FROM xccd_t
       WHERE xccdent = g_enterprise AND xccdld = g_xccd_m.xccdld
         AND xccd001 = g_xccd_m.xccd001
         AND xccd002 = g_xccd_m.xccd002
         AND xccd003 = g_xccd_m.xccd003
         AND xccd004 = g_xccd_m.xccd004
         AND xccd005 = g_xccd_m.xccd005
         AND xccd006 = g_xccd_m.xccd006
 
       
      #add-point:單頭刪除中
{<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_xccd_m.xccdld 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
{<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
{<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM xcce_t
       WHERE xcceent = g_enterprise AND xcceld = g_xccd_m.xccdld
         AND xcce001 = g_xccd_m.xccd001
         AND xcce003 = g_xccd_m.xccd003
         AND xcce004 = g_xccd_m.xccd004
         AND xcce005 = g_xccd_m.xccd005
         AND xcce006 = g_xccd_m.xccd006

 
 
      #add-point:單身刪除中
{<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xcce_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
{<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_xcce_d.clear() 
 
     
      CALL axcq541_ui_browser_refresh()  
      #CALL axcq541_ui_headershow()  
      #CALL axcq541_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL axcq541_browser_fill("")
         CALL axcq541_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
{<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
{<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE axcq541_cl
 
   #流程通知預埋點-D
   CALL axcq541_set_pk_array()
   CALL cl_flow_notify('','D')
    
END FUNCTION

{</section>}

{<section id="axcq541.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axcq541_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
{<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define
{<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
   
   CALL g_xcce_d.clear()    #g_xcce_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
{<point name="b_fill.sql_before"/>}
   #end add-point
{<point name="b_fill.body.fill_sql"/>}

{<point name="b_fill.sql"/>}

      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      
      LET g_sql_tmp = g_sql   #by wuxja add 20150320
      
      PREPARE axcq541_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR axcq541_pb

      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006,
                           g_enterprise,g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd003,g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006
                                               
      FOREACH b_fill_cs INTO g_xcce_d[l_ac].xcce002,g_xcce_d[l_ac].xcce007,g_xcce_d[l_ac].xcce008,g_xcce_d[l_ac].xcce009, 
          g_xcce_d[l_ac].xcce201,g_xcce_d[l_ac].xcce202a,g_xcce_d[l_ac].xcce202b,g_xcce_d[l_ac].xcce202c, 
          g_xcce_d[l_ac].xcce202d,g_xcce_d[l_ac].xcce202e,g_xcce_d[l_ac].xcce202f,g_xcce_d[l_ac].xcce202g, 
          g_xcce_d[l_ac].xcce202h,g_xcce_d[l_ac].xcce202,g_xcce_d[l_ac].xcce301_sum,g_xcce_d[l_ac].xcce302a_sum, 
          g_xcce_d[l_ac].xcce302b_sum,g_xcce_d[l_ac].xcce302c_sum,g_xcce_d[l_ac].xcce302d_sum,g_xcce_d[l_ac].xcce302e_sum, 
          g_xcce_d[l_ac].xcce302f_sum,g_xcce_d[l_ac].xcce302g_sum,g_xcce_d[l_ac].xcce302h_sum,g_xcce_d[l_ac].xcce302_sum,
          g_xcce_d[l_ac].xcce301,g_xcce_d[l_ac].xcce302a, 
          g_xcce_d[l_ac].xcce302b,g_xcce_d[l_ac].xcce302c,g_xcce_d[l_ac].xcce302d,g_xcce_d[l_ac].xcce302e, 
          g_xcce_d[l_ac].xcce302f,g_xcce_d[l_ac].xcce302g,g_xcce_d[l_ac].xcce302h,g_xcce_d[l_ac].xcce302,g_xcce_d[l_ac].xcce_price,          
          g_xcce_d[l_ac].xcce303,g_xcce_d[l_ac].xcce304a,g_xcce_d[l_ac].xcce304b,g_xcce_d[l_ac].xcce304c, 
          g_xcce_d[l_ac].xcce304d,g_xcce_d[l_ac].xcce304e,g_xcce_d[l_ac].xcce304f,g_xcce_d[l_ac].xcce304g, 
          g_xcce_d[l_ac].xcce304h,g_xcce_d[l_ac].xcce304,g_xcce_d[l_ac].xcce901,g_xcce_d[l_ac].xcce902a, 
          g_xcce_d[l_ac].xcce902b,g_xcce_d[l_ac].xcce902c,g_xcce_d[l_ac].xcce902d,g_xcce_d[l_ac].xcce902e, 
          g_xcce_d[l_ac].xcce902f,g_xcce_d[l_ac].xcce902g,g_xcce_d[l_ac].xcce902h,g_xcce_d[l_ac].xcce902, 
          g_xcce_d[l_ac].xcce002_desc,g_xcce_d[l_ac].xcce007_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
{<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   
 
   
   #add-point:browser_fill段其他table處理
{<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_xcce_d.deleteElement(g_xcce_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE axcq541_pb
 
   CALL cl_ap_performance_next_end()
   
END FUNCTION

{</section>}

{<section id="axcq541.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axcq541_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10 #5
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM xcce_t
       WHERE xcceent = g_enterprise AND
         xcceld = ps_keys_bak[1] AND xcce001 = ps_keys_bak[2] AND xcce003 = ps_keys_bak[3] AND xcce004 = ps_keys_bak[4] AND xcce005 = ps_keys_bak[5] AND xcce006 = ps_keys_bak[6] AND xcce002 = ps_keys_bak[7] AND xcce007 = ps_keys_bak[8] AND xcce008 = ps_keys_bak[9] AND xcce009 = ps_keys_bak[10]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xcce_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="axcq541.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axcq541_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10 #5
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO xcce_t
                  (xcceent,
                   xcceld,xcce001,xcce003,xcce004,xcce005,xcce006,
                   xcce002,xcce007,xcce008,xcce009
                   ,xcce201,xcce202a,xcce202b,xcce202c,xcce202d,xcce202e,xcce202f,xcce202g,xcce202h,xcce202,xcce301,xcce302a,xcce302b,xcce302c,xcce302d,xcce302e,xcce302f,xcce302g,xcce302h,xcce302,xcce303,xcce304a,xcce304b,xcce304c,xcce304d,xcce304e,xcce304f,xcce304g,xcce304h,xcce304,xcce901,xcce902a,xcce902b,xcce902c,xcce902d,xcce902e,xcce902f,xcce902g,xcce902h,xcce902) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6],ps_keys[7],ps_keys[8],ps_keys[9],ps_keys[10]
                   ,g_xcce_d[g_detail_idx].xcce201,g_xcce_d[g_detail_idx].xcce202a,g_xcce_d[g_detail_idx].xcce202b, 
                       g_xcce_d[g_detail_idx].xcce202c,g_xcce_d[g_detail_idx].xcce202d,g_xcce_d[g_detail_idx].xcce202e, 
                       g_xcce_d[g_detail_idx].xcce202f,g_xcce_d[g_detail_idx].xcce202g,g_xcce_d[g_detail_idx].xcce202h, 
                       g_xcce_d[g_detail_idx].xcce202,g_xcce_d[g_detail_idx].xcce301,g_xcce_d[g_detail_idx].xcce302a, 
                       g_xcce_d[g_detail_idx].xcce302b,g_xcce_d[g_detail_idx].xcce302c,g_xcce_d[g_detail_idx].xcce302d, 
                       g_xcce_d[g_detail_idx].xcce302e,g_xcce_d[g_detail_idx].xcce302f,g_xcce_d[g_detail_idx].xcce302g, 
                       g_xcce_d[g_detail_idx].xcce302h,g_xcce_d[g_detail_idx].xcce302,g_xcce_d[g_detail_idx].xcce303, 
                       g_xcce_d[g_detail_idx].xcce304a,g_xcce_d[g_detail_idx].xcce304b,g_xcce_d[g_detail_idx].xcce304c, 
                       g_xcce_d[g_detail_idx].xcce304d,g_xcce_d[g_detail_idx].xcce304e,g_xcce_d[g_detail_idx].xcce304f, 
                       g_xcce_d[g_detail_idx].xcce304g,g_xcce_d[g_detail_idx].xcce304h,g_xcce_d[g_detail_idx].xcce304, 
                       g_xcce_d[g_detail_idx].xcce901,g_xcce_d[g_detail_idx].xcce902a,g_xcce_d[g_detail_idx].xcce902b, 
                       g_xcce_d[g_detail_idx].xcce902c,g_xcce_d[g_detail_idx].xcce902d,g_xcce_d[g_detail_idx].xcce902e, 
                       g_xcce_d[g_detail_idx].xcce902f,g_xcce_d[g_detail_idx].xcce902g,g_xcce_d[g_detail_idx].xcce902h, 
                       g_xcce_d[g_detail_idx].xcce902)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xcce_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xcce_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION

{</section>}

{<section id="axcq541.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axcq541_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 #5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xcce_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE xcce_t 
         SET (xcceld,xcce001,xcce003,xcce004,xcce005,xcce006,
              xcce002,xcce007,xcce008,xcce009
              ,xcce201,xcce202a,xcce202b,xcce202c,xcce202d,xcce202e,xcce202f,xcce202g,xcce202h,xcce202,xcce301,xcce302a,xcce302b,xcce302c,xcce302d,xcce302e,xcce302f,xcce302g,xcce302h,xcce302,xcce303,xcce304a,xcce304b,xcce304c,xcce304d,xcce304e,xcce304f,xcce304g,xcce304h,xcce304,xcce901,xcce902a,xcce902b,xcce902c,xcce902d,xcce902e,xcce902f,xcce902g,xcce902h,xcce902) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6],ps_keys[7],ps_keys[8],ps_keys[9],ps_keys[10]
              ,g_xcce_d[g_detail_idx].xcce201,g_xcce_d[g_detail_idx].xcce202a,g_xcce_d[g_detail_idx].xcce202b, 
                  g_xcce_d[g_detail_idx].xcce202c,g_xcce_d[g_detail_idx].xcce202d,g_xcce_d[g_detail_idx].xcce202e, 
                  g_xcce_d[g_detail_idx].xcce202f,g_xcce_d[g_detail_idx].xcce202g,g_xcce_d[g_detail_idx].xcce202h, 
                  g_xcce_d[g_detail_idx].xcce202,g_xcce_d[g_detail_idx].xcce301,g_xcce_d[g_detail_idx].xcce302a, 
                  g_xcce_d[g_detail_idx].xcce302b,g_xcce_d[g_detail_idx].xcce302c,g_xcce_d[g_detail_idx].xcce302d, 
                  g_xcce_d[g_detail_idx].xcce302e,g_xcce_d[g_detail_idx].xcce302f,g_xcce_d[g_detail_idx].xcce302g, 
                  g_xcce_d[g_detail_idx].xcce302h,g_xcce_d[g_detail_idx].xcce302,g_xcce_d[g_detail_idx].xcce303, 
                  g_xcce_d[g_detail_idx].xcce304a,g_xcce_d[g_detail_idx].xcce304b,g_xcce_d[g_detail_idx].xcce304c, 
                  g_xcce_d[g_detail_idx].xcce304d,g_xcce_d[g_detail_idx].xcce304e,g_xcce_d[g_detail_idx].xcce304f, 
                  g_xcce_d[g_detail_idx].xcce304g,g_xcce_d[g_detail_idx].xcce304h,g_xcce_d[g_detail_idx].xcce304, 
                  g_xcce_d[g_detail_idx].xcce901,g_xcce_d[g_detail_idx].xcce902a,g_xcce_d[g_detail_idx].xcce902b, 
                  g_xcce_d[g_detail_idx].xcce902c,g_xcce_d[g_detail_idx].xcce902d,g_xcce_d[g_detail_idx].xcce902e, 
                  g_xcce_d[g_detail_idx].xcce902f,g_xcce_d[g_detail_idx].xcce902g,g_xcce_d[g_detail_idx].xcce902h, 
                  g_xcce_d[g_detail_idx].xcce902) 
         WHERE xcceent = g_enterprise AND xcceld = ps_keys_bak[1] AND xcce001 = ps_keys_bak[2] AND xcce003 = ps_keys_bak[3] AND xcce004 = ps_keys_bak[4] AND xcce005 = ps_keys_bak[5] AND xcce006 = ps_keys_bak[6] AND xcce002 = ps_keys_bak[7] AND xcce007 = ps_keys_bak[8] AND xcce008 = ps_keys_bak[9] AND xcce009 = ps_keys_bak[10]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xcce_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xcce_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="axcq541.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION axcq541_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION

{</section>}

{<section id="axcq541.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION axcq541_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="axcq541.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axcq541_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL axcq541_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "xcce_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN axcq541_bcl USING g_enterprise,
                                       g_xccd_m.xccdld,g_xccd_m.xccd001,g_xccd_m.xccd002,g_xccd_m.xccd003, 
                                           g_xccd_m.xccd004,g_xccd_m.xccd005,g_xccd_m.xccd006,g_xcce_d[g_detail_idx].xcce002, 
                                           g_xcce_d[g_detail_idx].xcce007,g_xcce_d[g_detail_idx].xcce008, 
                                           g_xcce_d[g_detail_idx].xcce009     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axcq541_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="axcq541.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axcq541_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axcq541_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="axcq541.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axcq541_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
 
   CALL cl_set_comp_entry("xccdld",TRUE)
  
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xccdld,xccd001,xccd002,xccd003,xccd004,xccd005,xccd006",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="axcq541.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axcq541_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xccdld,xccd001,xccd002,xccd003,xccd004,xccd005,xccd006",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("xccdld",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="axcq541.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axcq541_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION

{</section>}

{<section id="axcq541.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axcq541_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION

{</section>}

{<section id="axcq541.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION axcq541_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="axcq541.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION axcq541_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="axcq541.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION axcq541_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="axcq541.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION axcq541_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="axcq541.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axcq541_default_search()
   DEFINE li_idx  LIKE type_t.num10 #5
   DEFINE li_cnt  LIKE type_t.num10 #5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xccdld = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xccd001 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xccd002 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " xccd003 = '", g_argv[04], "' AND "
   END IF
   IF NOT cl_null(g_argv[05]) THEN
      LET ls_wc = ls_wc, " xccd004 = '", g_argv[05], "' AND "
   END IF
   IF NOT cl_null(g_argv[06]) THEN
      LET ls_wc = ls_wc, " xccd005 = '", g_argv[06], "' AND "
   END IF
   IF NOT cl_null(g_argv[07]) THEN
      LET ls_wc = ls_wc, " xccd006 = '", g_argv[07], "' AND "
   END IF
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION

{</section>}

{<section id="axcq541.state_change" >}
   

{</section>}

{<section id="axcq541.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axcq541_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xcce_d.getLength() THEN
         LET g_detail_idx = g_xcce_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xcce_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xcce_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="axcq541.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axcq541_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10 #5
   DEFINE li_ac           LIKE type_t.num10 #5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL axcq541_detail_show()
   
END FUNCTION

{</section>}

{<section id="axcq541.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axcq541_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="axcq541.signature" >}
   

{</section>}

{<section id="axcq541.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION axcq541_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xccd_m.xccdld
   LET g_pk_array[1].column = 'xccdld'
   LET g_pk_array[2].values = g_xccd_m.xccd001
   LET g_pk_array[2].column = 'xccd001'
   LET g_pk_array[3].values = g_xccd_m.xccd002
   LET g_pk_array[3].column = 'xccd002'
   LET g_pk_array[4].values = g_xccd_m.xccd003
   LET g_pk_array[4].column = 'xccd003'
   LET g_pk_array[5].values = g_xccd_m.xccd004
   LET g_pk_array[5].column = 'xccd004'
   LET g_pk_array[6].values = g_xccd_m.xccd005
   LET g_pk_array[6].column = 'xccd005'
   LET g_pk_array[7].values = g_xccd_m.xccd006
   LET g_pk_array[7].column = 'xccd006'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 

{</section>}

{<section id="axcq541.other_dialog" readonly="Y" >}
   

{</section>}

{<section id="axcq541.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

