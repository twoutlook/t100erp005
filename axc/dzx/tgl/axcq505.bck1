#該程式已解開Section, 不再透過樣板產出!
{<section id="axcq505.description" >}
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000028
#+ 
#+ Filename...: axcq505
#+ Description: 庫存料件成本要素成本查詢作業
#+ Creator....: 03297(2014/08/29)
#+ Modifier...: 03297(2014/08/29) -SD/PR-
#+ Buildtype..: 應用 q02 樣板自動產生
#+ 以上段落由子樣板a00產生

{</section>}

{<section id="axcq505.global" >}
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_xcdc_d RECORD
       #statepic       LIKE type_t.chr1,
       
       xcau003 LIKE xcau_t.xcau003, 
   xcdc009 LIKE xcdc_t.xcdc009, 
   xcdc009_desc LIKE type_t.chr500, 
   xcdc101 LIKE xcdc_t.xcdc101, 
   xcdc201 LIKE xcdc_t.xcdc201, 
   xcdc207 LIKE xcdc_t.xcdc207, 
   xcdc901 LIKE xcdc_t.xcdc901, 
   xcdc102 LIKE xcdc_t.xcdc102, 
   xcdc202 LIKE xcdc_t.xcdc202, 
   xcdc208 LIKE xcdc_t.xcdc208, 
   xcdc902 LIKE xcdc_t.xcdc902, 
   xcdcld LIKE xcdc_t.xcdcld, 
   xcdc001 LIKE xcdc_t.xcdc001, 
   xcdc002 LIKE xcdc_t.xcdc002, 
   xcdc003 LIKE xcdc_t.xcdc003, 
   xcdc004 LIKE xcdc_t.xcdc004, 
   xcdc005 LIKE xcdc_t.xcdc005, 
   xcdc006 LIKE xcdc_t.xcdc006, 
   xcdc007 LIKE xcdc_t.xcdc007, 
   xcdc008 LIKE xcdc_t.xcdc008 
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_master                     type_g_xcdc_d
DEFINE g_master_t                   type_g_xcdc_d
DEFINE g_xcdc_d          DYNAMIC ARRAY OF type_g_xcdc_d
DEFINE g_xcdc_d_t        type_g_xcdc_d
 
      
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              
DEFINE l_ac_d               LIKE type_t.num5              #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num5              #目前所在頁數
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_detail_cnt2        LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num5
DEFINE g_detail_idx         LIKE type_t.num5
DEFINE g_detail_idx2        LIKE type_t.num5
DEFINE g_hyper_url          STRING                        #hyperlink的主要網址
 
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
 
DEFINE g_wc_filter_table           STRING
 
 
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="axcq505.main" >}
#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axc","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " ", 
                      " FROM ",
                      " "
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axcq505_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT  ",
               " FROM  t0",
               
               " WHERE  "
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axcq505_master_referesh FROM g_sql
 
   #add-point:main段define_sql
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = ""
   #add-point:main段define_sql
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axcq505_bcl CURSOR FROM g_forupd_sql
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axcq505 WITH FORM cl_ap_formpath("axc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axcq505_init()   
 
      #進入選單 Menu (="N")
      CALL axcq505_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axcq505
      
   END IF 
   
   CLOSE axcq505_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 

{</section>}

{<section id="axcq505.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION axcq505_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
   
      CALL cl_set_combo_scc('b_xcau003','8901') 
 
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
 
   CALL axcq505_default_search()  
END FUNCTION

{</section>}

{<section id="axcq505.default_search" >}
PRIVATE FUNCTION axcq505_default_search()
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point
 
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point
 
   #+ 此段落由子樣板qs27產生
   #+ 組承接外部參數時資料庫欄位對應條件(單身)
   IF NOT cl_null(g_argv[01]) THEN
      LET g_wc = g_wc, " xcdcld = '", g_argv[01], "' AND "
   END IF
 
   IF NOT cl_null(g_argv[02]) THEN
      LET g_wc = g_wc, " xcdc001 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET g_wc = g_wc, " xcdc002 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET g_wc = g_wc, " xcdc003 = '", g_argv[04], "' AND "
   END IF
   IF NOT cl_null(g_argv[05]) THEN
      LET g_wc = g_wc, " xcdc004 = '", g_argv[05], "' AND "
   END IF
   IF NOT cl_null(g_argv[06]) THEN
      LET g_wc = g_wc, " xcdc005 = '", g_argv[06], "' AND "
   END IF
   IF NOT cl_null(g_argv[07]) THEN
      LET g_wc = g_wc, " xcdc006 = '", g_argv[07], "' AND "
   END IF
   IF NOT cl_null(g_argv[08]) THEN
      LET g_wc = g_wc, " xcdc007 = '", g_argv[08], "' AND "
   END IF
   IF NOT cl_null(g_argv[09]) THEN
      LET g_wc = g_wc, " xcdc008 = '", g_argv[09], "' AND "
   END IF
   IF NOT cl_null(g_argv[10]) THEN
      LET g_wc = g_wc, " xcdc009 = '", g_argv[10], "' AND "
   END IF
 
 
 
 
   IF NOT cl_null(g_wc) THEN
      LET g_wc = g_wc.subString(1,g_wc.getLength()-5)
   ELSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
 
   #add-point:default_search段開始後
   {<point name="default_search.after"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="axcq505.ui_dialog" >}
#+ 功能選單 
PRIVATE FUNCTION axcq505_ui_dialog()
   DEFINE ls_wc    STRING
   DEFINE li_idx   LIKE type_t.num5
   #add-point:ui_dialog段define
{<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   #add-point:ui_dialog段before dialog 
{<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   IF NOT cl_null(g_wc) AND g_wc != " 1=1" THEN
      LET g_detail_idx = 1
      CALL axcq505_b_fill()
   ELSE
      CALL axcq505_query()
   END IF
   
   WHILE TRUE
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_xcdc_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
              #DISPLAY g_xcdc_d.getLength() TO FORMONLY.h_count
               CALL axcq505_fetch1('')
               LET g_master_idx = l_ac
               #add-point:input段before row
{<point name="input.body.before_row"/>}
               #end add-point  
            
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
 
         
 
      
         #add-point:ui_dialog段自定義display array
{<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG      
            CALL DIALOG.setSelectionMode("s_detail1", 1)
 
            #add-point:ui_dialog段before dialog
{<point name="ui_dialog.bef_dialog"/>}
            #end add-point
 
         
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axcq505_insert()
               #add-point:ON ACTION insert
{<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
{<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axcq505_query()
               #add-point:ON ACTION query
{<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo
{<point name="menu.datainfo" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL axcq505_filter()
            #add-point:ON ACTION filter
{<point name="menu.filter" />}
            #END add-point
            EXIT DIALOG
 
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
 
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION datarefresh   # 重新整理
            LET g_error_show = 1
            CALL axcq505_b_fill()
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum
{<point name="ui_dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
 
         
         
 
         #add-point:ui_dialog段自定義action
{<point name="ui_dialog.more_action"/>}
         #end add-point
      
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
 
         #add-point:查詢方案相關ACTION設定前
{<point name="ui_dialog.set_qbe_action_before" mark="Y"/>}
         #end add-point
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axcq505_b_fill()
            END IF
      
      #  ON ACTION qbeclear   # 條件清除
      #     CLEAR FORM
 
         #add-point:查詢方案相關ACTION設定後
{<point name="ui_dialog.set_qbe_action_after"/>}
         #end add-point
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION

{</section>}

{<section id="axcq505.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION axcq505_query()
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
{<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_xcdc_d.clear()
   LET g_wc_filter = " 1=1"
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
   
   LET g_qryparam.state = "c"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   
   #wc備份
   LET ls_wc = g_wc
   LET g_master_idx = l_ac
 
   
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單身根據table分拆construct
      CONSTRUCT g_wc_table ON xcau003,xcdc009,xcdc101,xcdc201,xcdc207,xcdc901,xcdc102,xcdc202,xcdc208, 
          xcdc902
           FROM s_detail1[1].b_xcau003,s_detail1[1].b_xcdc009,s_detail1[1].b_xcdc101,s_detail1[1].b_xcdc201, 
               s_detail1[1].b_xcdc207,s_detail1[1].b_xcdc901,s_detail1[1].b_xcdc102,s_detail1[1].b_xcdc202, 
               s_detail1[1].b_xcdc208,s_detail1[1].b_xcdc902
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
{<point name="cs.head.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #----<<b_xcau003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xcau003
            #add-point:BEFORE FIELD b_xcau003
{<point name="construct.b.page1.b_xcau003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xcau003
            
            #add-point:AFTER FIELD b_xcau003
{<point name="construct.a.page1.b_xcau003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_xcau003
         ON ACTION controlp INFIELD b_xcau003
            #add-point:ON ACTION controlp INFIELD b_xcau003
{<point name="construct.c.page1.b_xcau003" />}
            #END add-point
 
         #----<<b_xcdc009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xcdc009
            #add-point:BEFORE FIELD b_xcdc009
{<point name="construct.b.page1.b_xcdc009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xcdc009
            
            #add-point:AFTER FIELD b_xcdc009
{<point name="construct.a.page1.b_xcdc009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_xcdc009
         ON ACTION controlp INFIELD b_xcdc009
            #add-point:ON ACTION controlp INFIELD b_xcdc009
{<point name="construct.c.page1.b_xcdc009" />}
            #END add-point
 
         #----<<xcdc009_desc>>----
         #----<<b_xcdc101>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xcdc101
            #add-point:BEFORE FIELD b_xcdc101
{<point name="construct.b.page1.b_xcdc101" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xcdc101
            
            #add-point:AFTER FIELD b_xcdc101
{<point name="construct.a.page1.b_xcdc101" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_xcdc101
         ON ACTION controlp INFIELD b_xcdc101
            #add-point:ON ACTION controlp INFIELD b_xcdc101
{<point name="construct.c.page1.b_xcdc101" />}
            #END add-point
 
         #----<<b_xcdc201>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xcdc201
            #add-point:BEFORE FIELD b_xcdc201
{<point name="construct.b.page1.b_xcdc201" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xcdc201
            
            #add-point:AFTER FIELD b_xcdc201
{<point name="construct.a.page1.b_xcdc201" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_xcdc201
         ON ACTION controlp INFIELD b_xcdc201
            #add-point:ON ACTION controlp INFIELD b_xcdc201
{<point name="construct.c.page1.b_xcdc201" />}
            #END add-point
 
         #----<<b_xcdc207>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xcdc207
            #add-point:BEFORE FIELD b_xcdc207
{<point name="construct.b.page1.b_xcdc207" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xcdc207
            
            #add-point:AFTER FIELD b_xcdc207
{<point name="construct.a.page1.b_xcdc207" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_xcdc207
         ON ACTION controlp INFIELD b_xcdc207
            #add-point:ON ACTION controlp INFIELD b_xcdc207
{<point name="construct.c.page1.b_xcdc207" />}
            #END add-point
 
         #----<<b_xcdc901>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xcdc901
            #add-point:BEFORE FIELD b_xcdc901
{<point name="construct.b.page1.b_xcdc901" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xcdc901
            
            #add-point:AFTER FIELD b_xcdc901
{<point name="construct.a.page1.b_xcdc901" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_xcdc901
         ON ACTION controlp INFIELD b_xcdc901
            #add-point:ON ACTION controlp INFIELD b_xcdc901
{<point name="construct.c.page1.b_xcdc901" />}
            #END add-point
 
         #----<<b_xcdc102>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xcdc102
            #add-point:BEFORE FIELD b_xcdc102
{<point name="construct.b.page1.b_xcdc102" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xcdc102
            
            #add-point:AFTER FIELD b_xcdc102
{<point name="construct.a.page1.b_xcdc102" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_xcdc102
         ON ACTION controlp INFIELD b_xcdc102
            #add-point:ON ACTION controlp INFIELD b_xcdc102
{<point name="construct.c.page1.b_xcdc102" />}
            #END add-point
 
         #----<<b_xcdc202>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xcdc202
            #add-point:BEFORE FIELD b_xcdc202
{<point name="construct.b.page1.b_xcdc202" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xcdc202
            
            #add-point:AFTER FIELD b_xcdc202
{<point name="construct.a.page1.b_xcdc202" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_xcdc202
         ON ACTION controlp INFIELD b_xcdc202
            #add-point:ON ACTION controlp INFIELD b_xcdc202
{<point name="construct.c.page1.b_xcdc202" />}
            #END add-point
 
         #----<<b_xcdc208>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xcdc208
            #add-point:BEFORE FIELD b_xcdc208
{<point name="construct.b.page1.b_xcdc208" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xcdc208
            
            #add-point:AFTER FIELD b_xcdc208
{<point name="construct.a.page1.b_xcdc208" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_xcdc208
         ON ACTION controlp INFIELD b_xcdc208
            #add-point:ON ACTION controlp INFIELD b_xcdc208
{<point name="construct.c.page1.b_xcdc208" />}
            #END add-point
 
         #----<<b_xcdc902>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xcdc902
            #add-point:BEFORE FIELD b_xcdc902
{<point name="construct.b.page1.b_xcdc902" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xcdc902
            
            #add-point:AFTER FIELD b_xcdc902
{<point name="construct.a.page1.b_xcdc902" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_xcdc902
         ON ACTION controlp INFIELD b_xcdc902
            #add-point:ON ACTION controlp INFIELD b_xcdc902
{<point name="construct.c.page1.b_xcdc902" />}
            #END add-point
 
         #----<<b_xcdcld_1>>----
         #----<<b_xcdc001_1>>----
         #----<<b_xcdc002_1>>----
         #----<<b_xcdc003_1>>----
         #----<<b_xcdc004_1>>----
         #----<<b_xcdc005_1>>----
         #----<<b_xcdc006_1>>----
         #----<<b_xcdc007_1>>----
         #----<<b_xcdc008_1>>----
   
       
      END CONSTRUCT
      
 
      
 
  
      #add-point:query段more_construct
{<point name="query.more_construct"/>}
      #end add-point 
 
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
 
      #add-point:query段查詢方案相關ACTION設定前
{<point name="query.set_qbe_action_before" mark="Y"/>}
      #end add-point 
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
 
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION qbeclear   # 條件清除
         CLEAR FORM
 
      #add-point:query段查詢方案相關ACTION設定後
{<point name="query.set_qbe_action_after"/>}
      #end add-point 
 
   END DIALOG
 
   
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc = ls_wc
   ELSE
      LET g_master_idx = 1
   END IF
   
   LET g_wc = g_wc_table 
 
 
        
   LET g_wc2 = " 1=1"
 
        
   #add-point:cs段after_construct
{<point name="cs.after_construct"/>}
   #end add-point
        
   LET g_error_show = 1
  # CALL axcq505_b_fill()
   LET l_ac = g_master_idx
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   END IF
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
   
END FUNCTION

{</section>}

{<section id="axcq505.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axcq505_b_fill()
   DEFINE ls_wc           STRING
   #add-point:b_fill段define
{<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before
{<point name="b_fill.sql_before"/>}
   #end add-point
   
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   
   LET ls_wc = g_wc, " AND ", g_wc2, " AND ", g_wc_filter
   
   LET g_sql = "SELECT  UNIQUE '',xcdc009,'',xcdc101,xcdc201,xcdc207,xcdc901,xcdc102,xcdc202,xcdc208, 
       xcdc902,'','','','','','','','','' FROM xcdc_t",
 
 
               "",
               " WHERE xcdcent= ? AND 1=1 AND ", ls_wc,cl_sql_add_filter("xcdc_t")
    
   LET g_sql = g_sql, cl_sql_add_filter("xcdc_t"),
                      " ORDER BY xcdc_t.xcdcld,xcdc_t.xcdc001,xcdc_t.xcdc002,xcdc_t.xcdc003,xcdc_t.xcdc004,xcdc_t.xcdc005,xcdc_t.xcdc006,xcdc_t.xcdc007,xcdc_t.xcdc008,xcdc_t.xcdc009"
  
   #add-point:b_fill段sql_after
{<point name="b_fill.sql_after"/>}
   #end add-point
 
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE axcq505_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR axcq505_pb
   
 #  OPEN b_fill_curs USING g_enterprise
 
   CALL g_xcdc_d.clear()
 
   #add-point:陣列清空
{<point name="b_fill.array_clear" />}
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_xcdc_d[l_ac].xcau003,g_xcdc_d[l_ac].xcdc009,g_xcdc_d[l_ac].xcdc009_desc, 
       g_xcdc_d[l_ac].xcdc101,g_xcdc_d[l_ac].xcdc201,g_xcdc_d[l_ac].xcdc207,g_xcdc_d[l_ac].xcdc901,g_xcdc_d[l_ac].xcdc102, 
       g_xcdc_d[l_ac].xcdc202,g_xcdc_d[l_ac].xcdc208,g_xcdc_d[l_ac].xcdc902,g_xcdc_d[l_ac].xcdcld,g_xcdc_d[l_ac].xcdc001, 
       g_xcdc_d[l_ac].xcdc002,g_xcdc_d[l_ac].xcdc003,g_xcdc_d[l_ac].xcdc004,g_xcdc_d[l_ac].xcdc005,g_xcdc_d[l_ac].xcdc006, 
       g_xcdc_d[l_ac].xcdc007,g_xcdc_d[l_ac].xcdc008
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      #LET g_xcdc_d[l_ac].statepic = cl_get_actipic(g_xcdc_d[l_ac].statepic)
 
      
 
      #add-point:b_fill段資料填充
{<point name="b_fill.fill"/>}
      #end add-point
      
      CALL axcq505_detail_show("'1'")      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
 
   
   CALL g_xcdc_d.deleteElement(g_xcdc_d.getLength())   
 
   #add-point:陣列長度調整
{<point name="b_fill.array_deleteElement" />}
   #end add-point
   
   #add-point:b_fill段資料填充(其他單身)
{<point name="b_fill.others.fill"/>}
   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE axcq505_pb
   
   LET l_ac = 1
#   IF g_xcdc_d.getLength() > 0 THEN
#      CALL axcq505_fetch()
#   END IF
   
      CALL axcq505_filter_show('xcau003','b_xcau003')
   CALL axcq505_filter_show('xcdc009','b_xcdc009')
   CALL axcq505_filter_show('xcdc101','b_xcdc101')
   CALL axcq505_filter_show('xcdc201','b_xcdc201')
   CALL axcq505_filter_show('xcdc207','b_xcdc207')
   CALL axcq505_filter_show('xcdc901','b_xcdc901')
   CALL axcq505_filter_show('xcdc102','b_xcdc102')
   CALL axcq505_filter_show('xcdc202','b_xcdc202')
   CALL axcq505_filter_show('xcdc208','b_xcdc208')
   CALL axcq505_filter_show('xcdc902','b_xcdc902')
 
   
END FUNCTION

{</section>}

{<section id="axcq505.fetch" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axcq505_fetch()
   DEFINE li_ac           LIKE type_t.num5
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point
   
 
   #add-point:陣列清空
   {<point name="fetch.array_clear" />}
   #end add-point
   
   LET li_ac = l_ac 
   
 
   
   #add-point:單身填充後
   {<point name="fetch.after_fill" />}
   #end add-point 
   
 
   #add-point:陣列筆數調整
   {<point name="fetch.array_deleteElement" />}
   #end add-point
 
   LET l_ac = li_ac
   
END FUNCTION

{</section>}

{<section id="axcq505.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION axcq505_detail_show(ps_page)
   DEFINE ps_page    STRING
   DEFINE ls_sql     STRING
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
 
   #讀入ref值
   IF ps_page.getIndexOf("'1'",1) > 0 THEN
      #帶出公用欄位reference值page1
      
 
      #add-point:show段單身reference
      {<point name="detail_show.body.reference"/>}
      #end add-point
   END IF
   
 
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="axcq505.filter" >}
#+ filter過濾功能
PRIVATE FUNCTION axcq505_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point    
   
   LET l_ac = 1
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xcau003,xcdc009,xcdc101,xcdc201,xcdc207,xcdc901,xcdc102,xcdc202,xcdc208, 
          xcdc902
                          FROM s_detail1[1].b_xcau003,s_detail1[1].b_xcdc009,s_detail1[1].b_xcdc101, 
                              s_detail1[1].b_xcdc201,s_detail1[1].b_xcdc207,s_detail1[1].b_xcdc901,s_detail1[1].b_xcdc102, 
                              s_detail1[1].b_xcdc202,s_detail1[1].b_xcdc208,s_detail1[1].b_xcdc902
 
         BEFORE CONSTRUCT
#saki       CALL cl_qbe_init()
                     DISPLAY axcq505_filter_parser('xcau003') TO s_detail1[1].b_xcau003
            DISPLAY axcq505_filter_parser('xcdc009') TO s_detail1[1].b_xcdc009
            DISPLAY axcq505_filter_parser('xcdc101') TO s_detail1[1].b_xcdc101
            DISPLAY axcq505_filter_parser('xcdc201') TO s_detail1[1].b_xcdc201
            DISPLAY axcq505_filter_parser('xcdc207') TO s_detail1[1].b_xcdc207
            DISPLAY axcq505_filter_parser('xcdc901') TO s_detail1[1].b_xcdc901
            DISPLAY axcq505_filter_parser('xcdc102') TO s_detail1[1].b_xcdc102
            DISPLAY axcq505_filter_parser('xcdc202') TO s_detail1[1].b_xcdc202
            DISPLAY axcq505_filter_parser('xcdc208') TO s_detail1[1].b_xcdc208
            DISPLAY axcq505_filter_parser('xcdc902') TO s_detail1[1].b_xcdc902
 
 
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
      ON ACTION accept
         ACCEPT DIALOG 
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
 
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
   
      CALL axcq505_filter_show('xcau003','b_xcau003')
   CALL axcq505_filter_show('xcdc009','b_xcdc009')
   CALL axcq505_filter_show('xcdc101','b_xcdc101')
   CALL axcq505_filter_show('xcdc201','b_xcdc201')
   CALL axcq505_filter_show('xcdc207','b_xcdc207')
   CALL axcq505_filter_show('xcdc901','b_xcdc901')
   CALL axcq505_filter_show('xcdc102','b_xcdc102')
   CALL axcq505_filter_show('xcdc202','b_xcdc202')
   CALL axcq505_filter_show('xcdc208','b_xcdc208')
   CALL axcq505_filter_show('xcdc902','b_xcdc902')
 
    
   CALL axcq505_b_fill()
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
 
END FUNCTION

{</section>}

{<section id="axcq505.filter_parser" >}
#+ filter欄位解析
PRIVATE FUNCTION axcq505_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION

{</section>}

{<section id="axcq505.filter_show" >}
#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION axcq505_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axcq505_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION

{</section>}

{<section id="axcq505.insert" >}
#+ insert
PRIVATE FUNCTION axcq505_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point
 
   #add-point:insert段control
   {<point name="insert.control"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="axcq505.modify" >}
#+ modify
PRIVATE FUNCTION axcq505_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point
 
   #add-point:modify段control
   {<point name="modify.control"/>}
   #end add-point 
END FUNCTION

{</section>}

{<section id="axcq505.reproduce" >}
#+ reproduce
PRIVATE FUNCTION axcq505_reproduce()
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #add-point:reproduce段control
   {<point name="reproduce.control"/>}
   #end add-point 
END FUNCTION

{</section>}

{<section id="axcq505.delete" >}
#+ delete
PRIVATE FUNCTION axcq505_delete()
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point
 
   #add-point:delete段control
   {<point name="delete.control"/>}
   #end add-point 
END FUNCTION

{</section>}

{<section id="axcq505.other_function" >}
{<point name="other.function"/>}

{</section>}

