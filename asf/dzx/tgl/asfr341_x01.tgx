{<section id="asfr341_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:2(2016-04-11 17:43:03), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000057
#+ Filename...: asfr341_x01
#+ Description: ...
#+ Creator....: 00768(2014-11-06 14:12:23)
#+ Modifier...: 07024 -SD/PR-
{</section>}



{<section id="asfr341_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:8)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明 name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING                   #where condition
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
{</section>}
 
{<section id="asfr341_x01.main" readonly="Y" >}
PUBLIC FUNCTION asfr341_x01(p_arg1)
DEFINE  p_arg1 STRING                  #tm.wc  where condition
#add-point:init段define(客製用) name="component.define_customerization"
{<point name="component.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1

   #add-point:報表元件參數準備 name="component.arg.prep"
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "asfr341_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL asfr341_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL asfr341_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL asfr341_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL asfr341_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL asfr341_x01_rep_data()
 
END FUNCTION
{</section>}
 
{<section id="asfr341_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION asfr341_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "sfecdocno.sfec_t.sfecdocno,l_sfeadocdt.sfea_t.sfeadocdt,l_sfea001.sfea_t.sfea001,l_sfea002.sfea_t.sfea002,l_sfea002_desc.ooag_t.ooag011,l_sfea003.sfea_t.sfea003,l_sfea003_desc.ooefl_t.ooefl003,l_sfea004.sfea_t.sfea004,l_sfea005.sfea_t.sfea005,sfecseq.sfec_t.sfecseq,sfecseq1.sfec_t.sfecseq1,sfec001.sfec_t.sfec001,sfec021.sfec_t.sfec021,sfec004.sfec_t.sfec004,l_sfec004_desc.gzcbl_t.gzcbl004,sfec005.sfec_t.sfec005,l_sfec005_imaal003.imaal_t.imaal003,l_sfec005_imaal004.imaal_t.imaal004,sfec006.sfec_t.sfec006,l_sfec006_desc.type_t.chr100,l_imaa009.imaa_t.imaa009,l_imaa009_desc.rtaxl_t.rtaxl003,l_imae011.imae_t.imae011,l_imae011_desc.oocql_t.oocql004,sfec002.sfec_t.sfec002,sfec003.sfec_t.sfec003,l_qcbc002.qcbc_t.qcbc002,l_qcbc002_desc.qcaol_t.qcaol004,sfec009.sfec_t.sfec009,sfec008.sfec_t.sfec008,sfec012.sfec_t.sfec012,l_sfec012.inayl_t.inayl003,sfec013.sfec_t.sfec013,l_sfec013.inab_t.inab003,sfec014.sfec_t.sfec014,sfec015.sfec_t.sfec015,sfec017.sfec_t.sfec017,l_ooff013.ooff_t.ooff013,sfec010.sfec_t.sfec010,sfec011.sfec_t.sfec011,sfec016.sfec_t.sfec016,sfec022.sfec_t.sfec022,l_sfec022_desc.type_t.chr50,sfec023.sfec_t.sfec023,l_sfec023_desc.type_t.chr50,sfec024.sfec_t.sfec024,l_sfec024_desc.type_t.chr50,l_imaa127.type_t.chr10,l_imaa127_desc.type_t.chr50" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION
{</section>}
 
{<section id="asfr341_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION asfr341_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"
{<point name="ins_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         {<point name="insert_prep"/>}
         #end add-point                  


      END CASE
   END FOR
END FUNCTION
{</section>}
 
{<section id="asfr341_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION asfr341_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"
{<point name="sel_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT sfecdocno,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,sfecseq,sfecseq1,sfec001,sfec021,sfec004,NULL,sfec005,NULL,NULL,sfec006,NULL,NULL,NULL,NULL,NULL,sfec002,sfec003,NULL,NULL,sfec009,sfec008,sfec012,NULL,sfec013,NULL,sfec014,sfec015,sfec017,NULL,sfec010,sfec011,sfec016,sfec022,NULL,sfec023,NULL,sfec024,NULL,NULL,NULL"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM sfec_t"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("sfec_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE asfr341_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE asfr341_x01_curs CURSOR FOR asfr341_x01_prepare
 
END FUNCTION
{</section>}
 
{<section id="asfr341_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION asfr341_x01_ins_data()
DEFINE sr RECORD 
   sfecdocno LIKE sfec_t.sfecdocno, 
   l_sfeadocdt LIKE sfea_t.sfeadocdt, 
   l_sfea001 LIKE sfea_t.sfea001, 
   l_sfea002 LIKE sfea_t.sfea002, 
   l_sfea002_desc LIKE ooag_t.ooag011, 
   l_sfea003 LIKE sfea_t.sfea003, 
   l_sfea003_desc LIKE ooefl_t.ooefl003, 
   l_sfea004 LIKE sfea_t.sfea004, 
   l_sfea005 LIKE sfea_t.sfea005, 
   sfecseq LIKE sfec_t.sfecseq, 
   sfecseq1 LIKE sfec_t.sfecseq1, 
   sfec001 LIKE sfec_t.sfec001, 
   sfec021 LIKE sfec_t.sfec021, 
   sfec004 LIKE sfec_t.sfec004, 
   l_sfec004_desc LIKE gzcbl_t.gzcbl004, 
   sfec005 LIKE sfec_t.sfec005, 
   l_sfec005_imaal003 LIKE imaal_t.imaal003, 
   l_sfec005_imaal004 LIKE imaal_t.imaal004, 
   sfec006 LIKE sfec_t.sfec006, 
   l_sfec006_desc LIKE type_t.chr100, 
   l_imaa009 LIKE imaa_t.imaa009, 
   l_imaa009_desc LIKE rtaxl_t.rtaxl003, 
   l_imae011 LIKE imae_t.imae011, 
   l_imae011_desc LIKE oocql_t.oocql004, 
   sfec002 LIKE sfec_t.sfec002, 
   sfec003 LIKE sfec_t.sfec003, 
   l_qcbc002 LIKE qcbc_t.qcbc002, 
   l_qcbc002_desc LIKE qcaol_t.qcaol004, 
   sfec009 LIKE sfec_t.sfec009, 
   sfec008 LIKE sfec_t.sfec008, 
   sfec012 LIKE sfec_t.sfec012, 
   l_sfec012 LIKE inayl_t.inayl003, 
   sfec013 LIKE sfec_t.sfec013, 
   l_sfec013 LIKE inab_t.inab003, 
   sfec014 LIKE sfec_t.sfec014, 
   sfec015 LIKE sfec_t.sfec015, 
   sfec017 LIKE sfec_t.sfec017, 
   l_ooff013 LIKE ooff_t.ooff013, 
   sfec010 LIKE sfec_t.sfec010, 
   sfec011 LIKE sfec_t.sfec011, 
   sfec016 LIKE sfec_t.sfec016, 
   sfec022 LIKE sfec_t.sfec022, 
   l_sfec022_desc LIKE type_t.chr50, 
   sfec023 LIKE sfec_t.sfec023, 
   l_sfec023_desc LIKE type_t.chr50, 
   sfec024 LIKE sfec_t.sfec024, 
   l_sfec024_desc LIKE type_t.chr50, 
   l_imaa127 LIKE type_t.chr10, 
   l_imaa127_desc LIKE type_t.chr50
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"
{<point name="ins_data.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH asfr341_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.sfecdocno,sr.l_sfeadocdt,sr.l_sfea001,sr.l_sfea002,sr.l_sfea002_desc,sr.l_sfea003,sr.l_sfea003_desc,sr.l_sfea004,sr.l_sfea005,sr.sfecseq,sr.sfecseq1,sr.sfec001,sr.sfec021,sr.sfec004,sr.l_sfec004_desc,sr.sfec005,sr.l_sfec005_imaal003,sr.l_sfec005_imaal004,sr.sfec006,sr.l_sfec006_desc,sr.l_imaa009,sr.l_imaa009_desc,sr.l_imae011,sr.l_imae011_desc,sr.sfec002,sr.sfec003,sr.l_qcbc002,sr.l_qcbc002_desc,sr.sfec009,sr.sfec008,sr.sfec012,sr.l_sfec012,sr.sfec013,sr.l_sfec013,sr.sfec014,sr.sfec015,sr.sfec017,sr.l_ooff013,sr.sfec010,sr.sfec011,sr.sfec016,sr.sfec022,sr.l_sfec022_desc,sr.sfec023,sr.l_sfec023_desc,sr.sfec024,sr.l_sfec024_desc,sr.l_imaa127,sr.l_imaa127_desc
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "asfr341_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION
{</section>}
 
{<section id="asfr341_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION asfr341_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"
{<point name="rep_data.define_customerization" edit="c" mark="Y"/>}
#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION
{</section>}
 
{<section id="asfr341_x01.other_function" readonly="Y" >} 
{<point name="other.function"/>}
{</section>}
