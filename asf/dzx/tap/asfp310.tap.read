<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="asfp310" std_prog="asfp310" erpver="1.0" module="ASF" ver="3" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="P" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.asfp310_crt_table" order="1" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#建立临时表
PRIVATE FUNCTION asfp310_crt_table()
DEFINE r_success       LIKE type_t.num5

   WHENEVER ERROR CONTINUE
   LET r_success = FALSE

   #检查事务中
   IF NOT s_transaction_chk('N',1) THEN
      RETURN r_success
   END IF

   #
   #基本资料单身-上
   DROP TABLE asfp310_sfaa;
   CREATE TEMP TABLE asfp310_sfaa(
      lock_1      LIKE type_t.chr1,      #锁定
      seq_1       LIKE type_t.num5,      #顺序
      sfaadocno_1 LIKE sfaa_t.sfaadocno, #工单单号
      sfaa010_1   LIKE sfaa_t.sfaa010,   #生产料号
      sfaa019_1   LIKE sfaa_t.sfaa019,   #预计开工日
      sfaa020_1   LIKE sfaa_t.sfaa020,   #预计完工日
      sfaa017_1   LIKE sfaa_t.sfaa017,   #部门厂商
      sfaa002_1   LIKE sfaa_t.sfaa002,   #生管员
      sfba003_1   LIKE sfba_t.sfba003,   #作业编号
      sfba004_1   LIKE sfba_t.sfba004,   #作业序
      sfaa012_1   LIKE sfaa_t.sfaa012,   #生产数量
      sfaa049_1   LIKE sfaa_t.sfaa049,   #已发套数
      has_sets_1  LIKE sfaa_t.sfaa049    #已发齐套数
   );
   IF SQLCA.sqlcode THEN
      CALL cl_err('create table',SQLCA.sqlcode,1)
      RETURN r_success
   END IF
   CREATE UNIQUE INDEX asfp310_sfaa_01 on asfp310_sfaa (seq_1)
   IF SQLCA.sqlcode THEN
      CALL cl_err('create index',SQLCA.sqlcode,1)
      RETURN r_success
   END IF

   #基本资料单身-下
   DROP TABLE asfp310_sfba;
   CREATE TEMP TABLE asfp310_sfba(
      seq_1       LIKE type_t.num5,      #顺序
      seq_2       LIKE type_t.num5,      #项次
      seq1_2      LIKE type_t.num5,      #项序
      sfba002_2   LIKE sfba_t.sfba002,   #部位
      sfba003_2   LIKE sfba_t.sfba003,   #作业
      sfba004_2   LIKE sfba_t.sfba004,   #作业序
      sfba006_2   LIKE sfba_t.sfba006,   #发料料号
      sfba021_2   LIKE sfba_t.sfba021,   #产品特征
      sfba014_2   LIKE sfba_t.sfba014,   #单位
      sfba013_2   LIKE sfba_t.sfba013,   #应发数量  
      sfba016_2   LIKE sfba_t.sfba016,   #已发数量
      no_issue_2  LIKE sfba_t.sfba016,   #未发数量
      issue_qty_2 LIKE sfba_t.sfba016,   #发料量
      inag008_2   LIKE sfba_t.sfba016,   #库存可用量
      inan010_2   LIKE sfba_t.sfba016,   #在捡量
      sfba001_2   LIKE sfba_t.sfba001    #上阶料
   );
   IF SQLCA.sqlcode THEN
      CALL cl_err('create table',SQLCA.sqlcode,1)
      RETURN r_success
   END IF
   CREATE UNIQUE INDEX asfp310_sfba_01 on asfp310_sfba (seq_1,seq_2,seq1_2)
   IF SQLCA.sqlcode THEN
      CALL cl_err('create index',SQLCA.sqlcode,1)
      RETURN r_success
   END IF

   #主要用料库存页签
   DROP TABLE asfp310_inag;
   CREATE TEMP TABLE asfp310_inag(
      seq_1       LIKE type_t.num5,      #顺序
      seq_2       LIKE type_t.num5,      #项次
      seq1_2      LIKE type_t.num5,      #项序
      inag004_3   LIKE inag_t.inag004,   #库位
      inag005_3   LIKE inag_t.inag005,   #储位
      inag006_3   LIKE inag_t.inag006,   #批号
      inag003_3   LIKE inag_t.inag003,   #库存管理特征
      inag007_3   LIKE inag_t.inag007,   #单位
      inag008_3   LIKE inag_t.inag008,   #现有库存数量
      inan010_3   LIKE inan_t.inan010,   #库存在捡量
      issue_qty_3 LIKE inag_t.inag008    #发料量
   );
   IF SQLCA.sqlcode THEN
      CALL cl_err('create table',SQLCA.sqlcode,1)
      RETURN r_success
   END IF
   CREATE UNIQUE INDEX asfp310_inag_01 on asfp310_inag (seq_1,seq_2,seq1_2,inag004_3,inag005_3,inag006_3,inag003_3,inag007_3)
   IF SQLCA.sqlcode THEN
      CALL cl_err('create index',SQLCA.sqlcode,1)
      RETURN r_success
   END IF

   #取替代料页签
   DROP TABLE asfp310_bmea;
   CREATE TEMP TABLE asfp310_bmea(
      seq_1       LIKE type_t.num5,      #顺序
      seq_2       LIKE type_t.num5,      #项次
      seq1_2      LIKE type_t.num5,      #项序
      bmea007_4   LIKE bmea_t.bmea007,   #取替代特性
      bmea008_4   LIKE bmea_t.bmea008,   #料件编号
      replace_rate_4    LIKE sfba_t.sfba022,   #替代率
      bmea016_4   LIKE bmea_t.bmea016,   #替代方式
      bmea017_4   LIKE bmea_t.bmea017,   #替代上限比率
      inag004_4   LIKE inag_t.inag004,   #库位
      inag005_4   LIKE inag_t.inag005,   #储位
      inag006_4   LIKE inag_t.inag006,   #批号
      inag003_4   LIKE inag_t.inag003,   #库存管理特征 
      inag007_4   LIKE inag_t.inag007,   #单位
      inag008_4   LIKE inag_t.inag008,   #现有库存数量 
      inan010_4   LIKE inan_t.inan010,   #库存在捡量 
      issue_qty_4 LIKE inag_t.inag008    #发料量
   );
   IF SQLCA.sqlcode THEN
      CALL cl_err('create table',SQLCA.sqlcode,1)
      RETURN r_success
   END IF
   CREATE UNIQUE INDEX asfp310_bmea_01 on asfp310_bmea (seq_1,seq_2,seq1_2,bmea007_4,bmea008_4,inag004_4,inag005_4,inag006_4,inag003_4,inag007_4)
   IF SQLCA.sqlcode THEN
      CALL cl_err('create index',SQLCA.sqlcode,1)
      RETURN r_success
   END IF
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asfp310_ins_table_sfba" order="2" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#产生asfp310_sfba
#第二单身--获取工单备料信息
PRIVATE FUNCTION asfp310_ins_table_sfba(p_seq,p_sfaadocno,p_sfba003,p_sfba004,p_sfaa010,p_sfaa011)
DEFINE p_seq          LIKE type_t.num5     #顺序
DEFINE p_sfaadocno    LIKE sfaa_t.sfaadocno   #工单单号
DEFINE p_sfba003      LIKE sfba_t.sfba003     #作业编号
DEFINE p_sfba004      LIKE sfba_t.sfba004     #作业序
DEFINE p_sfaa010      LIKE sfaa_t.sfaa010     #主件料号
DEFINE p_sfaa011      LIKE sfaa_t.sfaa011     #特征
DEFINE r_success      LIKE type_t.num5
DEFINE r_is_full      LIKE type_t.chr1    #检查结果：可足套否
DEFINE l_sql          STRING
DEFINE l_sfba         RECORD LIKE sfba_t.*
DEFINE l_imaf053      LIKE imaf_t.imaf053  #据点库存单位
DEFINE l_imaf054      LIKE imaf_t.imaf054  #库存多单位

   LET r_success = TRUE
   LET r_is_full = 'N'
   IF g_can_sets='Y' AND g_need_issue='N' THEN  #需满足足套，又不需分配数量，两者不能同时，冲突，如果不分配数量怎么知道可足套否
      LET r_success = FALSE
      RETURN r_success,r_is_full
   END IF
   
   LET l_sql = " SELECT sfba_t.*,imaf053,imaf054 FROM sfba_t,imaf_t ",
               "  WHERE sfbaent = imafent ",
               "    AND sfbasite= imafsite",
               "    AND sfba006 = imaf001 ",  #料件
               "    AND sfbaent  = ",g_enterprise,
               "    AND sfbasite ='",g_site,"' ",
               "    AND ",tm.wc3 CLIPPED,  #进阶查询QBE--元件料号sfba006
               "    AND sfba013 > sfba015 + sfba016 ",   #应发 > 代买+已发
               "    AND sfba009 = 'N' ",   #非倒扣料
               "    AND sfbadocno ='",p_sfaadocno,"' "
   IF NOT cl_null(p_sfba003) THEN
      LET l_sql = l_sql CLIPPED," AND sfba003='",p_sfba003,"' "  #作业编号
      IF NOT cl_null(p_sfba004) AND p_sfba004 != 0 THEN
         LET l_sql = l_sql CLIPPED," AND sfba004='",p_sfba004,"' "   #作业序
      END IF
   END IF
   PREPARE asfp310_ins_table_sfba_p FROM l_sql
   DECLARE asfp310_ins_table_sfba_c CURSOR FOR asfp310_ins_table_sfba_p
   FOREACH asfp310_ins_table_sfba_c INTO l_sfba.*,l_imaf053,l_imaf054
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      IF cl_null(l_imaf054) THEN
         LET l_imaf054 = 'N'
         IF cl_null(l_imaf053) THEN
            CALL cl_err(l_sfba.sfba006,'sub-00476',1)
            LET r_success = FALSE
            EXIT FOREACH
         END IF
      END IF
      
      LET g_no_issue_2  =  l_sfba.sfba013 - l_sfba.sfba016 - l_sfba.sfba015 #未发数量=应发-已发-代买
      LET g_issue_qty_2 =  0 #发料量
      
      LET g_inag008_2   =  0 #库存可用量
      LET g_inan010_2   =  0 #在捡量
      
      IF cl_null(l_sfba.sfba021) THEN LET l_sfba.sfba021 = ' ' END IF #特征
      #                        顺序          项次         项序         部位         作业
      INSERT INTO asfp310_sfba(seq_1      , seq_2      , seq1_2     , sfba002_2  , sfba003_2  , 
      #                        作业序        发料料号      产品特征     单位         应发数量 
                               sfba004_2  , sfba006_2  , sfba021_2  , sfba014_2  , sfba013_2  , 
      #                        已发数量      未发数量      发料量       库存可用量    在捡量 
                               sfba016_2  , no_issue_2 , issue_qty_2, inag008_2  , inan010_2  ,
      #                        上阶料
                               sfba001_2 )
        VALUES(p_seq         , l_sfba.sfbaseq, l_sfba.sfbaseq1, l_sfba.sfba002, l_sfba.sfba003,
               l_sfba.sfba004, l_sfba.sfba006, l_sfba.sfba021 , l_sfba.sfba014, l_sfba.sfba013,
               l_sfba.sfba016, g_no_issue_2  , g_issue_qty_2  , g_inag008_2   , g_inan010_2   ,
               l_sfba.sfba001)
      IF SQLCA.sqlcode THEN
         CALL cl_err("ins asfp310_sfba",SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF

      #------产生主要用料库存单身（同时累加g_inag008_2，g_inan010_2）------
      #                           顺序   项次            项序            元件料号        产品特征       单位
      CALL asfp310_ins_table_inag(p_seq,l_sfba.sfbaseq,l_sfba.sfbaseq1,l_sfba.sfba006,l_sfba.sfba021,l_sfba.sfba014,l_imaf053,l_imaf054)
         RETURNING r_success
      IF NOT r_success THEN
         EXIT FOREACH
      END IF

      IF l_sfba.sfbaseq1 = 0 THEN #项序为0，非0的为已经被取替代的料，不可能再有替代资料
         #------产生取替代料单身（同时累加g_inag008_2，g_inan010_2）------
         #                           顺序   项次            项序
         CALL asfp310_ins_table_bmea(p_seq,l_sfba.sfbaseq,l_sfba.sfbaseq1,
         #                           主件料号   特性      元件料号        部位           作业编号        作业序         产品特征        单位            应发量         上阶料号
                                     p_sfaa010,p_sfaa011,l_sfba.sfba006,l_sfba.sfba002,l_sfba.sfba003,l_sfba.sfba004,l_sfba.sfba021,l_sfba.sfba014,l_sfba.sfba013,l_sfba.sfba001)
            RETURNING r_success
         IF NOT r_success THEN
            EXIT FOREACH
         END IF
      END IF

      #IF g_issue_qty_2 <= g_no_issue_2 THEN  #发料量<未发量
      IF g_no_issue_2 > 0 THEN  #未发量还有未分配的
         LET r_is_full = 'N'  #足套否
      ELSE
         LET r_is_full = 'Y'  #足套否
      END IF
      #若需判断足套
      IF g_can_sets = 'Y' AND r_is_full='N' THEN
         EXIT FOREACH
      END IF

      UPDATE asfp310_sfba SET issue_qty_2= g_issue_qty_2,  #发料量
                              inag008_2  = g_inag008_2,    #库存可用量
                              inan010_2  = g_inan010_2     #在捡量
       WHERE seq_1 = p_seq
         AND seq_2 = l_sfba.sfbaseq
         AND seq1_2= l_sfba.sfbaseq1
      IF SQLCA.sqlcode OR SQLCA.sqlerrd[3]=0 THEN
         CALL cl_err('upd asfp310_sfba err',SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF

   END FOREACH

   RETURN r_success,r_is_full
END FUNCTION]]>
  </point>
  <point name="function.asfp310_ins_table_sfaa" order="3" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#根据条件产生新的资料，同时进行分配
PRIVATE FUNCTION asfp310_ins_table_sfaa()
DEFINE r_success     LIKE type_t.num5
DEFINE l_seq_1       LIKE type_t.num5
DEFINE l_sql1        STRING
DEFINE l_sql         STRING
DEFINE l_sfaa        RECORD LIKE sfaa_t.*
DEFINE l_sfba003     LIKE sfba_t.sfba003
DEFINE l_sfba004     LIKE sfba_t.sfba004
DEFINE l_has_sets_1  LIKE sfaa_t.sfaa049  #已发齐套数
DEFINE l_can_sets_1  LIKE sfaa_t.sfaa049  #可齐料套数
DEFINE l_string      STRING
DEFINE l_sfba016     LIKE sfba_t.sfba016  #已发量
DEFINE l_is_full     LIKE type_t.chr1     #检查结果：可足套否

   LET r_success = TRUE
   LET g_need_issue = 'Y'  #需分配数量否
   
   SELECT MAX(seq_1) INTO l_seq_1 FROM asfp310_sfaa
   IF cl_null(l_seq_1) THEN LET l_seq_1 = 0 END IF
   
   #------第一单身------------------------------------------
   IF NOT cl_null(g_master.sfba003) THEN
      LET l_sql1= " SELECT unique sfaa_t.*,sfba003,sfba004 ",
                  "   FROM sfaa_t,sfba_t ",
                  "  WHERE sfaaent  = sfbaent ",
                  "    AND sfaadocno= sfbadocno ",
                  "    AND sfaaent  = ",g_enterprise,
                  "    AND sfaasite = '",g_site,"' ",
                  "    AND ",g_master.wc CLIPPED,  #工单范围QBE
                  "    AND ",tm.wc3 CLIPPED,  #进阶查询QBE--元件料号sfba006
                  "    AND sfba013 > sfba015 + sfba016 ",   #应发 > 代买+已发
                  "    AND sfba009 = 'N' ",   #非倒扣料
                  "    AND sfba003='",g_master.sfba003,"' "  #作业编号
      IF NOT cl_null(g_master.sfba004) AND g_master.sfba004 != 0 THEN
         LET l_sql1= l_sql1 CLIPPED," AND sfba004='",g_master.sfba004,"' "   #作业序
      END IF
   ELSE  
      LET l_sql1= " SELECT unique sfaa_t.*,'','' FROM sfaa_t,sfba_t ",
                  "  WHERE sfaaent  = sfbaent ",
                  "    AND sfaadocno= sfbadocno ",
                  "    AND sfaaent  = ",g_enterprise,
                  "    AND sfaasite = '",g_site,"' ",
                  "    AND ",g_master.wc CLIPPED,  #工单范围QBE
                  "    AND ",tm.wc3 CLIPPED,  #进阶查询QBE--元件料号sfba006
                  "    AND sfba013 > sfba015 + sfba016 ",  #应发 > 代买+已发
                  "    AND sfba009 = 'N' "   #非倒扣料
   END IF
   CASE g_master.priority1
      WHEN '1'  #预计开工日
           LET l_string = "sfaa019"
      WHEN '2'  #预计完工日
           LET l_string = "sfaa020 "
      WHEN '3'  #紧急比率
           LET l_string = "sfaa032 "
      WHEN '4'  #工单单号
           LET l_string = "sfaa020 "
   END CASE
   CASE g_master.priority2
      WHEN '1'  #预计开工日
           LET l_string = l_string CLIPPED,",sfaa019"
      WHEN '2'  #预计完工日
           LET l_string = l_string CLIPPED,",sfaa020 "
      WHEN '3'  #紧急比率
           LET l_string = l_string CLIPPED,",sfaa032 "
      WHEN '4'  #工单单号
           LET l_string = l_string CLIPPED,",sfaa020 "
   END CASE
   CASE g_master.priority3
      WHEN '1'  #预计开工日
           LET l_string = l_string CLIPPED,",sfaa019"
      WHEN '2'  #预计完工日
           LET l_string = l_string CLIPPED,",sfaa020 "
      WHEN '3'  #紧急比率
           LET l_string = l_string CLIPPED,",sfaa032 "
      WHEN '4'  #工单单号
           LET l_string = l_string CLIPPED,",sfaa020 "
   END CASE
   CASE g_master.priority4
      WHEN '1'  #预计开工日
           LET l_string = l_string CLIPPED,",sfaa019"
      WHEN '2'  #预计完工日
           LET l_string = l_string CLIPPED,",sfaa020 "
      WHEN '3'  #紧急比率
           LET l_string = l_string CLIPPED,",sfaa032 "
      WHEN '4'  #工单单号
           LET l_string = l_string CLIPPED,",sfaa020 "
   END CASE
   
   #----若勾选g_master.no_sets：优先满足已发料未齐套工单
   #    则先走发过料的工单（先走可足套的，再走未足套的），再走未发过料的工单（先走可足套的，再走未足套的）
   #    
   #已发过料+可足套的
   LET l_sql = l_sql1 CLIPPED," ORDER BY ",l_string
   PREPARE asfp310_ins_table_p1 FROM l_sql
   DECLARE asfp310_ins_table_c1 CURSOR FOR asfp310_ins_table_p1
   IF g_master.can_sets = 'Y' THEN  #可足套数者优先满足
      LET g_can_sets = 'Y'  #需足套否
   END IF
   FOREACH asfp310_ins_table_c1 INTO l_sfaa.*,l_sfba003,l_sfba004
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      #检查g_master.no_sets：优先满足已发料未齐套工单
      IF g_master.no_sets = 'Y' THEN
         SELECT SUM(sfba016) INTO l_sfba016 FROM sfba_t
          WHERE sfbaent  = l_sfaa.sfaaent
            AND sfbadocno= l_sfaa.sfaadocno
         IF l_sfba016 = 0 THEN
            CONTINUE FOREACH
         END IF
      END IF
      
      LET l_seq_1 = l_seq_1 + 10  #顺序
      
      IF cl_null(l_sfba003) THEN LET l_sfba003 = ' ' END IF #作业
      IF cl_null(l_sfba004) THEN LET l_sfba004 = ' ' END IF #作业序
      
      #先插入sfba，因需判断足套否
      LET g_need_issue = 'Y'  #需分配数量否
      #                           顺序    工单单号          作业编号   作业序     主件料号        特征
      CALL asfp310_ins_table_sfba(l_seq_1,l_sfaa.sfaadocno,l_sfba003,l_sfba004,l_sfaa.sfaa010,l_sfaa.sfaa011)  #产生第二单身asfp310_sfba
         RETURNING r_success,l_is_full
      IF NOT r_success THEN
         EXIT FOREACH
      END IF
      #检查g_master.can_sets：可足套数者优先满足
      IF g_master.can_sets = 'Y' AND l_is_full='N' THEN #未足套，则此工单先不产生
         DELETE FROM asfp310_sfba WHERE seq_1 = l_seq_1
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
            EXIT FOREACH
         END IF
         DELETE FROM asfp310_inag WHERE seq_1 = l_seq_1
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
            EXIT FOREACH
         END IF
         DELETE FROM asfp310_bmea WHERE seq_1 = l_seq_1
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
            EXIT FOREACH
         END IF
         LET l_seq_1 = l_seq_1 - 10  #顺序
         CONTINUE FOREACH
      END IF
 
      #已发齐套数
      CALL s_asft340_full_sets(l_sfaa.sfaadocno,l_sfba003,l_sfba004,'')
           RETURNING r_success,l_has_sets_1
      IF NOT r_success THEN
         EXIT FOREACH
      END IF

      ##可齐料套数
      #CALL asfp310_full_sets(l_sfaa.sfaadocno,l_sfba003,l_sfba004)
      #     RETURNING r_success,l_can_sets_1
      #IF NOT r_success THEN
      #   EXIT FOREACH
      #END IF
      #LET l_can_sets_1 = l_can_sets_1 - l_has_sets_1
      
      #                        锁定        顺序       工单单号      生产料号   预计开工日
      INSERT INTO asfp310_sfaa(lock_1,    seq_1,     sfaadocno_1, sfaa010_1, sfaa019_1,
      #                        预计完工日  部门厂商    生管员        作业编号    作业序
                               sfaa020_1, sfaa017_1, sfaa002_1,   sfba003_1, sfba004_1,
      #                        生产数量    已发套数    已发齐套数    可齐料套数
                               sfaa012_1, sfaa049_1, has_sets_1)#,  can_sets_1)
        VALUES('N',            l_seq_1,        l_sfaa.sfaadocno, l_sfaa.sfaa010, l_sfaa.sfaa019,
               l_sfaa.sfaa020, l_sfaa.sfaa017, l_sfaa.sfaa002,   l_sfba003,      l_sfba004,
               l_sfaa.sfaa012, l_sfaa.sfaa049, l_has_sets_1)#,     l_can_sets_1)
      IF SQLCA.sqlcode THEN
         CALL cl_err("ins asfp310_sfaa",SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF

   END FOREACH
   
   #已发过料+不能足套的（剔除可足套后的）
   IF g_master.can_sets = 'Y' THEN
      LET g_can_sets = 'N'  #可足套数者优先满足
      LET l_sql = l_sql1 CLIPPED," AND sfaadocno NOT IN (select unique sfaadocno_1 FROM asfp310_sfaa) ",
                                 " ORDER BY ",l_string
      PREPARE asfp310_ins_table_p12 FROM l_sql
      DECLARE asfp310_ins_table_c12 CURSOR FOR asfp310_ins_table_p12
      FOREACH asfp310_ins_table_c12 INTO l_sfaa.*,l_sfba003,l_sfba004
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            LET r_success = FALSE
            EXIT FOREACH
         END IF
         
         #检查g_master.no_sets：优先满足已发料未齐套工单
         IF g_master.no_sets = 'Y' THEN
            SELECT SUM(sfba016) INTO l_sfba016 FROM sfba_t
             WHERE sfbaent  = l_sfaa.sfaaent
               AND sfbadocno= l_sfaa.sfaadocno
            IF l_sfba016 = 0 THEN
               CONTINUE FOREACH
            END IF
         END IF
      
         LET l_seq_1 = l_seq_1 + 10  #顺序
         
         IF cl_null(l_sfba003) THEN LET l_sfba003 = ' ' END IF #作业
         IF cl_null(l_sfba004) THEN LET l_sfba004 = ' ' END IF #作业序
         
         #先插入sfba，因需判断足套否
         #                           顺序    工单单号          作业编号   作业序     主件料号        特征
         CALL asfp310_ins_table_sfba(l_seq_1,l_sfaa.sfaadocno,l_sfba003,l_sfba004,l_sfaa.sfaa010,l_sfaa.sfaa011)  #产生第二单身asfp310_sfba
            RETURNING r_success,l_is_full
         IF NOT r_success THEN
            EXIT FOREACH
         END IF
       
         #已发齐套数
         CALL s_asft340_full_sets(l_sfaa.sfaadocno,l_sfba003,l_sfba004,'')
              RETURNING r_success,l_has_sets_1
         IF NOT r_success THEN
            EXIT FOREACH
         END IF
       
         ##可齐料套数
         #CALL asfp310_full_sets(l_sfaa.sfaadocno,l_sfba003,l_sfba004)
         #     RETURNING r_success,l_can_sets_1
         #IF NOT r_success THEN
         #   EXIT FOREACH
         #END IF
         #LET l_can_sets_1 = l_can_sets_1 - l_has_sets_1
         
         #                        锁定        顺序       工单单号      生产料号   预计开工日
         INSERT INTO asfp310_sfaa(lock_1,    seq_1,     sfaadocno_1, sfaa010_1, sfaa019_1,
         #                        预计完工日  部门厂商    生管员        作业编号    作业序
                                  sfaa020_1, sfaa017_1, sfaa002_1,   sfba003_1, sfba004_1,
         #                        生产数量    已发套数    已发齐套数    可齐料套数
                                  sfaa012_1, sfaa049_1, has_sets_1)#,  can_sets_1)
           VALUES('N',            l_seq_1,        l_sfaa.sfaadocno, l_sfaa.sfaa010, l_sfaa.sfaa019,
                  l_sfaa.sfaa020, l_sfaa.sfaa017, l_sfaa.sfaa002,   l_sfba003,      l_sfba004,
                  l_sfaa.sfaa012, l_sfaa.sfaa049, l_has_sets_1)#,     l_can_sets_1)
         IF SQLCA.sqlcode THEN
            CALL cl_err("ins asfp310_sfaa",SQLCA.sqlcode,1)
            LET r_success = FALSE
            EXIT FOREACH
         END IF
      
         
      END FOREACH
   END IF
   
   #----未发过料的工单
   #未发过料（经过上面，都已剔除发过料，剩余未发过料的）+可足套的
   IF g_master.no_sets = 'Y' THEN
      IF g_master.can_sets = 'Y' THEN  #可足套数者优先满足
         LET g_can_sets = 'Y'
      END IF
      LET l_sql = l_sql1 CLIPPED," AND sfaadocno NOT IN (select unique sfaadocno_1 FROM asfp310_sfaa) ",
                                 " ORDER BY ",l_string
      PREPARE asfp310_ins_table_p2 FROM l_sql
      DECLARE asfp310_ins_table_c2 CURSOR FOR asfp310_ins_table_p2
      FOREACH asfp310_ins_table_c2 INTO l_sfaa.*,l_sfba003,l_sfba004
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            LET r_success = FALSE
            EXIT FOREACH
         END IF
         
         LET l_seq_1 = l_seq_1 + 10  #顺序
         
         IF cl_null(l_sfba003) THEN LET l_sfba003 = ' ' END IF #作业
         IF cl_null(l_sfba004) THEN LET l_sfba004 = ' ' END IF #作业序
         
         #先插入sfba，因需判断足套否
         #                           顺序    工单单号          作业编号   作业序     主件料号        特征
         CALL asfp310_ins_table_sfba(l_seq_1,l_sfaa.sfaadocno,l_sfba003,l_sfba004,l_sfaa.sfaa010,l_sfaa.sfaa011)  #产生第二单身asfp310_sfba
            RETURNING r_success,l_is_full
         IF NOT r_success THEN
            EXIT FOREACH
         END IF
         #检查g_master.can_sets：可足套数者优先满足
         IF g_master.can_sets = 'Y' AND l_is_full='N' THEN #未足套，则此工单先不产生
            DELETE FROM asfp310_sfba WHERE seq_1 = l_seq_1
            IF SQLCA.sqlcode THEN
               LET r_success = FALSE
               EXIT FOREACH
            END IF
            DELETE FROM asfp310_inag WHERE seq_1 = l_seq_1
            IF SQLCA.sqlcode THEN
               LET r_success = FALSE
               EXIT FOREACH
            END IF
            DELETE FROM asfp310_bmea WHERE seq_1 = l_seq_1
            IF SQLCA.sqlcode THEN
               LET r_success = FALSE
               EXIT FOREACH
            END IF
            LET l_seq_1 = l_seq_1 - 10  #顺序
            CONTINUE FOREACH
         END IF
       
         #已发齐套数
         CALL s_asft340_full_sets(l_sfaa.sfaadocno,l_sfba003,l_sfba004,'')
              RETURNING r_success,l_has_sets_1
         IF NOT r_success THEN
            EXIT FOREACH
         END IF
       
         ##可齐料套数
         #CALL asfp310_full_sets(l_sfaa.sfaadocno,l_sfba003,l_sfba004)
         #     RETURNING r_success,l_can_sets_1
         #IF NOT r_success THEN
         #   EXIT FOREACH
         #END IF
         #LET l_can_sets_1 = l_can_sets_1 - l_has_sets_1
         
         #                        锁定        顺序       工单单号      生产料号   预计开工日
         INSERT INTO asfp310_sfaa(lock_1,    seq_1,     sfaadocno_1, sfaa010_1, sfaa019_1,
         #                        预计完工日  部门厂商    生管员        作业编号    作业序
                                  sfaa020_1, sfaa017_1, sfaa002_1,   sfba003_1, sfba004_1,
         #                        生产数量    已发套数    已发齐套数    可齐料套数
                                  sfaa012_1, sfaa049_1, has_sets_1)#,  can_sets_1)
           VALUES('N',            l_seq_1,        l_sfaa.sfaadocno, l_sfaa.sfaa010, l_sfaa.sfaa019,
                  l_sfaa.sfaa020, l_sfaa.sfaa017, l_sfaa.sfaa002,   l_sfba003,      l_sfba004,
                  l_sfaa.sfaa012, l_sfaa.sfaa049, l_has_sets_1)#,     l_can_sets_1)
         IF SQLCA.sqlcode THEN
            CALL cl_err("ins asfp310_sfaa",SQLCA.sqlcode,1)
            LET r_success = FALSE
            EXIT FOREACH
         END IF

      END FOREACH
   END IF
   
   #未发过料+不能足套的（剔除可足套后的）
   IF g_master.can_sets = 'Y' THEN
      LET g_can_sets = 'N'  #可足套数者优先满足
      LET l_sql = l_sql1 CLIPPED," AND sfaadocno NOT IN (select unique sfaadocno_1 FROM asfp310_sfaa) ",
                                 " ORDER BY ",l_string
      PREPARE asfp310_ins_table_p22 FROM l_sql
      DECLARE asfp310_ins_table_c22 CURSOR FOR asfp310_ins_table_p22
      FOREACH asfp310_ins_table_c22 INTO l_sfaa.*,l_sfba003,l_sfba004
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            LET r_success = FALSE
            EXIT FOREACH
         END IF
         

         LET l_seq_1 = l_seq_1 + 10  #顺序
         
         IF cl_null(l_sfba003) THEN LET l_sfba003 = ' ' END IF #作业
         IF cl_null(l_sfba004) THEN LET l_sfba004 = ' ' END IF #作业序
         
         #先插入sfba，因需判断足套否
         #                           顺序    工单单号          作业编号   作业序     主件料号        特征
         CALL asfp310_ins_table_sfba(l_seq_1,l_sfaa.sfaadocno,l_sfba003,l_sfba004,l_sfaa.sfaa010,l_sfaa.sfaa011)  #产生第二单身asfp310_sfba
            RETURNING r_success,l_is_full
         IF NOT r_success THEN
            EXIT FOREACH
         END IF
       
         #已发齐套数
         CALL s_asft340_full_sets(l_sfaa.sfaadocno,l_sfba003,l_sfba004,'')
              RETURNING r_success,l_has_sets_1
         IF NOT r_success THEN
            EXIT FOREACH
         END IF
       
         ##可齐料套数
         #CALL asfp310_full_sets(l_sfaa.sfaadocno,l_sfba003,l_sfba004)
         #     RETURNING r_success,l_can_sets_1
         #IF NOT r_success THEN
         #   EXIT FOREACH
         #END IF
         #LET l_can_sets_1 = l_can_sets_1 - l_has_sets_1
         
         #                        锁定        顺序       工单单号      生产料号   预计开工日
         INSERT INTO asfp310_sfaa(lock_1,    seq_1,     sfaadocno_1, sfaa010_1, sfaa019_1,
         #                        预计完工日  部门厂商    生管员        作业编号    作业序
                                  sfaa020_1, sfaa017_1, sfaa002_1,   sfba003_1, sfba004_1,
         #                        生产数量    已发套数    已发齐套数    可齐料套数
                                  sfaa012_1, sfaa049_1, has_sets_1)#,  can_sets_1)
           VALUES('N',            l_seq_1,        l_sfaa.sfaadocno, l_sfaa.sfaa010, l_sfaa.sfaa019,
                  l_sfaa.sfaa020, l_sfaa.sfaa017, l_sfaa.sfaa002,   l_sfba003,      l_sfba004,
                  l_sfaa.sfaa012, l_sfaa.sfaa049, l_has_sets_1)#,     l_can_sets_1)
         IF SQLCA.sqlcode THEN
            CALL cl_err("ins asfp310_sfaa",SQLCA.sqlcode,1)
            LET r_success = FALSE
            EXIT FOREACH
         END IF
      
         
      END FOREACH
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asfp310_redistribution" order="4" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#重新分配
PRIVATE FUNCTION asfp310_redistribution()
DEFINE l_count   LIKE type_t.num5
DEFINE l_sql     STRING
DEFINE l_sfba    RECORD
                 seq_1       LIKE type_t.num5,      #顺序
                 seq_2       LIKE type_t.num5,      #项次
                 seq1_2      LIKE type_t.num5,      #项序
                 sfba002_2   LIKE sfba_t.sfba002,   #部位
                 sfba003_2   LIKE sfba_t.sfba003,   #作业
                 sfba004_2   LIKE sfba_t.sfba004,   #作业序
                 sfba006_2   LIKE sfba_t.sfba006,   #发料料号
                 sfba021_2   LIKE sfba_t.sfba021,   #产品特征
                 sfba014_2   LIKE sfba_t.sfba014,   #单位
                 sfba013_2   LIKE sfba_t.sfba013,   #应发量
                 no_issue_2  LIKE sfba_t.sfba016,   #未发数量
                 sfba001_2   LIKE sfba_t.sfba001,   #上阶料号
                 sfaa010     LIKE sfaa_t.sfaa010,   #主件料号
                 sfaa011     LIKE sfaa_t.sfaa011,   #特性
                 imaf053     LIKE imaf_t.imaf053,
                 imaf054     LIKE imaf_t.imaf054
                 END RECORD
DEFINE l_success LIKE type_t.num5

   IF g_rec_b_sfaa = 0 THEN
      #无可分配的数据，请先选择数据
      CALL cl_err('','asf-00244',1)
      RETURN
   END IF
   
   IF NOT cl_ask_confirm('asf-00210') THEN
      RETURN
   END IF
      
   CALL s_transaction_begin()

   #删除未锁定的分配资料
   UPDATE asfp310_sfba SET issue_qty_2 = 0,  #发料量
                           inag008_2   = 0,  #库存可用量
                           inan010_2   = 0   #在捡量
    WHERE seq_1 IN (select seq_1 from asfp310_sfaa where lock_1 = 'N')
   IF SQLCA.sqlcode THEN
      CALL cl_err('upd asfp310_sfba',SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   DELETE FROM asfp310_inag
    WHERE seq_1 IN (select seq_1 from asfp310_sfaa where lock_1 = 'N')
   IF SQLCA.sqlcode THEN
      CALL cl_err('del asfp310_inag',SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   DELETE FROM asfp310_bmea
    WHERE seq_1 IN (select seq_1 from asfp310_sfaa where lock_1 = 'N')
   IF SQLCA.sqlcode THEN
      CALL cl_err('del asfp310_bmea',SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   #分配资料
   LET l_sql = "SELECT asfp310_sfba.seq_1,     asfp310_sfba.seq_2,     asfp310_sfba.seq1_2, ",
               "       asfp310_sfba.sfba002_2, asfp310_sfba.sfba003_2, asfp310_sfba.sfba004_2, ",
               "       asfp310_sfba.sfba006_2, asfp310_sfba.sfba021_2, asfp310_sfba.sfba014_2, ",
               "       asfp310_sfba.sfba013_2, asfp310_sfba.no_issue_2, asfp310_sfba.sfba001_2 ",
               "       sfaa_t.sfaa010, sfaa_t.sfaa011,  imaf_t.imaf053,  imaf_t.imaf054 ",
               "  FROM asfp310_sfba,asfp310_sfaa,sfaa_t,imaf_t ",
               " WHERE asfp310_sfba.seq_1 = asfp310_sfaa.seq_1 ",
               "   AND sfaa_t.sfaaent     = ",g_enterprise,
               "   AND sfaa_t.sfaadocno   = asfp310_sfaa.sfaadocno_1 ",
               "   AND imaf_t.imafent     = ",g_enterprise,
               "   AND imaf_t.imafsite    ='",g_site,"' ",
               "   AND imaf_t.imaf001     = asfp310_sfba.sfba006_2 "  #料件
   PREPARE asfp310_redistribution_p FROM l_sql
   DECLARE asfp310_redistribution_c CURSOR FOR asfp310_redistribution_p
   FOREACH asfp310_redistribution_c INTO l_sfba.*
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         CALL s_transaction_end('N','0')
         RETURN
      END IF
                 
      IF cl_null(l_sfba.imaf054) THEN
         LET l_sfba.imaf054 = 'N'
         IF cl_null(l_sfba.imaf053) THEN
            CALL cl_err(l_sfba.sfba006_2,'sub-00476',1)
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF
   
      LET g_no_issue_2  =  l_sfba.no_issue_2 #未发数量
      LET g_issue_qty_2 =  0 #发料量
      LET g_inag008_2   =  0 #库存可用量
      LET g_inan010_2   =  0 #在捡量
      
      #------产生主要用料库存单身（同时累加g_inag008_2，g_inan010_2）------
      #                           顺序          项次         项序           元件料号         产品特征          单位
      CALL asfp310_ins_table_inag(l_sfba.seq_1,l_sfba.seq_2,l_sfba.seq1_2,l_sfba.sfba006_2,l_sfba.sfba021_2,l_sfba.sfba014_2,l_sfba.imaf053,l_sfba.imaf054)
         RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      IF l_sfba.seq1_2 = 0 THEN  #项序为0，非0的为已经被取替代的料，不可能再有替代资料
         #------产生取替代料单身（同时累加g_inag008_2，g_inan010_2）------
         #                           顺序          项次         项序
         CALL asfp310_ins_table_bmea(l_sfba.seq_1,l_sfba.seq_2,l_sfba.seq1_2,
         #                           主件料号        特性           元件料号          部位             作业编号          作业序            产品特征          单位             应发量           上阶料
                                     l_sfba.sfaa010,l_sfba.sfaa011,l_sfba.sfba006_2,l_sfba.sfba002_2,l_sfba.sfba003_2,l_sfba.sfba004_2,l_sfba.sfba021_2,l_sfba.sfba014_2,l_sfba.sfba013_2,l_sfba.sfba001_2)
            RETURNING l_success
         IF NOT l_success THEN
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF

      UPDATE asfp310_sfba SET issue_qty_2= g_issue_qty_2,  #发料量
                              inag008_2  = g_inag008_2,    #库存可用量
                              inan010_2  = g_inan010_2     #在捡量
       WHERE seq_1 = l_sfba.seq_1
         AND seq_2 = l_sfba.seq_2
         AND seq1_2= l_sfba.seq1_2
      IF SQLCA.sqlcode OR SQLCA.sqlerrd[3]=0 THEN
         CALL cl_err('upd asfp310_sfba err',SQLCA.sqlcode,1)
         CALL s_transaction_end('N','0')
         RETURN
      END IF
   END FOREACH


   CALL s_transaction_end('Y','0')
   
   #资料显示
   CALL asfp310_b_fill()
END FUNCTION]]>
  </point>
  <point name="function.asfp310_ins_table_bmea" order="5" ver="3" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#产生asfp310_bmea
#取替代料单身
PRIVATE FUNCTION asfp310_ins_table_bmea(p_seq,p_sfbaseq,p_sfbaseq1,p_sfaa010,p_sfaa011,p_sfba006,p_sfba002,p_sfba003,p_sfba004,p_sfba021,p_sfba014,p_no_issue_2,p_sfba001)
DEFINE p_seq            LIKE type_t.num5     #顺序
DEFINE p_sfbaseq        LIKE sfba_t.sfbaseq  #项次
DEFINE p_sfbaseq1       LIKE sfba_t.sfbaseq1 #项序
DEFINE p_sfaa010        LIKE sfaa_t.sfaa010  #主件料号
DEFINE p_sfaa011        LIKE sfaa_t.sfaa011  #特性
DEFINE p_sfba006        LIKE sfba_t.sfba006  #元件料号
DEFINE p_sfba002        LIKE sfba_t.sfba002  #部位
DEFINE p_sfba003        LIKE sfba_t.sfba003  #作业编号
DEFINE p_sfba004        LIKE sfba_t.sfba004  #作业序
DEFINE p_sfba021        LIKE sfba_t.sfba021  #产品特征
DEFINE p_sfba014        LIKE sfba_t.sfba014  #单位--元件备料
DEFINE p_no_issue_2     LIKE inan_t.inan010  #此笔备料总需求量
DEFINE p_sfba001        LIKE sfba_t.sfba001  #备料档的上阶料号
DEFINE r_success        LIKE type_t.num5
DEFINE l_sql            STRING
DEFINE l_bmea           RECORD LIKE bmea_t.*
DEFINE l_inag           RECORD LIKE inag_t.*
DEFINE l_inan010        LIKE inan_t.inan010  #在捡量
DEFINE l_replace_rate_4 LIKE sfdd_t.sfdd002  #替代率
DEFINE l_issue_qty_4    LIKE inan_t.inan010  #发料量
DEFINE l_imaf053        LIKE imaf_t.imaf053  #据点库存单位
DEFINE l_imaf054        LIKE imaf_t.imaf054  #库存多单位
DEFINE l_bmba010        LIKE bmba_t.bmba010  #bom元件单身
DEFINE l_can_qty        LIKE inan_t.inan010  #可发量
DEFINE l_has_qty        LIKE inan_t.inan010  #本单据已占用的量
DEFINE l_max_qty        LIKE inan_t.inan010  #最大可被取替代量
DEFINE l_cnt            LIKE type_t.num5
DEFINE l_success        LIKE type_t.num5

   LET r_success = TRUE
   
   CALL asfp310_get_bmba010(p_sfba001,p_sfaa011,p_sfba006,p_sfba002,p_sfba003,p_sfba004)
      RETURNING l_success,l_bmba010  #bom元件单位
   IF NOT l_success THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
      
   LET l_sql = " SELECT bmea_t.*,imaf053,imaf054 FROM bmea_t,imaf_t ",
               "  WHERE bmeaent = imafent ",
               "    AND bmeasite= imafsite",
               "    AND bmea008 = imaf001 ",  #替代料件
               "    AND bmeaent = ",g_enterprise,
               "    AND bmeasite='",g_site,"' ",
               "    AND ( ",
               "         (bmea001 ='",p_sfba001,"' ",  #p_sfaa010 主件料号
               "          AND bmea002 ='",p_sfaa011,"' ",  #特性
               "          AND bmea003 ='",p_sfba006,"' ",  #元件料号
               "          AND bmea004 ='",p_sfba002,"' ",  #部位
               "          AND bmea005 ='",p_sfba003,"' ",  #作业
               "          AND bmea006 ='",p_sfba004,"' ) ",  #作业序
               "         OR ",
               "         (bmea001 ='ALL' AND bmea003 ='",p_sfba006,"') ", #主件料号，元件料号
               "        )",
               "    AND bmea009 <= '",g_today,"' ",
               "    AND (bmea010 > '",g_today,"' OR bmea010 IS NULL) "
   PREPARE asfp310_ins_table_p4 FROM l_sql
   DECLARE asfp310_ins_table_c4 CURSOR FOR asfp310_ins_table_p4
   #取替代料单身--获取取替代料
   #OPEN asfp310_ins_table_c4 USING p_sfaa010,p_sfaa011,p_sfba006,p_sfba002,p_sfba003,p_sfba004,p_sfba006  #主件料号,特性,元件料号,部位,作业编号,作业序,元件料号
   FOREACH asfp310_ins_table_c4 INTO l_bmea.*,l_imaf053,l_imaf054
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF

      IF cl_null(l_imaf054) THEN
         LET l_imaf054 = 'N'
         IF cl_null(l_imaf053) THEN
            CALL cl_err(l_bmea.bmea008,'sub-00476',1)
            LET r_success = FALSE
            EXIT FOREACH
         END IF
      END IF
          
      #取替代料单身--获取取替代料的库存信息
      LET l_sql = " SELECT inag_t.*,inan010 ",
                  " FROM inag_t LEFT OUTER JOIN inan_t ON inagent = inanent AND inagsite= inansite AND inag001 = inan001 AND inag002 = inan002 AND inag003 = inan003 AND inag004 = inan004 AND inag005 = inan005 AND inag006 = inan006 AND inag007 = inan007 ",
                  "  WHERE inagent = ",g_enterprise,
                  "    AND inagsite='",g_site,"' ",
                  "    AND inag001 ='",l_bmea.bmea008,"' ",  #料件
                  "    AND inag002 ='",p_sfba021,"' ",  #产品特征
                  "    AND (inag019 = 'N' OR inag019 IS NULL) " #未留置的
      IF l_imaf054 = 'N' THEN  #不做多单位管理，只能从据点库存单位中出货
         LET l_sql = l_sql CLIPPED," AND inag007 = '",l_imaf053,"' "
      ELSE   #做库存单位管理，出货只能从单据指定单位出
         LET l_sql = l_sql CLIPPED," AND inag007 = '",l_bmea.bmea013,"' "  #替代料发料单位
      END IF
      PREPARE asfp310_ins_table_p32 FROM l_sql
      DECLARE asfp310_ins_table_c32 CURSOR FOR asfp310_ins_table_p32
      FOREACH asfp310_ins_table_c32 INTO l_inag.*,l_inan010
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            LET r_success = FALSE
            EXIT FOREACH
         END IF
         
         IF l_bmea.bmea011 = 0 OR l_bmea.bmea012 = 0 THEN 
            CALL cl_err(l_bmea.bmea008,'asf-00093',1)
            LET r_success = FALSE
            EXIT FOREACH
         END IF
         
         #库存在捡量
         IF cl_null(l_inan010) THEN LET l_inan010 = 0 END IF
               
         #计算替代率
         #考虑bom中元件和替代料的单位，与此作业中备料和替代料发料单位的换算率
         #                          需求料号 需求料件单位 替代料号        替代发料单位    取替代量       元件底數        替代料發料單位   bom档的单位
         CALL s_asft310_get_sfdd002_2(p_sfba006,p_sfba014,l_bmea.bmea008,l_inag.inag007,l_bmea.bmea011,l_bmea.bmea012,l_bmea.bmea013,l_bmba010)
            RETURNING r_success,l_replace_rate_4
         IF NOT r_success THEN
            EXIT FOREACH
         END IF
         
         IF g_need_issue='Y' THEN  #需要分配数量
            #----------------------
            #完全取替代
            IF l_bmea.bmea016 = '2' THEN
               #检查是否有被其他料取替代
               SELECT COUNT(*) INTO l_cnt FROM asfp310_bmea
                WHERE seq_1     = l_seq_1
                  AND seq_2     = l_seq_2
                  AND seq1_2    = l_seq1_2
                  AND issue_qty_4 > 0
                  #AND (bmea007_4,bmea008_4,inag004_4,inag005_4,inag006_4,inag003_4,inag007_4) NOT IN
                  #    (select bmea007_4,bmea008_4,inag004_4,inag005_4,inag006_4,inag003_4,inag007_4
                  #       from asfp310_bmea
                  #      where seq_1     = l_seq_1
                  #        and seq_2     = l_seq_2
                  #        and seq1_2    = l_seq1_2
                  #        and bmea007_4 = l_bmea007
                  #        and bmea008_4 = l_bmea008
                  #        and inag004_4 = p_inag004
                  #        and inag005_4 = p_inag005
                  #        and inag006_4 = p_inag006
                  #        and inag003_4 = p_inag003
                  #        and inag007_4 = p_inag007
                  #    )
                  AND NOT EXISTS
                      (select bmea007_4,bmea008_4,inag004_4,inag005_4,inag006_4,inag003_4,inag007_4
                         from asfp310_bmea
                        where seq_1     = l_seq_1
                          and seq_2     = l_seq_2
                          and seq1_2    = l_seq1_2
                          and bmea007_4 = l_bmea007
                          and bmea008_4 = l_bmea008
                          and inag004_4 = p_inag004
                          and inag005_4 = p_inag005
                          and inag006_4 = p_inag006
                          and inag003_4 = p_inag003
                          and inag007_4 = p_inag007)
               IF l_cnt > 0 THEN  #有被其他料取替代过了，此料不能做取替代
                  LET l_issue_qty_4 = 0
               ELSE
                  #计算库存可发量=库存量-在捡量-本作业上已占用的量
                  #本作业上已占用的量
                  #                        料件           特征            库             储
                  CALL asfp310_get_has_qty(l_inag.inag001,l_inag.inag002,l_inag.inag004,l_inag.inag005,
                  #                        批             库存管理特征    库存单位        本笔发料量
                                           l_inag.inag006,l_inag.inag003,l_inag.inag007,0)
                     RETURNING l_has_qty
                  LET l_can_qty = l_inag.inag008 - l_inan010 - l_has_qty
                 
                  #将未发量转换成库存单位的量
                  LET g_no_issue_2= g_no_issue_2 * l_replace_rate_4
                  
                  #计算l_issue_qty_4发料量
                  IF g_no_issue_2 > l_can_qty THEN #未发数量 > 库存量
                     LET l_issue_qty_4 = l_can_qty  #发料量
                     LET g_no_issue_2 = g_no_issue_2 - l_can_qty  #剩余未发量
                  ELSE
                     LET l_issue_qty_4 = g_no_issue_2  #发料量
                     LET g_no_issue_2 = 0  #剩余未发量
                  END IF
                  
                  #将未发量再转换回备料单位的量
                  LET g_no_issue_2= g_no_issue_2 / l_replace_rate_4
               END IF
            END IF
            
            #----------------------
            #部分取替代
            IF l_bmea.bmea016 = '1' THEN
                  #从替换角度看，能替换的量=所有的需备料的量=未发量 * 替换率 * 替代上限比率
                  LET l_max_qty = p_no_issue_2 * l_replace_rate_4 * l_bmea.bmea017/100
                  
                  #计算库存可发量=库存量-在捡量-本作业上已占用的量
                  #本作业上已占用的量
                  #                        料件           特征            库             储
                  CALL asfp310_get_has_qty(l_inag.inag001,l_inag.inag002,l_inag.inag004,l_inag.inag005,
                  #                        批             库存管理特征    库存单位        本笔发料量
                                           l_inag.inag006,l_inag.inag003,l_inag.inag007,0)
                     RETURNING l_has_qty
                  LET l_can_qty = l_inag.inag008 - l_inan010 - l_has_qty
                 
                  #将未发量转换成库存单位的量
                  LET g_no_issue_2= g_no_issue_2 * l_replace_rate_4
                  
                  #计算l_issue_qty_4发料量
                  IF g_no_issue_2 > l_can_qty THEN #未发数量 > 库存量
                     LET l_issue_qty_4 = l_can_qty  #发料量
                  ELSE
                     LET l_issue_qty_4 = g_no_issue_2  #发料量
                  END IF
                  IF l_issue_qty_4 > l_max_qty THEN
                     LET l_issue_qty_4 = l_max_qty
                  END IF
                  LET g_no_issue_2 = g_no_issue_2 - l_issue_qty_4  #剩余未发量
                  
                  #将未发量再转换回备料单位的量
                  LET g_no_issue_2= g_no_issue_2 / l_replace_rate_4
            END IF
         ELSE
            LET l_issue_qty_4 = 0
         END IF
         
         #汇总备料库存可用量g_inag008_2,在捡量g_inan010_2
         LET g_issue_qty_2= g_issue_qty_2 + l_issue_qty_4 / l_replace_rate_4
         LET g_inag008_2  = g_inag008_2 + l_inag.inag008 / l_replace_rate_4
         LET g_inan010_2  = g_inan010_2 + l_inan010 / l_replace_rate_4

         #                        顺序           项次            项序           取替代特性      料件编号
         INSERT INTO asfp310_bmea(seq_1         ,seq_2         ,seq1_2        ,bmea007_4     ,bmea008_4     ,
         #                        替代率         替代方式        替代上限比率     库位           储位
                                  replace_rate_4,bmea016_4     ,bmea017_4     ,inag004_4     ,inag005_4     ,
         #                        批号           库存管理特征    单位            现有库存数量    库存在捡量
                                  inag006_4     ,inag003_4     ,inag007_4     ,inag008_4     ,inan010_4     ,
         #                        发料量
                                  issue_qty_4)
           VALUES(p_seq           ,p_sfbaseq     ,p_sfbaseq1     ,l_bmea.bmea007,l_bmea.bmea008,
                  l_replace_rate_4,l_bmea.bmea016,l_bmea.bmea017 ,l_inag.inag004,l_inag.inag005,
                  l_inag.inag006  ,l_inag.inag003,l_inag.inag007 ,l_inag.inag008,l_inan010,
                  l_issue_qty_4)
         IF SQLCA.sqlcode THEN
            CALL cl_err("ins asfp310_bmea",SQLCA.sqlcode,1)
            LET r_success = FALSE
            EXIT FOREACH
         END IF
         LET l_inan010 = 0
         
      END FOREACH
      IF NOT r_success THEN
         EXIT FOREACH
      END IF
      #取替代料单身--获取取替代料的库存信息--end
   END FOREACH
   #取替代料单身--获取取替代料--end
         
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asfp310_ins_table_inag" order="6" ver="3" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#产生asfp310_inag
#主要用料库存单身--获取工单备料的库存信息
PRIVATE FUNCTION asfp310_ins_table_inag(p_seq,p_sfbaseq,p_sfbaseq1,p_sfba006,p_sfba021,p_sfba014,p_imaf053,p_imaf054)
DEFINE p_seq            LIKE type_t.num5     #顺序
DEFINE p_sfbaseq        LIKE sfba_t.sfbaseq  #项次
DEFINE p_sfbaseq1       LIKE sfba_t.sfbaseq1 #项序
DEFINE p_sfba006        LIKE sfba_t.sfba006  #元件料号
DEFINE p_sfba021        LIKE sfba_t.sfba021  #产品特征
DEFINE p_sfba014        LIKE sfba_t.sfba014  #单位
DEFINE p_imaf053        LIKE imaf_t.imaf053  #据点库存单位
DEFINE p_imaf054        LIKE imaf_t.imaf054  #库存多单位
DEFINE r_success        LIKE type_t.num5
DEFINE l_inag           RECORD LIKE inag_t.*
DEFINE l_inan010        LIKE inan_t.inan010  #在捡量
DEFINE l_issue_qty_3    LIKE inan_t.inan010  #发料量
DEFINE l_rate           LIKE sfdd_t.sfdd002  #库存单位对备料单位的换算率，目的备料单位
DEFINE l_success        LIKE type_t.num5
DEFINE l_sql            STRING
DEFINE l_can_qty        LIKE inan_t.inan010  #可发量
DEFINE l_has_qty        LIKE inan_t.inan010  #本单据已占用的量

   LET r_success = TRUE
   
   #--库存页签单身游标定义
   LET l_sql = " SELECT inag_t.*,inan010 ",
               " FROM inag_t LEFT OUTER JOIN inan_t ON inagent = inanent AND inagsite= inansite AND inag001 = inan001 AND inag002 = inan002 AND inag003 = inan003 AND inag004 = inan004 AND inag005 = inan005 AND inag006 = inan006 AND inag007 = inan007 ",
               "  WHERE inagent = ",g_enterprise,
               "    AND inagsite='",g_site,"' ",
               "    AND inag001 ='",p_sfba006,"' ",  #料件
               "    AND inag002 ='",p_sfba021,"' ",  #产品特征
               "    AND (inag019 = 'N' OR inag019 IS NULL) " #未留置的
   IF p_imaf054 = 'N' THEN  #不做多单位管理，只能从据点库存单位中出货
      LET l_sql = l_sql CLIPPED," AND inag007 = '",p_imaf053,"' "
   ELSE   #做库存单位管理，出货只能从单据指定单位出
      LET l_sql = l_sql CLIPPED," AND inag007 = '",p_sfba014,"' "
   END IF
   PREPARE asfp310_ins_table_p31 FROM l_sql
   DECLARE asfp310_ins_table_c31 CURSOR FOR asfp310_ins_table_p31
   FOREACH asfp310_ins_table_c31 INTO l_inag.*,l_inan010
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF

      IF cl_null(l_inan010) THEN LET l_inan010 = 0 END IF
      
      #计算l_issue_qty_3发料量
      IF g_need_issue='Y' THEN  #需要分配数量
         #计算库存可发量=库存量-在捡量-本作业上已占用的量
         #本作业上已占用的量
         #                        料件           特征            库             储
         CALL asfp310_get_has_qty(l_inag.inag001,l_inag.inag002,l_inag.inag004,l_inag.inag005,
         #                        批             库存管理特征    库存单位        本笔发料量
                                  l_inag.inag006,l_inag.inag003,l_inag.inag007,0)
            RETURNING l_has_qty
         LET l_can_qty = l_inag.inag008 - l_inan010 - l_has_qty
      
         #将未发量转换成库存单位的量
         IF l_inag.inag007 = p_sfba014 THEN  #库存单位=备料单位
            LET l_rate = 1
         ELSE
            CALL s_aimi190_get_convert(p_sfba006,p_sfba014,l_inag.inag007) RETURNING l_success,l_rate
            IF NOT l_success THEN
               #LET l_rate = 1
               LET r_success = FALSE
               EXIT FOREACH
            END IF
         END IF
         LET g_no_issue_2= g_no_issue_2 * l_rate
      
         IF g_no_issue_2 > l_can_qty THEN #未发数量 > 库存量
            LET l_issue_qty_3 = l_can_qty  #发料量
            LET g_no_issue_2 = g_no_issue_2 - l_can_qty  #剩余未发量
         ELSE
            LET l_issue_qty_3 = g_no_issue_2  #发料量
            LET g_no_issue_2 = 0  #剩余未发量
         END IF
         
         #将未发量再转换回备料单位的量
         LET g_no_issue_2= g_no_issue_2 / l_rate
      ELSE
         LET l_issue_qty_3 = 0
      END IF
      
      #汇总备料：g_issue_qty_2发料量,库存可用量g_inag008_2,在捡量g_inan010_2
      IF l_inag.inag007 = p_sfba014 THEN  #库存单位=备料单位
         LET g_issue_qty_2= g_issue_qty_2 + l_issue_qty_3
         LET g_inag008_2  = g_inag008_2 + l_inag.inag008
         LET g_inan010_2  = g_inan010_2 + l_inan010
      ELSE
         CALL s_aimi190_get_convert(p_sfba006,l_inag.inag007,p_sfba014) RETURNING l_success,l_rate
         IF NOT l_success THEN
            #LET l_rate = 1
            LET r_success = FALSE
            EXIT FOREACH
         END IF
         LET g_issue_qty_2= g_issue_qty_2 + l_issue_qty_3 * l_rate
         LET g_inag008_2  = g_inag008_2 + l_inag.inag008 * l_rate
         LET g_inan010_2  = g_inan010_2 + l_inan010 * l_rate
      END IF
         
      #                        顺序         项次          项序         库位          储位
      INSERT INTO asfp310_inag(seq_1       ,seq_2       ,seq1_2      ,inag004_3   ,inag005_3   ,
      #                        批号         库存管理特征   单位         现有库存数量  库存在捡量
                               inag006_3   ,inag003_3   ,inag007_3   ,inag008_3   ,inan010_3   ,
      #                        发料量
                               issue_qty_3)
        VALUES(p_seq         ,p_sfbaseq     ,p_sfbaseq1     ,l_inag.inag004,l_inag.inag005,
               l_inag.inag006,l_inag.inag003,l_inag.inag007 ,l_inag.inag008,l_inan010,
               l_issue_qty_3)
      IF SQLCA.sqlcode THEN
         CALL cl_err("ins asfp310_inag",SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      LET l_inan010 = 0
      
   END FOREACH

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asfp310_b_fill" order="7" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#画面显示
PRIVATE FUNCTION asfp310_b_fill()
   CALL asfp310_b_fill_sfaa()
   CALL asfp310_b_fill_sfba()
   CALL asfp310_b_fill_inag()
   CALL asfp310_b_fill_bmea()
END FUNCTION]]>
  </point>
  <point name="function.asfp310_b_fill_sfaa" order="8" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#sfaa填充
PRIVATE FUNCTION asfp310_b_fill_sfaa()
DEFINE l_sfaa057   LIKE sfaa_t.sfaa057
DEFINE l_success   LIKE type_t.num5

   CALL g_sfaa_d.clear()

   LET g_sql = "SELECT 'N',lock_1,seq_1,sfaadocno_1,sfaa010_1,'','',sfaa019_1,sfaa020_1,sfaa017_1,'',sfaa002_1,'',sfba003_1,sfba004_1,sfaa012_1,sfaa049_1,has_sets_1 ", #,can_sets_1 ",
               "  FROM asfp310_sfaa",
               " ORDER BY seq_1 "
   PREPARE b_fill_sfaa_p FROM g_sql
   DECLARE b_fill_sfaa_c CURSOR FOR b_fill_sfaa_p
   LET l_ac_sfaa = 1
   FOREACH b_fill_sfaa_c INTO g_sfaa_d[l_ac_sfaa].*
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      CALL s_desc_get_item_desc(g_sfaa_d[l_ac_sfaa].sfaa010_1) RETURNING g_sfaa_d[l_ac_sfaa].sfaa010_imaal003_1,g_sfaa_d[l_ac_sfaa].sfaa010_imaal004_1

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_sfaa_d[l_ac_sfaa].sfaa002_1
      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      LET g_sfaa_d[l_ac_sfaa].sfaa002_desc_1 = '', g_rtn_fields[1] , ''

      SELECT sfaa057 INTO l_sfaa057 FROM sfaa_t
       WHERE sfaaent   = g_enterprise
         AND sfaadocno = g_sfaa_d[l_ac_sfaa].sfaadocno_1
      IF l_sfaa057 = '2' THEN
         INITIALIZE g_chkparam.* TO NULL
         LET g_chkparam.arg1 = g_sfaa_d[l_ac_sfaa].sfaa017_1
         CALL cl_ref_val("v_pmaal004")
         LET g_sfaa_d[l_ac_sfaa].sfaa017_desc_1 = g_chkparam.return1
      ELSE
         CALL s_desc_get_department_desc(g_sfaa_d[l_ac_sfaa].sfaa017_1) RETURNING g_sfaa_d[l_ac_sfaa].sfaa017_desc_1
      END IF
      
      #可齐料套数
      CALL asfp310_full_sets(g_sfaa_d[l_ac_sfaa].sfaadocno_1,g_sfaa_d[l_ac_sfaa].sfba003_1,g_sfaa_d[l_ac_sfaa].sfba004_1)
           RETURNING l_success,g_sfaa_d[l_ac_sfaa].can_sets_1
      LET g_sfaa_d[l_ac_sfaa].can_sets_1 = g_sfaa_d[l_ac_sfaa].can_sets_1 - g_sfaa_d[l_ac_sfaa].has_sets_1

      LET l_ac_sfaa = l_ac_sfaa + 1
      IF l_ac_sfaa > g_max_rec THEN
         CALL cl_err( '', 9035, 0 )
         EXIT FOREACH
      END IF
   END FOREACH
   CALL g_sfaa_d.deleteElement(l_ac_sfaa)
   LET g_rec_b_sfaa = l_ac_sfaa - 1
   LET l_ac_sfaa = 1
   FREE b_fill_sfaa_p
END FUNCTION]]>
  </point>
  <point name="function.asfp310_b_fill_sfba" order="9" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#sfba填充
PRIVATE FUNCTION asfp310_b_fill_sfba()
   CALL g_sfba_d.clear()
   
   IF cl_null(l_ac_sfaa) OR l_ac_sfaa = 0 THEN
      RETURN
   END IF

   LET g_sql = "SELECT seq_2,seq1_2,sfba002_2,sfba003_2,sfba004_2,sfba006_2,'','',sfba021_2,'','',sfba014_2,sfba013_2,sfba016_2,no_issue_2,issue_qty_2,inag008_2,inan010_2 ",
               "  FROM asfp310_sfba",
               " WHERE seq_1=?",
               " ORDER BY seq_2,seq1_2 "
   PREPARE b_fill_sfba_p FROM g_sql
   DECLARE b_fill_sfba_c CURSOR FOR b_fill_sfba_p
   OPEN b_fill_sfba_c USING g_sfaa_d[l_ac_sfaa].seq_1
   LET l_ac_sfba = 1
   FOREACH b_fill_sfba_c INTO g_sfba_d[l_ac_sfba].*
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

      CALL s_desc_get_item_desc(g_sfba_d[l_ac_sfba].sfba006_2) RETURNING g_sfba_d[l_ac_sfba].sfba006_imaal003_2,g_sfba_d[l_ac_sfba].sfba006_imaal004_2 
      
      #保税料
      SELECT imaf034 INTO g_sfba_d[l_ac_sfba].imaf034_2
        FROM imaf_t
       WHERE imafent = g_enterprise
         AND imafsite= g_site
         AND imaf001 = g_sfba_d[l_ac_sfba].sfba006_2
      
      #发料前调拨
      SELECT imae092 INTO g_sfba_d[l_ac_sfba].imae092_2 FROM imae_t
       WHERE imaeent = g_enterprise
         AND imaesite= g_site
         AND imae001 = g_sfba_d[l_ac_sfba].sfba006_2

      LET l_ac_sfba = l_ac_sfba + 1
      IF l_ac_sfba > g_max_rec THEN
         CALL cl_err( '', 9035, 0 )
         EXIT FOREACH
      END IF
   END FOREACH
   CALL g_sfba_d.deleteElement(l_ac_sfba)
   LET g_rec_b_sfba = l_ac_sfba - 1
   LET l_ac_sfba = 1
   FREE b_fill_sfba_p
END FUNCTION]]>
  </point>
  <point name="function.asfp310_b_fill_inag" order="10" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#inag填充
PRIVATE FUNCTION asfp310_b_fill_inag()
   CALL g_inag_d.clear()
   
   IF cl_null(l_ac_sfaa) OR l_ac_sfaa = 0 THEN
      RETURN
   END IF
   IF cl_null(l_ac_sfba) OR l_ac_sfba = 0 THEN
      RETURN
   END IF

   LET g_sql = "SELECT inag004_3,inag005_3,inag006_3,inag003_3,inag007_3,inag008_3,inan010_3,0,issue_qty_3 ",
               "  FROM asfp310_inag",
               " WHERE seq_1=? AND seq_2=? AND seq1_2=?",
               " ORDER BY inag004_3,inag005_3,inag006_3,inag003_3,inag007_3 "
   PREPARE b_fill_inag_p FROM g_sql
   DECLARE b_fill_inag_c CURSOR FOR b_fill_inag_p
   OPEN b_fill_inag_c USING g_sfaa_d[l_ac_sfaa].seq_1,g_sfba_d[l_ac_sfba].seq_2,g_sfba_d[l_ac_sfba].seq1_2
   LET l_ac_inag = 1
   FOREACH b_fill_inag_c INTO g_inag_d[l_ac_inag].*
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

      #其他工单分配量
      #                        料件                          特征
      CALL asfp310_get_has_qty(g_sfba_d[l_ac_sfba].sfba006_2,g_sfba_d[l_ac_sfba].sfba021_2,
      #                        库                            储
                               g_inag_d[l_ac_inag].inag004_3,g_inag_d[l_ac_inag].inag005_3,
      #                        批                            库存管理特征
                               g_inag_d[l_ac_inag].inag006_3,g_inag_d[l_ac_inag].inag003_3,
      #                        库存单位                       本笔发料量
                               g_inag_d[l_ac_inag].inag007_3,g_inag_d[l_ac_inag].issue_qty_3)
         RETURNING g_inag_d[l_ac_inag].has_qty_3

      LET l_ac_inag = l_ac_inag + 1
      IF l_ac_inag > g_max_rec THEN
         CALL cl_err( '', 9035, 0 )
         EXIT FOREACH
      END IF
   END FOREACH
   CALL g_inag_d.deleteElement(l_ac_inag)
   LET g_rec_b_inag = l_ac_inag - 1
   LET l_ac_inag = 1
   FREE b_fill_inag_p
END FUNCTION]]>
  </point>
  <point name="function.asfp310_get_has_qty" order="11" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#获得其他工单分配量
#此作业内，其他笔资料占用此库存的数量
PRIVATE FUNCTION asfp310_get_has_qty(p_inag001,p_inag002,p_inag004,p_inag005,p_inag006,p_inag003,p_inag007,p_issue_qty)
DEFINE p_inag001  LIKE inag_t.inag001  #料件编号
DEFINE p_inag002  LIKE inag_t.inag002  #产品特征
DEFINE p_inag004  LIKE inag_t.inag004  #库位编号
DEFINE p_inag005  LIKE inag_t.inag005  #储位编号
DEFINE p_inag006  LIKE inag_t.inag006  #批号
DEFINE p_inag003  LIKE inag_t.inag003  #库存管理特征
DEFINE p_inag007  LIKE inag_t.inag007  #库存单位
DEFINE p_issue_qty LIKE inag_t.inag008  #当笔发料量
DEFINE r_qty      LIKE inag_t.inag008  #
DEFINE l_qty      LIKE inag_t.inag008

   LET r_qty = 0
   
   IF cl_null(p_inag002) THEN LET p_inag002 = ' ' END IF #特征
   IF cl_null(p_inag004) THEN LET p_inag004 = ' ' END IF #库位 
   IF cl_null(p_inag005) THEN LET p_inag005 = ' ' END IF #储位
   IF cl_null(p_inag006) THEN LET p_inag006 = ' ' END IF #批号
   IF cl_null(p_inag003) THEN LET p_inag003 = ' ' END IF #库存管理特征
   
   #计算inag
   SELECT SUM(issue_qty_3) INTO l_qty
     FROM asfp310_inag,asfp310_sfba
    WHERE asfp310_inag.seq_1 = asfp310_sfba.seq_1
      AND asfp310_inag.seq_2 = asfp310_sfba.seq_2
      AND asfp310_inag.seq1_2 = asfp310_sfba.seq1_2
      AND asfp310_sfba.sfba006_2 = p_inag001  #料
      AND asfp310_sfba.sfba021_2 = p_inag002  #特征
      AND asfp310_inag.inag004_3 = p_inag004  #库位 
      AND asfp310_inag.inag005_3 = p_inag005  #储位
      AND asfp310_inag.inag006_3 = p_inag006  #批号
      AND asfp310_inag.inag003_3 = p_inag003  #库存管理特征
      AND asfp310_inag.inag007_3 = p_inag007  #库存单位
   IF cl_null(l_qty) THEN LET l_qty = 0 END IF
   LET r_qty = r_qty + l_qty
   
   #计算bmea
   SELECT SUM(issue_qty_4) INTO l_qty
     FROM asfp310_bmea,asfp310_sfba
    WHERE asfp310_bmea.seq_1 = asfp310_sfba.seq_1
      AND asfp310_bmea.seq_2 = asfp310_sfba.seq_2
      AND asfp310_bmea.seq1_2 = asfp310_sfba.seq1_2
      AND asfp310_bmea.bmea008_4 = p_inag001  #料
      AND asfp310_sfba.sfba021_2 = p_inag002  #特征
      AND asfp310_bmea.inag004_4 = p_inag004  #库位 
      AND asfp310_bmea.inag005_4 = p_inag005  #储位
      AND asfp310_bmea.inag006_4 = p_inag006  #批号
      AND asfp310_bmea.inag003_4 = p_inag003  #库存管理特征
      AND asfp310_bmea.inag007_4 = p_inag007  #库存单位
   IF cl_null(l_qty) THEN LET l_qty = 0 END IF
   LET r_qty = r_qty + l_qty
   
   LET r_qty = r_qty - p_issue_qty  #减去本笔发料量 为其他已发量

   RETURN r_qty
END FUNCTION]]>
  </point>
  <point name="function.asfp310_b_fill_bmea" order="12" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#bmea填充
PRIVATE FUNCTION asfp310_b_fill_bmea()
   CALL g_bmea_d.clear()
   
   IF cl_null(l_ac_sfaa) OR l_ac_sfaa = 0 THEN
      RETURN
   END IF
   IF cl_null(l_ac_sfba) OR l_ac_sfba = 0 THEN
      RETURN
   END IF

   LET g_sql = "SELECT bmea007_4,bmea008_4,'','',replace_rate_4,bmea016_4,bmea017_4,inag004_4,inag005_4,inag006_4,inag003_4,inag007_4,inag008_4,inan010_4,0,issue_qty_4 ",
               "  FROM asfp310_bmea",
               " WHERE seq_1=? AND seq_2=? AND seq1_2=?",
               " ORDER BY bmea007_4,bmea008_4,inag004_4,inag005_4,inag006_4,inag003_4,inag007_4 "
   PREPARE b_fill_bmea_p FROM g_sql
   DECLARE b_fill_bmea_c CURSOR FOR b_fill_bmea_p
   OPEN b_fill_bmea_c USING g_sfaa_d[l_ac_sfaa].seq_1,g_sfba_d[l_ac_sfba].seq_2,g_sfba_d[l_ac_sfba].seq1_2
   LET l_ac_bmea = 1
   FOREACH b_fill_bmea_c INTO g_bmea_d[l_ac_bmea].*
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

      #料件品名、规格
      CALL s_desc_get_item_desc(g_bmea_d[l_ac_bmea].bmea008_4) RETURNING g_bmea_d[l_ac_bmea].bmea008_imaal003_4,g_bmea_d[l_ac_bmea].bmea008_imaal004_4
      
      #其他工单分配量
      #                        料件                          特征
      CALL asfp310_get_has_qty(g_bmea_d[l_ac_bmea].bmea008_4,g_sfba_d[l_ac_sfba].sfba021_2,
      #                        库                            储
                               g_bmea_d[l_ac_bmea].inag004_4,g_bmea_d[l_ac_bmea].inag005_4,
      #                        批                            库存管理特征
                               g_bmea_d[l_ac_bmea].inag006_4,g_bmea_d[l_ac_bmea].inag003_4,
      #                        库存单位                       本笔发料量
                               g_bmea_d[l_ac_bmea].inag007_4,g_bmea_d[l_ac_bmea].issue_qty_4)
         RETURNING g_bmea_d[l_ac_bmea].has_qty_4

      LET l_ac_bmea = l_ac_bmea + 1
      IF l_ac_bmea > g_max_rec THEN
         CALL cl_err( '', 9035, 0 )
         EXIT FOREACH
      END IF
   END FOREACH
   CALL g_bmea_d.deleteElement(l_ac_bmea)
   LET g_rec_b_bmea = l_ac_bmea - 1
   LET l_ac_bmea = 1
   FREE b_fill_bmea_p
END FUNCTION]]>
  </point>
  <point name="function.asfp310_gen_asft310" order="13" ver="3" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#产生发料单
PRIVATE FUNCTION asfp310_gen_asft310()
DEFINE l_cnt     LIKE type_t.num5
DEFINE l_i       LIKE type_t.num5

   IF g_rec_b_sfaa = 0 THEN
      #无可产生的数据，请先选择数据
      CALL cl_err('','asf-00242',1)
      RETURN
   END IF

   ##插入需处理的资料，同时检查是否有选择产生资料
   #检查是否有选择产生资料
   LET l_cnt = 0
   FOR l_i = 1 TO g_rec_b_sfaa
       IF g_sfaa_d[l_i].sel_1 = 'Y' THEN
          LET l_cnt = l_cnt + 1
          EXIT FOR
       END IF
   END FOR
   IF l_cnt = 0 THEN
      #无可产生的数据，请先选择数据
      CALL cl_err('','asf-00242',1)
      RETURN
   END IF

   #IF NOT cl_ask_confirm('asf-00211') THEN
   #   RETURN
   #END IF
   
   CALL asfp310_01(g_sfaa_d)

END FUNCTION]]>
  </point>
  <point name="function.asfp310_set_entry" order="14" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asfp310_set_entry()
DEFINE p_cmd   LIKE type_t.chr1

   CALL cl_set_comp_entry("sfba004",TRUE)  #作业序

END FUNCTION]]>
  </point>
  <point name="function.asfp310_set_no_entry" order="15" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asfp310_set_no_entry()
DEFINE p_cmd   LIKE type_t.chr1

   IF cl_null(g_master.sfba003) THEN
      CALL cl_set_comp_entry("sfba004",FALSE)  #作业序
   END IF
END FUNCTION]]>
  </point>
  <point name="function.asfp310_sfaadocno_1_def" order="16" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#预设工单信息
PRIVATE FUNCTION asfp310_sfaadocno_1_def()
DEFINE r_success     LIKE type_t.num5
DEFINE l_sfaa        RECORD LIKE sfaa_t.*
DEFINE l_has_sets_1  LIKE sfaa_t.sfaa049  #已发齐套数
DEFINE l_can_sets_1  LIKE sfaa_t.sfaa049  #可齐料套数

   LET r_success = TRUE
   
   SELECT * INTO l_sfaa.* FROM sfaa_t
    WHERE sfaaent   = g_enterprise
      AND sfaadocno = g_sfaa_d[l_ac_sfaa].sfaadocno_1
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_sfaa_d[l_ac_sfaa].sfaadocno_1,SQLCA.sqlcode,1)
      LET r_success  = FALSE
      RETURN r_success
   END IF
         
   LET g_sfaa_d[l_ac_sfaa].sfaa010_1 = l_sfaa.sfaa010  #生产料号
   LET g_sfaa_d[l_ac_sfaa].sfaa019_1 = l_sfaa.sfaa019  #预计开工日
   LET g_sfaa_d[l_ac_sfaa].sfaa020_1 = l_sfaa.sfaa020  #预计完工日
   LET g_sfaa_d[l_ac_sfaa].sfaa017_1 = l_sfaa.sfaa017  #部门厂商
   LET g_sfaa_d[l_ac_sfaa].sfaa002_1 = l_sfaa.sfaa002  #生管员
   LET g_sfaa_d[l_ac_sfaa].sfba003_1 = g_master.sfba003      #作业编号
   LET g_sfaa_d[l_ac_sfaa].sfba004_1 = g_master.sfba004      #作业序
   LET g_sfaa_d[l_ac_sfaa].sfaa012_1 = l_sfaa.sfaa012  #生产数量
   LET g_sfaa_d[l_ac_sfaa].sfaa049_1 = l_sfaa.sfaa049  #已发套数
   
   #已发齐套数
   CALL s_asft340_full_sets(g_sfaa_d[l_ac_sfaa].sfaadocno_1,g_sfaa_d[l_ac_sfaa].sfba003_1,g_sfaa_d[l_ac_sfaa].sfba004_1,'')
        RETURNING r_success,l_has_sets_1
   IF NOT r_success THEN
      RETURN r_success
   END IF
   
   #可齐料套数  计算发料单中只要未作废的算出齐套，再减去上面的已发齐套数l_has_sets_1
   CALL asfp310_full_sets(g_sfaa_d[l_ac_sfaa].sfaadocno_1,g_sfaa_d[l_ac_sfaa].sfba003_1,g_sfaa_d[l_ac_sfaa].sfba004_1)
        RETURNING r_success,l_can_sets_1
   IF NOT r_success THEN
      RETURN r_success
   END IF
   LET l_can_sets_1 = l_can_sets_1 - l_has_sets_1
   
   LET g_sfaa_d[l_ac_sfaa].has_sets_1= l_has_sets_1    #已发齐套数
   LET g_sfaa_d[l_ac_sfaa].can_sets_1= l_can_sets_1    #可齐料套数

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asfp310_set_no_entry_sfaa" order="17" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asfp310_set_no_entry_sfaa(p_cmd)
   DEFINE p_cmd    LIKE type_t.chr1
   
   IF cl_null(g_sfaa_d[l_ac_sfaa].sfba003_1) THEN
      CALL cl_set_comp_entry("sfba004_1",FALSE)  #作业序
   END IF
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("sfaadocno_1,sfba003_1,sfba004_1",FALSE)  #作业序 zll这块测试没通过，原因为lib没写好
   END IF
END FUNCTION]]>
  </point>
  <point name="function.asfp310_ins_table" order="18" ver="3" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#根据条件产生新的资料，同时进行分配
PRIVATE FUNCTION asfp310_ins_table()
DEFINE l_cnt    LIKE type_t.num5
   
   SELECT COUNT(*) INTO l_cnt FROM asfp310_sfaa
   IF l_cnt > 0 THEN
      #是否确定重新查询？
      IF NOT cl_ask_confirm('asf-00234') THEN
         RETURN
      END IF
   #ELSE
   #   #是否确定查询？
   #   IF NOT cl_ask_confirm('asf-00241') THEN
   #      RETURN
   #   END IF
   END IF
   CALL s_transaction_begin()

   #删除旧有资料
   DELETE FROM asfp310_sfaa
   IF SQLCA.sqlcode THEN
      CALL cl_err('del asfp310_sfaa',SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   DELETE FROM asfp310_sfba
   IF SQLCA.sqlcode THEN
      CALL cl_err('del asfp310_sfba',SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   DELETE FROM asfp310_inag
   IF SQLCA.sqlcode THEN
      CALL cl_err('del asfp310_inag',SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   DELETE FROM asfp310_bmea
   IF SQLCA.sqlcode THEN
      CALL cl_err('del asfp310_bmea',SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   #根据条件产生新的资料，同时进行分配
   IF NOT asfp310_ins_table_sfaa() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   CALL s_transaction_end('Y','0')
   
   #资料显示
   CALL asfp310_b_fill()
END FUNCTION]]>
  </point>
  <point name="function.asfp310_full_sets" order="19" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[# 工单可齐料套数计算：目前工单已经发料的部分+本作业界面上的发料量
PRIVATE FUNCTION asfp310_full_sets(p_sfaadocno,p_sfba003,p_sfba004)
   DEFINE p_sfaadocno          LIKE sfaa_t.sfaadocno  #工单单号
   DEFINE p_sfba003            LIKE sfba_t.sfba003    #作业编号
   DEFINE p_sfba004            LIKE sfba_t.sfba004    #作业序
   DEFINE r_success            LIKE type_t.num5       #处理状态 TRUE/FALSE
   DEFINE r_sets               LIKE type_t.num26_10   #工单齐料套数
   DEFINE l_sfaa012            LIKE sfaa_t.sfaa012                   #工单生产数量
   DEFINE l_sql                STRING
   DEFINE l_sfdd               RECORD LIKE sfdd_t.*
   DEFINE l_sfdc               RECORD LIKE sfdc_t.*
   DEFINE l_sfba               RECORD LIKE sfba_t.*
   DEFINE l_sfba2              RECORD LIKE sfba_t.*   #取替代备料
   DEFINE l_sfda002            LIKE sfda_t.sfda002
   DEFINE l_flag               LIKE type_t.chr1       #是否需要管控套数  工单备料有无参与计算齐料套数的备料
   DEFINE l_sfba013_tot        LIKE sfba_t.sfba013    #汇总实际发料数量
   DEFINE l_sfba013_rep        LIKE sfba_t.sfba013    #替代料 实际发料数量
   DEFINE l_sfba013            LIKE sfba_t.sfba013    #单笔发料数量 折算成项序为0的量
   DEFINE l_success            LIKE type_t.num5
   DEFINE l_min_sets           LIKE type_t.num26_10   #最小套数
   DEFINE l_sets               LIKE type_t.num26_10   #单项套数
   DEFINE l_rate               LIKE inaj_t.inaj014    #单位转换率
 
   WHENEVER ERROR CONTINUE

   LET r_success = FALSE
   LET r_sets = 0
   IF cl_null(p_sfaadocno) THEN
      RETURN r_success,r_sets
   END IF

   #工单生产数量
   SELECT sfaa012 INTO l_sfaa012 FROM sfaa_t
    WHERE sfaaent   = g_enterprise
      AND sfaadocno = p_sfaadocno
   IF SQLCA.sqlcode THEN
      CALL cl_err('',SQLCA.sqlcode,1)
      RETURN r_success,r_sets
   END IF

   #仅找出项序为0的备料资料
   LET l_sql = " SELECT sfba_t.* ",
               "  FROM sfaa_t,sfba_t ",
               " WHERE sfaaent   = sfbaent ",
               "   AND sfaasite  = sfbasite ",
               "   AND sfaadocno = sfbadocno ",
               "   AND sfaaent   = ",g_enterprise,
               "   AND sfaasite  = '",g_site,"'",
               "   AND sfaadocno = '",p_sfaadocno,"'",
               "   AND (sfba008  = '1' OR sfba008 = '2' )",    #1.主要材料  2.次要材料
               "   AND sfba009   = 'N' ",                      #倒扣料='N'
               "   AND sfbaseq1  = 0 ",                        #项次为0
               "   AND sfba023+sfba024-sfba015 > 0 ",          #总应发量-代买量>0
               " ORDER BY sfbaseq "
   #作业编号
   IF NOT cl_null(p_sfba003) THEN
      LET l_sql = l_sql CLIPPED," AND sfba003 = '",p_sfba003,"'"
   END IF
   #制程序
   IF NOT cl_null(p_sfba004) THEN
      LET l_sql = l_sql CLIPPED," AND sfba004 = '",p_sfba004,"'"
   END IF
   PREPARE asfp310_full_sets_2_p1 FROM l_sql
   IF SQLCA.sqlcode THEN
      CALL cl_err('asfp310_full_sets_2_p1',SQLCA.sqlcode,1)
      RETURN r_success,r_sets
   END IF
   DECLARE asfp310_full_sets_2_cs1 CURSOR FOR asfp310_full_sets_2_p1
   IF SQLCA.sqlcode THEN
      CALL cl_err('asfp310_full_sets_2_cs1',SQLCA.sqlcode,1)
      RETURN r_success,r_sets
   END IF
   LET l_flag = 'N'   #不需要管控套数
   FOREACH asfp310_full_sets_2_cs1 INTO l_sfba.*
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach asfp310_full_sets_2_cs1',SQLCA.sqlcode,1)
         RETURN r_success,r_sets
      END IF

      LET l_flag = 'Y'   #有需要管控套数

      LET l_sfba013_tot = 0  #汇总实际发料数量
      
      #----------------计算原始备料的可发汇-----------------------
      #委外代买数量算成已发料 BY SA
      #汇总实际发料数量 = 汇总实际发料数量 + 工单原始备料代买量 + 工单原始备料已发量
      LET l_sfba013_tot = l_sfba013_tot + l_sfba.sfba015 + l_sfba.sfba016

      #本作业中的发料量
      SELECT issue_qty_2 INTO l_sfba013
        FROM asfp310_sfba,asfp310_sfaa
       WHERE asfp310_sfba.seq_1       = asfp310_sfaa.seq_1
         AND asfp310_sfaa.sfaadocno_1 = l_sfba.sfbadocno #工单单号
         AND asfp310_sfba.seq_2       = l_sfba.sfbaseq   #项次
         AND asfp310_sfba.seq1_2      = l_sfba.sfbaseq1  #项序
      IF cl_null(l_sfba013) THEN LET l_sfba013 = 0 END IF
      #汇总实际发料数量  = 汇总实际发料数量 + 此作业中的原始备料的发料量
      LET l_sfba013_tot = l_sfba013_tot + l_sfba013
      
      #----------------计算替代料的可发汇总,暂存为变量l_sfba013_rep-----------------------
      LET l_sql = " SELECT sfba_t.* ",
                  "  FROM sfaa_t,sfba_t ",
                  " WHERE sfaaent   = sfbaent ",
                  "   AND sfaasite  = sfbasite ",
                  "   AND sfaadocno = sfbadocno ",
                  "   AND sfaaent   = ",g_enterprise,
                  "   AND sfaasite  = '",g_site,"'",
                  "   AND sfaadocno = '",p_sfaadocno,"'",
                  "   AND sfbaseq   = ",l_sfba.sfbaseq,
                  "   AND sfbaseq1  > 0 ",                        #项次不为0 表示取替代料
                  " ORDER BY sfbaseq1 "
      #传入日期值不空时,找的发退料过帐日期不可大于此日期值
      PREPARE asfp310_full_sets_2_p3 FROM l_sql
      IF SQLCA.sqlcode THEN
         CALL cl_err('asfp310_full_sets_2_p3',SQLCA.sqlcode,1)
         RETURN r_success
      END IF
      DECLARE asfp310_full_sets_2_cs3 CURSOR FOR asfp310_full_sets_2_p3
      IF SQLCA.sqlcode THEN
         CALL cl_err('asfp310_full_sets_2_cs3',SQLCA.sqlcode,1)
         RETURN r_success
      END IF
      #开始计算当笔原始备料，总被取替代的量=工单中被取替代料的已发量 + 此作业中被取替代料的发料量
      LET l_sfba013_rep = 0
      FOREACH asfp310_full_sets_2_cs3 INTO l_sfba2.*
         IF SQLCA.sqlcode THEN
            CALL cl_err('foreach asfp310_full_sets_2_cs2',SQLCA.sqlcode,1)
            RETURN r_success,r_sets
         END IF

         #总被取替代的量    = 总被取替代的量 + （代买量 + 已发量）/ 替代率
         LET l_sfba013_rep = l_sfba013_rep + (l_sfba.sfba015 + l_sfba.sfba016)/ l_sfba.sfba022

         #本作业中的发料量
         SELECT issue_qty_2 INTO l_sfba013
           FROM asfp310_sfba,asfp310_sfaa
          WHERE asfp310_sfba.seq_1       = asfp310_sfaa.seq_1
            AND asfp310_sfaa.sfaadocno_1 = l_sfba2.sfbadocno #工单单号
            AND asfp310_sfba.seq_2       = l_sfba2.sfbaseq   #项次
            AND asfp310_sfba.seq1_2      = l_sfba2.sfbaseq1  #项序
         IF cl_null(l_sfba013) THEN LET l_sfba013 = 0 END IF
         #汇总实际发料数量  = 汇总实际发料数量 + 此作业中的原始备料的发料量
         LET l_sfba013_rep = l_sfba013_rep + l_sfba013

      END FOREACH

      #汇总实际发料数量  = 汇总实际发料数量 + 被取替代的量（工单中被取替代料的已发量+此作业中被取替代料的发料量）
      LET l_sfba013_tot = l_sfba013_tot + l_sfba013_rep

      #单项足套数=(SUM(已发数量*替代率) / 项序0的标准QPA分子 * 项序0的标准QPA分母 WHERE 相同工单+项次)/(100-项序0的允许误差率)*100
      LET l_sets = (l_sfba013_tot  / l_sfba.sfba010 * l_sfba.sfba011 ) / (100 - l_sfba.sfba012) * 100

      IF cl_null(l_min_sets) OR l_min_sets > l_sets THEN
         LET l_min_sets = l_sets
      END IF

   END FOREACH

   #若工单无备料,或是工单备料均是事后扣帐或备料均为非主要材料,次要材料时,不卡控套数,直接赋生产数量
   IF l_flag = 'N' THEN
      LET l_min_sets = l_sfaa012
   ELSE
      #若算出的套数>生产数量,则套数置为生产数量
      IF l_min_sets > l_sfaa012 THEN
         LET l_min_sets = l_sfaa012
      END IF
   END IF
   LET r_sets = l_min_sets

   LET r_success = TRUE
   RETURN r_success,r_sets
   
END FUNCTION]]>
  </point>
  <point name="function.asfp310_set_entry_sfaa" order="20" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asfp310_set_entry_sfaa(p_cmd)
   DEFINE p_cmd    LIKE type_t.chr1
   
   IF p_cmd != 'u' THEN
      CALL cl_set_comp_entry("sfaadocno_1,sfba003_1,sfba004_1",TRUE)  #工单、作业、作业序
   END IF
END FUNCTION]]>
  </point>
  <point name="function.asfp310_sel_all" order="21" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asfp310_sel_all(p_flag)
   DEFINE p_flag         LIKE type_t.chr1
   DEFINE l_i            LIKE type_t.num5

   FOR l_i = 1 TO g_rec_b_sfaa
       LET g_sfaa_d[l_i].sel_1 = p_flag
   END FOR

END FUNCTION]]>
  </point>
  <point name="function.asfp310_adjust" order="22" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asfp310_adjust(p_flag,p_item,p_inag004,p_inag005,p_inag006,p_inag003,p_inag007,p_can_qty)
DEFINE p_flag     LIKE type_t.chr1     #+：将差异量按优先顺序加到下一张   -：将差异量按优先顺序，从最后的开始扣
DEFINE p_item     LIKE sfba_t.sfba006  #料
DEFINE p_inag004  LIKE inag_t.inag004  #仓
DEFINE p_inag005  LIKE inag_t.inag005  #储
DEFINE p_inag006  LIKE inag_t.inag006  #批
DEFINE p_inag003  LIKE inag_t.inag003  #库存管理特征
DEFINE p_inag007  LIKE inag_t.inag007  #单位
DEFINE p_can_qty  LIKE inan_t.inan010  #调整量 对发料在仓储批库存管理特征单位中的调整的量
DEFINE r_success  LIKE type_t.num5
DEFINE r_qty      LIKE inan_t.inan010  #调整掉的量
DEFINE l_qty      LIKE inan_t.inan010  #未备料的量
DEFINE l_qty2     LIKE inan_t.inan010 
DEFINE l_rate     LIKE sfdd_t.sfdd002
DEFINE l_type            LIKE type_t.chr10
DEFINE l_seq_1           LIKE type_t.num5
DEFINE l_seq_2           LIKE sfba_t.sfbaseq
DEFINE l_seq1_2          LIKE sfba_t.sfbaseq1
DEFINE l_no_issue_2      LIKE inan_t.inan010
DEFINE l_issue_qty_2     LIKE inan_t.inan010
DEFINE l_sfba006         LIKE sfba_t.sfba006
DEFINE l_sfba014         LIKE sfba_t.sfba014
DEFINE l_inag007         LIKE inag_t.inag007
DEFINE l_issue_qty       LIKE inan_t.inan010
DEFINE l_replace_rate_4  LIKE sfdd_t.sfdd002
DEFINE l_bmea007         LIKE bmea_t.bmea007
DEFINE l_bmea008         LIKE bmea_t.bmea008
DEFINE l_bmea016         LIKE bmea_t.bmea016
DEFINE l_bmea017         LIKE bmea_t.bmea017
DEFINE l_max_qty         LIKE inan_t.inan010 #最大可被取替代量
DEFINE l_sql      STRING
DEFINE l_success  LIKE type_t.num5
DEFINE l_cnt      LIKE type_t.num5

   LET r_success = TRUE
   LET r_qty = 0
   
   #########################################################
   #+：将差异量按优先顺序加到下一张
   #########################################################
   IF p_flag = '+' THEN
      #找到下一张需要分配的资料
      LET l_sql = " SELECT 'inag',asfp310_sfba.seq_1,asfp310_sfba.seq_2,asfp310_sfba.seq1_2, ",
                  "        asfp310_sfba.no_issue_2,asfp310_sfba.issue_qty_2, ",
                  "        asfp310_sfba.sfba006_2,asfp310_sfba.sfba014_2, ",
                  "        asfp310_inag.inag007_3,asfp310_inag.issue_qty_3, ",
                  "        1,'','','0',0 ",
                  "   FROM asfp310_sfba,asfp310_inag ",
                  "  WHERE asfp310_sfba.seq_1 = asfp310_inag.seq_1 ",
                  "    AND asfp310_sfba.seq_2 = asfp310_inag.seq_2 ",
                  "    AND asfp310_sfba.seq1_2 = asfp310_inag.seq1_2 ",
                  "    AND asfp310_sfba.seq_1 > ",g_sfaa_d[l_ac_sfaa].seq_1 ,        #优先顺序再其之后的
                  "    AND asfp310_sfba.no_issue_2 > asfp310_sfba.issue_qty_2 ",     #未发完的
                  "    AND asfp310_sfba.sfba006_2 = '",p_item,"'",     #料
                  "    AND asfp310_inag.inag004_3 = '",p_inag004,"'",  #仓
                  "    AND asfp310_inag.inag005_3 = '",p_inag005,"'",  #储
                  "    AND asfp310_inag.inag006_3 = '",p_inag006,"'",  #批
                  "    AND asfp310_inag.inag003_3 = '",p_inag003,"'",  #库存管理特征
                  "    AND asfp310_inag.inag007_3 = '",p_inag007,"'",  #单位
                  " UNION ",
                  " SELECT 'bmea',asfp310_sfba.seq_1,asfp310_sfba.seq_2,asfp310_sfba.seq1_2, ",
                  "        asfp310_sfba.no_issue_2,asfp310_sfba.issue_qty_2, ",
                  "        asfp310_sfba.sfba006_2,asfp310_sfba.sfba014_2, ",
                  "        asfp310_bmea.inag007_4,asfp310_bmea.issue_qty_4, ",
                  "        asfp310_bmea.replace_rate_4,asfp310_bmea.bmea007_4,asfp310_bmea.bmea008_4,asfp310_bmea.bmea016_4,asfp310_bmea.bmea017_4 ",
                  "   FROM asfp310_sfba,asfp310_bmea ",
                  "  WHERE asfp310_sfba.seq_1 = asfp310_bmea.seq_1 ",
                  "    AND asfp310_sfba.seq_2 = asfp310_bmea.seq_2 ",
                  "    AND asfp310_sfba.seq1_2 = asfp310_bmea.seq1_2 ",
                  "    AND asfp310_sfba.seq_1 > ",g_sfaa_d[l_ac_sfaa].seq_1,         #优先顺序再其之后的
                  "    AND asfp310_sfba.no_issue_2 > asfp310_sfba.issue_qty_2 ",     #未发完的
                  "    AND asfp310_bmea.bmea008_4 = '",p_item,"' ",     #料
                  "    AND asfp310_bmea.inag004_4 = '",p_inag004,"' ",  #仓
                  "    AND asfp310_bmea.inag005_4 = '",p_inag005,"' ",  #储
                  "    AND asfp310_bmea.inag006_4 = '",p_inag006,"' ",  #批
                  "    AND asfp310_bmea.inag003_4 = '",p_inag003,"' ",  #库存管理特征
                  "    AND asfp310_bmea.inag007_4 = '",p_inag007,"' ",  #单位
                  "  ORDER BY asfp310_sfba.seq_1 "
      PREPARE asfp310_adjust_p1 FROM l_sql
      DECLARE asfp310_adjust_c1 CURSOR FOR asfp310_adjust_p1
      FOREACH asfp310_adjust_c1 INTO l_type,l_seq_1,l_seq_2,l_seq1_2,
                                     l_no_issue_2,l_issue_qty_2,
                                     l_sfba006,l_sfba014,
                                     l_inag007,l_issue_qty,
                                     l_replace_rate_4,l_bmea007,l_bmea008,l_bmea016,l_bmea017
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            LET r_success = FALSE
            RETURN r_success,r_qty
         END IF
         #------------------------------------
         IF l_type = 'inag' THEN
            LET l_qty = l_no_issue_2 - l_issue_qty_2  #未备料的量=未发量-发料量
            #将未备料量转换成库存单位的量
            IF l_inag007 = l_sfba014 THEN  #库存单位=备料单位
               LET l_rate = 1
            ELSE
               CALL s_aimi190_get_convert(l_sfba006,l_sfba014,l_inag007) RETURNING l_success,l_rate
               IF NOT l_success THEN
                  LET l_rate = 1
               END IF
            END IF
            LET l_qty= l_qty * l_rate
            
            IF l_qty > p_can_qty THEN #未备料量 > 调整
               LET l_qty2 = p_can_qty  #调整的量
            ELSE
               LET l_qty2 = l_qty  #调整的量
            END IF
            LET l_issue_qty = l_issue_qty + l_qty2     #发料量
            LET p_can_qty = p_can_qty - l_qty2         #剩余调整量
            LET r_qty = r_qty + l_qty2   #总调整的量
            
            UPDATE asfp310_inag SET issue_qty_3 = l_issue_qty 
             WHERE seq_1     = l_seq_1
               AND seq_2     = l_seq_2
               AND seq1_2    = l_seq1_2
               AND inag004_3 = p_inag004
               AND inag005_3 = p_inag005
               AND inag006_3 = p_inag006
               AND inag003_3 = p_inag003
               AND inag007_3 = p_inag007
            IF SQLCA.sqlcode THEN
               CALL cl_err('upd asfp310_inag',SQLCA.sqlcode,1)
               LET r_success = FALSE
               RETURN r_success,r_qty
            END IF
            
            #将调整的量转换回备料单位的量
            LET l_qty2 = l_qty2 / l_rate
            UPDATE asfp310_sfba SET issue_qty_2 = issue_qty_2 + l_qty2
             WHERE seq_1     = l_seq_1
               AND seq_2     = l_seq_2
               AND seq1_2    = l_seq1_2
            IF SQLCA.sqlcode THEN
               CALL cl_err('upd asfp310_sfba',SQLCA.sqlcode,1)
               LET r_success = FALSE
               RETURN r_success,r_qty
            END IF

            IF p_can_qty = 0 THEN  #剩余调整的量=0 代表分配完毕
               EXIT FOREACH
            END IF            
         END IF
         
         #-------------------------------------
         IF l_type = 'bmea' THEN
            #完全取替代 计算能替换的量
            IF l_bmea016 = '2' THEN
               #检查是否有被其他料取替代
               SELECT COUNT(*) INTO l_cnt FROM asfp310_bmea
                WHERE seq_1     = l_seq_1
                  AND seq_2     = l_seq_2
                  AND seq1_2    = l_seq1_2
                  AND issue_qty_4 > 0
                  #AND (bmea007_4,bmea008_4,inag004_4,inag005_4,inag006_4,inag003_4,inag007_4) NOT IN
                  #    (select bmea007_4,bmea008_4,inag004_4,inag005_4,inag006_4,inag003_4,inag007_4
                  #       from asfp310_bmea
                  #      where seq_1     = l_seq_1
                  #        and seq_2     = l_seq_2
                  #        and seq1_2    = l_seq1_2
                  #        and bmea007_4 = l_bmea007
                  #        and bmea008_4 = l_bmea008
                  #        and inag004_4 = p_inag004
                  #        and inag005_4 = p_inag005
                  #        and inag006_4 = p_inag006
                  #        and inag003_4 = p_inag003
                  #        and inag007_4 = p_inag007
                  #    )
                  AND NOT EXISTS
                      (select bmea007_4,bmea008_4,inag004_4,inag005_4,inag006_4,inag003_4,inag007_4
                         from asfp310_bmea
                        where seq_1     = l_seq_1
                          and seq_2     = l_seq_2
                          and seq1_2    = l_seq1_2
                          and bmea007_4 = l_bmea007
                          and bmea008_4 = l_bmea008
                          and inag004_4 = p_inag004
                          and inag005_4 = p_inag005
                          and inag006_4 = p_inag006
                          and inag003_4 = p_inag003
                          and inag007_4 = p_inag007)
               IF l_cnt > 0 THEN
                  CONTINUE FOREACH
               END IF
               #从替换角度看，能替换的量=所有的需备料的量=未发量 * 替换率
               LET l_max_qty = l_no_issue_2 * l_replace_rate_4
            END IF
            #部分取替代 计算能替换的量
            IF l_bmea016 = '1' THEN
               #从替换角度看，能替换的量=未发量 * 替换率 * 替代上限比率
               LET l_max_qty = l_no_issue_2 * l_replace_rate_4 * l_bmea017/100
            END IF

            LET l_qty = l_no_issue_2 - l_issue_qty_2  #未备料的量=未发量-发料量
            LET l_qty = l_qty * l_replace_rate_4  #将未备料量转换成库存单位的量

            IF l_qty > p_can_qty THEN #未备料量 > 剩余调整量
               LET l_qty2 = p_can_qty  #调整的量  
            ELSE
               LET l_qty2 = l_qty      #调整的量
            END IF     
            #调整后的发料量 不能超过 可替换的量 
            IF l_issue_qty + l_qty2 >  l_max_qty THEN
               LET l_qty2 = l_max_qty - l_issue_qty
            END IF       
            LET l_issue_qty = l_issue_qty + l_qty2  #发料量
            LET p_can_qty = p_can_qty - l_qty2  #剩余调整量
            LET r_qty = r_qty + l_qty2   #总调整的量
            
            UPDATE asfp310_bmea SET issue_qty_4 = l_issue_qty 
             WHERE seq_1     = l_seq_1
               AND seq_2     = l_seq_2
               AND seq1_2    = l_seq1_2
               AND bmea007_4 = l_bmea007
               AND bmea008_4 = l_bmea008
               AND inag004_4 = p_inag004
               AND inag005_4 = p_inag005
               AND inag006_4 = p_inag006
               AND inag003_4 = p_inag003
               AND inag007_4 = p_inag007
            IF SQLCA.sqlcode THEN
               CALL cl_err('upd asfp310_bmea',SQLCA.sqlcode,1)
               LET r_success = FALSE
               RETURN r_success,r_qty
            END IF
            
            #将调整的量转换回备料单位的量
            LET l_qty2 = l_qty2 / l_replace_rate_4
            UPDATE asfp310_sfba SET issue_qty_2 = issue_qty_2 + l_qty2
             WHERE seq_1     = l_seq_1
               AND seq_2     = l_seq_2
               AND seq1_2    = l_seq1_2
            IF SQLCA.sqlcode THEN
               CALL cl_err('upd asfp310_sfba',SQLCA.sqlcode,1)
               LET r_success = FALSE
               RETURN r_success,r_qty
            END IF
               
            IF p_can_qty = 0 THEN  #剩余调整的量=0 代表分配完毕
               EXIT FOREACH
            END IF  
         END IF
      END FOREACH
      
   END IF
   

   #########################################################
   #-：将差异量按优先顺序，从最后的开始扣
   #########################################################
   IF p_flag = '-' THEN
      #找到最后一张需要扣减的资料
      LET l_sql = " SELECT 'inag',asfp310_sfba.seq_1,asfp310_sfba.seq_2,asfp310_sfba.seq1_2, ",
                  "        asfp310_sfba.no_issue_2,asfp310_sfba.issue_qty_2, ",
                  "        asfp310_sfba.sfba006_2,asfp310_sfba.sfba014_2, ",
                  "        asfp310_inag.inag007_3,asfp310_inag.issue_qty_3, ",
                  "        1,'','','0',0 ",
                  "   FROM asfp310_sfba,asfp310_inag ",
                  "  WHERE asfp310_sfba.seq_1 = asfp310_inag.seq_1 ",
                  "    AND asfp310_sfba.seq_2 = asfp310_inag.seq_2 ",
                  "    AND asfp310_sfba.seq1_2 = asfp310_inag.seq1_2 ",
                  "    AND asfp310_sfba.seq_1 > ",g_sfaa_d[l_ac_sfaa].seq_1 ,        #优先顺序再其之后的
                  "    AND asfp310_sfba.sfba006_2 = '",p_item,"'",     #料
                  "    AND asfp310_inag.inag004_3 = '",p_inag004,"'",  #仓
                  "    AND asfp310_inag.inag005_3 = '",p_inag005,"'",  #储
                  "    AND asfp310_inag.inag006_3 = '",p_inag006,"'",  #批
                  "    AND asfp310_inag.inag003_3 = '",p_inag003,"'",  #库存管理特征
                  "    AND asfp310_inag.inag007_3 = '",p_inag007,"'",  #单位
                  "    AND asfp310_inag.issue_qty_3 > 0 ",   #有发过料的
                  " UNION ",
                  " SELECT 'bmea',asfp310_sfba.seq_1,asfp310_sfba.seq_2,asfp310_sfba.seq1_2, ",
                  "        asfp310_sfba.no_issue_2,asfp310_sfba.issue_qty_2, ",
                  "        asfp310_sfba.sfba006_2,asfp310_sfba.sfba014_2, ",
                  "        asfp310_bmea.inag007_4,asfp310_bmea.issue_qty_4, ",
                  "        asfp310_bmea.replace_rate_4,asfp310_bmea.bmea007_4,asfp310_bmea.bmea008_4,asfp310_bmea.bmea016_4,asfp310_bmea.bmea017_4 ",
                  "   FROM asfp310_sfba,asfp310_bmea ",
                  "  WHERE asfp310_sfba.seq_1 = asfp310_bmea.seq_1 ",
                  "    AND asfp310_sfba.seq_2 = asfp310_bmea.seq_2 ",
                  "    AND asfp310_sfba.seq1_2 = asfp310_bmea.seq1_2 ",
                  "    AND asfp310_sfba.seq_1 > ",g_sfaa_d[l_ac_sfaa].seq_1,         #优先顺序再其之后的
                  "    AND asfp310_bmea.bmea008_4 = '",p_item,"' ",     #料
                  "    AND asfp310_bmea.inag004_4 = '",p_inag004,"' ",  #仓
                  "    AND asfp310_bmea.inag005_4 = '",p_inag005,"' ",  #储
                  "    AND asfp310_bmea.inag006_4 = '",p_inag006,"' ",  #批
                  "    AND asfp310_bmea.inag003_4 = '",p_inag003,"' ",  #库存管理特征
                  "    AND asfp310_bmea.inag007_4 = '",p_inag007,"' ",  #单位
                  "    AND asfp310_bmea.issue_qty_4 > 0 ",   #有发过料的
                  "  ORDER BY asfp310_sfba.seq_1 DESC "
      PREPARE asfp310_adjust_p2 FROM l_sql
      DECLARE asfp310_adjust_c2 CURSOR FOR asfp310_adjust_p2
      FOREACH asfp310_adjust_c2 INTO l_type,l_seq_1,l_seq_2,l_seq1_2,
                                     l_no_issue_2,l_issue_qty_2,
                                     l_sfba006,l_sfba014,
                                     l_inag007,l_issue_qty,
                                     l_replace_rate_4,l_bmea007,l_bmea008,l_bmea016,l_bmea017
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            LET r_success = FALSE
            RETURN r_success,r_qty
         END IF
         
         IF l_issue_qty > p_can_qty THEN  #发料量>剩余调整的量
            LET l_qty2 = p_can_qty    #本笔调整的量
         ELSE
            LET l_qty2 = l_issue_qty  #本笔调整的量
         END IF
         LET l_issue_qty = l_issue_qty - l_qty2 #发料量
         LET p_can_qty = p_can_qty - l_qty2 #剩余调整的量
         LET r_qty = r_qty + l_qty2   #总调整的量
         #-------------------------------------
         IF l_type = 'inag' THEN
            UPDATE asfp310_inag SET issue_qty_3 = l_issue_qty 
             WHERE seq_1     = l_seq_1
               AND seq_2     = l_seq_2
               AND seq1_2    = l_seq1_2
               AND inag004_3 = p_inag004
               AND inag005_3 = p_inag005
               AND inag006_3 = p_inag006
               AND inag003_3 = p_inag003
               AND inag007_3 = p_inag007
            IF SQLCA.sqlcode THEN
               CALL cl_err('upd asfp310_inag',SQLCA.sqlcode,1)
               LET r_success = FALSE
               RETURN r_success,r_qty
            END IF
            
            #将调整的量转换回备料单位的量
            IF l_inag007 = l_sfba014 THEN  #库存单位=备料单位
               LET l_rate = 1
            ELSE
               CALL s_aimi190_get_convert(l_sfba006,l_sfba014,l_inag007) RETURNING l_success,l_rate
               IF NOT l_success THEN
                  LET l_rate = 1
               END IF
            END IF
            LET l_qty2 = l_qty2 / l_rate
            UPDATE asfp310_sfba SET issue_qty_2 = issue_qty_2 - l_qty2
             WHERE seq_1     = l_seq_1
               AND seq_2     = l_seq_2
               AND seq1_2    = l_seq1_2
            IF SQLCA.sqlcode THEN
               CALL cl_err('upd asfp310_sfba',SQLCA.sqlcode,1)
               LET r_success = FALSE
               RETURN r_success,r_qty
            END IF
         END IF
         
         #-------------------------------------
         IF l_type = 'bmea' THEN
            UPDATE asfp310_bmea SET issue_qty_4 = l_issue_qty 
             WHERE seq_1     = l_seq_1
               AND seq_2     = l_seq_2
               AND seq1_2    = l_seq1_2
               AND bmea007_4 = l_bmea007
               AND bmea008_4 = l_bmea008
               AND inag004_4 = p_inag004
               AND inag005_4 = p_inag005
               AND inag006_4 = p_inag006
               AND inag003_4 = p_inag003
               AND inag007_4 = p_inag007
            IF SQLCA.sqlcode THEN
               CALL cl_err('upd asfp310_bmea',SQLCA.sqlcode,1)
               LET r_success = FALSE
               RETURN r_success,r_qty
            END IF
            
            #将调整的量转换回备料单位的量
            LET l_qty2 = l_qty2 / l_replace_rate_4
            UPDATE asfp310_sfba SET issue_qty_2 = issue_qty_2 - l_qty2
             WHERE seq_1     = l_seq_1
               AND seq_2     = l_seq_2
               AND seq1_2    = l_seq1_2
            IF SQLCA.sqlcode THEN
               CALL cl_err('upd asfp310_sfba',SQLCA.sqlcode,1)
               LET r_success = FALSE
               RETURN r_success,r_qty
            END IF
         END IF
         
         IF p_can_qty = 0 THEN  #剩余调整的量=0 代表扣减完毕
            EXIT FOREACH
         END IF 
      END FOREACH
      IF p_can_qty > 0 THEN  #剩余调整的量>0 表示超出可调整的数量范围
         #库存数量不足，不可超过可发数量r_qty(扣掉低优先级的发料量+未分配的库存量)
         LET r_qty = r_qty + g_un_qty
         CALL cl_err_msg('','asf-00250',r_qty,1)
         LET r_success = FALSE
         RETURN r_success,r_qty
      END IF
   END IF

   RETURN r_success,r_qty
END FUNCTION]]>
  </point>
  <point name="function.asfp310_drop_table" order="23" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asfp310_drop_table()
   WHENEVER ERROR CONTINUE

   #检查事务中
   IF NOT s_transaction_chk('N',1) THEN
      RETURN
   END IF


   #基本资料单身-上
   DROP TABLE asfp310_sfaa;


   #基本资料单身-下
   DROP TABLE asfp310_sfba;

   #主要用料库存页签
   DROP TABLE asfp310_inag;


   #取替代料页签
   DROP TABLE asfp310_bmea;

END FUNCTION]]>
  </point>
  <point name="function.asfp310_get_issue_qty2" order="24" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#汇总备料发料量
PRIVATE FUNCTION asfp310_get_issue_qty2(p_type)
DEFINE p_type           LIKE type_t.chr10
DEFINE r_issue_qty_2    LIKE sfba_t.sfba016  #总备料发料量 
DEFINE l_inag007_3      LIKE inag_t.inag007
DEFINE l_issue_qty_3    LIKE sfba_t.sfba016
DEFINE l_rate           LIKE sfdd_t.sfdd002
DEFINE l_replace_rate_4 LIKE sfdd_t.sfdd002
DEFINE l_issue_qty_4    LIKE sfba_t.sfba016
DEFINE l_sql            STRING
DEFINE l_success        LIKE type_t.num5
                  
   LET r_issue_qty_2 = 0

   #inag
   LET l_sql = " SELECT inag007_3,issue_qty_3 FROM asfp310_inag ",
               "  WHERE seq_1 = ",g_sfaa_d[l_ac_sfaa].seq_1, #顺序
               "    AND seq_2 = ",g_sfba_d[l_ac_sfba].seq_2, #项次
               "    AND seq1_2= ",g_sfba_d[l_ac_sfba].seq1_2 #项序
   PREPARE asfp310_get_issue_qty2_p1 FROM l_sql
   DECLARE asfp310_get_issue_qty2_c1 CURSOR FOR asfp310_get_issue_qty2_p1
   FOREACH asfp310_get_issue_qty2_c1 INTO l_inag007_3,l_issue_qty_3
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         RETURN r_issue_qty_2
      END IF
                  
      IF l_inag007_3 = g_sfba_d[l_ac_sfba].sfba014_2 THEN  #库存单位=备料单位
         LET r_issue_qty_2 = r_issue_qty_2 + l_issue_qty_3
      ELSE
         CALL s_aimi190_get_convert(g_sfba_d[l_ac_sfba].sfba006_2,l_inag007_3,g_sfba_d[l_ac_sfba].sfba014_2) RETURNING l_success,l_rate
         IF NOT l_success THEN
            LET l_rate = 1
         END IF
         LET r_issue_qty_2 = r_issue_qty_2 + l_issue_qty_3 * l_rate
      END IF
   END FOREACH
                  
   #bmea
   LET l_sql = " SELECT replace_rate_4,issue_qty_4 FROM asfp310_bmea ",
               "  WHERE seq_1 = ",g_sfaa_d[l_ac_sfaa].seq_1, #顺序
               "    AND seq_2 = ",g_sfba_d[l_ac_sfba].seq_2, #项次
               "    AND seq1_2= ",g_sfba_d[l_ac_sfba].seq1_2 #项序
   PREPARE asfp310_get_issue_qty2_p2 FROM l_sql
   DECLARE asfp310_get_issue_qty2_c2 CURSOR FOR asfp310_get_issue_qty2_p2
   FOREACH asfp310_get_issue_qty2_c2 INTO l_replace_rate_4,l_issue_qty_4
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         RETURN r_issue_qty_2
      END IF
   
      LET r_issue_qty_2 = r_issue_qty_2 + l_issue_qty_4 / l_replace_rate_4
   END FOREACH
                  
   #-旧值+新值
   CASE p_type
      WHEN 'inag'
           IF g_inag_d[l_ac_inag].inag007_3 = g_sfba_d[l_ac_sfba].sfba014_2 THEN  #库存单位=备料单位
              LET r_issue_qty_2 = r_issue_qty_2 - g_inag_d_t.issue_qty_3 + g_inag_d[l_ac_inag].issue_qty_3
           ELSE
              CALL s_aimi190_get_convert(g_sfba_d[l_ac_sfba].sfba006_2,g_inag_d[l_ac_inag].inag007_3,g_sfba_d[l_ac_sfba].sfba014_2) RETURNING l_success,l_rate
              IF NOT l_success THEN
                 LET l_rate = 1
              END IF
              LET r_issue_qty_2 = r_issue_qty_2 - g_inag_d_t.issue_qty_3 * l_rate
                                                + g_inag_d[l_ac_inag].issue_qty_3 * l_rate
           END IF
      WHEN 'bmea'
           LET r_issue_qty_2= r_issue_qty_2 - g_bmea_d_t.issue_qty_4 / l_replace_rate_4
                                            + g_bmea_d[l_ac_bmea].issue_qty_4 / l_replace_rate_4
   END CASE
   
   RETURN r_issue_qty_2
END FUNCTION]]>
  </point>
  <point name="function.asfp310_get_bmba010" order="25" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#根据备料档资料，获取bom中的单位
PRIVATE FUNCTION asfp310_get_bmba010(p_sfba001,p_sfaa011,p_sfba006,p_sfba002,p_sfba003,p_sfba004)
DEFINE p_sfba001        LIKE sfba_t.sfba001  #备料档的上阶料号
DEFINE p_sfaa011        LIKE sfaa_t.sfaa011  #特性
DEFINE p_sfba006        LIKE sfba_t.sfba006  #元件料号
DEFINE p_sfba002        LIKE sfba_t.sfba002  #部位
DEFINE p_sfba003        LIKE sfba_t.sfba003  #作业编号
DEFINE p_sfba004        LIKE sfba_t.sfba004  #作业序
DEFINE r_success        LIKE type_t.num5
DEFINE r_bmba010        LIKE bmba_t.bmba010  #bom元件单位

   LET r_success = TRUE

   SELECT UNIQUE bmba010 INTO r_bmba010 FROM bmba_t  #bom元件单位
    WHERE bmbaent = g_enterprise  #l_bmea.bmeaent 
      AND bmbasite= g_site        #l_bmea.bmeasite
      AND bmba001 = p_sfba001     #l_bmea.bmea001   #主件料號
      AND bmba002 = p_sfaa011     #l_bmea.bmea002   #特性
      AND bmba003 = p_sfba006     #l_bmea.bmea003   #元件料號
      AND bmba004 = p_sfba002     #l_bmea.bmea004   #部位
      AND bmba007 = p_sfba003     #l_bmea.bmea005   #作業
      AND bmba008 = p_sfba004     #l_bmea.bmea006   #作業序
   #zll 仍然觉得bmea中关键字不设生效日期不合理
   IF SQLCA.sqlcode THEN
      IF SQLCA.sqlcode = 100 THEN
         #没选择到  zll部位作业序有否再做关联
         SELECT UNIQUE bmba010 INTO r_bmba010 FROM bmba_t  #bom元件单位
          WHERE bmbaent = g_enterprise  #l_bmea.bmeaent 
            AND bmbasite= g_site        #l_bmea.bmeasite
            AND bmba001 = p_sfba001     #l_bmea.bmea001   #主件料號
            AND bmba002 = p_sfaa011     #l_bmea.bmea002   #特性
            AND bmba003 = p_sfba006     #l_bmea.bmea003   #元件料號
            --AND bmba004 = p_sfba002     #l_bmea.bmea004   #部位
            --AND bmba007 = p_sfba003     #l_bmea.bmea005   #作業
            --AND bmba008 = p_sfba004     #l_bmea.bmea006   #作業序
         IF SQLCA.sqlcode THEN
            CALL cl_err('sel bmba',SQLCA.sqlcode,1)
            LET r_success = FALSE
            RETURN r_success,r_bmba010
         END IF
      ELSE
         #选择到多笔
         SELECT UNIQUE bmba010 INTO r_bmba010 FROM bmba_t  #bom元件单位
          WHERE bmbaent = g_enterprise #l_bmea.bmeaent 
            AND bmbasite= g_site       #l_bmea.bmeasite
            AND bmba001 = p_sfba001    #l_bmea.bmea001   #主件料號
            AND bmba002 = p_sfaa011    #l_bmea.bmea002   #特性
            AND bmba003 = p_sfba006    #l_bmea.bmea003   #元件料號
            AND bmba004 = p_sfba002    #l_bmea.bmea004   #部位
            AND bmba007 = p_sfba003    #l_bmea.bmea005   #作業
            AND bmba008 = p_sfba004    #l_bmea.bmea006   #作業序
            AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss')<= g_today_dt
            AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss')> g_today_dt OR to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') IS NULL )
         IF SQLCA.sqlcode THEN
            CALL cl_err('sel bmba',SQLCA.sqlcode,1)
            LET r_success = FALSE
            RETURN r_success,r_bmba010
         END IF
      END IF
   END IF
   
   RETURN r_success,r_bmba010
END FUNCTION]]>
  </point>
  <point name="construct.c.inag004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inag004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inag004  #顯示到畫面上
            NEXT FIELD inag004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inag005" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inag005_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inag005  #顯示到畫面上
            NEXT FIELD inag005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.sfaa002" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfaa002  #顯示到畫面上
            NEXT FIELD sfaa002                     #返回原欄位]]>
  </point>
  <point name="construct.c.sfaa010" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001_10()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfaa010  #顯示到畫面上
            NEXT FIELD sfaa010                     #返回原欄位
]]>
  </point>
  <point name="construct.c.sfaa017" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_ooeg001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfaa017  #顯示到畫面上
            NEXT FIELD sfaa017                     #返回原欄位
]]>
  </point>
  <point name="construct.c.sfaadocno" order="" ver="3" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfaasite ='",g_site,"' AND sfaastus='F'"
            CALL q_sfaadocno_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfaadocno  #顯示到畫面上
            NEXT FIELD sfaadocno                     #返回原欄位]]>
  </point>
  <point name="construct.c.sfba006" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfba006  #顯示到畫面上
            NEXT FIELD sfba006                     #返回原欄位
    

]]>
  </point>
  <point name="cs.other" order="" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[         ON ACTION accept
            #ACCEPT DIALOG
            CALL asfp310_ins_table()]]>
  </point>
  <point name="global.variable" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE tm            RECORD
                     #--工单范围QBE
                     wc1        STRING,  #工單範圍QBE
                     #--发料作业
                     sfba003    LIKE sfba_t.sfba003,  #作业编号
                     sfba003_desc LIKE type_t.chr80,  #作业说明
                     sfba004    LIKE sfba_t.sfba004,  #作业序
                     #--优先顺序
                     no_sets    LIKE type_t.chr1,     #优先满足已发料未齐套工单
                     priority1  LIKE type_t.chr1,     #优先顺序1
                     priority2  LIKE type_t.chr1,     #优先顺序2
                     priority3  LIKE type_t.chr1,     #优先顺序3
                     priority4  LIKE type_t.chr1,     #优先顺序4
                     can_sets   LIKE type_t.chr1,     #优可足套数者优先满足
                     # 以上部分根据架构的变更，改为g_master
                     #--仓库范围QBE
                     wc2        STRING,   #倉庫範圍QBE
                     wc3        STRING    #进阶-元件料号QBE
                     END RECORD
TYPE type_g_sfaa_d   RECORD
                     sel_1       LIKE type_t.chr1,      #选择
                     lock_1      LIKE type_t.chr1,      #锁定
                     seq_1       LIKE type_t.num5,      #顺序
                     sfaadocno_1 LIKE sfaa_t.sfaadocno, #工单单号
                     sfaa010_1   LIKE sfaa_t.sfaa010,   #生产料号
                     sfaa010_imaal003_1  LIKE imaal_t.imaal003,
                     sfaa010_imaal004_1  LIKE imaal_t.imaal004,
                     sfaa019_1   LIKE sfaa_t.sfaa019,   #预计开工日
                     sfaa020_1   LIKE sfaa_t.sfaa020,   #预计完工日
                     sfaa017_1   LIKE sfaa_t.sfaa017,   #部门厂商
                     sfaa017_desc_1      LIKE type_t.chr80,
                     sfaa002_1   LIKE sfaa_t.sfaa002,   #生管员
                     sfaa002_desc_1      LIKE type_t.chr80,
                     sfba003_1   LIKE sfba_t.sfba003,   #作业编号
                     sfba004_1   LIKE sfba_t.sfba004,   #作业序
                     sfaa012_1   LIKE sfaa_t.sfaa012,   #生产数量
                     sfaa049_1   LIKE sfaa_t.sfaa049,   #已发套数
                     has_sets_1  LIKE sfaa_t.sfaa049,   #已发齐套数
                     can_sets_1  LIKE sfaa_t.sfaa049    #可齐料套数
                     END RECORD
TYPE type_g_sfba_d   RECORD
                     seq_2       LIKE type_t.num5,      #项次
                     seq1_2      LIKE type_t.num5,      #项序
                     sfba002_2   LIKE sfba_t.sfba002,   #部位
                     sfba003_2   LIKE sfba_t.sfba003,   #作业
                     sfba004_2   LIKE sfba_t.sfba004,   #作业序
                     sfba006_2   LIKE sfba_t.sfba006,   #发料料号
                     sfba006_imaal003_2  LIKE imaal_t.imaal003,
                     sfba006_imaal004_2  LIKE imaal_t.imaal004,
                     sfba021_2   LIKE sfba_t.sfba021,   #产品特征
                     imaf034_2           LIKE imaf_t.imaf034,   #保税料
                     imae092_2           LIKE imae_t.imae092,   #发料前调拨
                     sfba014_2   LIKE sfba_t.sfba014,   #单位
                     sfba013_2   LIKE sfba_t.sfba013,   #应发数量  
                     sfba016_2   LIKE sfba_t.sfba016,   #已发数量
                     no_issue_2  LIKE sfba_t.sfba016,   #未发数量
                     issue_qty_2 LIKE sfba_t.sfba016,   #发料量
                     inag008_2   LIKE sfba_t.sfba016,   #库存可用量
                     inan010_2   LIKE sfba_t.sfba016    #在捡量
                     END RECORD
TYPE type_g_inag_d   RECORD
                     inag004_3   LIKE inag_t.inag004,   #库位
                     inag005_3   LIKE inag_t.inag005,   #储位
                     inag006_3   LIKE inag_t.inag006,   #批号
                     inag003_3   LIKE inag_t.inag003,   #库存管理特征
                     inag007_3   LIKE inag_t.inag007,   #单位
                     inag008_3   LIKE inag_t.inag008,   #现有库存数量
                     inan010_3   LIKE inan_t.inan010,   #库存在捡量
                     has_qty_3   LIKE inag_t.inag008,   #其他工单分配量
                     issue_qty_3 LIKE inag_t.inag008    #发料量
                     END RECORD
TYPE type_g_bmea_d   RECORD
                     bmea007_4   LIKE bmea_t.bmea007,   #取替代特性
                     bmea008_4   LIKE bmea_t.bmea008,   #料件编号
                     bmea008_imaal003_4  LIKE imaal_t.imaal003,
                     bmea008_imaal004_4  LIKE imaal_t.imaal004,
                     replace_rate_4 LIKE sfba_t.sfba022,   #替代率
                     bmea016_4   LIKE bmea_t.bmea016,   #替代方式
                     bmea017_4   LIKE bmea_t.bmea017,   #替代上限比率
                     inag004_4   LIKE inag_t.inag004,   #库位
                     inag005_4   LIKE inag_t.inag005,   #储位
                     inag006_4   LIKE inag_t.inag006,   #批号
                     inag003_4   LIKE inag_t.inag003,   #库存管理特征 
                     inag007_4   LIKE inag_t.inag007,   #单位
                     inag008_4   LIKE inag_t.inag008,   #现有库存数量 
                     inan010_4   LIKE inan_t.inan010,   #库存在捡量
                     has_qty_4   LIKE inag_t.inag008,   #其他工单分配量    
                     issue_qty_4 LIKE inag_t.inag008    #发料量
                     END RECORD
DEFINE g_sfaa_d      DYNAMIC ARRAY OF type_g_sfaa_d
DEFINE g_sfaa_d_t    type_g_sfaa_d
DEFINE g_sfba_d      DYNAMIC ARRAY OF type_g_sfba_d
DEFINE g_sfba_d_t    type_g_sfba_d
DEFINE g_inag_d      DYNAMIC ARRAY OF type_g_inag_d
DEFINE g_inag_d_t    type_g_inag_d
DEFINE g_bmea_d      DYNAMIC ARRAY OF type_g_bmea_d
DEFINE g_bmea_d_t    type_g_bmea_d

DEFINE l_ac_sfaa     LIKE type_t.num5
DEFINE l_ac_sfba     LIKE type_t.num5
DEFINE l_ac_inag     LIKE type_t.num5
DEFINE l_ac_bmea     LIKE type_t.num5
DEFINE g_rec_b_sfaa  LIKE type_t.num5
DEFINE g_rec_b_sfba  LIKE type_t.num5
DEFINE g_rec_b_inag  LIKE type_t.num5
DEFINE g_rec_b_bmea  LIKE type_t.num5

DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列

DEFINE la_param  RECORD
         prog   STRING,
         param  DYNAMIC ARRAY OF STRING
                END RECORD
DEFINE ls_js  STRING

DEFINE g_today_dt     LIKE ooff_t.ooff007
DEFINE g_inag008_2    LIKE inan_t.inan010  #库存可用量
DEFINE g_inan010_2    LIKE inan_t.inan010  #在捡量
DEFINE g_issue_qty_2  LIKE inan_t.inan010  #asfp310_sfba表中发料量
DEFINE g_no_issue_2   LIKE inan_t.inan010  #asfp310_sfba表中未发数量=应发-已发-代买 用于分配

DEFINE  l_allow_insert  LIKE type_t.num5                #可新增否
DEFINE  l_allow_delete  LIKE type_t.num5                #可刪除否

DEFINE g_can_sets     LIKE type_t.chr1     #需足套否（g_master.can_sets：可足套数者优先满足）
DEFINE g_need_issue   LIKE type_t.chr1     #需分配数量否

DEFINE g_un_qty        LIKE inan_t.inan010  #未分配的库存量]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE lwin_curr      ui.Window
   DEFINE lfrm_curr      ui.Form
   DEFINE ls_path        STRING
   
   DEFINE l_success      LIKE type_t.num5]]>
  </point>
  <point name="init.init" order="" ver="3" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   #LET lwin_curr = ui.Window.getCurrent()
   #LET lfrm_curr = lwin_curr.getForm()
   #LET ls_path = os.Path.join(os.Path.join(FGL_GETENV("ERP"),"cfg"),"4tb")
   #LET ls_path = os.Path.join(ls_path,"toolbar_q.4tb")
   #CALL lfrm_curr.loadToolBar(ls_path)

   CALL cl_set_combo_scc('priority1','4023')
   CALL cl_set_combo_scc('priority2','4023')
   CALL cl_set_combo_scc('priority3','4023')
   CALL cl_set_combo_scc('priority4','4023')
   CALL cl_set_combo_scc('bmea007_4','4011')  #取替代建議
   
   LET g_today_dt = cl_get_current()
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   #创建临时表，创建失败离开作业
   CALL asfp310_crt_table() RETURNING l_success
   IF NOT l_success THEN
      CLOSE WINDOW w_asfp310
      CALL cl_ap_exitprogram("0")
   END IF

   IF cl_null(g_master.no_sets) THEN LET g_master.no_sets='Y' END IF
   IF cl_null(g_master.priority1) THEN LET g_master.priority1='1' END IF
   IF cl_null(g_master.priority2) THEN LET g_master.priority2='2' END IF
   IF cl_null(g_master.priority3) THEN LET g_master.priority3='3' END IF
   IF cl_null(g_master.priority4) THEN LET g_master.priority4='4' END IF
   IF cl_null(g_master.can_sets) THEN LET g_master.can_sets='Y' END IF]]>
  </point>
  <point name="input.a.can_sets" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_master.can_sets NOT MATCHES '[NY]' THEN
               CALL cl_err('','agl-00144',1)
               NEXT FIELD CURRENT
            END IF]]>
  </point>
  <point name="input.a.no_sets" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_master.no_sets NOT MATCHES '[NY]' THEN
               CALL cl_err('','agl-00144',1)
               NEXT FIELD CURRENT
            END IF]]>
  </point>
  <point name="input.a.priority1" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_master.priority1 NOT MATCHES '[1234]' THEN
               CALL cl_err('','asf-00209',1)
               NEXT FIELD CURRENT
            END IF]]>
  </point>
  <point name="input.a.priority2" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_master.priority2 NOT MATCHES '[1234]' THEN
               CALL cl_err('','asf-00209',1)
               NEXT FIELD CURRENT
            END IF]]>
  </point>
  <point name="input.a.priority3" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_master.priority3 NOT MATCHES '[1234]' THEN
               CALL cl_err('','asf-00209',1)
               NEXT FIELD CURRENT
            END IF]]>
  </point>
  <point name="input.a.priority4" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_master.priority4 NOT MATCHES '[1234]' THEN
               CALL cl_err('','asf-00209',1)
               NEXT FIELD CURRENT
            END IF]]>
  </point>
  <point name="input.a.sfba003" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_master.sfba003) THEN
               IF NOT s_azzi650_chk_exist('221',g_master.sfba003) THEN
                  NEXT FIELD CURRENT
               ELSE
                  #作业说明
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = '221'
                  LET g_chkparam.arg2 = g_master.sfba003
                  CALL cl_ref_val("v_oocql002")
                  LET g_master.sfba003_desc = g_chkparam.return1
                  DISPLAY BY NAME g_master.sfba003_desc
               END IF
            END IF
            CALL asfp310_set_no_entry()]]>
  </point>
  <point name="input.b.sfba003" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL asfp310_set_entry()]]>
  </point>
  <point name="input.c.sfba003" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_master.sfba003
            LET g_qryparam.arg1 = "221"
            CALL q_oocq002()                                #呼叫開窗
            LET g_master.sfba003 = g_qryparam.return1     #將開窗取得的值>
            DISPLAY g_master.sfba003 TO sfba003              #
            NEXT FIELD sfba003                          #返回原欄位]]>
  </point>
  <point name="input.m.after_input" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF INT_FLAG THEN
                  EXIT DIALOG
               END IF
         
               CALL cl_showmsg()      #錯誤訊息統整顯示]]>
  </point>
  <point name="input.m.before_input" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL asfp310_set_entry()
               CALL asfp310_set_no_entry()]]>
  </point>
  <point name="input.other" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ON ACTION accept
               #ACCEPT DIALOG
               CALL asfp310_ins_table()]]>
  </point>
  <point name="main.before_close" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL asfp310_drop_table()]]>
  </point>
  <point name="process.foreground_finish" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success  LIKE type_t.num5
   DEFINE l_success_tot  LIKE type_t.num5
   DEFINE l_count    LIKE type_t.num5
   DEFINE l_cmd      LIKE type_t.chr1
DEFINE l_has_sets_1  LIKE sfaa_t.sfaa049  #已发齐套数
DEFINE l_can_sets_1  LIKE sfaa_t.sfaa049  #可齐料套数
DEFINE l_sfaa011   LIKE sfaa_t.sfaa011
DEFINE l_is_full   LIKE type_t.chr1
DEFINE l_can_qty        LIKE inan_t.inan010  #可发量
DEFINE l_issue_qty_2    LIKE inan_t.inan010  #单身汇总的备料发料量
DEFINE l_qty            LIKE inan_t.inan010
DEFINE l_i              LIKE type_t.num5]]>
  </point>
  <point name="ui_dialog.more_action" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ON ACTION gen_asft310      #产生发料单
            CALL asfp310_gen_asft310()
            
         ON ACTION redistribution   #重新分配
            CALL asfp310_redistribution()]]>
  </point>
  <point name="ui_dialog.more_construct" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         CONSTRUCT BY NAME tm.wc2 ON inag004,inag005
	      
            BEFORE CONSTRUCT

            ON ACTION controlp INFIELD inag004  #库位
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_inag004()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO inag004  #顯示到畫面上
               NEXT FIELD inag004                     #返回原欄位

            ON ACTION controlp INFIELD inag005  #储位
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.arg1 = g_site
               CALL q_inag005_3()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO inag005  #顯示到畫面上
               NEXT FIELD inag005                     #返回原欄位

            ON ACTION accept
               #ACCEPT DIALOG
               CALL asfp310_ins_table()

            #ON ACTION cancel
            #   LET INT_FLAG = 1
            #   EXIT DIALOG
         END CONSTRUCT
      
         CONSTRUCT BY NAME tm.wc3 ON sfba006
	   
            BEFORE CONSTRUCT

            ON ACTION controlp INFIELD sfba006  #元件料号
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_imaa001()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO sfba006  #顯示到畫面上
               NEXT FIELD sfba006                     #返回原欄位

            ON ACTION accept
               #ACCEPT DIALOG
               CALL asfp310_ins_table()

            #ON ACTION cancel
            #   LET INT_FLAG = 1
            #   EXIT DIALOG
         END CONSTRUCT]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         DISPLAY ARRAY g_sfba_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b_sfba) #page1
            BEFORE ROW
               LET l_ac_sfba = DIALOG.getCurrentRow("s_detail2")
               CALL asfp310_b_fill_inag()
               CALL asfp310_b_fill_bmea()

            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(l_ac_sfba)
               LET l_ac_sfba = DIALOG.getCurrentRow("s_detail2")
         END DISPLAY]]>
  </point>
  <point name="ui_dialog.more_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         INPUT ARRAY g_sfaa_d FROM s_detail1.*
             ATTRIBUTE(COUNT = g_rec_b_sfaa,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)

            BEFORE INPUT
               CALL asfp310_b_fill_sfaa()
               LET g_rec_b_sfaa = g_sfaa_d.getLength()

            BEFORE ROW
               LET l_cmd = ''
               LET l_ac_sfaa = ARR_CURR()
            
               LET g_rec_b_sfaa = g_sfaa_d.getLength()
            
               IF g_rec_b_sfaa >= l_ac_sfaa AND g_sfaa_d[l_ac_sfaa].seq_1 IS NOT NULL THEN
                  LET l_cmd='u'
                  LET g_sfaa_d_t.* = g_sfaa_d[l_ac_sfaa].*  #BACKUP
               ELSE
                  LET l_cmd='a'
               END IF
               CALL asfp310_set_entry_sfaa(l_cmd)
               CALL asfp310_set_no_entry_sfaa(l_cmd)
               CALL cl_set_comp_required("sfaa004_1",FALSE)
               CALL asfp310_b_fill_sfba()
               CALL asfp310_b_fill_inag()
               CALL asfp310_b_fill_bmea()
               
            BEFORE INSERT
               LET l_cmd = 'a'
               INITIALIZE g_sfaa_d[l_ac_sfaa].* TO NULL
               LET g_sfaa_d_t.* = g_sfaa_d[l_ac_sfaa].*     #新輸入資料
               CALL cl_show_fld_cont()
               LET g_sfaa_d[l_ac_sfaa].sel_1 = 'N'
               LET g_sfaa_d[l_ac_sfaa].lock_1= 'N'
               SELECT MAX(seq_1) INTO g_sfaa_d[l_ac_sfaa].seq_1
                 FROM asfp310_sfaa
               IF g_sfaa_d[l_ac_sfaa].seq_1 IS NULL THEN
                  LET g_sfaa_d[l_ac_sfaa].seq_1 = 0
               END IF
               LET g_sfaa_d[l_ac_sfaa].seq_1 = g_sfaa_d[l_ac_sfaa].seq_1 + 1
            
            AFTER INSERT
               IF INT_FLAG THEN
                  CALL cl_err('',9001,0)
                  LET INT_FLAG = 0
                  CANCEL INSERT
               END IF

               #单身画面能编辑的，不能合并的栏位：工单+项次+项序+参考单位+库位+储位+批号+库存管理特征+理由码 最后需合并的
               LET l_count = 1
               SELECT COUNT(*) INTO l_count FROM asfp310_sfaa
                WHERE seq_1 = g_sfaa_d[l_ac_sfaa].seq_1
               #資料未重複, 插入新增資料
               IF l_count = 0 THEN 
                  IF cl_null(g_sfaa_d[l_ac_sfaa].sfba003_1) THEN LET g_sfaa_d[l_ac_sfaa].sfba003_1 = ' ' END IF #作业
                  IF cl_null(g_sfaa_d[l_ac_sfaa].sfba004_1) THEN LET g_sfaa_d[l_ac_sfaa].sfba004_1 = ' ' END IF #作业序
                  INSERT INTO asfp310_sfaa
                              #锁定       顺序      工单单号     生产料号   预计开工日
                              (lock_1   ,seq_1    ,sfaadocno_1,sfaa010_1 ,sfaa019_1,
                              #预计完工日 部门厂商   生管员       作业编号   作业序 
                               sfaa020_1,sfaa017_1,sfaa002_1  ,sfba003_1 ,sfba004_1,
                              #生产数量   已发套数   已发齐套数   可齐料套数
                               sfaa012_1,sfaa049_1,has_sets_1)# ,can_sets_1)
                        VALUES(g_sfaa_d[l_ac_sfaa].lock_1,g_sfaa_d[l_ac_sfaa].seq_1,g_sfaa_d[l_ac_sfaa].sfaadocno_1,g_sfaa_d[l_ac_sfaa].sfaa010_1 ,g_sfaa_d[l_ac_sfaa].sfaa019_1,
                               g_sfaa_d[l_ac_sfaa].sfaa020_1,g_sfaa_d[l_ac_sfaa].sfaa017_1,g_sfaa_d[l_ac_sfaa].sfaa002_1,g_sfaa_d[l_ac_sfaa].sfba003_1,g_sfaa_d[l_ac_sfaa].sfba004_1,
                               g_sfaa_d[l_ac_sfaa].sfaa012_1,g_sfaa_d[l_ac_sfaa].sfaa049_1,g_sfaa_d[l_ac_sfaa].has_sets_1)#,g_sfaa_d[l_ac_sfaa].can_sets_1)
                  IF SQLCA.SQLcode  THEN
                     CALL cl_err("ins asfp310_sfaa",SQLCA.sqlcode,1)
                     CANCEL INSERT
                  ELSE
                     #自动插入sfba,inag,bmea
                     LET g_can_sets   = 'N'  #需足套否
                     LET g_need_issue = 'N'  #需分配数量否
                     SELECT sfaa011 INTO l_sfaa011 FROM sfaa_t
                      WHERE sfaaent  = g_enterprise
                        AND sfaadocno= g_sfaa_d[l_ac_sfaa].sfaadocno_1
                     #                           顺序                       工单单号                        作业编号                       作业序                         主件料号                      特征
                     CALL asfp310_ins_table_sfba(g_sfaa_d[l_ac_sfaa].seq_1,g_sfaa_d[l_ac_sfaa].sfaadocno_1,g_sfaa_d[l_ac_sfaa].sfba003_1,g_sfaa_d[l_ac_sfaa].sfba004_1,g_sfaa_d[l_ac_sfaa].sfaa010_1,l_sfaa011)  #产生第二单身asfp310_sfba
                        RETURNING l_success,l_is_full
                     IF NOT l_success THEN
                        CANCEL INSERT
                     ELSE
                        ERROR 'INSERT O.K'
                        LET g_rec_b_sfaa = g_rec_b_sfaa + 1
                     END IF
                                          
                  END IF
               ELSE
                  CALL cl_err('INSERT',"std-00006",1)
                  INITIALIZE g_sfaa_d[l_ac_sfaa].* TO NULL
                  CANCEL INSERT
               END IF

            BEFORE DELETE                            #是否取消單身
               IF l_cmd = 'a' THEN
                  CALL FGL_SET_ARR_CURR(l_ac_sfaa - 1)
                  CALL g_sfaa_d.deleteElement(l_ac_sfaa)
                  NEXT FIELD seq_1
               END IF

               IF g_sfaa_d[l_ac_sfaa].seq_1 IS NOT NULL THEN
                  IF NOT cl_ask_del_detail() THEN
                     CANCEL DELETE
                  END IF
               
                  DELETE FROM asfp310_sfaa
                   WHERE seq_1 = g_sfaa_d_t.seq_1
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("del asfp310_sfaa",SQLCA.sqlcode,1)
                     CANCEL DELETE
                  ELSE
                     LET l_success = TRUE
                     DELETE FROM asfp310_sfba WHERE seq_1 = g_sfaa_d_t.seq_1 
                     IF SQLCA.sqlcode THEN
                        LET l_success = FALSE
                     END IF
                     DELETE FROM asfp310_inag WHERE seq_1 = g_sfaa_d_t.seq_1 
                     IF SQLCA.sqlcode THEN
                        LET l_success = FALSE
                     END IF
                     DELETE FROM asfp310_bmea WHERE seq_1 = g_sfaa_d_t.seq_1 
                     IF SQLCA.sqlcode THEN
                        LET l_success = FALSE
                     END IF
                     IF NOT l_success THEN
                        CALL cl_err("del asfp310_sfaa",SQLCA.sqlcode,1)
                        CANCEL DELETE
                     ELSE
                        LET g_rec_b_sfaa = g_rec_b_sfaa - 1
                     END IF
                  END IF
               END IF
            
            AFTER FIELD sel_1
               IF NOT cl_null(g_sfaa_d[l_ac_sfaa].sel_1) THEN
                  IF g_sfaa_d[l_ac_sfaa].sel_1 NOT MATCHES '[YN]' THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
            AFTER FIELD lock_1
               IF NOT cl_null(g_sfaa_d[l_ac_sfaa].lock_1) THEN
                  IF g_sfaa_d[l_ac_sfaa].lock_1 NOT MATCHES '[YN]' THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
            AFTER FIELD seq_1
               IF NOT cl_null(g_sfaa_d[l_ac_sfaa].seq_1) THEN
                  IF g_sfaa_d_t.seq_1 IS NULL OR g_sfaa_d_t.seq_1 != g_sfaa_d[l_ac_sfaa].seq_1 THEN
                     SELECT COUNT(*) INTO l_count FROM asfp310_sfaa
                      WHERE seq_1 = g_sfaa_d[l_ac_sfaa].seq_1
                     IF l_count > 0 THEN
                        CALL cl_err('','std-00006',1)
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               
            AFTER FIELD sfaadocno_1
               IF NOT cl_null(g_sfaa_d[l_ac_sfaa].sfaadocno_1) THEN
                  IF g_sfaa_d_t.sfaadocno_1 IS NULL OR g_sfaa_d_t.sfaadocno_1 != g_sfaa_d[l_ac_sfaa].sfaadocno_1 THEN
                     #检查是否存在此工单，顺带预设相关资料
                     CALL asfp310_sfaadocno_1_def() RETURNING l_success
                     IF NOT l_success THEN
                        NEXT FIELD CURRENT
                     END IF
                     #检查是不是已存在于分摊列表中
                     SELECT COUNT(*) INTO l_count FROM asfp310_sfaa
                      WHERE sfaadocno_1 = g_sfaa_d[l_ac_sfaa].sfaadocno_1
                     IF l_count > 0 THEN
                        #此工单已存在于分配列表中，无需再维护
                        CALL cl_err(g_sfaa_d[l_ac_sfaa].sfaadocno_1,'asf-00223',1)
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            
            BEFORE FIELD sfba003_1
               CALL asfp310_set_entry_sfaa(l_cmd)
               CALL cl_set_comp_required("sfaa004_1",FALSE)
               
            AFTER FIELD sfba003_1
               IF NOT cl_null(g_sfaa_d[l_ac_sfaa].sfba003_1) AND NOT cl_null(g_sfaa_d[l_ac_sfaa].sfaadocno_1) THEN
                  SELECT COUNT(*) INTO l_count FROM sfba_t
                   WHERE sfbaent  = g_enterprise
                     AND sfbadocno= g_sfaa_d[l_ac_sfaa].sfaadocno_1
                     AND sfba003  = g_sfaa_d[l_ac_sfaa].sfba003_1
                  IF l_count = 0 THEN
                     #此作业编号不存在工单中，请输入正确的数据
                     CALL cl_err(g_sfaa_d[l_ac_sfaa].sfba003_1,'asf-00231',1)
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT cl_null(g_sfaa_d[l_ac_sfaa].sfba004_1) THEN
                     SELECT COUNT(*) INTO l_count FROM sfba_t
                      WHERE sfbaent  = g_enterprise
                        AND sfbadocno= g_sfaa_d[l_ac_sfaa].sfaadocno_1
                        AND sfba003  = g_sfaa_d[l_ac_sfaa].sfba003_1
                        AND sfba004  = g_sfaa_d[l_ac_sfaa].sfba004_1
                     IF l_count = 0 THEN
                        #此作业编号+作业序不存在工单中，请输入正确的数据
                        CALL cl_err(g_sfaa_d[l_ac_sfaa].sfba003_1,'asf-00232',1)
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               
               #已发齐套数
               CALL s_asft340_full_sets(g_sfaa_d[l_ac_sfaa].sfaadocno_1,g_sfaa_d[l_ac_sfaa].sfba003_1,g_sfaa_d[l_ac_sfaa].sfba004_1,'')
                    RETURNING l_success,g_sfaa_d[l_ac_sfaa].has_sets_1
               IF NOT l_success THEN
                  NEXT FIELD CURRENT
               END IF
               
               #可齐料套数
               CALL asfp310_full_sets(g_sfaa_d[l_ac_sfaa].sfaadocno_1,g_sfaa_d[l_ac_sfaa].sfba003_1,g_sfaa_d[l_ac_sfaa].sfba004_1)
                    RETURNING l_success,g_sfaa_d[l_ac_sfaa].can_sets_1
               IF NOT l_success THEN
                  NEXT FIELD CURRENT
               END IF
               LET g_sfaa_d[l_ac_sfaa].can_sets_1 = g_sfaa_d[l_ac_sfaa].can_sets_1 - g_sfaa_d[l_ac_sfaa].has_sets_1
           
               IF cl_null(g_sfaa_d[l_ac_sfaa].sfba003_1) THEN
                  LET g_sfaa_d[l_ac_sfaa].sfba003_1 = ' '
                  LET g_sfaa_d[l_ac_sfaa].sfba004_1 = ' '
               ELSE
                  CALL cl_set_comp_required("sfaa004_1",TRUE)
               END IF
               CALL asfp310_set_no_entry_sfaa(l_cmd)
            
            AFTER FIELD sfba004_1
               IF NOT cl_null(g_sfaa_d[l_ac_sfaa].sfba004_1) AND NOT cl_null(g_sfaa_d[l_ac_sfaa].sfaadocno_1) THEN
                  IF NOT cl_null(g_sfaa_d[l_ac_sfaa].sfba003_1) THEN
                     SELECT COUNT(*) INTO l_count FROM sfba_t
                      WHERE sfbaent  = g_enterprise
                        AND sfbadocno= g_sfaa_d[l_ac_sfaa].sfaadocno_1
                        AND sfba003  = g_sfaa_d[l_ac_sfaa].sfba003_1
                        AND sfba004  = g_sfaa_d[l_ac_sfaa].sfba004_1
                     IF l_count = 0 THEN
                        #此作业编号+作业序不存在工单中，请输入正确的数据
                        CALL cl_err(g_sfaa_d[l_ac_sfaa].sfba003_1,'asf-00232',1)
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               #已发齐套数
               CALL s_asft340_full_sets(g_sfaa_d[l_ac_sfaa].sfaadocno_1,g_sfaa_d[l_ac_sfaa].sfba003_1,g_sfaa_d[l_ac_sfaa].sfba004_1,'')
                    RETURNING l_success,g_sfaa_d[l_ac_sfaa].has_sets_1
               IF NOT l_success THEN
                  NEXT FIELD CURRENT
               END IF
               
               #可齐料套数
               CALL asfp310_full_sets(g_sfaa_d[l_ac_sfaa].sfaadocno_1,g_sfaa_d[l_ac_sfaa].sfba003_1,g_sfaa_d[l_ac_sfaa].sfba004_1)
                    RETURNING l_success,g_sfaa_d[l_ac_sfaa].can_sets_1
               IF NOT l_success THEN
                  NEXT FIELD CURRENT
               END IF
               LET g_sfaa_d[l_ac_sfaa].can_sets_1 = g_sfaa_d[l_ac_sfaa].can_sets_1 - g_sfaa_d[l_ac_sfaa].has_sets_1
            
            ON ACTION controlp INFIELD sfaadocno_1
               #工单单号
               INITIALIZE g_qryparam.* TO NULL 
               LET g_qryparam.state = "i"
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_sfaa_d[l_ac_sfaa].sfaadocno_1
               LET g_qryparam.where = " sfaasite ='",g_site,"' AND sfaastus='F'"
               CALL q_sfaadocno_3()
               LET g_sfaa_d[l_ac_sfaa].sfaadocno_1 = g_qryparam.return1
               DISPLAY g_sfaa_d[l_ac_sfaa].sfaadocno_1 TO sfaadocno_1

            ON ACTION controlp INFIELD sfba003_1
               #作业编号
               INITIALIZE g_qryparam.* TO NULL 
               LET g_qryparam.state = "i"
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_sfaa_d[l_ac_sfaa].sfba003_1
               IF NOT cl_null(g_sfaa_d[l_ac_sfaa].sfaadocno_1) THEN
                  LET g_qryparam.where = " sfbadocno ='",g_sfaa_d[l_ac_sfaa].sfaadocno_1,"' "
               END IF
               CALL q_sfba003()
               LET g_sfaa_d[l_ac_sfaa].sfba003_1 = g_qryparam.return1
               DISPLAY g_sfaa_d[l_ac_sfaa].sfba003_1 TO sfba003_1

            ON ACTION controlp INFIELD sfba004_1
               #作业序
               INITIALIZE g_qryparam.* TO NULL 
               LET g_qryparam.state = "i"
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_sfaa_d[l_ac_sfaa].sfba004_1
               IF NOT cl_null(g_sfaa_d[l_ac_sfaa].sfaadocno_1) THEN
                  LET g_qryparam.where = " sfbadocno ='",g_sfaa_d[l_ac_sfaa].sfaadocno_1,"' "
                  IF NOT cl_null(g_sfaa_d[l_ac_sfaa].sfba003_1) THEN
                     LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfba003 ='",g_sfaa_d[l_ac_sfaa].sfba003_1,"' "
                  END IF
               END IF
               CALL q_sfba004()
               LET g_sfaa_d[l_ac_sfaa].sfba004_1 = g_qryparam.return1
               DISPLAY g_sfaa_d[l_ac_sfaa].sfba004_1 TO sfba004_1

            ON ROW CHANGE
               IF INT_FLAG THEN
                  CALL cl_err('',9001,0)
                  LET INT_FLAG = 0
                  LET g_sfaa_d[l_ac_sfaa].* = g_sfaa_d_t.*
                  NEXT FIELD seq_1
               END IF

               #寫入修改者/修改日期資訊(單身)
               IF cl_null(g_sfaa_d[l_ac_sfaa].sfba003_1) THEN LET g_sfaa_d[l_ac_sfaa].sfba003_1 = ' ' END IF #作业
               IF cl_null(g_sfaa_d[l_ac_sfaa].sfba004_1) THEN LET g_sfaa_d[l_ac_sfaa].sfba004_1 = ' ' END IF #作业序
               UPDATE asfp310_sfaa SET
                                     #锁定       顺序      工单单号     生产料号   预计开工日
                                     (lock_1   ,seq_1    ,sfaadocno_1,sfaa010_1 ,sfaa019_1,
                                     #预计完工日 部门厂商   生管员       作业编号   作业序 
                                      sfaa020_1,sfaa017_1,sfaa002_1  ,sfba003_1 ,sfba004_1,
                                     #生产数量   已发套数   已发齐套数   可齐料套数
                                      sfaa012_1,sfaa049_1,has_sets_1)# ,can_sets_1)
                                   = (g_sfaa_d[l_ac_sfaa].lock_1,g_sfaa_d[l_ac_sfaa].seq_1,g_sfaa_d[l_ac_sfaa].sfaadocno_1,g_sfaa_d[l_ac_sfaa].sfaa010_1 ,g_sfaa_d[l_ac_sfaa].sfaa019_1,
                                      g_sfaa_d[l_ac_sfaa].sfaa020_1,g_sfaa_d[l_ac_sfaa].sfaa017_1,g_sfaa_d[l_ac_sfaa].sfaa002_1,g_sfaa_d[l_ac_sfaa].sfba003_1,g_sfaa_d[l_ac_sfaa].sfba004_1,
                                      g_sfaa_d[l_ac_sfaa].sfaa012_1,g_sfaa_d[l_ac_sfaa].sfaa049_1,g_sfaa_d[l_ac_sfaa].has_sets_1)#,g_sfaa_d[l_ac_sfaa].can_sets_1)
                WHERE seq_1 = g_sfaa_d_t.seq_1 #項次
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("upd asfp310_sfaa","std-00009",1)
                     LET g_sfaa_d[l_ac_sfaa].* = g_sfaa_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("upd asfp310_sfaa",SQLCA.sqlcode,1)
                     LET g_sfaa_d[l_ac_sfaa].* = g_sfaa_d_t.*
                  OTHERWISE
                     ##删除旧值
                     #LET l_success_tot = TRUE
                     #DELETE FROM asfp310_sfba WHERE seq_1 = g_sfaa_d_t.seq_1 
                     #IF SQLCA.sqlcode THEN
                     #   LET l_success_tot = FALSE
                     #END IF
                     #DELETE FROM asfp310_inag WHERE seq_1 = g_sfaa_d_t.seq_1 
                     #IF SQLCA.sqlcode THEN
                     #   LET l_success_tot = FALSE
                     #END IF
                     #DELETE FROM asfp310_bmea WHERE seq_1 = g_sfaa_d_t.seq_1 
                     #IF SQLCA.sqlcode THEN
                     #   LET l_success_tot = FALSE
                     #END IF
                     ##产生新增--自动插入sfba,inag,bmea
                     #LET g_can_sets   = 'N'  #需足套否
                     #LET g_need_issue = 'N'  #需分配数量否
                     #SELECT sfaa011 INTO l_sfaa011 FROM sfaa_t  #特性
                     # WHERE sfaaent  = g_enterprise
                     #   AND sfaadocno= g_sfaa_d[l_ac_sfaa].sfaadocno_1
                     ##                           顺序                       工单单号                        作业编号                       作业序                         主件料号                      特征
                     #CALL asfp310_ins_table_sfba(g_sfaa_d[l_ac_sfaa].seq_1,g_sfaa_d[l_ac_sfaa].sfaadocno_1,g_sfaa_d[l_ac_sfaa].sfba003_1,g_sfaa_d[l_ac_sfaa].sfba004_1,g_sfaa_d[l_ac_sfaa].sfaa010_1,l_sfaa011)  #产生第二单身asfp310_sfba
                     #   RETURNING l_success,l_is_full
                     #IF NOT l_success THEN
                     #   LET l_success_tot = l_success
                     #END IF
                     #IF NOT l_success_tot THEN
                     #   CALL cl_err("upd asfp310_sfaa","std-00009",1)
                     #   LET g_sfaa_d[l_ac_sfaa].* = g_sfaa_d_t.*
                     #END IF
               END CASE

            AFTER ROW


            AFTER INPUT
            
            ON ACTION selall
               CALL asfp310_sel_all("Y")

            ON ACTION selnone
               CALL asfp310_sel_all("N")

         END INPUT
         
         INPUT ARRAY g_inag_d FROM s_detail3.*
             ATTRIBUTE(COUNT = g_rec_b_inag,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                  INSERT ROW = FALSE,
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)

            BEFORE INPUT
               CALL asfp310_b_fill_inag()
               LET g_rec_b_inag = g_inag_d.getLength()

            BEFORE ROW
               LET l_cmd = ''
               LET l_ac_inag = ARR_CURR()
            
               LET g_rec_b_inag = g_inag_d.getLength()
            
               IF g_rec_b_inag >= l_ac_inag AND g_inag_d[l_ac_inag].inag004_3 IS NOT NULL THEN
                  LET l_cmd='u'
                  LET g_inag_d_t.* = g_inag_d[l_ac_inag].*  #BACKUP
               ELSE
                  LET l_cmd='a'
               END IF


            AFTER FIELD issue_qty_3
               IF NOT cl_null(g_inag_d[l_ac_inag].issue_qty_3) THEN
                  #不可小于0
                  IF g_inag_d[l_ac_inag].issue_qty_3 < 0 THEN
                     CALL cl_err('','agl-00041',1)
                     NEXT FIELD CURRENT
                  END IF
                  #不可超过库存量
                  #可发量 =  现有库存数量 - 库存在捡量      # -    其他工单分配量
                  LET l_can_qty = g_inag_d[l_ac_inag].inag008_3 - g_inag_d[l_ac_inag].inan010_3    # - g_inag_d[l_ac_inag].has_qty_3
                  IF g_inag_d[l_ac_inag].issue_qty_3 > l_can_qty THEN
                     CALL cl_err_msg('','asf-00042',l_can_qty,1)
                     NEXT FIELD CURRENT
                  END IF
                  #加总不可超过未发数量
                  CALL asfp310_get_issue_qty2('inag') RETURNING l_issue_qty_2
                  IF l_issue_qty_2 > g_sfba_d[l_ac_sfba].no_issue_2 THEN
                     CALL cl_err_msg('','asf-00047',g_sfba_d[l_ac_sfba].no_issue_2,1)
                     NEXT FIELD CURRENT
                  END IF
                  
                  #----------------------------------------------
                  #自动分配其他工单
                  #當有調整分配數量時，若其他工單有需要此料件則將其他沒有鎖定的工單分配數量自動加減
                  #例如兩張工單WO-1、WO-2都需要A料號，A料號庫存量只有100，
                  #原來100全部都分配給WO-1，當把WO-1的數量減少為80時，則WO-2自動加入20的數量，(加到下一張的時候從優先順序最大的開始加)
                  #如果再把WO-1的數量改為100，則WO-2的數量則再減少為0(扣的時候從順序最後的開始扣)
                  #----------------------------------------------
                  #库存未分配的量=库存量                         - 在捡量                        - 其他工单分配量                 - 本笔原始分配量
                  LET g_un_qty = g_inag_d[l_ac_inag].inag008_3 - g_inag_d[l_ac_inag].inan010_3 - g_inag_d[l_ac_inag].has_qty_3 - g_inag_d_t.issue_qty_3
                  
                  IF g_inag_d[l_ac_inag].issue_qty_3 > g_inag_d_t.issue_qty_3 THEN  #数量改大
                     #需调整的量    =                              差异量                      - 未分配量
                     LET l_can_qty = g_inag_d[l_ac_inag].issue_qty_3 - g_inag_d_t.issue_qty_3 - g_un_qty
                     #将差异量按优先顺序，从最后的开始扣
                     IF l_can_qty > 0 THEN
                        #                  调整方式  料                        仓                            储                            批                            库存管理特征                    单位                          调整量
                        CALL asfp310_adjust('-',g_sfba_d[l_ac_sfba].sfba006_2,g_inag_d[l_ac_inag].inag004_3,g_inag_d[l_ac_inag].inag005_3,g_inag_d[l_ac_inag].inag006_3,g_inag_d[l_ac_inag].inag003_3,g_inag_d[l_ac_inag].inag007_3,l_can_qty)
                           RETURNING l_success,l_qty
                        IF NOT l_success THEN
                           NEXT FIELD CURRENT
                        END IF
                        #刷新其他工单分配量
                        LET g_inag_d[l_ac_inag].has_qty_3 = g_inag_d[l_ac_inag].has_qty_3 - l_qty
                     END IF
                  END IF
                  IF g_inag_d[l_ac_inag].issue_qty_3 < g_inag_d_t.issue_qty_3 THEN  #数量改小
                     IF g_un_qty <= 0 THEN   #若库存未分配量>0则代表之前库存分配的时候足够了，此次改小，多出的数量也无其他需求可分配
                        #将差异量按优先顺序加到下一张
                        LET l_can_qty = g_inag_d_t.issue_qty_3 - g_inag_d[l_ac_inag].issue_qty_3
                        #                  调整方式  料                        仓                            储                            批                            库存管理特征                    单位                          调整量
                        CALL asfp310_adjust('+',g_sfba_d[l_ac_sfba].sfba006_2,g_inag_d[l_ac_inag].inag004_3,g_inag_d[l_ac_inag].inag005_3,g_inag_d[l_ac_inag].inag006_3,g_inag_d[l_ac_inag].inag003_3,g_inag_d[l_ac_inag].inag007_3,l_can_qty)
                           RETURNING l_success,l_qty
                        IF NOT l_success THEN
                           NEXT FIELD CURRENT
                        END IF
                        #刷新其他工单分配量
                        LET g_inag_d[l_ac_inag].has_qty_3 = g_inag_d[l_ac_inag].has_qty_3 + l_qty
                     END IF
                  END IF
               END IF

            ON ROW CHANGE
               IF INT_FLAG THEN
                  CALL cl_err('',9001,0)
                  LET INT_FLAG = 0
                  LET g_inag_d[l_ac_inag].* = g_inag_d_t.*
                  NEXT FIELD issue_qty_3
               END IF
               
               #先汇总数量，再更新
               CALL asfp310_get_issue_qty2('inag') RETURNING l_issue_qty_2
               
               UPDATE asfp310_inag SET issue_qty_3 = g_inag_d[l_ac_inag].issue_qty_3
                WHERE seq_1     = g_sfaa_d[l_ac_sfaa].seq_1 #項次
                  AND seq_2     = g_sfba_d[l_ac_sfba].seq_2
                  AND seq1_2    = g_sfba_d[l_ac_sfba].seq1_2
                  AND inag004_3 = g_inag_d[l_ac_inag].inag004_3
                  AND inag005_3 = g_inag_d[l_ac_inag].inag005_3
                  AND inag006_3 = g_inag_d[l_ac_inag].inag006_3
                  AND inag003_3 = g_inag_d[l_ac_inag].inag003_3
                  AND inag007_3 = g_inag_d[l_ac_inag].inag007_3
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("upd asfp310_inag","std-00009",1)
                     LET g_inag_d[l_ac_inag].* = g_inag_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("upd asfp310_inag",SQLCA.sqlcode,1)
                     LET g_inag_d[l_ac_inag].* = g_inag_d_t.*
                  OTHERWISE
                     #更新issue_qty_2
                     UPDATE asfp310_sfba SET issue_qty_2 = l_issue_qty_2
                      WHERE seq_1 = g_sfaa_d[l_ac_sfaa].seq_1 #項次
                        AND seq_2 = g_sfba_d[l_ac_sfba].seq_2
                        AND seq1_2= g_sfba_d[l_ac_sfba].seq1_2
                     IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
                        CALL cl_err("upd asfp310_sfba",SQLCA.sqlcode,1)
                        LET g_inag_d[l_ac_inag].* = g_inag_d_t.*
                     END IF    
                     LET g_sfba_d[l_ac_sfba].issue_qty_2 = l_issue_qty_2                  
                     #DISPLAY BY NAME g_sfba_d[l_ac_sfba].issue_qty_2                 
               END CASE

            AFTER ROW


            AFTER INPUT

         END INPUT
         
         INPUT ARRAY g_bmea_d FROM s_detail4.*
             ATTRIBUTE(COUNT = g_rec_b_bmea,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                  INSERT ROW = FALSE,
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)

            BEFORE INPUT
               CALL asfp310_b_fill_bmea()
               LET g_rec_b_bmea = g_bmea_d.getLength()

            BEFORE ROW
               LET l_cmd = ''
               LET l_ac_bmea = ARR_CURR()
            
               LET g_rec_b_bmea = g_bmea_d.getLength()
            
               IF g_rec_b_bmea >= l_ac_bmea AND g_bmea_d[l_ac_bmea].bmea008_4 IS NOT NULL THEN
                  LET l_cmd='u'
                  LET g_bmea_d_t.* = g_bmea_d[l_ac_bmea].*  #BACKUP
               ELSE
                  LET l_cmd='a'
               END IF


            AFTER FIELD issue_qty_4
               IF NOT cl_null(g_bmea_d[l_ac_bmea].issue_qty_4) THEN
                  #不可小于0
                  IF g_bmea_d[l_ac_bmea].issue_qty_4 < 0 THEN
                     CALL cl_err('','agl-00041',1)
                     NEXT FIELD CURRENT
                  END IF
                  #不可超过库存量
                  #可发量 =  现有库存数量 - 库存在捡量 -    其他工单分配量
                  LET l_can_qty = g_bmea_d[l_ac_bmea].inag008_4 - g_bmea_d[l_ac_bmea].inan010_4 - g_bmea_d[l_ac_bmea].has_qty_4
                  IF g_bmea_d[l_ac_bmea].issue_qty_4 > l_can_qty THEN
                     CALL cl_err_msg('','asf-00042',l_can_qty,1)
                     NEXT FIELD CURRENT
                  END IF
                  #不可超过应发量-->未发量
                  CALL asfp310_get_issue_qty2('bmea') RETURNING l_issue_qty_2
                  IF l_issue_qty_2 > g_sfba_d[l_ac_sfba].no_issue_2 THEN
                     CALL cl_err_msg('','asf-00047',g_sfba_d[l_ac_sfba].no_issue_2,1)
                     NEXT FIELD CURRENT
                  END IF
 
                  #替代方式如果是完全取替代時，只可發其中一個料件，不可混發
                  IF g_bmea_d[l_ac_bmea].bmea016_4 = '2' AND g_bmea_d[l_ac_bmea].issue_qty_4 > 0 THEN
                     FOR l_i = 1 TO g_rec_b_bmea
                         IF l_i != l_ac_bmea THEN
                            IF g_bmea_d[l_i].issue_qty_4 > 0 THEN
                               CALL cl_err_msg(g_sfba_d[l_ac_sfba].sfba006_2,'asf-00248',g_bmea_d[l_i].bmea008_4,1)
                               NEXT FIELD CURRENT
                            END IF
                         END IF
                     END FOR
                     NEXT FIELD CURRENT
                  END IF
                  #替代方式如果是部分取代時，同一個料的發料量不可超過上限比率
                  LET l_can_qty = g_sfba_d[l_ac_sfba].no_issue_2 * g_bmea_d[l_ac_bmea].replace_rate_4 * g_bmea_d[l_ac_bmea].bmea017_4/100  #上线比率的数量
                  IF g_bmea_d[l_ac_bmea].bmea016_4 = '1' AND g_bmea_d[l_ac_bmea].issue_qty_4 > l_can_qty THEN
                     CALL cl_err_msg('','asf-00249',l_can_qty,1)
                     NEXT FIELD CURRENT
                  END IF
               END IF

            ON ROW CHANGE
               IF INT_FLAG THEN
                  CALL cl_err('',9001,0)
                  LET INT_FLAG = 0
                  LET g_bmea_d[l_ac_bmea].* = g_bmea_d_t.*
                  NEXT FIELD issue_qty_4
               END IF
               
               #先汇总数量再更新
               CALL asfp310_get_issue_qty2('bmea') RETURNING l_issue_qty_2

               UPDATE asfp310_bmea SET issue_qty_4 = g_bmea_d[l_ac_bmea].issue_qty_4
                WHERE seq_1     = g_sfaa_d[l_ac_sfaa].seq_1 #項次
                  AND seq_2     = g_sfba_d[l_ac_sfba].seq_2
                  AND seq1_2    = g_sfba_d[l_ac_sfba].seq1_2
                  AND bmea007_4 = g_bmea_d[l_ac_bmea].bmea007_4
                  AND bmea008_4 = g_bmea_d[l_ac_bmea].bmea008_4
                  AND inag004_4 = g_bmea_d[l_ac_bmea].inag004_4
                  AND inag005_4 = g_bmea_d[l_ac_bmea].inag005_4
                  AND inag006_4 = g_bmea_d[l_ac_bmea].inag006_4
                  AND inag003_4 = g_bmea_d[l_ac_bmea].inag003_4
                  AND inag007_4 = g_bmea_d[l_ac_bmea].inag007_4
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("upd asfp310_bmea","std-00009",1)
                     LET g_bmea_d[l_ac_bmea].* = g_bmea_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("upd asfp310_bmea",SQLCA.sqlcode,1)
                     LET g_bmea_d[l_ac_bmea].* = g_bmea_d_t.*
                  OTHERWISE
                     #更新issue_qty_2
                     UPDATE asfp310_sfba SET issue_qty_2 = l_issue_qty_2
                      WHERE seq_1 = g_sfaa_d[l_ac_sfaa].seq_1 #項次
                        AND seq_2 = g_sfba_d[l_ac_sfba].seq_2
                        AND seq1_2= g_sfba_d[l_ac_sfba].seq1_2
                     IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
                        CALL cl_err("upd asfp310_sfba",SQLCA.sqlcode,1)
                        LET g_bmea_d[l_ac_bmea].* = g_bmea_d_t.*
                     END IF
                     LET g_sfba_d[l_ac_sfba].issue_qty_2 = l_issue_qty_2                  
                     #DISPLAY BY NAME g_sfba_d[l_ac_sfba].issue_qty_2
               END CASE

            AFTER ROW


            AFTER INPUT

         END INPUT]]>
  </point>
  <section id="asfp310.description" ver="128" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000165
#+ 
#+ Filename...: asfp310
#+ Description: 整批發料作業
#+ Creator....: 00768(2014/04/02)
#+ Modifier...: 00768(2014/07/04)
#+ Buildtype..: 應用 p01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="asfp310.global" ver="5" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       sfaadocno LIKE type_t.chr20, 
   sfaa010 LIKE type_t.chr500, 
   sfaa019 LIKE type_t.dat, 
   sfaa020 LIKE type_t.dat, 
   sfaa017 LIKE type_t.chr10, 
   sfaa002 LIKE type_t.chr10, 
   sfba003 LIKE type_t.chr10, 
   sfba003_desc LIKE type_t.chr80, 
   sfba004 LIKE type_t.chr10, 
   no_sets LIKE type_t.chr80, 
   priority1 LIKE type_t.chr80, 
   priority2 LIKE type_t.chr80, 
   priority3 LIKE type_t.chr80, 
   priority4 LIKE type_t.chr80, 
   can_sets LIKE type_t.chr80, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="asfp310.init" ver="1" status="" src="s">
    <![CDATA[#+ 初始化作業
PRIVATE FUNCTION asfp310_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="asfp310.main" ver="2" status="" src="s">
    <![CDATA[MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("asf","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL asfp310_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_asfp310 WITH FORM cl_ap_formpath("asf",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL asfp310_init()
 
      #進入選單 Menu (="N")
      CALL asfp310_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_asfp310
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
  </section>
  <section id="asfp310.other_function" ver="1" status="" src="s">
    <![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
  </section>
  <section id="asfp310.process" ver="2" status="" src="s">
    <![CDATA[#+ 資料處理
PRIVATE FUNCTION asfp310_process(ls_js)
   DEFINE ls_js       STRING
   DEFINE lc_param    type_parameter
   DEFINE li_stus     LIKE type_t.num5
   DEFINE li_count    LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql      STRING             #主SQL
   #add-point:process段define
   {<point name="process.define"/>}
   #end add-point
 
   CALL util.JSON.parse(ls_js,lc_param)
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE asfp310_process_cs CURSOR FROM ls_sql
#  FOREACH asfp310_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
   END IF
END FUNCTION
]]>
  </section>
  <section id="asfp310.transfer_argv" ver="1" status="" src="s">
    <![CDATA[#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION asfp310_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog     STRING,
             param    DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
 
   CALL util.JSON.parse(ls_js,la_param)
 
   LET la_cmdrun.prog = g_prog
   #add-point:transfer.argv段define
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
]]>
  </section>
  <section id="asfp310.ui_dialog" ver="16" status="" src="s">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION asfp310_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num5
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
 
   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      {<point name="ui_dialog.before_dialog2"/>}
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #+ 此段落由子樣板a57產生
         INPUT BY NAME g_master.sfba003,g_master.sfba004,g_master.no_sets,g_master.priority1,g_master.priority2, 
             g_master.priority3,g_master.priority4,g_master.can_sets 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前
               {<point name="input.m.before_input"/>}
               #end add-point
         
                     #此段落由子樣板a02產生
         AFTER FIELD sfba003
            
            #add-point:AFTER FIELD sfba003
            {<point name="input.a.sfba003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfba003
            #add-point:BEFORE FIELD sfba003
            {<point name="input.b.sfba003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfba003
            #add-point:ON CHANGE sfba003
            {<point name="input.g.sfba003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfba004
            #add-point:BEFORE FIELD sfba004
            {<point name="input.b.sfba004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfba004
            
            #add-point:AFTER FIELD sfba004
            {<point name="input.a.sfba004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfba004
            #add-point:ON CHANGE sfba004
            {<point name="input.g.sfba004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD no_sets
            #add-point:BEFORE FIELD no_sets
            {<point name="input.b.no_sets" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD no_sets
            
            #add-point:AFTER FIELD no_sets
            {<point name="input.a.no_sets" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE no_sets
            #add-point:ON CHANGE no_sets
            {<point name="input.g.no_sets" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD priority1
            #add-point:BEFORE FIELD priority1
            {<point name="input.b.priority1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD priority1
            
            #add-point:AFTER FIELD priority1
            {<point name="input.a.priority1" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE priority1
            #add-point:ON CHANGE priority1
            {<point name="input.g.priority1" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD priority2
            #add-point:BEFORE FIELD priority2
            {<point name="input.b.priority2" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD priority2
            
            #add-point:AFTER FIELD priority2
            {<point name="input.a.priority2" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE priority2
            #add-point:ON CHANGE priority2
            {<point name="input.g.priority2" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD priority3
            #add-point:BEFORE FIELD priority3
            {<point name="input.b.priority3" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD priority3
            
            #add-point:AFTER FIELD priority3
            {<point name="input.a.priority3" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE priority3
            #add-point:ON CHANGE priority3
            {<point name="input.g.priority3" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD priority4
            #add-point:BEFORE FIELD priority4
            {<point name="input.b.priority4" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD priority4
            
            #add-point:AFTER FIELD priority4
            {<point name="input.a.priority4" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE priority4
            #add-point:ON CHANGE priority4
            {<point name="input.g.priority4" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD can_sets
            #add-point:BEFORE FIELD can_sets
            {<point name="input.b.can_sets" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD can_sets
            
            #add-point:AFTER FIELD can_sets
            {<point name="input.a.can_sets" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE can_sets
            #add-point:ON CHANGE can_sets
            {<point name="input.g.can_sets" />}
            #END add-point
 
 
                     #Ctrlp:input.c.sfba003
         ON ACTION controlp INFIELD sfba003
            #add-point:ON ACTION controlp INFIELD sfba003
            {<point name="input.c.sfba003" />}
            #END add-point
 
         #Ctrlp:input.c.sfba004
         ON ACTION controlp INFIELD sfba004
            #add-point:ON ACTION controlp INFIELD sfba004
            {<point name="input.c.sfba004" />}
            #END add-point
 
         #Ctrlp:input.c.no_sets
         ON ACTION controlp INFIELD no_sets
            #add-point:ON ACTION controlp INFIELD no_sets
            {<point name="input.c.no_sets" />}
            #END add-point
 
         #Ctrlp:input.c.priority1
         ON ACTION controlp INFIELD priority1
            #add-point:ON ACTION controlp INFIELD priority1
            {<point name="input.c.priority1" />}
            #END add-point
 
         #Ctrlp:input.c.priority2
         ON ACTION controlp INFIELD priority2
            #add-point:ON ACTION controlp INFIELD priority2
            {<point name="input.c.priority2" />}
            #END add-point
 
         #Ctrlp:input.c.priority3
         ON ACTION controlp INFIELD priority3
            #add-point:ON ACTION controlp INFIELD priority3
            {<point name="input.c.priority3" />}
            #END add-point
 
         #Ctrlp:input.c.priority4
         ON ACTION controlp INFIELD priority4
            #add-point:ON ACTION controlp INFIELD priority4
            {<point name="input.c.priority4" />}
            #END add-point
 
         #Ctrlp:input.c.can_sets
         ON ACTION controlp INFIELD can_sets
            #add-point:ON ACTION controlp INFIELD can_sets
            {<point name="input.c.can_sets" />}
            #END add-point
 
 
               
            AFTER INPUT
               #add-point:資料輸入後
               {<point name="input.m.after_input"/>}
               #end add-point
               
            #add-point:其他管控(on row change, etc...)
            {<point name="input.other"/>}
            #end add-point
               
         END INPUT
 
 
         
         #+ 此段落由子樣板a57產生
         CONSTRUCT BY NAME g_master.wc ON sfaadocno,sfaa010,sfaa019,sfaa020,sfaa017,sfaa002
         
            BEFORE CONSTRUCT
               #add-point:cs段before_construct
               {<point name="cs.head.before_construct"/>}
               #end add-point 
         
            #公用欄位開窗相關處理
            
               
            #一般欄位開窗相關處理    
                     #Ctrlp:construct.c.sfaadocno
         ON ACTION controlp INFIELD sfaadocno
            #add-point:ON ACTION controlp INFIELD sfaadocno
            {<point name="construct.c.sfaadocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfaadocno
            #add-point:BEFORE FIELD sfaadocno
            {<point name="construct.b.sfaadocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaadocno
            
            #add-point:AFTER FIELD sfaadocno
            {<point name="construct.a.sfaadocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfaa010
         ON ACTION controlp INFIELD sfaa010
            #add-point:ON ACTION controlp INFIELD sfaa010
            {<point name="construct.c.sfaa010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa010
            #add-point:BEFORE FIELD sfaa010
            {<point name="construct.b.sfaa010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa010
            
            #add-point:AFTER FIELD sfaa010
            {<point name="construct.a.sfaa010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa019
            #add-point:BEFORE FIELD sfaa019
            {<point name="construct.b.sfaa019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa019
            
            #add-point:AFTER FIELD sfaa019
            {<point name="construct.a.sfaa019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfaa019
         ON ACTION controlp INFIELD sfaa019
            #add-point:ON ACTION controlp INFIELD sfaa019
            {<point name="construct.c.sfaa019" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa020
            #add-point:BEFORE FIELD sfaa020
            {<point name="construct.b.sfaa020" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa020
            
            #add-point:AFTER FIELD sfaa020
            {<point name="construct.a.sfaa020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfaa020
         ON ACTION controlp INFIELD sfaa020
            #add-point:ON ACTION controlp INFIELD sfaa020
            {<point name="construct.c.sfaa020" />}
            #END add-point
 
         #Ctrlp:construct.c.sfaa017
         ON ACTION controlp INFIELD sfaa017
            #add-point:ON ACTION controlp INFIELD sfaa017
            {<point name="construct.c.sfaa017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa017
            #add-point:BEFORE FIELD sfaa017
            {<point name="construct.b.sfaa017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa017
            
            #add-point:AFTER FIELD sfaa017
            {<point name="construct.a.sfaa017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfaa002
         ON ACTION controlp INFIELD sfaa002
            #add-point:ON ACTION controlp INFIELD sfaa002
            {<point name="construct.c.sfaa002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa002
            #add-point:BEFORE FIELD sfaa002
            {<point name="construct.b.sfaa002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa002
            
            #add-point:AFTER FIELD sfaa002
            {<point name="construct.a.sfaa002" />}
            #END add-point
            
 
 
            
            #add-point:其他管控
            {<point name="cs.other"/>}
            #end add-point
            
         END CONSTRUCT
 
 
      
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET lc_param.wc = ls_wc
               #取得條件後需要執行項目,應新增於下方adp
               #add-point:ui_dialog段qbe_select後
               {<point name="ui_dialog.qbe_select"/>}
               #end add-point
            END IF
 
         ON ACTION qbe_save
            CALL cl_qbe_save()
 
         ON ACTION batch_execute
            ACCEPT DIALOG
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE lc_param.* TO NULL
            #add-point:ui_dialog段qbeclear
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      #add-point:ui_dialog段exit dialog
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         LET g_jobid = cl_schedule_get_jobid(g_prog)
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL asfp310_process(ls_js)
            WHEN g_schedule.gzpa003 = "1"
            #    CALL cl_schedule_update_data(g_jobid,ls_js)
                 LET ls_js = asfp310_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         {<point name="process.after_schedule"/>}
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
]]>
  </section>
</add_points>
