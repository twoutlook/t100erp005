<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="asfp302" std_prog="asfp302" erpver="1.0" module="ASF" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="W" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.asfp302_sel_all" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asfp302_sel_all(p_flag)
   DEFINE p_flag         LIKE type_t.chr1
   DEFINE l_i            LIKE type_t.num5

   #FOR l_i = 1 TO g_rec_b
   FOR l_i = 1 TO g_detail_cnt
       LET g_detail_d[l_i].sel = p_flag
   END FOR
END FUNCTION]]>
  </point>
  <point name="function.asfp302_split" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#拆分
PRIVATE FUNCTION asfp302_split()
DEFINE l_success    LIKE type_t.num5
DEFINE l_i          LIKE type_t.num5
  
   #检查
   CALL asfp302_split_chk() RETURNING l_success
   IF NOT l_success THEN
      RETURN
   END IF

   CALL s_transaction_begin()

   #彈出畫面asfp302_1，录入拆分明细，进行拆分
   FOR l_i = 1 TO g_detail_cnt
       IF g_detail_d[l_i].sel = 'Y' THEN
          CALL asfp302_01(g_detail_d[l_i].b_sfcadocno,g_detail_d[l_i].b_sfca001,g_detail_d[l_i].b_sfcb003,g_detail_d[l_i].b_sfcb004,g_detail_d[l_i].wip_qty,g_detail_d[l_i].issue_qty)
             RETURNING l_success
          IF NOT l_success THEN
             CALL s_transaction_end('N','0')
             RETURN
          END IF
       END IF
   END FOR
   
   #执行成功
   CALL cl_err('','adz-00217',1)
   CALL s_transaction_end('Y','0')
   
   CALL asfp302_b_fill()
   
END FUNCTION]]>
  </point>
  <point name="function.asfp302_combine_chk" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#所選項目的工單單號+作業編號+作業序是否一致，若有不一致情況不可合併
#是否有且僅有一筆主RunCard被勾選
PRIVATE FUNCTION asfp302_combine_chk()
   DEFINE r_success   LIKE type_t.num5
   DEFINE r_main      LIKE type_t.num5     #主runcard所在位置
   DEFINE r_sum       LIKE sfcb_t.sfcb028  #合并的异动数量
   DEFINE l_cnt       LIKE type_t.num5
   DEFINE l_i         LIKE type_t.num5
   DEFINE l_str       STRING
   DEFINE l_str_t     STRING
   DEFINE l_sfaastus  LIKE sfaa_t.sfaastus #工单状态
   
   LET r_success = TRUE
   
   LET l_cnt = 0
   FOR l_i = 1 TO g_detail_cnt
       IF g_detail_d[l_i].sel = 'Y' THEN
          #仅有一笔runcard被勾选
          IF g_detail_d[l_i].ismain = 'Y' THEN
             LET r_main = l_i  #主runcard所在位置
             LET l_cnt = l_cnt + 1
             IF l_cnt > 1 THEN
                #有多笔主RUNCARD，不可合并！请选择一笔，且仅一笔作为主RUNCARD！
                CALL cl_err('','asf-00256',1)
                LET r_success = FALSE
                RETURN r_success,r_main
             END IF
          END IF
          
          #工單單號+作業編號+作業序 需一致
          LET l_str = g_detail_d[l_i].b_sfcadocno,',',g_detail_d[l_i].b_sfcb003,',',g_detail_d[l_i].b_sfcb004
          IF cl_null(l_str_t) THEN
             LET l_str_t = l_str
          ELSE
             IF l_str_t != l_str THEN
                CALL cl_err('','asf-00258',1)
                LET r_success = FALSE
                RETURN r_success,r_main
             END IF
          END IF
          
          #工单未结案  单身显示时已筛选了，防止期间有人再做了结案动作
          SELECT sfaastus INTO l_sfaastus
            FROM sfaa_t
           WHERE sfaaent   = g_enterprise
             AND sfaadocno = g_detail_d[l_i].b_sfcadocno
          IF l_sfaastus MATCHES '[CEM]' THEN 
             #工单已结案，不可异动
             CALL cl_err(g_detail_d[l_i].b_sfcadocno,'asf-00264',1)
             LET r_success = FALSE
             RETURN r_success,r_main
          END IF
                    
          #检查本次异动数量
          IF cl_null(g_detail_d[l_i].issue_qty) THEN 
             #异动量不可为空，请输入
             CALL cl_err('','asf-00282',1)
             LET r_success = FALSE
             RETURN r_success,r_main
          END IF
          IF g_detail_d[l_i].issue_qty = 0 THEN
             #待拆分数量为0，无需拆分！请确认
             CALL cl_err('','asf-00275',1)
             LET r_success = FALSE
             RETURN r_success,r_main
          END IF
          IF g_detail_d[l_i].issue_qty < 0 THEN
             #数量不可小于0，请重新录入
             CALL cl_err('','agl-00041',1)
             LET r_success = FALSE
             RETURN r_success,r_main
          END IF
          IF g_detail_d[l_i].issue_qty > g_detail_d[l_i].wip_qty THEN
             #异动量不可大于在制量，请重新输入
             CALL cl_err('','asf-00252',1)
             LET r_success = FALSE
             RETURN r_success,r_main
          END IF
       END IF
   END FOR
   #有且仅有一笔runcard被勾选
   IF l_cnt = 0 THEN
      #未选择主RUNCARD，不可合并！请选择一笔，且仅一笔作为主RUNCARD！
      CALL cl_err('','asf-00257',1)
      LET r_success = FALSE
      RETURN r_success,r_main
   END IF
   
   RETURN r_success,r_main
END FUNCTION]]>
  </point>
  <point name="function.asfp302_combine" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#合并
PRIVATE FUNCTION asfp302_combine()
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_sfca      RECORD LIKE sfca_t.*
   DEFINE l_sfcb      RECORD LIKE sfcb_t.*
   DEFINE l_main      LIKE type_t.num5    #主runcard所在位置
   DEFINE l_qty_sum   LIKE sfcb_t.sfcb028 #合并量总数
   DEFINE l_sfcb053   LIKE sfcb_t.sfcb053 #轉入單位轉換率分子
   DEFINE l_sfcb054   LIKE sfcb_t.sfcb054 #轉入單位轉換率分母
   DEFINE l_sfca003   LIKE sfca_t.sfca003 #生产数量
   DEFINE l_sql       STRING
   DEFINE l_sfcb002   LIKE sfcb_t.sfcb002 #项次
   DEFINE l_sfcb005   LIKE sfcb_t.sfcb005 #群组性质
   DEFINE l_sfcb006   LIKE sfcb_t.sfcb006 #群组编号
   DEFINE l_sfcb002_r LIKE sfcb_t.sfcb002   #群组中此线路的第一站项次
   DEFINE l_sfcb003_r LIKE sfcb_t.sfcb003   #群组中此线路的第一站作业编号
   DEFINE l_sfcb004_r LIKE sfcb_t.sfcb004   #群组中此线路的第一站作业序
   DEFINE l_sfcb007_r LIKE sfcb_t.sfcb007   #群组前的站点作业编号
   DEFINE l_sfcb008_r LIKE sfcb_t.sfcb008   #群组前的站点作业序
   DEFINE l_i         LIKE type_t.num5
   DEFINE l_sfchseq   LIKE sfch_t.sfchseq
   DEFINE l_sfcg      RECORD LIKE sfcg_t.*
   DEFINE l_sfch      RECORD LIKE sfch_t.*
   
   #检查
   CALL asfp302_combine_chk() RETURNING l_success,l_main
   IF NOT l_success THEN
      RETURN
   END IF
   
   IF NOT cl_ask_confirm('asf-00266') THEN
      RETURN
   END IF
   CALL s_transaction_begin()
   
   ########
   #开始合并
   ########
   #计算合并数量,同时記錄RunCard合併記錄檔sfcg_t\sfch_t
   INITIALIZE l_sfcg.* TO NULL
   LET l_sfcg.sfcgent   = g_enterprise   #企業代碼
   LET l_sfcg.sfcgsite  = g_site         #營運據點
   LET l_sfcg.sfcgdocno = g_detail_d[l_main].b_sfcadocno   #工單單號
   LET l_sfcg.sfcgdocdt = cl_get_today()  #合併日期
   
   #合併版本
   SELECT MAX(sfcg001) INTO l_sfcg.sfcg001 FROM sfcg_t
    WHERE sfcgent   = l_sfcg.sfcgent
      AND sfcgdocno = l_sfcg.sfcgdocno
   IF cl_null(l_sfcg.sfcg001) THEN
      LET l_sfcg.sfcg001 = 0
   END IF
   LET l_sfcg.sfcg001   = l_sfcg.sfcg001 + 1
   
   LET l_sfcg.sfcg002   = g_detail_d[l_main].b_sfcb003   #作業編號
   LET l_sfcg.sfcg003   = g_detail_d[l_main].b_sfcb004   #作業序
   LET l_sfcg.sfcg004   = ''    #新RunCard編號
   LET l_sfcg.sfcg005   = 0   #合併轉入數量
   INSERT INTO sfcg_t VALUES(l_sfcg.*)
   IF SQLCA.sqlcode THEN
      CALL cl_err('ins sfcg_t',SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   LET l_qty_sum = 0
   LET l_sfchseq = 0
   FOR l_i = 1 TO g_detail_cnt
       IF g_detail_d[l_i].sel = 'Y' THEN
          #记录RunCard合併記錄檔单身sfch_t
          INITIALIZE l_sfch.* TO NULL
          LET l_sfch.sfchent   = g_enterprise   #企業代碼
          LET l_sfch.sfchsite  = g_site         #營運據點
          LET l_sfch.sfchdocno = g_detail_d[l_i].b_sfcadocno   #單工單號
          LET l_sfchseq = l_sfchseq + 1
          LET l_sfch.sfchseq   = l_sfchseq   #項次
          LET l_sfch.sfch001   = l_sfcg.sfcg001   #合併版本
          LET l_sfch.sfch002   = g_detail_d[l_i].b_sfcb003   #作業編號
          LET l_sfch.sfch003   = g_detail_d[l_i].b_sfcb004   #作業序
          LET l_sfch.sfch004   = g_detail_d[l_i].b_sfca001   #原RunCard編號
          LET l_sfch.sfch005   = g_detail_d[l_i].issue_qty   #合併轉出數量
          INSERT INTO sfch_t VALUES(l_sfch.*)
          IF SQLCA.sqlcode THEN
             CALL cl_err('ins sfch_t',SQLCA.sqlcode,1)
             CALL s_transaction_end('N','0')
             RETURN
          END IF
   
          #项次,群组性质,群组编号            #,Move in,check in,報工站,PQC,Check out,Move out  只处理报工勾选的
          SELECT sfcb002,sfcb005,sfcb006       #,sfcb014,sfcb015,sfcb016,sfcb017,sfcb018,sfcb019
            INTO l_sfcb002,l_sfcb005,l_sfcb006   #,l_sfcb014,l_sfcb015,l_sfcb016,l_sfcb017,l_sfcb018,l_sfcb019
            FROM sfcb_t 
           WHERE sfcbent  = g_enterprise
             AND sfcbdocno= g_detail_d[l_i].b_sfcadocno #工单
             AND sfcb001  = g_detail_d[l_i].b_sfca001  #RUN CARD
             AND sfcb003  = g_detail_d[l_i].b_sfcb003  #作业
             AND sfcb004  = g_detail_d[l_i].b_sfcb004  #作业序
             
          #更新当站资料
          UPDATE sfcb_t SET sfcb039 = sfcb039 + g_detail_d[l_i].issue_qty,   #合并转出数
                            sfcb050 = sfcb050 - g_detail_d[l_i].issue_qty    #在製數
           WHERE sfcbent  = g_enterprise
             AND sfcbdocno= g_detail_d[l_i].b_sfcadocno  #工单
             AND sfcb001  = g_detail_d[l_i].b_sfca001    #RUN CARD
             AND sfcb003  = g_detail_d[l_i].b_sfcb003    #作业
             AND sfcb004  = g_detail_d[l_i].b_sfcb004    #作业序
          IF SQLCA.sqlcode THEN
             CALL cl_err('upd sfcb_t',SQLCA.sqlcode,1)
             CALL s_transaction_end('N','0')
             RETURN
          END IF
          #暂时不考虑替代群组等，只考虑最简单的单线工艺，具体待SA规划后再处理
          #IF l_sfcb005 = '2' THEN #替代群组
          #   #判断群组中是否是首站的首个报工类型
          #   #                                  工单号                       runcard号                 项次       作业                      作业序                    群组性质   群组编号   报工类型 
          #   CALL s_asft301_chk_group_f_station(g_detail_d[l_i].b_sfcadocno,g_detail_d[l_i].b_sfca001,l_sfcb002,g_detail_d[l_i].b_sfcb003,g_detail_d[l_i].b_sfcb004,l_sfcb005,l_sfcb006,'3')
          #      RETURNING l_success
          #   IF l_success THEN
          #      #若是首站，找到除本站所在线路外，其他线路的首站首个报工类型，同步扣减待转量，若是报工类型的需同时更新良品转入量
          #      #找出第一个站点以及群组前的站点
          #      #                                   工单号                       runcard号                 项次       作业                      作业序                    群组性质   群组编号
          #      CALL s_asft301_get_group_f_station2(g_detail_d[l_i].b_sfcadocno,g_detail_d[l_i].b_sfca001,l_sfcb002,g_detail_d[l_i].b_sfcb003,g_detail_d[l_i].b_sfcb004,l_sfcb005,l_sfcb006)
          #         RETURNING l_success,l_sfcb002_r,l_sfcb003_r,l_sfcb004_r,l_sfcb007_r,l_sfcb008_r
          #      IF NOT l_success THEN  #异常
          #         CALL s_transaction_end('N','0')
          #         RETURN
          #      END IF
          #      #根据群组前的站点往后找群组中各线路的首站报工类别，若是之前找出来的那个站点的那条线路略过
          #      #                                工单                         runcard号                 群组性质   群组编号  排除的首站作业与作业序    群组前的作业 群组前的作业序
          #      CALL asfp302_upd_group_f_station(g_detail_d[l_i].b_sfcadocno,g_detail_d[l_i].b_sfca001,l_sfcb005,l_sfcb006,l_sfcb003_r,l_sfcb004_r,l_sfcb007_r,l_sfcb008_r)
          #   END IF
          #END IF
                 
          LET l_qty_sum = l_qty_sum + g_detail_d[l_i].issue_qty
       END IF
   END FOR
   #INITIALIZE l_sfcb.* TO NULL
   #SELECT * INTO l_sfcb.* 
   SELECT sfcb053,sfcb054 INTO l_sfcb053,l_sfcb054
     FROM sfcb_t
    WHERE sfcbent  = g_enterprise
      AND sfcbdocno= g_detail_d[l_main].b_sfcadocno #工单
      AND sfcb001  = g_detail_d[l_main].b_sfca001  #RUN CARD
      AND sfcb003  = g_detail_d[l_main].b_sfcb003  #作业
      AND sfcb004  = g_detail_d[l_main].b_sfcb004  #作业序
   IF SQLCA.sqlcode THEN
      CALL cl_err('sel sfcb',SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #计算生产数量
   LET l_sfca003 = l_qty_sum * l_sfcb054 / l_sfcb053
   
   
   #新增一筆工單製程資料
   INITIALIZE l_sfca.* TO NULL
   LET l_sfca.sfcaent   = g_enterprise
   LET l_sfca.sfcasite  = g_site
   LET l_sfca.sfcadocno = g_detail_d[l_main].b_sfcadocno  #單號
   SELECT MAX(sfca001)+1 INTO l_sfca.sfca001    #RUN CARD編號
     FROM sfca_t
    WHERE sfcaent   = l_sfca.sfcaent
      AND sfcadocno = l_sfca.sfcadocno
   LET l_sfca.sfca002   = 0           #變更版本
   LET l_sfca.sfca003   = l_sfca003   #生產數量
   LET l_sfca.sfca004   = 0           #完工數量
   LET l_sfca.sfca005   = '1'         #RUN CARD類型:1:一般
   INSERT INTO sfca_t VALUES(l_sfca.*)
   IF SQLCA.sqlcode THEN
      CALL cl_err('ins sfca_t',SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF


   UPDATE sfcg_t SET sfcg004 = l_sfca.sfca001,  #新RunCard編號
                     sfcg005 = l_qty_sum        #合併轉入數量
    WHERE sfcgent   = l_sfcg.sfcgent
      AND sfcgdocno = l_sfcg.sfcgdocno
      AND sfcg001   = l_sfcg.sfcg001
   IF SQLCA.sqlcode THEN
      CALL cl_err('upd sfcg_t',SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #抓出主runcard的工艺资料
   LET l_sql = " SELECT * FROM sfcb_t ",
               "  WHERE sfcbent  = ",g_enterprise,
               "    AND sfcbdocno='",g_detail_d[l_main].b_sfcadocno,"' ", #工单
               "    AND sfcb001  = ",g_detail_d[l_main].b_sfca001         #RUN CARD
   PREPARE asfp302_combine_p1 FROM l_sql
   DECLARE asfp302_combine_c1 CURSOR FOR asfp302_combine_p1
   LET l_sfcb002 = 0
   FOREACH asfp302_combine_c1 INTO l_sfcb.*
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach s_asft310_confirm_chk_c1',SQLCA.sqlcode,1)
         RETURN
      END IF
      
      #更新所有数量为0
      #更新当站的合并转入数量,及相对应的待xx数量
      #找到当站制程后面的所有项次，反之没找到的项次，将报工项取消勾选（不能直接找到所有前站的项次取消勾选，还有平行的项次、自己本身群组的其他站点都不应该有报工项）

      #INITIALIZE l_sfcb.* TO NULL
      #LET l_sfcb.sfcbent    = g_enterprise   #企業代碼
      #LET l_sfcb.sfcbsite   = g_site         #營運據點
      #LET l_sfcb.sfcbdocno  = g_detail_d[l_i].b_sfcadocno   #單號
      LET l_sfcb.sfcb001	 = l_sfca.sfca001 #RUN CARD
      #LET l_sfcb002 = l_sfcb002 + 1
      #LET l_sfcb.sfcb002	 = l_sfcb002      #項次
      #LET l_sfcb.sfcb003	 = g_detail_d[l_i].b_sfcb003   #本站作業
      #LET l_sfcb.sfcb004	 = g_detail_d[l_i].b_sfcb004   #作業序
      #LET l_sfcb.sfcb005	 =    #群組性質
      #LET l_sfcb.sfcb006	 =    #群組
      #LET l_sfcb.sfcb007	 =    #上站作業
      #LET l_sfcb.sfcb008	 =    #上站作業序
      #LET l_sfcb.sfcb009	 =    #下站作業
      #LET l_sfcb.sfcb010	 =    #下站作業序
      #LET l_sfcb.sfcb011	 =    #工作站
      #LET l_sfcb.sfcb012	 =    #允許委外
      #LET l_sfcb.sfcb013	 =    #主要加工廠
      #LET l_sfcb.sfcb014	 =    #Move in
      #LET l_sfcb.sfcb015	 =    #Check in
      #LET l_sfcb.sfcb016	 =    #報工站
      #LET l_sfcb.sfcb017	 =    #PQC
      #LET l_sfcb.sfcb018	 =    #Check out
      #LET l_sfcb.sfcb019	 =    #Move out
      #LET l_sfcb.sfcb020	 =    #轉出單位
      #LET l_sfcb.sfcb021	 =    #單位轉換率分子
      #LET l_sfcb.sfcb022	 =    #單位轉換率分母
      #LET l_sfcb.sfcb023	 =    #固定工時
      #LET l_sfcb.sfcb024	 =    #標準工時
      #LET l_sfcb.sfcb025	 =    #固定機時
      #LET l_sfcb.sfcb026	 =    #標準機時
      #LET l_sfcb.sfcb027	 =    #標準產出量
      LET l_sfcb.sfcb028	 = 0   #良品轉入
      LET l_sfcb.sfcb029	 = 0   #重工轉入
      LET l_sfcb.sfcb030	 = 0   #回收轉入
      LET l_sfcb.sfcb031	 = 0   #分割轉入
      IF l_sfcb.sfcb003 = g_detail_d[l_main].b_sfcb003 AND l_sfcb.sfcb004 = g_detail_d[l_main].b_sfcb004 THEN
         LET l_sfcb.sfcb032 = l_qty_sum   #合併轉入
         LET l_sfcb.sfcb050 = l_qty_sum   #在製數
      ELSE
         LET l_sfcb.sfcb032 = 0   #合併轉入
         LET l_sfcb.sfcb050 = 0   #在製數
      END IF
      LET l_sfcb.sfcb033	 = 0   #良品轉出
      LET l_sfcb.sfcb034	 = 0   #重工轉出
      LET l_sfcb.sfcb035	 = 0   #回收轉出
      LET l_sfcb.sfcb036	 = 0   #當站報廢
      LET l_sfcb.sfcb037	 = 0   #當站下線
      LET l_sfcb.sfcb038	 = 0   #分割轉出
      LET l_sfcb.sfcb039	 = 0   #合併轉出
      LET l_sfcb.sfcb040	 = 0   #Bonus
      LET l_sfcb.sfcb041	 = 0   #委外加工數?
      LET l_sfcb.sfcb042	 = 0   #委外完工數
      LET l_sfcb.sfcb043	 = 0   #盤點數
      #LET l_sfcb.sfcb044	 =    #預計開工日
      #LET l_sfcb.sfcb045	 =    #預計完工日
      LET l_sfcb.sfcb046    = 0   #待Move in數
      LET l_sfcb.sfcb047    = 0   #待Check in數
      #LET l_sfcb.sfcb050    = 0   #在製數
      LET l_sfcb.sfcb051    = 0   #待PQC數
      LET l_sfcb.sfcb048    = 0   #待Check out數
      LET l_sfcb.sfcb049    = 0   #待Move out數
      #CASE
      #   WHEN l_sfcb.sfcb014 = 'Y'   #Move in
      #        LET l_sfcb.sfcb046 = l_qty_sum   #待Move in數
      #   WHEN l_sfcb.sfcb015 = 'Y'   #Check in
      #        LET l_sfcb.sfcb047 = l_qty_sum   #待Check in數
      #   WHEN l_sfcb.sfcb016 = 'Y'   #報工站
      #        LET l_sfcb.sfcb050 = l_qty_sum   #在製數
      #   WHEN l_sfcb.sfcb017 = 'Y'   #PQC
      #        LET l_sfcb.sfcb051 = l_qty_sum   #待PQC數
      #   WHEN l_sfcb.sfcb018 = 'Y'   #Check out
      #        LET l_sfcb.sfcb048 = l_qty_sum   #待Check out數
      #   WHEN l_sfcb.sfcb019 = 'Y'   #Move out
      #        LET l_sfcb.sfcb049 = l_qty_sum   #待Move out數
      #END CASE
      #LET l_sfcb.sfcb052	 =    #轉入單位
      #LET l_sfcb.sfcb053	 =    #轉入單位轉換率分子
      #LET l_sfcb.sfcb054	 =    #轉入單位轉換率分母
      #LET l_sfcb.sfcb055	 =    #回收站

      INSERT INTO sfcb_t VALUES(l_sfcb.*)
      IF SQLCA.sqlcode THEN
         CALL cl_err('ins sfcb_t',SQLCA.sqlcode,1)
         CALL s_transaction_end('N','0')
         RETURN
      END IF
   END FOREACH


   #执行成功
   CALL cl_err('','adz-00217',1)
   CALL s_transaction_end('Y','0')
   
   CALL asfp302_b_fill()
END FUNCTION]]>
  </point>
  <point name="function.asfp302_upd_group_f_station" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#根据群组前的站点往后找群组中各线路的首站报工类别，若是之前找出来的那个站点的那条线路略过
PRIVATE FUNCTION asfp302_upd_group_f_station(p_sfcadocno,p_sfca001,p_sfcb005,p_sfcb006,p_sfcb003,p_sfcb004,p_sfcb007,p_sfcb008)
DEFINE p_sfcadocno     LIKE sfca_t.sfcadocno #工单
DEFINE p_sfca001       LIKE sfca_t.sfca001   #RUNCARD
DEFINE p_sfcb005       LIKE sfcb_t.sfcb005   #群组性质
DEFINE p_sfcb006       LIKE sfcb_t.sfcb006   #群组编号 
DEFINE p_sfcb003       LIKE sfcb_t.sfcb003   #排除的首站作业  
DEFINE p_sfcb004       LIKE sfcb_t.sfcb004   #排除的首站作业序
DEFINE p_sfcb007       LIKE sfcb_t.sfcb007   #群组前的作业
DEFINE p_sfcb008       LIKE sfcb_t.sfcb008   #群组前的作业序
DEFINE l_sql STRING
     
#   LET l_sql = "SELECT * FROM sfcb_t ",
#               " WHERE "
#
END FUNCTION]]>
  </point>
  <point name="function.asfp302_split_chk" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#拆分前检查
PRIVATE FUNCTION asfp302_split_chk()
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_i         LIKE type_t.num5
   DEFINE l_cnt       LIKE type_t.num5
   DEFINE l_sfaastus  LIKE sfaa_t.sfaastus
   
   LET r_success = TRUE

   LET l_cnt = 0
   FOR l_i = 1 TO g_detail_cnt
       IF g_detail_d[l_i].sel = 'Y' THEN
          #若所選項目有多筆，不可執行拆分
          LET l_cnt = l_cnt + 1
          IF l_cnt > 1 THEN
             #待拆分RUNCARD一次不可选择多笔，不可拆分！请指定一笔需拆分的RUNCARD！
             CALL cl_err('','asf-00272',1)
             LET r_success = FALSE
             RETURN r_success
          END IF
          
          #工单未结案  单身显示时已筛选了，防止期间有人再做了结案动作
          SELECT sfaastus INTO l_sfaastus
            FROM sfaa_t
           WHERE sfaaent   = g_enterprise
             AND sfaadocno = g_detail_d[l_i].b_sfcadocno
          IF l_sfaastus MATCHES '[CEM]' THEN 
             #工单已结案，不可异动
             CALL cl_err(g_detail_d[l_i].b_sfcadocno,'asf-00264',1)
             LET r_success = FALSE
             RETURN r_success
          END IF
          
          #检查本次异动数量
          IF cl_null(g_detail_d[l_i].issue_qty) THEN 
             #异动量不可为空，请输入
             CALL cl_err('','asf-00282',1)
             LET r_success = FALSE
             RETURN r_success
          END IF
          IF g_detail_d[l_i].issue_qty = 0 THEN
             #待拆分数量为0，无需拆分！请确认
             CALL cl_err('','asf-00275',1)
             LET r_success = FALSE
             RETURN r_success
          END IF
          IF g_detail_d[l_i].issue_qty < 0 THEN
             #数量不可小于0，请重新录入
             CALL cl_err('','agl-00041',1)
             LET r_success = FALSE
             RETURN r_success
          END IF
          IF g_detail_d[l_i].issue_qty > g_detail_d[l_i].wip_qty THEN
             #异动量不可大于在制量，请重新输入
             CALL cl_err('','asf-00252',1)
             LET r_success = FALSE
             RETURN r_success
          END IF
   
       END IF
   END FOR
   #有且仅有一笔待处理项
   IF l_cnt = 0 THEN
      #未选择待拆分RUNCARD，不可拆分！请指定一笔待拆分的RUNCARD！
      CALL cl_err('','asf-00271',1)
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1 "
   END IF]]>
  </point>
  <point name="b_fill.foreach_into" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   g_detail_d[l_ac].sel,g_detail_d[l_ac].b_sfcadocno,g_detail_d[l_ac].ismain,g_detail_d[l_ac].b_sfca001,
   g_detail_d[l_ac].b_sfaa010,g_detail_d[l_ac].b_sfaa010_imaal003,g_detail_d[l_ac].b_sfaa010_imaal004,
   g_detail_d[l_ac].b_sfaa019,g_detail_d[l_ac].b_sfaa020,g_detail_d[l_ac].b_sfaa002,g_detail_d[l_ac].b_sfca003,
   g_detail_d[l_ac].b_sfca004,g_detail_d[l_ac].b_sfaa016,g_detail_d[l_ac].b_sfcb003,g_detail_d[l_ac].b_sfcb004,
   g_detail_d[l_ac].b_sfcb011,g_detail_d[l_ac].wip_qty,g_detail_d[l_ac].issue_qty]]>
  </point>
  <point name="b_fill.foreach_iside" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL s_desc_get_item_desc(g_detail_d[l_ac].b_sfaa010)
         RETURNING g_detail_d[l_ac].b_sfaa010_imaal003,g_detail_d[l_ac].b_sfaa010_imaal004]]>
  </point>
  <point name="b_fill.other_table" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL g_detail_d.deleteElement(l_ac)
   LET g_rec_b = l_ac - 1]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_sql = " SELECT 'N',sfcadocno,'N',sfca001,sfaa010,'','',sfaa019,sfaa020, ",
               "        sfaa002,sfca003,sfca004,sfaa016,sfcb003,sfcb004,sfcb011, ",  
               "        (sfcb028+sfcb029+sfcb030+sfcb031+sfcb032-sfcb033-sfcb034-sfcb035-sfcb036-sfcb037-sfcb038-sfcb039), ",
               "        0 ",
               "   FROM sfca_t,sfcb_t,sfaa_t ",
               "  WHERE sfcaent   = sfcbent ",
               "    AND sfcadocno = sfcbdocno ",
               "    AND sfca001   = sfcb001 ",
               "    AND sfcaent   = sfaaent ",
               "    AND sfcadocno = sfaadocno ",
               "    AND sfcaent   = ? ",
               "    AND sfcasite  = '",g_site,"' ",
               "    AND sfaastus NOT IN ('C','E','M') ",  #未结案的
               "    AND (sfcb028+sfcb029+sfcb030+sfcb031+sfcb032-sfcb033-sfcb034-sfcb035-sfcb036-sfcb037-sfcb038-sfcb039) > 0 ",  #在制量>0代表在报工类型中有待报工数量
               "    AND sfcb016 = 'Y' ",  #报工站
               "    AND sfcb005 !='3' ",  #排除无顺序群组--因新增runcard时无法处理 暂且排除，由SA分析后再做处理
               "    AND ",g_wc CLIPPED]]>
  </point>
  <point name="filter.detail_cnt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_rec_b = 1]]>
  </point>
  <point name="global.argv" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_detail_d_t       type_g_detail_d
DEFINE g_rec_b            LIKE type_t.num5 ]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     sel                LIKE type_t.chr1,
                     b_sfcadocno        LIKE sfca_t.sfcadocno,
                     ismain             LIKE type_t.chr1,
                     b_sfca001          LIKE sfca_t.sfca001,
                     b_sfaa010          LIKE sfaa_t.sfaa010,
                     b_sfaa010_imaal003 LIKE imaal_t.imaal003,
                     b_sfaa010_imaal004 LIKE imaal_t.imaal004,
                     b_sfaa019          LIKE sfaa_t.sfaa019,
                     b_sfaa020          LIKE sfaa_t.sfaa020,
                     b_sfaa002          LIKE sfaa_t.sfaa002,
                     b_sfca003          LIKE sfca_t.sfca003,
                     b_sfca004          LIKE sfca_t.sfca004,
                     b_sfaa016          LIKE sfaa_t.sfaa016,
                     b_sfcb003          LIKE sfcb_t.sfcb003,
                     b_sfcb004          LIKE sfcb_t.sfcb004,  
                     b_sfcb011          LIKE sfcb_t.sfcb011,
                     wip_qty            LIKE sfcb_t.sfcb028,
                     issue_qty          LIKE sfcb_t.sfcb028
                     END RECORD]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE lwin_curr      ui.Window
   DEFINE lfrm_curr      ui.Form
   DEFINE ls_path        STRING
]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET lwin_curr = ui.Window.getCurrent()
   LET lfrm_curr = lwin_curr.getForm()
   LET ls_path = os.Path.join(os.Path.join(FGL_GETENV("ERP"),"cfg"),"4tb")
   LET ls_path = os.Path.join(ls_path,"toolbar_q.4tb")
   CALL lfrm_curr.loadToolBar(ls_path)]]>
  </point>
  <point name="query.after_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_detail_d.clear()
   
   LET g_action_choice = 'c'
   LET ls_wc = g_wc

   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      #CONSTRUCT g_wc ON b_sfcadocno,b_sfca001,b_sfaa010,
      #                  b_sfaa019,b_sfaa020,b_sfaa002,
      #                  b_sfca003,b_sfca004,b_sfaa016,
      #                  b_sfcb003,b_sfcb004,b_sfcb011
      CONSTRUCT g_wc ON sfcadocno,sfca001,sfaa010,
                        sfaa019,sfaa020,sfaa002,
                        sfca003,sfca004,sfaa016,
                        sfcb003,sfcb004,sfcb011
           FROM s_detail1[1].b_sfcadocno,s_detail1[1].b_sfca001,s_detail1[1].b_sfaa010,
                s_detail1[1].b_sfaa019,s_detail1[1].b_sfaa020,s_detail1[1].b_sfaa002,
                s_detail1[1].b_sfca003,s_detail1[1].b_sfca004,s_detail1[1].b_sfaa016,
                s_detail1[1].b_sfcb003,s_detail1[1].b_sfcb004,s_detail1[1].b_sfcb011
      
         BEFORE CONSTRUCT
#sa              CALL cl_qbe_display_condition(lc_qbe_sn)
      
         ON ACTION controlp INFIELD b_sfcadocno  #工单单号
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfaasite ='",g_site,"' "
            CALL q_sfaadocno_7()
            DISPLAY g_qryparam.return1 TO b_sfcadocno
            NEXT FIELD b_sfcadocno                  #返回原欄位
      
         ON ACTION controlp INFIELD b_sfca001   #RUNCARD
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfcasite ='",g_site,"' "
            CALL q_sfca001_2()
            DISPLAY g_qryparam.return1 TO b_sfca001
            NEXT FIELD b_sfca001                    #返回原欄位
      
         ON ACTION controlp INFIELD b_sfaa010   #生产料号
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()
            DISPLAY g_qryparam.return1 TO b_sfaa010
            NEXT FIELD b_sfaa010                    #返回原欄位
      
         ON ACTION controlp INFIELD b_sfaa002   #生管员
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()
            DISPLAY g_qryparam.return1 TO b_sfaa002
            NEXT FIELD b_sfaa002                    #返回原欄位
      
         ON ACTION controlp INFIELD b_sfaa016   #制程编号
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            CALL q_ecba002()
            DISPLAY g_qryparam.return1 TO b_sfaa016
            NEXT FIELD b_sfaa016                    #返回原欄位
      
         ON ACTION controlp INFIELD b_sfcb003   #作业编号
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "221"
            CALL q_oocq002()
            DISPLAY g_qryparam.return1 TO b_sfcb003
            NEXT FIELD b_sfcb003                   #返回原欄位
      
      END CONSTRUCT

      BEFORE DIALOG
      
      ON ACTION accept
         ACCEPT DIALOG

      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG

      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG

   END DIALOG
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      RETURN
   END IF
   
   LET g_error_show = 1
   CALL asfp302_b_fill()
   #LET l_ac = g_master_idx
   CALL asfp302_fetch()
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   RETURN  #不走下面]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_rec_b = g_detail_d.getLength()
   
   CALL asfp302_b_fill()  #进画面先直接显示资料]]>
  </point>
  <point name="ui_dialog.before_dialog2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)]]>
  </point>
  <point name="ui_dialog.more_action" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL asfp302_query()
               #LET l_ac = ARR_CURR()
            END IF
         
         ON ACTION combine   #合并
            LET g_action_choice="combine"
            IF cl_auth_chk_act("combine") THEN
               CALL asfp302_combine()
            END IF
         
         ON ACTION split     #拆分
            LET g_action_choice="split"
            IF cl_auth_chk_act("split") THEN
               CALL asfp302_split()
            END IF]]>
  </point>
  <point name="ui_dialog.more_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="ui_dialog.more_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         INPUT ARRAY g_detail_d FROM s_detail1.*
             #ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
             ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                  INSERT ROW = FALSE,
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
         
            BEFORE INPUT
               #CALL asfp310_b_fill_sfaa()
               LET g_rec_b = g_detail_d.getLength()
         
            BEFORE ROW
               #LET l_cmd = ''
               LET l_ac = ARR_CURR()
            
               LET g_rec_b = g_detail_d.getLength()
               #LET l_cmd='u'
               LET g_detail_d_t.* = g_detail_d[l_ac].*  #BACKUP
         
            AFTER FIELD sel
               IF NOT cl_null(g_detail_d[l_ac].sel) THEN
                  IF g_detail_d[l_ac].sel NOT MATCHES '[YN]' THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
         
            AFTER FIELD ismain
               IF NOT cl_null(g_detail_d[l_ac].ismain) THEN
                  IF g_detail_d[l_ac].ismain NOT MATCHES '[YN]' THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            
            AFTER FIELD issue_qty
               IF g_detail_d[l_ac].issue_qty < 0 THEN
                  CALL cl_err('','agl-00041',1)
                  NEXT FIELD CURRENT
               END IF
               
               IF NOT cl_null(g_detail_d[l_ac].issue_qty) AND g_detail_d[l_ac].issue_qty > g_detail_d[l_ac].wip_qty THEN
                  CALL cl_err('','asf-00252',1)
                  NEXT FIELD CURRENT
               END IF

            ON ROW CHANGE
               IF INT_FLAG THEN
                  CALL cl_err('',9001,0)
                  LET INT_FLAG = 0
                  LET g_detail_d[l_ac].* = g_detail_d_t.*
                  NEXT FIELD sel
               END IF
         
         
            AFTER ROW
         
         
            AFTER INPUT
    
         END INPUT]]>
  </point>
  <point name="ui_dialog.onaction_selall" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #CALL asfp302_sel_all("Y")]]>
  </point>
  <point name="ui_dialog.onaction_selnone" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #CALL asfp302_sel_all("N")]]>
  </point>
  <section id="asfp302.b_fill" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION asfp302_b_fill()
 
   DEFINE ls_wc           STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   PREPARE asfp302_sel FROM g_sql
   DECLARE b_fill_curs CURSOR FOR asfp302_sel
   
   CALL g_detail_d.clear()
   #add-point:b_fill段其他頁簽清空
   {<point name="b_fill.clear"/>}
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs USING g_enterprise INTO 
   #add-point:b_fill段foreach_into
   {<point name="b_fill.foreach_into"/>}
   #end add-point
   
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      #add-point:b_fill段資料填充
      {<point name="b_fill.foreach_iside"/>}
      #end add-point
      
      CALL asfp302_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            CALL cl_err( "", 9035, 1 )
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.other_table"/>}
   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE asfp302_sel
   
   LET l_ac = 1
   CALL asfp302_fetch()
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.after_b_fill"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="asfp302.description" ver="53" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000065
#+ 
#+ Filename...: asfp302
#+ Description: RUNCARD拆分合併作業
#+ Creator....: 00768(2014/04/28)
#+ Modifier...: 00768(2014/06/30)
#+ Buildtype..: 應用 p02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="asfp302.detail_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION asfp302_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段
   {<point name="detail_show.detail_show"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="asfp302.fetch" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION asfp302_fetch()
 
   DEFINE li_ac           LIKE type_t.num5
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   #add-point:單身填充後
   {<point name="fetch.after_fill" />}
   #end add-point 
   
   LET l_ac = li_ac
   
END FUNCTION
]]>
  </section>
  <section id="asfp302.filter" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION asfp302_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point    
 
   DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
      ON UPDATE
 
   END DISPLAY
 
   LET l_ac = 1
   LET g_detail_cnt = 1
   #add-point:filter段define
   {<point name="filter.detail_cnt"/>}
   #end add-point    
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
   
   CALL asfp302_b_fill()
   CALL asfp302_fetch()
   
END FUNCTION
]]>
  </section>
  <section id="asfp302.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter欄位解析
PRIVATE FUNCTION asfp302_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="asfp302.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION asfp302_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = asfp302_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="asfp302.global" ver="1" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc" 
 
#模組變數(Module Variables)
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              
DEFINE l_ac_d               LIKE type_t.num5              #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num5              #目前所在頁數
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num5
 
TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
TYPE type_g_detail_d RECORD
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_detail_d  DYNAMIC ARRAY OF type_g_detail_d
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="asfp302.init" ver="1" status="" src="s">
    <![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION asfp302_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
 
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="asfp302.main" ver="1" status="" src="s">
    <![CDATA[#+ 作業開始 
MAIN
   DEFINE ls_js  STRING
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("asf","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_asfp302 WITH FORM cl_ap_formpath("asf",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL asfp302_init()   
 
      #進入選單 Menu (="N")
      CALL asfp302_ui_dialog() 
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_asfp302
   END IF 
   
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
  </section>
  <section id="asfp302.other_function" ver="1" status="" src="s">
    <![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
  </section>
  <section id="asfp302.query" ver="1" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION asfp302_query()
   DEFINE ls_wc      STRING
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define" />}
   #end add-point 
   
   #add-point:cs段after_construct
   {<point name="query.after_construct" />}
   #end add-point
        
   LET g_error_show = 1
   CALL asfp302_b_fill()
   LET l_ac = g_master_idx
   CALL asfp302_fetch()
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="asfp302.ui_dialog" ver="1" status="" src="s">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION asfp302_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   LET g_detail_cnt = g_detail_d.getLength()
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
 
      CALL cl_dlg_query_bef_disp()  #相關查詢
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
 
         BEFORE DIALOG
            IF g_detail_d.getLength() > 0 THEN
               CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
            ELSE
               CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
            END IF
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "Y"
            END FOR
            #add-point:ui_dialog段on action selall
            {<point name="ui_dialog.onaction_selall"/>}
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "N"
            END FOR
            #add-point:ui_dialog段on action selnone
            {<point name="ui_dialog.onaction_selnone"/>}
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "Y"
               END IF
            END FOR
            #add-point:ui_dialog段on action sel
            {<point name="ui_dialog.onaction_sel"/>}
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "N"
               END IF
            END FOR
            #add-point:ui_dialog段on action unsel
            {<point name="ui_dialog.onaction_unsel"/>}
            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL asfp302_filter()
            #add-point:ON ACTION filter
            {<point name="menu.filter" />}
            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION accept
            CALL asfp302_query()
 
         # 條件清除
         ON ACTION qbeclear
 
         # 重新整理
         ON ACTION datarefresh
            LET g_error_show = 1
            CALL asfp302_b_fill()
            CALL asfp302_fetch()
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
  </section>
</add_points>
