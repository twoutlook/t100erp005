<add_points prog="asft310_01" std_prog="asft310_01" erpver="1.0" module="ASF" ver="3" env="s" zone="t10dev" booking="Y" type="S" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="Y" status="" />
  </other>
  <point name="free_style.variable" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_sfdadocno  LIKE sfda_t.sfdadocno
DEFINE g_success    LIKE type_t.num5
DEFINE l_success    LIKE type_t.num5
DEFINE l_success_tot  LIKE type_t.num5
DEFINE g_para         LIKE type_t.chr80 #单别参数
DEFINE g_ref_unit     LIKE type_t.chr1  #是否启用参考单位
DEFINE g_ooba002      LIKE ooba_t.ooba002  #单别
DEFINE g_count        LIKE type_t.num5  #套数单身笔数

DEFINE g_choice       LIKE type_t.chr1

#單頭 type 宣告
DEFINE tm           RECORD
                    wc          STRING,                #QBE
                    issue_type  LIKE type_t.chr1,      #产生方式
                    less        LIKE type_t.chr1,      #库存不足仍产生
                    expand      LIKE type_t.chr1,      #自动展至仓储批
                    return      LIKE type_t.chr1,      #依发料批号退料
                    reason      LIKE oocq_t.oocq002,   #预设理由码
                    reason_desc LIKE oocql_t.oocql004  #预设理由码说明
                    END RECORD
DEFINE tm2          RECORD
                    wc          STRING,                   #QBE
                    inag004_i   LIKE inag_t.inag004,      #库位
                    inag005_i   LIKE inag_t.inag005,      #储位
                    inag006_i   LIKE inag_t.inag006,      #批号
                    inag003_i   LIKE inag_t.inag003       #库存管理特征
                    END RECORD
#單身 type 宣告
 TYPE type_g_sfdc_d        RECORD
   sfdcseq LIKE sfdc_t.sfdcseq,
   sfdc001 LIKE sfdc_t.sfdc001,
   sfdc002 LIKE sfdc_t.sfdc002,
   sfdc003 LIKE sfdc_t.sfdc003,
   sfba002 LIKE type_t.chr80, 
   sfba002_desc LIKE type_t.chr80, 
   sfba003 LIKE type_t.chr80, 
   sfba003_desc LIKE type_t.chr80, 
   sfba004 LIKE type_t.chr80, 
   sfdc004 LIKE sfdc_t.sfdc004,
   sfdc004_desc LIKE type_t.chr500,
   sfdc004_desc2 LIKE type_t.chr80, 
   sfdc005 LIKE sfdc_t.sfdc005,
   sfba028 LIKE type_t.chr80,  
   imae092 LIKE type_t.chr80, 
   imaf034 LIKE type_t.chr80,
   sfdc006 LIKE sfdc_t.sfdc006,
   sfdc006_desc LIKE type_t.chr500,
   sfba013 LIKE type_t.chr80, 
   sfba016 LIKE type_t.chr80, 
   sfdc007 LIKE sfdc_t.sfdc007,
   sfdc009 LIKE sfdc_t.sfdc009,
   sfdc009_desc LIKE type_t.chr500,
   sfdc010 LIKE sfdc_t.sfdc010,
   sfdc012 LIKE sfdc_t.sfdc012,
   sfdc012_desc LIKE type_t.chr500,
   sfdc013 LIKE sfdc_t.sfdc013,
   sfdc013_desc LIKE type_t.chr500,
   sfdc014 LIKE sfdc_t.sfdc014,
   sfdc016 LIKE sfdc_t.sfdc016,
   sfdc015 LIKE sfdc_t.sfdc015,
   sfdc015_desc LIKE type_t.chr500
       END RECORD



#模組變數(Module Variables)

DEFINE g_sfdc_d          DYNAMIC ARRAY OF type_g_sfdc_d
DEFINE g_sfdc_d_t        type_g_sfdc_d

DEFINE g_sql                 STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_rec_b               LIKE type_t.num5
DEFINE l_ac                  LIKE type_t.num5

DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數

DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page

DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5
]]>
</point>
  <point name="input.a.page1.sfdc004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfdc_d[l_ac].sfdc004
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfdc_d[l_ac].sfdc004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfdc_d[l_ac].sfdc004_desc
]]>
</point>
  <point name="input.a.page1.sfdc006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfdc_d[l_ac].sfdc006
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfdc_d[l_ac].sfdc006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfdc_d[l_ac].sfdc006_desc
]]>
</point>
  <point name="input.a.page1.sfdc009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfdc_d[l_ac].sfdc009
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfdc_d[l_ac].sfdc009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfdc_d[l_ac].sfdc009_desc
]]>
</point>
  <point name="input.a.page1.sfdc010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_sfdc_d[l_ac].sfdc010) THEN 
            END IF 
]]>
</point>
  <point name="input.a.page1.sfdc012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfdc_d[l_ac].sfdcsite
            LET g_ref_fields[2] = g_sfdc_d[l_ac].sfdc012
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
            LET g_sfdc_d[l_ac].sfdc012_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfdc_d[l_ac].sfdc012_desc
]]>
</point>
  <point name="input.a.page1.sfdc013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfdc_d[l_ac].sfdcsite
            LET g_ref_fields[2] = g_sfdc_d[l_ac].sfdc012
            LET g_ref_fields[3] = g_sfdc_d[l_ac].sfdc013
            CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inabsite=? AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
            LET g_sfdc_d[l_ac].sfdc013_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfdc_d[l_ac].sfdc013_desc
]]>
</point>
  <point name="input.a.page1.sfdc015" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfdc_d[l_ac].sfdc015
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='226' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfdc_d[l_ac].sfdc015_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfdc_d[l_ac].sfdc015_desc
]]>
</point>
  <point name="input.a.page1.sfdcseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_sfda_m.sfdasite IS NOT NULL AND g_sfda_m.sfdadocno IS NOT NULL AND g_sfdc_d[g_detail_idx].sfdcseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfda_m.sfdasite != g_sfdasite_t OR g_sfda_m.sfdadocno != g_sfdadocno_t OR g_sfdc_d[g_detail_idx].sfdcseq != g_sfdc_d_t.sfdcseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfdc_t WHERE "||"sfdcent = '" ||g_enterprise|| "' AND "||"sfdcsite = '"||g_sfda_m.sfdasite ||"' AND "|| "sfdcdocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "sfdcseq = '"||g_sfdc_d[g_detail_idx].sfdcseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.sfdadocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_sfda_m.sfdasite) AND NOT cl_null(g_sfda_m.sfdadocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_sfda_m.sfdasite != g_sfdasite_t  OR g_sfda_m.sfdadocno != g_sfdadocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfda_t WHERE "||"sfdaent = '" ||g_enterprise|| "' AND "||"sfdasite = '"||g_sfda_m.sfdasite ||"' AND "|| "sfdadocno = '"||g_sfda_m.sfdadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.a.sfdasite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_sfda_m.sfdasite) AND NOT cl_null(g_sfda_m.sfdadocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_sfda_m.sfdasite != g_sfdasite_t  OR g_sfda_m.sfdadocno != g_sfdadocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfda_t WHERE "||"sfdaent = '" ||g_enterprise|| "' AND "||"sfdasite = '"||g_sfda_m.sfdasite ||"' AND "|| "sfdadocno = '"||g_sfda_m.sfdadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfdc_d[l_ac].sfdc004
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfdc_d[l_ac].sfdc004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfdc_d[l_ac].sfdc004_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfdc_d[l_ac].sfdc006
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfdc_d[l_ac].sfdc006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfdc_d[l_ac].sfdc006_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfdc_d[l_ac].sfdc009
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfdc_d[l_ac].sfdc009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfdc_d[l_ac].sfdc009_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfdc_d[l_ac].sfdcsite
            LET g_ref_fields[2] = g_sfdc_d[l_ac].sfdc012
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
            LET g_sfdc_d[l_ac].sfdc012_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfdc_d[l_ac].sfdc012_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfdc_d[l_ac].sfdcsite
            LET g_ref_fields[2] = g_sfdc_d[l_ac].sfdc012
            LET g_ref_fields[3] = g_sfdc_d[l_ac].sfdc013
            CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inabsite=? AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
            LET g_sfdc_d[l_ac].sfdc013_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfdc_d[l_ac].sfdc013_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfdc_d[l_ac].sfdc015
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='226' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfdc_d[l_ac].sfdc015_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfdc_d[l_ac].sfdc015_desc
]]>
</point>
  <point name="function.asft310_01_init" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION asft310_01_init()
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_error_show = 1


   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件

   #add-point:畫面資料初始化
   CALL cl_set_comp_visible("group_ware_input,group_ware_qbe",FALSE)
   IF g_prog[1,6]='asft31' THEN
      CALL cl_set_comp_visible("return",FALSE)
      CALL cl_set_combo_scc('issue_type','4014')
   END IF
   IF g_prog[1,6]='asft32' THEN
      CALL cl_set_comp_visible("less,expand",FALSE)
      CALL cl_set_combo_scc('issue_type','4017')
   END IF
   #當整體參數有使用參考單位時才顯示
   IF g_ref_unit = 'N' THEN
      CALL cl_set_comp_visible("sfdc009,sfdc010",FALSE) #參考單位
   END IF
   #由發料單別參數"發料理由碼不可空白"控制理由碼是不是一定要輸入
   #参数D-MFG-0032：發料理由碼是否可空白
   #IF cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0032') THEN
   CALL cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0032') RETURNING g_para
   IF g_para = 'N' THEN  #不可空白
      CALL cl_set_comp_required("reason",TRUE)
      CALL cl_set_comp_required("sfdc015",TRUE)
   END IF
   #end add-point

END FUNCTION]]>
</point>
  <point name="function.asft310_01_ui_dialog" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION asft310_01_ui_dialog()
   CALL cl_set_act_visible("accept,cancel", FALSE)

   WHILE TRUE

      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

         DISPLAY ARRAY g_sfdc_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1

            BEFORE ROW
               CALL asft310_01_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac

            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               CALL asft310_01_idx_chk()

         END DISPLAY

         BEFORE DIALOG
            LET g_curr_diag = ui.DIALOG.getCurrent()

            #有資料才進行fetch
            CALL asft310_01_ui_detailshow() #Setting the current row

            #筆數顯示
            CALL asft310_01_idx_chk()

         ON ACTION modify
            CALL asft310_01_input()
            CALL asft310_01_show()
         
         #产生到asft310主作业单身中去
         ON ACTION gen_b
            IF cl_ask_confirm('sub-00405') THEN
               CALL asft310_01_gen()
               LET g_action_choice = "exit"
               EXIT DIALOG
            END IF
   
         ON ACTION close
            LET INT_FLAG=FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG

         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG

         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF

         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet_detail",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet_detail",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden
            END IF

         ON ACTION controlo
            DISPLAY "Controlo"



         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG

      END DIALOG

      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF

   END WHILE

   CALL cl_set_act_visible("accept,cancel", TRUE)

END FUNCTION]]>
</point>
  <point name="function.asft310_01_ui_detailshow" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION asft310_01_ui_detailshow()
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)

   END IF


END FUNCTION]]>
</point>
  <point name="function.asft310_01_show" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION asft310_01_show()
   {<Local define>}
   DEFINE l_ac_t    LIKE type_t.num5
   {</Local define>}

   IF g_bfill = "Y" THEN
      CALL asft310_01_b_fill() #單身填充
   END IF

   #帶出公用欄位reference值


   LET l_ac_t = l_ac

   #讀入ref值(單頭)

   #將資料輸出到畫面上
   #DISPLAY BY NAME g_sfda_m.sfdadocno,g_sfda_m.sfdasite


   #讀入ref值(單身)
   FOR l_ac = 1 TO g_sfdc_d.getLength()
      #帶出公用欄位reference值

      #add-point:show段單身reference
      #单位
      CALL s_desc_get_unit_desc(g_sfdc_d[l_ac].sfdc006) RETURNING g_sfdc_d[l_ac].sfdc006_desc
      #参考单位
      CALL s_desc_get_unit_desc(g_sfdc_d[l_ac].sfdc009) RETURNING g_sfdc_d[l_ac].sfdc009_desc
      #理由码
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_sfdc_d[l_ac].sfdc015
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='226' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_sfdc_d[l_ac].sfdc015_desc = '', g_rtn_fields[1] , ''
      #需求料号品名规格
      CALL s_desc_get_item_desc(g_sfdc_d[l_ac].sfdc004) RETURNING g_sfdc_d[l_ac].sfdc004_desc,g_sfdc_d[l_ac].sfdc004_desc2
      #保税料
      SELECT imaf034
        INTO g_sfdc_d[l_ac].imaf034
        FROM imaf_t
       WHERE imafent = g_enterprise
         AND imafsite= g_site
         AND imaf001 = g_sfdc_d[l_ac].sfdc004
      #发料前调拨
      SELECT imae092 INTO g_sfdc_d[l_ac].imae092 FROM imae_t
       WHERE imaeent = g_enterprise
         AND imaesite= g_site
         AND imae001 = g_sfdc_d[l_ac].sfdc004
      #库位名称
      CALL s_desc_get_stock_desc(g_site,g_sfdc_d[l_ac].sfdc012) RETURNING g_sfdc_d[l_ac].sfdc012_desc
      #储位名称
      IF NOT cl_null(g_sfdc_d[l_ac].sfdc013) THEN
         CALL s_desc_get_locator_desc(g_site,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013) RETURNING g_sfdc_d[l_ac].sfdc013_desc
      END IF
      #工单信息-部位、作业、作业序、客供料、应发料、已发量
      SELECT sfba002,sfba003,sfba004,sfba028,
             sfba013,sfba016
        INTO g_sfdc_d[l_ac].sfba002,g_sfdc_d[l_ac].sfba003,g_sfdc_d[l_ac].sfba004,g_sfdc_d[l_ac].sfba028,
             g_sfdc_d[l_ac].sfba013,g_sfdc_d[l_ac].sfba016
        FROM sfba_t,sfaa_t
       WHERE sfbaent = sfaaent
         AND sfbadocno=sfaadocno
         AND sfbaent = g_enterprise
         AND sfbadocno=g_sfdc_d[l_ac].sfdc001
         AND sfbaseq = g_sfdc_d[l_ac].sfdc002
         AND sfbaseq1= g_sfdc_d[l_ac].sfdc003

      #部位说明
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = '215'
      LET g_chkparam.arg2 = g_sfdc_d[l_ac].sfba002
      CALL cl_ref_val("v_oocql002")
      LET g_sfdc_d[l_ac].sfba002_desc = g_chkparam.return1
      #作业说明
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = '221'
      LET g_chkparam.arg2 = g_sfdc_d[l_ac].sfba003
      CALL cl_ref_val("v_oocql002")
      LET g_sfdc_d[l_ac].sfba003_desc = g_chkparam.return1
      #end add-point
   END FOR





   LET l_ac = l_ac_t

   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()

END FUNCTION]]>
</point>
  <point name="function.asft310_01_b_fill" cite_std="N" status="" ver="1" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION asft310_01_b_fill()
   CALL g_sfdc_d.clear()    #g_sfdc_d 單頭及單身

   LET g_sql = "SELECT UNIQUE sfdcseq,sfdc001,sfdc002,sfdc003,'','','','','',sfdc004,'','',sfdc005,'','','',sfdc006,'','','',sfdc007,sfdc009,'',sfdc010,sfdc012,'',sfdc013,'',sfdc014,sfdc016,sfdc015,'' ",
               "  FROM asft310_01_sfdc_t"
   LET g_sql = g_sql, " ORDER BY sfdc001,sfdc002,sfdc003"
   PREPARE asft310_01_pb FROM g_sql
   DECLARE asft310_01_cs CURSOR FOR asft310_01_pb
   LET g_cnt = l_ac
   LET l_ac = 1
   FOREACH asft310_01_cs INTO g_sfdc_d[l_ac].sfdcseq,g_sfdc_d[l_ac].sfdc001,g_sfdc_d[l_ac].sfdc002,g_sfdc_d[l_ac].sfdc003,g_sfdc_d[l_ac].sfba002,g_sfdc_d[l_ac].sfba002_desc,g_sfdc_d[l_ac].sfba003,g_sfdc_d[l_ac].sfba003_desc,g_sfdc_d[l_ac].sfba004,g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc004_desc,g_sfdc_d[l_ac].sfdc004_desc2,g_sfdc_d[l_ac].sfdc005,g_sfdc_d[l_ac].sfba028,g_sfdc_d[l_ac].imae092,g_sfdc_d[l_ac].imaf034,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc006_desc,g_sfdc_d[l_ac].sfba013,g_sfdc_d[l_ac].sfba016,g_sfdc_d[l_ac].sfdc007,g_sfdc_d[l_ac].sfdc009,g_sfdc_d[l_ac].sfdc009_desc,g_sfdc_d[l_ac].sfdc010,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc012_desc,g_sfdc_d[l_ac].sfdc013,g_sfdc_d[l_ac].sfdc013_desc,g_sfdc_d[l_ac].sfdc014,g_sfdc_d[l_ac].sfdc016,g_sfdc_d[l_ac].sfdc015,g_sfdc_d[l_ac].sfdc015_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec AND g_error_show = 1 THEN
         CALL cl_err('', 9035, 1)
         EXIT FOREACH
      END IF

   END FOREACH
   LET g_error_show = 0

   CALL g_sfdc_d.deleteElement(g_sfdc_d.getLength())
   LET l_ac = g_cnt
   LET g_cnt = 0
   FREE asft310_01_pb
END FUNCTION]]>
</point>
  <point name="function.asft310_01" cite_std="N" status="" ver="1" src="s" new="Y" order="6" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 发退料需求产生
# Memo...........: 
# Usage..........: CALL asft310_01(p_sfdadocno)
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success      TRUE/FALSE产生成功否
# Date & Author..: 2014/01/07 By zhangllc
# Modify.........:
################################################################################
PUBLIC FUNCTION asft310_01(p_sfdadocno)
DEFINE p_sfdadocno  LIKE sfda_t.sfdadocno
DEFINE r_success    LIKE type_t.num5
DEFINE l_cnt        LIKE type_t.num5
DEFINE l_sql        STRING
DEFINE l_sfdc       RECORD LIKE sfdc_t.*

   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
   LET g_success = TRUE
   LET r_success = TRUE

   #检查套数单身是否有维护数据,没有维护套数单身,不需执行此功能
   SELECT COUNT(*) INTO g_count FROM sfdb_t
    WHERE sfdbent  = g_enterprise
      AND sfdbdocno= p_sfdadocno
   IF g_count = 0 THEN
      RETURN r_success
   END IF

   #检查事务中
   IF NOT s_transaction_chk('Y',1) THEN
      LET r_success = FALSE
      RETURN r_success
   END IF

   #检查参数
   IF cl_null(p_sfdadocno) THEN
      #传入值为空;请检查字段值是否录入
      CALL cl_err('','sub-00001',1)
      LET r_success = FALSE
      RETURN r_success
   END IF
   CALL cl_get_para(g_enterprise,g_site,'S-BAS-0028') RETURNING g_ref_unit #是否启用参考单位
   CALL s_aooi200_get_slip(p_sfdadocno) RETURNING l_success,g_ooba002

   #发退料单头讯息
   LET g_sfdadocno= p_sfdadocno
   
   SELECT * INTO g_sfda.* FROM sfda_t
    WHERE sfdaent = g_enterprise
      AND sfdadocno= g_sfdadocno
      
   #检查需求页签是否已存在资料
   SELECT COUNT(*) INTO l_cnt FROM sfdc_t
    WHERE sfdcent  = g_enterprise
      AND sfdcdocno= g_sfdadocno
   IF l_cnt > 0 THEN
      #已存在需求资料，请选择处理方式
      #1.全部删除:将发退料需求明细全部都删掉
      #2.删除未指定库位数据:将库位为空白的资料删掉
      #3.不删除
      CALL asft310_01_choice()
      CASE g_choice
         WHEN "1" #全部删除:将发退料需求明细全部都删掉
              DELETE FROM sfdc_t WHERE sfdcent = g_enterprise AND sfdcdocno=p_sfdadocno
              DELETE FROM sfdd_t WHERE sfddent = g_enterprise AND sfdddocno=p_sfdadocno
              DELETE FROM sfde_t WHERE sfdeent = g_enterprise AND sfdedocno=p_sfdadocno
              DELETE FROM sfdf_t WHERE sfdfent = g_enterprise AND sfdfdocno=p_sfdadocno
         WHEN "2" #删除未指定库位数据:将库位为空白的资料删掉
              #先根据sfdc、sfdd删除sfde、sfdf
              LET l_sql = " SELECT sfdc_t.* FROM sfdc_t ",
                          "  WHERE sfdcent  = ",g_enterprise,
                          "    AND sfdcdocno= '",p_sfdadocno,"' ",
                          "    AND (sfdc012  = ' ' OR sfdc012 IS null)"
              PREPARE asft310_01_p FROM l_sql
              DECLARE asft310_01_c CURSOR FOR asft310_01_p
              FOREACH asft310_01_c INTO l_sfdc.*
                  CALL s_asft310_chg_sfde_f_sfdc_del(l_sfdc.*) RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
              END FOREACH
              #再删除sfdd、sfdc
              DELETE FROM sfdd_t WHERE sfddent = g_enterprise AND sfdddocno=p_sfdadocno
                                   AND sfddseq in (select sfdcseq from sfdc_t
                                                    where sfdcent = g_enterprise
                                                      and sfdcdocno=p_sfdadocno
                                                      and (sfdc012  = ' ' OR sfdc012 IS null) )
              DELETE FROM sfdc_t WHERE sfdcent = g_enterprise AND sfdcdocno=p_sfdadocno AND sfdc012  = ' ' 
      END CASE
   END IF
   
   #畫面開啟 (identifier)
   OPEN WINDOW w_asft310_01 WITH FORM cl_ap_formpath("asf","asft310_01")

   #瀏覽頁簽資料初始化
   CALL cl_ui_init()

   #程式初始化
   CALL asft310_01_init()

   #進入選單 Menu (="N")
   CALL asft310_01_input()
   CALL asft310_01_show()
   CALL asft310_01_ui_dialog()

   #畫面關閉
   CLOSE WINDOW w_asft310_01

   LET g_action_choice = ""

   LET r_success = g_success
   RETURN r_success

END FUNCTION]]>
</point>
  <point name="function.asft310_01_set_entry_b" cite_std="N" status="" ver="1" src="s" new="Y" order="7" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION asft310_01_set_entry_b(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1

   CALL cl_set_comp_entry("sfdc016",TRUE)
   CALL cl_set_comp_entry("sfdc010",TRUE)  #参考单位申请数量
   CALL cl_set_comp_entry("sfdc012,sfdc013",TRUE)  #库位 储位

END FUNCTION]]>
</point>
  <point name="function.asft310_01_set_no_entry_b" cite_std="N" status="" ver="1" src="s" new="Y" order="8" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION asft310_01_set_no_entry_b(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1
DEFINE l_imaf055        LIKE imaf_t.imaf055  #库存管理特征
DEFINE l_success  LIKE type_t.num5
DEFINE l_sfba019  LIKE sfba_t.sfba019  #指定库位
DEFINE l_sfba020  LIKE sfba_t.sfba020  #指定储位

   #料件有使用庫存管理特徵时才可輸入库存管理特征栏位sfdc016
   IF NOT cl_null(g_sfdc_d[l_ac].sfdc004) THEN
      SELECT imaf055 INTO l_imaf055
        FROM imaf_t
       WHERE imafent = g_enterprise
         AND imafsite = g_site
         AND imaf001 = g_sfdc_d[l_ac].sfdc004
      IF l_imaf055 <> 'Y' THEN
         CALL cl_set_comp_entry("sfdc016",FALSE)
      END IF
   END IF
   #當料號有使用參考單位時，才允許輸入sfdc010参考单位申请数量
   IF g_ref_unit = 'N' THEN
      CALL cl_set_comp_entry("sfdc010",FALSE)  #参考单位申请数量
   ELSE
      IF cl_null(g_sfdc_d[l_ac].sfdc009) THEN
         CALL cl_set_comp_entry("sfdc010",FALSE)  #参考单位申请数量
      END IF
   END IF
   
   #工单、项次、项序不为空
   IF NOT cl_null(g_sfdc_d[l_ac].sfdc001) AND NOT cl_null(g_sfdc_d[l_ac].sfdc002) AND NOT cl_null(g_sfdc_d[l_ac].sfdc003) AND g_prog[1,6]='asft31' THEN
      #工單指定發料庫儲，發料時允許修改
      CALL s_aooi200_get_slip(g_sfdc_d[l_ac].sfdc001) RETURNING l_success,g_ooba002
      IF cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0050') = 'N' THEN
         SELECT sfba019,sfba020 INTO l_sfba019,l_sfba020
           FROM sfba_t
          WHERE sfbaent  = g_enterprise
            AND sfbadocno= g_sfdc_d[l_ac].sfdc001
            AND sfbaseq  = g_sfdc_d[l_ac].sfdc002
            AND sfbaseq1 = g_sfdc_d[l_ac].sfdc003
         IF NOT cl_null(l_sfba019) THEN
            CALL cl_set_comp_entry("sfdc012",FALSE)  #库位
         END IF
         IF NOT cl_null(l_sfba020) THEN
            CALL cl_set_comp_entry("sfdc013",FALSE)  #储位
         END IF
      END IF
   END IF
END FUNCTION]]>
</point>
  <point name="function.asft310_01_drop_tmp_table" cite_std="N" status="" ver="1" src="s" new="Y" order="9" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 删除临时表
# Memo...........: 必须用于事务外
#                  与asft310_01_cre_tmp_table对应
# Usage..........: CALL asft310_01_drop_tmp_table()
# Input parameter: 
# Return code....: 
# Date & Author..: 2014/01/07 By zhangllc
# Modify.........:
################################################################################
PUBLIC FUNCTION asft310_01_drop_tmp_table()
   WHENEVER ERROR CONTINUE
   
   #检查事务中
   IF NOT s_transaction_chk('N',1) THEN
      RETURN 
   END IF
   
   #刪除TEMP TABLE
   DROP TABLE asft310_01_sfdc_t
   
END FUNCTION]]>
</point>
  <point name="function.asft310_01_cre_tmp_table" cite_std="N" status="" ver="1" src="s" new="Y" order="10" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 建立临时表
# Memo...........: 必须用于事务外
# Usage..........: CALL asft310_01_cre_tmp_table()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success      临时表建立成功否
# Date & Author..: 2014/01/07 By zhangllc
# Modify.........:
################################################################################
PUBLIC FUNCTION asft310_01_cre_tmp_table()
DEFINE r_success       LIKE type_t.num5

   WHENEVER ERROR CONTINUE
   LET r_success = FALSE

   #检查事务中
   IF NOT s_transaction_chk('N',1) THEN
      RETURN r_success
   END IF
   
   DROP TABLE asft310_01_sfdc_t;
   #按sfdc表建立临时表
   SELECT * FROM sfdc_t
    WHERE sfdcent=0 AND sfdcsite='aa' AND sfdcdocno='aa' AND sfdcseq=0
      AND 0=1
     INTO TEMP asft310_01_sfdc_t
   IF SQLCA.sqlcode THEN
      CALL cl_err('create table',SQLCA.sqlcode,1)
      RETURN r_success
   END IF                                                           
   #CREATE UNIQUE INDEX asft310_01_sfdc_01 on asft310_01_sfdc_t (sfdcent,sfdcsite,sfdcdocno,sfdcseq)
   #IF SQLCA.sqlcode THEN
   #   CALL cl_err('create index',SQLCA.sqlcode,1)
   #   RETURN r_success
   #END IF           



   LET r_success = TRUE
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.asft310_01_idx_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="11" mark_hard="N">
<![CDATA[#显示单身光标所在位置
PRIVATE FUNCTION asft310_01_idx_chk()
   LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
   IF g_detail_idx > g_sfdc_d.getLength() THEN
      LET g_detail_idx = g_sfdc_d.getLength()
   END IF
   IF g_detail_idx = 0 AND g_sfdc_d.getLength() <> 0 THEN
      LET g_detail_idx = 1
   END IF
   DISPLAY g_detail_idx TO FORMONLY.idx
   DISPLAY g_sfdc_d.getLength() TO FORMONLY.cnt

END FUNCTION]]>
</point>
  <point name="function.asft310_01_input" cite_std="N" status="u" ver="1" src="s" new="Y" order="12" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION asft310_01_input()
   {<Local define>}
   DEFINE  l_cmd           LIKE type_t.chr1
   DEFINE  l_n             LIKE type_t.num5                #檢查重複用
   DEFINE  l_cnt           LIKE type_t.num5                #檢查重複用
   DEFINE  l_lock_sw       LIKE type_t.chr1                #單身鎖住否
   DEFINE  l_allow_insert  LIKE type_t.num5                #可新增否
   DEFINE  l_allow_delete  LIKE type_t.num5                #可刪除否
   DEFINE  l_count         LIKE type_t.num5
   DEFINE  l_i             LIKE type_t.num5
   DEFINE  l_insert        BOOLEAN
   DEFINE  lc_qbe_sn       LIKE type_t.num10
   DEFINE l_rate           LIKE inaj_t.inaj014  #单位换算率
   DEFINE l_inaa015        LIKE inaa_t.inaa015  #保税仓否
   DEFINE l_inaa010        LIKE inaa_t.inaa010  #成本库否
   DEFINE l_sfaa010        LIKE sfaa_t.sfaa010  #生产料号
   DEFINE l_imaf034        LIKE imaf_t.imaf034  #保税料
   DEFINE l_flag           LIKE type_t.num5
   DEFINE l_column         LIKE type_t.chr10
   {</Local define>}

   CALL cl_set_head_visible("","YES")
   
   #清除畫面
   CLEAR FORM
   INITIALIZE tm.* TO NULL
   INITIALIZE tm2.* TO NULL
   CALL g_sfdc_d.clear()
   CALL asft310_01_b_fill() #單身填充
   
   LET l_insert = FALSE
   LET g_action_choice = ""

   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")

   IF g_prog[1,6] = 'asft31' THEN
      LET tm.issue_type = cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0053')    #产生方式:由發料單別參數"發料需求產生方式預設"
      LET tm.less = cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0054')   #库存不足仍产生:依發料單別參數設定"依發料套數產生庫存不足仍產生預設"
      LET tm.expand = cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0055')    #自动展至仓储批：依發料單別參數預設"依發料套數產生自動展至庫儲批預設"
   END IF
   IF g_prog[1,6] = 'asft32' THEN
      LET tm.issue_type = cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0057')    #产生方式:依套數產生退料需求預設方式
      LET tm.return ='Y'    #依发料批号退料:預設勾選
   END IF
   IF cl_null(tm.issue_type) THEN LET tm.issue_type='1' END IF
   IF cl_null(tm.less) THEN LET tm.less = 'N' END IF
   IF cl_null(tm.expand) THEN LET tm.expand = 'N' END IF
   IF cl_null(tm.return) THEN LET tm.return = 'N' END IF
   
   CALL cl_set_comp_visible("group_ware_input,group_ware_qbe",FALSE)
   #INPUT
   IF (g_prog[1,6]='asft31' AND tm.issue_type = '2') OR (g_prog[1,6]='asft32' AND tm.issue_type='3') THEN
       CALL cl_set_comp_visible("group_ware_input",TRUE)
   END IF
   #CONSTRUCT
   IF (g_prog[1,6]='asft31' AND tm.issue_type = '3') THEN
       CALL cl_set_comp_visible("group_ware_qbe",TRUE)
   END IF
   
   IF (g_prog[1,6] = 'asft31' AND tm.issue_type = '2') OR (g_prog[1,6] = 'asft32' AND tm.issue_type = '3') THEN  #自行制定库位储位批号
       CALL cl_set_comp_required("inag004_i",TRUE) #仓库必输
   END IF

   DISPLAY tm.issue_type TO FORMONLY.issue_type
   DISPLAY tm.less TO FORMONLY.less
   DISPLAY tm.expand TO FORMONLY.expand
   DISPLAY tm.return TO FORMONLY.return

   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      #單頭
      CONSTRUCT BY NAME tm.wc ON imaa001,imaf051,imaa003,imaa009,imaf091,imaf092,imae092,imaf034,sfba028

         BEFORE CONSTRUCT
            #CALL cl_qbe_init()

         ON ACTION controlp INFIELD imaa001 #料号范围
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_imaa001_13()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa001  #顯示到畫面上
            NEXT FIELD imaa001                     #返回原欄位

         ON ACTION controlp INFIELD imaf051 #库存分群
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " imccsite ='",g_site,"' "
            CALL q_imcc051_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaf051  #顯示到畫面上
            NEXT FIELD imaf051                     #返回原欄位

         ON ACTION controlp INFIELD imaa003 #主分群
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa003  #顯示到畫面上
            NEXT FIELD imaa003                     #返回原欄位

         ON ACTION controlp INFIELD imaa009 #产品分类
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa009  #顯示到畫面上
            NEXT FIELD imaa009                     #返回原欄位
            
         ON ACTION controlp INFIELD imaf091 #料件预设库位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " inaasite ='",g_site,"' "
            CALL q_inaa001_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaf091  #顯示到畫面上
            NEXT FIELD imaf091                    #返回原欄位

         ON ACTION controlp INFIELD imaf092 #料件预设储位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inab002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaf092  #顯示到畫面上
            NEXT FIELD imaf092                    #返回原欄位

         #产生子画面单身
         ON ACTION gen_b_01
            CALL asft310_01_generate_chk() RETURNING l_column
            CASE l_column
                WHEN 'inag004_i'
                     NEXT FIELD inag004_i
                WHEN 'reason'
                     NEXT FIELD reason
                OTHERWISE
                     CALL asft310_01_generate()
                     CALL asft310_01_show()
            END CASE
   
      END CONSTRUCT
      
      #單頭段
      INPUT BY NAME tm.issue_type,tm.less,tm.expand,tm.return,tm.reason
         ATTRIBUTE(WITHOUT DEFAULTS)

         BEFORE INPUT

         ON CHANGE issue_type
            #INPUT
            IF (g_prog[1,6]='asft31' AND tm.issue_type = '2') OR (g_prog[1,6]='asft32' AND tm.issue_type='3') THEN
                CALL cl_set_comp_visible("group_ware_input,group_ware_qbe",FALSE)
                CALL cl_set_comp_visible("group_ware_input",TRUE)
            END IF
            #CONSTRUCT
            IF (g_prog[1,6]='asft31' AND tm.issue_type = '3') THEN
                CALL cl_set_comp_visible("group_ware_input,group_ware_qbe",FALSE)
                CALL cl_set_comp_visible("group_ware_qbe",TRUE)
            END IF
            
            #自動展開至倉儲批的選項如果在產生方式=3.依庫存量發料時，預設為Y，不可改
            CALL cl_set_comp_entry("expand",TRUE)
            IF (g_prog[1,6]='asft31' AND tm.issue_type = '3') THEN  #依库存量发料(QBE)
               LET tm.expand = 'Y'
               DISPLAY tm.expand TO FORMONLY.expand
               CALL cl_set_comp_entry("expand",FALSE)
            END IF
            
         AFTER FIELD reason
            #理由码
            IF NOT cl_null(tm.reason) THEN
               CALL s_azzi650_chk_exist_and_desc('226',tm.reason) RETURNING l_success,tm.reason_desc
               IF NOT l_success THEN
                  NEXT FIELD CURRENT
               END IF
               DISPLAY BY NAME tm.reason_desc
            END IF
            
         ON ACTION controlp INFIELD reason
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = tm.reason
            LET g_qryparam.arg1 = '226'
            CALL q_oocq002_5()
            LET tm.reason = g_qryparam.return1     #將開窗取得的值>
            CALL s_desc_get_acc_desc('226',tm.reason) RETURNING tm.reason_desc
            DISPLAY BY NAME tm.reason_desc
            NEXT FIELD reason

         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF

            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME tm.issue_type,tm.less,tm.expand,tm.return,tm.reason,tm.reason_desc

         #产生子画面单身
         ON ACTION gen_b_01
            CALL asft310_01_generate_chk() RETURNING l_column
            CASE l_column
                WHEN 'inag004_i'
                     NEXT FIELD inag004_i
                WHEN 'reason'
                     NEXT FIELD reason
                OTHERWISE
                     CALL asft310_01_generate()
                     CALL asft310_01_show()
            END CASE

      END INPUT

      #指定库位条件
      INPUT BY NAME tm2.inag004_i,tm2.inag005_i,tm2.inag006_i,tm2.inag003_i
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         BEFORE INPUT
            INITIALIZE tm2.wc TO NULL
            CALL asft310_01_set_entry()
            CALL asft310_01_set_no_entry()
            
         AFTER FIELD inag004_i
            #库位
            IF NOT cl_null(tm2.inag004_i) THEN
               #检查是否存在于库存资料档中
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = tm2.inag004_i
               IF NOT cl_chk_exist("v_inaa001_2") THEN
                  NEXT FIELD CURRENT
               END IF

               IF NOT cl_null(tm2.inag005_i) THEN
                  #需存在庫儲位資料
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = tm2.inag004_i
                  LET g_chkparam.arg3 = tm2.inag005_i
                  IF NOT cl_chk_exist("v_inab002") THEN
                     NEXT FIELD inag005_i
                  END IF
               END IF
            ELSE
               LET tm2.inag005_i = ' '
               LET tm2.inag006_i = ' '
               DISPLAY tm2.inag005_i TO inag005_i
               DISPLAY tm2.inag006_i TO inag006_i
            END IF
            CALL asft310_01_set_entry()
            CALL asft310_01_set_no_entry()

         #BEFORE FIELD inag005_i
         #   #储位
         #   CALL asft310_01_set_entry()
            
         AFTER FIELD inag005_i
            #储位
            IF NOT cl_null(tm2.inag005_i) THEN
               IF NOT cl_null(tm2.inag004_i) THEN
                  #需存在庫儲位資料
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = tm2.inag004_i
                  LET g_chkparam.arg3 = tm2.inag005_i
                  IF NOT cl_chk_exist("v_inab002") THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            ELSE
               LET tm2.inag006_i = ' '
               DISPLAY tm2.inag006_i TO inag006_i
            END IF
            CALL asft310_01_set_entry()
            CALL asft310_01_set_no_entry()
           
         #BEFORE FIELD inag006_i
         #   #批号
         #   CALL asft310_01_set_entry()
   
         ON ACTION controlp INFIELD inag004_i
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = tm2.inag004_i
            CALL q_inaa001_2()
            LET tm2.inag004_i = g_qryparam.return1     #將開窗取得的值>
            NEXT FIELD inag004_i
   
         ON ACTION controlp INFIELD inag005_i
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = tm2.inag005_i
            LET g_qryparam.arg1 = '226'
            CALL q_inab002_2()
            LET tm2.inag005_i = g_qryparam.return1     #將開窗取得的值>
            NEXT FIELD inag005_i
   
         ON ACTION controlp INFIELD inag006_i
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = tm2.inag006_i
            LET g_qryparam.arg1 = '226'
            CALL q_inag006()
            LET tm2.inag006_i = g_qryparam.return1     #將開窗取得的值>
            NEXT FIELD inag006_i
   
         ON ACTION controlp INFIELD inag003_i
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = tm2.inag003_i
            LET g_qryparam.arg1 = '226'
            CALL q_inag003()
            LET tm2.inag003_i = g_qryparam.return1     #將開窗取得的值>
            NEXT FIELD inag003_i
   
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
   
            CALL cl_showmsg()      #錯誤訊息統整顯示
            #DISPLAY BY NAME tm2.inag004_i,tm2.inag005_i,tm2.inag006_i,tm2.inag003_i
   
         #产生子画面单身
         ON ACTION gen_b_01
            CALL asft310_01_generate_chk() RETURNING l_column
            CASE l_column
                WHEN 'inag004_i'
                     NEXT FIELD inag004_i
                WHEN 'reason'
                     NEXT FIELD reason
                OTHERWISE
                     CALL asft310_01_generate()
                     CALL asft310_01_show()
            END CASE
   
      END INPUT

      #指定库位条件
      CONSTRUCT BY NAME tm2.wc ON inag004,inag005,inag006,inag003,inac003,inaa015,inaa010
   
         BEFORE CONSTRUCT
            LET tm2.inag004_i = ''
            LET tm2.inag005_i = ''
            LET tm2.inag006_i = ''
            LET tm2.inag003_i = ''
            #CALL cl_qbe_init()
   
         ON ACTION controlp INFIELD inag004   #库位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_inaa001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inag004  #顯示到畫面上
            NEXT FIELD inag004                     #返回原欄位
   
         ON ACTION controlp INFIELD inag005   #储位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " imccsite ='",g_site,"' "
            CALL q_inab002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inag005  #顯示到畫面上
            NEXT FIELD inag005                     #返回原欄位
   
         ON ACTION controlp INFIELD inag006   #批号
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inag006()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inag006  #顯示到畫面上
            NEXT FIELD inag006                     #返回原欄位
   
         ON ACTION controlp INFIELD inag003   #库存管理特征
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inag003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inag003  #顯示到畫面上
            NEXT FIELD inag003                     #返回原欄位
            
         ON ACTION controlp INFIELD inac003   #标签
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '220'
            CALL q_oocq002_5()                    #呼叫開窗
            DISPLAY g_qryparam.return1 TO inac003  #顯示到畫面上
            NEXT FIELD inac003                    #返回原欄位
   
         #产生子画面单身
         ON ACTION gen_b_01
            CALL asft310_01_generate_chk() RETURNING l_column
            CASE l_column
                WHEN 'inag004_i'
                     NEXT FIELD inag004_i
                WHEN 'reason'
                     NEXT FIELD reason
                OTHERWISE
                     CALL asft310_01_generate()
                     CALL asft310_01_show()
            END CASE
   
      END CONSTRUCT

      #Page1 預設值產生於此處
      INPUT ARRAY g_sfdc_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)

         #自訂ACTION(detail_input,page_1)


         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN
              CALL FGL_SET_ARR_CURR(g_sfdc_d.getLength()+1)
              LET g_insert = 'N'
           END IF

            CALL asft310_01_b_fill()
            LET g_rec_b = g_sfdc_d.getLength()

         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac

            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx

            LET g_rec_b = g_sfdc_d.getLength()

            IF g_rec_b >= l_ac AND g_sfdc_d[l_ac].sfdcseq IS NOT NULL THEN
               LET l_cmd='u'
               LET g_bfill = "N"
               CALL asft310_01_show()
               LET g_bfill = "Y"
               LET g_sfdc_d_t.* = g_sfdc_d[l_ac].*  #BACKUP
               CALL asft310_01_set_entry_b(l_cmd)
               CALL asft310_01_set_no_entry_b(l_cmd)
            ELSE
               LET l_cmd='a'
            END IF
            #其他table資料備份(確定是否更改用)

            #其他table進行lock


         BEFORE INSERT
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_sfdc_d[l_ac].* TO NULL
            LET g_sfdc_d_t.* = g_sfdc_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL asft310_01_set_entry_b(l_cmd)
            CALL asft310_01_set_no_entry_b(l_cmd)
            #预设项次，此项次最后不会写入到实体的sfdc_t,只是为了便于在本方面中进行单身的编辑保存等处理
            SELECT MAX(sfdcseq) INTO g_sfdc_d[l_ac].sfdcseq
              FROM asft310_01_sfdc_t
             WHERE sfdcent = g_enterprise
               AND sfdcdocno=g_sfdadocno
            IF g_sfdc_d[l_ac].sfdcseq IS NULL THEN
               LET g_sfdc_d[l_ac].sfdcseq = 0
            END IF
            LET g_sfdc_d[l_ac].sfdcseq = g_sfdc_d[l_ac].sfdcseq + 1
            IF NOT cl_null(tm.reason) THEN
               LET g_sfdc_d[l_ac].sfdc015 = tm.reason  #理由码
            END IF

         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
            #单身画面能编辑的，不能合并的栏位：工单+项次+项序+参考单位+库位+储位+批号+库存管理特征+理由码 最后需合并的
            LET l_count = 1
            IF g_sfdc_d[l_ac].sfdc009 IS NULL THEN
               SELECT COUNT(*) INTO l_count FROM asft310_01_sfdc_t
                WHERE sfdcent = g_enterprise
                  AND sfdcdocno = g_sfdadocno
                  #AND sfdcseq = g_sfdc_d[l_ac].sfdcseq
                  AND sfdc001 = g_sfdc_d[l_ac].sfdc001
                  AND sfdc002 = g_sfdc_d[l_ac].sfdc002
                  AND sfdc003 = g_sfdc_d[l_ac].sfdc003
                  AND sfdc009 IS NULL  #参考单位
                  AND sfdc012 = g_sfdc_d[l_ac].sfdc012  #库位
                  AND sfdc013 = g_sfdc_d[l_ac].sfdc013  #储位
                  AND sfdc014 = g_sfdc_d[l_ac].sfdc014  #批号
                  AND sfdc016 = g_sfdc_d[l_ac].sfdc016  #库存管理特征
                  AND sfdc015 = g_sfdc_d[l_ac].sfdc015  #理由码
            ELSE
               SELECT COUNT(*) INTO l_count FROM asft310_01_sfdc_t
                WHERE sfdcent = g_enterprise
                  AND sfdcdocno = g_sfdadocno
                  #AND sfdcseq = g_sfdc_d[l_ac].sfdcseq
                  AND sfdc001 = g_sfdc_d[l_ac].sfdc001
                  AND sfdc002 = g_sfdc_d[l_ac].sfdc002
                  AND sfdc003 = g_sfdc_d[l_ac].sfdc003
                  AND sfdc009 = g_sfdc_d[l_ac].sfdc009  #参考单位
                  AND sfdc012 = g_sfdc_d[l_ac].sfdc012  #库位
                  AND sfdc013 = g_sfdc_d[l_ac].sfdc013  #储位
                  AND sfdc014 = g_sfdc_d[l_ac].sfdc014  #批号
                  AND sfdc016 = g_sfdc_d[l_ac].sfdc016  #库存管理特征
                  AND sfdc015 = g_sfdc_d[l_ac].sfdc015  #理由码
            END IF
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               IF cl_null(g_sfdc_d[g_detail_idx].sfdc012) THEN LET g_sfdc_d[g_detail_idx].sfdc012 = ' ' END IF
               IF cl_null(g_sfdc_d[g_detail_idx].sfdc013) THEN LET g_sfdc_d[g_detail_idx].sfdc013 = ' ' END IF
               IF cl_null(g_sfdc_d[g_detail_idx].sfdc014) THEN LET g_sfdc_d[g_detail_idx].sfdc014 = ' ' END IF
               IF cl_null(g_sfdc_d[g_detail_idx].sfdc016) THEN LET g_sfdc_d[g_detail_idx].sfdc016 = ' ' END IF
               IF cl_null(g_sfdc_d[g_detail_idx].sfdc010) THEN LET g_sfdc_d[g_detail_idx].sfdc010 = 0 END IF #参考单位需求数量
               INSERT INTO asft310_01_sfdc_t
                           (sfdcent,sfdcsite,sfdcdocno,sfdcseq,
                            sfdc001,sfdc002,sfdc003,sfdc004,sfdc005,sfdc006,sfdc007,sfdc008,sfdc009,sfdc010,sfdc011,sfdc012,sfdc013,sfdc014,sfdc015,sfdc016)
                     VALUES(g_enterprise,g_site,g_sfdadocno,g_sfdc_d[g_detail_idx].sfdcseq,
                            g_sfdc_d[g_detail_idx].sfdc001,g_sfdc_d[g_detail_idx].sfdc002,g_sfdc_d[g_detail_idx].sfdc003,g_sfdc_d[g_detail_idx].sfdc004,g_sfdc_d[g_detail_idx].sfdc005,g_sfdc_d[g_detail_idx].sfdc006,g_sfdc_d[g_detail_idx].sfdc007,0,g_sfdc_d[g_detail_idx].sfdc009,g_sfdc_d[g_detail_idx].sfdc010,0,g_sfdc_d[g_detail_idx].sfdc012,g_sfdc_d[g_detail_idx].sfdc013,g_sfdc_d[g_detail_idx].sfdc014,g_sfdc_d[g_detail_idx].sfdc015,g_sfdc_d[g_detail_idx].sfdc016)
               IF SQLCA.SQLcode  THEN
                  CALL cl_err("asft310_01_sfdc_t",SQLCA.sqlcode,1)
                  CANCEL INSERT
               ELSE
                  ERROR 'INSERT O.K'
                  LET g_rec_b = g_rec_b + 1
               END IF
            ELSE
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_sfdc_d[l_ac].* TO NULL
               CANCEL INSERT
            END IF


         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_sfdc_d.deleteElement(l_ac)
               NEXT FIELD sfdcseq
            END IF

            IF g_sfdc_d[l_ac].sfdcseq IS NOT NULL THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF

               DELETE FROM asft310_01_sfdc_t
                WHERE sfdcent = g_enterprise
                  AND sfdcdocno = g_sfdadocno AND sfdcseq = g_sfdc_d_t.sfdcseq
               IF SQLCA.sqlcode THEN
                  CALL cl_err("asft310_01_sfdc_t",SQLCA.sqlcode,1)
                  CANCEL DELETE
               ELSE
                  LET g_rec_b = g_rec_b-1
               END IF
            END IF

         AFTER DELETE


         BEFORE FIELD sfdc001
            CALL asft310_01_set_entry_b(l_cmd)

         AFTER FIELD sfdc001
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc001) THEN
               IF g_sfda.sfda002='11' OR g_sfda.sfda002='13' OR g_sfda.sfda002='21' THEN
                  #检查工单需存在发料套数单身
                  SELECT COUNT(*) INTO l_cnt FROM sfdb_t
                   WHERE sfdbent = g_enterprise
                     AND sfdbdocno=g_sfdadocno
                     AND sfdb001 = g_sfdc_d[l_ac].sfdc001
                  IF l_cnt = 0 THEN
                     CALL cl_err(g_sfdc_d[l_ac].sfdc001,'asf-00043',1)
                     NEXT FIELD CURRENT
                  END IF
               ELSE
                  #检查是否存在工单中，且为发放状态
                  IF NOT s_asft300_chk_stus(g_sfdc_d[l_ac].sfdc001,'F') THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF NOT cl_null(g_sfdc_d[l_ac].sfdc002) AND NOT cl_null(g_sfdc_d[l_ac].sfdc003) THEN
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdc_d[l_ac].sfdc001 != g_sfdc_d_t.sfdc001)) THEN
                     CALL asft310_01_sfdc003_reference(l_cmd) RETURNING l_success
                     IF NOT l_success THEN
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            
            CALL asft310_01_set_no_entry_b(l_cmd)

         ON CHANGE sfdc001


         BEFORE FIELD sfdc002
            CALL asft310_01_set_entry_b(l_cmd)


         AFTER FIELD sfdc002
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc002) THEN
               IF NOT cl_null(g_sfdc_d[l_ac].sfdc001) THEN
                  #工单号号+项次需存在工单项次中
                  SELECT COUNT(*) INTO l_cnt FROM sfba_t
                   WHERE sfbaent = g_enterprise
                     AND sfbadocno=g_sfdc_d[l_ac].sfdc001
                     AND sfbaseq = g_sfdc_d[l_ac].sfdc002
                  #LET l_cnt_t = l_cnt
                  IF l_cnt = 0 THEN
                     CALL cl_err(g_sfdc_d[l_ac].sfdc001,'asf-00044',1)
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF NOT cl_null(g_sfdc_d[l_ac].sfdc001) AND NOT cl_null(g_sfdc_d[l_ac].sfdc003) THEN
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdc_d[l_ac].sfdc002 != g_sfdc_d_t.sfdc002)) THEN
                     CALL asft310_01_sfdc003_reference(l_cmd) RETURNING l_success
                     IF NOT l_success THEN
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            
            CALL asft310_01_set_no_entry_b(l_cmd)

         ON CHANGE sfdc002


         BEFORE FIELD sfdc003  #工单项序
            #工单单号+项次若只有一个项序时，自动带出
            IF cl_null(g_sfdc_d[l_ac].sfdc003) THEN
               SELECT COUNT(*) INTO l_cnt FROM sfba_t
                WHERE sfbaent = g_enterprise
                  AND sfbadocno=g_sfdc_d[l_ac].sfdc001
                  AND sfbaseq = g_sfdc_d[l_ac].sfdc002
               IF l_cnt = 1 THEN
                  SELECT sfbaseq1 INTO g_sfdc_d[l_ac].sfdc003 FROM sfba_t
                      WHERE sfbaent = g_enterprise
                        AND sfbadocno=g_sfdc_d[l_ac].sfdc001
                        AND sfbaseq = g_sfdc_d[l_ac].sfdc002
               END IF
            END IF

            CALL asft310_01_set_entry_b(l_cmd)

         AFTER FIELD sfdc003
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc003) THEN
               IF NOT cl_null(g_sfdc_d[l_ac].sfdc001) AND NOT cl_null(g_sfdc_d[l_ac].sfdc002) THEN
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdc_d[l_ac].sfdc003 != g_sfdc_d_t.sfdc003)) THEN
                     CALL asft310_01_sfdc003_reference(l_cmd) RETURNING l_success
                     IF NOT l_success THEN
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF

            CALL asft310_01_set_no_entry_b(l_cmd)

         ON CHANGE sfdc003


         BEFORE FIELD sfdc005


         AFTER FIELD sfdc005


         ON CHANGE sfdc005


         AFTER FIELD sfdc006
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfdc_d[l_ac].sfdc006
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfdc_d[l_ac].sfdc006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfdc_d[l_ac].sfdc006_desc
            
         BEFORE FIELD sfdc006


         ON CHANGE sfdc006


         BEFORE FIELD sfdc007


         AFTER FIELD sfdc007
            #申请数量
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc007) THEN
               #不可小于等于0
               IF g_sfdc_d[l_ac].sfdc007 <= 0 THEN
                  #资料不可小于等于0,请检查！请录入大于0的资料
                  CALL cl_err('','axc-00025',1)
                  NEXT FIELD CURRENT
               END IF
               #检查是否可超过 可发/退数量——对工单可发可退数量的检查
               IF NOT asft310_01_chk_sfdc007(l_cmd) THEN
                  NEXT FIELD CURRENT
               END IF
               #检查是否可超过 可发数量——对库存足量否的检查
               IF NOT asft310_01_chk_sfdc007_2(l_cmd,g_sfdc_d_t.sfdcseq,g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc007,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013,g_sfdc_d[l_ac].sfdc014,g_sfdc_d[l_ac].sfdc016) THEN
                  NEXT FIELD CURRENT
               END IF
               
               #发料单做在捡量的检查
               IF g_prog[1,6]='asft31' AND NOT cl_null(g_sfdc_d[l_ac].sfdc007) AND NOT cl_null(g_sfdc_d[l_ac].sfdc012) THEN  #在捡数量 库位
                  IF cl_null(g_sfdc_d[l_ac].sfdc016) THEN LET g_sfdc_d[l_ac].sfdc016= ' ' END IF  #库存管理特征
                  IF cl_null(g_sfdc_d[l_ac].sfdc013) THEN LET g_sfdc_d[l_ac].sfdc013= ' ' END IF  #储位
                  IF cl_null(g_sfdc_d[l_ac].sfdc014) THEN LET g_sfdc_d[l_ac].sfdc014= ' ' END IF  #批号
                  #指定庫位、儲位、批號時，判斷參數是否檢查在檢量，如需檢查在檢量，在庫存數-在檢數不足申請數量時不允許輸入
                  #                           据点   料件编号                产品特征                库存管理特征
                  CALL s_inventory_check_inan(g_site,g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005,g_sfdc_d[l_ac].sfdc016,
                  #                           库位                   储位                    批号
                                              g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013,g_sfdc_d[l_ac].sfdc014,
                  #                           交易单位                在捡数量
                                              g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc007,
                  #                           单据编号     项次                   项序
                                              g_sfdadocno,g_sfdc_d[l_ac].sfdcseq,'0')
                       RETURNING l_success,l_flag
                  IF NOT l_flag THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
               #更新相关栏位-参考单位申请数量
               IF NOT cl_null(g_sfdc_d[l_ac].sfdc009) THEN
                  #参考单位申请数量=申请数量经过转换率换算为参考单位的数量
                  CALL s_aimi190_get_convert(g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc009) RETURNING l_success,l_rate
                  IF NOT l_success THEN
                     LET l_rate = 1
                  END IF
                  LET g_sfdc_d[l_ac].sfdc010 = g_sfdc_d[l_ac].sfdc007 * l_rate
               ELSE
                  LET g_sfdc_d[l_ac].sfdc010 = 0
               END IF
            END IF

         ON CHANGE sfdc007


         BEFORE FIELD sfdc008


         AFTER FIELD sfdc008



         ON CHANGE sfdc008


         AFTER FIELD sfdc009
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc009) THEN
               #校验带值说明
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfdc_d[l_ac].sfdc009
               IF cl_chk_exist_and_ref_val("v_ooca001_1") THEN
                  #檢查成功時後續處理
                  LET g_sfdc_d[l_ac].sfdc009_desc = g_chkparam.return1
                  DISPLAY BY NAME g_sfdc_d[l_ac].sfdc009_desc
               ELSE
                  #檢查失敗時後續處理
                  LET g_sfdc_d[l_ac].sfdc009 = g_sfdc_d_t.sfdc009
                  NEXT FIELD CURRENT
               END IF

               #参考单位申请数量=申请数量经过转换率换算为参考单位的数量
               CALL s_aimi190_get_convert(g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc009) RETURNING l_success,l_rate
               IF NOT l_success THEN
                  LET l_rate = 1
               END IF
               LET g_sfdc_d[l_ac].sfdc010 = g_sfdc_d[l_ac].sfdc007 * l_rate
            ELSE
               LET g_sfdc_d[l_ac].sfdc010 = 0
            END IF


         BEFORE FIELD sfdc009

         ON CHANGE sfdc009

         AFTER FIELD sfdc010
            #参考单位申请数量
            IF g_ref_unit='Y' AND NOT cl_null(g_sfdc_d[l_ac].sfdc009) AND cl_null(g_sfdc_d[l_ac].sfdc010) THEN
               CALL cl_err('','aoo-00052',1)
               NEXT FIELD CURRENT
            END IF

            IF NOT cl_null(g_sfdc_d[l_ac].sfdc010) THEN 
               #不可小于0
               IF g_sfdc_d[l_ac].sfdc010 < 0 THEN
                  #资料不可小于0,请检查！,请录入大于等于0的资料
                  CALL cl_err('','axc-00024',1)
                  NEXT FIELD CURRENT
               END IF
            END IF 

         BEFORE FIELD sfdc010


         ON CHANGE sfdc010


         BEFORE FIELD sfdc011


         AFTER FIELD sfdc011



         ON CHANGE sfdc011


         AFTER FIELD sfdc012
            #仓库
            IF cl_null(g_sfdc_d[l_ac].sfdc012) THEN
               LET g_sfdc_d[l_ac].sfdc012_desc = ''
               DISPLAY BY NAME g_sfdc_d[l_ac].sfdc012_desc
            END IF
            
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc012) AND (g_sfdc_d[l_ac].sfdc012 != g_sfdc_d_t.sfdc012 OR g_sfdc_d_t.sfdc012 IS NULL) THEN
               #校验带值说明，保税否，成本仓否
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfdc_d[l_ac].sfdc012
               IF cl_chk_exist_and_ref_val("v_inaa002_2") THEN
                  #檢查成功時後續處理
                  LET g_sfdc_d[l_ac].sfdc012_desc = g_chkparam.return1
                  LET l_inaa015 = g_chkparam.return2
                  LET l_inaa010 = g_chkparam.return3
                  IF cl_null(l_inaa015) THEN LET l_inaa015='N' END IF
                  IF cl_null(l_inaa010) THEN LET l_inaa010='N' END IF
                  DISPLAY BY NAME g_sfdc_d[l_ac].sfdc012_desc
               ELSE
                  #檢查失敗時後續處理
                  LET g_sfdc_d[l_ac].sfdc012 = g_sfdc_d_t.sfdc012
                  NEXT FIELD CURRENT
               END IF
               
               #如果储位已有，检查储位
               IF NOT cl_null(g_sfdc_d[l_ac].sfdc013) THEN
                  #校验带值说明
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_sfdc_d[l_ac].sfdc012
                  LET g_chkparam.arg2 = g_sfdc_d[l_ac].sfdc013
                  IF cl_chk_exist_and_ref_val("v_inab003_2") THEN
                     #檢查成功時後續處理
                     LET g_sfdc_d[l_ac].sfdc013_desc = g_chkparam.return1
                  ELSE
                     LET g_sfdc_d[l_ac].sfdc012 = g_sfdc_d_t.sfdc012
                     NEXT FIELD CURRENT
                  END IF
                  DISPLAY BY NAME g_sfdc_d[l_ac].sfdc013_desc
               END IF
            
               IF g_prog[1,6] = 'asft31' THEN
                  #参数：生產非保稅料號，可由保稅倉發料
                  #画面上的保税料栏位对应的是需求料号
                  #这里的控制是对于生产料号是否保税料
                  CALL cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0031') RETURNING g_para
                  SELECT sfaa010,imaf034 INTO l_sfaa010,l_imaf034 
                    FROM sfaa_t,imaf_t
                   WHERE sfaaent = imafent
                     AND sfaasite= imafsite
                     AND sfaa010 = imaf001
                     AND sfaaent   = g_enterprise
                     AND sfaasite  = g_site
                     AND sfaadocno = g_sfdc_d[l_ac].sfdc001
                  #當工單的生產料號=非保稅料，不可由保稅倉發料。
                  IF l_imaf034='N' AND (g_para = '1' OR g_para = '2') THEN  #拒绝或警告
                     CASE
                        WHEN l_inaa015='Y' AND g_para = '1'
                             CALL cl_err('','asr-00008',1)
                             NEXT FIELD CURRENT
                        WHEN l_inaa015='Y' AND g_para = '2'
                             CALL cl_err('','asr-00008',1)
                     END CASE
                  END IF
                  
                  #參數：客供料可由成本倉料領料
                  CALL cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0052') RETURNING g_para
                  #1.拒絕時，只可輸入非成本倉。(2為警告)
                  IF g_sfdc_d[l_ac].sfba028='Y' AND (g_para = '1' OR g_para = '2') THEN  
                     CASE
                        WHEN l_inaa010='Y' AND g_para = '1' #拒绝
                             CALL cl_err('','asf-00048',1)
                             NEXT FIELD CURRENT
                        WHEN l_inaa010='Y' AND g_para = '2' #警告
                             CALL cl_err('','asf-00048',1)
                     END CASE
                  END IF
               END IF
               
               #mark reason，产生的需求资料可以不考虑库存足量，因为只是需求，还没到具体发的料
               ##检查数量是否可超过 可发数量——对库存足量否的检查
               #IF NOT asft310_01_chk_sfdc007_2(l_cmd,g_sfdc_d_t.sfdcseq,g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc007,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013,g_sfdc_d[l_ac].sfdc014,g_sfdc_d[l_ac].sfdc016) THEN
               #   NEXT FIELD sfdc012
               #END IF
               #在捡量根据参数设置要做检查
               #发料单做在捡量的检查
               IF g_prog[1,6]='asft31' AND NOT cl_null(g_sfdc_d[l_ac].sfdc007) AND NOT cl_null(g_sfdc_d[l_ac].sfdc012) THEN  #在捡数量 库位
                  IF cl_null(g_sfdc_d[l_ac].sfdc016) THEN LET g_sfdc_d[l_ac].sfdc016= ' ' END IF  #库存管理特征
                  IF cl_null(g_sfdc_d[l_ac].sfdc013) THEN LET g_sfdc_d[l_ac].sfdc013= ' ' END IF  #储位
                  IF cl_null(g_sfdc_d[l_ac].sfdc014) THEN LET g_sfdc_d[l_ac].sfdc014= ' ' END IF  #批号
                  #指定庫位、儲位、批號時，判斷參數是否檢查在檢量，如需檢查在檢量，在庫存數-在檢數不足申請數量時不允許輸入
                  #                           据点   料件编号                产品特征                库存管理特征
                  CALL s_inventory_check_inan(g_site,g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005,g_sfdc_d[l_ac].sfdc016,
                  #                           库位                   储位                    批号
                                              g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013,g_sfdc_d[l_ac].sfdc014,
                  #                           交易单位                在捡数量
                                              g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc007,
                  #                           单据编号     项次                   项序
                                              g_sfdadocno,g_sfdc_d[l_ac].sfdcseq,'0')
                       RETURNING l_success,l_flag
                  IF NOT l_flag THEN
                     LET g_sfdc_d[l_ac].sfdc012 = g_sfdc_d_t.sfdc012
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

         BEFORE FIELD sfdc012


         ON CHANGE sfdc012


         AFTER FIELD sfdc013
            #储位
            IF cl_null(g_sfdc_d[l_ac].sfdc013) THEN
               LET g_sfdc_d[l_ac].sfdc013_desc = ''
               DISPLAY BY NAME g_sfdc_d[l_ac].sfdc013_desc
            END IF
            
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc013) AND NOT cl_null(g_sfdc_d[l_ac].sfdc012)
            AND (g_sfdc_d[l_ac].sfdc013 != g_sfdc_d_t.sfdc013 OR g_sfdc_d_t.sfdc013 IS NULL) THEN
               #校验带值说明
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfdc_d[l_ac].sfdc012
               LET g_chkparam.arg2 = g_sfdc_d[l_ac].sfdc013
               IF cl_chk_exist_and_ref_val("v_inab003_2") THEN
                  #檢查成功時後續處理
                  LET g_sfdc_d[l_ac].sfdc013_desc = g_chkparam.return1
               ELSE
                  LET g_sfdc_d[l_ac].sfdc013 = g_sfdc_d_t.sfdc013
                  NEXT FIELD CURRENT
               END IF
               DISPLAY BY NAME g_sfdc_d[l_ac].sfdc013_desc
               
               #在捡量根据参数设置要做检查
               #发料单做在捡量的检查
               IF g_prog[1,6]='asft31' AND NOT cl_null(g_sfdc_d[l_ac].sfdc007) AND NOT cl_null(g_sfdc_d[l_ac].sfdc012) THEN  #在捡数量 库位
                  IF cl_null(g_sfdc_d[l_ac].sfdc016) THEN LET g_sfdc_d[l_ac].sfdc016= ' ' END IF  #库存管理特征
                  IF cl_null(g_sfdc_d[l_ac].sfdc013) THEN LET g_sfdc_d[l_ac].sfdc013= ' ' END IF  #储位
                  IF cl_null(g_sfdc_d[l_ac].sfdc014) THEN LET g_sfdc_d[l_ac].sfdc014= ' ' END IF  #批号
                  #指定庫位、儲位、批號時，判斷參數是否檢查在檢量，如需檢查在檢量，在庫存數-在檢數不足申請數量時不允許輸入
                  #                           据点   料件编号                产品特征                库存管理特征
                  CALL s_inventory_check_inan(g_site,g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005,g_sfdc_d[l_ac].sfdc016,
                  #                           库位                   储位                    批号
                                              g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013,g_sfdc_d[l_ac].sfdc014,
                  #                           交易单位                在捡数量
                                              g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc007,
                  #                           单据编号     项次                   项序
                                              g_sfdadocno,g_sfdc_d[l_ac].sfdcseq,'0')
                       RETURNING l_success,l_flag
                  IF NOT l_flag THEN
                     LET g_sfdc_d[l_ac].sfdc013 = g_sfdc_d_t.sfdc013
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
               
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc013) THEN
               IF cl_null(g_sfdc_d_t.sfdc013) OR (g_sfdc_d[l_ac].sfdc013!=g_sfdc_d_t.sfdc013) THEN
                  #mark reason，产生的需求资料可以不考虑库存足量，因为只是需求，还没到具体发的料
                  ##检查数量是否可超过 可发数量——对库存足量否的检查
                  #IF NOT asft310_01_chk_sfdc007_2(l_cmd,g_sfdc_d_t.sfdcseq,g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc007,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013,g_sfdc_d[l_ac].sfdc014,g_sfdc_d[l_ac].sfdc016) THEN
                  #   LET g_sfdc_d[l_ac].sfdc013 = g_sfdc_d_t.sfdc013
                  #   NEXT FIELD sfdc012
                  #END IF
               END IF
            END IF
            

         BEFORE FIELD sfdc013


         ON CHANGE sfdc013


         BEFORE FIELD sfdc014


         AFTER FIELD sfdc014
            #批号
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc014) THEN
               IF cl_null(g_sfdc_d_t.sfdc014) OR (g_sfdc_d[l_ac].sfdc014!=g_sfdc_d_t.sfdc014) THEN
                  #mark reason，产生的需求资料可以不考虑库存足量，因为只是需求，还没到具体发的料
                  ##检查数量是否可超过 可发数量——对库存足量否的检查
                  #IF NOT asft310_01_chk_sfdc007_2(l_cmd,g_sfdc_d_t.sfdcseq,g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc007,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013,g_sfdc_d[l_ac].sfdc014,g_sfdc_d[l_ac].sfdc016) THEN
                  #   LET g_sfdc_d[l_ac].sfdc014 = g_sfdc_d_t.sfdc014
                  #   NEXT FIELD sfdc012
                  #END IF
               END IF
               
               #在捡量根据参数设置要做检查
               #发料单做在捡量的检查
               IF g_prog[1,6]='asft31' AND NOT cl_null(g_sfdc_d[l_ac].sfdc007) AND NOT cl_null(g_sfdc_d[l_ac].sfdc012) THEN  #在捡数量 库位
                  IF cl_null(g_sfdc_d[l_ac].sfdc016) THEN LET g_sfdc_d[l_ac].sfdc016= ' ' END IF  #库存管理特征
                  IF cl_null(g_sfdc_d[l_ac].sfdc013) THEN LET g_sfdc_d[l_ac].sfdc013= ' ' END IF  #储位
                  IF cl_null(g_sfdc_d[l_ac].sfdc014) THEN LET g_sfdc_d[l_ac].sfdc014= ' ' END IF  #批号
                  #指定庫位、儲位、批號時，判斷參數是否檢查在檢量，如需檢查在檢量，在庫存數-在檢數不足申請數量時不允許輸入
                  #                           据点   料件编号                产品特征                库存管理特征
                  CALL s_inventory_check_inan(g_site,g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005,g_sfdc_d[l_ac].sfdc016,
                  #                           库位                   储位                    批号
                                              g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013,g_sfdc_d[l_ac].sfdc014,
                  #                           交易单位                在捡数量
                                              g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc007,
                  #                           单据编号     项次                   项序
                                              g_sfdadocno,g_sfdc_d[l_ac].sfdcseq,'0')
                       RETURNING l_success,l_flag
                  IF NOT l_flag THEN
                     LET g_sfdc_d[l_ac].sfdc014 = g_sfdc_d_t.sfdc014
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

         ON CHANGE sfdc014


         AFTER FIELD sfdc015
            #理由码
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc015) THEN
               CALL s_azzi650_chk_exist_and_desc('226',g_sfdc_d[l_ac].sfdc015) RETURNING l_success,g_sfdc_d[l_ac].sfdc015_desc
               IF NOT l_success THEN
                  LET g_sfdc_d[l_ac].sfdc015 = g_sfdc_d_t.sfdc015
                  NEXT FIELD CURRENT
               END IF
               DISPLAY BY NAME g_sfdc_d[l_ac].sfdc015_desc
            END IF

         BEFORE FIELD sfdc015

         ON CHANGE sfdc015

         BEFORE FIELD sfdc016

         AFTER FIELD sfdc016
            #库存管理特征
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc016) THEN
               IF cl_null(g_sfdc_d[l_ac].sfdc012) THEN LET g_sfdc_d[l_ac].sfdc012=' ' END IF
               IF cl_null(g_sfdc_d[l_ac].sfdc013) THEN LET g_sfdc_d[l_ac].sfdc013=' ' END IF
               IF cl_null(g_sfdc_d[l_ac].sfdc014) THEN LET g_sfdc_d[l_ac].sfdc014=' ' END IF
               SELECT COUNT(*) INTO l_cnt FROM inag_t
                WHERE inagent = g_enterprise
                  AND inagsite= g_site
                  AND inag001 = g_sfdc_d[l_ac].sfdc001
                  AND inag003 = g_sfdc_d[l_ac].sfdc016
                  AND inag004 = g_sfdc_d[l_ac].sfdc012
                  AND inag005 = g_sfdc_d[l_ac].sfdc013
                  AND inag006 = g_sfdc_d[l_ac].sfdc014
               IF l_cnt = 0 THEN
                  CALL cl_err('','asf-00071',1)
                  LET g_sfdc_d[l_ac].sfdc016 = g_sfdc_d_t.sfdc016
                  NEXT FIELD sfdc012
               END IF
               
               IF cl_null(g_sfdc_d_t.sfdc016) OR (g_sfdc_d[l_ac].sfdc016!=g_sfdc_d_t.sfdc016) THEN
                  #检查数量是否可超过 可发数量——对库存足量否的检查
                  IF NOT asft310_01_chk_sfdc007_2(l_cmd,g_sfdc_d_t.sfdcseq,g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc007,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013,g_sfdc_d[l_ac].sfdc014,g_sfdc_d[l_ac].sfdc016) THEN
                     LET g_sfdc_d[l_ac].sfdc016 = g_sfdc_d_t.sfdc016
                     NEXT FIELD sfdc012
                  END IF
               END IF
            END IF


         ON CHANGE sfdc016


         ON ACTION controlp INFIELD sfdc001
            #工单单号
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdc_d[l_ac].sfdc001
            LET g_qryparam.default2 = g_sfdc_d[l_ac].sfdc002
            LET g_qryparam.default3 = g_sfdc_d[l_ac].sfdc003
            LET g_qryparam.where = " sfbasite ='",g_site,"'"
            #IF g_sfda.sfda002='11' OR g_sfda.sfda002='13' OR g_sfda.sfda002='21' THEN
            SELECT COUNT(*) INTO l_cnt FROM sfdb_t
             WHERE sfdbent   = g_enterprise
               AND sfdbdocno = g_sfda.sfdadocno
            IF l_cnt > 0 THEN
               #找套数页签中有的工单
               #增加条件:需同时存在与sfdb档中
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfbadocno in (",
                                                               " select unique sfdb001 from sfdb_t",
                                                               "  where sfdbent = ",g_enterprise,
                                                               "    and sfdbdocno='",g_sfda.sfdadocno,"'",
                                                               ")"
            END IF
            IF g_sfda.sfda002='22' THEN   #超领退料只开有超领量的
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfba025 > 0 "
            END IF
            CALL q_sfba001_1()
            LET g_sfdc_d[l_ac].sfdc001 = g_qryparam.return1
            LET g_sfdc_d[l_ac].sfdc002 = g_qryparam.return2
            LET g_sfdc_d[l_ac].sfdc003 = g_qryparam.return3
            DISPLAY g_sfdc_d[l_ac].sfdc001 TO sfdc001
            DISPLAY g_sfdc_d[l_ac].sfdc002 TO sfdc002
            DISPLAY g_sfdc_d[l_ac].sfdc003 TO sfdc003

         ON ACTION controlp INFIELD sfdc002
            #项次
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdc_d[l_ac].sfdc001
            LET g_qryparam.default2 = g_sfdc_d[l_ac].sfdc002
            LET g_qryparam.default3 = g_sfdc_d[l_ac].sfdc003
            LET g_qryparam.where = " sfbasite ='",g_site,"'"
            IF g_sfda.sfda002='11' OR g_sfda.sfda002='13' OR g_sfda.sfda002='21' THEN
               #增加条件:需同时存在与sfdd档中
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfbadocno in (",
                                                               " select unique sfdb001 from sfdb_t",
                                                               "  where sfdbent = ",g_enterprise,
                                                               "    and sfdbdocno='",g_sfda.sfdadocno,"'",
                                                               ")"
            END IF
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc001) THEN
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfbadocno = '",g_sfdc_d[l_ac].sfdc001,"' "
            END IF
            CALL q_sfba001_1()
            LET g_sfdc_d[l_ac].sfdc001 = g_qryparam.return1
            LET g_sfdc_d[l_ac].sfdc002 = g_qryparam.return2
            LET g_sfdc_d[l_ac].sfdc003 = g_qryparam.return3
            DISPLAY g_sfdc_d[l_ac].sfdc001 TO sfdc001
            DISPLAY g_sfdc_d[l_ac].sfdc002 TO sfdc002
            DISPLAY g_sfdc_d[l_ac].sfdc003 TO sfdc003

         ON ACTION controlp INFIELD sfdc003
            #项序
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdc_d[l_ac].sfdc001
            LET g_qryparam.default2 = g_sfdc_d[l_ac].sfdc002
            LET g_qryparam.default3 = g_sfdc_d[l_ac].sfdc003
            LET g_qryparam.where = " sfbasite ='",g_site,"'"
            IF g_sfda.sfda002='11' OR g_sfda.sfda002='13' OR g_sfda.sfda002='21' THEN
               #增加条件:需同时存在与sfdd档中
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfbadocno in (",
                                                               " select unique sfdb001 from sfdb_t",
                                                               "  where sfdbent = ",g_enterprise,
                                                               "    and sfdbdocno='",g_sfda.sfdadocno,"'",
                                                               ")"
            END IF
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc001) THEN
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfbadocno = '",g_sfdc_d[l_ac].sfdc001,"' "
            END IF
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc002) THEN
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfbaseq = ",g_sfdc_d[l_ac].sfdc002
            END IF
            CALL q_sfba001_1()
            LET g_sfdc_d[l_ac].sfdc001 = g_qryparam.return1
            LET g_sfdc_d[l_ac].sfdc002 = g_qryparam.return2
            LET g_sfdc_d[l_ac].sfdc003 = g_qryparam.return3
            DISPLAY g_sfdc_d[l_ac].sfdc001 TO sfdc001
            DISPLAY g_sfdc_d[l_ac].sfdc002 TO sfdc002
            DISPLAY g_sfdc_d[l_ac].sfdc003 TO sfdc003

         ON ACTION controlp INFIELD sfdc009
            #参考单位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdc_d[l_ac].sfdc009
            CALL q_ooca001_1()
            LET g_sfdc_d[l_ac].sfdc009 = g_qryparam.return1
            DISPLAY g_sfdc_d[l_ac].sfdc009 TO sfdc009

         ON ACTION controlp INFIELD sfdc012
            #仓库
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdc_d[l_ac].sfdc012
            LET g_qryparam.default2 = g_sfdc_d[l_ac].sfdc013
            LET g_qryparam.default3 = g_sfdc_d[l_ac].sfdc014
            LET g_qryparam.default4 = g_sfdc_d[l_ac].sfdc016
            LET g_qryparam.where = " inag001 ='",g_sfdc_d[l_ac].sfdc004,"'"
            CALL q_inag004_13()  #库位、储位、批号、库存管理特征
            LET g_sfdc_d[l_ac].sfdc012 = g_qryparam.return1
            LET g_sfdc_d[l_ac].sfdc013 = g_qryparam.return2
            LET g_sfdc_d[l_ac].sfdc014 = g_qryparam.return3
            LET g_sfdc_d[l_ac].sfdc016 = g_qryparam.return4
            DISPLAY g_sfdc_d[l_ac].sfdc012 TO sfdc012
            DISPLAY g_sfdc_d[l_ac].sfdc013 TO sfdc013
            DISPLAY g_sfdc_d[l_ac].sfdc014 TO sfdc014 
            DISPLAY g_sfdc_d[l_ac].sfdc016 TO sfdc016 
            #栏位说明
            CALL s_desc_get_stock_desc(g_site,g_sfdc_d[l_ac].sfdc012) RETURNING g_sfdc_d[l_ac].sfdc012_desc
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc013) THEN
               CALL s_desc_get_locator_desc(g_site,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013) RETURNING g_sfdc_d[l_ac].sfdc013_desc
            END IF
            DISPLAY g_sfdc_d[l_ac].sfdc012_desc TO sfdc012_desc
            DISPLAY g_sfdc_d[l_ac].sfdc013_desc TO sfdc013_desc
            NEXT FIELD sfdc012


         ON ACTION controlp INFIELD sfdc013
            #储位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdc_d[l_ac].sfdc012
            LET g_qryparam.default2 = g_sfdc_d[l_ac].sfdc013
            LET g_qryparam.default3 = g_sfdc_d[l_ac].sfdc014
            LET g_qryparam.default4 = g_sfdc_d[l_ac].sfdc016
            LET g_qryparam.where = " inag001 ='",g_sfdc_d[l_ac].sfdc004,"'"
            CALL q_inag004_13()  #库位、储位、批号、库存管理特征
            LET g_sfdc_d[l_ac].sfdc012 = g_qryparam.return1
            LET g_sfdc_d[l_ac].sfdc013 = g_qryparam.return2
            LET g_sfdc_d[l_ac].sfdc014 = g_qryparam.return3
            LET g_sfdc_d[l_ac].sfdc016 = g_qryparam.return4
            DISPLAY g_sfdc_d[l_ac].sfdc012 TO sfdc012
            DISPLAY g_sfdc_d[l_ac].sfdc013 TO sfdc013
            DISPLAY g_sfdc_d[l_ac].sfdc014 TO sfdc014 
            DISPLAY g_sfdc_d[l_ac].sfdc016 TO sfdc016 
            #栏位说明
            CALL s_desc_get_stock_desc(g_site,g_sfdc_d[l_ac].sfdc012) RETURNING g_sfdc_d[l_ac].sfdc012_desc
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc013) THEN
               CALL s_desc_get_locator_desc(g_site,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013) RETURNING g_sfdc_d[l_ac].sfdc013_desc
            END IF
            DISPLAY g_sfdc_d[l_ac].sfdc012_desc TO sfdc012_desc
            DISPLAY g_sfdc_d[l_ac].sfdc013_desc TO sfdc013_desc
            NEXT FIELD sfdc013

         ON ACTION controlp INFIELD sfdc014
            #批号
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdc_d[l_ac].sfdc012
            LET g_qryparam.default2 = g_sfdc_d[l_ac].sfdc013
            LET g_qryparam.default3 = g_sfdc_d[l_ac].sfdc014
            LET g_qryparam.default4 = g_sfdc_d[l_ac].sfdc016
            LET g_qryparam.where = " inag001 ='",g_sfdc_d[l_ac].sfdc004,"'"
            CALL q_inag004_13()  #库位、储位、批号、库存管理特征
            LET g_sfdc_d[l_ac].sfdc012 = g_qryparam.return1
            LET g_sfdc_d[l_ac].sfdc013 = g_qryparam.return2
            LET g_sfdc_d[l_ac].sfdc014 = g_qryparam.return3
            LET g_sfdc_d[l_ac].sfdc016 = g_qryparam.return4
            DISPLAY g_sfdc_d[l_ac].sfdc012 TO sfdc012
            DISPLAY g_sfdc_d[l_ac].sfdc013 TO sfdc013
            DISPLAY g_sfdc_d[l_ac].sfdc014 TO sfdc014 
            DISPLAY g_sfdc_d[l_ac].sfdc016 TO sfdc016 
            #栏位说明
            CALL s_desc_get_stock_desc(g_site,g_sfdc_d[l_ac].sfdc012) RETURNING g_sfdc_d[l_ac].sfdc012_desc
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc013) THEN
               CALL s_desc_get_locator_desc(g_site,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013) RETURNING g_sfdc_d[l_ac].sfdc013_desc
            END IF
            DISPLAY g_sfdc_d[l_ac].sfdc012_desc TO sfdc012_desc
            DISPLAY g_sfdc_d[l_ac].sfdc013_desc TO sfdc013_desc
            NEXT FIELD sfdc014


         ON ACTION controlp INFIELD sfdc015
            #理由码
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdc_d[l_ac].sfdc015
            LET g_qryparam.arg1 = '226'
            CALL q_oocq002_5()
            LET g_sfdc_d[l_ac].sfdc015 = g_qryparam.return1     #將開窗取得的值回傳到變數
            NEXT FIELD sfdc015  

         ON ACTION controlp INFIELD sfdc016
            #库存管理特征
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdc_d[l_ac].sfdc012
            LET g_qryparam.default2 = g_sfdc_d[l_ac].sfdc013
            LET g_qryparam.default3 = g_sfdc_d[l_ac].sfdc014
            LET g_qryparam.default4 = g_sfdc_d[l_ac].sfdc016
            LET g_qryparam.where = " inag001 ='",g_sfdc_d[l_ac].sfdc004,"'"
            CALL q_inag004_13()  #库位、储位、批号、库存管理特征
            LET g_sfdc_d[l_ac].sfdc012 = g_qryparam.return1
            LET g_sfdc_d[l_ac].sfdc013 = g_qryparam.return2
            LET g_sfdc_d[l_ac].sfdc014 = g_qryparam.return3
            LET g_sfdc_d[l_ac].sfdc016 = g_qryparam.return4
            DISPLAY g_sfdc_d[l_ac].sfdc012 TO sfdc012
            DISPLAY g_sfdc_d[l_ac].sfdc013 TO sfdc013
            DISPLAY g_sfdc_d[l_ac].sfdc014 TO sfdc014 
            DISPLAY g_sfdc_d[l_ac].sfdc016 TO sfdc016 
            #栏位说明
            CALL s_desc_get_stock_desc(g_site,g_sfdc_d[l_ac].sfdc012) RETURNING g_sfdc_d[l_ac].sfdc012_desc
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc013) THEN
               CALL s_desc_get_locator_desc(g_site,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013) RETURNING g_sfdc_d[l_ac].sfdc013_desc
            END IF
            DISPLAY g_sfdc_d[l_ac].sfdc012_desc TO sfdc012_desc
            DISPLAY g_sfdc_d[l_ac].sfdc013_desc TO sfdc013_desc
            NEXT FIELD sfdc016


         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_sfdc_d[l_ac].* = g_sfdc_d_t.*
               NEXT FIELD imaa001
            END IF

            #寫入修改者/修改日期資訊(單身)
            IF cl_null(g_sfdc_d[l_ac].sfdc012) THEN LET g_sfdc_d[l_ac].sfdc012 = ' ' END IF
            IF cl_null(g_sfdc_d[l_ac].sfdc013) THEN LET g_sfdc_d[l_ac].sfdc013 = ' ' END IF
            IF cl_null(g_sfdc_d[l_ac].sfdc014) THEN LET g_sfdc_d[l_ac].sfdc014 = ' ' END IF
            IF cl_null(g_sfdc_d[l_ac].sfdc016) THEN LET g_sfdc_d[l_ac].sfdc016 = ' ' END IF
            IF cl_null(g_sfdc_d[l_ac].sfdc010) THEN LET g_sfdc_d[l_ac].sfdc010 = 0 END IF #参考单位需求数量
            UPDATE asft310_01_sfdc_t SET (sfdcseq,sfdc001,sfdc002,sfdc003,sfdc004,sfdc005,sfdc006,sfdc007,sfdc009,sfdc010,sfdc012,sfdc013,sfdc014,sfdc015,sfdc016)
                                       = (g_sfdc_d[l_ac].sfdcseq,g_sfdc_d[l_ac].sfdc001,g_sfdc_d[l_ac].sfdc002,g_sfdc_d[l_ac].sfdc003,g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc007,g_sfdc_d[l_ac].sfdc009,g_sfdc_d[l_ac].sfdc010,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013,g_sfdc_d[l_ac].sfdc014,g_sfdc_d[l_ac].sfdc015,g_sfdc_d[l_ac].sfdc016)
             WHERE sfdcent = g_enterprise
               AND sfdcdocno = g_sfdadocno
               AND sfdcseq = g_sfdc_d_t.sfdcseq #項次
            CASE
               WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                  CALL cl_err("asft310_01_sfdc_t","std-00009",1)
                  LET g_sfdc_d[l_ac].* = g_sfdc_d_t.*
               WHEN SQLCA.sqlcode #其他錯誤
                  CALL cl_err("asft310_01_sfdc_t",SQLCA.sqlcode,1)
                  LET g_sfdc_d[l_ac].* = g_sfdc_d_t.*
               OTHERWISE

            END CASE


         AFTER ROW


         AFTER INPUT


      END INPUT

      BEFORE DIALOG
         NEXT FIELD imaa001

      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)

      ON ACTION controlr
         CALL cl_show_req_fields()

      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")

      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION qbe_select     #條件查詢
         #CALL cl_qbe_list() RETURNING lc_qbe_sn
         #CALL cl_qbe_display_condition(lc_qbe_sn)

      ON ACTION qbe_save       #條件儲存
         #CALL cl_qbe_save()
         
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG

   END DIALOG
   IF INT_FLAG THEN
      LET INT_FLAG = 0
   END IF
END FUNCTION]]>
</point>
  <point name="function.asft310_01_set_entry" cite_std="N" status="" ver="1" src="s" new="Y" order="13" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION asft310_01_set_entry()
   CALL cl_set_comp_entry("inag005_i,inag006_i",TRUE)
END FUNCTION]]>
</point>
  <point name="function.asft310_01_def_sfdc007" cite_std="N" status="" ver="1" src="s" new="Y" order="14" mark_hard="N">
<![CDATA[#预设sfdc007申请数量
#即最大可发料数量
PRIVATE FUNCTION asft310_01_def_sfdc007(p_cmd)
DEFINE p_cmd         LIKE type_t.chr1
DEFINE r_sfdc007     LIKE sfdc_t.sfdc007   #最大可发料数量
DEFINE l_sfaa012     LIKE sfaa_t.sfaa012   #生产数量
DEFINE l_sfaa049     LIKE sfaa_t.sfaa049   #已发套数
DEFINE l_sfdb006     LIKE sfdb_t.sfdb006   #工单+部位+作业+作业序 预计发料套数
DEFINE l_sfdc007     LIKE sfdc_t.sfdc007   #本画面其他项次的发料数量asft310_01_sfdc_t+本发料单据上的发料数量sfdc_t
DEFINE l_sfba010     LIKE sfba_t.sfba010   #标准QPA分子
DEFINE l_sfba011     LIKE sfba_t.sfba011   #标准QPA分母
DEFINE l_sfba002     LIKE sfba_t.sfba002   #部位
DEFINE l_sfba003     LIKE sfba_t.sfba003   #作业
DEFINE l_sfba004     LIKE sfba_t.sfba004   #作业序
DEFINE l_sfba013     LIKE sfba_t.sfba013   #应发总数量
DEFINE l_sfba016     LIKE sfba_t.sfba016   #已发数量
 
   LET r_sfdc007 = 0
   
   IF g_sfda.sfda002 ='11' OR g_sfda.sfda002 ='13' THEN 
      #生产数量、已发套数、标准QPA分子、标准QPA分母
      #部位、作业、作业序
      SELECT sfaa012,sfaa049,sfba010,sfba011,
             sfba002,sfba003,sfba004,
             sfba013,sfba016
        INTO l_sfaa012,l_sfaa049,l_sfba010,l_sfba011,
             l_sfba002,l_sfba003,l_sfba004,
             l_sfba013,l_sfba016
        FROM sfba_t,sfaa_t
       WHERE sfbaent = sfaaent
         AND sfbadocno=sfaadocno
         AND sfbaent = g_enterprise
         AND sfbadocno=g_sfdc_d[l_ac].sfdc001
         AND sfbaseq = g_sfdc_d[l_ac].sfdc002
         AND sfbaseq1= g_sfdc_d[l_ac].sfdc003
      IF cl_null(l_sfaa012) THEN LET l_sfaa012 = 0 END IF
      IF cl_null(l_sfaa049) THEN LET l_sfaa049 = 0 END IF
      IF cl_null(l_sfba002) THEN LET l_sfba002 = ' ' END IF   #部位
      IF cl_null(l_sfba003) THEN LET l_sfba003 = ' ' END IF   #作业
      
      #本发料单据其他项次的:本画面其他项次的发料数量asft310_01_sfdc_t+本发料单据上的发料数量sfdc_t
      CALL asft310_01_get_sfdc007(p_cmd) RETURNING l_sfdc007
      
      IF g_sfda.sfda002 ='11' THEN
         #預計發料套數
         SELECT SUM(sfdb006) INTO l_sfdb006 FROM sfdb_t
          WHERE sfdbent  = g_enterprise
            AND sfdbdocno= g_sfdadocno       #发料单单号
            AND sfdb001  = g_sfdc_d[l_ac].sfdc001  #工单单号
            AND sfdb003  = l_sfba002  #部位
            AND sfdb004  = l_sfba003  #作业
            AND sfdb005  = l_sfba004  #作业序
            #AND sfdb002  = #run card 
         IF cl_null(l_sfdb006) THEN LET l_sfdb006=0 END IF
      END IF
   END IF
   
   CASE
      WHEN g_sfda.sfda002 ='11'   #成套发料
           IF l_sfdb006 = l_sfaa012 - l_sfaa049 THEN  #預計發料套數=生產數量-已發套數  要把调整的应发数量都算进去
              #應發總數量-已發數量-本发料单据其他项次的发料数量  
              LET r_sfdc007 = l_sfba013 - l_sfba016 - l_sfdc007
           ELSE
              #預計發料套數*標準QPA分子/標準QPA分母-本发料单据其他项次的发料数量
              LET r_sfdc007 = l_sfdb006 * l_sfba010 / l_sfba011 - l_sfdc007
           END IF
      WHEN g_sfda.sfda002 ='13'   #欠料补料
           IF l_sfaa012 = l_sfaa049 THEN   #生產數量=已發套數
              #應發總數量-已發數量-本发料单据其他项次的发料数量  要把调整的应发数量都算进去
              LET r_sfdc007 = l_sfba013 - l_sfba016 - l_sfdc007
           ELSE
              #(已發料套數*標準QPA分子/標準QPA分母)-已發數量-本发料单据其他项次的发料数量
              LET r_sfdc007 = l_sfaa049 * l_sfba010 / l_sfba011 - l_sfba016 - l_sfdc007
           END IF
      WHEN g_sfda.sfda002 = '21'  #成套退
           IF l_sfdb006 = l_sfaa049 THEN  #預計退料套數=已發套數  全退
              #已發數量-本发料单据其他项次的发料数量  
              LET r_sfdc007 = l_sfba016 - l_sfdc007
           ELSE
              #預計退料套數*標準QPA分子/標準QPA分母-本发料单据其他项次的发料数量
              LET r_sfdc007 = l_sfdb006 * l_sfba010 / l_sfba011 - l_sfdc007
              #不可超过工单的已发数量
              IF r_sfdc007 > l_sfba016 - l_sfdc007 THEN
                 LET r_sfdc007 = l_sfba016 - l_sfdc007
              END IF
           END IF
           
      OTHERWISE
           LET r_sfdc007 = 0
   END CASE
   IF r_sfdc007 < 0 THEN
      LET r_sfdc007 = 0
   END IF
   
   RETURN r_sfdc007
END FUNCTION]]>
</point>
  <point name="function.asft310_01_set_no_entry" cite_std="N" status="" ver="1" src="s" new="Y" order="15" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION asft310_01_set_no_entry()
   
   IF cl_null(tm2.inag004_i) THEN
      CALL cl_set_comp_entry("inag005_i,inag006_i",FALSE)
   END IF
   IF cl_null(tm2.inag005_i) THEN
      CALL cl_set_comp_entry("inag006_i",FALSE)
   END IF

END FUNCTION]]>
</point>
  <point name="function.asft310_01_chk_sfdc007" cite_std="N" status="" ver="1" src="s" new="Y" order="16" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 检查申请数量——对工单可发可退数量的检查
# Memo...........:
# Usage..........: CALL asft310_01_chk_sfdc007(p_cmd)
#                  RETURNING r_success
# Input parameter: p_cmd       a:新增  u:修改
# Return code....: r_success   检查状态TRUE/FALSE
# Date & Author..: 2013/12/19 By zhangllc
# Modify.........:
################################################################################
PRIVATE FUNCTION asft310_01_chk_sfdc007(p_cmd)
DEFINE p_cmd            LIKE type_t.chr1
DEFINE r_success        LIKE type_t.num5
DEFINE l_sfba018        LIKE sfba_t.sfba018   #下阶料报废数量
DEFINE l_sfba025        LIKE sfba_t.sfba025   #超领数量
DEFINE l_sfdc007        LIKE sfdc_t.sfdc007   #本画面其他项次的发料数量asft310_01_sfdc_t+本发料单据上的发料数量sfdc_t
DEFINE l_sfba016        LIKE sfba_t.sfba016   #已发数量
DEFINE l_sfba013        LIKE sfba_t.sfba013   #应发数量
DEFINE l_sfba015        LIKE sfba_t.sfba015   #委外代买数量
DEFINE l_sfdc007_1       LIKE sfdc_t.sfdc007 
DEFINE l_sfdc007_2       LIKE sfdc_t.sfdc007 
DEFINE l_sfba008         LIKE sfba_t.sfba008  #必要性

   LET r_success = TRUE
   
   SELECT sfba008 INTO l_sfba008
     FROM sfba_t
    WHERE sfbaent = g_enterprise
      AND sfbasite= g_site
      AND sfbadocno=g_sfdc_d[l_ac].sfdc001
      AND sfbaseq = g_sfdc_d[l_ac].sfdc002
      AND sfbaseq1= g_sfdc_d[l_ac].sfdc003
   IF l_sfba008 = '3' THEN  #间接材料,发料时可直接超领，过账时分配，所以不需要控管是否超过工单的未发数量
      RETURN r_success
   END IF
   
   CASE 
      WHEN g_sfda.sfda002 = '11' OR g_sfda.sfda002 = '13'   #发料类型=成套发料 or 欠料补料
           #不可超過工單的未發數量
           SELECT sfba013,sfba015,sfba016  #应发数量,委外代买数量,已发数量
             INTO l_sfba013,l_sfba015,l_sfba016
             FROM sfba_t
            WHERE sfbaent = g_enterprise
              AND sfbasite= g_site
              AND sfbadocno=g_sfdc_d[l_ac].sfdc001
              AND sfbaseq = g_sfdc_d[l_ac].sfdc002
              AND sfbaseq1= g_sfdc_d[l_ac].sfdc003
           
           #本发料单据其他项次的:本画面其他项次的发料数量asft310_01_sfdc_t+本发料单据上的发料数量sfdc_t
           CALL asft310_01_get_sfdc007(p_cmd) RETURNING l_sfdc007
           
           #其他单据发料未过账申请数
           SELECT SUM(sfdc007) INTO l_sfdc007_1
             FROM sfdc_t,sfda_t
            WHERE sfdcent   = sfdaent
              AND sfdcdocno = sfdadocno
              AND sfdcent   = g_enterprise
              AND sfdcdocno!= g_sfdadocno
              AND sfdc001   = g_sfdc_d[l_ac].sfdc001  #工单
              AND sfdc002   = g_sfdc_d[l_ac].sfdc002  #工单项次
              AND sfdc003   = g_sfdc_d[l_ac].sfdc003  #工单项序
              AND sfda002 IN ('11','13','14') #发料
              AND sfdastus != 'S' 
           IF cl_null(l_sfdc007_1) THEN LET l_sfdc007_1 = 0 END IF

           #其他单据退料未过账申请数
           SELECT SUM(sfdc007) INTO l_sfdc007_2
             FROM sfdc_t,sfda_t
            WHERE sfdcent   = sfdaent
              AND sfdcdocno = sfdadocno
              AND sfdcent   = g_enterprise
              AND sfdcdocno!= g_sfdadocno
              AND sfdc001   = g_sfdc_d[l_ac].sfdc001  #工单
              AND sfdc002   = g_sfdc_d[l_ac].sfdc002  #工单项次
              AND sfdc003   = g_sfdc_d[l_ac].sfdc003  #工单项序
              AND sfda002 IN ('21','23','24') #退料
              AND sfdastus != 'S' 
           IF cl_null(l_sfdc007_2) THEN LET l_sfdc007_2 = 0 END IF
 
           #可发数量
           LET l_sfdc007 = l_sfba013 - l_sfba015 - l_sfba016 - l_sfdc007 - l_sfdc007_1 + l_sfdc007_2
           IF g_sfdc_d[l_ac].sfdc007  > l_sfdc007 THEN
              #不可超过工单的未发数量1%,请重新输入！
              CALL cl_err_msg('','asf-00047',l_sfdc007,1)
              LET r_success = FALSE
              RETURN r_success
           END IF
      WHEN g_sfda.sfda002 = '21'    #成套退
           #不可超過工單的已發數量
           SELECT sfba016 INTO l_sfba016  #已发数量
             FROM sfba_t
            WHERE sfbaent = g_enterprise
              AND sfbadocno=g_sfdc_d[l_ac].sfdc001
              AND sfbaseq = g_sfdc_d[l_ac].sfdc002
              AND sfbaseq1= g_sfdc_d[l_ac].sfdc003
           
           #本发料单据其他项次的:本画面其他项次的发料数量asft310_01_sfdc_t+本发料单据上的发料数量sfdc_t
           CALL asft310_01_get_sfdc007(p_cmd) RETURNING l_sfdc007
           
           #可退数量
           LET l_sfdc007 = l_sfba016 - l_sfdc007
           IF g_sfdc_d[l_ac].sfdc007  > l_sfdc007 THEN  
              #不可超过工单的已發数量1%,请重新输入！
              CALL cl_err_msg('','asf-00065',l_sfdc007,1)
              LET r_success = FALSE
              RETURN r_success
           END IF
   END CASE
   
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.asft310_01_get_sfdc007" cite_std="N" status="" ver="1" src="s" new="Y" order="17" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 获取本单据中工单+项次+项序在其他项次的需求申请数量
# Memo...........: 本发料单据其他项次的:本画面其他项次的发料数量asft310_01_sfdc_t+本发料单据上的发料数量sfdc_t
# Usage..........: CALL asft310_01_get_sfdc007(p_cmd)
#                  RETURNING r_sfdc007
# Input parameter: p_cmd       a:新增  u:修改
# Return code....: r_sfdc007   需求申请数量
# Date & Author..: 2013/12/19 By zhangllc
# Modify.........:
################################################################################
PRIVATE FUNCTION asft310_01_get_sfdc007(p_cmd)
DEFINE p_cmd       LIKE type_t.chr1     #a:新增 u:修改
DEFINE l_sfdc007   LIKE sfdc_t.sfdc007  #需求申请数量
DEFINE r_sfdc007   LIKE sfdc_t.sfdc007  #需求申请数量

   LET r_sfdc007 = 0
   
   #本画面其他项次的发料数量asft310_01_sfdc_t
   IF p_cmd = 'u' THEN
      SELECT SUM(sfdc007) INTO l_sfdc007 FROM asft310_01_sfdc_t
       WHERE sfdcent = g_enterprise
         AND sfdcdocno=g_sfdadocno       #发料单单号
         AND sfdcseq != g_sfdc_d_t.sfdcseq
         AND sfdc001 = g_sfdc_d[l_ac].sfdc001  #工单
         AND sfdc002 = g_sfdc_d[l_ac].sfdc002  #工单项次
         AND sfdc003 = g_sfdc_d[l_ac].sfdc003  #工单项序
   ELSE
      SELECT SUM(sfdc007) INTO l_sfdc007 FROM asft310_01_sfdc_t
       WHERE sfdcent = g_enterprise
         AND sfdcdocno=g_sfdadocno       #发料单单号
         AND sfdc001 = g_sfdc_d[l_ac].sfdc001  #工单
         AND sfdc002 = g_sfdc_d[l_ac].sfdc002  #工单项次
         AND sfdc003 = g_sfdc_d[l_ac].sfdc003  #工单项序
   END IF
   IF cl_null(l_sfdc007) THEN LET l_sfdc007 = 0 END IF
   LET r_sfdc007 = r_sfdc007 + l_sfdc007
   
   #本发料单据上的发料数量sfdc_t
   SELECT SUM(sfdc007) INTO l_sfdc007 FROM sfdc_t
    WHERE sfdcent = g_enterprise
      AND sfdcdocno=g_sfdadocno       #发料单单号
      AND sfdc001 = g_sfdc_d[l_ac].sfdc001  #工单
      AND sfdc002 = g_sfdc_d[l_ac].sfdc002  #工单项次
      AND sfdc003 = g_sfdc_d[l_ac].sfdc003  #工单项序
   IF cl_null(l_sfdc007) THEN LET l_sfdc007 = 0 END IF
   LET r_sfdc007 = r_sfdc007 + l_sfdc007
   
   RETURN r_sfdc007
END FUNCTION]]>
</point>
  <point name="function.asft310_01_sfdc003_reference" cite_std="N" status="u" ver="1" src="s" new="Y" order="18" mark_hard="N">
<![CDATA[#根据工单+项次+项序预设资料
PRIVATE FUNCTION asft310_01_sfdc003_reference(p_cmd)
DEFINE p_cmd       LIKE type_t.chr1     #a:新增 u:修改
DEFINE r_success   LIKE type_t.num5
#DEFINE l_sfaa010   LIKE sfaa_t.sfaa010  #生产料号
DEFINE l_success   LIKE type_t.num5
DEFINE l_rate      LIKE inaj_t.inaj014  #单位换算率
DEFINE l_sfba008   LIKE sfba_t.sfba008  #必要性

   LET r_success = TRUE
   
   LET g_sfdc_d[l_ac].sfba002 = ''   #部位
   LET g_sfdc_d[l_ac].sfba002_desc = ''
   LET g_sfdc_d[l_ac].sfba003 = ''   #作业
   LET g_sfdc_d[l_ac].sfba003_desc = ''
   LET g_sfdc_d[l_ac].sfba004 = ''   #作业序
   LET g_sfdc_d[l_ac].sfdc004 = ''   #需求料号
   LET g_sfdc_d[l_ac].sfdc005 = ''   #特征
   LET g_sfdc_d[l_ac].sfba028 = ''   #客供料
   LET g_sfdc_d[l_ac].sfdc006 = ''   #单位
   LET g_sfdc_d[l_ac].sfba013 = 0    #应发料
   LET g_sfdc_d[l_ac].sfba016 = 0    #已发量
   LET g_sfdc_d[l_ac].sfdc012 = ''   #指定库位
   LET g_sfdc_d[l_ac].sfdc013 = ''   #指定储位
   SELECT sfba002,sfba003,sfba004,sfba006,
          sfba021,sfba028,sfba014,sfba013,
          sfba016,sfba019,sfba020,sfba008
     INTO g_sfdc_d[l_ac].sfba002,g_sfdc_d[l_ac].sfba003,g_sfdc_d[l_ac].sfba004,g_sfdc_d[l_ac].sfdc004,
          g_sfdc_d[l_ac].sfdc005,g_sfdc_d[l_ac].sfba028,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfba013,
          g_sfdc_d[l_ac].sfba016,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013,l_sfba008
     FROM sfba_t,sfaa_t
    WHERE sfbaent = sfaaent
      AND sfbadocno=sfaadocno
      AND sfbaent = g_enterprise
      AND sfbadocno=g_sfdc_d[l_ac].sfdc001
      AND sfbaseq = g_sfdc_d[l_ac].sfdc002
      AND sfbaseq1= g_sfdc_d[l_ac].sfdc003
   IF SQLCA.sqlcode THEN
      #工单+项次+项序不存在工单单身档中,请检查工单维护作业asft300中的资料！
      CALL cl_err(g_sfdc_d[l_ac].sfdc001,'asf-00044',1)
      LET r_success = FALSE
      RETURN r_success
   END IF

   IF l_sfba008 = '4' THEN  #参考材料
      #参考材料不需要发料，请确认！
      CALL cl_err('','asf-00310',1)
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #部位说明
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = '215'
   LET g_chkparam.arg2 = g_sfdc_d[l_ac].sfba002
   CALL cl_ref_val("v_oocql002")
   LET g_sfdc_d[l_ac].sfba002_desc = g_chkparam.return1
   DISPLAY BY NAME g_sfdc_d[l_ac].sfba002_desc

   #作业说明
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = '221'
   LET g_chkparam.arg2 = g_sfdc_d[l_ac].sfba003
   CALL cl_ref_val("v_oocql002")
   LET g_sfdc_d[l_ac].sfba003_desc = g_chkparam.return1
   DISPLAY BY NAME g_sfdc_d[l_ac].sfba003_desc
   
   #需求料号品名规格
   CALL s_desc_get_item_desc(g_sfdc_d[l_ac].sfdc004) RETURNING g_sfdc_d[l_ac].sfdc004_desc,g_sfdc_d[l_ac].sfdc004_desc2
   DISPLAY BY NAME g_sfdc_d[l_ac].sfdc004_desc
   DISPLAY BY NAME g_sfdc_d[l_ac].sfdc004_desc2
   
   #单位
   CALL s_desc_get_unit_desc(g_sfdc_d[l_ac].sfdc006) RETURNING g_sfdc_d[l_ac].sfdc006_desc
   DISPLAY BY NAME g_sfdc_d[l_ac].sfdc006_desc
   
   #保税料,参考单位
   SELECT imaf034,imaf015
     INTO g_sfdc_d[l_ac].imaf034,g_sfdc_d[l_ac].sfdc009
     FROM imaf_t
    WHERE imafent = g_enterprise
      AND imafsite= g_site
      AND imaf001 = g_sfdc_d[l_ac].sfdc004
   DISPLAY BY NAME g_sfdc_d[l_ac].imaf034
   CALL s_desc_get_unit_desc(g_sfdc_d[l_ac].sfdc009) RETURNING g_sfdc_d[l_ac].sfdc009_desc

   #发料前调拨
   SELECT imae092 INTO g_sfdc_d[l_ac].imae092 FROM imae_t
    WHERE imaeent = g_enterprise
      AND imaesite= g_site
      AND imae001 = g_sfdc_d[l_ac].sfdc004
   DISPLAY BY NAME g_sfdc_d[l_ac].imae092
   
   CALL asft310_01_def_sfdc007(p_cmd) RETURNING g_sfdc_d[l_ac].sfdc007    #sfdc007申请数量
   #LET g_sfdc_d[l_ac].sfdc008 = 0        #实际数量
   #LET g_sfdc_d[l_ac].diff = g_sfdc_d[l_ac].sfdc007 - g_sfdc_d[l_ac].sfdc008  #差异数量
   
   IF cl_null(g_sfdc_d[l_ac].sfdc009) THEN
      LET g_sfdc_d[l_ac].sfdc010 = 0
   ELSE
      #参考单位申请数量=申请数量经过转换率换算为参考单位的数量
      CALL s_aimi190_get_convert(g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc009) RETURNING l_success,l_rate
      IF NOT l_success THEN
         LET l_rate = 1
      END IF
      LET g_sfdc_d[l_ac].sfdc010 = g_sfdc_d[l_ac].sfdc007 * l_rate
      #LET g_sfdc_d[l_ac].sfdc011 = 0        #参考单位实际数量
      #LET g_sfdc_d[l_ac].diff2 = g_sfdc_d[l_ac].sfdc010  - g_sfdc_d[l_ac].sfdc011  #参考单位差异数量
   END IF
   
   CALL s_desc_get_stock_desc(g_site,g_sfdc_d[l_ac].sfdc012) RETURNING g_sfdc_d[l_ac].sfdc012_desc    #库位名称
   CALL s_desc_get_locator_desc(g_site,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013) RETURNING g_sfdc_d[l_ac].sfdc013_desc  #储位名称
   
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.asft310_01_get_inag" cite_std="N" status="" ver="1" src="s" new="Y" order="19" mark_hard="N">
<![CDATA[#自动展至库储批
#逐笔找到料号+库位内(或料号+库位+储位内或QBE库存条件)的所有料、库、储、批数据，检查现有库存-在捡量还有余量的
#找到满足工单的需求数为止，
#如果数量不足时，且库存不足乃产生less=Y，则再产生一笔库位、储位、批号都为空白的资料
PRIVATE FUNCTION asft310_01_get_inag(p_inag001,p_inag002,p_inag004,p_inag005,p_inag006,p_inag003,p_inag007)
DEFINE p_inag001   LIKE inag_t.inag001   #料
DEFINE p_inag002   LIKE inag_t.inag002   #产品特征
DEFINE p_inag004   LIKE inag_t.inag004   #仓
DEFINE p_inag005   LIKE inag_t.inag005   #储
DEFINE p_inag006   LIKE inag_t.inag006   #批
DEFINE p_inag003   LIKE inag_t.inag003   #库存管理特征
DEFINE p_inag007   LIKE inag_t.inag007   #目的单位
DEFINE l_inag004   LIKE inag_t.inag004   #仓
DEFINE l_inag005   LIKE inag_t.inag005   #储
DEFINE l_inag006   LIKE inag_t.inag006   #批
DEFINE l_inag003   LIKE inag_t.inag003   #库存管理特征
DEFINE l_place     LIKE type_t.num5
DEFINE l_qty       LIKE sfdc_t.sfdc007

   IF cl_null(p_inag002) THEN LET p_inag002 = ' ' END IF
   IF cl_null(p_inag004) THEN LET p_inag004 = ' ' END IF
   IF cl_null(p_inag005) THEN LET p_inag005 = ' ' END IF
   IF cl_null(p_inag006) THEN LET p_inag006 = ' ' END IF
   IF cl_null(p_inag003) THEN LET p_inag003 = ' ' END IF
   #LET g_sql = "SELECT unique inag004,inag005,inag008 FROM inag_t,inaa_t ",  #庫存單位,帳面庫存數量
   LET g_sql = "SELECT unique inag004,inag005,inag006,inag003 FROM inag_t,inaa_t ",  #庫存單位,帳面庫存數量
               " WHERE inagent = inaaent AND inagsite = inaasite AND inag004 = inaa001",
               "   AND inagent = ",g_enterprise,
               "   AND inagsite= '",g_site,"' ",
               "   AND inag001 = '",p_inag001,"' ",
               "   AND inag002 = '",p_inag002,"' "
   IF NOT cl_null(p_inag004) THEN  #库位
      LET g_sql = g_sql CLIPPED," AND inag004 = '",p_inag004,"' "
   END IF
   IF NOT cl_null(p_inag005) THEN  #储位
      LET g_sql = g_sql CLIPPED," AND inag005 = '",p_inag005,"' "
   END IF
   IF NOT cl_null(p_inag006) THEN  #批号
      LET g_sql = g_sql CLIPPED," AND inag006 = '",p_inag006,"' "
   END IF
   IF NOT cl_null(p_inag003) THEN  #库存管理特征
      LET g_sql = g_sql CLIPPED," AND inag003 = '",p_inag003,"' "
   END IF
   #IF tm.issue_type = '3' THEN  #依库存量发料(QBE)
   IF NOT cl_null(tm2.wc) THEN  #和上面一句结果是一样的，1=1不影响结果
      #检查tm2.wc中有没有下inac003的条件
      LET l_place = tm2.wc.getIndexOf("inac003",1)
      IF l_place = 0 THEN
         LET g_sql = g_sql CLIPPED," AND ",tm2.wc CLIPPED
      ELSE
         LET g_sql = "SELECT unique inag004,inag005,inag006,inag003 FROM inag_t,inaa_t,inac_t ",  #库储批+库存管理特征
                     " WHERE inagent = inaaent AND inagsite = inaasite AND inag004 = inaa001",
                     "   AND inagent = inacent AND inagsite = inacsite AND inag004 = inac001 AND inag005 = inac002 ",
                     "   AND inagent = ",g_enterprise,
                     "   AND inagsite='",g_site,"'",
                     "   AND inag001 = '",p_inag001,"' ",
                     "   AND inag002 = '",p_inag002,"' ",
                     "   AND ",tm2.wc CLIPPED
      END IF
      #库存管理特征处理
      LET l_place = tm2.wc.getIndexOf("inag003",1)
      IF l_place = 0 THEN
         LET g_sql = g_sql CLIPPED," AND inag003 = ' ' "
      END IF
   ELSE
      #库存管理特征处理
      IF cl_null(p_inag003) THEN
         LET g_sql = g_sql CLIPPED," AND inag003 = ' ' "
      END IF
   END IF
   #LET g_sql = g_sql CLIPPED," ORDER BY 优先顺序 "
   PREPARE asft310_01_get_inag_p FROM g_sql
   IF SQLCA.sqlcode THEN
      CALL cl_err('prepare asft310_01_get_inag_p err',SQLCA.sqlcode,1)
      LET g_success = FALSE
      FREE asft310_01_get_inag_p
      RETURN
   END IF
   DECLARE asft310_01_get_inag_c CURSOR FOR asft310_01_get_inag_p
   IF SQLCA.sqlcode THEN
      CALL cl_err('declare asft310_01_get_inag_c err',SQLCA.sqlcode,1)
      LET g_success = FALSE
      FREE asft310_01_get_inag_p
      RETURN
   END IF
   FOREACH asft310_01_get_inag_c INTO l_inag004,l_inag005,l_inag006,l_inag003
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach asft310_01_get_inag_c err',SQLCA.sqlcode,1)
         LET g_success = FALSE
         EXIT FOREACH
      END IF
      #库存可用量
      CALL asft310_01_get_available_qty('a',0,p_inag001,p_inag002,p_inag007,l_inag004,l_inag005,l_inag006,l_inag003)
         RETURNING l_qty
         
      IF issue_qty1 <= l_qty THEN
         CALL asft310_01_ins_sfdc('asft310_01_sfdc_t',l_inag004,l_inag005,l_inag006,l_inag003,tm.reason,issue_qty1)   #有足量供给需求，产生发料需求明细 库位\储位\批号\数量
         LET issue_qty1 = 0
         EXIT FOREACH
      ELSE
         CALL asft310_01_ins_sfdc('asft310_01_sfdc_t',l_inag004,l_inag005,l_inag006,l_inag003,tm.reason,l_qty)   #非足量供给需求，有库存的 产生发料需求明细 库位\储位\批号\数量
         LET issue_qty1 = issue_qty1 - l_qty
      END IF
   END FOREACH
   FREE asft310_01_get_inag_p
   
   IF issue_qty1>0 AND tm.less = 'Y' THEN   #库存不足乃产生
      IF tm.issue_type = '3' THEN  #依库存量发料(QBE)--不足部分产生仓储批为空白的资料
         CALL asft310_01_ins_sfdc('asft310_01_sfdc_t',' ',' ',' ',' ',tm.reason,issue_qty1)   #非足量供给需求，不够部分 产生发料需求明细 库位\储位\批号\数量
      ELSE  #依预设或指定的仓储批发料--不足部分产生仓储批为预设或指定的仓储批
         CALL asft310_01_ins_sfdc('asft310_01_sfdc_t',p_inag004,p_inag005,p_inag006,p_inag003,tm.reason,issue_qty1)   #非足量供给需求，不够部分 产生发料需求明细 库位\储位\批号\数量
      END IF
      LET issue_qty1 = 0
   END IF
END FUNCTION]]>
</point>
  <point name="function.asft310_01_issue" cite_std="N" status="" ver="1" src="s" new="Y" order="20" mark_hard="N">
<![CDATA[#依不同发料方式自动产生单身资料
PRIVATE FUNCTION asft310_01_issue()
DEFINE l_inag004  LIKE inag_t.inag004  #库位
DEFINE l_inag005  LIKE inag_t.inag005  #储位
DEFINE l_inag006  LIKE inag_t.inag006  #批号
DEFINE l_inag003  LIKE inag_t.inag003  #库存管理特征
DEFINE l_qty      LIKE sfdc_t.sfdc007  #库存可发量
DEFINE l_sql      STRING
DEFINE l_success  LIKE type_t.num5
DEFINE l_rate     LIKE inaj_t.inaj014  #单位换算率
DEFINE l_sfdd     RECORD
                  sfdc001   LIKE sfdc_t.sfdc001,  #工单
                  sfdc002   LIKE sfdc_t.sfdc002,  #工单项次
                  sfdc003   LIKE sfdc_t.sfdc003,  #工单项序
                  sfdd001   LIKE sfdd_t.sfdd001,  #退料料号
                  sfdc005   LIKE sfdc_t.sfdc005,  #特征
                  sfdd003   LIKE sfdd_t.sfdd003,  #库位
                  sfdd004   LIKE sfdd_t.sfdd004,  #储位
                  sfdd005   LIKE sfdd_t.sfdd005,  #批号
                  sfdd010   LIKE sfdd_t.sfdd010,  #库存管理特征
                  sfdd006   LIKE sfdd_t.sfdd006,  #退料单位
                  sfdd007   LIKE sfdd_t.sfdd007   #退料数量
                  END RECORD
DEFINE l_rec_b    LIKE type_t.num5  #退料数组笔数
DEFINE l_idx      LIKE type_t.num5
DEFINE l_arr_r    DYNAMIC ARRAY OF RECORD
                  sfdc001   LIKE sfdc_t.sfdc001,  #工单
                  sfdc002   LIKE sfdc_t.sfdc002,  #工单项次
                  sfdc003   LIKE sfdc_t.sfdc003,  #工单项序
                  sfdd001   LIKE sfdd_t.sfdd001,  #退料料号
                  sfdc005   LIKE sfdc_t.sfdc005,  #特征
                  sfdd003   LIKE sfdd_t.sfdd003,  #库位
                  sfdd004   LIKE sfdd_t.sfdd004,  #储位
                  sfdd005   LIKE sfdd_t.sfdd005,  #批号
                  sfdd010   LIKE sfdd_t.sfdd010,  #库存管理特征
                  sfdd006   LIKE sfdd_t.sfdd006,  #退料单位
                  sfdd007   LIKE sfdd_t.sfdd007   #退料数量
                  END RECORD

   LET issue_qty1 = issue_qty   #预设：剩余应发数量 = 应发数量

   ###########################################################################################
   #------------------------------------发料--------------------------------------------------
   ###########################################################################################
   IF g_prog[1,6] = 'asft31' THEN
      CASE tm.issue_type
         WHEN '1'   #依料件预设库位/储位(发料前调拨料件使用预设在制库位/储位):
              #依发料料号找料件基本数据的默认库位、预设储位(发料前调拨料件使用预设在制库位/储位)
              #如果工单指定的库位不为空白，则该笔数据改以工单指定的库、储位做为条件
              IF NOT cl_null(g_sfba.sfba019) THEN
                 LET l_inag004 = g_sfba.sfba019  #库位
                 LET l_inag005 = g_sfba.sfba020  #储位
              ELSE  
                 IF g_imae092 ='Y' THEN  #发料前调拨
                    LET l_inag004 = g_imae101  #在制发料库位
                    LET l_inag005 = g_imae102  #在制发料储位
                 ELSE
                    LET l_inag004 = g_imaf091  #料件预设库位
                    LET l_inag005 = g_imaf092  #料件预设储位
                 END IF
              END IF
              LET l_inag006 = ' '  #批号
              LET l_inag003 = ' '  #库存管理特征
              
              #工單指定發料庫儲，發料時允許修改
              CALL s_aooi200_get_slip(g_sfba.sfbadocno) RETURNING l_success,g_ooba002
              IF cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0050') = 'N' THEN
                 IF NOT cl_null(g_sfba.sfba019) THEN   #库位
                    LET l_inag004 = g_sfba.sfba019 
                 END IF
                 IF NOT cl_null(g_sfba.sfba020) THEN  #储位
                    LET l_inag005 = g_sfba.sfba020 
                 END IF
              END IF
              
              IF cl_null(l_inag004) THEN  #没有预设库位
                 IF tm.less = 'Y' THEN  #库存不足乃产生     ELSE则不产生
                    CALL asft310_01_ins_sfdc('asft310_01_sfdc_t',' ',' ',' ',' ',tm.reason,issue_qty1)   #产生到发料需求的库、储、批、库存管理特征都为空白
                    LET issue_qty1 = 0
                 END IF
              ELSE     #有预设库位
　　   　　　 　  IF tm.expand = 'N' THEN  #自动展至库储批
                    #库存可用量
                    CALL asft310_01_get_available_qty('a',0,g_sfba.sfba006,g_sfba.sfba021,g_sfba.sfba014,l_inag004,l_inag005,l_inag006,l_inag003)
                       RETURNING l_qty
                       
                    IF issue_qty1 <= l_qty THEN
                       CALL asft310_01_ins_sfdc('asft310_01_sfdc_t',l_inag004,l_inag005,l_inag006,l_inag003,tm.reason,issue_qty1)   #有足量供给需求，产生发料需求明细 库位\储位\批号\数量
                       LET issue_qty1 = 0
                    ELSE
                       CALL asft310_01_ins_sfdc('asft310_01_sfdc_t',l_inag004,l_inag005,l_inag006,l_inag003,tm.reason,l_qty)   #非足量供给需求，有库存的 产生发料需求明细 库位\储位\批号\数量
                       LET issue_qty1 = issue_qty1 - l_qty
                       IF tm.less = 'Y' THEN   #库存不足乃产生
                          #CALL asft310_01_ins_sfdc('asft310_01_sfdc_t',' ',' ',' ',' ',tm.reason,issue_qty1)   #非足量供给需求，不够部分 产生发料需求明细 库位\储位\批号\数量
                          CALL asft310_01_ins_sfdc('asft310_01_sfdc_t',l_inag004,l_inag005,l_inag006,l_inag003,tm.reason,issue_qty1)   #非足量供给需求，不够部分 产生发料需求明细 库位\储位\批号\数量
                          LET issue_qty1 = 0
                       END IF
                    END IF
                 ELSE #自动展至库储批expand='Y'
                    CALL asft310_01_get_inag(g_sfba.sfba006,g_sfba.sfba021,l_inag004,l_inag005,l_inag006,l_inag003,g_sfba.sfba014)
                 END IF  #是否自动展至库储批
              END IF  #是否有预设库位
         WHEN '2'   #自行指定库存条件(INPUT):处理逻辑同1.依料件预设库位/储位，只是改为用画面上的指定库位、指位储位、指定批号
              LET l_inag004 = tm2.inag004_i  #库位
              LET l_inag005 = tm2.inag005_i  #储位
              LET l_inag006 = tm2.inag006_i  #批号
              LET l_inag003 = tm2.inag003_i  #库存管理特征
              
              #工單指定發料庫儲，發料時允許修改
              CALL s_aooi200_get_slip(g_sfba.sfbadocno) RETURNING l_success,g_ooba002
              IF cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0050') = 'N' THEN
                 IF NOT cl_null(g_sfba.sfba019) THEN   #库位
                    LET l_inag004 = g_sfba.sfba019 
                 END IF
                 IF NOT cl_null(g_sfba.sfba020) THEN  #储位
                    LET l_inag005 = g_sfba.sfba020 
                 END IF
              END IF
      
              #下面的同产生方式1一样的 可以考虑做成函数
              IF cl_null(l_inag004) THEN  #库位空白    ELSE 不产生
                 IF tm.less = 'Y' THEN  #库存不足乃产生
                   CALL asft310_01_ins_sfdc('asft310_01_sfdc_t',' ',' ',' ',' ',tm.reason,issue_qty1)   #产生到发料需求的库、储、批、库存管理特征都为空白
                   LET issue_qty1 = 0
                 END IF
              ELSE     #有库位
　　   　　　 　  IF tm.expand = 'N' THEN  #自动展至库储批
                    #库存可用量
                    CALL asft310_01_get_available_qty('a',0,g_sfba.sfba006,g_sfba.sfba021,g_sfba.sfba014,l_inag004,l_inag005,l_inag006,l_inag003)
                       RETURNING l_qty
      
                    IF issue_qty1 <= l_qty THEN  #应发量 <= 可发量
                       CALL asft310_01_ins_sfdc('asft310_01_sfdc_t',l_inag004,l_inag005,l_inag006,l_inag003,tm.reason,issue_qty1)   #有足量供给需求，产生发料需求明细 库位\储位\批号\数量
                       LET issue_qty1 = 0
                    ELSE
                       CALL asft310_01_ins_sfdc('asft310_01_sfdc_t',l_inag004,l_inag005,l_inag006,l_inag003,tm.reason,l_qty)   #非足量供给需求，有库存的 产生发料需求明细 库位\储位\批号\数量
                       LET issue_qty1 = issue_qty1 - l_qty
                       IF tm.less = 'Y' THEN   #库存不足乃产生
                          #CALL asft310_01_ins_sfdc('asft310_01_sfdc_t',' ',' ',' ',' ',tm.reason,issue_qty1)   #非足量供给需求，不够部分 产生发料需求明细 库位\储位\批号\数量
                          CALL asft310_01_ins_sfdc('asft310_01_sfdc_t',l_inag004,l_inag005,l_inag006,l_inag003,tm.reason,issue_qty1)   #非足量供给需求，不够部分 产生发料需求明细 库位\储位\批号\数量
                          LET issue_qty1 = 0
                       END IF
                    END IF
                 ELSE #自动展至库储批expand='Y'
                    CALL asft310_01_get_inag(g_sfba.sfba006,g_sfba.sfba021,l_inag004,l_inag005,l_inag006,l_inag003,g_sfba.sfba014)
                 END IF  #是否自动展至库储批
              END IF  #是否有预设库位
         WHEN '3'   #依库存量发料(QBE):可輸入指定庫位inag004、指定儲位inag005、指定批號inag006、標籤inac003、保稅inaa015、成本倉inaa010
              #工單指定發料庫儲，發料時允許修改
              CALL s_aooi200_get_slip(g_sfba.sfbadocno) RETURNING l_success,g_ooba002
              IF cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0050') = 'N' THEN
                 IF NOT cl_null(g_sfba.sfba019) THEN   #库位
                    LET l_inag004 = g_sfba.sfba019 
                 END IF
                 IF NOT cl_null(g_sfba.sfba020) THEN  #储位
                    LET l_inag005 = g_sfba.sfba020 
                 END IF
              END IF
                                      #发料料号        特征           库        储        批         库存管理特征  单位
              CALL asft310_01_get_inag(g_sfba.sfba006,g_sfba.sfba021,l_inag004,l_inag005,l_inag006,l_inag003,g_sfba.sfba014)
      END CASE
   END IF

   ###########################################################################################
   #------------------------------------退料--------------------------------------------------
   ###########################################################################################
   IF g_prog[1,6] = 'asft32' THEN
   
      CASE tm.issue_type
         WHEN '1'   #依工單發料倉儲批
              #找出工單發料的倉儲批，且未退完料的(可能會找到多筆，找到數量滿足為止)
              #此处无需l_inag*
         WHEN '2'   #依料件預設庫位/儲位(發料前調撥料件使用預設在製庫位/儲位)
              #退料的倉儲預設為:退料料件的预设库位、储位(发料前调拨料件使用预设在制库位/储位)
              #如果工单指定的库位不为空白，则该笔数据改以工单指定的库、储位做为条件
              IF NOT cl_null(g_sfba.sfba019) THEN
                 LET l_inag004 = g_sfba.sfba019  #库位
                 LET l_inag005 = g_sfba.sfba020  #储位
              ELSE  
                 IF g_imae092 ='Y' THEN  #发料前调拨
                    LET l_inag004 = g_imae101  #在制发料库位
                    LET l_inag005 = g_imae102  #在制发料储位
                 ELSE
                    LET l_inag004 = g_imaf091  #料件预设库位
                    LET l_inag005 = g_imaf092  #料件预设储位
                 END IF
              END IF
              LET l_inag006 = ' '  #批号
              LET l_inag003 = ' '  #库存管理特征
         WHEN '3'   #自行指定庫位/儲位/批號(INPUT)
              LET l_inag004 = tm2.inag004_i  #库位
              LET l_inag005 = tm2.inag005_i  #储位
              LET l_inag006 = tm2.inag006_i  #批号
              LET l_inag003 = tm2.inag003_i  #库存管理特征
      END CASE
      
      IF tm.issue_type='1' OR (tm.issue_type MATCHES '[23]' AND tm.return='Y') THEN
      #若需关联的发料单的,先将相关退料单的都抓出来,再将发料的抓出来,做匹配
         #------退料------
         #---取其他退料资料, 换算到本张工单的发料单位g_sfba.sfba014
         #其他退料单的
         LET l_sql = "SELECT sfdc001,sfdc002,sfdc003,sfdd001,sfdc005, ",
                     "       sfdd003,sfdd004,sfdd005,sfdd010,sfdd006,sfdd007 ",
                     " FROM sfdd_t,sfdc_t,sfda_t ",
                     " WHERE sfddent   = sfdcent ",
                     "   AND sfdddocno = sfdcdocno ",
                     "   AND sfddseq   = sfdcseq ",
                     "   AND sfddent   = sfdaent ",
                     "   AND sfdddocno = sfdadocno ",
                     "   AND sfdcent   = ",g_enterprise,
                     "   AND sfdcdocno != '",g_sfda.sfdadocno,"' ",  #退料单号
                     "   AND sfdc001   = '",g_sfba.sfbadocno,"' ", #工单
                     "   AND sfdc002   = ",g_sfba.sfbaseq,         #项次
                     "   AND sfdc003   = ",g_sfba.sfbaseq1,        #项序
                     "   AND sfdd001   = '",g_sfba.sfba006,"' ", #料号
                     "   AND sfdc005   = '",g_sfba.sfba021,"' ", #特征
                     "   AND sfdd012   = 1 ",  #退料
                     "   AND sfdastus != 'X' "  #作废
         PREPARE asft310_01_issue_p20 FROM l_sql
         DECLARE asft310_01_issue_c20 CURSOR FOR asft310_01_issue_p20
         LET l_rec_b = 0
         FOREACH asft310_01_issue_c20 INTO l_sfdd.*
            IF SQLCA.sqlcode THEN
               CALL cl_err('foreach asft310_01_issue_c20 err',SQLCA.sqlcode,1)
               LET g_success = FALSE
               EXIT FOREACH
            END IF
            
            LET l_rec_b = l_rec_b + 1
            LET l_arr_r[l_rec_b].sfdc001  = l_sfdd.sfdc001  #工单
            LET l_arr_r[l_rec_b].sfdc002  = l_sfdd.sfdc002  #工单项次
            LET l_arr_r[l_rec_b].sfdc003  = l_sfdd.sfdc003  #工单项序
            LET l_arr_r[l_rec_b].sfdd001  = l_sfdd.sfdd001  #退料料号
            LET l_arr_r[l_rec_b].sfdc005  = l_sfdd.sfdc005  #特征
            LET l_arr_r[l_rec_b].sfdd003  = l_sfdd.sfdd003  #库位
            LET l_arr_r[l_rec_b].sfdd004  = l_sfdd.sfdd004  #储位
            LET l_arr_r[l_rec_b].sfdd005  = l_sfdd.sfdd005  #批号
            LET l_arr_r[l_rec_b].sfdd010  = l_sfdd.sfdd010  #库存管理特征
            LET l_arr_r[l_rec_b].sfdd006  = l_sfdd.sfdd006  #退料单位
            IF l_arr_r[l_rec_b].sfdd006 = g_sfba.sfba014 THEN
               LET l_arr_r[l_rec_b].sfdd007  = l_sfdd.sfdd007   #退料数量
            ELSE
               CALL s_aimi190_get_convert(l_sfdd.sfdd001,l_sfdd.sfdd006,g_sfba.sfba014)
                  RETURNING l_success,l_rate
               IF NOT l_success THEN
                  LET l_rate = 1
               END IF
               LET l_arr_r[l_rec_b].sfdd007  = l_sfdd.sfdd007 * l_rate  #退料数量
            END IF
         END FOREACH
         #本张退料单实体表中的
         LET l_sql = "SELECT sfdc001,sfdc002,sfdc003,sfdc004,sfdc005, ",
                     "       sfdc012,sfdc013,sfdc014,sfdc016,sfdc006,sfdc007 ",
                     " FROM sfdc_t ",
                     " WHERE sfdcent   = ",g_enterprise,
                     "   AND sfdcdocno = '",g_sfda.sfdadocno,"' ",  #退料单号
                     "   AND sfdc001   = '",g_sfba.sfbadocno,"' ", #工单
                     "   AND sfdc002   = ",g_sfba.sfbaseq,         #项次
                     "   AND sfdc003   = ",g_sfba.sfbaseq1,        #项序
                     "   AND sfdc004   = '",g_sfba.sfba006,"' ", #料号
                     "   AND sfdc005   = '",g_sfba.sfba021,"' "  #特征
         PREPARE asft310_01_issue_p21 FROM l_sql
         DECLARE asft310_01_issue_c21 CURSOR FOR asft310_01_issue_p21
         FOREACH asft310_01_issue_c21 INTO l_sfdd.*
            IF SQLCA.sqlcode THEN
               CALL cl_err('foreach asft310_01_issue_c21 err',SQLCA.sqlcode,1)
               LET g_success = FALSE
               EXIT FOREACH
            END IF
            
            LET l_rec_b = l_rec_b + 1
            LET l_arr_r[l_rec_b].sfdc001  = l_sfdd.sfdc001  #工单
            LET l_arr_r[l_rec_b].sfdc002  = l_sfdd.sfdc002  #工单项次
            LET l_arr_r[l_rec_b].sfdc003  = l_sfdd.sfdc003  #工单项序
            LET l_arr_r[l_rec_b].sfdd001  = l_sfdd.sfdd001  #退料料号
            LET l_arr_r[l_rec_b].sfdc005  = l_sfdd.sfdc005  #特征
            LET l_arr_r[l_rec_b].sfdd003  = l_sfdd.sfdd003  #库位
            LET l_arr_r[l_rec_b].sfdd004  = l_sfdd.sfdd004  #储位
            LET l_arr_r[l_rec_b].sfdd005  = l_sfdd.sfdd005  #批号
            LET l_arr_r[l_rec_b].sfdd010  = l_sfdd.sfdd010  #库存管理特征
            LET l_arr_r[l_rec_b].sfdd006  = l_sfdd.sfdd006  #退料单位
            IF l_arr_r[l_rec_b].sfdd006 = g_sfba.sfba014 THEN
               LET l_arr_r[l_rec_b].sfdd007  = l_sfdd.sfdd007   #退料数量
            ELSE
               CALL s_aimi190_get_convert(l_sfdd.sfdd001,l_sfdd.sfdd006,g_sfba.sfba014)
                  RETURNING l_success,l_rate
               IF NOT l_success THEN
                  LET l_rate = 1
               END IF
               LET l_arr_r[l_rec_b].sfdd007  = l_sfdd.sfdd007 * l_rate  #退料数量
            END IF
         END FOREACH
         #本章退料单已生成于临时表中的
         LET l_sql = "SELECT sfdc001,sfdc002,sfdc003,sfdc004,sfdc005, ",
                     "       sfdc012,sfdc013,sfdc014,sfdc016,sfdc006,sfdc007 ",
                     " FROM asft310_01_sfdc_t ",
                     " WHERE sfdcent   = ",g_enterprise,
                     "   AND sfdc001   = '",g_sfba.sfbadocno,"' ", #工单
                     "   AND sfdc002   = ",g_sfba.sfbaseq,         #项次
                     "   AND sfdc003   = ",g_sfba.sfbaseq1,        #项序
                     "   AND sfdc004   = '",g_sfba.sfba006,"' ", #料号
                     "   AND sfdc005   = '",g_sfba.sfba021,"' "  #特征
         PREPARE asft310_01_issue_p22 FROM l_sql
         DECLARE asft310_01_issue_c22 CURSOR FOR asft310_01_issue_p22
         FOREACH asft310_01_issue_c22 INTO l_sfdd.*
            IF SQLCA.sqlcode THEN
               CALL cl_err('foreach asft310_01_issue_c22 err',SQLCA.sqlcode,1)
               LET g_success = FALSE
               EXIT FOREACH
            END IF
            
            LET l_rec_b = l_rec_b + 1
            LET l_arr_r[l_rec_b].sfdc001  = l_sfdd.sfdc001  #工单
            LET l_arr_r[l_rec_b].sfdc002  = l_sfdd.sfdc002  #工单项次
            LET l_arr_r[l_rec_b].sfdc003  = l_sfdd.sfdc003  #工单项序
            LET l_arr_r[l_rec_b].sfdd001  = l_sfdd.sfdd001  #退料料号
            LET l_arr_r[l_rec_b].sfdc005  = l_sfdd.sfdc005  #特征
            LET l_arr_r[l_rec_b].sfdd003  = l_sfdd.sfdd003  #库位
            LET l_arr_r[l_rec_b].sfdd004  = l_sfdd.sfdd004  #储位
            LET l_arr_r[l_rec_b].sfdd005  = l_sfdd.sfdd005  #批号
            LET l_arr_r[l_rec_b].sfdd010  = l_sfdd.sfdd010  #库存管理特征
            LET l_arr_r[l_rec_b].sfdd006  = l_sfdd.sfdd006  #退料单位
            IF l_arr_r[l_rec_b].sfdd006 = g_sfba.sfba014 THEN
               LET l_arr_r[l_rec_b].sfdd007  = l_sfdd.sfdd007   #退料数量
            ELSE
               CALL s_aimi190_get_convert(l_sfdd.sfdd001,l_sfdd.sfdd006,g_sfba.sfba014)
                  RETURNING l_success,l_rate
               IF NOT l_success THEN
                  LET l_rate = 1
               END IF
               LET l_arr_r[l_rec_b].sfdd007  = l_sfdd.sfdd007 * l_rate  #退料数量
            END IF
         END FOREACH
         
         #------发料------
         #tm.issue_type = '1'依工单发料仓储批 找出工單發料的倉儲批，且未退完料的(可能會找到多筆，找到數量滿足為止)
         #以下sql默认工单发料的所有仓储批
         LET l_sql = "SELECT sfdc001,sfdc002,sfdc003,sfdd001,sfdc005, ",
                     "       sfdd003,sfdd004,sfdd005,sfdd010,sfdd006,sfdd007 ",
                     "  FROM sfdd_t,sfdc_t,sfda_t ",
                     " WHERE sfddent   = sfdcent ",
                     "   AND sfdddocno = sfdcdocno ",
                     "   AND sfddseq   = sfdcseq ",
                     "   AND sfddent   = sfdaent ",
                     "   AND sfdddocno = sfdadocno ",
                     "   AND sfdcent   = ",g_enterprise,
                     "   AND sfdc001   = '",g_sfba.sfbadocno,"' ", #工单
                     "   AND sfdc002   = ",g_sfba.sfbaseq,         #项次
                     #"   AND sfdc003   = ",g_sfba.sfbaseq1,        #项序  mark发料中做取替代会有问题
                     "   AND sfdd001   = '",g_sfba.sfba006,"' ", #料号
                     "   AND sfdc005   = '",g_sfba.sfba021,"' ", #特征
                     "   AND sfdd012   = -1 ",  #发料
                     "   AND sfdastus  = 'S' "  #已扣帐的
         #IF tm.issue_type = '2' THEN #依料件預設庫位/儲位(發料前調撥料件使用預設在製庫位/儲位)
         #   #退料的倉儲預設為:退料料件的预设库位、储位(发料前调拨料件使用预设在制库位/储位)
         #   #如果工单指定的库位不为空白，则该笔数据改以工单指定的库、储位做为条件
         #   LET l_sql = l_sql CLIPPED," AND sfdd003='",l_inag004,"' AND sfdd004='",l_inag005,"' "
         #END IF
         #IF tm.issue_type = '3' THEN #自行指定庫位/儲位/批號(INPUT)
         #   LET l_sql = l_sql CLIPPED," AND sfdd003='",l_inag004,"' AND sfdd004='",l_inag005,"' ",
         #                             " AND sfdd005='",l_inag006,"' AND sfdd010='",l_inag003,"' "
         #END IF
         PREPARE asft310_01_issue_p1 FROM l_sql
         DECLARE asft310_01_issue_c1 CURSOR FOR asft310_01_issue_p1
         FOREACH asft310_01_issue_c1 INTO l_sfdd.*
            IF SQLCA.sqlcode THEN
               CALL cl_err('foreach asft310_01_issue_c err',SQLCA.sqlcode,1)
               LET g_success = FALSE
               EXIT FOREACH
            END IF
            #计算针对这笔发料，有没有已退的量，扣掉后再产生
            #统一折算成工单的单位进行计算
            IF l_sfdd.sfdd006 != g_sfba.sfba014 THEN   #发料单位，工单单位
               CALL s_aimi190_get_convert(l_sfdd.sfdd001,l_sfdd.sfdd006,g_sfba.sfba014)
                 RETURNING l_success,l_rate
               IF NOT l_success THEN
                  LET l_rate = 1
               END IF
               LET l_sfdd.sfdd007 = l_sfdd.sfdd007 * l_rate  #发料数量
            END IF
            
            #先从发料量中扣除退料量
            IF l_rec_b >= 1 THEN
               FOR l_idx = 1 TO l_rec_b
                   IF l_arr_r[l_idx].sfdd007 = 0 THEN  #退料数量
                      CONTINUE FOR
                   END IF
                   
                   IF tm.issue_type MATCHES '[23]' AND tm.return='Y' THEN
                      IF  l_arr_r[l_idx].sfdc001  = l_sfdd.sfdc001    #工单
                      AND l_arr_r[l_idx].sfdc002  = l_sfdd.sfdc002    #工单项次
                      #AND l_arr_r[l_idx].sfdc003  = l_sfdd.sfdc003    #工单项序  mark发料中做取替代会有问题
                      AND l_arr_r[l_idx].sfdd001  = l_sfdd.sfdd001    #退料料号
                      AND l_arr_r[l_idx].sfdc005  = l_sfdd.sfdc005    #特征
                      AND l_arr_r[l_idx].sfdd005  = l_sfdd.sfdd005    #批号
                      THEN
                         #计算发料中未退数量l_sfdd.sfdd007，即本次可退量
                         IF l_arr_r[l_idx].sfdd007  >= l_sfdd.sfdd007 THEN
                            #退料数量>本笔发料量
                            LET l_arr_r[l_idx].sfdd007 = l_arr_r[l_idx].sfdd007 - l_sfdd.sfdd007 #剩余待抵退料量
                            LET l_sfdd.sfdd007 = 0  #发料中未退量
                            EXIT FOR
                         ELSE
                            LET l_sfdd.sfdd007 = l_sfdd.sfdd007 - l_arr_r[l_idx].sfdd007  #发料中未退量
                            LET l_arr_r[l_idx].sfdd007 = 0 #剩余待抵退料量
                         END IF
                      END IF  #按发料的批号(tm.issue_type MATCHES '[23]' AND tm.return='Y')
                   ELSE
                      IF  l_arr_r[l_idx].sfdc001  = l_sfdd.sfdc001    #工单
                      AND l_arr_r[l_idx].sfdc002  = l_sfdd.sfdc002    #工单项次
                      #AND l_arr_r[l_idx].sfdc003  = l_sfdd.sfdc003    #工单项序  mark发料中做取替代会有问题
                      AND l_arr_r[l_idx].sfdd001  = l_sfdd.sfdd001    #退料料号
                      AND l_arr_r[l_idx].sfdc005  = l_sfdd.sfdc005    #特征
                      AND l_arr_r[l_idx].sfdd003  = l_sfdd.sfdd003    #库位
                      AND l_arr_r[l_idx].sfdd004  = l_sfdd.sfdd004    #储位
                      AND l_arr_r[l_idx].sfdd005  = l_sfdd.sfdd005    #批号
                      AND l_arr_r[l_idx].sfdd010  = l_sfdd.sfdd010    #库存管理特征
                      THEN
                         #计算发料中未退数量l_sfdd.sfdd007，即本次可退量
                         IF l_arr_r[l_idx].sfdd007  >= l_sfdd.sfdd007 THEN
                            #退料数量>本笔发料量
                            LET l_arr_r[l_idx].sfdd007 = l_arr_r[l_idx].sfdd007 - l_sfdd.sfdd007 #剩余待抵退料量
                            LET l_sfdd.sfdd007 = 0  #发料中未退量
                            EXIT FOR
                         ELSE
                            LET l_sfdd.sfdd007 = l_sfdd.sfdd007 - l_arr_r[l_idx].sfdd007  #发料中未退量
                            LET l_arr_r[l_idx].sfdd007 = 0 #剩余待抵退料量
                         END IF
                      END IF  #按tm.issue_type='1'发料的仓储批
                   END IF  #是哪种退料方式
               END FOR #发退量互相扣减
            END IF #有已退料的情况
            
            #发料中未退量=0 代表此笔发料资料无料可退
            IF l_sfdd.sfdd007 = 0 THEN
               CONTINUE FOREACH
            END IF
            
            #扣掉全部退料数量后仍有发料量，则产生到单身临时表中
            IF issue_qty1 <= l_sfdd.sfdd007 THEN
               LET l_qty = issue_qty1 #本笔退料量
               LET issue_qty1 = 0     #剩余退料量
               IF tm.issue_type MATCHES '[23]' AND tm.return='Y' THEN
                  CALL asft310_01_ins_sfdc('asft310_01_sfdc_t',l_inag004,l_inag005,l_sfdd.sfdd005,l_inag003,tm.reason,l_qty)
               ELSE
                  CALL asft310_01_ins_sfdc('asft310_01_sfdc_t',l_sfdd.sfdd003,l_sfdd.sfdd004,l_sfdd.sfdd005,l_sfdd.sfdd010,tm.reason,l_qty)
               END IF
               RETURN
            ELSE
               LET l_qty = l_sfdd.sfdd007           #本笔退料量
               LET issue_qty1 = issue_qty1 - l_qty  #剩余退料量
               IF tm.issue_type MATCHES '[23]' AND tm.return='Y' THEN
                  CALL asft310_01_ins_sfdc('asft310_01_sfdc_t',l_inag004,l_inag005,l_sfdd.sfdd005,l_inag003,tm.reason,l_qty)
               ELSE
                  CALL asft310_01_ins_sfdc('asft310_01_sfdc_t',l_sfdd.sfdd003,l_sfdd.sfdd004,l_sfdd.sfdd005,l_sfdd.sfdd010,tm.reason,l_qty)
               END IF
            END IF
         END FOREACH
  
      END IF
      
      IF tm.issue_type MATCHES '[23]' AND tm.return='N' THEN
         CALL asft310_01_ins_sfdc('asft310_01_sfdc_t',l_inag004,l_inag005,l_inag006,l_inag003,tm.reason,issue_qty1)
         RETURN
      END IF
      
   END IF
END FUNCTION]]>
</point>
  <point name="function.asft310_01_chk_sfdc007_2" cite_std="N" status="" ver="1" src="s" new="Y" order="21" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 检查申请数量——对库存足量否的检查
################################################################################
PRIVATE FUNCTION asft310_01_chk_sfdc007_2(p_cmd,p_sfdcseq,p_sfdc004,p_sfdc005,p_sfdc006,p_sfdc007,p_sfdc012,p_sfdc013,p_sfdc014,p_sfdc016)
DEFINE p_cmd            LIKE type_t.chr1
DEFINE p_sfdcseq        LIKE sfdc_t.sfdcseq  #项次
DEFINE p_sfdc004        LIKE sfdc_t.sfdc004  #料
DEFINE p_sfdc005        LIKE sfdc_t.sfdc005  #特徵
DEFINE p_sfdc006        LIKE sfdc_t.sfdc006  #单位
DEFINE p_sfdc007        LIKE sfdc_t.sfdc007  #数量
DEFINE p_sfdc012        LIKE sfdc_t.sfdc012  #仓
DEFINE p_sfdc013        LIKE sfdc_t.sfdc013  #储
DEFINE p_sfdc014        LIKE sfdc_t.sfdc014  #批
DEFINE p_sfdc016        LIKE sfdc_t.sfdc016  #库存管理特征
DEFINE r_success   LIKE type_t.num5
DEFINE l_qty            LIKE sfdc_t.sfdc007  #可发量

   LET r_success = TRUE 
   
   #料，仓库，数量为空不检查
   IF cl_null(p_sfdc004) OR cl_null(p_sfdc012) OR cl_null(p_sfdc007) OR p_sfdc007=0 THEN
      RETURN r_success
   END IF

   #退料不需检查库存足量
   IF g_prog[1,6]='asft32' THEN
      RETURN r_success
   END IF

   #库存可用数量
   CALL asft310_01_get_available_qty(p_cmd,p_sfdcseq,p_sfdc004,p_sfdc005,p_sfdc006,p_sfdc012,p_sfdc013,p_sfdc014,p_sfdc016)
       RETURNING l_qty
       
   IF p_sfdc007  > l_qty THEN  
      #不可超过库存可发数量1%,请重新输入！
      CALL cl_err_msg('','asf-00083',l_qty,1)
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.asft310_01_ins_sfdc" cite_std="N" status="u" ver="1" src="s" new="Y" order="22" mark_hard="N">
<![CDATA[################################################################################
# 插入需求单身sfdc_t 或 临时表单身asft310_01_sfdc_t
################################################################################
PRIVATE FUNCTION asft310_01_ins_sfdc(p_table,p_sfdc012,p_sfdc013,p_sfdc014,p_sfdc016,p_sfdc015,p_sfdc007)
DEFINE p_table       LIKE type_t.chr20     #目的表sfdc_t 或 asft310_01_sfdc_t
DEFINE p_sfdc012     LIKE sfdc_t.sfdc012   #库位
DEFINE p_sfdc013     LIKE sfdc_t.sfdc013   #储位
DEFINE p_sfdc014     LIKE sfdc_t.sfdc014   #批号
DEFINE p_sfdc016     LIKE sfdc_t.sfdc016   #库存管理特征
DEFINE p_sfdc015     LIKE sfdc_t.sfdc015   #理由码
DEFINE p_sfdc007     LIKE sfdc_t.sfdc007   #申请数量
DEFINE l_sfdc        RECORD LIKE sfdc_t.*
DEFINE l_sfdcseq     LIKE sfdc_t.sfdcseq   #临时表key值
DEFINE l_cnt         LIKE type_t.num5
DEFINE l_rate        LIKE inaj_t.inaj014   #单位换算率
DEFINE l_sfdc004     LIKE sfdc_t.sfdc004   #需求料号
DEFINE l_sfdc005     LIKE sfdc_t.sfdc005   #特征
DEFINE l_sfdc006     LIKE sfdc_t.sfdc006   #单位
DEFINE l_sfdc009     LIKE sfdc_t.sfdc009   #参考单位
DEFINE l_sfdc010     LIKE sfdc_t.sfdc010   #参考单位数量

   IF cl_null(p_sfdc007) OR p_sfdc007 = 0 THEN
      RETURN
   END IF
   IF cl_null(p_sfdc012) THEN LET p_sfdc012 = ' ' END IF
   IF cl_null(p_sfdc013) THEN LET p_sfdc013 = ' ' END IF
   IF cl_null(p_sfdc014) THEN LET p_sfdc014 = ' ' END IF
   IF cl_null(p_sfdc016) THEN LET p_sfdc016 = ' ' END IF
   
   #检查单身是否已存在相同发料资料，若有则叠加，若无则新增
   LET g_sql = "SELECT sfdcseq,sfdc004,sfdc005,sfdc006,sfdc009 ",
               "  FROM ",p_table,  #asft310_01_sfdc_t
               " WHERE sfdcent  = ",g_enterprise,
               "   AND sfdcdocno= '",g_sfdadocno,"' ",
               "   AND sfdc001  = '",g_sfba.sfbadocno,"' ",   #工单单号
               "   AND sfdc002  = ",g_sfba.sfbaseq,           #工单项次
               "   AND sfdc003  = ",g_sfba.sfbaseq1,          #工单项序
               "   AND sfdc012  = '",p_sfdc012,"' ",    #指定库位
               "   AND sfdc013  = '",p_sfdc013,"' ",    #指定储位
               "   AND sfdc014  = '",p_sfdc014,"' ",    #指定批号
               "   AND sfdc016  = '",p_sfdc016,"' "     #库存管理特征
   IF cl_null(p_sfdc015) THEN
      LET g_sql = g_sql CLIPPED," AND sfdc015 IS NULL "     #理由码
   ELSE
      LET g_sql = g_sql CLIPPED," AND sfdc015  = '",p_sfdc015,"' "     #理由码
   END IF
   DECLARE asft310_01_ins_sfdc_c1 SCROLL CURSOR FROM g_sql
   IF SQLCA.sqlcode THEN
      CALL cl_err('declare asft310_01_ins_sfdc_c1 err',SQLCA.sqlcode,1)
      LET g_success = FALSE
      RETURN
   END IF
   OPEN asft310_01_ins_sfdc_c1
   IF SQLCA.sqlcode THEN
      CALL cl_err('open asft310_01_ins_sfdc_c1 err',SQLCA.sqlcode,1)
      LET g_success = FALSE
      RETURN
   END IF
   FETCH FIRST asft310_01_ins_sfdc_c1 INTO l_sfdcseq,l_sfdc004,l_sfdc005,l_sfdc006,l_sfdc009 
   CLOSE asft310_01_ins_sfdc_c1
   
   IF NOT cl_null(l_sfdcseq) AND l_sfdcseq > 0 THEN
      IF NOT cl_null(l_sfdc009) THEN
         #参考单位申请数量=申请数量经过转换率换算为参考单位的数量
         CALL s_aimi190_get_convert(l_sfdc004,l_sfdc006,l_sfdc009) RETURNING l_success,l_rate
         IF NOT l_success THEN
            LET l_rate = 1
         END IF
         LET l_sfdc010 = p_sfdc007 * l_rate
      ELSE
         LET l_sfdc010 = 0
      END IF

      LET g_sql = "UPDATE ",p_table,  #asft310_01_sfdc_t,sfdc_t
                  "   SET sfdc007 = sfdc007 + ",p_sfdc007,",",  #申请数量
                  "       sfdc010 = sfdc010 + ",l_sfdc010,      #参考单位需求数量
                  " WHERE sfdcent  = ",g_enterprise,
                  "   AND sfdcdocno= '",g_sfdadocno,"' ",
                  "   AND sfdcseq  = ",l_sfdcseq
      PREPARE asft310_01_ins_sfdc_p3 FROM g_sql
      EXECUTE asft310_01_ins_sfdc_p3
      IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
         CALL cl_err('update sfdc',SQLCA.sqlcode,1)
         LET g_success = FALSE
         RETURN
      END IF
      FREE asft310_01_ins_sfdc_p3
      #如果是实体表的需同步sfde。另因sfdc只更新了需求申请数量，不涉及实际发料数量的变化，故sfdd、sfdf不做变化
      IF p_table = 'sfdc_t' THEN
         #发料单：将发料需求单身相同的需求料号+特征+单位+参考单位+客供料汇总到同一笔资料
         #退料单：将退料需求单身相同的需求料号+特征+单位+参考单位汇总到同一笔数据
         LET g_sql = " UPDATE sfde_t SET sfde004 = sfde004 + ",p_sfdc007,",",  #申請數量
                     "                   sfde007 = sfde007 + ",l_sfdc010,      #參考單位申請數量
                     " WHERE sfdeent  = ",g_enterprise,
                     "   AND sfdedocno= '",g_sfdadocno,"' ",
                     "   AND sfde001  = '",l_sfdc004,"' ",  #需求料号
                     "   AND sfde002  = '",l_sfdc005,"' ",  #特征
                     "   AND sfde003  = '",l_sfdc006,"' "   #单位
                     #"   AND sfde006  = '",l_sfdc009,"' "   #参考单位

         IF l_sfdc009 IS NULL THEN
            LET g_sql = g_sql CLIPPED," AND sfde006 IS NULL "
         ELSE
            LET g_sql = g_sql CLIPPED," AND sfde006 = '",l_sfdc009,"' "
         END IF 
         IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
            LET g_sql = g_sql CLIPPED," AND sfde009  = '",g_sfba.sfba028,"' "  #客供料
         END IF
         PREPARE asft310_01_ins_sfdc_p4 FROM g_sql
         EXECUTE asft310_01_ins_sfdc_p4
         IF SQLCA.sqlcode THEN
            CALL cl_err('update sfde',SQLCA.sqlcode,1)
            LET g_success = FALSE
            RETURN
         END IF
         FREE asft310_01_ins_sfdc_p4
      END IF
   ELSE
      LET l_sfdc.sfdcent   = g_enterprise
      LET l_sfdc.sfdcsite  = g_site
      LET l_sfdc.sfdcdocno = g_sfdadocno    #发料单号
      
      LET g_sql = "SELECT MAX(sfdcseq)+1 ",  #临时表项次
                  "  FROM ",p_table,  #asft310_01_sfdc_t
                  " WHERE sfdcent  = ",g_enterprise,
                  "   AND sfdcdocno= '",g_sfdadocno,"' "
      PREPARE asft310_01_ins_sfdc_p2 FROM g_sql
      EXECUTE asft310_01_ins_sfdc_p2 INTO l_sfdc.sfdcseq
      IF cl_null(l_sfdc.sfdcseq) THEN LET l_sfdc.sfdcseq = 1 END IF
      FREE asft310_01_ins_sfdc_p2
      
      LET l_sfdc.sfdc001 = g_sfba.sfbadocno  #工单单号
      LET l_sfdc.sfdc002 = g_sfba.sfbaseq    #工单项次
      LET l_sfdc.sfdc003 = g_sfba.sfbaseq1   #工单项序
      LET l_sfdc.sfdc004 = g_sfba.sfba006    #需求料号
      LET l_sfdc.sfdc005 = g_sfba.sfba021    #特征
      IF cl_null(l_sfdc.sfdc005) THEN LET l_sfdc.sfdc005 = ' ' END IF
      LET l_sfdc.sfdc006 = g_sfba.sfba014    #单位
      LET l_sfdc.sfdc007 = p_sfdc007          #申请数量
      LET l_sfdc.sfdc008 = l_sfdc.sfdc007     #实际数量
      SELECT imaf015 INTO l_sfdc.sfdc009      #参考单位
        FROM imaf_t
       WHERE imafent = g_enterprise
         AND imafsite= g_site
         AND imaf001 = l_sfdc.sfdc004
      IF cl_null(l_sfdc.sfdc009) THEN
         LET l_sfdc.sfdc010 = 0       #参考单位需求数量
         LET l_sfdc.sfdc011 = 0       #参考单位实际数量
      ELSE
         #参考单位申请数量=申请数量经过转换率换算为参考单位的数量
         CALL s_aimi190_get_convert(l_sfdc.sfdc004,l_sfdc.sfdc006,l_sfdc.sfdc009) RETURNING l_success,l_rate
         IF NOT l_success THEN
            LET l_rate = 1
         END IF
         LET l_sfdc.sfdc010 = l_sfdc.sfdc007 * l_rate
         LET l_sfdc.sfdc011 = l_sfdc.sfdc010       #参考单位实际数量
      END IF
      LET l_sfdc.sfdc012 = p_sfdc012         #指定库位
      LET l_sfdc.sfdc013 = p_sfdc013         #指定储位
      LET l_sfdc.sfdc014 = p_sfdc014         #指定批号
      LET l_sfdc.sfdc015 = p_sfdc015         #理由码
      LET l_sfdc.sfdc016 = p_sfdc016         #库存管理特征
      IF g_prog[1,6]='asft31' THEN
         LET l_sfdc.sfdc017 = -1                #正负 发料为-1
      END IF
      IF g_prog[1,6]='asft32' THEN
         LET l_sfdc.sfdc017 =  1                #正负 退料为1
      END IF

      CASE p_table
         WHEN 'asft310_01_sfdc_t'
              INSERT INTO asft310_01_sfdc_t VALUES (l_sfdc.*)
              IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
                 CALL cl_err('update',SQLCA.sqlcode,1)
                 LET g_success = FALSE
                 RETURN
              END IF
         WHEN 'sfdc_t'
              INSERT INTO sfdc_t VALUES (l_sfdc.*)
              IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
                 CALL cl_err('update',SQLCA.sqlcode,1)
                 LET g_success = FALSE
                 RETURN
              END IF
              #同步新增sfdd
              CALL s_asft310_chg_sfdd_f_sfdc_ins(l_sfdc.sfdcdocno,l_sfdc.sfdcseq) RETURNING l_success
              IF NOT l_success THEN
                 LET g_success = FALSE
                 RETURN
              END IF
              #新增或更新sfde(包含新增或更新sfdf)
              CALL s_asft310_chg_sfde_f_sfdc_ins(l_sfdc.sfdcdocno,l_sfdc.sfdcseq) RETURNING l_success
              IF NOT l_success THEN
                 LET g_success = FALSE
                 RETURN
              END IF
      END CASE
   END IF
END FUNCTION]]>
</point>
  <point name="function.asft310_01_gen" cite_std="N" status="" ver="1" src="s" new="Y" order="23" mark_hard="N">
<![CDATA[#由临时表产生至发料需求档sfdc_t
PRIVATE FUNCTION asft310_01_gen()
DEFINE l_sfdc     RECORD LIKE sfdc_t.*
   
   #将有指定库位的资料产生到需求页签
   LET g_sql = "SELECT * FROM asft310_01_sfdc_t WHERE sfdc012 IS NOT NULL AND sfdc012 != ' ' "
   PREPARE asft310_01_gen_p FROM g_sql
   IF SQLCA.sqlcode THEN
      CALL cl_err('prepare asft310_01_gen_c err',SQLCA.sqlcode,1)
      LET g_success = FALSE
      FREE asft310_01_gen_p
      RETURN
   END IF
   DECLARE asft310_01_gen_c CURSOR FOR asft310_01_gen_p
   IF SQLCA.sqlcode THEN
      CALL cl_err('declare asft310_01_gen_c err',SQLCA.sqlcode,1)
      LET g_success = FALSE
      FREE asft310_01_gen_p
      RETURN
   END IF
   FOREACH asft310_01_gen_c INTO l_sfdc.*
       IF SQLCA.sqlcode THEN
          CALL cl_err('foreach asft310_01_gen_c err',SQLCA.sqlcode,1)
          LET g_success = FALSE
          EXIT FOREACH
       END IF
       
       INITIALIZE g_sfba.* TO NULL
       SELECT * INTO g_sfba.* FROM sfba_t
        WHERE sfbaent  = l_sfdc.sfdcent
          AND sfbasite = l_sfdc.sfdcsite
          AND sfbadocno= l_sfdc.sfdc001
          AND sfbaseq  = l_sfdc.sfdc002
          AND sfbaseq1 = l_sfdc.sfdc003
          
       CALL asft310_01_ins_sfdc('sfdc_t',l_sfdc.sfdc012,l_sfdc.sfdc013,l_sfdc.sfdc014,l_sfdc.sfdc016,l_sfdc.sfdc015,l_sfdc.sfdc007)
   END FOREACH
   FREE asft310_01_gen_p
END FUNCTION]]>
</point>
  <point name="function.asft310_01_get_available_qty" cite_std="N" status="" ver="1" src="s" new="Y" order="24" mark_hard="N">
<![CDATA[################################################################################
# 获取库存可用数量=库存量-在捡量-已存入本单据sfdc_t占用掉的量-已在本单据临时表asft310_01_sfdc_t其他项次占用掉的量
################################################################################
PRIVATE FUNCTION asft310_01_get_available_qty(p_cmd,p_sfdcseq,p_sfdc004,p_sfdc005,p_sfdc006,p_sfdc012,p_sfdc013,p_sfdc014,p_sfdc016)
DEFINE p_cmd            LIKE type_t.chr1
DEFINE p_sfdcseq        LIKE sfdc_t.sfdcseq  #项次
DEFINE p_sfdc004        LIKE sfdc_t.sfdc004  #料
DEFINE p_sfdc005        LIKE sfdc_t.sfdc005  #特徵
DEFINE p_sfdc006        LIKE sfdc_t.sfdc006  #单位
DEFINE p_sfdc012        LIKE sfdc_t.sfdc012  #仓
DEFINE p_sfdc013        LIKE sfdc_t.sfdc013  #储
DEFINE p_sfdc014        LIKE sfdc_t.sfdc014  #批
DEFINE p_sfdc016        LIKE sfdc_t.sfdc016  #库存管理特征
DEFINE r_qty            LIKE sfdc_t.sfdc007  #剩余库存可用数量
DEFINE l_store_qty      LIKE sfdc_t.sfdc007  #库存量
DEFINE l_wip_qty        LIKE sfdc_t.sfdc007  #在捡量
DEFINE l_sfdc007_sum    LIKE sfdc_t.sfdc007  #本发料单据其他项次的数量
DEFINE l_imaf053     LIKE imaf_t.imaf053  #库存单位
DEFINE l_imaf054     LIKE imaf_t.imaf054  #库存多单位否
DEFINE l_sfdc006     LIKE sfdc_t.sfdc006  #需出库的库存单位
DEFINE l_sfdc007     LIKE sfdc_t.sfdc007  #本发料单据其他项次的数量
DEFINE l_sql         STRING
DEFINE l_rate        LIKE inaj_t.inaj014  #单位换算率
DEFINE l_success     LIKE type_t.num5
      
   LET r_qty = 0
   
   IF cl_null(p_sfdc005) THEN LET p_sfdc005 = ' ' END IF #产品特征
   IF cl_null(p_sfdc013) THEN LET p_sfdc013 = ' ' END IF #储位
   IF cl_null(p_sfdc014) THEN LET p_sfdc014 = ' ' END IF #批号
   IF cl_null(p_sfdc016) THEN LET p_sfdc016 = ' ' END IF #库存管理特征
   
   #-------->库存量
   CALL s_inventory_get_inag008_3(g_site,p_sfdc004,p_sfdc005,p_sfdc012,p_sfdc013,p_sfdc014,p_sfdc016,p_sfdc006) RETURNING l_success,l_store_qty
   
   #-------->在捡量
   LET l_wip_qty = 0
   IF cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0070')='Y' THEN  #参数考虑在捡量
   #   CALL s_xxx_xxx() RETURNING l_wip_qty    #料号+库位的所有在捡量 zll
   END IF
   
   #可发量
   LET r_qty = l_store_qty - l_wip_qty  #库存量-在捡量
   IF r_qty <= 0 THEN
      LET r_qty = 0
      RETURN r_qty
   END IF
   
   
   #######以下缘于库存档中单位的管理#######
   #若料件使用多单位，则只能从存储为指定库存单位的库存量中出库
   #若料件使用单一单位，则只能从存储为库存单位的库存量中出库
   #检查料件是否使用多单位，及库存单位
   SELECT imaf053,imaf054 INTO l_imaf053,l_imaf054
     FROM imaf_t
    WHERE imafent = g_enterprise AND imafsite = g_site AND imaf001 = p_sfdc004
   IF SQLCA.sqlcode THEN
      CALL cl_err('sel imaf',SQLCA.sqlcode,1)
      LET g_success = FALSE
      LET r_qty = 0
      RETURN r_qty
   END IF
   IF l_imaf054='N' AND cl_null(l_imaf053) THEN
      #缺少库存单位,请查询[集团预设料件据点库存资料维护作业aimm202]！
      CALL cl_err(p_sfdc004,'aim-00203',1)
      LET r_qty = 0
      RETURN r_qty
   END IF
   #-------->已存入本单据sfdc_t占用掉的量
   LET l_sql = "SELECT sfdc006,SUM(sfdc007) FROM sfdc_t ",
               " WHERE sfdcent  = ",g_enterprise,
               "   AND sfdcdocno= '",g_sfdadocno,"' ",       #发料单单号
               "   AND sfdc004  = '",p_sfdc004,"' ", #料
               "   AND sfdc005  = '",p_sfdc005,"' ", #特征
               "   AND sfdc012  = '",p_sfdc012,"' ", #仓
               "   AND sfdc013  = '",p_sfdc013,"' ", #储
               "   AND sfdc014  = '",p_sfdc014,"' ", #批
               "   AND sfdc016  = '",p_sfdc016,"' "  #库存管理特征
   IF l_imaf054 = 'Y' THEN   #库存使用多单位
      #发料只能用inag007=指定发料单位的库存资料 发料单位若不存在与库存档中视为无库存
      LET l_sql = l_sql CLIPPED," AND sfdc006 ='",p_sfdc006,"' "   #单位=发料指定单位
   ELSE  #库存使用单一单位
      #发料只能用inag007=库存单位的库存资料 发料单位与库存单位不一致则将库存单位折算成发料单位来发料
      #所以，其他项次的任意单位都算已占用,因此此处无需增加where条件
   END IF
   LET l_sql = l_sql CLIPPED," GROUP BY sfdc006 "
   PREPARE asft310_01_chk_sfdc007_2_p1 FROM l_sql
   IF SQLCA.sqlcode THEN
      CALL cl_err('prepare asft310_01_chk_sfdc007_2_p1 err',SQLCA.sqlcode,1)
      LET g_success = FALSE
      FREE asft310_01_chk_sfdc007_2_p1
      RETURN r_qty
   END IF
   DECLARE asft310_01_chk_sfdc007_2_c1 CURSOR FOR asft310_01_chk_sfdc007_2_p1
   IF SQLCA.sqlcode THEN
      CALL cl_err('declare asft310_01_chk_sfdc007_2_p1 err',SQLCA.sqlcode,1)
      LET g_success = FALSE
      FREE asft310_01_chk_sfdc007_2_p1
      RETURN r_qty
   END IF
   LET l_sfdc007_sum = 0
   FOREACH asft310_01_chk_sfdc007_2_c1 INTO l_sfdc006,l_sfdc007
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach asft310_01_chk_sfdc007_2_p1 err',SQLCA.sqlcode,1)
         LET g_success = FALSE
         EXIT FOREACH
      END IF 
      
      IF cl_null(l_sfdc007) THEN LET l_sfdc007 = 0 END IF
      IF p_sfdc006 = l_sfdc006 THEN
         LET l_sfdc007_sum = l_sfdc007_sum + l_sfdc007
      ELSE
         CALL s_aimi190_get_convert(p_sfdc004,l_sfdc006,p_sfdc006) RETURNING l_success,l_rate
         IF NOT l_success THEN
            LET l_rate = 1
         END IF
         LET l_sfdc007_sum = l_sfdc007_sum + l_sfdc007 * l_rate
      END IF
   END FOREACH
   FREE asft310_01_chk_sfdc007_2_p1
   
   #可发数量
   LET r_qty = r_qty - l_sfdc007_sum  #库存量-在捡量-"已存入本单据sfdc_t占用掉的量"
   IF r_qty <= 0 THEN
      LET r_qty = 0
      RETURN r_qty
   END IF

   #-------->已在本单据临时表asft310_01_sfdc_t其他项次占用掉的量
   #本发料单据中料+特征+仓储批+库存管理特征在其他项次已填入的数量
   IF p_cmd = 'u' THEN
      LET l_sql = "SELECT sfdc006,SUM(sfdc007) FROM asft310_01_sfdc_t ",
                  " WHERE sfdcent  = ",g_enterprise,
                  "   AND sfdcdocno= '",g_sfdadocno,"' ",       #发料单单号
                  "   AND sfdcseq != ",p_sfdcseq,
                  "   AND sfdc004  = '",p_sfdc004,"' ", #料
                  "   AND sfdc005  = '",p_sfdc005,"' ", #特征
                  "   AND sfdc012  = '",p_sfdc012,"' ", #仓
                  "   AND sfdc013  = '",p_sfdc013,"' ", #储
                  "   AND sfdc014  = '",p_sfdc014,"' ", #批
                  "   AND sfdc016  = '",p_sfdc016,"' "  #库存管理特征
   ELSE
      LET l_sql = "SELECT sfdc006,SUM(sfdc007) FROM asft310_01_sfdc_t ",
                  " WHERE sfdcent  = ",g_enterprise,
                  "   AND sfdcdocno= '",g_sfdadocno,"' ",       #发料单单号
                  "   AND sfdc004  = '",p_sfdc004,"' ", #料
                  "   AND sfdc005  = '",p_sfdc005,"' ", #特征
                  "   AND sfdc012  = '",p_sfdc012,"' ", #仓
                  "   AND sfdc013  = '",p_sfdc013,"' ", #储
                  "   AND sfdc014  = '",p_sfdc014,"' ", #批
                  "   AND sfdc016  = '",p_sfdc016,"' "  #库存管理特征
   END IF
   IF l_imaf054 = 'Y' THEN   #库存使用多单位
      LET l_sql = l_sql CLIPPED," AND sfdc006 ='",p_sfdc006,"' "   #单位=发料指定单位
   ELSE  #库存使用单一单位
      #其他项次的任意单位都算已占用,因此此处无需增加where条件
   END IF
   LET l_sql = l_sql CLIPPED," GROUP BY sfdc006 "
   PREPARE asft310_01_chk_sfdc007_2_p2 FROM l_sql
   IF SQLCA.sqlcode THEN
      CALL cl_err('prepare asft310_01_chk_sfdc007_2_p2 err',SQLCA.sqlcode,1)
      LET g_success = FALSE
      FREE asft310_01_chk_sfdc007_2_p2
      RETURN r_qty
   END IF
   DECLARE asft310_01_chk_sfdc007_2_c2 CURSOR FOR asft310_01_chk_sfdc007_2_p2
   IF SQLCA.sqlcode THEN
      CALL cl_err('declare asft310_01_chk_sfdc007_2_p2 err',SQLCA.sqlcode,1)
      LET g_success = FALSE
      FREE asft310_01_chk_sfdc007_2_p2
      RETURN r_qty
   END IF
   LET l_sfdc007_sum = 0
   FOREACH asft310_01_chk_sfdc007_2_c2 INTO l_sfdc006,l_sfdc007 
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach asft310_01_chk_sfdc007_2_p2 err',SQLCA.sqlcode,1)
         LET g_success = FALSE
         EXIT FOREACH
      END IF
      
      IF cl_null(l_sfdc007) THEN LET l_sfdc007 = 0 END IF
      IF p_sfdc006 = l_sfdc006 THEN
         LET l_sfdc007_sum = l_sfdc007_sum + l_sfdc007
      ELSE
         CALL s_aimi190_get_convert(p_sfdc004,l_sfdc006,p_sfdc006) RETURNING l_success,l_rate
         IF NOT l_success THEN
            LET l_rate = 1
         END IF
         LET l_sfdc007_sum = l_sfdc007_sum + l_sfdc007 * l_rate
      END IF
   END FOREACH
   FREE asft310_01_chk_sfdc007_2_p2
              
   #可发数量
   LET r_qty = r_qty - l_sfdc007_sum  #库存量-在捡量-已存入本单据sfdc_t占用掉的量-"已在本单据临时表asft310_01_sfdc_t其他项次占用掉的量"
   IF r_qty <= 0 THEN
      LET r_qty = 0
      RETURN r_qty
   END IF
   RETURN r_qty
END FUNCTION]]>
</point>
  <point name="function.asft310_01_choice" cite_std="N" status="" ver="1" src="s" new="Y" order="25" mark_hard="N">
<![CDATA[#选择处理方式
PRIVATE FUNCTION asft310_01_choice()
   LET g_choice = cl_ask_choice(cl_getmsg('asf-00184',g_lang) )
   IF cl_null(g_choice) OR g_choice NOT MATCHES '[123]' THEN
      CALL cl_err('','apm-00417',1)
      CALL asft310_01_choice()
   END IF
END FUNCTION]]>
</point>
  <point name="function.asft310_01_generate" cite_std="N" status="" ver="1" src="s" new="Y" order="26" mark_hard="N">
<![CDATA[#根据条件产生单身数据
PRIVATE FUNCTION asft310_01_generate()
   
   IF cl_null(tm.wc) THEN
      LET tm.wc = " 1=1"
   END IF
   IF cl_null(tm2.wc) THEN
      LET tm2.wc = " 1=1"
   END IF
   
   CASE g_sfda.sfda002
      WHEN '11'   #成套发料
           CALL asft310_01_g_b11()
      WHEN '12'   #超领发
           CALL asft310_01_g_b12()
      WHEN '13'   #欠料补料
           CALL asft310_01_g_b13()
      WHEN '21'   #成套退料
           CALL asft310_01_g_b21()
      WHEN '22'   #超领退
           CALL asft310_01_g_b22()
      OTHERWISE

   END CASE
END FUNCTION]]>
</point>
  <point name="function.asft310_01_g_b11" cite_std="N" status="" ver="1" src="s" new="Y" order="27" mark_hard="N">
<![CDATA[#成套发料
PRIVATE FUNCTION asft310_01_g_b11()
DEFINE l_sfaa         RECORD LIKE sfaa_t.*  #工单单头
DEFINE l_sfdb         RECORD LIKE sfdb_t.*  #发退料 套数单身
DEFINE l_sfba         RECORD LIKE sfba_t.*  #替代料对应元件的信息
DEFINE l_qty          LIKE sfdb_t.sfdb006   #发料单上已产生的发料数量 --实体sfdc中的和本画面上临时sfdc中的
DEFINE l_qty2         LIKE sfdb_t.sfdb006   #有替代料的情况：原件，及其他替代料已产生到本画面上单身处已产生的sfdc007对应套数
DEFINE l_issue_qty    LIKE sfdc_t.sfdc007    #在捡量
DEFINE l_sfba016      LIKE sfba_t.sfba016   #计算已发量(包含元件+所有替代料的已发量)
DEFINE l_sets         LIKE sfdb_t.sfdb006   #已发量(包含元件+所有替代料的已发量) 计算出的套数

   DECLARE asft310_01_g_b11_sfdb_c CURSOR FOR
      SELECT * FROM sfdb_t WHERE sfdbent=g_enterprise AND sfdbdocno=g_sfdadocno
   FOREACH asft310_01_g_b11_sfdb_c INTO l_sfdb.* #发退料 套数单身
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach asft310_01_g_b11_sfdb_c err',SQLCA.sqlcode,1)
         LET g_success = FALSE
         EXIT FOREACH
      END IF
      
      SELECT * INTO l_sfaa.*  #工单单头
        FROM sfaa_t
       WHERE sfaaent = g_enterprise AND sfaadocno = l_sfdb.sfdb001
      IF SQLCA.sqlcode THEN
         CALL cl_err('sel sfaa',SQLCA.sqlcode,1)
         LET g_success = FALSE
         EXIT FOREACH
      END IF

      LET g_sql = "SELECT sfba_t.*,imaf091,imaf092,imae101,imae102,imae103,imae104,imae092 ",
                  "  FROM sfba_t,imaa_t,imaf_t,imae_t ",
                  " WHERE sfbaent = imaaent AND sfba006 = imaa001 ",
                  "   AND sfbaent = imafent AND sfbasite = imafsite AND sfba006 = imaf001 ",
                  "   AND sfbaent = imaeent AND sfbasite = imaesite AND sfba006 = imae001 ",
                  "   AND sfbaent = ",g_enterprise,
                  "   AND sfbasite= '",g_site,"' ",
                  "   AND sfbadocno= '",l_sfdb.sfdb001,"' ",   #工单单号
                  "   AND sfba009  = 'N' ",          #倒扣料
                  "   AND (sfba013 - sfba015) >0 ",  #应发-委外代买量>0
                  "   AND sfba008 != '4' ",          #非参考材料
                  "   AND ",tm.wc CLIPPED            #画面QBE条件
      IF NOT cl_null(l_sfdb.sfdb003) THEN  #部位
         LET g_sql = g_sql CLIPPED,"  AND sfba002 = '",l_sfdb.sfdb003,"'"
      END IF
    
      IF NOT cl_null(l_sfdb.sfdb004) THEN  #作业编号
         LET g_sql = g_sql CLIPPED,"  AND sfba003 = '",l_sfdb.sfdb004,"'"
      END IF
    
      IF NOT cl_null(l_sfdb.sfdb005) THEN  #作业序
         LET g_sql = g_sql CLIPPED,"  AND sfba004 = '",l_sfdb.sfdb005,"'"
      END IF
      
      #非制程委外发料 这里不考虑 sfdb002
      
      LET g_sql = g_sql CLIPPED," ORDER BY sfbaseq,sfbaseq1"
      PREPARE asft310_01_g_b11_sfba_p FROM g_sql
      DECLARE asft310_01_g_b11_sfba_c CURSOR FOR asft310_01_g_b11_sfba_p
      FOREACH asft310_01_g_b11_sfba_c INTO g_sfba.*,g_imaf091,g_imaf092,g_imae101,g_imae102,g_imae103,g_imae104,g_imae092  #工单备料单身
         IF SQLCA.sqlcode THEN
            CALL cl_err('foreach asft310_01_g_b11_sfba_c err',SQLCA.sqlcode,1)
            LET g_success = FALSE
            EXIT FOREACH
         END IF
         
         #IF g_sfba.sfbaseq1 > 0 THEN  #替代料
            #抓出原件资料
            SELECT * INTO l_sfba.* FROM sfba_t
             WHERE sfbaent   = g_sfba.sfbaent
               AND sfbadocno = g_sfba.sfbadocno
               AND sfbaseq   = g_sfba.sfbaseq
               AND sfbaseq1  = 0
            IF SQLCA.sqlcode THEN
               CALL cl_err('',SQLCA.sqlcode,1)
               LET g_success = FALSE
               EXIT FOREACH
            END IF
         #END IF

         #指定仓库储位
         IF cl_null(g_sfba.sfba019) THEN LET g_sfba.sfba019 = ' '  END IF
         IF cl_null(g_sfba.sfba020) THEN LET g_sfba.sfba020 = ' '  END IF
         #预设仓库储位
         IF cl_null(g_imaf091) THEN LET g_imaf091 = ' ' END IF
         IF cl_null(g_imaf092) THEN LET g_imaf092 = ' ' END IF
         #预设发料/退料库位储位
         IF cl_null(g_imae101) THEN LET g_imae101 = ' ' END IF
         IF cl_null(g_imae102) THEN LET g_imae102 = ' ' END IF
         IF cl_null(g_imae103) THEN LET g_imae103 = ' ' END IF
         IF cl_null(g_imae104) THEN LET g_imae104 = ' ' END IF

         #工单单身某笔总共应发=应发-扣除委外代買量
         LET g_sfba.sfba013=g_sfba.sfba013-g_sfba.sfba015
         
         #发料时的應發量
         IF l_sfdb.sfdb006 > 0 THEN
            IF l_sfdb.sfdb006 = l_sfaa.sfaa012 - l_sfaa.sfaa049 THEN  #預計發料套數=生產數量-已發套數,即要把剩余
               #應發總數量-已發數量
               LET issue_qty = g_sfba.sfba013 - g_sfba.sfba016
               
               #计算发料单上已产生的发料数量
               CALL asft310_01_get_qty(g_sfba.sfbadocno,g_sfba.sfbaseq,g_sfba.sfbaseq1) RETURNING l_qty
               #计算剩下的应发量
               LET issue_qty = issue_qty - l_qty
            ELSE
               ##发料套数*QPA分子/QPA分母
               #LET issue_qty  =l_sfdb.sfdb006 * g_sfba.sfba010 / g_sfba.sfba011
               #考虑可能有取替代料的情况
               #计算本单据上已发量(包含元件+所有替代料的已发量)(不包括备料档),折算成元件的已发量
               CALL asft310_01_get_sfba016_2(g_sfba.sfbadocno,g_sfba.sfbaseq) RETURNING l_sfba016
               #根据已发量计算该料已发套数
               LET l_sets = l_sfba016 * l_sfba.sfba011 / l_sfba.sfba010
               IF l_sets >= l_sfdb.sfdb006 THEN #已发套数 >= 需求套数
                  CONTINUE FOREACH
               END IF
               
               IF g_sfba.sfbaseq1 = 0 THEN  #非替代料 未发套数*QPA分子/QPA分母
                  LET issue_qty = (l_sfdb.sfdb006 - l_sets) * l_sfba.sfba010 / l_sfba.sfba011
               ELSE  #替代料  未发套数*(QPA分子/QPA分母)*替代率=元件应发量*替代率=替代料的应发量
                  LET issue_qty = ((l_sfdb.sfdb006 - l_sets) * l_sfba.sfba010 / l_sfba.sfba011)*g_sfba.sfba022
               END IF
            END IF
         ELSE  #=0代表欠料补料 把已发套数中不足的部分补发出去
            IF l_sfaa.sfaa049 = l_sfaa.sfaa012 THEN  #已發套數=生產數量,即要把剩余
               #應發總數量-已發數量
               LET issue_qty = g_sfba.sfba013 - g_sfba.sfba016
               
               #计算发料单上已产生的发料数量
               CALL asft310_01_get_qty(g_sfba.sfbadocno,g_sfba.sfbaseq,g_sfba.sfbaseq1) RETURNING l_qty
               #计算剩下的应发量
               LET issue_qty = issue_qty - l_qty
            ELSE
               ##发料套数*QPA分子/QPA分母 - 已发
               #LET issue_qty = l_sfaa.sfaa049 * g_sfba.sfba010 / g_sfba.sfba011 - g_sfba.sfba016
               #考虑可能有取替代料的情况
               #计算备料+本单据上所有已发量(包含元件+所有替代料的已发量),折算成元件的已发量
               CALL asft310_01_get_sfba016(g_sfba.sfbadocno,g_sfba.sfbaseq) RETURNING l_sfba016
               #根据已发量计算该料已发套数
               LET l_sets = l_sfba016 * l_sfba.sfba011 / l_sfba.sfba010
               IF l_sets >= l_sfaa.sfaa049 THEN #此元件已发套数 >= 工单已发套数 不需欠料补料
                  CONTINUE FOREACH
               END IF
               
               IF g_sfba.sfbaseq1 = 0 THEN  #非替代料 不足套数*QPA分子/QPA分母
                  LET issue_qty = (l_sfaa.sfaa049 - l_sets) * l_sfba.sfba010 / l_sfba.sfba011
               ELSE  #替代料  不足套数*(QPA分子/QPA分母)*替代率=元件应发量*替代率=替代料的应发量
                  LET issue_qty = ((l_sfaa.sfaa049 - l_sets) * l_sfba.sfba010 / l_sfba.sfba011)*g_sfba.sfba022
               END IF
            END IF
         END IF
         
         #发料时的應發量 > 应发 - 已发
         IF issue_qty>(g_sfba.sfba013-g_sfba.sfba016) THEN
            LET issue_qty=(g_sfba.sfba013-g_sfba.sfba016)
         END IF
         
         ##计算发料单上已产生的发料数量
         #CALL asft310_01_get_qty(g_sfba.sfbadocno,g_sfba.sfbaseq,g_sfba.sfbaseq1) RETURNING l_qty
         ##计算剩下的应发量
         #LET issue_qty = issue_qty - l_qty
         ##移到上面去 因asft310_01_get_sfba016中包含了此值
         
         IF issue_qty <= 0 THEN 
            CONTINUE FOREACH
         END IF
         
         CALL asft310_01_issue()  #按不同发料方式发料

      END FOREACH  #工单备料单身
      FREE asft310_01_g_b11_sfba_p
   END FOREACH  #发退料 套数单身
   FREE asft310_01_g_b11_sfdb_c

END FUNCTION]]>
</point>
  <point name="function.asft310_01_g_b12" cite_std="N" status="" ver="1" src="s" new="Y" order="28" mark_hard="N">
<![CDATA[#超领发料
PRIVATE FUNCTION asft310_01_g_b12()
DEFINE l_sfaa         RECORD LIKE sfaa_t.*  #工单单头
DEFINE l_sfdb         RECORD LIKE sfdb_t.*  #发退料 套数单身
DEFINE l_sfba         RECORD LIKE sfba_t.*  #替代料对应元件的信息
DEFINE l_qty          LIKE sfdb_t.sfdb006   #发料单上已产生的发料数量 --实体sfdc中的和本画面上临时sfdc中的
DEFINE l_qty2         LIKE sfdb_t.sfdb006   #有替代料的情况：原件，及其他替代料已产生到本画面上单身处已产生的sfdc007对应套数
DEFINE l_issue_qty    LIKE sfdc_t.sfdc007    #在捡量

   DECLARE asft310_01_g_b12_sfdb_c CURSOR FOR
      SELECT * FROM sfdb_t WHERE sfdbent=g_enterprise AND sfdbdocno=g_sfdadocno
   FOREACH asft310_01_g_b12_sfdb_c INTO l_sfdb.* #发退料 套数单身
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach asft310_01_g_b12_sfdb_c err',SQLCA.sqlcode,1)
         LET g_success = FALSE
         EXIT FOREACH
      END IF
      
      SELECT * INTO l_sfaa.*  #工单单头
        FROM sfaa_t
       WHERE sfaaent = g_enterprise AND sfaadocno = l_sfdb.sfdb001
      IF SQLCA.sqlcode THEN
         CALL cl_err('sel sfaa',SQLCA.sqlcode,1)
         LET g_success = FALSE
         EXIT FOREACH
      END IF

      LET g_sql = "SELECT sfba_t.*,imaf091,imaf092,imae101,imae102,imae103,imae104,imae092 ",
                  "  FROM sfba_t,imaa_t,imaf_t,imae_t ",
                  " WHERE sfbaent = imaaent AND sfba006 = imaa001 ",
                  "   AND sfbaent = imafent AND sfbasite = imafsite AND sfba006 = imaf001 ",
                  "   AND sfbaent = imaeent AND sfbasite = imaesite AND sfba006 = imae001 ",
                  "   AND sfbaent = ",g_enterprise,
                  "   AND sfbasite= '",g_site,"' ",
                  "   AND sfbadocno= '",l_sfdb.sfdb001,"' ",   #工单单号
                  "   AND sfbaseq1 = 0 ",  #项序=0
                  "   AND sfba009  = 'N' ",          #倒扣料
                  #"   AND (sfba013 - sfba015) >0 ",  #应发-委外代买量>0
                  "   AND sfba008 != '4' ",          #非参考材料
                  "   AND ",tm.wc CLIPPED            #画面QBE条件
      IF NOT cl_null(l_sfdb.sfdb003) THEN  #部位
         LET g_sql = g_sql CLIPPED,"  AND sfba002 = '",l_sfdb.sfdb003,"'"
      END IF
    
      IF NOT cl_null(l_sfdb.sfdb004) THEN  #作业编号
         LET g_sql = g_sql CLIPPED,"  AND sfba003 = '",l_sfdb.sfdb004,"'"
      END IF
    
      IF NOT cl_null(l_sfdb.sfdb005) THEN  #作业序
         LET g_sql = g_sql CLIPPED,"  AND sfba004 = '",l_sfdb.sfdb005,"'"
      END IF
      
      #非制程委外发料 这里不考虑 sfdb002
      
      LET g_sql = g_sql CLIPPED," ORDER BY sfbaseq,sfbaseq1"
      PREPARE asft310_01_g_b12_sfba_p FROM g_sql
      DECLARE asft310_01_g_b12_sfba_c CURSOR FOR asft310_01_g_b12_sfba_p
      FOREACH asft310_01_g_b12_sfba_c INTO g_sfba.*,g_imaf091,g_imaf092,g_imae101,g_imae102,g_imae103,g_imae104,g_imae092  #工单备料单身
         IF SQLCA.sqlcode THEN
            CALL cl_err('foreach asft310_01_g_b12_sfba_c err',SQLCA.sqlcode,1)
            LET g_success = FALSE
            EXIT FOREACH
         END IF
         
         #IF g_sfba.sfbaseq1 > 0 THEN  #替代料
            #抓出原件资料
            SELECT * INTO l_sfba.* FROM sfba_t
             WHERE sfbaent   = g_sfba.sfbaent
               AND sfbadocno = g_sfba.sfbadocno
               AND sfbaseq   = g_sfba.sfbaseq
               AND sfbaseq1  = 0
            IF SQLCA.sqlcode THEN
               CALL cl_err('',SQLCA.sqlcode,1)
               LET g_success = FALSE
               EXIT FOREACH
            END IF
         #END IF

         #指定仓库储位
         IF cl_null(g_sfba.sfba019) THEN LET g_sfba.sfba019 = ' '  END IF
         IF cl_null(g_sfba.sfba020) THEN LET g_sfba.sfba020 = ' '  END IF
         #预设仓库储位
         IF cl_null(g_imaf091) THEN LET g_imaf091 = ' ' END IF
         IF cl_null(g_imaf092) THEN LET g_imaf092 = ' ' END IF
         #预设发料/退料库位储位
         IF cl_null(g_imae101) THEN LET g_imae101 = ' ' END IF
         IF cl_null(g_imae102) THEN LET g_imae102 = ' ' END IF
         IF cl_null(g_imae103) THEN LET g_imae103 = ' ' END IF
         IF cl_null(g_imae104) THEN LET g_imae104 = ' ' END IF

         #超领
         #发料套数*QPA分子/QPA分母
         LET issue_qty  =l_sfdb.sfdb006 * g_sfba.sfba010 / g_sfba.sfba011
         
         #计算发料单上已产生的发料数量
         CALL asft310_01_get_qty(g_sfba.sfbadocno,g_sfba.sfbaseq,g_sfba.sfbaseq1) RETURNING l_qty
         
         #计算剩下的应发量
         #LET issue_qty = issue_qty - l_sfdc007 - l_sfdc007_tmp
         LET issue_qty = issue_qty - l_qty
         IF issue_qty <= 0 THEN 
            CONTINUE FOREACH
         END IF
         
         CALL asft310_01_issue()  #按不同发料方式发料

      END FOREACH  #工单备料单身
      FREE asft310_01_g_b12_sfba_p
   END FOREACH  #发退料 套数单身
   FREE asft310_01_g_b12_sfdb_c

END FUNCTION]]>
</point>
  <point name="function.asft310_01_g_b13" cite_std="N" status="" ver="1" src="s" new="Y" order="29" mark_hard="N">
<![CDATA[#欠料补料
PRIVATE FUNCTION asft310_01_g_b13()
DEFINE l_sfaa         RECORD LIKE sfaa_t.*  #工单单头
DEFINE l_sfdb         RECORD LIKE sfdb_t.*  #发退料 套数单身
DEFINE l_sfba         RECORD LIKE sfba_t.*  #替代料对应元件的信息
DEFINE l_qty          LIKE sfdb_t.sfdb006   #发料单上已产生的发料数量 --实体sfdc中的和本画面上临时sfdc中的
DEFINE l_qty2         LIKE sfdb_t.sfdb006   #有替代料的情况：原件，及其他替代料已产生到本画面上单身处已产生的sfdc007对应套数
DEFINE l_sfba016      LIKE sfba_t.sfba016   #计算已发量(包含元件+所有替代料的已发量)
DEFINE l_sets         LIKE sfdb_t.sfdb006   #已发量(包含元件+所有替代料的已发量) 计算出的套数

   DECLARE asft310_01_g_b13_sfdb_c CURSOR FOR
      SELECT * FROM sfdb_t WHERE sfdbent=g_enterprise AND sfdbdocno=g_sfdadocno
   FOREACH asft310_01_g_b13_sfdb_c INTO l_sfdb.* #发退料 套数单身
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach asft310_01_g_b13_sfdb_c err',SQLCA.sqlcode,1)
         LET g_success = FALSE
         EXIT FOREACH
      END IF
      
      SELECT * INTO l_sfaa.*  #工单单头
        FROM sfaa_t
       WHERE sfaaent = g_enterprise AND sfaadocno = l_sfdb.sfdb001
      IF SQLCA.sqlcode THEN
         CALL cl_err('sel sfaa',SQLCA.sqlcode,1)
         LET g_success = FALSE
         EXIT FOREACH
      END IF

      LET g_sql = "SELECT sfba_t.*,imaf091,imaf092,imae101,imae102,imae103,imae104,imae092 ",
                  "  FROM sfba_t,imaa_t,imaf_t,imae_t ",
                  " WHERE sfbaent = imaaent AND sfba006 = imaa001 ",
                  "   AND sfbaent = imafent AND sfbasite = imafsite AND sfba006 = imaf001 ",
                  "   AND sfbaent = imaeent AND sfbasite = imaesite AND sfba006 = imae001 ",
                  "   AND sfbaent = ",g_enterprise,
                  "   AND sfbasite= '",g_site,"' ",
                  "   AND sfbadocno= '",l_sfdb.sfdb001,"' ",   #工单单号
                  "   AND sfba009  = 'N' ",          #倒扣料
                  "   AND (sfba013 - sfba015) >0 ",  #应发-委外代买量>0
                  "   AND sfba008 != '4' ",          #非参考材料
                  "   AND ",tm.wc CLIPPED      #画面QBE条件
      IF NOT cl_null(l_sfdb.sfdb003) THEN  #部位
         LET g_sql = g_sql CLIPPED,"  AND sfba002 = '",l_sfdb.sfdb003,"'"
      END IF
    
      IF NOT cl_null(l_sfdb.sfdb004) THEN  #作业编号
         LET g_sql = g_sql CLIPPED,"  AND sfba003 = '",l_sfdb.sfdb004,"'"
      END IF
    
      IF NOT cl_null(l_sfdb.sfdb005) THEN  #作业序
         LET g_sql = g_sql CLIPPED,"  AND sfba004 = '",l_sfdb.sfdb005,"'"
      END IF
      
      #非制程委外发料 这里不考虑 sfdb002
      
      LET g_sql = g_sql CLIPPED," ORDER BY sfbaseq,sfbaseq1"
      PREPARE asft310_01_g_b13_sfba_p FROM g_sql
      DECLARE asft310_01_g_b13_sfba_c CURSOR FOR asft310_01_g_b13_sfba_p
      FOREACH asft310_01_g_b13_sfba_c INTO g_sfba.*,g_imaf091,g_imaf092,g_imae101,g_imae102,g_imae103,g_imae104,g_imae092  #工单备料单身
         IF SQLCA.sqlcode THEN
            CALL cl_err('foreach asft310_01_g_b13_sfba_c err',SQLCA.sqlcode,1)
            LET g_success = FALSE
            EXIT FOREACH
         END IF
         
         #IF g_sfba.sfbaseq1 > 0 THEN  #替代料
            #抓出原件资料
            SELECT * INTO l_sfba.* FROM sfba_t
             WHERE sfbaent   = g_sfba.sfbaent
               AND sfbadocno = g_sfba.sfbadocno
               AND sfbaseq   = g_sfba.sfbaseq
               AND sfbaseq1  = 0
            IF SQLCA.sqlcode THEN
               CALL cl_err('',SQLCA.sqlcode,1)
               LET g_success = FALSE
               EXIT FOREACH
            END IF
         #END IF

         #指定仓库储位
         IF cl_null(g_sfba.sfba019) THEN LET g_sfba.sfba019 = ' '  END IF
         IF cl_null(g_sfba.sfba020) THEN LET g_sfba.sfba020 = ' '  END IF
         #预设仓库储位
         IF cl_null(g_imaf091) THEN LET g_imaf091 = ' ' END IF
         IF cl_null(g_imaf092) THEN LET g_imaf092 = ' ' END IF
         #预设发料/退料库位储位
         IF cl_null(g_imae101) THEN LET g_imae101 = ' ' END IF
         IF cl_null(g_imae102) THEN LET g_imae102 = ' ' END IF
         IF cl_null(g_imae103) THEN LET g_imae103 = ' ' END IF
         IF cl_null(g_imae104) THEN LET g_imae104 = ' ' END IF

         #工单单身某笔总共应发=应发-扣除委外代買量
         LET g_sfba.sfba013=g_sfba.sfba013-g_sfba.sfba015

         #欠料补料把已发套数中不足的部分补发出去
         IF l_sfaa.sfaa049 = l_sfaa.sfaa012 THEN  #已發套數=生產數量,即要把剩余
            #應發總數量-已發數量
            LET issue_qty = g_sfba.sfba013 - g_sfba.sfba016
            
            #计算发料单上已产生的发料数量
            CALL asft310_01_get_qty(g_sfba.sfbadocno,g_sfba.sfbaseq,g_sfba.sfbaseq1) RETURNING l_qty
            #计算剩下的应发量
            LET issue_qty = issue_qty - l_qty
         ELSE
            #LET issue_qty = l_sfaa.sfaa049 * g_sfba.sfba010 / g_sfba.sfba011 - g_sfba.sfba016
            #考虑可能有取替代料的情况
            #计算备料+本单据上所有已发量(包含元件+所有替代料的已发量),折算成元件的已发量
            CALL asft310_01_get_sfba016(g_sfba.sfbadocno,g_sfba.sfbaseq) RETURNING l_sfba016
            #根据已发量计算该料已发套数
            LET l_sets = l_sfba016 * l_sfba.sfba011 / l_sfba.sfba010
            IF l_sets >= l_sfaa.sfaa049 THEN #此元件已发套数 >= 工单已发套数 不需欠料补料
               CONTINUE FOREACH
            END IF
            
            IF g_sfba.sfbaseq1 = 0 THEN  #非替代料 不足套数*QPA分子/QPA分母
               LET issue_qty = (l_sfaa.sfaa049 - l_sets) * l_sfba.sfba010 / l_sfba.sfba011
            ELSE  #替代料  不足套数*(QPA分子/QPA分母)*替代率=元件应发量*替代率=替代料的应发量
               LET issue_qty = ((l_sfaa.sfaa049 - l_sets) * l_sfba.sfba010 / l_sfba.sfba011)*g_sfba.sfba022
            END IF
         END IF
         
         #发料时的應發量 > 应发 - 已发
         IF issue_qty>(g_sfba.sfba013-g_sfba.sfba016) THEN
            LET issue_qty=(g_sfba.sfba013-g_sfba.sfba016)
         END IF

         ##计算发料单上已产生的发料数量
         #CALL asft310_01_get_qty(g_sfba.sfbadocno,g_sfba.sfbaseq,g_sfba.sfbaseq1) RETURNING l_qty
         ##计算剩下的应发量
         #LET issue_qty = issue_qty - l_qty
         #移到上面去 因asft310_01_get_sfba016中包含了此值
         
         IF issue_qty <= 0 THEN 
            CONTINUE FOREACH
         END IF
         
         CALL asft310_01_issue()  #按不同发料方式发料

      END FOREACH  #工单备料单身
      FREE asft310_01_g_b13_sfba_p
   END FOREACH  #发退料 套数单身
   FREE asft310_01_g_b13_sfdb_c
END FUNCTION]]>
</point>
  <point name="function.asft310_01_g_b21" cite_std="N" status="" ver="1" src="s" new="Y" order="30" mark_hard="N">
<![CDATA[#成套退料
PRIVATE FUNCTION asft310_01_g_b21()
DEFINE l_sfaa         RECORD LIKE sfaa_t.*  #工单单头
DEFINE l_sfdb         RECORD LIKE sfdb_t.*  #发退料 套数单身
DEFINE l_sfba         RECORD LIKE sfba_t.*
DEFINE l_qty          LIKE sfdb_t.sfdb006   #发料单上已产生的发料数量 --实体sfdc中的和本画面上临时sfdc中的
DEFINE l_qty2         LIKE sfdb_t.sfdb006   #有替代料的情况：原件，及其他替代料已产生到本画面上单身处已产生的sfdc007对应套数

      LET g_sql = "SELECT sfba_t.*,sfdb_t.*,sfaa_t.*,imaf091,imaf092,imae101,imae102,imae103,imae104,imae092 ",
                  "  FROM sfba_t,imaa_t,imaf_t,imae_t,sfdb_t,sfaa_t ",
                  " WHERE sfbaent = imaaent AND sfba006 = imaa001 ",
                  "   AND sfbaent = imafent AND sfbasite = imafsite AND sfba006 = imaf001 ",
                  "   AND sfbaent = imaeent AND sfbasite = imaesite AND sfba006 = imae001 ",
                  "   AND sfbaent = sfdbent AND sfbadocno= sfdb001 ",
                  "   AND sfbaent = sfaaent AND sfbadocno=sfaadocno ",
                  "   AND sfbaent = ",g_enterprise,
                  "   AND sfdbdocno='",g_sfdadocno,"' ",
                  #"   AND sfbadocno= '",l_sfdb.sfdb001,"' ",   #工单单号
                  "   AND sfba009  = 'N' ",          #倒扣料
                  "   AND sfba016  > 0 ",            #已发>0
                  "   AND sfba008 != '4' ",          #非参考材料
                  "   AND ",tm.wc CLIPPED      #画面QBE条件
      
      LET g_sql = g_sql CLIPPED," ORDER BY sfbaseq,sfbaseq1"
      PREPARE asft310_01_g_b21_sfba_p FROM g_sql
      DECLARE asft310_01_g_b21_sfba_c CURSOR FOR asft310_01_g_b21_sfba_p
      FOREACH asft310_01_g_b21_sfba_c INTO g_sfba.*,l_sfdb.*,l_sfaa.*,g_imaf091,g_imaf092,g_imae101,g_imae102,g_imae103,g_imae104,g_imae092  #工单备料单身
         IF SQLCA.sqlcode THEN
            CALL cl_err('foreach asft310_01_g_b21_sfba_c err',SQLCA.sqlcode,1)
            LET g_success = FALSE
            EXIT FOREACH
         END IF
         
         #IF g_sfba.sfbaseq1 > 0 THEN  #替代料
            #抓出原件资料
            SELECT * INTO l_sfba.* FROM sfba_t
             WHERE sfbaent   = g_sfba.sfbaent
               AND sfbadocno = g_sfba.sfbadocno
               AND sfbaseq   = g_sfba.sfbaseq
               AND sfbaseq1  = 0
            IF SQLCA.sqlcode THEN
               CALL cl_err('',SQLCA.sqlcode,1)
               LET g_success = FALSE
               EXIT FOREACH
            END IF
         #END IF
         
         #指定仓库储位
         IF cl_null(g_sfba.sfba019) THEN LET g_sfba.sfba019 = ' '  END IF
         IF cl_null(g_sfba.sfba020) THEN LET g_sfba.sfba020 = ' '  END IF
         #预设仓库储位
         IF cl_null(g_imaf091) THEN LET g_imaf091 = ' ' END IF
         IF cl_null(g_imaf092) THEN LET g_imaf092 = ' ' END IF
         #预设发料/退料库位储位
         IF cl_null(g_imae101) THEN LET g_imae101 = ' ' END IF
         IF cl_null(g_imae102) THEN LET g_imae102 = ' ' END IF
         IF cl_null(g_imae103) THEN LET g_imae103 = ' ' END IF
         IF cl_null(g_imae104) THEN LET g_imae104 = ' ' END IF
         
         #退料时的應退量
         IF l_sfdb.sfdb006 = l_sfaa.sfaa049 THEN  #預計退料套數=已發套數  全退
            #已發數量 
            LET issue_qty = g_sfba.sfba016
         ELSE
            #預計退料套數*標準QPA分子/標準QPA分母
            IF g_sfba.sfbaseq1 = 0 THEN  #非替代料
               LET issue_qty = l_sfdb.sfdb006 * g_sfba.sfba010 / g_sfba.sfba011
            ELSE  #替代料
               #原件，及其他替代料已产生到本画面上单身处已产生的sfdc007对应套数
               CALL asft310_01_get_qty2(g_sfba.sfbadocno,g_sfba.sfbaseq,g_sfba.sfbaseq1,l_sfba.*) RETURNING l_qty2
               #(预计退料套数 - 已产生过的套数) * 原件的QPA * 替代率 =未产生的套数*元件QPA*替代率=元件应发量*替代率=替代料的应发量
               LET issue_qty = ((l_sfdb.sfdb006 - l_qty2) * l_sfba.sfba010 / l_sfba.sfba011)*g_sfba.sfba022
            END IF
         END IF

         #应退>已发
         IF issue_qty>g_sfba.sfba016 THEN
            LET issue_qty=g_sfba.sfba016
         END IF

         #计算发料单上已产生的发料数量 --实体sfdc中的和本画面上临时sfdc中的
         CALL asft310_01_get_qty(g_sfba.sfbadocno,g_sfba.sfbaseq,g_sfba.sfbaseq1) RETURNING l_qty
         #计算剩下的应退量
         LET issue_qty = issue_qty - l_qty
         #不用移到上面去 asft310_01_get_qty2中并未包含此值，有控制项序小于当前项序的，所以本项序没算到
         
         IF issue_qty <= 0 THEN 
            CONTINUE FOREACH
         END IF
         
         CALL asft310_01_issue()  #按不同发料方式退料

      END FOREACH  #工单备料单身
      FREE asft310_01_g_b21_sfba_p
END FUNCTION]]>
</point>
  <point name="function.asft310_01_g_b22" cite_std="N" status="" ver="1" src="s" new="Y" order="31" mark_hard="N">
<![CDATA[#超领退料
PRIVATE FUNCTION asft310_01_g_b22()
DEFINE l_sfaa         RECORD LIKE sfaa_t.*  #工单单头
DEFINE l_sfdb         RECORD LIKE sfdb_t.*  #发退料 套数单身
DEFINE l_sfba         RECORD LIKE sfba_t.*  #替代料对应元件的信息
DEFINE l_qty          LIKE sfdb_t.sfdb006   #发料单上已产生的发料数量 --实体sfdc中的和本画面上临时sfdc中的
DEFINE l_qty2         LIKE sfdb_t.sfdb006   #有替代料的情况：原件，及其他替代料已产生到本画面上单身处已产生的sfdc007对应套数

      LET g_sql = "SELECT sfba_t.*,sfdb_t.*,sfaa_t.*,imaf091,imaf092,imae101,imae102,imae103,imae104,imae092 ",
                  "  FROM sfba_t,imaa_t,imaf_t,imae_t,sfdb_t,sfaa_t ",
                  " WHERE sfbaent = imaaent AND sfba006 = imaa001 ",
                  "   AND sfbaent = imafent AND sfbasite = imafsite AND sfba006 = imaf001 ",
                  "   AND sfbaent = imaeent AND sfbasite = imaesite AND sfba006 = imae001 ",
                  "   AND sfbaent = sfdbent AND sfbadocno= sfdb001 ",
                  "   AND sfbaent = sfaaent AND sfbadocno=sfaadocno ",
                  "   AND sfbaent = ",g_enterprise,
                  "   AND sfdbdocno='",g_sfdadocno,"' ",
                  #"   AND sfbadocno= '",l_sfdb.sfdb001,"' ",   #工单单号
                  "   AND sfba009  = 'N' ",          #倒扣料
                  "   AND sfba025  > 0 ",            #超领>0
                  "   AND sfba008 != '4' ",          #非参考材料
                  "   AND ",tm.wc CLIPPED      #画面QBE条件
      
      LET g_sql = g_sql CLIPPED," ORDER BY sfbaseq,sfbaseq1"
      PREPARE asft310_01_g_b22_sfba_p FROM g_sql
      DECLARE asft310_01_g_b22_sfba_c CURSOR FOR asft310_01_g_b22_sfba_p
      FOREACH asft310_01_g_b22_sfba_c INTO g_sfba.*,l_sfdb.*,l_sfaa.*,g_imaf091,g_imaf092,g_imae101,g_imae102,g_imae103,g_imae104,g_imae092  #工单备料单身
         IF SQLCA.sqlcode THEN
            CALL cl_err('foreach asft310_01_g_b22_sfba_c err',SQLCA.sqlcode,1)
            LET g_success = FALSE
            EXIT FOREACH
         END IF
         
         #IF g_sfba.sfbaseq1 > 0 THEN  #替代料
            #抓出原件资料
            SELECT * INTO l_sfba.* FROM sfba_t
             WHERE sfbaent   = g_sfba.sfbaent
               AND sfbadocno = g_sfba.sfbadocno
               AND sfbaseq   = g_sfba.sfbaseq
               AND sfbaseq1  = 0
            IF SQLCA.sqlcode THEN
               CALL cl_err('',SQLCA.sqlcode,1)
               LET g_success = FALSE
               EXIT FOREACH
            END IF
         #END IF

         #指定仓库储位
         IF cl_null(g_sfba.sfba019) THEN LET g_sfba.sfba019 = ' '  END IF
         IF cl_null(g_sfba.sfba020) THEN LET g_sfba.sfba020 = ' '  END IF
         #预设仓库储位
         IF cl_null(g_imaf091) THEN LET g_imaf091 = ' ' END IF
         IF cl_null(g_imaf092) THEN LET g_imaf092 = ' ' END IF
         #预设发料/退料库位储位
         IF cl_null(g_imae101) THEN LET g_imae101 = ' ' END IF
         IF cl_null(g_imae102) THEN LET g_imae102 = ' ' END IF
         IF cl_null(g_imae103) THEN LET g_imae103 = ' ' END IF
         IF cl_null(g_imae104) THEN LET g_imae104 = ' ' END IF
         
         #退料时的應退量
         #預計退料套數*標準QPA分子/標準QPA分母
         IF g_sfba.sfbaseq1 = 0 THEN  #非替代料
            LET issue_qty = l_sfdb.sfdb006 * g_sfba.sfba010 / g_sfba.sfba011
         ELSE  #替代料
            #原件，及其他替代料已产生到本画面上单身处已产生的sfdc007对应套数
            CALL asft310_01_get_qty2(g_sfba.sfbadocno,g_sfba.sfbaseq,g_sfba.sfbaseq1,l_sfba.*) RETURNING l_qty2
            #(预计退料套数 - 已产生过的套数) * 原件的QPA * 替代率 =未产生的套数*元件QPA*替代率=元件应发量*替代率=替代料的应发量
            LET issue_qty = ((l_sfdb.sfdb006 - l_qty2) * l_sfba.sfba010 / l_sfba.sfba011)*g_sfba.sfba022
         END IF


         #应退量>已超领
         IF issue_qty>g_sfba.sfba025 THEN
            LET issue_qty=g_sfba.sfba025
         END IF

         #计算发料单上已产生的发料数量
         CALL asft310_01_get_qty(g_sfba.sfbadocno,g_sfba.sfbaseq,g_sfba.sfbaseq1) RETURNING l_qty
         #计算剩下的应退量
         LET issue_qty = issue_qty - l_qty
         #不用移到上面去 asft310_01_get_qty2中并未包含此值，有控制项序小于当前项序的，所以本项序没算到
         
         IF issue_qty <= 0 THEN 
            CONTINUE FOREACH
         END IF
         
         CALL asft310_01_issue()  #按不同发料方式退料

      END FOREACH  #工单备料单身
      FREE asft310_01_g_b22_sfba_p
END FUNCTION]]>
</point>
  <point name="function.asft310_01_generate_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="32" mark_hard="N">
<![CDATA[#产生单身前的检查
PRIVATE FUNCTION asft310_01_generate_chk()
DEFINE r_column    LIKE type_t.chr10

   LET r_column = ''
   IF (g_prog[1,6] = 'asft31' AND tm.issue_type = '2') OR (g_prog[1,6] = 'asft32' AND tm.issue_type = '3') THEN  #自行制定库位储位批号
       IF cl_null(tm2.inag004_i) THEN
          #自行指定仓储批时，仓库一定要输入;请输入仓库！
          CALL cl_err('','asf-00340',1)
          LET r_column = 'inag004_i'
          RETURN r_column
       ELSE
          #检查库存基础档
          INITIALIZE g_chkparam.* TO NULL
          LET g_chkparam.arg1 = tm2.inag004_i
          IF NOT cl_chk_exist("v_inaa001_2") THEN
             LET r_column = 'inag004_i'
             RETURN r_column
          END IF
       END IF
   END IF
   
   
   #由發料單別參數"發料理由碼不可空白"控制理由碼是不是一定要輸入
   #参数D-MFG-0032：發料理由碼是否可空白
   #IF cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0032') THEN
   CALL cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0032') RETURNING g_para
   IF g_para = 'N' AND cl_null(tm.reason) THEN  #不可空白
      #单据别参数“D-MFG-0032：發料理由碼是否可空白”设置为必需输入理由码;请输入理由码！
      CALL cl_err('','asf-00343',1)
      LET r_column = 'reason'
      RETURN r_column
   END IF
   
   RETURN r_column
END FUNCTION]]>
</point>
  <point name="function.asft310_01_get_qty2" cite_std="N" status="" ver="1" src="s" new="Y" order="33" mark_hard="N">
<![CDATA[#计算元件及其他替代料已产生到本画面单身上的sfdc007对应的套数
PRIVATE FUNCTION asft310_01_get_qty2(p_sfbadocno,p_sfbaseq,p_sfbaseq1,p_sfba_o)
DEFINE p_flag         LIKE type_t.chr1      #是否只算项序小于当笔的
DEFINE p_sfbadocno    LIKE sfba_t.sfbadocno #工单
DEFINE p_sfbaseq      LIKE sfba_t.sfbaseq   #项次
DEFINE p_sfbaseq1     LIKE sfba_t.sfbaseq1  #替代料所在项序
DEFINE p_sfba_o       RECORD LIKE sfba_t.*  #原料备料信息
DEFINE r_qty          LIKE sfdb_t.sfdb006   #备料已产生本张单据的套数
DEFINE l_qty          LIKE sfdc_t.sfdc007   #发退料量
DEFINE l_sql          STRING
DEFINE l_sfba         RECORD LIKE sfba_t.*

   LET r_qty = 0
   
   LET l_sql = " SELECT * FROM sfba_t ",
               "  WHERE sfbaent   = ",g_enterprise,
               "    AND sfbadocno = '",p_sfbadocno,"' ",
               "    AND sfbaseq   = ",p_sfbaseq
   #IF p_flag = 'Y' THEN
      LET l_sql = l_sql CLIPPED," AND sfbaseq1  < ",p_sfbaseq1
   #END IF
   LET l_sql = l_sql CLIPPED," ORDER BY sfbaseq1 "
   PREPARE asft310_01_get_qty2_p FROM l_sql
   DECLARE asft310_01_get_qty2_c CURSOR FOR asft310_01_get_qty2_p
   FOREACH asft310_01_get_qty2_c INTO l_sfba.* #工单备料单身
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach asft310_01_get_qty2_c err',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      #计算发料单上已产生的发料数量 --实体sfdc中的和本画面上临时sfdc中的
      CALL asft310_01_get_qty(l_sfba.sfbadocno,l_sfba.sfbaseq,l_sfba.sfbaseq1) RETURNING l_qty
      IF l_sfba.sfbaseq1 = 0 THEN #原料
         LET r_qty = r_qty + l_qty * p_sfba_o.sfba011 / p_sfba_o.sfba010
      ELSE  #替代料,先换算成原料
         LET r_qty = r_qty + (l_qty / l_sfba.sfba022) * p_sfba_o.sfba011 / p_sfba_o.sfba010
      END IF
   END FOREACH
   
   RETURN r_qty
END FUNCTION]]>
</point>
  <point name="function.asft310_01_get_qty" cite_std="N" status="" ver="1" src="s" new="Y" order="34" mark_hard="N">
<![CDATA[#计算发料单上已产生的发料数量 --实体sfdc中的和本画面上临时sfdc中的
PRIVATE FUNCTION asft310_01_get_qty(p_sfbadocno,p_sfbaseq,p_sfbaseq1)
DEFINE p_sfbadocno    LIKE sfba_t.sfbadocno #工单
DEFINE p_sfbaseq      LIKE sfba_t.sfbaseq   #项次
DEFINE p_sfbaseq1     LIKE sfba_t.sfbaseq1  #替代料所在项序
DEFINE r_qty          LIKE sfdb_t.sfdb006
DEFINE l_sfdc007      LIKE sfdc_t.sfdc007 
DEFINE l_sfdc007_tmp  LIKE sfdc_t.sfdc007

   LET r_qty = 0

   #不用考虑不同单位、取替代,因为sfdc上的单位默认带出工单单位不能修改，sfdc上也不能增加取替代，在sfdd上才有这个功能
   SELECT SUM(sfdc007) INTO l_sfdc007 FROM sfdc_t
    WHERE sfdcent = g_enterprise
      AND sfdcdocno=g_sfdadocno
      AND sfdc001 = p_sfbadocno  #工单单号
      AND sfdc002 = p_sfbaseq    #工单项次
      AND sfdc003 = p_sfbaseq1   #工单项序
   IF cl_null(l_sfdc007) THEN LET l_sfdc007 = 0 END IF
 
   #计算本画面上单身处已产生的sfdc007
   SELECT SUM(sfdc007) INTO l_sfdc007_tmp FROM asft310_01_sfdc_t
    WHERE sfdcent = g_enterprise
      AND sfdcdocno=g_sfdadocno
      AND sfdc001 = p_sfbadocno  #工单单号
      AND sfdc002 = p_sfbaseq    #工单项次
      AND sfdc003 = p_sfbaseq1   #工单项序
   IF cl_null(l_sfdc007_tmp) THEN LET l_sfdc007_tmp = 0 END IF
   
   LET r_qty = l_sfdc007 + l_sfdc007_tmp
   RETURN r_qty
END FUNCTION]]>
</point>
  <point name="function.asft310_01_get_sfba016" cite_std="N" status="" ver="1" src="s" new="Y" order="35" mark_hard="N">
<![CDATA[#计算备料+本单据上所有已发量(包含元件+所有替代料的已发量)，折算成元件的已发量
PRIVATE FUNCTION asft310_01_get_sfba016(p_sfbadocno,p_sfbaseq)
DEFINE p_sfbadocno    LIKE sfba_t.sfbadocno #工单
DEFINE p_sfbaseq      LIKE sfba_t.sfbaseq   #项次
DEFINE r_sfba016      LIKE sfba_t.sfba016
DEFINE l_qty          LIKE sfdc_t.sfdc007   #发退料量
DEFINE l_sql          STRING
DEFINE l_sfba         RECORD LIKE sfba_t.*

   LET r_sfba016 = 0
   
   LET l_sql = " SELECT * FROM sfba_t ",
               "  WHERE sfbaent   = ",g_enterprise,
               "    AND sfbadocno = '",p_sfbadocno,"' ",
               "    AND sfbaseq   = ",p_sfbaseq,
               " ORDER BY sfbaseq1 "
   PREPARE asft310_01_get_sfba016_p FROM l_sql
   DECLARE asft310_01_get_sfba016_c CURSOR FOR asft310_01_get_sfba016_p
   FOREACH asft310_01_get_sfba016_c INTO l_sfba.* #工单备料单身
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach asft310_01_get_sfba016_c err',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      #计算发料单上已产生的发料数量 --实体sfdc中的和本画面上临时sfdc中的
      CALL asft310_01_get_qty(l_sfba.sfbadocno,l_sfba.sfbaseq,l_sfba.sfbaseq1) RETURNING l_qty
      
      IF l_sfba.sfbaseq1 = 0 THEN #原料
         LET r_sfba016 = r_sfba016 + l_sfba.sfba016 + l_qty
      ELSE  #替代料,先换算成原料
         LET r_sfba016 = r_sfba016 + (l_sfba.sfba016 + l_qty) / l_sfba.sfba022
      END IF
   END FOREACH
   
   RETURN r_sfba016
END FUNCTION]]>
</point>
  <point name="function.asft310_01_get_sfba016_2" cite_std="N" status="" ver="1" src="s" new="Y" order="36" mark_hard="N">
<![CDATA[#计算本单据上所有已发量(包含元件+所有替代料的已发量)(不包括备料档中的资料)，折算成元件的已发量
PRIVATE FUNCTION asft310_01_get_sfba016_2(p_sfbadocno,p_sfbaseq)
DEFINE p_sfbadocno    LIKE sfba_t.sfbadocno #工单
DEFINE p_sfbaseq      LIKE sfba_t.sfbaseq   #项次
DEFINE r_sfba016      LIKE sfba_t.sfba016
DEFINE l_qty          LIKE sfdc_t.sfdc007   #发退料量
DEFINE l_sql          STRING
DEFINE l_sfba         RECORD LIKE sfba_t.*

   LET r_sfba016 = 0
   
   LET l_sql = " SELECT * FROM sfba_t ",
               "  WHERE sfbaent   = ",g_enterprise,
               "    AND sfbadocno = '",p_sfbadocno,"' ",
               "    AND sfbaseq   = ",p_sfbaseq,
               " ORDER BY sfbaseq1 "
   PREPARE asft310_01_get_sfba016_2_p FROM l_sql
   DECLARE asft310_01_get_sfba016_2_c CURSOR FOR asft310_01_get_sfba016_2_p
   FOREACH asft310_01_get_sfba016_2_c INTO l_sfba.* #工单备料单身
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach asft310_01_get_sfba016_2_c err',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      #计算发料单上已产生的发料数量 --实体sfdc中的和本画面上临时sfdc中的
      CALL asft310_01_get_qty(l_sfba.sfbadocno,l_sfba.sfbaseq,l_sfba.sfbaseq1) RETURNING l_qty
      
      IF l_sfba.sfbaseq1 = 0 THEN #原料
         LET r_sfba016 = r_sfba016 + l_qty
      ELSE  #替代料,先换算成原料
         LET r_sfba016 = r_sfba016 + l_qty / l_sfba.sfba022
      END IF
   END FOREACH
   
   RETURN r_sfba016
END FUNCTION]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_sfaa       RECORD LIKE sfaa_t.*   #工单单头
DEFINE g_sfba       RECORD LIKE sfba_t.*   #工单备料单身
DEFINE g_sfda       RECORD LIKE sfda_t.*   #发退料单头
DEFINE issue_qty    LIKE sfdc_t.sfdc007    #发料单的(发料套数对应的)应发数量
DEFINE issue_qty1   LIKE sfdc_t.sfdc007    #剩余应发数量
DEFINE issue_qty2   LIKE sfdc_t.sfdc007    #当笔需插入单身的应发量
DEFINE g_imaf091    LIKE imaf_t.imaf091    #料件预设库位
DEFINE g_imaf092    LIKE imaf_t.imaf092    #料件预设储位
DEFINE g_imae101    LIKE imae_t.imae101    #在制发料库位
DEFINE g_imae102    LIKE imae_t.imae102    #在制发料储位
DEFINE g_imae103    LIKE imae_t.imae103    #在制退料库位
DEFINE g_imae104    LIKE imae_t.imae104    #在制退料储位
DEFINE g_imae092    LIKE imae_t.imae092    #发料前调拨]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF g_prog[1,6]='asft31' THEN
      CALL cl_set_comp_visible("return",FALSE)
   END IF
   IF g_prog[1,6]='asft32' THEN
      CALL cl_set_comp_visible("less,spread,",FALSE)
   END IF]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[}]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[{]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[{]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[}]]>
</point>
  <point name="main.import" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="main.memo" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[#zll 自動找批號時的順序，依料件資料上的檢貨策略判斷順序(imaf059)]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="asft310.free_style_variable" ver="1" status="" src="s">
<![CDATA[#add-point:free_style模組變數(Module Variable)
{<point name="free_style.variable"/>}
#end add-point
]]>
</section>
  <section id="asft310.global" ver="1" status="" src="s">
<![CDATA[#add-point:註解編寫項目
{<point name="main.memo" />}
#end add-point
 
IMPORT os
#add-point:增加匯入項目
{<point name="main.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
]]>
</section>
  <section id="asft310.global_variable" ver="1" status="" src="s">
<![CDATA[#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
]]>
</section>
  <section id="asft310.other_dialog" ver="1" status="" src="s">
<![CDATA[{<point name="other.dialog"/>}
]]>
</section>
  <section id="asft310.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="asft310_01.description" ver="74" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000279
#+ 
#+ Filename...: asft310_01
#+ Description: ...
#+ Creator....: 00768(2013/12/26)
#+ Modifier...: 00768(2014/07/02)
#+ Buildtype..: 應用 p00 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="asft310_01.free_style_function" ver="1" status="" src="s">
<![CDATA[#add-point:free_style
{<point name="free_style.function"/>}
#end add-point
]]>
</section>
  <section id="asft310_01.free_style_variable" ver="2" status="" src="s">
<![CDATA[#add-point:free_style模組變數(Module Variable)
{<point name="free_style.variable"/>}
#end add-point
]]>
</section>
  <section id="asft310_01.global" ver="2" status="" src="s">
<![CDATA[#add-point:註解編寫項目
{<point name="main.memo" />}
#end add-point
 
IMPORT os
#add-point:增加匯入項目
{<point name="main.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
]]>
</section>
  <section id="asft310_01.global_variable" ver="1" status="" src="s">
<![CDATA[#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
]]>
</section>
  <section id="asft310_01.other_dialog" ver="1" status="" src="s">
<![CDATA[{<point name="other.dialog"/>}
]]>
</section>
  <section id="asft310_01.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
</add_points>