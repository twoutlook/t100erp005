<add_points prog="asfp301_02" std_prog="asfp301_02" erpver="1.0" module="ASF" ver="1" env="s" zone="t10dev" booking="Y" type="S" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="dialog.asfp301_02_input" cite_std="N" status="d" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[#逾期資料的INPUT
DIALOG asfp301_02_input()
 
   INPUT ARRAY g_pmdo_d FROM s_detail1_asfp301_02.*
       ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
               INSERT ROW = FALSE,DELETE ROW = FALSE,APPEND ROW = FALSE)
       BEFORE INPUT
       
       BEFORE ROW
          LET l_ac = ARR_CURR()
          LET g_pmdo_d_t.* = g_pmdo_d[l_ac].*
          CALL asfp301_02_set_entry_b()
          CALL asfp301_02_set_no_entry_b()
          
       AFTER FIELD sel_d1_01
          IF g_asfp301_02_input_type = '1' THEN
             IF g_pmdo_d[l_ac].sel = 'Y' THEN
                IF g_pmdo_d[l_ac].pmdt020 <= 0 THEN
                   LET g_pmdo_d[l_ac].pmdt020 = g_pmdo_d[l_ac].pmdo006
                END IF
             ELSE
                LET g_pmdo_d[l_ac].pmdt020 = 0
             END IF
             LET g_pmdo_d_t.pmdt020 = g_pmdo_d[l_ac].pmdt020
          END IF
          
       AFTER FIELD pmdt020_d1_01
          IF g_asfp301_02_input_type = '1' THEN
             IF g_pmdo_d[l_ac].sel = 'Y' THEN
                IF NOT cl_ap_chk_Range(g_pmdo_d[l_ac].pmdt020,"0.000","0","","","azz-00079",1) THEN
                   LET g_pmdo_d[l_ac].pmdt020 = g_pmdo_d_t.pmdt020
                   NEXT FIELD pmdt020_d1_01
                END IF
             END IF
             
             IF NOT cl_null(g_pmdo_d[l_ac].pmdt020) THEN
                LET g_qty = 0
                CALL s_apmt520_get_quantity(g_pmdo_d[l_ac].pmdodocno,g_pmdo_d[l_ac].pmdoseq,g_pmdo_d[l_ac].pmdoseq1,g_pmdo_d[l_ac].pmdoseq2)
                 RETURNING g_qty
                IF g_pmdo_d[l_ac].pmdt020 > g_qty THEN
                   CALL cl_err(g_pmdo_d[l_ac].pmdt020,'apm-00383',1)
                   LET g_pmdo_d[l_ac].pmdt020 = g_pmdo_d_t.pmdt020
                   NEXT FIELD pmdt020_d1_01
                END IF
                IF g_pmdo_d[l_ac].pmdt020 < g_pmdo_d[l_ac].pmdo006 AND g_pmdo_d[l_ac].pmdn022 = 'N' THEN
                   CALL cl_err(g_pmdo_d[l_ac].pmdt020,'apm-00382',1)
                   LET g_pmdo_d[l_ac].pmdt020 = g_pmdo_d_t.pmdt020
                   NEXT FIELD pmdt020_d1_01
                END IF
             END IF
          END IF
          
       ON ROW CHANGE 
          IF g_asfp301_02_input_type = '1' THEN
             IF g_pmdo_d[l_ac].sel = 'Y' THEN
                IF NOT cl_ap_chk_Range(g_pmdo_d[l_ac].pmdt020,"0.000","0","","","azz-00079",1) THEN
                   LET g_pmdo_d[l_ac].pmdt020 = g_pmdo_d_t.pmdt020
                   NEXT FIELD pmdt020_d1_01
                END IF
             END IF
          END IF
          
       ON ACTION selall_pmdl004
          FOR g_idx = 1 TO g_pmdo_d.getLength()
             IF g_pmdo_d[g_idx].pmdl004 = g_pmdo_d[l_ac].pmdl004 THEN
                LET g_pmdo_d[g_idx].sel = 'Y'
                IF g_pmdo_d[g_idx].pmdt020 <= 0 THEN
                   LET g_pmdo_d[g_idx].pmdt020 = g_pmdo_d[g_idx].pmdo006
                END IF
             END IF
          END FOR
          
       ON ACTION selall_pmdodocno
          FOR g_idx = 1 TO g_pmdo_d.getLength()
             IF g_pmdo_d[g_idx].pmdodocno = g_pmdo_d[l_ac].pmdodocno THEN
                LET g_pmdo_d[g_idx].sel = 'Y'
                IF g_pmdo_d[g_idx].pmdt020 <= 0 THEN
                   LET g_pmdo_d[g_idx].pmdt020 = g_pmdo_d[g_idx].pmdo006
                END IF
             END IF
          END FOR
          
       ON ACTION unselall
          FOR g_idx = 1 TO g_pmdo_d.getLength()
             LET g_pmdo_d[g_idx].sel = 'N'
             LET g_pmdo_d[g_idx].pmdt020 = 0
          END FOR
          
       ON ACTION delete_data
          CALL asfp301_02_delete_data()
          CALL asfp301_02_b_fill2()
          
       
   END INPUT

END DIALOG]]>
</point>
  <point name="function.asfp301_02" cite_std="N" status="d" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION asfp301_02()

END FUNCTION]]>
</point>
  <point name="dialog.asfp301_02_input2" cite_std="N" status="d" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[#今日到廠資料的INPUT
DIALOG asfp301_02_input2()
   
   INPUT ARRAY g_pmdo2_d FROM s_detail2_asfp301_02.*
       ATTRIBUTE(COUNT = g_rec_b2,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
               INSERT ROW = FALSE,DELETE ROW = FALSE,APPEND ROW = FALSE)
       BEFORE INPUT
       
       BEFORE ROW
          LET l_ac = ARR_CURR()
          LET g_pmdo2_d_t.* = g_pmdo2_d[l_ac].*
          CALL asfp301_02_set_entry_b()
          CALL asfp301_02_set_no_entry_b()
          
       AFTER FIELD sel_d2_01
          IF g_asfp301_02_input_type = '1' THEN
             IF g_pmdo2_d[l_ac].sel = 'Y' THEN
                IF g_pmdo2_d[l_ac].pmdt020 <= 0 THEN
                   LET g_pmdo2_d[l_ac].pmdt020 = g_pmdo2_d[l_ac].pmdo006
                END IF
             ELSE
                LET g_pmdo2_d[l_ac].pmdt020 = 0
             END IF
             LET g_pmdo2_d_t.pmdt020 = g_pmdo2_d[l_ac].pmdt020
          END IF
          
       AFTER FIELD pmdt020_d2_01
          IF g_asfp301_02_input_type = '1' THEN
             IF g_pmdo2_d[l_ac].sel = 'Y' THEN
                IF NOT cl_ap_chk_Range(g_pmdo2_d[l_ac].pmdt020,"0.000","0","","","azz-00079",1) THEN
                   LET g_pmdo2_d[l_ac].pmdt020 = g_pmdo2_d_t.pmdt020
                   NEXT FIELD pmdt020_d2_01
                END IF
             END IF
             IF NOT cl_null(g_pmdo2_d[l_ac].pmdt020) THEN
                LET g_qty = 0
                CALL s_apmt520_get_quantity(g_pmdo2_d[l_ac].pmdodocno,g_pmdo2_d[l_ac].pmdoseq,g_pmdo2_d[l_ac].pmdoseq1,g_pmdo2_d[l_ac].pmdoseq2)
                 RETURNING g_qty
                IF g_pmdo2_d[l_ac].pmdt020 > g_qty THEN
                   CALL cl_err(g_pmdo2_d[l_ac].pmdt020,'apm-00383',1)
                   LET g_pmdo2_d[l_ac].pmdt020 = g_pmdo2_d_t.pmdt020
                   NEXT FIELD pmdt020_d1_01
                END IF
                IF g_pmdo2_d[l_ac].pmdt020 < g_pmdo2_d[l_ac].pmdo006 AND g_pmdo2_d[l_ac].pmdn022 = 'N' THEN
                   CALL cl_err(g_pmdo2_d[l_ac].pmdt020,'apm-00382',1)
                   LET g_pmdo2_d[l_ac].pmdt020 = g_pmdo2_d_t.pmdt020
                   NEXT FIELD pmdt020_d1_01
                END IF
             END IF
          END IF
          
       ON ROW CHANGE
          IF g_asfp301_02_input_type = '1' THEN
             IF g_pmdo2_d[l_ac].sel = 'Y' THEN
                IF NOT cl_ap_chk_Range(g_pmdo2_d[l_ac].pmdt020,"0.000","0","","","azz-00079",1) THEN
                   LET g_pmdo2_d[l_ac].pmdt020 = g_pmdo2_d_t.pmdt020
                   NEXT FIELD pmdt020_d2_01
                END IF
             END IF
          END IF

       ON ACTION selall_pmdl004
          FOR g_idx = 1 TO g_pmdo2_d.getLength()
             IF g_pmdo2_d[g_idx].pmdl004 = g_pmdo2_d[l_ac].pmdl004 THEN
                LET g_pmdo2_d[g_idx].sel = 'Y'
                IF g_pmdo2_d[g_idx].pmdt020 <= 0 THEN
                   LET g_pmdo2_d[g_idx].pmdt020 = g_pmdo2_d[g_idx].pmdo006
                END IF
             END IF
          END FOR
          
       ON ACTION selall_pmdodocno
          FOR g_idx = 1 TO g_pmdo2_d.getLength()
             IF g_pmdo2_d[g_idx].pmdodocno = g_pmdo2_d[l_ac].pmdodocno THEN
                LET g_pmdo2_d[g_idx].sel = 'Y'
                IF g_pmdo2_d[g_idx].pmdt020 <= 0 THEN
                   LET g_pmdo2_d[g_idx].pmdt020 = g_pmdo2_d[g_idx].pmdo006
                END IF
             END IF
          END FOR
          
       ON ACTION unselall
          FOR g_idx = 1 TO g_pmdo2_d.getLength()
             LET g_pmdo2_d[g_idx].sel = 'N'
             LET g_pmdo2_d[g_idx].pmdt020 = 0
          END FOR
       
       ON ACTION delete_data
          CALL asfp301_02_delete_data()
          CALL asfp301_02_b_fill2()
       
   END INPUT
END DIALOG]]>
</point>
  <point name="function.asfp301_02_create_temp_table" cite_std="N" status="d" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION asfp301_02_create_temp_table()
   DEFINE r_success         LIKE type_t.num5

   WHENEVER ERROR CONTINUE

   LET r_success = TRUE

   IF NOT asfp301_02_drop_temp_table() THEN
      LET r_success = FALSE
      RETURN r_success
   END IF

   CREATE TEMP TABLE asfp301_02_temp(
      pmdl004              LIKE pmdl_t.pmdl004,
      pmdodocno            LIKE pmdo_t.pmdodocno,
      pmdoseq              LIKE pmdo_t.pmdoseq,
      pmdoseq1             LIKE pmdo_t.pmdoseq1,
      pmdoseq2             LIKE pmdo_t.pmdoseq2,
      pmdo003              LIKE pmdo_t.pmdo003,
      pmdo001              LIKE pmdo_t.pmdo001,
      pmdo002              LIKE pmdo_t.pmdo002,
      pmdo004              LIKE pmdo_t.pmdo004,
      pmdo012              LIKE pmdo_t.pmdo012,
      pmdo006              LIKE pmdo_t.pmdo006,
      pmdt020              LIKE pmdt_t.pmdt020,
      pmdn028              LIKE pmdn_t.pmdn028,
      pmdn029              LIKE pmdn_t.pmdn029,
      pmdn030              LIKE pmdn_t.pmdn030,
      pmdn022              LIKE pmdn_t.pmdn022
      )

   IF SQLCA.sqlcode != 0 THEN
      CALL cl_err('create asfp301_02_temp',SQLCA.sqlcode,1)
      LET r_success = FALSE
      RETURN r_success
   END IF

   RETURN r_success
END FUNCTION]]>
</point>
  <point name="dialog.asfp301_02_input3" cite_std="N" status="d" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[#未來資料的INPUT
DIALOG asfp301_02_input3()
   INPUT ARRAY g_pmdo3_d FROM s_detail3_asfp301_02.*
       ATTRIBUTE(COUNT = g_rec_b3,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
               INSERT ROW = FALSE,DELETE ROW = FALSE,APPEND ROW = FALSE)
       BEFORE INPUT
       
       BEFORE ROW
          LET l_ac = ARR_CURR()
          LET g_pmdo3_d_t.* = g_pmdo3_d[l_ac].*
          CALL asfp301_02_set_entry_b()
          CALL asfp301_02_set_no_entry_b()
          
       AFTER FIELD sel_d3_01
          IF g_asfp301_02_input_type = '1' THEN
             IF g_pmdo3_d[l_ac].sel = 'Y' THEN
                IF g_pmdo3_d[l_ac].pmdt020 <= 0 THEN
                   LET g_pmdo3_d[l_ac].pmdt020 = g_pmdo3_d[l_ac].pmdo006
                END IF
             ELSE
                LET g_pmdo3_d[l_ac].pmdt020 = 0
             END IF
             LET g_pmdo3_d_t.pmdt020 = g_pmdo3_d[l_ac].pmdt020
          END IF
          
       AFTER FIELD pmdt020_d3_01
          IF g_asfp301_02_input_type = '1' THEN
             IF g_pmdo3_d[l_ac].sel = 'Y' THEN
                IF NOT cl_ap_chk_Range(g_pmdo3_d[l_ac].pmdt020,"0.000","0","","","azz-00079",1) THEN
                   LET g_pmdo3_d[l_ac].pmdt020 = g_pmdo3_d_t.pmdt020
                   NEXT FIELD pmdt020_d3_01
                END IF
             END IF          
             IF NOT cl_null(g_pmdo3_d[l_ac].pmdt020) THEN
                LET g_qty = 0
                CALL s_apmt520_get_quantity(g_pmdo3_d[l_ac].pmdodocno,g_pmdo3_d[l_ac].pmdoseq,g_pmdo3_d[l_ac].pmdoseq1,g_pmdo3_d[l_ac].pmdoseq2)
                 RETURNING g_qty
                IF g_pmdo3_d[l_ac].pmdt020 > g_qty THEN
                   CALL cl_err(g_pmdo3_d[l_ac].pmdt020,'apm-00383',1)
                   LET g_pmdo3_d[l_ac].pmdt020 = g_pmdo3_d_t.pmdt020
                   NEXT FIELD pmdt020_d1_01
                END IF
                IF g_pmdo3_d[l_ac].pmdt020 < g_pmdo3_d[l_ac].pmdo006 AND g_pmdo3_d[l_ac].pmdn022 = 'N' THEN
                   CALL cl_err(g_pmdo3_d[l_ac].pmdt020,'apm-00382',1)
                   LET g_pmdo3_d[l_ac].pmdt020 = g_pmdo3_d_t.pmdt020
                   NEXT FIELD pmdt020_d1_01
                END IF
             END IF
          END IF
          
          
       ON ROW CHANGE
          IF g_asfp301_02_input_type = '1' THEN
             IF g_pmdo3_d[l_ac].sel = 'Y' THEN
                IF NOT cl_ap_chk_Range(g_pmdo3_d[l_ac].pmdt020,"0.000","0","","","azz-00079",1) THEN
                   LET g_pmdo3_d[l_ac].pmdt020 = g_pmdo3_d_t.pmdt020
                   NEXT FIELD pmdt020_d3_01
                END IF
             END IF
          END IF
          
       ON ACTION selall_pmdl004
          FOR g_idx = 1 TO g_pmdo3_d.getLength()
             IF g_pmdo3_d[g_idx].pmdl004 = g_pmdo3_d[l_ac].pmdl004 THEN
                LET g_pmdo3_d[g_idx].sel = 'Y'
                IF g_pmdo3_d[g_idx].pmdt020 <= 0 THEN
                   LET g_pmdo3_d[g_idx].pmdt020 = g_pmdo3_d[g_idx].pmdo006
                END IF
             END IF
          END FOR
          
       ON ACTION selall_pmdodocno
          FOR g_idx = 1 TO g_pmdo3_d.getLength()
             IF g_pmdo3_d[g_idx].pmdodocno = g_pmdo3_d[l_ac].pmdodocno THEN
                LET g_pmdo3_d[g_idx].sel = 'Y'
                IF g_pmdo3_d[g_idx].pmdt020 <= 0 THEN
                   LET g_pmdo3_d[g_idx].pmdt020 = g_pmdo3_d[g_idx].pmdo006
                END IF
             END IF
          END FOR
          
       ON ACTION unselall
          FOR g_idx = 1 TO g_pmdo3_d.getLength()
             LET g_pmdo3_d[g_idx].sel = 'N'
             LET g_pmdo3_d[g_idx].pmdt020 = 0
          END FOR
       
       ON ACTION delete_data
          CALL asfp301_02_delete_data()
          CALL asfp301_02_b_fill2()
       
   END INPUT
END DIALOG]]>
</point>
  <point name="function.asfp301_02_drop_temp_table" cite_std="N" status="d" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION asfp301_02_drop_temp_table()
   DEFINE r_success          LIKE type_t.num5

   WHENEVER ERROR CONTINUE

   LET r_success = TRUE

   DROP TABLE asfp301_02_temp

   IF NOT (SQLCA.sqlcode = 0 OR SQLCA.sqlcode = -206) THEN
      CALL cl_err('drop asfp301_02_temp',SQLCA.sqlcode,1)
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.asfp301_02_init" cite_std="N" status="d" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[# 畫面資料初始化
PUBLIC FUNCTION asfp301_02_init()
   CALL cl_set_combo_scc('pmdo003_d1_01','2055')
   CALL cl_set_combo_scc('pmdo003_d2_01','2055')
   CALL cl_set_combo_scc('pmdo003_d3_01','2055')
END FUNCTION]]>
</point>
  <point name="function.asfp301_02_b_fill" cite_std="N" status="d" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[#顯示對採購資料查詢的結果
PUBLIC FUNCTION asfp301_02_b_fill(p_wc,p_wc2)
   DEFINE p_wc         STRING
   DEFINE p_wc2        STRING
   DEFINE l_sql        STRING
   DEFINE l_ac_t       LIKE type_t.num5
   DEFINE l_slip       LIKE type_t.chr10
   DEFINE l_ooac004    LIKE ooac_t.ooac004
   DEFINE l_success    LIKE type_t.num5
   
   IF cl_null(p_wc) THEN
      LET p_wc = ' 1=1'
   END IF
   #--detail1-- 
   IF cl_null(p_wc2) OR p_wc2 = " 1=1" THEN
      LET l_sql = "SELECT UNIQUE 'N',pmdl004,      '',pmdodocno,pmdoseq,pmdoseq1,",
                  "                  pmdoseq2,pmdo003,pmdo001,       '',      '',",
                  "                  pmdo002, pmdo004,     '',  pmdo012,pmdo006, ",
                  "                        0,       0,pmdn028,     '',  pmdn029, ",
                  "                       '', pmdn030,pmdn022 ",
                  "  FROM pmdl_t,pmdn_t,pmdo_t,imaf_t ",
                  " WHERE pmdlent = pmdnent AND pmdldocno = pmdndocno",
                  "   AND pmdnent = pmdoent AND pmdndocno = pmdodocno ",
                  "   AND pmdnseq = pmdoseq ",
                  "   AND pmdoent = imafent AND pmdosite = imafsite ",
                  "   AND pmdo001 = imaf001 ",
                  "   AND pmdlent = ?",
                  "   AND pmdnsite = '",g_site CLIPPED,"'",
                  "   AND ",p_wc CLIPPED,
                  "   AND pmdlstus = 'Y'",
                  "   AND pmdn045 = '1'",
                  "   AND pmdo012 < '",g_today CLIPPED,"'"
   ELSE
      LET l_sql = "SELECT UNIQUE 'N',pmdl004,      '',pmdodocno,pmdoseq,pmdoseq1,",
                  "                  pmdoseq2,pmdo003,pmdo001,       '',      '',",
                  "                  pmdo002, pmdo004,     '',  pmdo012,pmdo006, ",
                  "                        0,       0,pmdn028,     '',  pmdn029, ",
                  "                       '', pmdn030,pmdn022 ",
                  "  FROM pmdl_t,pmdn_t,inac_t,pmdo_t,imaf_t ",
                  " WHERE pmdlent = pmdnent AND pmdldocno = pmdndocno",
                  "   AND pmdnent = inacent AND pmdnsite = inacsite ",
                  "   AND pmdn028 = inac001 AND pmdn029 = inac002 ",
                  "   AND pmdnent = pmdoent AND pmdndocno = pmdodocno ",
                  "   AND pmdnseq = pmdoseq ",
                  "   AND pmdoent = imafent AND pmdosite = imafsite ",
                  "   AND pmdo001 = imaf001 ",
                  "   AND pmdlent = ?",
                  "   AND pmdnsite = '",g_site CLIPPED,"'",
                  "   AND ",p_wc CLIPPED,
                  "   AND ",p_wc2 CLIPPED,
                  "   AND pmdlstus = 'Y'",
                  "   AND pmdn045 = '1'",
                  "   AND pmdo012 < '",g_today CLIPPED,"'"
   END IF
   
   LET l_sql = l_sql CLIPPED, " ORDER BY pmdo012 DESC"     
   
   PREPARE asfp301_02_sel_d1 FROM l_sql
   DECLARE asfp301_02_b_fill_curs_d1 CURSOR FOR asfp301_02_sel_d1
   
   CALL g_pmdo_d.clear()

   LET l_ac_t = l_ac
   LET l_ac = 1
   ERROR "Searching!"

   FOREACH asfp301_02_b_fill_curs_d1 USING g_enterprise INTO g_pmdo_d[l_ac].*
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:asfp301_02_b_fill_curs_d1",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      IF NOT asfp301_02_chk_temp_data(g_pmdo_d[l_ac].pmdodocno,g_pmdo_d[l_ac].pmdoseq,g_pmdo_d[l_ac].pmdoseq1,g_pmdo_d[l_ac].pmdoseq2) THEN
         CONTINUE FOREACH
      END IF
      
      CALL asfp301_02_default_quantity(g_pmdo_d[l_ac].pmdodocno,g_pmdo_d[l_ac].pmdoseq,g_pmdo_d[l_ac].pmdoseq1,g_pmdo_d[l_ac].pmdoseq2) 
       RETURNING g_pmdo_d[l_ac].pmdo006
      IF g_pmdo_d[l_ac].pmdo006 = 0 THEN
         CONTINUE FOREACH
      END IF
      
      LET l_slip = ''
      CALL s_aooi200_get_slip(g_pmdo_d[l_ac].pmdodocno) RETURNING l_success,l_slip
      IF NOT l_success THEN
         CONTINUE FOREACH
      END IF
      LET l_ooac004 = ''
      CALL cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0074') RETURNING l_ooac004
      IF cl_null(l_ooac004) THEN
         CONTINUE FOREACH
      END IF
      
      LET g_pmdo_d[l_ac].days = g_today - g_pmdo_d[l_ac].pmdo012
 
      CALL asfp301_02_detail_show("'1'")
          
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         CALL cl_err( "", 9035, 1 )
         EXIT FOREACH
      END IF
   END FOREACH
   LET g_rec_b = l_ac - 1
   CALL g_pmdo_d.deleteElement(l_ac)
   LET l_ac = l_ac_t
   CLOSE asfp301_02_b_fill_curs_d1
   FREE asfp301_02_sel_d1
   
   #--detail2--   
   IF cl_null(p_wc2) OR p_wc2 = " 1=1" THEN
      LET l_sql = "SELECT UNIQUE 'N',pmdl004,      '',pmdodocno,pmdoseq,pmdoseq1,",
                  "                  pmdoseq2,pmdo003,pmdo001,       '',      '',",
                  "                  pmdo002, pmdo004,     '',  pmdo012,pmdo006, ",
                  "                        0,       0,pmdn028,     '',  pmdn029, ",
                  "                       '', pmdn030,pmdn022 ",
                  "  FROM pmdl_t,pmdn_t,pmdo_t,imaf_t ",
                  " WHERE pmdlent = pmdnent AND pmdldocno = pmdndocno",
                  "   AND pmdnent = pmdoent AND pmdndocno = pmdodocno ",
                  "   AND pmdnseq = pmdoseq ",
                  "   AND pmdoent = imafent AND pmdosite = imafsite ",
                  "   AND pmdo001 = imaf001 ",
                  "   AND pmdlent = ?",
                  "   AND pmdnsite = '",g_site CLIPPED,"'",
                  "   AND ",p_wc CLIPPED,
                  "   AND pmdlstus = 'Y'",
                  "   AND pmdn045 = '1'",
                  "   AND pmdo012 = '",g_today CLIPPED,"'"
   ELSE
      LET l_sql = "SELECT UNIQUE 'N',pmdl004,      '',pmdodocno,pmdoseq,pmdoseq1,",
                  "                  pmdoseq2,pmdo003,pmdo001,       '',      '',",
                  "                  pmdo002, pmdo004,     '',  pmdo012,pmdo006, ",
                  "                        0,       0,pmdn028,     '',  pmdn029, ",
                  "                       '', pmdn030,pmdn022 ",
                  "  FROM pmdl_t,pmdn_t,inac_t,pmdo_t,imaf_t ",
                  " WHERE pmdlent = pmdnent AND pmdldocno = pmdndocno",
                  "   AND pmdnent = inacent AND pmdnsite = inacsite ",
                  "   AND pmdn028 = inac001 AND pmdn029 = inac002 ",
                  "   AND pmdnent = pmdoent AND pmdndocno = pmdodocno ",
                  "   AND pmdnseq = pmdoseq ",
                  "   AND pmdoent = imafent AND pmdosite = imafsite ",
                  "   AND pmdo001 = imaf001 ",
                  "   AND pmdlent = ?",
                  "   AND pmdnsite = '",g_site CLIPPED,"'",
                  "   AND ",p_wc CLIPPED,
                  "   AND ",p_wc2 CLIPPED,
                  "   AND pmdlstus = 'Y'",
                  "   AND pmdn045 = '1'",
                  "   AND pmdo012 = '",g_today CLIPPED,"'"
   END IF
              
   PREPARE asfp301_02_sel_d2 FROM l_sql
   DECLARE asfp301_02_b_fill_curs_d2 CURSOR FOR asfp301_02_sel_d2
   
   CALL g_pmdo2_d.clear()

   LET l_ac_t = l_ac
   LET l_ac = 1
   ERROR "Searching!"

   FOREACH asfp301_02_b_fill_curs_d2 USING g_enterprise INTO g_pmdo2_d[l_ac].*
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:asfp301_02_b_fill_curs_d2",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      IF NOT asfp301_02_chk_temp_data(g_pmdo2_d[l_ac].pmdodocno,g_pmdo2_d[l_ac].pmdoseq,g_pmdo2_d[l_ac].pmdoseq1,g_pmdo2_d[l_ac].pmdoseq2) THEN
         CONTINUE FOREACH
      END IF
      
      CALL asfp301_02_default_quantity(g_pmdo2_d[l_ac].pmdodocno,g_pmdo2_d[l_ac].pmdoseq,g_pmdo2_d[l_ac].pmdoseq1,g_pmdo2_d[l_ac].pmdoseq2) 
       RETURNING g_pmdo2_d[l_ac].pmdo006
      IF g_pmdo2_d[l_ac].pmdo006 = 0 THEN
         CONTINUE FOREACH
      END IF
      
      LET l_slip = ''
      CALL s_aooi200_get_slip(g_pmdo2_d[l_ac].pmdodocno) RETURNING l_success,l_slip
      IF NOT l_success THEN
         CONTINUE FOREACH
      END IF
      LET l_ooac004 = ''
      CALL cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0074') RETURNING l_ooac004
      IF cl_null(l_ooac004) THEN
         CONTINUE FOREACH
      END IF
      
      CALL asfp301_02_detail_show("'2'")   
          
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         CALL cl_err( "", 9035, 1 )
         EXIT FOREACH
      END IF
   END FOREACH
   LET g_rec_b2 = l_ac - 1
   CALL g_pmdo2_d.deleteElement(l_ac)
   LET l_ac = l_ac_t
   CLOSE asfp301_02_b_fill_curs_d2
   FREE asfp301_02_sel_d2
   
   #--detail3--
   IF cl_null(p_wc2) OR p_wc2 = " 1=1" THEN
      LET l_sql = "SELECT UNIQUE 'N',pmdl004,      '',pmdodocno,pmdoseq,pmdoseq1,",
                  "                  pmdoseq2,pmdo003,pmdo001,       '',      '',",
                  "                  pmdo002, pmdo004,     '',  pmdo012,pmdo006, ",
                  "                        0,       0,pmdn028,     '',  pmdn029, ",
                  "                       '', pmdn030,pmdn022 ",
                  "  FROM pmdl_t,pmdn_t,pmdo_t,imaf_t ",
                  " WHERE pmdlent = pmdnent AND pmdldocno = pmdndocno",
                  "   AND pmdnent = pmdoent AND pmdndocno = pmdodocno ",
                  "   AND pmdnseq = pmdoseq ",
                  "   AND pmdoent = imafent AND pmdosite = imafsite ",
                  "   AND pmdo001 = imaf001 ",
                  "   AND pmdlent = ?",
                  "   AND pmdnsite = '",g_site CLIPPED,"'",
                  "   AND ",p_wc CLIPPED,
                  "   AND pmdlstus = 'Y'",
                  "   AND pmdn045 = '1'",
                  "   AND pmdo012 > '",g_today CLIPPED,"'"
   ELSE
      LET l_sql = "SELECT UNIQUE 'N',pmdl004,      '',pmdodocno,pmdoseq,pmdoseq1,",
                  "                  pmdoseq2,pmdo003,pmdo001,       '',      '',",
                  "                  pmdo002, pmdo004,     '',  pmdo012,pmdo006, ",
                  "                        0,       0,pmdn028,     '',  pmdn029, ",
                  "                       '', pmdn030,pmdn022 ",
                  "  FROM pmdl_t,pmdn_t,inac_t,pmdo_t,imaf_t ",
                  " WHERE pmdlent = pmdnent AND pmdldocno = pmdndocno",
                  "   AND pmdnent = inacent AND pmdnsite = inacsite ",
                  "   AND pmdn028 = inac001 AND pmdn029 = inac002 ",
                  "   AND pmdnent = pmdoent AND pmdndocno = pmdodocno ",
                  "   AND pmdnseq = pmdoseq ",
                  "   AND pmdoent = imafent AND pmdosite = imafsite ",
                  "   AND pmdo001 = imaf001 ",
                  "   AND pmdlent = ?",
                  "   AND pmdnsite = '",g_site CLIPPED,"'",
                  "   AND ",p_wc CLIPPED,
                  "   AND ",p_wc2 CLIPPED,
                  "   AND pmdlstus = 'Y'",
                  "   AND pmdn045 = '1'",
                  "   AND pmdo012 > '",g_today CLIPPED,"'"
   END IF
   
   LET l_sql = l_sql CLIPPED, " ORDER BY pmdo012 "             
   
   PREPARE asfp301_02_sel_d3 FROM l_sql
   DECLARE asfp301_02_b_fill_curs_d3 CURSOR FOR asfp301_02_sel_d3
   
   CALL g_pmdo3_d.clear()

   LET l_ac_t = l_ac
   LET l_ac = 1
   ERROR "Searching!"

   FOREACH asfp301_02_b_fill_curs_d3 USING g_enterprise INTO g_pmdo3_d[l_ac].*
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:asfp301_02_b_fill_curs_d3",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      IF NOT asfp301_02_chk_temp_data(g_pmdo3_d[l_ac].pmdodocno,g_pmdo3_d[l_ac].pmdoseq,g_pmdo3_d[l_ac].pmdoseq1,g_pmdo3_d[l_ac].pmdoseq2) THEN
         CONTINUE FOREACH
      END IF
      

      
      CALL asfp301_02_default_quantity(g_pmdo3_d[l_ac].pmdodocno,g_pmdo3_d[l_ac].pmdoseq,g_pmdo3_d[l_ac].pmdoseq1,g_pmdo3_d[l_ac].pmdoseq2) 
       RETURNING g_pmdo3_d[l_ac].pmdo006
      IF g_pmdo3_d[l_ac].pmdo006 = 0 THEN
         CONTINUE FOREACH
      END IF
      
      LET l_slip = ''
      CALL s_aooi200_get_slip(g_pmdo3_d[l_ac].pmdodocno) RETURNING l_success,l_slip
      IF NOT l_success THEN
         CONTINUE FOREACH
      END IF
      LET l_ooac004 = ''
      CALL cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0074') RETURNING l_ooac004
      IF cl_null(l_ooac004) THEN
         CONTINUE FOREACH
      END IF
      
      LET g_pmdo3_d[l_ac].days =  g_pmdo3_d[l_ac].pmdo012 - g_today
      
      CALL asfp301_02_detail_show("'3'")   
          
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         CALL cl_err( "", 9035, 1 )
         EXIT FOREACH
      END IF
   END FOREACH
   LET g_rec_b3 = l_ac - 1
   CALL g_pmdo3_d.deleteElement(l_ac)
   LET l_ac = l_ac_t
   CLOSE asfp301_02_b_fill_curs_d3
   FREE asfp301_02_sel_d3
END FUNCTION]]>
</point>
  <point name="function.asfp301_02_b_fill2" cite_std="N" status="d" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[#顯示收貨底稿資料
PUBLIC FUNCTION asfp301_02_b_fill2()
   DEFINE l_sql        STRING
   DEFINE l_ac_t       LIKE type_t.num5
   
   LET l_sql = "SELECT 'N',pmdl004,      '',pmdodocno,pmdoseq,pmdoseq1,",
               "           pmdoseq2,pmdo003,pmdo001,       '',      '',",
               "           pmdo002, pmdo004,     '',  pmdo012,pmdo006, ",
               "                 0, pmdt020,pmdn028,     '',  pmdn029, ",
               "                '', pmdn030,pmdn022",
               "  FROM asfp301_02_temp",
               " WHERE pmdo012 < '",g_today CLIPPED,"'"
              
   PREPARE asfp301_02_temp_sel_d1 FROM l_sql
   DECLARE asfp301_02_temp_b_fill_curs_d1 CURSOR FOR asfp301_02_temp_sel_d1
   
   CALL g_pmdo_d.clear()

   LET l_ac_t = l_ac
   LET l_ac = 1
   ERROR "Searching!"

   FOREACH asfp301_02_temp_b_fill_curs_d1 INTO g_pmdo_d[l_ac].*
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:asfp301_02_temp_b_fill_curs_d1",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
   
      LET g_pmdo_d[l_ac].days = g_today - g_pmdo_d[l_ac].pmdo012
      
      CALL asfp301_02_detail_show("'1'")
      
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         CALL cl_err( "", 9035, 1 )
         EXIT FOREACH
      END IF
   END FOREACH
   CALL g_pmdo_d.deleteElement(l_ac)
   LET l_ac = l_ac_t
   CLOSE asfp301_02_temp_b_fill_curs_d1
   FREE asfp301_02_temp_sel_d1
   
   LET l_sql = "SELECT 'N',pmdl004,      '',pmdodocno,pmdoseq,pmdoseq1,",
               "           pmdoseq2,pmdo003,pmdo001,       '',      '',",
               "           pmdo002, pmdo004,     '',  pmdo012,pmdo006, ",
               "                 0, pmdt020,pmdn028,     '',  pmdn029, ",
               "                '', pmdn030,pmdn022",
               "  FROM asfp301_02_temp",
               " WHERE pmdo012 = '",g_today CLIPPED,"'"
              
   PREPARE asfp301_02_temp_sel_d2 FROM l_sql
   DECLARE asfp301_02_temp_b_fill_curs_d2 CURSOR FOR asfp301_02_temp_sel_d2
   
   CALL g_pmdo2_d.clear()

   LET l_ac_t = l_ac
   LET l_ac = 1
   ERROR "Searching!"

   FOREACH asfp301_02_temp_b_fill_curs_d2 INTO g_pmdo2_d[l_ac].*
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:asfp301_02_temp_b_fill_curs_d2",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
   
      CALL asfp301_02_detail_show("'2'")
          
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         CALL cl_err( "", 9035, 1 )
         EXIT FOREACH
      END IF
   END FOREACH
   CALL g_pmdo2_d.deleteElement(l_ac)
   LET l_ac = l_ac_t
   CLOSE asfp301_02_temp_b_fill_curs_d2
   FREE asfp301_02_temp_sel_d2
   
   LET l_sql = "SELECT 'N',pmdl004,      '',pmdodocno,pmdoseq,pmdoseq1,",
               "           pmdoseq2,pmdo003,pmdo001,       '',      '',",
               "           pmdo002, pmdo004,     '',  pmdo012,pmdo006, ",
               "                 0, pmdt020,pmdn028,     '',  pmdn029, ",
               "                '', pmdn030,pmdn022",
               "  FROM asfp301_02_temp",
               " WHERE pmdo012 > '",g_today CLIPPED,"'"
              
   PREPARE asfp301_02_temp_sel_d3 FROM l_sql
   DECLARE asfp301_02_temp_b_fill_curs_d3 CURSOR FOR asfp301_02_temp_sel_d3
   
   CALL g_pmdo3_d.clear()

   LET l_ac_t = l_ac
   LET l_ac = 1
   ERROR "Searching!"

   FOREACH asfp301_02_temp_b_fill_curs_d3 INTO g_pmdo3_d[l_ac].*
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:asfp301_02_temp_b_fill_curs_d3",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
   
      LET g_pmdo3_d[l_ac].days = g_pmdo3_d[l_ac].pmdo012 - g_today 
      
      CALL asfp301_02_detail_show("'1'")
          
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         CALL cl_err( "", 9035, 1 )
         EXIT FOREACH
      END IF
      
   END FOREACH
   CALL g_pmdo3_d.deleteElement(l_ac)
   LET l_ac = l_ac_t
   CLOSE asfp301_02_temp_b_fill_curs_d3
   FREE asfp301_02_temp_sel_d3
END FUNCTION]]>
</point>
  <point name="function.asfp301_02_detail_show" cite_std="N" status="d" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION asfp301_02_detail_show(p_page)
   DEFINE p_page      STRING

   IF p_page.getIndexOf("'1'",1) > 0 THEN
      CALL s_desc_get_trading_partner_abbr_desc(g_pmdo_d[l_ac].pmdl004)
       RETURNING g_pmdo_d[l_ac].pmdl004_desc
       
      CALL s_desc_get_item_desc(g_pmdo_d[l_ac].pmdo001)
       RETURNING g_pmdo_d[l_ac].pmdo001_desc,g_pmdo_d[l_ac].pmdo001_desc_desc
      
      CALL s_desc_get_unit_desc(g_pmdo_d[l_ac].pmdo004)
       RETURNING g_pmdo_d[l_ac].pmdo004_desc
      
      CALL s_desc_get_stock_desc(g_site,g_pmdo_d[l_ac].pmdn028)
       RETURNING g_pmdo_d[l_ac].pmdn028_desc
       
      CALL s_desc_get_locator_desc(g_site,g_pmdo_d[l_ac].pmdn028,g_pmdo_d[l_ac].pmdn029)
       RETURNING g_pmdo_d[l_ac].pmdn029_desc
   END IF
   
   IF p_page.getIndexOf("'2'",1) > 0 THEN
      CALL s_desc_get_trading_partner_abbr_desc(g_pmdo2_d[l_ac].pmdl004)
       RETURNING g_pmdo2_d[l_ac].pmdl004_desc
       
      CALL s_desc_get_item_desc(g_pmdo2_d[l_ac].pmdo001)
       RETURNING g_pmdo2_d[l_ac].pmdo001_desc,g_pmdo2_d[l_ac].pmdo001_desc_desc
      
      CALL s_desc_get_unit_desc(g_pmdo2_d[l_ac].pmdo004)
       RETURNING g_pmdo2_d[l_ac].pmdo004_desc
      
      CALL s_desc_get_stock_desc(g_site,g_pmdo2_d[l_ac].pmdn028)
       RETURNING g_pmdo2_d[l_ac].pmdn028_desc
       
      CALL s_desc_get_locator_desc(g_site,g_pmdo2_d[l_ac].pmdn028,g_pmdo2_d[l_ac].pmdn029)
       RETURNING g_pmdo2_d[l_ac].pmdn029_desc
   END IF
   
   IF p_page.getIndexOf("'3'",1) > 0 THEN
      CALL s_desc_get_trading_partner_abbr_desc(g_pmdo3_d[l_ac].pmdl004)
       RETURNING g_pmdo3_d[l_ac].pmdl004_desc
       
      CALL s_desc_get_item_desc(g_pmdo3_d[l_ac].pmdo001)
       RETURNING g_pmdo3_d[l_ac].pmdo001_desc,g_pmdo3_d[l_ac].pmdo001_desc_desc
      
      CALL s_desc_get_unit_desc(g_pmdo3_d[l_ac].pmdo004)
       RETURNING g_pmdo3_d[l_ac].pmdo004_desc
      
      CALL s_desc_get_stock_desc(g_site,g_pmdo3_d[l_ac].pmdn028)
       RETURNING g_pmdo3_d[l_ac].pmdn028_desc
       
      CALL s_desc_get_locator_desc(g_site,g_pmdo3_d[l_ac].pmdn028,g_pmdo3_d[l_ac].pmdn029)
       RETURNING g_pmdo3_d[l_ac].pmdn029_desc
   END IF
END FUNCTION]]>
</point>
  <point name="function.asfp301_02_save_data" cite_std="N" status="d" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION asfp301_02_save_data()
   DEFINE l_i     LIKE type_t.num5
   DEFINE l_msg   STRING
   CALL cl_showmsg_init()
   


   FOR l_i = 1 TO g_pmdo_d.getLength()
      IF g_pmdo_d[l_i].sel = 'Y' THEN
         IF g_pmdo_d[l_i].pmdt020 > 0 THEN
            INSERT INTO asfp301_02_temp (pmdl004,pmdodocno,pmdoseq,pmdoseq1,pmdoseq2,
                                        pmdo003,pmdo001,  pmdo002,pmdo004, pmdo012, 
                                        pmdo006,pmdt020,  pmdn028,pmdn029, pmdn030,
                                        pmdn022 )
            VALUES(g_pmdo_d[l_i].pmdl004, g_pmdo_d[l_i].pmdodocno,g_pmdo_d[l_i].pmdoseq,
                   g_pmdo_d[l_i].pmdoseq1,g_pmdo_d[l_i].pmdoseq2, g_pmdo_d[l_i].pmdo003,
                   g_pmdo_d[l_i].pmdo001, g_pmdo_d[l_i].pmdo002,  g_pmdo_d[l_i].pmdo004,
                   g_pmdo_d[l_i].pmdo012, g_pmdo_d[l_i].pmdo006,  g_pmdo_d[l_i].pmdt020,
                   g_pmdo_d[l_i].pmdn028, g_pmdo_d[l_i].pmdn029,  g_pmdo_d[l_i].pmdn030,
                   g_pmdo_d[l_i].pmdn022)
         ELSE  
            CALL cl_getmsg_parm('axm-00219',g_dlang,g_pmdo_d[l_i].pmdodocno ||'|'|| g_pmdo_d[l_i].pmdoseq ||'|'|| 
                                g_pmdo_d[l_i].pmdoseq1 ||'|'|| g_pmdo_d[l_i].pmdoseq2 )
             RETURNING l_msg         
            CALL cl_errmsg('pmdldocno',g_pmdo_d[l_i].pmdodocno,l_msg,'apm-00539',1)
         END IF
      END IF
   END FOR

   FOR l_i = 1 TO g_pmdo2_d.getLength()
      IF g_pmdo2_d[l_i].sel = 'Y' THEN
         IF g_pmdo2_d[l_i].pmdt020 > 0 THEN
            INSERT INTO asfp301_02_temp (pmdl004,pmdodocno,pmdoseq,pmdoseq1,pmdoseq2,
                                        pmdo003,pmdo001,  pmdo002,pmdo004, pmdo012, 
                                        pmdo006,pmdt020,  pmdn028,pmdn029, pmdn030,
                                        pmdn022)
            VALUES(g_pmdo2_d[l_i].pmdl004, g_pmdo2_d[l_i].pmdodocno,g_pmdo2_d[l_i].pmdoseq,
                   g_pmdo2_d[l_i].pmdoseq1,g_pmdo2_d[l_i].pmdoseq2, g_pmdo2_d[l_i].pmdo003,
                   g_pmdo2_d[l_i].pmdo001, g_pmdo2_d[l_i].pmdo002,  g_pmdo2_d[l_i].pmdo004,
                   g_pmdo2_d[l_i].pmdo012, g_pmdo2_d[l_i].pmdo006,  g_pmdo2_d[l_i].pmdt020,
                   g_pmdo2_d[l_i].pmdn028, g_pmdo2_d[l_i].pmdn029,  g_pmdo2_d[l_i].pmdn030,
                   g_pmdo2_d[l_i].pmdn022)
         ELSE
            CALL cl_getmsg_parm('axm-00219',g_dlang,g_pmdo2_d[l_i].pmdodocno ||'|'|| g_pmdo2_d[l_i].pmdoseq ||'|'|| 
                                g_pmdo2_d[l_i].pmdoseq1 ||'|'|| g_pmdo2_d[l_i].pmdoseq2 )
             RETURNING l_msg         
            CALL cl_errmsg('pmdldocno',g_pmdo2_d[l_i].pmdodocno,l_msg,'apm-00539',1)
         END IF
      END IF
   END FOR

   FOR l_i = 1 TO g_pmdo3_d.getLength()
      IF g_pmdo3_d[l_i].sel = 'Y' THEN
         IF g_pmdo3_d[l_i].pmdt020 > 0 THEN
            INSERT INTO asfp301_02_temp (pmdl004,pmdodocno,pmdoseq,pmdoseq1,pmdoseq2,
                                        pmdo003,pmdo001,  pmdo002,pmdo004, pmdo012, 
                                        pmdo006,pmdt020,  pmdn028,pmdn029, pmdn030,
                                        pmdn022)
            VALUES(g_pmdo3_d[l_i].pmdl004, g_pmdo3_d[l_i].pmdodocno,g_pmdo3_d[l_i].pmdoseq,
                   g_pmdo3_d[l_i].pmdoseq1,g_pmdo3_d[l_i].pmdoseq2, g_pmdo3_d[l_i].pmdo003,
                   g_pmdo3_d[l_i].pmdo001, g_pmdo3_d[l_i].pmdo002,  g_pmdo3_d[l_i].pmdo004,
                   g_pmdo3_d[l_i].pmdo012, g_pmdo3_d[l_i].pmdo006,  g_pmdo3_d[l_i].pmdt020,
                   g_pmdo3_d[l_i].pmdn028, g_pmdo3_d[l_i].pmdn029,  g_pmdo3_d[l_i].pmdn030,
                   g_pmdo3_d[l_i].pmdn022)
         ELSE
            CALL cl_getmsg_parm('axm-00219',g_dlang,g_pmdo3_d[l_i].pmdodocno ||'|'|| g_pmdo3_d[l_i].pmdoseq ||'|'|| 
                                g_pmdo3_d[l_i].pmdoseq1 ||'|'|| g_pmdo3_d[l_i].pmdoseq2 )
             RETURNING l_msg         
            CALL cl_errmsg('pmdldocno',g_pmdo3_d[l_i].pmdodocno,l_msg,'apm-00539',1)
         END IF
      END IF
   END FOR
   
   CALL cl_showmsg()
END FUNCTION]]>
</point>
  <point name="function.asfp301_02_chk_temp_data" cite_std="N" status="d" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION asfp301_02_chk_temp_data(p_pmdodocno,p_pmdoseq,p_pmdoseq1,p_pmdoseq2)
   DEFINE p_pmdodocno      LIKE pmdo_t.pmdodocno
   DEFINE p_pmdoseq        LIKE pmdo_t.pmdoseq
   DEFINE p_pmdoseq1       LIKE pmdo_t.pmdoseq1
   DEFINE p_pmdoseq2       LIKE pmdo_t.pmdoseq2
   DEFINE r_success        LIKE type_t.num5
   DEFINE l_cnt            LIKE type_t.num5
   
   LET r_success = TRUE
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt FROM asfp301_02_temp
    WHERE pmdodocno = p_pmdodocno
      AND pmdoseq   = p_pmdoseq
      AND pmdoseq1  = p_pmdoseq1
      AND pmdoseq2  = p_pmdoseq2
   IF l_cnt > 0 THEN
      LET r_success = FALSE
   END IF
   
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.asfp301_02_delete_data" cite_std="N" status="d" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION asfp301_02_delete_data()
   DEFINE l_i     LIKE type_t.num5
   
   FOR l_i = 1 TO g_pmdo_d.getLength()
      IF g_pmdo_d[l_i].sel = 'Y' THEN
         DELETE FROM asfp301_02_temp
          WHERE pmdodocno = g_pmdo_d[l_i].pmdodocno
            AND pmdoseq   = g_pmdo_d[l_i].pmdoseq
            AND pmdoseq1  = g_pmdo_d[l_i].pmdoseq1
            AND pmdoseq2  = g_pmdo_d[l_i].pmdoseq2
      END IF
   END FOR

   FOR l_i = 1 TO g_pmdo2_d.getLength()
      IF g_pmdo2_d[l_i].sel = 'Y' THEN
         DELETE FROM asfp301_02_temp
          WHERE pmdodocno = g_pmdo2_d[l_i].pmdodocno
            AND pmdoseq   = g_pmdo2_d[l_i].pmdoseq
            AND pmdoseq1  = g_pmdo2_d[l_i].pmdoseq1
            AND pmdoseq2  = g_pmdo2_d[l_i].pmdoseq2
      END IF
   END FOR

   FOR l_i = 1 TO g_pmdo3_d.getLength()
      IF g_pmdo3_d[l_i].sel = 'Y' THEN
         DELETE FROM asfp301_02_temp
          WHERE pmdodocno = g_pmdo3_d[l_i].pmdodocno
            AND pmdoseq   = g_pmdo3_d[l_i].pmdoseq
            AND pmdoseq1  = g_pmdo3_d[l_i].pmdoseq1
            AND pmdoseq2  = g_pmdo3_d[l_i].pmdoseq2
      END IF
   END FOR
END FUNCTION]]>
</point>
  <point name="function.asfp301_02_default_quantity" cite_std="N" status="d" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 待收數量預設
# Memo...........:
# Usage..........: CALL asfp301_02_default_quantity(p_pmdt001,p_pmdt002,p_pmdt003,p_pmdt004)
#                  RETURNING r_quantity
# Input parameter: p_pmdt001      採購單號
#                : p_pmdt002      採購項次
#                : p_pmdt003      採購項序
#                : p_pmdt004      採購分批序
# Return code....: r_quantity     待收數量
# Date & Author..: 2014/06/23 By benson
# Modify.........:
################################################################################
PUBLIC FUNCTION asfp301_02_default_quantity(p_pmdt001,p_pmdt002,p_pmdt003,p_pmdt004)
DEFINE r_quantity    LIKE pmdt_t.pmdt020
DEFINE p_pmdt001     LIKE pmdt_t.pmdt001   #採購單號
DEFINE p_pmdt002     LIKE pmdt_t.pmdt002   #項次
DEFINE p_pmdt003     LIKE pmdt_t.pmdt003   #項序
DEFINE p_pmdt004     LIKE pmdt_t.pmdt004   #分批序
DEFINE l_pmdn022     LIKE pmdn_t.pmdn022
DEFINE l_pmdn034     LIKE pmdn_t.pmdn034
DEFINE l_pmdo006     LIKE pmdo_t.pmdo006
DEFINE l_pmdo015     LIKE pmdo_t.pmdo015
DEFINE l_pmdo016     LIKE pmdo_t.pmdo016
DEFINE l_pmdt020     LIKE pmdt_t.pmdt020

   LET r_quantity = 0

   #若採購項次設置不允許部分收貨時，則收貨數量不允許小於採購數量
   LET l_pmdn022 = '' #部分收貨   
   SELECT pmdn022 INTO l_pmdn022 FROM pmdn_t
     WHERE pmdnent = g_enterprise AND pmdndocno = p_pmdt001
       AND pmdnseq = p_pmdt002

   LET l_pmdo006 = 0
   LET l_pmdo015 = 0  #pmdo015(已收貨量)
   LET l_pmdo016 = 0  #pmdo016(驗退量)
   SELECT pmdo006,pmdo015,pmdo016 INTO l_pmdo006,l_pmdo015,l_pmdo016 FROM pmdo_t
     WHERE pmdoent = g_enterprise AND pmdodocno = p_pmdt001
       AND pmdoseq = p_pmdt002
       AND pmdoseq1 = p_pmdt003
       AND pmdoseq2 = p_pmdt004

   IF cl_null(l_pmdo006) THEN
      LET l_pmdo006 = 0
   END IF
   IF cl_null(l_pmdo015) THEN
      LET l_pmdo015 = 0
   END IF
   IF cl_null(l_pmdo016) THEN
      LET l_pmdo016 = 0
   END IF


   #輸入的收貨數量不可以大於對應採購的pmdo006(需求量+超交率數量)-pmdo015(已收貨量)+pmdo016(驗退量)-已打收貨單未確認數量
   #收貨數量需要考慮超交率，總收貨量不可以大於採購量+超交率數量
   LET l_pmdt020 = 0    #已登打收貨單未確認量(其他單據上的)
   SELECT SUM(COALESCE(pmdt020,0)) INTO l_pmdt020 FROM pmdt_t,pmds_t
     WHERE pmdtent = pmdsent AND pmdtdocno = pmdsdocno
       AND pmdtent = g_enterprise AND pmdsstus = 'N'
       AND pmdt001 = p_pmdt001 AND pmdt002 = p_pmdt002
       AND pmdt003 = p_pmdt003 AND pmdt004 = p_pmdt004
   IF cl_null(l_pmdt020) THEN
      LET l_pmdt020 = 0
   END IF
   
   IF l_pmdn022 = 'N' THEN  #不允許部分收貨
      IF l_pmdt020 = 0 THEN
         LET r_quantity = l_pmdo006
      ELSE
         LET r_quantity = 0
      END IF
   ELSE
      LET r_quantity = l_pmdo006 - l_pmdo015 + l_pmdo016 - l_pmdt020
   END IF

   IF cl_null(r_quantity) OR r_quantity < 0 THEN
      LET r_quantity = 0
   END IF

   RETURN r_quantity
END FUNCTION]]>
</point>
  <point name="function.asfp301_02_set_entry_b" cite_std="N" status="d" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION asfp301_02_set_entry_b()
   CALL cl_set_comp_entry("pmdt020_d1_01,pmdt020_d2_01,pmdt020_d3_01",TRUE)
END FUNCTION]]>
</point>
  <point name="function.asfp301_02_set_no_entry_b" cite_std="N" status="d" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION asfp301_02_set_no_entry_b()
   IF g_asfp301_02_input_type = '2' THEN
      CALL cl_set_comp_entry("pmdt020_d1_01,pmdt020_d2_01,pmdt020_d3_01",FALSE)
   END IF
END FUNCTION]]>
</point>
  <point name="function.asfp301_02_delete_temp_table" cite_std="N" status="d" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION asfp301_02_delete_temp_table()
   DELETE FROM asfp301_02_temp
END FUNCTION]]>
</point>
  <point name="free_style.variable" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   PRIVATE TYPE type_pmdo RECORD
                   sel                  LIKE type_t.chr1,
                   pmdl004              LIKE pmdl_t.pmdl004,
                   pmdl004_desc         LIKE pmaal_t.pmaal004,
                   pmdodocno            LIKE pmdo_t.pmdodocno,
                   pmdoseq              LIKE pmdo_t.pmdoseq,
                   pmdoseq1             LIKE pmdo_t.pmdoseq1,
                   pmdoseq2             LIKE pmdo_t.pmdoseq2,
                   pmdo003              LIKE pmdo_t.pmdo003,
                   pmdo001              LIKE pmdo_t.pmdo001,
                   pmdo001_desc         LIKE imaal_t.imaal003,
                   pmdo001_desc_desc    LIKE imaal_t.imaal004,
                   pmdo002              LIKE pmdo_t.pmdo002,
                   pmdo004              LIKE pmdo_t.pmdo004,
                   pmdo004_desc         LIKE oocal_t.oocal003,
                   pmdo012              LIKE pmdo_t.pmdo012,
                   pmdo006              LIKE pmdo_t.pmdo006,
                   days                 LIKE type_t.num5,
                   pmdt020              LIKE pmdt_t.pmdt020,
                   pmdn028              LIKE pmdn_t.pmdn028,
                   pmdn028_desc         LIKE inaa_t.inaa002,
                   pmdn029              LIKE pmdn_t.pmdn029,
                   pmdn029_desc         LIKE inab_t.inab003,
                   pmdn030              LIKE pmdn_t.pmdn030,
                   pmdn022              LIKE pmdn_t.pmdn022                   
                              END RECORD
DEFINE g_pmdo_d    DYNAMIC ARRAY OF type_pmdo
DEFINE g_pmdo_d_t  type_pmdo
DEFINE g_pmdo2_d   DYNAMIC ARRAY OF type_pmdo
DEFINE g_pmdo2_d_t type_pmdo
DEFINE g_pmdo3_d   DYNAMIC ARRAY OF type_pmdo
DEFINE g_pmdo3_d_t type_pmdo

DEFINE l_ac        LIKE type_t.num5
DEFINE g_idx       LIKE type_t.num5
DEFINE g_rec_b     LIKE type_t.num5
DEFINE g_rec_b2    LIKE type_t.num5
DEFINE g_rec_b3    LIKE type_t.num5
DEFINE g_qty       LIKE pmdo_t.pmdo006
]]>
</point>
  <point name="global.inc" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[GLOBALS "../4gl/asfp301.inc"]]>
</point>
  <point name="input.a.page1.pmdo001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmdo_d[l_ac].pmdo_t.pmdo001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pmdo_d[l_ac].pmdo001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmdo_d[l_ac].pmdo001_desc

]]>
</point>
  <point name="input.a.page1.pmdo004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmdo_d[l_ac].pmdo_t.pmdo004
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pmdo_d[l_ac].pmdo004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmdo_d[l_ac].pmdo004_desc

]]>
</point>
  <point name="input.a.page1.pmdodocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_pmdo_d[g_detail_idx].pmdodocno IS NOT NULL AND g_pmdo_d[g_detail_idx].pmdoseq IS NOT NULL AND g_pmdo_d[g_detail_idx].pmdoseq1 IS NOT NULL AND g_pmdo_d[g_detail_idx].pmdoseq2 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdo_d[g_detail_idx].pmdodocno != g_pmdo_d_t.pmdodocno OR g_pmdo_d[g_detail_idx].pmdoseq != g_pmdo_d_t.pmdoseq OR g_pmdo_d[g_detail_idx].pmdoseq1 != g_pmdo_d_t.pmdoseq1 OR g_pmdo_d[g_detail_idx].pmdoseq2 != g_pmdo_d_t.pmdoseq2)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmdo_t WHERE "||"pmdoent = '" ||g_enterprise|| "' AND "||"pmdodocno = '"||g_pmdo_d[g_detail_idx].pmdodocno ||"' AND "|| "pmdoseq = '"||g_pmdo_d[g_detail_idx].pmdoseq ||"' AND "|| "pmdoseq1 = '"||g_pmdo_d[g_detail_idx].pmdoseq1 ||"' AND "|| "pmdoseq2 = '"||g_pmdo_d[g_detail_idx].pmdoseq2 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.pmdoseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_pmdo_d[g_detail_idx].pmdodocno IS NOT NULL AND g_pmdo_d[g_detail_idx].pmdoseq IS NOT NULL AND g_pmdo_d[g_detail_idx].pmdoseq1 IS NOT NULL AND g_pmdo_d[g_detail_idx].pmdoseq2 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdo_d[g_detail_idx].pmdodocno != g_pmdo_d_t.pmdodocno OR g_pmdo_d[g_detail_idx].pmdoseq != g_pmdo_d_t.pmdoseq OR g_pmdo_d[g_detail_idx].pmdoseq1 != g_pmdo_d_t.pmdoseq1 OR g_pmdo_d[g_detail_idx].pmdoseq2 != g_pmdo_d_t.pmdoseq2)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmdo_t WHERE "||"pmdoent = '" ||g_enterprise|| "' AND "||"pmdodocno = '"||g_pmdo_d[g_detail_idx].pmdodocno ||"' AND "|| "pmdoseq = '"||g_pmdo_d[g_detail_idx].pmdoseq ||"' AND "|| "pmdoseq1 = '"||g_pmdo_d[g_detail_idx].pmdoseq1 ||"' AND "|| "pmdoseq2 = '"||g_pmdo_d[g_detail_idx].pmdoseq2 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.pmdoseq1" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_pmdo_d[g_detail_idx].pmdodocno IS NOT NULL AND g_pmdo_d[g_detail_idx].pmdoseq IS NOT NULL AND g_pmdo_d[g_detail_idx].pmdoseq1 IS NOT NULL AND g_pmdo_d[g_detail_idx].pmdoseq2 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdo_d[g_detail_idx].pmdodocno != g_pmdo_d_t.pmdodocno OR g_pmdo_d[g_detail_idx].pmdoseq != g_pmdo_d_t.pmdoseq OR g_pmdo_d[g_detail_idx].pmdoseq1 != g_pmdo_d_t.pmdoseq1 OR g_pmdo_d[g_detail_idx].pmdoseq2 != g_pmdo_d_t.pmdoseq2)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmdo_t WHERE "||"pmdoent = '" ||g_enterprise|| "' AND "||"pmdodocno = '"||g_pmdo_d[g_detail_idx].pmdodocno ||"' AND "|| "pmdoseq = '"||g_pmdo_d[g_detail_idx].pmdoseq ||"' AND "|| "pmdoseq1 = '"||g_pmdo_d[g_detail_idx].pmdoseq1 ||"' AND "|| "pmdoseq2 = '"||g_pmdo_d[g_detail_idx].pmdoseq2 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.pmdoseq2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_pmdo_d[g_detail_idx].pmdodocno IS NOT NULL AND g_pmdo_d[g_detail_idx].pmdoseq IS NOT NULL AND g_pmdo_d[g_detail_idx].pmdoseq1 IS NOT NULL AND g_pmdo_d[g_detail_idx].pmdoseq2 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdo_d[g_detail_idx].pmdodocno != g_pmdo_d_t.pmdodocno OR g_pmdo_d[g_detail_idx].pmdoseq != g_pmdo_d_t.pmdoseq OR g_pmdo_d[g_detail_idx].pmdoseq1 != g_pmdo_d_t.pmdoseq1 OR g_pmdo_d[g_detail_idx].pmdoseq2 != g_pmdo_d_t.pmdoseq2)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmdo_t WHERE "||"pmdoent = '" ||g_enterprise|| "' AND "||"pmdodocno = '"||g_pmdo_d[g_detail_idx].pmdodocno ||"' AND "|| "pmdoseq = '"||g_pmdo_d[g_detail_idx].pmdoseq ||"' AND "|| "pmdoseq1 = '"||g_pmdo_d[g_detail_idx].pmdoseq1 ||"' AND "|| "pmdoseq2 = '"||g_pmdo_d[g_detail_idx].pmdoseq2 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.xmdddocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xmdd_m.xmdddocno) AND NOT cl_null(g_xmdd_m.xmddseq) AND NOT cl_null(g_xmdd_m.xmddseq1) AND NOT cl_null(g_xmdd_m.xmddseq2) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmdd_m.xmdddocno != g_xmdddocno_t  OR g_xmdd_m.xmddseq != g_xmddseq_t  OR g_xmdd_m.xmddseq1 != g_xmddseq1_t  OR g_xmdd_m.xmddseq2 != g_xmddseq2_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdd_t WHERE "||"xmddent = '" ||g_enterprise|| "' AND "||"xmdddocno = '"||g_xmdd_m.xmdddocno ||"' AND "|| "xmddseq = '"||g_xmdd_m.xmddseq ||"' AND "|| "xmddseq1 = '"||g_xmdd_m.xmddseq1 ||"' AND "|| "xmddseq2 = '"||g_xmdd_m.xmddseq2 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.a.xmddseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xmdd_m.xmdddocno) AND NOT cl_null(g_xmdd_m.xmddseq) AND NOT cl_null(g_xmdd_m.xmddseq1) AND NOT cl_null(g_xmdd_m.xmddseq2) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmdd_m.xmdddocno != g_xmdddocno_t  OR g_xmdd_m.xmddseq != g_xmddseq_t  OR g_xmdd_m.xmddseq1 != g_xmddseq1_t  OR g_xmdd_m.xmddseq2 != g_xmddseq2_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdd_t WHERE "||"xmddent = '" ||g_enterprise|| "' AND "||"xmdddocno = '"||g_xmdd_m.xmdddocno ||"' AND "|| "xmddseq = '"||g_xmdd_m.xmddseq ||"' AND "|| "xmddseq1 = '"||g_xmdd_m.xmddseq1 ||"' AND "|| "xmddseq2 = '"||g_xmdd_m.xmddseq2 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.a.xmddseq1" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xmdd_m.xmdddocno) AND NOT cl_null(g_xmdd_m.xmddseq) AND NOT cl_null(g_xmdd_m.xmddseq1) AND NOT cl_null(g_xmdd_m.xmddseq2) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmdd_m.xmdddocno != g_xmdddocno_t  OR g_xmdd_m.xmddseq != g_xmddseq_t  OR g_xmdd_m.xmddseq1 != g_xmddseq1_t  OR g_xmdd_m.xmddseq2 != g_xmddseq2_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdd_t WHERE "||"xmddent = '" ||g_enterprise|| "' AND "||"xmdddocno = '"||g_xmdd_m.xmdddocno ||"' AND "|| "xmddseq = '"||g_xmdd_m.xmddseq ||"' AND "|| "xmddseq1 = '"||g_xmdd_m.xmddseq1 ||"' AND "|| "xmddseq2 = '"||g_xmdd_m.xmddseq2 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.a.xmddseq2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xmdd_m.xmdddocno) AND NOT cl_null(g_xmdd_m.xmddseq) AND NOT cl_null(g_xmdd_m.xmddseq1) AND NOT cl_null(g_xmdd_m.xmddseq2) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmdd_m.xmdddocno != g_xmdddocno_t  OR g_xmdd_m.xmddseq != g_xmddseq_t  OR g_xmdd_m.xmddseq1 != g_xmddseq1_t  OR g_xmdd_m.xmddseq2 != g_xmddseq2_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdd_t WHERE "||"xmddent = '" ||g_enterprise|| "' AND "||"xmdddocno = '"||g_xmdd_m.xmdddocno ||"' AND "|| "xmddseq = '"||g_xmdd_m.xmddseq ||"' AND "|| "xmddseq1 = '"||g_xmdd_m.xmddseq1 ||"' AND "|| "xmddseq2 = '"||g_xmdd_m.xmddseq2 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmdo_d[l_ac].pmdo_t.pmdo001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pmdo_d[l_ac].pmdo001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmdo_d[l_ac].pmdo001_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmdo_d[l_ac].pmdo_t.pmdo004
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pmdo_d[l_ac].pmdo004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmdo_d[l_ac].pmdo004_desc
]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.get_var" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.pre_input" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.post_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="function.asfp301_02_get_settings" cite_std="N" status="u" ver="" src="s" new="Y" order="1">
<![CDATA[
################################################################################
# Descriptions...: 取储存的条件设定
# Memo...........:
# Usage..........: CALL asfp301_02_get_settings()
#                       RETURNING NULL
# Input parameter: NULL
# Return code....: NULL
# Date & Author..: 2014-07-08 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION asfp301_02_get_settings()
   DEFINE l_sql         STRING
   
   LET l_sql = "SELECT gzxn007 FROM gzxm_t,gzxn_t",
               " WHERE gzxment  = gzxnent AND gzxment = ",g_enterprise,
               "   AND gzxm001  = gzxn001 AND gzxm001 = 1 ",
               "   AND gzxm002  = gzxn002 AND gzxm002 = 'asfp301_02'",
               "   AND gzxm003  = gzxn003 AND gzxm003 = '",g_user,"'",
               "   AND gzxmstus = 'Y'",
               "   AND gzxn005  = ? "
   PREPARE asfp301_02_get_settings_p1 FROM l_sql
   
   #拼单选择
   EXECUTE asfp301_02_get_settings_p1 USING 'choice1' INTO g_setting.choice1
   IF cl_null(g_setting.choice1) THEN LET g_setting.choice1 = '1' END IF

   #拼单方式-预计交期
   EXECUTE asfp301_02_get_settings_p1 USING 'choice2' INTO g_setting.choice2
   IF cl_null(g_setting.choice2) THEN LET g_setting.choice2 = 'N' END IF

   #拼单方式-客户
   EXECUTE asfp301_02_get_settings_p1 USING 'choice3' INTO g_setting.choice3
   IF cl_null(g_setting.choice3) THEN LET g_setting.choice3 = 'N' END IF
   
   #拼单方式-产品特征
   EXECUTE asfp301_02_get_settings_p1 USING 'choice4' INTO g_setting.choice4
   IF cl_null(g_setting.choice4) THEN LET g_setting.choice4 = 'N' END IF

   #拼单方式-订单单号
   EXECUTE asfp301_02_get_settings_p1 USING 'choice5' INTO g_setting.choice5
   IF cl_null(g_setting.choice5) THEN LET g_setting.choice5 = 'N' END IF

   #下次不再进此画面
   EXECUTE asfp301_02_get_settings_p1 USING 'choice6' INTO g_setting.choice6
   IF cl_null(g_setting.choice6) THEN LET g_setting.choice6 = 'N' END IF


END FUNCTION]]>
</point>
  <point name="function.asfp301_02_save_settings" cite_std="N" status="u" ver="" src="s" new="Y" order="2">
<![CDATA[
################################################################################
# Descriptions...: 取储存的条件设定
# Memo...........:
# Usage..........: CALL asfp301_02_save_settings()
#                       RETURNING r_success
# Input parameter: NULL
# Return code....: r_success     成功否标识符
# Date & Author..: 2014-07-08 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION asfp301_02_save_settings()
   DEFINE r_success     LIKE type_t.num5
   DEFINE l_gzxm_t      RECORD LIKE gzxm_t.*
   DEFINE l_gzxn_t      RECORD LIKE gzxn_t.*
   
   LET r_success = FALSE
   
   DELETE FROM gzxm_t
    WHERE gzxment = g_enterprise
      AND gzxm001 = 1
      AND gzxm002 = 'asfp301_02'
      AND gzxm003 = g_user
   IF SQLCA.sqlcode THEN
      CALL cl_err('delete gzxm_t',SQLCA.sqlcode,1)
      RETURN r_success
   END IF
   
   DELETE FROM gzxn_t
    WHERE gzxnent = g_enterprise
      AND gzxn001 = 1
      AND gzxn002 = 'asfp301_02'
      AND gzxn003 = g_user
   IF SQLCA.sqlcode THEN
      CALL cl_err('delete gzxn_t',SQLCA.sqlcode,1)
      RETURN r_success
   END IF   
   
   INITIALIZE l_gzxm_t.* TO NULL
   LET l_gzxm_t.gzxmstus  = 'Y'                   #狀態碼    
   LET l_gzxm_t.gzxment = g_enterprise            #企業編號  
   LET l_gzxm_t.gzxm001 = 1                       #QBE編號   
   LET l_gzxm_t.gzxm002 = 'asfp301_02'            #作業編號  
   LET l_gzxm_t.gzxm003 = g_user                  #員工編號  
   LET l_gzxm_t.gzxm004 = 'Y'                     #是否為預設
   LET l_gzxm_t.gzxm005 = 'N'                     #首頁使用  
   LET l_gzxm_t.gzxm006 = NULL                    #查詢方案來源序號  
   LET l_gzxm_t.gzxm007 = NULL                    #自設WHERE條件     
   LET l_gzxm_t.gzxm008 = NULL                    #分群編號    
   LET l_gzxm_t.gzxmownid = g_user                #資料所有者  
   LET l_gzxm_t.gzxmowndp = g_dept                #資料所屬部門
   LET l_gzxm_t.gzxmcrtid = g_user                #資料建立者  
   LET l_gzxm_t.gzxmcrtdp = g_dept                #資料建立部門
   LET l_gzxm_t.gzxmcrtdt = cl_get_current()      #資料創建日  
   LET l_gzxm_t.gzxmmodid = NULL                  #資料修改者  
   LET l_gzxm_t.gzxmmoddt = NULL                  #最近修改日  
   LET l_gzxm_t.gzxm009 = 1                       #順序       
   
   INSERT INTO gzxm_t VALUES(l_gzxm_t.*)
   IF SQLCA.sqlcode THEN
      CALL cl_err('insert gzxm_t',SQLCA.sqlcode,1)
      RETURN r_success
   END IF
   
   INITIALIZE l_gzxn_t.* TO NULL
   LET l_gzxn_t.gzxnent = g_enterprise            #企業編號
   LET l_gzxn_t.gzxn001 = 1                       #QBE編號 
   LET l_gzxn_t.gzxn002 = 'asfp301_02'            #作業編號
   LET l_gzxn_t.gzxn003 = g_user                  #員工編號
   LET l_gzxn_t.gzxn004 = 1                       #條件序號
   LET l_gzxn_t.gzxn005 = 'choice1'               #欄位編號
   LET l_gzxn_t.gzxn006 = NULL                    #運算子  
   LET l_gzxn_t.gzxn007 = g_setting.choice1       #條件值1 
   LET l_gzxn_t.gzxn008 = NULL                    #條件值2 

   INSERT INTO gzxn_t VALUES(l_gzxn_t.*)
   IF SQLCA.sqlcode THEN
      CALL cl_err('insert gzxn_t',SQLCA.sqlcode,1)
      RETURN r_success
   END IF
   
   LET l_gzxn_t.gzxn004 = 2                       #條件序號
   LET l_gzxn_t.gzxn005 = 'choice2'               #欄位編號
   LET l_gzxn_t.gzxn007 = g_setting.choice2       #條件值1 

   INSERT INTO gzxn_t VALUES(l_gzxn_t.*)
   IF SQLCA.sqlcode THEN
      CALL cl_err('insert gzxn_t',SQLCA.sqlcode,1)
      RETURN r_success
   END IF

   LET l_gzxn_t.gzxn004 = 3                       #條件序號
   LET l_gzxn_t.gzxn005 = 'choice3'               #欄位編號
   LET l_gzxn_t.gzxn007 = g_setting.choice3       #條件值1 

   INSERT INTO gzxn_t VALUES(l_gzxn_t.*)
   IF SQLCA.sqlcode THEN
      CALL cl_err('insert gzxn_t',SQLCA.sqlcode,1)
      RETURN r_success
   END IF
   
   LET l_gzxn_t.gzxn004 = 4                       #條件序號
   LET l_gzxn_t.gzxn005 = 'choice4'               #欄位編號
   LET l_gzxn_t.gzxn007 = g_setting.choice4       #條件值1 

   INSERT INTO gzxn_t VALUES(l_gzxn_t.*)
   IF SQLCA.sqlcode THEN
      CALL cl_err('insert gzxn_t',SQLCA.sqlcode,1)
      RETURN r_success
   END IF

   LET l_gzxn_t.gzxn004 = 5                       #條件序號
   LET l_gzxn_t.gzxn005 = 'choice5'               #欄位編號
   LET l_gzxn_t.gzxn007 = g_setting.choice5       #條件值1 

   INSERT INTO gzxn_t VALUES(l_gzxn_t.*)
   IF SQLCA.sqlcode THEN
      CALL cl_err('insert gzxn_t',SQLCA.sqlcode,1)
      RETURN r_success
   END IF
   
   LET l_gzxn_t.gzxn004 = 6                       #條件序號
   LET l_gzxn_t.gzxn005 = 'choice6'               #欄位編號
   LET l_gzxn_t.gzxn007 = g_setting.choice6       #條件值1 

   INSERT INTO gzxn_t VALUES(l_gzxn_t.*)
   IF SQLCA.sqlcode THEN
      CALL cl_err('insert gzxn_t',SQLCA.sqlcode,1)
      RETURN r_success
   END IF

   LET r_success = TRUE
   RETURN r_success
   
END FUNCTION]]>
</point>
  <point name="dialog.asfp301_02_input" cite_std="N" status="u" ver="" src="s" new="Y" order="1">
<![CDATA[
DIALOG asfp301_02_input()
   DEFINE l_success       LIKE type_t.num5   

   INPUT BY NAME g_setting.*  ATTRIBUTE(WITHOUT DEFAULTS)
   
      BEFORE INPUT
         CALL asfp301_02_get_settings()
         CALL asfp301_02_set_entry_b()  
         CALL asfp301_02_set_no_entry_b()          
         
      ON ACTION save_settings
         CALL asfp301_02_save_settings()
              RETURNING l_success
         IF NOT l_success THEN
            CONTINUE DIALOG
         END IF
      
      BEFORE FIELD choice1
         CALL asfp301_02_set_entry_b()
         
      AFTER FIELD choice1
         CALL asfp301_02_set_no_entry_b()      
 
      AFTER INPUT
         IF g_setting.choice1 NOT MATCHES '[12]' THEN
            NEXT FIELD choice1
         END IF
      
         IF g_setting.choice2 NOT MATCHES '[YN]' THEN
            NEXT FIELD choice2
         END IF
         
         IF g_setting.choice3 NOT MATCHES '[YN]' THEN
            NEXT FIELD choice3
         END IF

         IF g_setting.choice4 NOT MATCHES '[YN]' THEN
            NEXT FIELD choice4
         END IF

         IF g_setting.choice5 NOT MATCHES '[YN]' THEN
            NEXT FIELD choice5
         END IF

         IF g_setting.choice6 NOT MATCHES '[YN]' THEN
            NEXT FIELD choice6
         END IF
         
   END INPUT

END DIALOG]]>
</point>
  <point name="function.asfp301_02_set_entry_b" cite_std="N" status="u" ver="" src="s" new="Y" order="3">
<![CDATA[
PRIVATE FUNCTION asfp301_02_set_entry_b()
   CALL cl_set_comp_entry("choice2,choice3,choice4,choice5",TRUE)
END FUNCTION]]>
</point>
  <point name="function.asfp301_02_set_no_entry_b" cite_std="N" status="u" ver="" src="s" new="Y" order="4">
<![CDATA[
PRIVATE FUNCTION asfp301_02_set_no_entry_b()
   IF g_setting.choice1 = '1' THEN
      CALL cl_set_comp_entry("choice2,choice3,choice4,choice5",FALSE)
   END IF
END FUNCTION]]>
</point>
  <section id="apmp520.free_style_variable" ver="1" status="" src="s">
<![CDATA[#add-point:free_style模組變數(Module Variable)
{<point name="free_style.variable"/>}
#end add-point
]]>
</section>
  <section id="apmp520.global" ver="1" status="" src="s">
<![CDATA[#add-point:註解編寫項目
{<point name="main.memo" />}
#end add-point
 
IMPORT os
#add-point:增加匯入項目
{<point name="main.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
]]>
</section>
  <section id="apmp520.global_variable" ver="1" status="" src="s">
<![CDATA[#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
]]>
</section>
  <section id="apmp520.other_dialog" ver="1" status="" src="s">
<![CDATA[{<point name="other.dialog"/>}
]]>
</section>
  <section id="apmp520.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="asfp301_02.description" ver="1" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000006
#+ 
#+ Filename...: asfp301_02
#+ Description: ...
#+ Creator....: 00378(2014/07/08)
#+ Modifier...: 00378(2014/07/08)
#+ Buildtype..: 應用 c01b 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="asfp301_02.free_style_variable" ver="1" status="" src="s">
<![CDATA[#add-point:free_style模組變數(Module Variable)
{<point name="free_style.variable"/>}
#end add-point
]]>
</section>
  <section id="asfp301_02.global" ver="4" status="u" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告

 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="asfp301_02.global_variable" ver="1" status="" src="s">
<![CDATA[#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
]]>
</section>
  <section id="asfp301_02.input" ver="3" status="u" src="s">
<![CDATA[#+ 資料輸入
PUBLIC FUNCTION asfp301_02(--)
)
{<point name="input.get_var"/>}

{<point name="input.define"/>}

{<point name="input.pre_input"/>}

{<point name="input.action"/>}

{<point name="input.before_input"/>}

{<point name="input.after_input"/>}

{<point name="input.more_input"/>}

{<point name="input.before_close"/>}

{<point name="input.post_input"/>}

END FUNCTION
]]>
</section>
  <section id="asfp301_02.other_dialog" ver="1" status="" src="s">
<![CDATA[{<point name="other.dialog"/>}
]]>
</section>
  <section id="asfp301_02.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
</add_points>