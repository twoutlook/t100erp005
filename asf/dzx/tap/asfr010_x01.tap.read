<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="asfr010_x01" std_prog="asfr010_x01" erpver="1.0" module="ASF" ver="1" env="s" zone="t10prd" booking="N" type="X" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="X" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.asfr010_x01_create_tmp" order="1" ver="1" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="function.asfr010_x01_tmp" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明：创建临时表
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者:20150603 By dujuan
# Modify.........:
################################################################################
PRIVATE FUNCTION asfr010_x01_tmp()
   DEFINE l_sql             STRING
   
   DEFINE sr_tmp RECORD 
      pmdt_t_pmdt006 LIKE pmdt_t.pmdt006, 
      pmdt006_desc1 LIKE type_t.chr30, 
      pmdt006_desc2 LIKE type_t.chr30, 
      pmdt_t_pmdt007 LIKE pmdt_t.pmdt007, 
      pmdt_t_pmdt019 LIKE pmdt_t.pmdt019, 
      pmdt_t_pmdt020 LIKE pmdt_t.pmdt020, 
      sum_pmdt020 LIKE type_t.num20_6, 
      sfaadocno LIKE sfaa_t.sfaadocno, 
      sfaa010 LIKE sfaa_t.sfaa010, 
      sfaa010_desc1 LIKE type_t.chr30, 
      sfaa010_desc2 LIKE type_t.chr30, 
      sfaa019 LIKE sfaa_t.sfaa019, 
      imae081_desc LIKE type_t.chr200, 
      sfba013 LIKE sfba_t.sfba013, 
      sfba014 LIKE sfba_t.sfba014, 
      qty1 LIKE type_t.num20_6, 
      qty2 LIKE type_t.num20_6, 
      sfbaseq1 LIKE sfba_t.sfbaseq1, 
      sfbaseq LIKE sfba_t.sfbaseq
   END RECORD
   
   DROP TABLE asfr010_1_tmp
   
   CREATE TEMP TABLE asfr010_1_tmp(
      pmdt_t_pmdt006     LIKE pmdt_t.pmdt006, 
      pmdt006_desc1      LIKE type_t.chr30, 
      pmdt006_desc2      LIKE type_t.chr30, 
      pmdt_t_pmdt007     LIKE pmdt_t.pmdt007, 
      pmdt_t_pmdt019     LIKE pmdt_t.pmdt019, 
      pmdt_t_pmdt020     LIKE pmdt_t.pmdt020, 
      sum_pmdt020        LIKE type_t.num20_6, 
      sfaadocno          LIKE sfaa_t.sfaadocno, 
      sfaa010            LIKE sfaa_t.sfaa010, 
      sfaa010_desc1      LIKE type_t.chr30, 
      sfaa010_desc2      LIKE type_t.chr30, 
      sfaa019            LIKE sfaa_t.sfaa019, 
      imae081_desc       LIKE type_t.chr200, 
      sfba013            LIKE sfba_t.sfba013, 
      sfba014            LIKE sfba_t.sfba014, 
      qty1               LIKE type_t.num20_6, 
      qty2               LIKE type_t.num20_6, 
      sfbaseq1           LIKE sfba_t.sfbaseq1, 
      sfbaseq            LIKE sfba_t.sfbaseq
   )

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'create asfr010_1_tmp'
      LET g_errparam.popup = TRUE
      CALL cl_err()
   END IF

   PREPARE asfr010_x01_pt_tmp FROM g_sql_tmp
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   DECLARE asfr010_x01_cst_tmp CURSOR FOR asfr010_x01_pt_tmp
   FOREACH asfr010_x01_cst_tmp INTO sr_tmp.*
      LET sr_tmp.qty1 = 0
      LET sr_tmp.qty2 = 0
      LET sr_tmp.sum_pmdt020 = 0
      LET sr_tmp.pmdt006_desc1 = ' '
      LET sr_tmp.pmdt006_desc2 = ' ' 
      LET sr_tmp.sfaa010_desc1 = ' '   
      LET sr_tmp.sfaa010_desc2 = ' '     
      LET sr_tmp.imae081_desc = ' '      
      
      INSERT INTO asfr010_1_tmp VALUES (sr_tmp.*)
      IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'INSERT asfr010_1_tmp'
      LET g_errparam.popup = TRUE
      CALL cl_err()
   END IF
   END FOREACH
  
END FUNCTION]]>
  </point>
  <point name="function.asfr010_x01_sum_pmdt020" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明计算收货数量
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者:20150603 By dujuan
# Modify.........:
################################################################################
PRIVATE FUNCTION asfr010_x01_sum_pmdt020(p_pmdt006,p_pmdt007,p_rate)
   DEFINE p_pmdt006           LIKE  pmdt_t.pmdt006
   DEFINE p_pmdt007           LIKE  pmdt_t.pmdt007
   DEFINE p_rate              LIKE  inaj_t.inaj014
   DEFINE l_sql               STRING
   DEFINE l_pmdt020           LIKE  pmdt_t.pmdt020
   
   LET g_sum_pmt020 = 0
   
   IF p_pmdt007 IS NULL THEN
      LET l_sql = " SELECT pmdt_t_pmdt020 FROM asfr010_1_tmp ",
               "  WHERE pmdt_t_pmdt006 = '",p_pmdt006,"' ",
               "    AND pmdt_t_pmdt007 IS NULL "
   ELSE
      LET l_sql = " SELECT pmdt_t_pmdt020 FROM asfr010_1_tmp ",
               "  WHERE pmdt_t_pmdt006 = '",p_pmdt006,"' ",
               "    AND pmdt_t_pmdt007 = '",p_pmdt007,"' "
   END IF
   PREPARE asfr010_x01_pt FROM l_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   DECLARE asfr010_x01_cst CURSOR FOR asfr010_x01_pt
   FOREACH asfr010_x01_cst INTO l_pmdt020
      LET l_pmdt020 = l_pmdt020 * p_rate
      LET g_sum_pmt020 = g_sum_pmt020 + l_pmdt020
   END FOREACH
   
   RETURN g_sum_pmt020 
   
END FUNCTION]]>
  </point>
  <point name="function.asfr010_x01_sum2_pmdt020" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION asfr010_x01_sum2_pmdt020(p_pmdt006,p_pmdt007,p_rate)
   DEFINE p_pmdt006           LIKE  pmdt_t.pmdt006
   DEFINE p_pmdt007           LIKE  pmdt_t.pmdt007
   DEFINE p_rate              LIKE  inaj_t.inaj014
   DEFINE l_sql               STRING
   DEFINE l_pmdt020           LIKE  pmdt_t.pmdt020
   DEFINE l_sr RECORD 
      pmdt_t_pmdt006 LIKE pmdt_t.pmdt006, 
      pmdt006_desc1 LIKE type_t.chr30, 
      pmdt006_desc2 LIKE type_t.chr30, 
      pmdt_t_pmdt007 LIKE pmdt_t.pmdt007, 
      pmdt_t_pmdt019 LIKE pmdt_t.pmdt019, 
      pmdt_t_pmdt020 LIKE pmdt_t.pmdt020, 
      sum_pmdt020 LIKE type_t.num20_6, 
      sfaadocno LIKE sfaa_t.sfaadocno, 
      sfaa010 LIKE sfaa_t.sfaa010, 
      sfaa010_desc1 LIKE type_t.chr30, 
      sfaa010_desc2 LIKE type_t.chr30, 
      sfaa019 LIKE sfaa_t.sfaa019, 
      imae081_desc LIKE type_t.chr200, 
      sfba013 LIKE sfba_t.sfba013, 
      sfba014 LIKE sfba_t.sfba014, 
      qty1 LIKE type_t.num20_6, 
      qty2 LIKE type_t.num20_6, 
      sfbaseq1 LIKE sfba_t.sfbaseq1,
      sfbaseq LIKE sfba_t.sfbaseq
   END RECORD
   DEFINE l_sfba015      LIKE sfba_t.sfba015
   DEFINE l_sfba016      LIKE sfba_t.sfba016
   
   LET g_sum_pmt020 = 0
   
   IF p_pmdt007 IS NULL THEN
      LET l_sql = " SELECT pmdt_t_pmdt006,pmdt006_desc1,pmdt006_desc2,pmdt_t_pmdt007,pmdt_t_pmdt019,",
                  "        pmdt_t_pmdt020,sum_pmdt020,sfaadocno,sfaa010,sfaa010_desc1,sfaa010_desc2,sfaa019,",
                  "        imae081_desc,sfba013,sfba014,qty1,qty2,sfbaseq1,sfbaseq ", 
                  "   FROM asfr010_1_tmp ",
                  "  WHERE pmdt_t_pmdt006 = '",p_pmdt006,"' ",
                  "    AND pmdt_t_pmdt007 IS NULL "
   ELSE
      LET l_sql = " SELECT pmdt_t_pmdt006,pmdt006_desc1,pmdt006_desc2,pmdt_t_pmdt007,pmdt_t_pmdt019,",
                  "        pmdt_t_pmdt020,sum_pmdt020,sfaadocno,sfaa010,sfaa010_desc1,sfaa010_desc2,sfaa019,",
                  "        imae081_desc,sfba013,sfba014,qty1,qty2,sfbaseq1,sfbaseq ", 
                  "  FROM asfr010_1_tmp ",
                  "  WHERE pmdt_t_pmdt006 = '",p_pmdt006,"' ",
                  "    AND pmdt_t_pmdt007 = '",p_pmdt007,"' "
   END IF
   PREPARE asfr010_x01_pt1 FROM l_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   DECLARE asfr010_x01_cst1 CURSOR FOR asfr010_x01_pt1
   FOREACH asfr010_x01_cst1 INTO l_sr.*
      SELECT sfba015,sfba016 INTO l_sfba015,l_sfba016 #sfba015:委外代买数量;sfba016:已发数量
       FROM sfba_t
      WHERE sfbaent = g_enterprise
        AND sfbadocno = l_sr.sfaadocno
        AND sfbaseq = l_sr.sfbaseq
        AND sfbaseq1 = l_sr.sfbaseq1
                  
      LET l_sr.qty1 = l_sr.sfba013 - l_sfba015 - l_sfba016
      
      IF  l_sr.qty1 > 0 THEN           
         LET l_pmdt020 = l_sr.pmdt_t_pmdt020 * p_rate
         LET g_sum_pmt020 = g_sum_pmt020 + l_pmdt020
      END IF
   END FOREACH

   RETURN g_sum_pmt020 
END FUNCTION]]>
  </point>
  <point name="function.asfr010_x01_tem1" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION asfr010_x01_tem1()
   DEFINE l_sql             STRING
   
   DEFINE sr_tmp1 RECORD 
      pmdt_t_pmdt006 LIKE pmdt_t.pmdt006, 
      pmdt006_desc1 LIKE type_t.chr30, 
      pmdt006_desc2 LIKE type_t.chr30, 
      pmdt_t_pmdt007 LIKE pmdt_t.pmdt007, 
      pmdt_t_pmdt019 LIKE pmdt_t.pmdt019, 
      pmdt_t_pmdt020 LIKE pmdt_t.pmdt020, 
      sum_pmdt020 LIKE type_t.num20_6, 
      sfaadocno LIKE sfaa_t.sfaadocno, 
      sfaa010 LIKE sfaa_t.sfaa010, 
      sfaa010_desc1 LIKE type_t.chr30, 
      sfaa010_desc2 LIKE type_t.chr30, 
      sfaa019 LIKE sfaa_t.sfaa019, 
      imae081_desc LIKE type_t.chr200, 
      sfba013 LIKE sfba_t.sfba013, 
      sfba014 LIKE sfba_t.sfba014, 
      qty1 LIKE type_t.num20_6, 
      qty2 LIKE type_t.num20_6, 
      sfbaseq1 LIKE sfba_t.sfbaseq1, 
      sfbaseq LIKE sfba_t.sfbaseq
   END RECORD
   
   DROP TABLE asfr010_1_tmp1
   
   CREATE TEMP TABLE asfr010_1_tmp1(
      pmdt_t_pmdt006     LIKE pmdt_t.pmdt006, 
      pmdt006_desc1      LIKE type_t.chr30, 
      pmdt006_desc2      LIKE type_t.chr30, 
      pmdt_t_pmdt007     LIKE pmdt_t.pmdt007, 
      pmdt_t_pmdt019     LIKE pmdt_t.pmdt019, 
      pmdt_t_pmdt020     LIKE pmdt_t.pmdt020, 
      sum_pmdt020        LIKE type_t.num20_6, 
      sfaadocno          LIKE sfaa_t.sfaadocno, 
      sfaa010            LIKE sfaa_t.sfaa010, 
      sfaa010_desc1      LIKE type_t.chr30, 
      sfaa010_desc2      LIKE type_t.chr30, 
      sfaa019            LIKE sfaa_t.sfaa019, 
      imae081_desc       LIKE type_t.chr200, 
      sfba013            LIKE sfba_t.sfba013, 
      sfba014            LIKE sfba_t.sfba014, 
      qty1               LIKE type_t.num20_6, 
      qty2               LIKE type_t.num20_6, 
      sfbaseq1           LIKE sfba_t.sfbaseq1, 
      sfbaseq            LIKE sfba_t.sfbaseq
   )

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'create asfr010_1_tmp1'
      LET g_errparam.popup = TRUE
      CALL cl_err()
   END IF

   PREPARE asfr010_x01_pt_tmp1 FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   DECLARE asfr010_x01_cst_tmp1 CURSOR FOR asfr010_x01_pt_tmp1
   FOREACH asfr010_x01_cst_tmp1 INTO sr_tmp1.*
      LET sr_tmp1.qty1 = 0
      LET sr_tmp1.qty2 = 0
      LET sr_tmp1.sum_pmdt020 = 0
      LET sr_tmp1.pmdt006_desc1 = ' '
      LET sr_tmp1.pmdt006_desc2 = ' ' 
      LET sr_tmp1.sfaa010_desc1 = ' '   
      LET sr_tmp1.sfaa010_desc2 = ' '     
      LET sr_tmp1.imae081_desc = ' '      
      
      INSERT INTO asfr010_1_tmp1 VALUES (sr_tmp1.*)
      IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'INSERT asfr010_1_tmp1'
      LET g_errparam.popup = TRUE
      CALL cl_err()
   END IF
   END FOREACH
END FUNCTION]]>
  </point>
  <point name="component.arg.prep" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE  g_dtx1         LIKE type_t.dat         #需求日期str 
DEFINE  g_dtx2         LIKE type_t.dat         #需求日期end 
DEFINE  g_dts1         LIKE type_t.dat         #收料日期str 
DEFINE  g_dts2         LIKE type_t.dat         #收料日期end
DEFINE  g_sum_pmt020   LIKE type_t.num20_6     #收货数量
DEFINE  g_sql_tmp      STRING]]>
  </point>
  <point name="ins_data.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[    DROP TABLE asfr010_1_tmp]]>
  </point>
  <point name="ins_data.after.save" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[       END IF
       END IF
       
       IF tm.flag2 = 'Y' THEN
         IF sr.qty1 > 0 THEN #未发数量等于0就不需要显示
#            IF (l_pmdt006 <> sr.pmdt_t_pmdt006 OR l_pmdt007 <> sr.pmdt_t_pmdt007) OR (l_pmdt006 IS NULL OR l_pmdt007 IS null)  THEN
#                  CALL asfr010_x01_sum_pmdt020(sr.pmdt_t_pmdt006,sr.pmdt_t_pmdt007,l_rate) RETURNING l_sum_pmdt020
#                  LET l_pmdt006 = sr.pmdt_t_pmdt006 
#                  LET l_pmdt007 = sr.pmdt_t_pmdt007
#            END IF
#            LET sr.sum_pmdt020 = l_sum_pmdt020
#          IF (l_pmdt006 <> sr.pmdt_t_pmdt006 OR l_pmdt007 <> sr.pmdt_t_pmdt007) OR (l_pmdt006 IS NULL OR l_pmdt007 IS null)  THEN
#               CALL asfr010_x01_sum2_pmdt020(sr.pmdt_t_pmdt006,sr.pmdt_t_pmdt007,l_rate) RETURNING l_sum_pmdt020
#               LET l_pmdt006 = sr.pmdt_t_pmdt006 
#               LET l_pmdt007 = sr.pmdt_t_pmdt007
#          END IF
#          LET sr.sum_pmdt020 = l_sum_pmdt020
          LET sr.sum_pmdt020 = sr.pmdt_t_pmdt020

            IF sr.qty2 > 0 THEN
               EXECUTE insert_prep USING sr.pmdt_t_pmdt006,sr.pmdt006_desc1,sr.pmdt006_desc2,sr.pmdt_t_pmdt007,sr.pmdt_t_pmdt019,sr.pmdt_t_pmdt020,sr.sum_pmdt020,sr.sfaadocno,sr.sfaa010,sr.sfaa010_desc1,sr.sfaa010_desc2,sr.sfaa019,sr.imae081_desc,sr.sfba013,sr.sfba014,sr.qty1,sr.qty2,sr.sfbaseq1,sr.sfbaseq
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = "asfr010_x01_execute"
                  LET g_errparam.code   = SQLCA.sqlcode
                  LET g_errparam.popup  = FALSE
                  CALL cl_err()       
                  LET g_rep_success = 'N'
                  EXIT FOREACH
               END IF
            END IF
         END IF
       END IF]]>
  </point>
  <point name="ins_data.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[    CALL asfr010_x01_tmp()
    LET l_sum_pmdt020 = 0]]>
  </point>
  <point name="ins_data.before.save" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[       IF tm.flag2 = 'N' THEN
       IF sr.qty1 > 0 THEN #未发数量等于0就不需要显示
#         IF (l_pmdt006 <> sr.pmdt_t_pmdt006 OR l_pmdt007 <> sr.pmdt_t_pmdt007) OR (l_pmdt006 IS NULL OR l_pmdt007 IS null)  THEN
#               CALL asfr010_x01_sum_pmdt020(sr.pmdt_t_pmdt006,sr.pmdt_t_pmdt007,l_rate) RETURNING l_sum_pmdt020
#               LET l_pmdt006 = sr.pmdt_t_pmdt006 
#               LET l_pmdt007 = sr.pmdt_t_pmdt007
#            END IF
#         
#         LET sr.sum_pmdt020 = l_sum_pmdt020
#          IF (l_pmdt006 <> sr.pmdt_t_pmdt006 OR l_pmdt007 <> sr.pmdt_t_pmdt007) OR (l_pmdt006 IS NULL OR l_pmdt007 IS null)  THEN
#               CALL asfr010_x01_sum2_pmdt020(sr.pmdt_t_pmdt006,sr.pmdt_t_pmdt007,l_rate) RETURNING l_sum_pmdt020
#               LET l_pmdt006 = sr.pmdt_t_pmdt006 
#               LET l_pmdt007 = sr.pmdt_t_pmdt007
#          END IF
#          LET sr.sum_pmdt020 = l_sum_pmdt020
           LET sr.sum_pmdt020 = sr.pmdt_t_pmdt020]]>
  </point>
  <point name="ins_data.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE l_sfba015      LIKE sfba_t.sfba015
DEFINE l_sfba016      LIKE sfba_t.sfba016
DEFINE l_success      LIKE type_t.num5
DEFINE l_rate         LIKE inaj_t.inaj014
DEFINE l_success2     LIKE type_t.num5
DEFINE l_rate2        LIKE inaj_t.inaj014
DEFINE l_success3     LIKE type_t.num5
DEFINE l_sum_pmdt020  LIKE type_t.num20_6
DEFINE l_pmdt006      LIKE pmdt_t.pmdt006
DEFINE l_pmdt007      LIKE pmdt_t.pmdt007
]]>
  </point>
  <point name="ins_data.foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[       #生产料号sfaa010  
       SELECT imaal003,imaal004 INTO sr.sfaa010_desc1,sr.sfaa010_desc2
       FROM imaal_t
       WHERE imaalent = g_enterprise
       AND imaal001 = sr.sfaa010
       AND imaal002 = g_dlang
       #料件编号pmdt006 
       SELECT imaal003,imaal004 INTO sr.pmdt006_desc1,sr.pmdt006_desc2
       FROM imaal_t
       WHERE imaalent = g_enterprise
       AND imaal001 = sr.pmdt_t_pmdt006
       AND imaal002 = g_dlang
       
       SELECT sfba015,sfba016 INTO l_sfba015,l_sfba016 #sfba015:委外代买数量;sfba016:已发数量
       FROM sfba_t
       WHERE sfbaent = g_enterprise
       AND sfbadocno = sr.sfaadocno
       AND sfbaseq = sr.sfbaseq
       AND sfbaseq1 = sr.sfbaseq1
       
       IF cl_null(sr.imae081_desc) THEN #发料单位为空的时候取基础单位
         SELECT imaa006 INTO sr.imae081_desc
         FROM imaa_t
         WHERE imaaent = g_enterprise
         AND imaa001 = sr.pmdt_t_pmdt006
       END IF
       #收料数量转换率
       CALL s_aimi190_get_convert(sr.pmdt_t_pmdt006,sr.pmdt_t_pmdt019,sr.imae081_desc) RETURNING l_success,l_rate
       #应发数量转换率
       CALL s_aimi190_get_convert(sr.pmdt_t_pmdt006,sr.sfba014,sr.imae081_desc) RETURNING l_success2,l_rate2
       
       LET sr.pmdt_t_pmdt020 = sr.pmdt_t_pmdt020 * l_rate
       
       LET sr.sfba013 = sr.sfba013 * l_rate2
       LET l_sfba015 = l_sfba015 * l_rate2
       LET l_sfba016 = l_sfba016 * l_rate2
       
       LET sr.qty1 = sr.sfba013 - l_sfba015 - l_sfba016
       CALL s_asft300_07(sr.sfaadocno,sr.sfbaseq,sr.sfbaseq1) RETURNING l_success3,sr.qty2
       IF cl_null(sr.qty1) THEN
         LET sr.qty1 = 0
       END IF
       IF cl_null(sr.qty2) THEN
         LET sr.qty2 = 0
       END IF]]>
  </point>
  <point name="rep_data.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="sel_prep.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_select1      STRING
DEFINE g_from1        STRING
DEFINE g_where1       STRING
DEFINE g_sql1       STRING]]>
  </point>
  <point name="sel_prep.g_from" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_select = " SELECT  pmdt006,NULL,NULL,pmdt007,pmdt019,sum(pmdt020) as pmdt020s,0,sfaadocno,sfaa010,NULL,NULL,sfaa019,",
                  " imae081,sfba013,sfba014,NULL,NULL,sfbaseq1,sfbaseq "]]>
  </point>
  <point name="sel_prep.g_order" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_where = " WHERE sfaadocno = sfbadocno ",
                 " AND sfaaent = ",g_enterprise,
                 " AND pmdsent = pmdtent ",
                 " AND pmdsdocno = pmdtdocno ",
                 " AND pmdsstus = 'Y' ",
                 " AND pmdt006 = sfba006 ",
                 " AND pmdtent = imaeent ",
                 " AND pmdt006 = imae001 ",
                 " AND sfaasite = imaesite",
                 " AND (pmds000 = '1' OR pmds000 = '2') ",
                 " AND sfaasite ='",g_site,"' ",
                 " AND pmdssite ='",g_site,"' ",
                 " AND ",tm.wc CLIPPED
                 
   IF NOT cl_null(tm.dtx1) THEN
      LET  g_dtx1 = tm.dtx1 
#      LET g_where = g_where," AND sfaa019 >= ",g_dtx1  
      LET g_where = g_where," AND sfaa019 >= to_date('",tm.dtx1,"','yyyy/mm/dd') "
   END IF
   IF NOT cl_null(tm.dtx2) THEN
      LET  g_dtx2 = tm.dtx2
#      LET g_where = g_where," AND sfaa019 <= ",g_dtx2
      LET g_where = g_where," AND sfaa019 <= to_date('",tm.dtx2,"','yyyy/mm/dd') "
   END IF
   IF NOT cl_null(tm.dts1) THEN
      LET  g_dts1 = tm.dts1
#      LET g_where = g_where," AND pmdsdocdt >= ",g_dts1
      LET g_where = g_where," AND pmdsdocdt >= to_date('",tm.dts1,"','yyyy/mm/dd') "
   END IF
   IF NOT cl_null(tm.dts2) THEN
      LET  g_dts2 = tm.dts2
#      LET g_where = g_where," AND pmdsdocdt >= ",g_dts2
      LET g_where = g_where," AND pmdsdocdt <= to_date('",tm.dts2,"','yyyy/mm/dd') "
   END IF
   
   LET g_select1 = " SELECT  pmdt006,NULL,NULL,pmdt007,pmdt019,sum(pmdt020) as pmdt020s,0,sfaadocno,sfaa010,NULL,NULL,sfaa019,",
                  " imae081,sfba013,sfba014,NULL,NULL,sfbaseq1,sfbaseq "
   LET g_from1 = " FROM pmds_t,pmdt_t,sfaa_t,sfba_t,imae_t "
   LET g_where1 = " WHERE sfaadocno = sfbadocno ",
                 " AND sfaaent = ",g_enterprise,
                 " AND pmdsent = pmdtent ",
                 " AND pmdsdocno = pmdtdocno ",
                 " AND (pmdsstus = 'Y' OR pmdsstus = 'S')",
                 " AND pmdt006 = sfba006 ",
                 " AND pmdtent = imaeent ",
                 " AND pmdt006 = imae001 ",
                 " AND sfaasite = imaesite",
                 " AND (pmds000 = '3' OR pmds000 = '4') ",
                 " AND sfaasite ='",g_site,"' ",
                 " AND pmdssite ='",g_site,"' ",
                 " AND ",tm.wc CLIPPED
                 
   IF NOT cl_null(tm.dtx1) THEN
      LET g_where1 = g_where1," AND sfaa019 >= to_date('",tm.dtx1,"','yyyy/mm/dd') "
   END IF
   IF NOT cl_null(tm.dtx2) THEN
      LET g_where1 = g_where1," AND sfaa019 <= to_date('",tm.dtx2,"','yyyy/mm/dd') "
   END IF
   IF NOT cl_null(tm.dts1) THEN
      LET g_where1 = g_where1," AND pmdsdocdt >= to_date('",tm.dts1,"','yyyy/mm/dd') "
   END IF
   IF NOT cl_null(tm.dts2) THEN
      LET g_where1 = g_where1," AND pmdsdocdt <= to_date('",tm.dts2,"','yyyy/mm/dd') "
   END IF
   LET g_where1 = g_where1 ,cl_sql_add_filter("sfaa_t") 
   LET g_sql1 = g_select1 CLIPPED ," ",g_from1 CLIPPED ," ",g_where1 CLIPPED
   LET g_sql1 = cl_sql_add_mask(g_sql1)
   LET g_sql1 = g_sql1," group by sfaadocno,pmdt006,pmdt007,pmdt019,sfaadocno,sfaa010,sfaa019, imae081,sfba013,sfba014,sfbaseq1,sfbaseq ", 
               " ORDER BY pmdt006,pmdt007 "   ]]>
  </point>
  <point name="sel_prep.g_where" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_from = " FROM pmds_t,pmdt_t,sfaa_t,sfba_t,imae_t "]]>
  </point>
  <point name="sel_prep.sql.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_sql = g_sql," group by sfaadocno,pmdt006,pmdt007,pmdt019,sfaadocno,sfaa010,sfaa019, imae081,sfba013,sfba014,sfbaseq1,sfbaseq "
   LET g_sql = g_sql,"UNION ALL",g_sql1
   LET g_sql = " SELECT pmdt006,NULL,NULL,pmdt007,pmdt019,sum(pmdt020s),0,sfaadocno,sfaa010,NULL,NULL,sfaa019, imae081,sfba013,sfba014,NULL,NULL,sfbaseq1,sfbaseq ",
               " FROM (",g_sql,") ",
               " GROUP BY sfaadocno,pmdt006,pmdt007,pmdt019,sfaadocno,sfaa010,sfaa019, imae081,sfba013,sfba014,sfbaseq1,sfbaseq  ",
               " ORDER BY pmdt006,pmdt007 "
     
   LET g_sql_tmp = g_sql]]>
  </point>
  <section id="asfr010_x01.create_tmptable" ver="6" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION asfr010_x01_create_tmptable()
 
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "pmdt_t_pmdt006.pmdt_t.pmdt006,pmdt006_desc1.type_t.chr30,pmdt006_desc2.type_t.chr30,pmdt_t_pmdt007.pmdt_t.pmdt007,pmdt_t_pmdt019.pmdt_t.pmdt019,pmdt_t_pmdt020.pmdt_t.pmdt020,sum_pmdt020.type_t.num20_6,sfaadocno.sfaa_t.sfaadocno,sfaa010.sfaa_t.sfaa010,sfaa010_desc1.type_t.chr30,sfaa010_desc2.type_t.chr30,sfaa019.sfaa_t.sfaa019,imae081_desc.type_t.chr200,sfba013.sfba_t.sfba013,sfba014.sfba_t.sfba014,qty1.type_t.num20_6,qty2.type_t.num20_6,sfbaseq1.sfba_t.sfbaseq1,sfbaseq.sfba_t.sfbaseq" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION
]]>
  </section>
  <section id="asfr010_x01.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000016
#+ 
#+ Filename...: asfr010_x01
#+ Description: 收料工單對應欠料明細表
#+ Creator....: 05795(2015-06-01 11:24:43)
#+ Modifier...: 05795(2015-06-04 15:44:54) -SD/PR-
]]>
  </section>
  <section id="asfr010_x01.global" ver="4" status="" src="s" readonly="">
    <![CDATA[#報表 x01 樣板自動產生(Version:1)
 
IMPORT os
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #QBE 
       flag1 LIKE type_t.chr30,         #未发料需列印 
       flag2 LIKE type_t.chr30,         #未足套需列印 
       dtx1 LIKE type_t.chr500,         #需求日期str 
       dtx2 LIKE type_t.chr500,         #需求日期end 
       dts1 LIKE type_t.chr30,         #收料日期str 
       dts2 LIKE type_t.chr500          #收料日期end
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
 
#add-point:自定義環境變數(Global Variable)
{<point name="global.variable"/>}
#end add-point
]]>
  </section>
  <section id="asfr010_x01.ins_data" ver="6" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION asfr010_x01_ins_data()
DEFINE sr RECORD 
   pmdt_t_pmdt006 LIKE pmdt_t.pmdt006, 
   pmdt006_desc1 LIKE type_t.chr30, 
   pmdt006_desc2 LIKE type_t.chr30, 
   pmdt_t_pmdt007 LIKE pmdt_t.pmdt007, 
   pmdt_t_pmdt019 LIKE pmdt_t.pmdt019, 
   pmdt_t_pmdt020 LIKE pmdt_t.pmdt020, 
   sum_pmdt020 LIKE type_t.num20_6, 
   sfaadocno LIKE sfaa_t.sfaadocno, 
   sfaa010 LIKE sfaa_t.sfaa010, 
   sfaa010_desc1 LIKE type_t.chr30, 
   sfaa010_desc2 LIKE type_t.chr30, 
   sfaa019 LIKE sfaa_t.sfaa019, 
   imae081_desc LIKE type_t.chr200, 
   sfba013 LIKE sfba_t.sfba013, 
   sfba014 LIKE sfba_t.sfba014, 
   qty1 LIKE type_t.num20_6, 
   qty2 LIKE type_t.num20_6, 
   sfbaseq1 LIKE sfba_t.sfbaseq1, 
   sfbaseq LIKE sfba_t.sfbaseq
 END RECORD
#add-point:ins_data段define
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH asfr010_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.pmdt_t_pmdt006,sr.pmdt006_desc1,sr.pmdt006_desc2,sr.pmdt_t_pmdt007,sr.pmdt_t_pmdt019,sr.pmdt_t_pmdt020,sr.sum_pmdt020,sr.sfaadocno,sr.sfaa010,sr.sfaa010_desc1,sr.sfaa010_desc2,sr.sfaa019,sr.imae081_desc,sr.sfba013,sr.sfba014,sr.qty1,sr.qty2,sr.sfbaseq1,sr.sfbaseq
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "asfr010_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="asfr010_x01.ins_prep" ver="4" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION asfr010_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段
         {<point name="insert_prep"/>}
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION
]]>
  </section>
  <section id="asfr010_x01.main" ver="4" status="" src="s" readonly="">
    <![CDATA[PUBLIC FUNCTION asfr010_x01(p_arg1,p_arg2,p_arg3,p_arg4,p_arg5,p_arg6,p_arg7)
DEFINE  p_arg1 STRING                  #tm.wc  QBE 
DEFINE  p_arg2 LIKE type_t.chr30         #tm.flag1  未发料需列印 
DEFINE  p_arg3 LIKE type_t.chr30         #tm.flag2  未足套需列印 
DEFINE  p_arg4 LIKE type_t.chr500         #tm.dtx1  需求日期str 
DEFINE  p_arg5 LIKE type_t.chr500         #tm.dtx2  需求日期end 
DEFINE  p_arg6 LIKE type_t.chr30         #tm.dts1  收料日期str 
DEFINE  p_arg7 LIKE type_t.chr500         #tm.dts2  收料日期end
#add-point:init段define
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.flag1 = p_arg2
   LET tm.flag2 = p_arg3
   LET tm.dtx1 = p_arg4
   LET tm.dtx2 = p_arg5
   LET tm.dts1 = p_arg6
   LET tm.dts2 = p_arg7
 
   #add-point:報表元件參數準備
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "asfr010_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL asfr010_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL asfr010_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL asfr010_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL asfr010_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL asfr010_x01_rep_data()
 
END FUNCTION
]]>
  </section>
  <section id="asfr010_x01.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="asfr010_x01.rep_data" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION asfr010_x01_rep_data()
#add-point:rep_data.define
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION
]]>
  </section>
  <section id="asfr010_x01.sel_prep" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION asfr010_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT pmdt_t.pmdt006,NULL,NULL,pmdt_t.pmdt007,pmdt_t.pmdt019,pmdt_t.pmdt020,NULL, 
       sfaadocno,sfaa010,NULL,NULL,sfaa019,NULL,sfba013,sfba014,NULL,NULL,sfbaseq1,sfbaseq"
 
   #add-point:sel_prep g_from
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM sfaa_t,sfba_t,sfdb_t,pmdt_t"
 
   #add-point:sel_prep g_where
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("sfaa_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE asfr010_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE asfr010_x01_curs CURSOR FOR asfr010_x01_prepare
 
END FUNCTION
]]>
  </section>
</add_points>
