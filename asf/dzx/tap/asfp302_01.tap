<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="asfp302_01" std_prog="asfp302_01" erpver="1.0" module="ASF" ver="2" env="s" zone="t10dev" booking="Y" type="S" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.asfp302_01_b_fill" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asfp302_01_b_fill()
DEFINE l_qty    LIKE sfcb_t.sfcb028  #剩余拆分量
DEFINE l_qtys   LIKE sfcb_t.sfcb028  #累计拆分数量

   CALL g_sfcb_d.clear()
   #INITIALIZE g_sfca_m.* TO NULL
   
   LET l_ac   = 0
   LET l_qtys = 0
   WHILE TRUE
      LET l_ac = l_ac + 1
      #项次
      LET g_sfcb_d[l_ac].ln = l_ac
      
      #拆分数量
      IF l_ac = g_sfca_m.split_lot THEN
         #=剩余未拆分的数量=拆分数量-上一行的累计拆分数
         IF l_ac = 1 THEN
            LET g_sfcb_d[l_ac].qty = g_sfca_m.split_qty
         ELSE
            LET g_sfcb_d[l_ac].qty = g_sfca_m.split_qty - g_sfcb_d[l_ac-1].qtys
         END IF
      ELSE
         #=拆分数量/拆分批量
         LET g_sfcb_d[l_ac].qty = g_sfca_m.split_qty / g_sfca_m.split_lot
      END IF
  
      #累计拆分数量
      LET l_qtys = l_qtys + g_sfcb_d[l_ac].qty
      LET g_sfcb_d[l_ac].qtys = l_qtys
      
      IF l_ac = g_sfca_m.split_lot THEN
         EXIT WHILE
      END IF
   END WHILE
   
END FUNCTION]]>
  </point>
  <point name="function.asfp302_01_refresh_qtys" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#刷新累计拆分数量,同时返回最后的累计拆分数量
PRIVATE FUNCTION asfp302_01_refresh_qtys()
DEFINE r_qtys LIKE sfcb_t.sfcb028
DEFINE l_i    LIKE type_t.num5
DEFINE l_qtys LIKE sfcb_t.sfcb028

   LET l_qtys = 0
   FOR l_i = 1 TO g_rec_b
       LET l_qtys = l_qtys + g_sfcb_d[l_i].qty
       LET g_sfcb_d[l_i].qtys = l_qtys
   END FOR
   
   LET r_qtys = g_sfcb_d[g_rec_b].qtys
   RETURN r_qtys
END FUNCTION]]>
  </point>
  <point name="function.asfp302_01_split" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#执行拆分
PRIVATE FUNCTION asfp302_01_split()
DEFINE r_success  LIKE type_t.num5
DEFINE l_sfce     RECORD LIKE sfce_t.*
DEFINE l_sfcf     RECORD LIKE sfcf_t.*
DEFINE l_cnt      LIKE type_t.num5
DEFINE l_sfca     RECORD LIKE sfca_t.*
DEFINE l_sfcb     RECORD LIKE sfcb_t.*
DEFINE l_sfcb053  LIKE sfcb_t.sfcb053
DEFINE l_sfcb054  LIKE sfcb_t.sfcb054
DEFINE l_sfca003  LIKE sfca_t.sfca003
DEFINE l_sql      STRING

   LET r_success = TRUE
   
   IF NOT cl_ask_confirm('asf-00265') THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #--更新被拆分RunCard对应制程项次的拆分转出数量：拆分转出数量=asfp302_1单头拆分数量
   UPDATE sfcb_t SET sfcb038 = sfcb038 + g_sfca_m.split_qty,   #分割转出数
                     sfcb050 = sfcb050 - g_sfca_m.split_qty    #在製數
    WHERE sfcbent  = g_enterprise
      AND sfcbdocno= g_sfca_m.sfcbdocno  #工单
      AND sfcb001  = g_sfca_m.sfcb001    #RUN CARD
      AND sfcb003  = g_sfca_m.sfcb003    #作业
      AND sfcb004  = g_sfca_m.sfcb004    #作业序
   IF SQLCA.sqlcode THEN
      CALL cl_err('upd sfcb_t',SQLCA.sqlcode,1)
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #制程拆分传出数量需折算成成品的数量，先取出换算关系
   SELECT sfcb053,sfcb054 INTO l_sfcb053,l_sfcb054
     FROM sfcb_t
    WHERE sfcbent  = g_enterprise
      AND sfcbdocno= g_sfca_m.sfcbdocno  #工单
      AND sfcb001  = g_sfca_m.sfcb001    #RUN CARD
      AND sfcb003  = g_sfca_m.sfcb003    #作业
      AND sfcb004  = g_sfca_m.sfcb004    #作业序
   IF SQLCA.sqlcode THEN
      CALL cl_err('sel sfcb',SQLCA.sqlcode,1)
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #--记录RunCard合并记录文件sfce_t\sfcf_t
   INITIALIZE l_sfce.* TO NULL
   LET l_sfce.sfceent   = g_enterprise       #企業代碼
   LET l_sfce.sfcesite  = g_site             #營運據點
   LET l_sfce.sfcedocno = g_sfca_m.sfcbdocno #工單單號
   LET l_sfce.sfcedocdt = cl_get_today()     #拆分日期
   #拆分版本
   SELECT MAX(sfce001) INTO l_sfce.sfce001 FROM sfce_t
    WHERE sfceent   = l_sfce.sfceent
      AND sfcedocno = l_sfce.sfcedocno
   IF cl_null(l_sfce.sfce001) THEN
      LET l_sfce.sfce001 = 0
   END IF
   LET l_sfce.sfce001   = l_sfce.sfce001 + 1 #拆分版本
   LET l_sfce.sfce002   = g_sfca_m.sfcb003   #作業編號
   LET l_sfce.sfce003   = g_sfca_m.sfcb004   #作業序
   LET l_sfce.sfce004   = g_sfca_m.sfcb001   #原RunCard編號
   LET l_sfce.sfce005   = g_sfca_m.split_qty #拆分轉出數量
   INSERT INTO sfce_t VALUES(l_sfce.*)
   IF SQLCA.sqlcode THEN
      CALL cl_err('ins sfce_t',SQLCA.sqlcode,1)
      LET r_success = FALSE
      RETURN r_success
   END IF

   LET l_cnt = 0
   FOR l_ac = 1 TO g_rec_b
       IF g_sfcb_d[l_ac].qty = 0 THEN
          CONTINUE FOR
       END IF
       
       #--按照asfp302_01的单身数据生成拆分后新的RunCard
       #  RunCard=已有最大RunCard+1
       #  拆分转入数量= 单身拆分数量
       #新runcard单头
       INITIALIZE l_sfca.* TO NULL
       LET l_sfca.sfcaent   = g_enterprise
       LET l_sfca.sfcasite  = g_site
       LET l_sfca.sfcadocno = g_sfca_m.sfcbdocno  #單號
       SELECT MAX(sfca001)+1 INTO l_sfca.sfca001    #RUN CARD編號
         FROM sfca_t
        WHERE sfcaent   = l_sfca.sfcaent
          AND sfcadocno = l_sfca.sfcadocno
       LET l_sfca.sfca002   = 0           #變更版本
       LET l_sfca003 = g_sfcb_d[l_ac].qty * l_sfcb054 / l_sfcb053
       LET l_sfca.sfca003   = l_sfca003   #生產數量
       LET l_sfca.sfca004   = 0           #完工數量
       LET l_sfca.sfca005   = '1'         #RUN CARD類型:1:一般
       INSERT INTO sfca_t VALUES(l_sfca.*)
       IF SQLCA.sqlcode THEN
          CALL cl_err('ins sfca_t',SQLCA.sqlcode,1)
          LET r_success = FALSE
          RETURN r_success
       END IF
  
       #新runcard单身
       LET l_sql = "INSERT INTO sfcb_t(sfcbent,sfcbsite,sfcbdocno,sfcb001,sfcb002, ",
                   "                   sfcb003,sfcb004,sfcb005,sfcb006,sfcb007, ",
                   "                   sfcb008,sfcb009,sfcb010,sfcb011,sfcb012, ",
                   "                   sfcb013,sfcb014,sfcb015,sfcb016,sfcb017, ",
                   "                   sfcb018,sfcb019,sfcb020,sfcb021,sfcb022, ",
                   "                   sfcb023,sfcb024,sfcb025,sfcb026,sfcb027, ",
                   "                   sfcb028,sfcb029,sfcb030,sfcb031,sfcb032, ",
                   "                   sfcb033,sfcb034,sfcb035,sfcb036,sfcb037, ",
                   "                   sfcb038,sfcb039,sfcb040,sfcb041,sfcb042, ",
                   "                   sfcb043,sfcb044,sfcb045,sfcb046,sfcb047, ",
                   "                   sfcb048,sfcb049,sfcb050,sfcb051,sfcb052, ",
                   "                   sfcb053,sfcb054,sfcb055) ",
                   " SELECT sfcbent,sfcbsite,sfcbdocno,",l_sfca.sfca001,",sfcb002, ",
                   "        sfcb003,sfcb004,sfcb005,sfcb006,sfcb007, ",
                   "        sfcb008,sfcb009,sfcb010,sfcb011,sfcb012, ",
                   "        sfcb013,sfcb014,sfcb015,sfcb016,sfcb017, ",
                   "        sfcb018,sfcb019,sfcb020,sfcb021,sfcb022, ",
                   "        sfcb023,sfcb024,sfcb025,sfcb026,sfcb027, ",
                   "        0,0,0,0,0, ",
                   "        0,0,0,0,0, ",
                   "        0,0,0,0,0, ",
                   "        0,sfcb044,sfcb045,0,0, ",
                   "        0,0,0,0,sfcb052, ",
                   "        sfcb053,sfcb054,sfcb055 ",
                   "   FROM sfcb_t ",
                   "  WHERE sfcbent  = ",g_enterprise,
                   "    AND sfcbdocno='",g_sfca_m.sfcbdocno,"' ",   #工单
                   "    AND sfcb001  = ",g_sfca_m.sfcb001     #RUN CARD
       PREPARE asfp302_01_split_p FROM l_sql
       EXECUTE asfp302_01_split_p
       IF SQLCA.sqlcode THEN
          CALL cl_err('ins sfcb_t',SQLCA.sqlcode,1)
          LET r_success = FALSE
          RETURN r_success
       END IF
      
       UPDATE sfcb_t SET sfcb031 = g_sfcb_d[l_ac].qty,   #分割转入数
                         sfcb050 = g_sfcb_d[l_ac].qty    #在製數
        WHERE sfcbent  = g_enterprise
          AND sfcbdocno= g_sfca_m.sfcbdocno  #工单
          AND sfcb001  = l_sfca.sfca001      #RUN CARD
          AND sfcb003  = g_sfca_m.sfcb003    #作业
          AND sfcb004  = g_sfca_m.sfcb004    #作业序
       IF SQLCA.sqlcode THEN
          CALL cl_err('upd sfcb_t',SQLCA.sqlcode,1)
          LET r_success = FALSE
          RETURN r_success
       END IF
      
      
       #--记录RunCard合并记录文件sfcf_t
       INITIALIZE l_sfcf.* TO NULL
       LET l_sfcf.sfcfent   = l_sfce.sfceent   #企業代碼
       LET l_sfcf.sfcfsite  = l_sfce.sfcesite  #營運據點
       LET l_sfcf.sfcfdocno = l_sfce.sfcedocno #工單單號
       LET l_cnt = l_cnt + 1
       LET l_sfcf.sfcfseq   = l_cnt            #項次 
       LET l_sfcf.sfcf001   = l_sfce.sfce001   #拆分版本
       LET l_sfcf.sfcf002   = l_sfce.sfce002   #作業編號
       LET l_sfcf.sfcf003   = l_sfce.sfce003   #作業序
       LET l_sfcf.sfcf004   = l_sfca.sfca001   #新RunCard編號
       LET l_sfcf.sfcf005   = g_sfcb_d[l_ac].qty #拆分轉入數量
       INSERT INTO sfcf_t VALUES(l_sfcf.*)
       IF SQLCA.sqlcode THEN
          CALL cl_err('ins sfcf_t',SQLCA.sqlcode,1)
          LET r_success = FALSE
          RETURN r_success
       END IF
   END FOR

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="construct.c.sfaa010" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfaa010  #顯示到畫面上
            NEXT FIELD sfaa010                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.sfcb003" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfcb003  #顯示到畫面上
            NEXT FIELD sfcb003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.sfcbdocno" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_sfcadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfcbdocno  #顯示到畫面上
            NEXT FIELD sfcbdocno                     #返回原欄位
    

]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_split_lot_t         LIKE type_t.num5  #拆分批量-旧值]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_sfca_m.sfcbdocno = p_sfcbdocno
   LET g_sfca_m.sfcb001   = p_sfcb001
   LET g_sfca_m.sfcb003   = p_sfcb003
   LET g_sfca_m.sfcb004   = p_sfcb004
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_sfca_m.sfcb003
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_sfca_m.sfcb003_desc = '', g_rtn_fields[1] , ''
   
   SELECT sfaa010 INTO g_sfca_m.sfaa010
     FROM sfaa_t
    WHERE sfaaent   = g_enterprise
      AND sfaadocno = g_sfca_m.sfcbdocno
      
   CALL s_desc_get_item_desc(g_detail_d[l_ac].b_sfaa010)
    RETURNING g_detail_d[l_ac].b_sfaa010_imaal003,g_detail_d[l_ac].b_sfaa010_imaal004
   
   LET g_sfca_m.wip_qty   = p_wip_qty
   LET g_sfca_m.split_qty = p_split_qty
   LET g_sfca_m.split_lot = 1
   
   DISPLAY BY NAME sfcbdocno,sfcb001,sfcb003,sfcb003_desc,sfcb004,sfaa010,imaal003,imaal004,wip_qty,split_qty,split_lot]]>
  </point>
  <point name="input.a.page1.qty" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfcb_d[l_ac].qty) AND g_sfcb_d[l_ac].qty < 0 THEN
               CALL cl_err('','agl-00041',1)
               NEXT FIELD CURRENT
            END IF
            CALL asfp302_01_refresh_qtys() RETURNING l_qtys  #刷新累计拆分数量,同时返回最后的累计拆分数量]]>
  </point>
  <point name="input.a.page1.sfcb002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfca_m.sfcadocno IS NOT NULL AND g_sfca_m.sfca001 IS NOT NULL AND g_sfcb_d[g_detail_idx].sfcb002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfca_m.sfcadocno != g_sfcadocno_t OR g_sfca_m.sfca001 != g_sfca001_t OR g_sfcb_d[g_detail_idx].sfcb002 != g_sfcb_d_t.sfcb002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfcb_t WHERE "||"sfcbent = '" ||g_enterprise|| "' AND "||"sfcbdocno = '"||g_sfca_m.sfcadocno ||"' AND "|| "sfcb001 = '"||g_sfca_m.sfca001 ||"' AND "|| "sfcb002 = '"||g_sfcb_d[g_detail_idx].sfcb002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.sfcb001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.sfcb003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[

]]>
  </point>
  <point name="input.a.sfcb004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.sfcbdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.split_lot" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_sfca_m.split_lot <= 0 THEN
               CALL cl_err('','axc-00025',1)
               NEXT FIELD CURRENT
            END IF
            
            #数值有发生变化，自动产生单身或刷新单身
            IF NOT cl_null(g_sfca_m.split_lot) AND (cl_null(g_split_lot_t) OR g_split_lot_t != g_sfca_m.split_lot) THEN
               CALL asfp302_01_b_fill()
            END IF
            
            LET g_split_lot_t = g_sfca_m.split_lot]]>
  </point>
  <point name="input.before_close" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF INT_FLAG THEN
      LET INT_FLAG = FALSE
      CLOSE WINDOW w_asfp302_01 
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   CALL asfp302_01_split()  #拆分
      RETURNING r_success
   IF NOT r_success THEN
      #CLOSE WINDOW w_asfp302_01 
      #RETURN r_success
      CONTINUE WHILE
   END IF
   
   EXIT WHILE
END WHILE]]>
  </point>
  <point name="input.body.action" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         BEFORE ROW
            LET l_ac = ARR_CURR()
            LET g_rec_b = g_sfcb_d.getLength()
            LET g_sfcb_d_t.* = g_sfcb_d[l_ac].*]]>
  </point>
  <point name="input.body.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #单身拆分数量合计 = 单头拆分数量
            CALL asfp302_01_refresh_qtys() RETURNING l_qtys  #刷新累计拆分数量,同时返回最后的累计拆分数量
            IF l_qtys != g_sfca_m.split_qty THEN
               CALL cl_err('','asf-00276',1)
               NEXT FIELD qty
            END IF]]>
  </point>
  <point name="input.body.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rec_b = g_sfcb_d.getLength()]]>
  </point>
  <point name="input.c.sfaa010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.c.sfcb003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE p_sfcbdocno   LIKE sfcb_t.sfcbdocno  #工单
   DEFINE p_sfcb001     LIKE sfcb_t.sfcb001    #RunCard
   DEFINE p_sfcb003     LIKE sfcb_t.sfcb003    #作业
   DEFINE p_sfcb004     LIKE sfcb_t.sfcb004    #作业序
   DEFINE p_wip_qty     LIKE sfcb_t.sfcb028    #WIP数量
   DEFINE p_split_qty   LIKE sfcb_t.sfcb028    #拆分数量
   DEFINE r_success     LIKE type_t.num5
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_qtys        LIKE sfcb_t.sfcb028    #累计拆分数量]]>
  </point>
  <point name="input.get_var" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   p_sfcbdocno,p_sfcb001,p_sfcb003,p_sfcb004,p_wip_qty,p_split_qty]]>
  </point>
  <point name="input.post_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   RETURN r_success]]>
  </point>
  <point name="input.pre_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET r_success = TRUE
   
   LET l_allow_insert = FALSE
   LET l_allow_delete = FALSE
   
   LET g_sfca_m.sfcbdocno = p_sfcbdocno
   LET g_sfca_m.sfcb001   = p_sfcb001
   LET g_sfca_m.sfcb003   = p_sfcb003
   LET g_sfca_m.sfcb004   = p_sfcb004
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_sfca_m.sfcb003
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_sfca_m.sfcb003_desc = '', g_rtn_fields[1] , ''
   
   SELECT sfaa010 INTO g_sfca_m.sfaa010
     FROM sfaa_t
    WHERE sfaaent   = g_enterprise
      AND sfaadocno = g_sfca_m.sfcbdocno
      
   CALL s_desc_get_item_desc(g_sfca_m.sfaa010)
    RETURNING g_sfca_m.imaal003,g_sfca_m.imaal004
   
   LET g_sfca_m.wip_qty   = p_wip_qty
   LET g_sfca_m.split_qty = p_split_qty
   LET g_sfca_m.split_lot = 1
   LET g_split_lot_t = g_sfca_m.split_lot
   
   CALL asfp302_01_b_fill()
   
   #DISPLAY BY NAME sfcbdocno,sfcb001,sfcb003,sfcb003_desc,sfcb004,sfaa010,imaal003,imaal004,wip_qty,split_qty,split_lot
   DISPLAY BY NAME g_sfca_m.sfcbdocno,g_sfca_m.sfcb001,g_sfca_m.sfcb003,g_sfca_m.sfcb003_desc,g_sfca_m.sfcb004,
                   g_sfca_m.sfaa010,g_sfca_m.imaal003, g_sfca_m.imaal004,g_sfca_m.wip_qty,g_sfca_m.split_qty,g_sfca_m.split_lot 
WHILE TRUE                   ]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE p_sfcbdocno   LIKE sfcb_t.sfcbdocno  #工单
   DEFINE p_sfcb001     LIKE sfcb_t.sfcb001    #RunCard
   DEFINE p_sfcb003     LIKE sfcb_t.sfcb003    #作业
   DEFINE p_sfcb004     LIKE sfcb_t.sfcb004    #作业序
   DEFINE p_wip_qty     LIKE sfcb_t.sfcb028    #WIP数量
   DEFINE p_split_qty   LIKE sfcb_t.sfcb028    #拆分数量]]>
  </point>
  <point name="main.get_var" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   p_sfcbdocno,p_sfcb001,p_sfcb003,p_sfcb004,p_wip_qty,p_split_qty]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfca_m.sfcb003
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfca_m.sfcb003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfca_m.sfcb003_desc
]]>
  </point>
  <section id="asfp302_01.b_fill" ver="2" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION asfp302_01_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_sfcb_d.clear()    #g_sfcb_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF asfp302_01_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE '','','' FROM sfcb_t",   
                  " INNER JOIN sfca_t ON sfcadocno = sfcbdocno ",
                  " AND sfca001 = sfcb001 ",
 
                  #"",
                  
                  "",
                  " WHERE"
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY sfcb_t.sfcb002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      PREPARE asfp302_01_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR asfp302_01_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_sfca_m.sfcadocno
                                               ,g_sfca_m.sfca001
 
                                               
      FOREACH b_fill_cs INTO g_sfcb_d[l_ac].ln,g_sfcb_d[l_ac].qty,g_sfcb_d[l_ac].qtys
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_sfcb_d.deleteElement(g_sfcb_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE asfp302_01_pb
 
   
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.b_fill2" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION asfp302_01_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL asfp302_01_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.browser_fill" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION asfp302_01_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_sfca_m.* TO NULL
   CALL g_sfcb_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "sfcadocno"
                        ,",sfca001"
 
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE sfcadocno ",
                                    ",sfca001 ",
 
                        " FROM sfca_t ",
                              " ",
                              " LEFT JOIN sfcb_t ON sfcbent = sfcaent AND sfcadocno = sfcbdocno AND sfca001 = sfcb001 ",
 
 
                              " ", 
                              " ", 
                       " WHERE sfcaent = '" ||g_enterprise|| "' AND sfcbent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("sfca_t")
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE sfcadocno ",
                                    ",sfca001 ",
 
                        " FROM sfca_t ", 
                              " ",
                              " ",
                        "WHERE sfcaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("sfca_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
   
   #LET g_page_action = ps_page_action          # Keep Action
   
   IF ps_page_action = "F" OR
      ps_page_action = "P" OR
      ps_page_action = "N" OR
      ps_page_action = "L" THEN
      LET g_page_action = ps_page_action
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - 1
         IF g_pagestart < 1 THEN
            LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + 1
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod 1) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - 1
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod 1) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - 1
         END WHILE
         
      WHEN '/'
         LET g_pagestart = g_jump
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = 1
         END IF
         
   END CASE
  
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
      #依照sfcadocno,sfca001 Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT '',sfcadocno,sfca001,DENSE_RANK() OVER(ORDER BY sfcadocno,sfca001 ", 
          g_order,") AS RANK ",
                        " FROM sfca_t ",
                              " ",
                              " LEFT JOIN sfcb_t ON sfcbent = sfcaent AND sfcadocno = sfcbdocno AND sfca001 = sfcb001 ",
 
 
                              " ",
                              " ",
                       " ",
                       " WHERE sfcaent = '" ||g_enterprise|| "' AND ",g_wc," AND ",g_wc2, cl_sql_add_filter("sfca_t")
   ELSE
      #單身無輸入資料
      LET l_sql_rank = "SELECT DISTINCT '',sfcadocno,sfca001,DENSE_RANK() OVER(ORDER BY sfcadocno,sfca001 ", 
          g_order,") AS RANK ",
                       " FROM sfca_t ",
                            "  ",
                            "  ",
                       " WHERE sfcaent = '" ||g_enterprise|| "' AND ", g_wc, cl_sql_add_filter("sfca_t")
   END IF
   
   #定義翻頁CURSOR
   LET g_sql= "SELECT '',sfcadocno,sfca001 FROM (",l_sql_rank,") WHERE ",
              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
               
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
               
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_sfcadocno,g_browser[g_cnt].b_sfca001 

      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.browser_search" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION asfp302_01_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY sfcadocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL asfp302_01_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.construct" ver="3" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION asfp302_01_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_sfca_m.* TO NULL
   CALL g_sfcb_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON sfcbdocno,sfaa010,wip_qty,sfcb001,imaal003,split_qty,sfcb003,sfcb004, 
          imaal004,split_lot
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         
            
         #一般欄位開窗相關處理    
         #---------------------------<  Master  >---------------------------
         #----<<sfcbdocno>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcbdocno
            #add-point:BEFORE FIELD sfcbdocno
            {<point name="construct.b.sfcbdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcbdocno
            
            #add-point:AFTER FIELD sfcbdocno
            {<point name="construct.a.sfcbdocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfcbdocno
         ON ACTION controlp INFIELD sfcbdocno
            #add-point:ON ACTION controlp INFIELD sfcbdocno
            {<point name="construct.c.sfcbdocno" />}
            #END add-point
 
         #----<<sfaa010>>----
         #Ctrlp:construct.c.sfaa010
         ON ACTION controlp INFIELD sfaa010
            #add-point:ON ACTION controlp INFIELD sfaa010
            {<point name="construct.c.sfaa010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa010
            #add-point:BEFORE FIELD sfaa010
            {<point name="construct.b.sfaa010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa010
            
            #add-point:AFTER FIELD sfaa010
            {<point name="construct.a.sfaa010" />}
            #END add-point
            
 
         #----<<wip_qty>>----
         #此段落由子樣板a01產生
         BEFORE FIELD wip_qty
            #add-point:BEFORE FIELD wip_qty
            {<point name="construct.b.wip_qty" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD wip_qty
            
            #add-point:AFTER FIELD wip_qty
            {<point name="construct.a.wip_qty" />}
            #END add-point
            
 
         #Ctrlp:construct.c.wip_qty
         ON ACTION controlp INFIELD wip_qty
            #add-point:ON ACTION controlp INFIELD wip_qty
            {<point name="construct.c.wip_qty" />}
            #END add-point
 
         #----<<sfcb001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb001
            #add-point:BEFORE FIELD sfcb001
            {<point name="construct.b.sfcb001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb001
            
            #add-point:AFTER FIELD sfcb001
            {<point name="construct.a.sfcb001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfcb001
         ON ACTION controlp INFIELD sfcb001
            #add-point:ON ACTION controlp INFIELD sfcb001
            {<point name="construct.c.sfcb001" />}
            #END add-point
 
         #----<<imaal003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imaal003
            #add-point:BEFORE FIELD imaal003
            {<point name="construct.b.imaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal003
            
            #add-point:AFTER FIELD imaal003
            {<point name="construct.a.imaal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaal003
         ON ACTION controlp INFIELD imaal003
            #add-point:ON ACTION controlp INFIELD imaal003
            {<point name="construct.c.imaal003" />}
            #END add-point
 
         #----<<split_qty>>----
         #此段落由子樣板a01產生
         BEFORE FIELD split_qty
            #add-point:BEFORE FIELD split_qty
            {<point name="construct.b.split_qty" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD split_qty
            
            #add-point:AFTER FIELD split_qty
            {<point name="construct.a.split_qty" />}
            #END add-point
            
 
         #Ctrlp:construct.c.split_qty
         ON ACTION controlp INFIELD split_qty
            #add-point:ON ACTION controlp INFIELD split_qty
            {<point name="construct.c.split_qty" />}
            #END add-point
 
         #----<<sfcb003>>----
         #Ctrlp:construct.c.sfcb003
         ON ACTION controlp INFIELD sfcb003
            #add-point:ON ACTION controlp INFIELD sfcb003
            {<point name="construct.c.sfcb003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb003
            #add-point:BEFORE FIELD sfcb003
            {<point name="construct.b.sfcb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb003
            
            #add-point:AFTER FIELD sfcb003
            {<point name="construct.a.sfcb003" />}
            #END add-point
            
 
         #----<<sfcb003_desc>>----
         #----<<sfcb004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb004
            #add-point:BEFORE FIELD sfcb004
            {<point name="construct.b.sfcb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb004
            
            #add-point:AFTER FIELD sfcb004
            {<point name="construct.a.sfcb004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfcb004
         ON ACTION controlp INFIELD sfcb004
            #add-point:ON ACTION controlp INFIELD sfcb004
            {<point name="construct.c.sfcb004" />}
            #END add-point
 
         #----<<imaal004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imaal004
            #add-point:BEFORE FIELD imaal004
            {<point name="construct.b.imaal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal004
            
            #add-point:AFTER FIELD imaal004
            {<point name="construct.a.imaal004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaal004
         ON ACTION controlp INFIELD imaal004
            #add-point:ON ACTION controlp INFIELD imaal004
            {<point name="construct.c.imaal004" />}
            #END add-point
 
         #----<<split_lot>>----
         #此段落由子樣板a01產生
         BEFORE FIELD split_lot
            #add-point:BEFORE FIELD split_lot
            {<point name="construct.b.split_lot" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD split_lot
            
            #add-point:AFTER FIELD split_lot
            {<point name="construct.a.split_lot" />}
            #END add-point
            
 
         #Ctrlp:construct.c.split_lot
         ON ACTION controlp INFIELD split_lot
            #add-point:ON ACTION controlp INFIELD split_lot
            {<point name="construct.c.split_lot" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON ln,qty,qtys
           FROM s_detail1[1].ln,s_detail1[1].qty,s_detail1[1].qtys
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<ln>>----
         #此段落由子樣板a01產生
         BEFORE FIELD ln
            #add-point:BEFORE FIELD ln
            {<point name="construct.b.page1.ln" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ln
            
            #add-point:AFTER FIELD ln
            {<point name="construct.a.page1.ln" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ln
         ON ACTION controlp INFIELD ln
            #add-point:ON ACTION controlp INFIELD ln
            {<point name="construct.c.page1.ln" />}
            #END add-point
 
         #----<<qty>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qty
            #add-point:BEFORE FIELD qty
            {<point name="construct.b.page1.qty" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qty
            
            #add-point:AFTER FIELD qty
            {<point name="construct.a.page1.qty" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.qty
         ON ACTION controlp INFIELD qty
            #add-point:ON ACTION controlp INFIELD qty
            {<point name="construct.c.page1.qty" />}
            #END add-point
 
         #----<<qtys>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qtys
            #add-point:BEFORE FIELD qtys
            {<point name="construct.b.page1.qtys" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qtys
            
            #add-point:AFTER FIELD qtys
            {<point name="construct.a.page1.qtys" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.qtys
         ON ACTION controlp INFIELD qtys
            #add-point:ON ACTION controlp INFIELD qtys
            {<point name="construct.c.page1.qtys" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.default_search" ver="1" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION asfp302_01_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " sfcadocno = '", g_argv[1], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " sfca001 = '", g_argv[02], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.delete" ver="1" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION asfp302_01_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_sfca_m.sfcadocno IS NULL
   OR g_sfca_m.sfca001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE asfp302_01_master_referesh USING g_sfca_m.sfcadocno,g_sfca_m.sfca001 INTO
   
   
 
   CALL asfp302_01_show()
   
   CALL s_transaction_begin()
 
   OPEN asfp302_01_cl USING g_enterprise,g_sfca_m.sfcadocno
                                                       ,g_sfca_m.sfca001
 
   IF STATUS THEN
      CALL cl_err("OPEN asfp302_01_cl:", STATUS, 1)
      CLOSE asfp302_01_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   FETCH asfp302_01_cl INTO g_sfca_m.sfcbdocno,g_sfca_m.sfaa010,g_sfca_m.wip_qty,g_sfca_m.sfcb001,g_sfca_m.imaal003, 
       g_sfca_m.split_qty,g_sfca_m.sfcb003,g_sfca_m.sfcb003_desc,g_sfca_m.sfcb004,g_sfca_m.imaal004, 
       g_sfca_m.split_lot              #鎖住將被更改或取消的資料
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_sfca_m.sfcadocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL asfp302_01_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_sfcadocno_t = g_sfca_m.sfcadocno
      LET g_sfca001_t = g_sfca_m.sfca001
 
 
      DELETE FROM sfca_t
       WHERE sfcaent = g_enterprise AND sfcadocno = g_sfca_m.sfcadocno
         AND sfca001 = g_sfca_m.sfca001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_sfca_m.sfcadocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM sfcb_t
       WHERE sfcbent = g_enterprise AND sfcbdocno = g_sfca_m.sfcadocno
         AND sfcb001 = g_sfca_m.sfca001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("sfcb_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_sfcb_d.clear() 
 
     
      #CALL asfp302_01_ui_browser_refresh()  
      CALL asfp302_01_ui_headershow()  
      CALL asfp302_01_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL asfp302_01_browser_fill("")
         CALL asfp302_01_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL asfp302_01_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE asfp302_01_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_sfca_m.sfcadocno,'D')
    
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION asfp302_01_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM sfcb_t
       WHERE sfcbent = g_enterprise AND
         sfcbdocno = ps_keys_bak[1] AND sfcb001 = ps_keys_bak[2] AND sfcb002 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.description" ver="34" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000041
#+ 
#+ Filename...: asfp302_01
#+ Description: ...
#+ Creator....: 00768(2014/05/09)
#+ Modifier...: 00768(2014/06/30)
#+ Buildtype..: 應用 c03b 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="asfp302_01.detail_reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION asfp302_01_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE sfcb_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE asfp302_01_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE asfp302_01_detail AS ",
                "SELECT * FROM sfcb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO asfp302_01_detail SELECT * FROM sfcb_t 
                                         WHERE sfcbent = g_enterprise AND sfcbdocno = g_sfcadocno_t
                                         AND sfcb001 = g_sfca001_t
 
   
   #將key修正為調整後   
   UPDATE asfp302_01_detail 
      #更新key欄位
      SET sfcbdocno = g_sfca_m.sfcadocno
          , sfcb001 = g_sfca_m.sfca001
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO sfcb_t SELECT * FROM asfp302_01_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE asfp302_01_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_sfcadocno_t = g_sfca_m.sfcadocno
   LET g_sfca001_t = g_sfca_m.sfca001
 
   
   DROP TABLE asfp302_01_detail
   
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.detail_show" ver="1" status="" src="s">
    <![CDATA[#+ 單身reference detail_show
PRIVATE FUNCTION asfp302_01_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.fetch" ver="1" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION asfp302_01_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   CALL asfp302_01_browser_fill(p_flag)
   
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_sfca_m.sfcadocno = g_browser[g_current_idx].b_sfcadocno
   LET g_sfca_m.sfca001 = g_browser[g_current_idx].b_sfca001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE asfp302_01_master_referesh USING g_sfca_m.sfcadocno,g_sfca_m.sfca001 INTO
   IF SQLCA.sqlcode THEN
      CALL cl_err("sfca_t",SQLCA.sqlcode,1)
      INITIALIZE g_sfca_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL asfp302_01_show()
 
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.fill_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION asfp302_01_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.global" ver="7" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_sfca_m        RECORD
       sfcbdocno LIKE type_t.chr20, 
   sfaa010 LIKE type_t.chr500, 
   wip_qty LIKE type_t.num20_6, 
   sfcb001 LIKE type_t.num10, 
   imaal003 LIKE type_t.chr500, 
   split_qty LIKE type_t.num20_6, 
   sfcb003 LIKE type_t.chr10, 
   sfcb003_desc LIKE type_t.chr80, 
   sfcb004 LIKE type_t.chr10, 
   imaal004 LIKE type_t.chr500, 
   split_lot LIKE type_t.num5
       END RECORD
DEFINE g_sfca_m        type_g_sfca_m
 
   
 
#單身 type 宣告
PRIVATE TYPE type_g_sfcb_d        RECORD
       ln LIKE type_t.chr80, 
   qty LIKE type_t.num20_6, 
   qtys LIKE type_t.num20_6
       END RECORD
 
 
DEFINE g_sfcb_d          DYNAMIC ARRAY OF type_g_sfcb_d
DEFINE g_sfcb_d_t        type_g_sfcb_d
 
 
DEFINE g_sfcb002_t   LIKE sfcb_t.sfcb002    #Key值備份
 
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rec_b               LIKE type_t.num5  
DEFINE l_ac                  LIKE type_t.num5
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
       
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="asfp302_01.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION asfp302_01_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_sfcb_d.getLength() THEN
         LET g_detail_idx = g_sfcb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_sfcb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_sfcb_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.init" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION asfp302_01_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
   
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL asfp302_01_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.input" ver="4" status="" src="s">
    <![CDATA[#+ 資料輸入
PUBLIC FUNCTION asfp302_01(--)
   #add-point:input段變數傳入
   {<point name="input.get_var"/>}
   #end add-point
   )
   DEFINE l_ac_t          LIKE type_t.num5        #未取消的ARRAY CNT 
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否  
   DEFINE l_count         LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5
   DEFINE l_cmd           LIKE type_t.chr5
   DEFINE p_cmd           LIKE type_t.chr5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point
 
   #畫面開啟 (identifier)
   OPEN WINDOW w_asfp302_01 WITH FORM cl_ap_formpath("asf","asfp302_01")
 
   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   
   LET g_qryparam.state = "i"
   LET p_cmd = 'a'
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   
   #輸入前處理
   #add-point:單頭前置處理
   {<point name="input.pre_input"/>}
   #end add-point
  
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      INPUT BY NAME g_sfca_m.sfcbdocno,g_sfca_m.sfaa010,g_sfca_m.wip_qty,g_sfca_m.sfcb001,g_sfca_m.imaal003, 
          g_sfca_m.split_qty,g_sfca_m.sfcb003,g_sfca_m.sfcb004,g_sfca_m.imaal004,g_sfca_m.split_lot  
          ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION
         #add-point:單頭前置處理
         {<point name="input.head.action"/>}
         #end add-point
         
         #自訂ACTION(master_input)
         
         
         BEFORE INPUT
            #add-point:單頭輸入前處理
            {<point name="input.head.before_input"/>}
            #end add-point
          
                  #此段落由子樣板a01產生
         BEFORE FIELD sfcbdocno
            #add-point:BEFORE FIELD sfcbdocno
            {<point name="input.b.sfcbdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcbdocno
            
            #add-point:AFTER FIELD sfcbdocno
            {<point name="input.a.sfcbdocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfcbdocno
            #add-point:ON CHANGE sfcbdocno
            {<point name="input.g.sfcbdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa010
            #add-point:BEFORE FIELD sfaa010
            {<point name="input.b.sfaa010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa010
            
            #add-point:AFTER FIELD sfaa010
            {<point name="input.a.sfaa010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfaa010
            #add-point:ON CHANGE sfaa010
            {<point name="input.g.sfaa010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD wip_qty
            #add-point:BEFORE FIELD wip_qty
            {<point name="input.b.wip_qty" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD wip_qty
            
            #add-point:AFTER FIELD wip_qty
            {<point name="input.a.wip_qty" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE wip_qty
            #add-point:ON CHANGE wip_qty
            {<point name="input.g.wip_qty" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb001
            #add-point:BEFORE FIELD sfcb001
            {<point name="input.b.sfcb001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb001
            
            #add-point:AFTER FIELD sfcb001
            {<point name="input.a.sfcb001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfcb001
            #add-point:ON CHANGE sfcb001
            {<point name="input.g.sfcb001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaal003
            #add-point:BEFORE FIELD imaal003
            {<point name="input.b.imaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal003
            
            #add-point:AFTER FIELD imaal003
            {<point name="input.a.imaal003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imaal003
            #add-point:ON CHANGE imaal003
            {<point name="input.g.imaal003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD split_qty
            #add-point:BEFORE FIELD split_qty
            {<point name="input.b.split_qty" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD split_qty
            
            #add-point:AFTER FIELD split_qty
            {<point name="input.a.split_qty" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE split_qty
            #add-point:ON CHANGE split_qty
            {<point name="input.g.split_qty" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb003
            
            #add-point:AFTER FIELD sfcb003
            {<point name="input.a.sfcb003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb003
            #add-point:BEFORE FIELD sfcb003
            {<point name="input.b.sfcb003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfcb003
            #add-point:ON CHANGE sfcb003
            {<point name="input.g.sfcb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb004
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_sfca_m.sfcb004,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD sfcb004
            END IF
 
 
            #add-point:AFTER FIELD sfcb004
            {<point name="input.a.sfcb004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb004
            #add-point:BEFORE FIELD sfcb004
            {<point name="input.b.sfcb004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfcb004
            #add-point:ON CHANGE sfcb004
            {<point name="input.g.sfcb004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaal004
            #add-point:BEFORE FIELD imaal004
            {<point name="input.b.imaal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal004
            
            #add-point:AFTER FIELD imaal004
            {<point name="input.a.imaal004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imaal004
            #add-point:ON CHANGE imaal004
            {<point name="input.g.imaal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD split_lot
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_sfca_m.split_lot,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD split_lot
            END IF
 
 
            #add-point:AFTER FIELD split_lot
            {<point name="input.a.split_lot" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD split_lot
            #add-point:BEFORE FIELD split_lot
            {<point name="input.b.split_lot" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE split_lot
            #add-point:ON CHANGE split_lot
            {<point name="input.g.split_lot" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.sfcbdocno
         ON ACTION controlp INFIELD sfcbdocno
            #add-point:ON ACTION controlp INFIELD sfcbdocno
            {<point name="input.c.sfcbdocno" />}
            #END add-point
 
         #Ctrlp:input.c.sfaa010
         ON ACTION controlp INFIELD sfaa010
            #add-point:ON ACTION controlp INFIELD sfaa010
            {<point name="input.c.sfaa010" />}
            #END add-point
 
         #Ctrlp:input.c.wip_qty
         ON ACTION controlp INFIELD wip_qty
            #add-point:ON ACTION controlp INFIELD wip_qty
            {<point name="input.c.wip_qty" />}
            #END add-point
 
         #Ctrlp:input.c.sfcb001
         ON ACTION controlp INFIELD sfcb001
            #add-point:ON ACTION controlp INFIELD sfcb001
            {<point name="input.c.sfcb001" />}
            #END add-point
 
         #Ctrlp:input.c.imaal003
         ON ACTION controlp INFIELD imaal003
            #add-point:ON ACTION controlp INFIELD imaal003
            {<point name="input.c.imaal003" />}
            #END add-point
 
         #Ctrlp:input.c.split_qty
         ON ACTION controlp INFIELD split_qty
            #add-point:ON ACTION controlp INFIELD split_qty
            {<point name="input.c.split_qty" />}
            #END add-point
 
         #Ctrlp:input.c.sfcb003
         ON ACTION controlp INFIELD sfcb003
            #add-point:ON ACTION controlp INFIELD sfcb003
            {<point name="input.c.sfcb003" />}
            #END add-point
 
         #Ctrlp:input.c.sfcb004
         ON ACTION controlp INFIELD sfcb004
            #add-point:ON ACTION controlp INFIELD sfcb004
            {<point name="input.c.sfcb004" />}
            #END add-point
 
         #Ctrlp:input.c.imaal004
         ON ACTION controlp INFIELD imaal004
            #add-point:ON ACTION controlp INFIELD imaal004
            {<point name="input.c.imaal004" />}
            #END add-point
 
         #Ctrlp:input.c.split_lot
         ON ACTION controlp INFIELD split_lot
            #add-point:ON ACTION controlp INFIELD split_lot
            {<point name="input.c.split_lot" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            #add-point:單頭輸入後處理
            {<point name="input.head.after_input"/>}
            #end add-point
            
      END INPUT
   
      INPUT ARRAY g_sfcb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
         
         #自訂ACTION
         #add-point:單頭前置處理
         {<point name="input.body.action"/>}
         #end add-point
         
         #自訂ACTION(detail_input)
         
         
         BEFORE INPUT
            #add-point:單身輸入前處理
            {<point name="input.body.before_input"/>}
            #end add-point
          
                  #此段落由子樣板a01產生
         BEFORE FIELD ln
            #add-point:BEFORE FIELD ln
            {<point name="input.b.page1.ln" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ln
            
            #add-point:AFTER FIELD ln
            {<point name="input.a.page1.ln" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ln
            #add-point:ON CHANGE ln
            {<point name="input.g.page1.ln" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD qty
            #add-point:BEFORE FIELD qty
            {<point name="input.b.page1.qty" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qty
            
            #add-point:AFTER FIELD qty
            {<point name="input.a.page1.qty" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE qty
            #add-point:ON CHANGE qty
            {<point name="input.g.page1.qty" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD qtys
            #add-point:BEFORE FIELD qtys
            {<point name="input.b.page1.qtys" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qtys
            
            #add-point:AFTER FIELD qtys
            {<point name="input.a.page1.qtys" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE qtys
            #add-point:ON CHANGE qtys
            {<point name="input.g.page1.qtys" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.ln
         ON ACTION controlp INFIELD ln
            #add-point:ON ACTION controlp INFIELD ln
            {<point name="input.c.page1.ln" />}
            #END add-point
 
         #Ctrlp:input.c.page1.qty
         ON ACTION controlp INFIELD qty
            #add-point:ON ACTION controlp INFIELD qty
            {<point name="input.c.page1.qty" />}
            #END add-point
 
         #Ctrlp:input.c.page1.qtys
         ON ACTION controlp INFIELD qtys
            #add-point:ON ACTION controlp INFIELD qtys
            {<point name="input.c.page1.qtys" />}
            #END add-point
 
 
 
         AFTER INPUT
            #add-point:單頭輸入後處理
            {<point name="input.body.after_input"/>}
            #end add-point
            
      END INPUT
      
 
      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      #公用action
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:畫面關閉前
   {<point name="input.before_close"/>}
   #end add-point
   
   #畫面關閉
   CLOSE WINDOW w_asfp302_01 
   
   #add-point:input段after input 
   {<point name="input.post_input"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.input.body" ver="2" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_sfcb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_sfcb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL asfp302_01_b_fill()
            LET g_rec_b = g_sfcb_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN asfp302_01_cl USING g_enterprise,g_sfca_m.sfcadocno
                                                                ,g_sfca_m.sfca001
 
            IF STATUS THEN
               CALL cl_err("OPEN asfp302_01_cl:", STATUS, 1)
               CLOSE asfp302_01_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_sfcb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_sfcb_d[l_ac].sfcb002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_sfcb_d_t.* = g_sfcb_d[l_ac].*  #BACKUP
               CALL asfp302_01_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL asfp302_01_set_no_entry_b(l_cmd)
               IF NOT asfp302_01_lock_b("sfcb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH asfp302_01_bcl INTO g_sfcb_d[l_ac].ln,g_sfcb_d[l_ac].qty,g_sfcb_d[l_ac].qtys
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_sfcb_d_t.sfcb002,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL asfp302_01_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_sfcb_d[l_ac].* TO NULL 
            
            LET g_sfcb_d_t.* = g_sfcb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL asfp302_01_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL asfp302_01_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_sfcb_d[li_reproduce_target].* = g_sfcb_d[li_reproduce].*
 
               LET g_sfcb_d[li_reproduce_target].sfcb002 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM sfcb_t 
             WHERE sfcbent = g_enterprise AND sfcbdocno = g_sfca_m.sfcadocno
               AND sfcb001 = g_sfca_m.sfca001
 
               AND sfcb002 = g_sfcb_d[l_ac].sfcb002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfca_m.sfcadocno
               LET gs_keys[2] = g_sfca_m.sfca001
               LET gs_keys[3] = g_sfcb_d[g_detail_idx].sfcb002
               CALL asfp302_01_insert_b('sfcb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_sfcb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("sfcb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL asfp302_01_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_sfcb_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_sfcb_d.deleteElement(l_ac)
               NEXT FIELD sfcb002
            END IF
         
            IF g_sfcb_d[l_ac].sfcb002 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM sfcb_t
                WHERE sfcbent = g_enterprise AND sfcbdocno = g_sfca_m.sfcadocno AND
                                          sfcb001 = g_sfca_m.sfca001 AND
 
                      sfcb002 = g_sfcb_d_t.sfcb002
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("sfcb_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE asfp302_01_bcl
               LET l_count = g_sfcb_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfca_m.sfcadocno
               LET gs_keys[2] = g_sfca_m.sfca001
               LET gs_keys[3] = g_sfcb_d[g_detail_idx].sfcb002
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL asfp302_01_delete_b('sfcb_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<ln>>----
         #此段落由子樣板a01產生
         BEFORE FIELD ln
            #add-point:BEFORE FIELD ln
            {<point name="input.b.page1.ln" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ln
            
            #add-point:AFTER FIELD ln
            {<point name="input.a.page1.ln" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ln
            #add-point:ON CHANGE ln
            {<point name="input.g.page1.ln" />}
            #END add-point
 
         #----<<qty>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qty
            #add-point:BEFORE FIELD qty
            {<point name="input.b.page1.qty" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qty
            
            #add-point:AFTER FIELD qty
            {<point name="input.a.page1.qty" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE qty
            #add-point:ON CHANGE qty
            {<point name="input.g.page1.qty" />}
            #END add-point
 
         #----<<qtys>>----
         #此段落由子樣板a01產生
         BEFORE FIELD qtys
            #add-point:BEFORE FIELD qtys
            {<point name="input.b.page1.qtys" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qtys
            
            #add-point:AFTER FIELD qtys
            {<point name="input.a.page1.qtys" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE qtys
            #add-point:ON CHANGE qtys
            {<point name="input.g.page1.qtys" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<ln>>----
         #Ctrlp:input.c.page1.ln
         ON ACTION controlp INFIELD ln
            #add-point:ON ACTION controlp INFIELD ln
            {<point name="input.c.page1.ln" />}
            #END add-point
 
         #----<<qty>>----
         #Ctrlp:input.c.page1.qty
         ON ACTION controlp INFIELD qty
            #add-point:ON ACTION controlp INFIELD qty
            {<point name="input.c.page1.qty" />}
            #END add-point
 
         #----<<qtys>>----
         #Ctrlp:input.c.page1.qtys
         ON ACTION controlp INFIELD qtys
            #add-point:ON ACTION controlp INFIELD qtys
            {<point name="input.c.page1.qtys" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_sfcb_d[l_ac].* = g_sfcb_d_t.*
               CLOSE asfp302_01_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_sfcb_d[l_ac].sfcb002,-263,1)
               LET g_sfcb_d[l_ac].* = g_sfcb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE sfcb_t SET (sfcbdocno,sfcb001) = (g_sfca_m.sfcadocno,g_sfca_m.sfca001)
                WHERE sfcbent = g_enterprise AND sfcbdocno = g_sfca_m.sfcadocno 
                  AND sfcb001 = g_sfca_m.sfca001 
 
                  AND sfcb002 = g_sfcb_d_t.sfcb002 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("sfcb_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_sfcb_d[l_ac].* = g_sfcb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("sfcb_t",SQLCA.sqlcode,1)
                     LET g_sfcb_d[l_ac].* = g_sfcb_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfca_m.sfcadocno
               LET gs_keys_bak[1] = g_sfcadocno_t
               LET gs_keys[2] = g_sfca_m.sfca001
               LET gs_keys_bak[2] = g_sfca001_t
               LET gs_keys[3] = g_sfcb_d[g_detail_idx].sfcb002
               LET gs_keys_bak[3] = g_sfcb_d_t.sfcb002
               CALL asfp302_01_update_b('sfcb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL asfp302_01_unlock_b("sfcb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_sfcb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_sfcb_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="asfp302_01.input.head" ver="2" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_sfca_m.sfcbdocno,g_sfca_m.sfaa010,g_sfca_m.wip_qty,g_sfca_m.sfcb001,g_sfca_m.imaal003, 
          g_sfca_m.split_qty,g_sfca_m.sfcb003,g_sfca_m.sfcb004,g_sfca_m.imaal004,g_sfca_m.split_lot  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
         #---------------------------<  Master  >---------------------------
         #----<<sfcbdocno>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcbdocno
            #add-point:BEFORE FIELD sfcbdocno
            {<point name="input.b.sfcbdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcbdocno
            
            #add-point:AFTER FIELD sfcbdocno
            {<point name="input.a.sfcbdocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfcbdocno
            #add-point:ON CHANGE sfcbdocno
            {<point name="input.g.sfcbdocno" />}
            #END add-point
 
         #----<<sfaa010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa010
            #add-point:BEFORE FIELD sfaa010
            {<point name="input.b.sfaa010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa010
            
            #add-point:AFTER FIELD sfaa010
            {<point name="input.a.sfaa010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfaa010
            #add-point:ON CHANGE sfaa010
            {<point name="input.g.sfaa010" />}
            #END add-point
 
         #----<<wip_qty>>----
         #此段落由子樣板a01產生
         BEFORE FIELD wip_qty
            #add-point:BEFORE FIELD wip_qty
            {<point name="input.b.wip_qty" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD wip_qty
            
            #add-point:AFTER FIELD wip_qty
            {<point name="input.a.wip_qty" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE wip_qty
            #add-point:ON CHANGE wip_qty
            {<point name="input.g.wip_qty" />}
            #END add-point
 
         #----<<sfcb001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb001
            #add-point:BEFORE FIELD sfcb001
            {<point name="input.b.sfcb001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb001
            
            #add-point:AFTER FIELD sfcb001
            {<point name="input.a.sfcb001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfcb001
            #add-point:ON CHANGE sfcb001
            {<point name="input.g.sfcb001" />}
            #END add-point
 
         #----<<imaal003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imaal003
            #add-point:BEFORE FIELD imaal003
            {<point name="input.b.imaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal003
            
            #add-point:AFTER FIELD imaal003
            {<point name="input.a.imaal003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imaal003
            #add-point:ON CHANGE imaal003
            {<point name="input.g.imaal003" />}
            #END add-point
 
         #----<<split_qty>>----
         #此段落由子樣板a01產生
         BEFORE FIELD split_qty
            #add-point:BEFORE FIELD split_qty
            {<point name="input.b.split_qty" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD split_qty
            
            #add-point:AFTER FIELD split_qty
            {<point name="input.a.split_qty" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE split_qty
            #add-point:ON CHANGE split_qty
            {<point name="input.g.split_qty" />}
            #END add-point
 
         #----<<sfcb003>>----
         #此段落由子樣板a02產生
         AFTER FIELD sfcb003
            
            #add-point:AFTER FIELD sfcb003
            {<point name="input.a.sfcb003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb003
            #add-point:BEFORE FIELD sfcb003
            {<point name="input.b.sfcb003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfcb003
            #add-point:ON CHANGE sfcb003
            {<point name="input.g.sfcb003" />}
            #END add-point
 
         #----<<sfcb003_desc>>----
         #----<<sfcb004>>----
         #此段落由子樣板a02產生
         AFTER FIELD sfcb004
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_sfca_m.sfcb004,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD sfcb004
            END IF
 
 
            #add-point:AFTER FIELD sfcb004
            {<point name="input.a.sfcb004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb004
            #add-point:BEFORE FIELD sfcb004
            {<point name="input.b.sfcb004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfcb004
            #add-point:ON CHANGE sfcb004
            {<point name="input.g.sfcb004" />}
            #END add-point
 
         #----<<imaal004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imaal004
            #add-point:BEFORE FIELD imaal004
            {<point name="input.b.imaal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal004
            
            #add-point:AFTER FIELD imaal004
            {<point name="input.a.imaal004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imaal004
            #add-point:ON CHANGE imaal004
            {<point name="input.g.imaal004" />}
            #END add-point
 
         #----<<split_lot>>----
         #此段落由子樣板a01產生
         BEFORE FIELD split_lot
            #add-point:BEFORE FIELD split_lot
            {<point name="input.b.split_lot" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD split_lot
            
            #add-point:AFTER FIELD split_lot
            {<point name="input.a.split_lot" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE split_lot
            #add-point:ON CHANGE split_lot
            {<point name="input.g.split_lot" />}
            #END add-point
 
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<sfcbdocno>>----
         #Ctrlp:input.c.sfcbdocno
         ON ACTION controlp INFIELD sfcbdocno
            #add-point:ON ACTION controlp INFIELD sfcbdocno
            {<point name="input.c.sfcbdocno" />}
            #END add-point
 
         #----<<sfaa010>>----
         #Ctrlp:input.c.sfaa010
         ON ACTION controlp INFIELD sfaa010
            #add-point:ON ACTION controlp INFIELD sfaa010
            {<point name="input.c.sfaa010" />}
            #END add-point
 
         #----<<wip_qty>>----
         #Ctrlp:input.c.wip_qty
         ON ACTION controlp INFIELD wip_qty
            #add-point:ON ACTION controlp INFIELD wip_qty
            {<point name="input.c.wip_qty" />}
            #END add-point
 
         #----<<sfcb001>>----
         #Ctrlp:input.c.sfcb001
         ON ACTION controlp INFIELD sfcb001
            #add-point:ON ACTION controlp INFIELD sfcb001
            {<point name="input.c.sfcb001" />}
            #END add-point
 
         #----<<imaal003>>----
         #Ctrlp:input.c.imaal003
         ON ACTION controlp INFIELD imaal003
            #add-point:ON ACTION controlp INFIELD imaal003
            {<point name="input.c.imaal003" />}
            #END add-point
 
         #----<<split_qty>>----
         #Ctrlp:input.c.split_qty
         ON ACTION controlp INFIELD split_qty
            #add-point:ON ACTION controlp INFIELD split_qty
            {<point name="input.c.split_qty" />}
            #END add-point
 
         #----<<sfcb003>>----
         #Ctrlp:input.c.sfcb003
         ON ACTION controlp INFIELD sfcb003
            #add-point:ON ACTION controlp INFIELD sfcb003
            {<point name="input.c.sfcb003" />}
            #END add-point
 
         #----<<sfcb003_desc>>----
         #----<<sfcb004>>----
         #Ctrlp:input.c.sfcb004
         ON ACTION controlp INFIELD sfcb004
            #add-point:ON ACTION controlp INFIELD sfcb004
            {<point name="input.c.sfcb004" />}
            #END add-point
 
         #----<<imaal004>>----
         #Ctrlp:input.c.imaal004
         ON ACTION controlp INFIELD imaal004
            #add-point:ON ACTION controlp INFIELD imaal004
            {<point name="input.c.imaal004" />}
            #END add-point
 
         #----<<split_lot>>----
         #Ctrlp:input.c.split_lot
         ON ACTION controlp INFIELD split_lot
            #add-point:ON ACTION controlp INFIELD split_lot
            {<point name="input.c.split_lot" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_sfca_m.sfcadocno             
                            ,g_sfca_m.sfca001   
 
                            
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO sfca_t (sfcaent,)
               VALUES (g_enterprise,) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_sfca_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL asfp302_01_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE sfca_t SET () = ()
                WHERE sfcaent = g_enterprise AND sfcadocno = g_sfcadocno_t
                  AND sfca001 = g_sfca001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("sfca_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               CALL s_transaction_end('Y','0')
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_sfcadocno_t = g_sfca_m.sfcadocno
            LET g_sfca001_t = g_sfca_m.sfca001
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="asfp302_01.input.other" ver="1" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD sfcadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD ln
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.insert" ver="1" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION asfp302_01_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_sfcb_d.clear()   
 
 
   INITIALIZE g_sfca_m.* LIKE sfca_t.*             #DEFAULT 設定
   
   LET g_sfcadocno_t = NULL
   LET g_sfca001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL asfp302_01_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_sfca_m.* = g_sfca_m_t.*
         CALL asfp302_01_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_sfcb_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1    
 
   LET g_sfcadocno_t = g_sfca_m.sfcadocno
   LET g_sfca001_t = g_sfca_m.sfca001
 
   
   LET g_wc = g_wc,  
              " OR ( sfcaent = '" ||g_enterprise|| "' AND",
              " sfcadocno = '", g_sfca_m.sfcadocno CLIPPED, "' "
              ," AND sfca001 = '", g_sfca_m.sfca001 CLIPPED, "' "
 
              , ") "
   
   CLOSE asfp302_01_cl
   
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION asfp302_01_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO sfcb_t
                  (sfcbent,
                   sfcbdocno,sfcb001,
                   sfcb002
                   ) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   )
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("sfcb_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION asfp302_01_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL asfp302_01_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "sfcb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN asfp302_01_bcl USING g_enterprise,
                                       g_sfca_m.sfcadocno,g_sfca_m.sfca001,g_sfcb_d[g_detail_idx].sfcb002  
                                               
      IF SQLCA.sqlcode THEN
         CALL cl_err("asfp302_01_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.main" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a27產生
#+ 資料輸入
PUBLIC FUNCTION asfp302_01(--)
   #add-point:main段變數傳入
   {<point name="main.get_var"/>}
   #end add-point
   )
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" mark="Y"/>}
   #end add-point
   LET g_forupd_sql = "SELECT '','','','','','','','','','','' FROM sfca_t WHERE sfcaent= ? AND sfcadocno=?  
       AND sfca001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)   #轉換不同資料庫語法
   DECLARE asfp302_01_cl CURSOR FROM g_forupd_sql     # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE ",
               " FROM sfca_t",
               " WHERE sfcaent = '" ||g_enterprise|| "' AND sfcadocno = ? AND sfca001 = ?"
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE asfp302_01_master_referesh FROM g_sql
   
   #畫面開啟 (identifier)
   OPEN WINDOW w_asfp302_01 WITH FORM cl_ap_formpath("asf","asfp302_01")
   
   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   
   #程式初始化
   CALL asfp302_01_init()   
 
   #進入選單 Menu (="N")
   CALL asfp302_01_ui_dialog() 
 
   #畫面關閉
   CLOSE WINDOW w_asfp302_01
 
   CLOSE asfp302_01_cl
   
   
 
   #add-point:離開前
   {<point name="main.exit" />}
   #end add-point
 
END FUNCTION
 
 
]]>
  </section>
  <section id="asfp302_01.modify" ver="1" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION asfp302_01_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_sfca_m.sfcadocno IS NULL
   OR g_sfca_m.sfca001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE asfp302_01_master_referesh USING g_sfca_m.sfcadocno,g_sfca_m.sfca001 INTO
 
   ERROR ""
  
   LET g_sfcadocno_t = g_sfca_m.sfcadocno
   LET g_sfca001_t = g_sfca_m.sfca001
 
   CALL s_transaction_begin()
   
   OPEN asfp302_01_cl USING g_enterprise,g_sfca_m.sfcadocno
                                                       ,g_sfca_m.sfca001
 
   IF STATUS THEN
      CALL cl_err("OPEN asfp302_01_cl:", STATUS, 1)
      CLOSE asfp302_01_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH asfp302_01_cl INTO g_sfca_m.sfcbdocno,g_sfca_m.sfaa010,g_sfca_m.wip_qty,g_sfca_m.sfcb001,g_sfca_m.imaal003, 
       g_sfca_m.split_qty,g_sfca_m.sfcb003,g_sfca_m.sfcb003_desc,g_sfca_m.sfcb004,g_sfca_m.imaal004, 
       g_sfca_m.split_lot
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_sfca_m.sfcadocno,SQLCA.sqlcode,0)
      CLOSE asfp302_01_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL asfp302_01_show()
   WHILE TRUE
      LET g_sfcadocno_t = g_sfca_m.sfcadocno
      LET g_sfca001_t = g_sfca_m.sfca001
 
      
      #寫入修改者/修改日期資訊(單頭)
      
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL asfp302_01_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_sfca_m.* = g_sfca_m_t.*
         CALL asfp302_01_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_sfca_m.sfcadocno != g_sfcadocno_t 
      OR g_sfca_m.sfca001 != g_sfca001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE sfcb_t SET sfcbdocno = g_sfca_m.sfcadocno
                                      ,sfcb001 = g_sfca_m.sfca001
 
          WHERE sfcbent = g_enterprise AND sfcbdocno = g_sfcadocno_t
            AND sfcb001 = g_sfca001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("sfcb_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("sfcb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_sfca_m.sfcadocno,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE asfp302_01_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_sfca_m.sfcadocno,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="asfp302_01.other_dialog" ver="1" status="" src="s">
    <![CDATA[{<point name="other.dialog"/>}
]]>
  </section>
  <section id="asfp302_01.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="asfp302_01.query" ver="1" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION asfp302_01_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_sfcb_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL asfp302_01_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL asfp302_01_browser_fill("")
      CALL asfp302_01_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL asfp302_01_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL asfp302_01_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION asfp302_01_reproduce()
   DEFINE l_newno     LIKE sfca_t.sfcadocno 
   DEFINE l_oldno     LIKE sfca_t.sfcadocno 
   DEFINE l_newno02     LIKE sfca_t.sfca001 
   DEFINE l_oldno02     LIKE sfca_t.sfca001 
 
   DEFINE l_master    RECORD LIKE sfca_t.*
   DEFINE l_detail    RECORD LIKE sfcb_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   
   IF g_sfca_m.sfcadocno IS NULL
   OR g_sfca_m.sfca001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_sfcadocno_t = g_sfca_m.sfcadocno
   LET g_sfca001_t = g_sfca_m.sfca001
 
    
   LET g_sfca_m.sfcadocno = ""
   LET g_sfca_m.sfca001 = ""
 
    
   CALL asfp302_01_set_entry('a')
   CALL asfp302_01_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL asfp302_01_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1    
 
   LET g_wc = g_wc,  
              " OR (",
              " sfcadocno = '", g_sfca_m.sfcadocno CLIPPED, "' "
              ," AND sfca001 = '", g_sfca_m.sfca001 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.set_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION asfp302_01_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("sfcadocno,sfca001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION asfp302_01_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.set_no_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION asfp302_01_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("sfcadocno,sfca001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION asfp302_01_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION asfp302_01_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_sfca_m.sfcadocno
   LET g_pk_array[1].column = 'sfcadocno'
   LET g_pk_array[2].values = g_sfca_m.sfca001
   LET g_pk_array[2].column = 'sfca001'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="asfp302_01.show" ver="1" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION asfp302_01_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_sfca_m_t.* = g_sfca_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL asfp302_01_b_fill() #單身填充
      CALL asfp302_01_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL asfp302_01_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_sfca_m.sfcbdocno,g_sfca_m.sfaa010,g_sfca_m.wip_qty,g_sfca_m.sfcb001,g_sfca_m.imaal003, 
       g_sfca_m.split_qty,g_sfca_m.sfcb003,g_sfca_m.sfcb003_desc,g_sfca_m.sfcb004,g_sfca_m.imaal004, 
       g_sfca_m.split_lot
   
   #顯示狀態(stus)圖片
   
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_sfcb_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL asfp302_01_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="asfp302_01.state_change" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="asfp302_01.ui_browser_refresh" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION asfp302_01_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_sfcadocno = g_sfca_m.sfcadocno 
         AND g_browser[l_i].b_sfca001 = g_sfca_m.sfca001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION asfp302_01_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.ui_dialog" ver="1" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION asfp302_01_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL asfp302_01_browser_fill("")
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_sfcadocno = g_sfcadocno_t
               AND g_browser[li_idx].b_sfca001 = g_sfca001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
 
 
               
      
         
        
         DISPLAY ARRAY g_sfcb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL asfp302_01_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL asfp302_01_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL asfp302_01_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL asfp302_01_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL asfp302_01_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
            
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD sfcb002
            END IF
        
         #ON ACTION statechange
         #   CALL asfp302_01_statechange()
         #   LET g_action_choice = "statechange"
         #   EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL asfp302_01_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL asfp302_01_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL asfp302_01_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         
         
         ON ACTION first
            CALL asfp302_01_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asfp302_01_idx_chk()
            
         ON ACTION previous
            CALL asfp302_01_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asfp302_01_idx_chk()
            
         ON ACTION jump
            CALL asfp302_01_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asfp302_01_idx_chk()
            
         ON ACTION next
            CALL asfp302_01_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asfp302_01_idx_chk()
            
         ON ACTION last
            CALL asfp302_01_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asfp302_01_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL asfp302_01_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL asfp302_01_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL asfp302_01_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.ui_headershow" ver="1" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION asfp302_01_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_sfca_m.sfcadocno = g_browser[g_current_idx].b_sfcadocno   
   LET g_sfca_m.sfca001 = g_browser[g_current_idx].b_sfca001   
 
   EXECUTE asfp302_01_master_referesh USING g_sfca_m.sfcadocno,g_sfca_m.sfca001 INTO
   CALL asfp302_01_show()
   
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION asfp302_01_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE asfp302_01_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="asfp302_01.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION asfp302_01_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "sfcb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE sfcb_t 
         SET (sfcbdocno,sfcb001,
              sfcb002
              ) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ) 
         WHERE sfcbent = g_enterprise AND sfcbdocno = ps_keys_bak[1] AND sfcb001 = ps_keys_bak[2] AND sfcb002 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("sfcb_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("sfcb_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
