<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="asft310" std_prog="asft310" erpver="1.0" module="ASF" ver="11" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="Y" designer_ver="1.0">
  <other>
    <code_template value="F" status="u"/>
    <free_style value="Y" status="u"/>
    <start_arg value="" status="u"/>
  </other>
  <point name="construct.c.sfdacnfid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfdacnfid  #顯示到畫面上

            NEXT FIELD sfdacnfid                     #返回原欄位

]]>
  </point>
  <point name="show.head.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #部门
            IF g_sfda_m.sfda002 = '15' THEN  #15.製程中委外發料時，顯示名稱為委外廠商
               #帶值:廠商名稱
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfda_m.sfda003
               CALL cl_ref_val("v_pmaal004")
               LET g_sfda_m.sfda003_desc = g_chkparam.return1
               DISPLAY BY NAME g_sfda_m.sfda003_desc
            ELSE
               #帶值:部门名稱
               CALL s_desc_get_department_desc(g_sfda_m.sfda003) RETURNING g_sfda_m.sfda003_desc
               DISPLAY BY NAME g_sfda_m.sfda003_desc
            END IF
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfda_m.sfda004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_sfda_m.sfda004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfda_m.sfda004_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfda_m.sfdaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_sfda_m.sfdaownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfda_m.sfdaownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfda_m.sfdaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfda_m.sfdaowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfda_m.sfdaowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfda_m.sfdacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_sfda_m.sfdacrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfda_m.sfdacrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfda_m.sfdacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfda_m.sfdacrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfda_m.sfdacrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfda_m.sfdamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_sfda_m.sfdamodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfda_m.sfdamodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfda_m.sfdacnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_sfda_m.sfdacnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfda_m.sfdacnfid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfda_m.sfdapstid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_sfda_m.sfdapstid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfda_m.sfdapstid_desc
]]>
  </point>
  <point name="show.body7.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #料件编号
      CALL s_desc_get_item_desc(g_sfdb7_d[l_ac].inao001) RETURNING g_sfdb7_d[l_ac].inao001_desc,g_sfdb7_d[l_ac].inao001_desc2
      DISPLAY BY NAME g_sfdb7_d[l_ac].inao001_desc
      DISPLAY BY NAME g_sfdb7_d[l_ac].inao001_desc2]]>
  </point>
  <point name="show.body6.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #发料料号
            CALL s_desc_get_item_desc(g_sfdb6_d[l_ac].sfdd001) RETURNING g_sfdb6_d[l_ac].sfdd001_desc,g_sfdb6_d[l_ac].sfdd001_desc2
            DISPLAY BY NAME g_sfdb6_d[l_ac].sfdd001_desc
            DISPLAY BY NAME g_sfdb6_d[l_ac].sfdd001_desc2

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_site
            LET g_ref_fields[2] = g_sfdb6_d[l_ac].sfdd003
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
            LET g_sfdb6_d[l_ac].sfdd003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfdb6_d[l_ac].sfdd003_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_site
            LET g_ref_fields[2] = g_sfdb6_d[l_ac].sfdd003
            LET g_ref_fields[3] = g_sfdb6_d[l_ac].sfdd004
            CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inabsite=? AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
            LET g_sfdb6_d[l_ac].sfdd004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfdb6_d[l_ac].sfdd004_desc

            CALL s_desc_get_unit_desc(g_sfdb6_d[l_ac].sfdd006) RETURNING g_sfdb6_d[l_ac].sfdd006_desc
            DISPLAY BY NAME g_sfdb6_d[l_ac].sfdd006_desc

            CALL s_desc_get_unit_desc(g_sfdb6_d[l_ac].sfdd008) RETURNING g_sfdb6_d[l_ac].sfdd008_desc
            DISPLAY BY NAME g_sfdb6_d[l_ac].sfdd008_desc
]]>
  </point>
  <point name="show.body5.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_site
            LET g_ref_fields[2] = g_sfdb5_d[l_ac].sfdf003
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
            LET g_sfdb5_d[l_ac].sfdf003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfdb5_d[l_ac].sfdf003_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_site
            LET g_ref_fields[2] = g_sfdb5_d[l_ac].sfdf003
            LET g_ref_fields[3] = g_sfdb5_d[l_ac].sfdf004
            CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inabsite=? AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
            LET g_sfdb5_d[l_ac].sfdf004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfdb5_d[l_ac].sfdf004_desc

            CALL s_desc_get_unit_desc(g_sfdb5_d[l_ac].sfdf006) RETURNING g_sfdb5_d[l_ac].sfdf006_desc
            DISPLAY BY NAME g_sfdb5_d[l_ac].sfdf006_desc

            CALL s_desc_get_unit_desc(g_sfdb5_d[l_ac].sfdf008) RETURNING g_sfdb5_d[l_ac].sfdf008_desc
            DISPLAY BY NAME g_sfdb5_d[l_ac].sfdf008_desc
]]>
  </point>
  <point name="show.body3.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #需求料号
      CALL s_desc_get_item_desc(g_sfdb3_d[l_ac].sfde001) RETURNING g_sfdb3_d[l_ac].sfde001_desc,g_sfdb3_d[l_ac].sfde001_desc2
      #DISPLAY BY NAME g_sfdb3_d[l_ac].sfde001_desc,g_sfdb3_d[l_ac].sfde001_desc2

#g_sfdb3_d[l_ac].imaf034,g_sfdb3_d[l_ac].imae092,
      #单位
      CALL s_desc_get_unit_desc(g_sfdb3_d[l_ac].sfde003) RETURNING g_sfdb3_d[l_ac].sfde003_desc

#g_sfdb3_d[l_ac].diff03,

      #参考单位
      CALL s_desc_get_unit_desc(g_sfdb3_d[l_ac].sfde006) RETURNING g_sfdb3_d[l_ac].sfde006_desc]]>
  </point>
  <point name="show.body2.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #单位
      CALL s_desc_get_unit_desc(g_sfdb2_d[l_ac].sfdc006) RETURNING g_sfdb2_d[l_ac].sfdc006_desc
      #参考单位
      CALL s_desc_get_unit_desc(g_sfdb2_d[l_ac].sfdc009) RETURNING g_sfdb2_d[l_ac].sfdc009_desc
      #理由码
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_sfdb2_d[l_ac].sfdc015
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='226' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_sfdb2_d[l_ac].sfdc015_desc = '', g_rtn_fields[1] , ''
      #需求料号品名规格
      CALL s_desc_get_item_desc(g_sfdb2_d[l_ac].sfdc004) RETURNING g_sfdb2_d[l_ac].sfdc004_desc,g_sfdb2_d[l_ac].sfdc004_desc2
      #保税料
      SELECT imaf034
        INTO g_sfdb2_d[l_ac].imaf034
        FROM imaf_t
       WHERE imafent = g_enterprise
         AND imafsite= g_site
         AND imaf001 = g_sfdb2_d[l_ac].sfdc004
      #发料前调拨
      SELECT imae092 INTO g_sfdb2_d[l_ac].imae092 FROM imae_t
       WHERE imaeent = g_enterprise
         AND imaesite= g_site
         AND imae001 = g_sfdb2_d[l_ac].sfdc004
      #差异数量
      LET g_sfdb2_d[l_ac].diff = g_sfdb2_d[l_ac].sfdc007 - g_sfdb2_d[l_ac].sfdc008
      #参考单位差异数量
      LET g_sfdb2_d[l_ac].diff2 = g_sfdb2_d[l_ac].sfdc010  - g_sfdb2_d[l_ac].sfdc011
      #库位名称
      CALL s_desc_get_stock_desc(g_sfdb2_d[l_ac].sfdc012) RETURNING g_sfdb2_d[l_ac].sfdc012_desc
      #储位名称
      CALL s_desc_get_locator_desc(g_sfdb2_d[l_ac].sfdc012,g_sfdb2_d[l_ac].sfdc013) RETURNING g_sfdb2_d[l_ac].sfdc013_desc
      #工单信息-部位、作业、制程序、客供料、应发料、已发量
      SELECT sfba002,sfba003,sfba004,sfba028,
             sfba013,sfba016,sfba001,sfaa011
        INTO g_sfdb2_d[l_ac].sfba002,g_sfdb2_d[l_ac].sfba003,g_sfdb2_d[l_ac].sfba004,g_sfdb2_d[l_ac].sfba028,
             g_sfdb2_d[l_ac].sfba013,g_sfdb2_d[l_ac].sfba016,l_sfba001,l_sfaa011
        FROM sfba_t,sfaa_t
       WHERE sfbaent = sfaaent
         AND sfbasite= sfaasite
         AND sfbadocno=sfaadocno
         AND sfbaent = g_enterprise
         AND sfbasite= g_site
         AND sfbadocno=g_sfdb2_d[l_ac].sfdc001
         AND sfbaseq = g_sfdb2_d[l_ac].sfdc002
         AND sfbaseq1= g_sfdb2_d[l_ac].sfdc003

      #部位说明
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = '215'
      LET g_chkparam.arg2 = g_sfdb2_d[l_ac].sfba002
      CALL cl_ref_val("v_oocql002")
      LET g_sfdb2_d[l_ac].sfba002_desc = g_chkparam.return1
      #作业说明
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = '221'
      LET g_chkparam.arg2 = g_sfdb2_d[l_ac].sfba003
      CALL cl_ref_val("v_oocql002")
      LET g_sfdb2_d[l_ac].sfba003_desc = g_chkparam.return1
      #replace取替代建议
      CALL s_abmm201_get_proposal(g_site,l_sfba001,l_sfaa011,g_sfdb2_d[l_ac].sfdc004,g_sfdb2_d[l_ac].sfba002,g_sfdb2_d[l_ac].sfba003,g_sfdb2_d[l_ac].sfba004) RETURNING g_sfdb2_d[l_ac].replace]]>
  </point>
  <point name="show.body.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #部位说明
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = '215'
      LET g_chkparam.arg2 = g_sfdb_d[l_ac].sfdb003
      CALL cl_ref_val("v_oocql002")
      LET g_sfdb_d[l_ac].sfdb003_desc = g_chkparam.return1
    
      #作业说明
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = '221'
      LET g_chkparam.arg2 = g_sfdb_d[l_ac].sfdb004
      CALL cl_ref_val("v_oocql002")
      LET g_sfdb_d[l_ac].sfdb004_desc = g_chkparam.return1
    
      SELECT sfaa010,imaal003,imaal004,sfaa013,sfaa012
        INTO g_sfdb_d[l_ac].sfaa010,g_sfdb_d[l_ac].sfaa010_desc,g_sfdb_d[l_ac].sfaa010_desc2,
             g_sfdb_d[l_ac].sfaa013,g_sfdb_d[l_ac].sfaa012
        FROM sfaa_t,imaal_t
       WHERE sfaaent = imaalent
         AND sfaa010 = imaal001
         AND imaal002 = g_dlang
         AND sfaaent   = g_enterprise
         AND sfaasite  = g_site
         AND sfaadocno = g_sfdb_d[l_ac].sfdb001]]>
  </point>
  <point name="input.a.sfdadocno" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF NOT cl_null(g_sfda_m.sfdadocno) THEN 
               #CALL asft310_chk_sfdadocno()
               #IF NOT cl_null(g_errno) THEN
               #   CALL cl_err(g_sfda_m.sfdadocno,g_errno,1)
               #   LET g_sfda_m.sfdadocno = g_sfdadocno_t
               #   NEXT FIELD CURRENT
               #END IF
               CALL s_aooi200_chk_slip(g_site,'',g_sfda_m.sfdadocno,'asft310')
               RETURNING l_success
               IF NOT l_success THEN
                  NEXT FIELD CURRENT
               END IF


               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfda_t WHERE "||"sfdaent = '" ||g_enterprise|| "' AND sfdasite = '" ||g_site|| "' AND "||"sfdadocno = '"||g_sfda_m.sfdadocno ||"'",'std-00004',0) THEN 
                     LET g_sfda_m.sfdadocno = g_sfdadocno_t
                     NEXT FIELD CURRENT
                  END IF
               END IF
               #CALL asft310_get_oobal004()
               #NEXT FIELD sfdadocdt
               CALL s_aooi200_get_slip_desc(g_site,'',g_sfda_m.sfdadocno)
                    RETURNING g_sfda_m.oobal004
               DISPLAY BY NAME g_sfda_m.oobal004

            END IF
]]>
  </point>
  <point name="input.a.sfda004" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfda_m.sfda004) THEN
               IF NOT s_employee_chk(g_sfda_m.sfda004) THEN
                  LET g_sfda_m.sfda004 = g_sfda_m_t.sfda004
                  NEXT FIELD sfda004
               END IF
            END IF
            
            CALL s_desc_get_person_desc(g_sfda_m.sfda004) RETURNING g_sfda_m.sfda004_desc
            DISPLAY BY NAME g_sfda_m.sfda004_desc]]>
  </point>
  <point name="input.a.sfda003" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfda_m.sfda003) THEN
               IF NOT asft310_chk_sfda003() THEN
                  LET g_sfda_m.sfda003 = g_sfda_m_t.sfda003
                  NEXT FIELD sfda003
               END IF   
            END IF 

            IF g_sfda_m.sfda002 = '15' THEN  #15.製程中委外發料時，顯示名稱為委外廠商
               #帶值:廠商名稱
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfda_m.sfda003
               CALL cl_ref_val("v_pmaal004")
               LET g_sfda_m.sfda003_desc = g_chkparam.return1
               DISPLAY BY NAME g_sfda_m.sfda003_desc
            ELSE
               #帶值:部门名稱
               CALL s_desc_get_department_desc(g_sfda_m.sfda003) RETURNING g_sfda_m.sfda003_desc
               DISPLAY BY NAME g_sfda_m.sfda003_desc
            END IF]]>
  </point>
  <point name="input.a.page7.inaoseq2" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfda_m.sfdadocno IS NOT NULL AND g_sfdb7_d[g_detail_idx].inaoseq IS NOT NULL AND g_sfdb7_d[g_detail_idx].inaoseq1 IS NOT NULL AND g_sfdb7_d[g_detail_idx].inaoseq2 IS NOT NULL AND g_sfdb7_d[g_detail_idx].inao000 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t OR g_sfdb7_d[g_detail_idx].inaoseq != g_sfdb7_d_t.inaoseq OR g_sfdb7_d[g_detail_idx].inaoseq1 != g_sfdb7_d_t.inaoseq1 OR g_sfdb7_d[g_detail_idx].inaoseq2 != g_sfdb7_d_t.inaoseq2 OR g_sfdb7_d[g_detail_idx].inao000 != g_sfdb7_d_t.inao000)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inao_t WHERE "||"inaoent = '" ||g_enterprise|| "' AND inaosite = '" ||g_site|| "' AND "||"inaodocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "inaoseq = '"||g_sfdb7_d[g_detail_idx].inaoseq ||"' AND "|| "inaoseq1 = '"||g_sfdb7_d[g_detail_idx].inaoseq1 ||"' AND "|| "inaoseq2 = '"||g_sfdb7_d[g_detail_idx].inaoseq2 ||"' AND "|| "inao000 = '"||g_sfdb7_d[g_detail_idx].inao000 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page7.inaoseq1" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfda_m.sfdadocno IS NOT NULL AND g_sfdb7_d[g_detail_idx].inaoseq IS NOT NULL AND g_sfdb7_d[g_detail_idx].inaoseq1 IS NOT NULL AND g_sfdb7_d[g_detail_idx].inaoseq2 IS NOT NULL AND g_sfdb7_d[g_detail_idx].inao000 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t OR g_sfdb7_d[g_detail_idx].inaoseq != g_sfdb7_d_t.inaoseq OR g_sfdb7_d[g_detail_idx].inaoseq1 != g_sfdb7_d_t.inaoseq1 OR g_sfdb7_d[g_detail_idx].inaoseq2 != g_sfdb7_d_t.inaoseq2 OR g_sfdb7_d[g_detail_idx].inao000 != g_sfdb7_d_t.inao000)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inao_t WHERE "||"inaoent = '" ||g_enterprise|| "' AND inaosite = '" ||g_site|| "' AND "||"inaodocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "inaoseq = '"||g_sfdb7_d[g_detail_idx].inaoseq ||"' AND "|| "inaoseq1 = '"||g_sfdb7_d[g_detail_idx].inaoseq1 ||"' AND "|| "inaoseq2 = '"||g_sfdb7_d[g_detail_idx].inaoseq2 ||"' AND "|| "inao000 = '"||g_sfdb7_d[g_detail_idx].inao000 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page7.inaoseq" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfda_m.sfdadocno IS NOT NULL AND g_sfdb7_d[g_detail_idx].inaoseq IS NOT NULL AND g_sfdb7_d[g_detail_idx].inaoseq1 IS NOT NULL AND g_sfdb7_d[g_detail_idx].inaoseq2 IS NOT NULL AND g_sfdb7_d[g_detail_idx].inao000 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t OR g_sfdb7_d[g_detail_idx].inaoseq != g_sfdb7_d_t.inaoseq OR g_sfdb7_d[g_detail_idx].inaoseq1 != g_sfdb7_d_t.inaoseq1 OR g_sfdb7_d[g_detail_idx].inaoseq2 != g_sfdb7_d_t.inaoseq2 OR g_sfdb7_d[g_detail_idx].inao000 != g_sfdb7_d_t.inao000)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inao_t WHERE "||"inaoent = '" ||g_enterprise|| "' AND inaosite = '" ||g_site|| "' AND "||"inaodocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "inaoseq = '"||g_sfdb7_d[g_detail_idx].inaoseq ||"' AND "|| "inaoseq1 = '"||g_sfdb7_d[g_detail_idx].inaoseq1 ||"' AND "|| "inaoseq2 = '"||g_sfdb7_d[g_detail_idx].inaoseq2 ||"' AND "|| "inao000 = '"||g_sfdb7_d[g_detail_idx].inao000 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page7.inaodocno" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfda_m.sfdadocno IS NOT NULL AND g_sfdb7_d[g_detail_idx].inaodocno IS NOT NULL AND g_sfdb7_d[g_detail_idx].inaoseq IS NOT NULL AND g_sfdb7_d[g_detail_idx].inaoseq1 IS NOT NULL AND g_sfdb7_d[g_detail_idx].inaoseq2 IS NOT NULL AND g_sfdb7_d[g_detail_idx].inao000 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t OR g_sfdb7_d[g_detail_idx].inaodocno != g_sfdb7_d_t.inaodocno OR g_sfdb7_d[g_detail_idx].inaoseq != g_sfdb7_d_t.inaoseq OR g_sfdb7_d[g_detail_idx].inaoseq1 != g_sfdb7_d_t.inaoseq1 OR g_sfdb7_d[g_detail_idx].inaoseq2 != g_sfdb7_d_t.inaoseq2 OR g_sfdb7_d[g_detail_idx].inao000 != g_sfdb7_d_t.inao000)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inao_t WHERE "||"inaoent = '" ||g_enterprise|| "' AND inaosite = '" ||g_site|| "' AND "||"inaodocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "inaoseq = '"||g_sfdb7_d[g_detail_idx].inaodocno ||"' AND "|| "inaoseq1 = '"||g_sfdb7_d[g_detail_idx].inaoseq ||"' AND "|| "inaoseq2 = '"||g_sfdb7_d[g_detail_idx].inaoseq1 ||"' AND "|| "inao000 = '"||g_sfdb7_d[g_detail_idx].inaoseq2 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page7.inao001" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[1]]>
  </point>
  <point name="input.a.page7.inao000" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfda_m.sfdadocno IS NOT NULL AND g_sfdb7_d[g_detail_idx].inaoseq IS NOT NULL AND g_sfdb7_d[g_detail_idx].inaoseq1 IS NOT NULL AND g_sfdb7_d[g_detail_idx].inaoseq2 IS NOT NULL AND g_sfdb7_d[g_detail_idx].inao000 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t OR g_sfdb7_d[g_detail_idx].inaoseq != g_sfdb7_d_t.inaoseq OR g_sfdb7_d[g_detail_idx].inaoseq1 != g_sfdb7_d_t.inaoseq1 OR g_sfdb7_d[g_detail_idx].inaoseq2 != g_sfdb7_d_t.inaoseq2 OR g_sfdb7_d[g_detail_idx].inao000 != g_sfdb7_d_t.inao000)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inao_t WHERE "||"inaoent = '" ||g_enterprise|| "' AND inaosite = '" ||g_site|| "' AND "||"inaodocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "inaoseq = '"||g_sfdb7_d[g_detail_idx].inaoseq ||"' AND "|| "inaoseq1 = '"||g_sfdb7_d[g_detail_idx].inaoseq1 ||"' AND "|| "inaoseq2 = '"||g_sfdb7_d[g_detail_idx].inaoseq2 ||"' AND "|| "inao000 = '"||g_sfdb7_d[g_detail_idx].inao000 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page6.sfddseq1" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfda_m.sfdadocno IS NOT NULL AND g_sfdb2_d[g_detail_idx].sfdcseq IS NOT NULL AND g_sfdb6_d[g_detail_idx2].sfddseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t OR g_sfdb2_d[g_detail_idx].sfdcseq != g_sfdb2_d[g_detail_idx].sfdcseq OR g_sfdb6_d[g_detail_idx2].sfddseq1 != g_sfdb6_d_t.sfddseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfdd_t WHERE "||"sfddent = '" ||g_enterprise|| "' AND sfddsite = '" ||g_site|| "' AND "||"sfdddocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "sfddseq = '"||g_sfdb2_d[g_detail_idx].sfdcseq ||"' AND "|| "sfddseq1 = '"||g_sfdb6_d[g_detail_idx2].sfddseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_sfdb6_d[l_ac].sfddseq1) THEN
               IF g_sfdb6_d[l_ac].sfddseq1 < 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00002'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD sfddseq1
               END IF
            ELSE
               LET g_sfdb6_d[l_ac].sfddseq1 = g_sfdb6_d_t.sfddseq1
            END IF
]]>
  </point>
  <point name="input.a.page6.sfdd009" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfdb6_d[l_ac].sfdd009) AND g_sfdb6_d[l_ac].sfdd009 != g_sfdb6_d_t.sfdd009 THEN 
               #参考单位数量变化应该带动单位数量的变化
               CALL s_aimi190_get_convert(g_sfdb6_d[l_ac].sfdd001,g_sfdb6_d[l_ac].sfdd008,g_sfdb6_d[l_ac].sfdd006) RETURNING l_success,l_rate
               IF NOT l_success THEN
                  NEXT FIELD CURRENT
               END IF
               LET g_sfdb6_d[l_ac].sfdd007 = g_sfdb6_d[l_ac].sfdd009 * l_rate
               DISPLAY BY NAME g_sfdb6_d[l_ac].sfdd007
            END IF 
            #zll 暂不处理 當庫存參數未使用參考數量時隱藏不顯示
            #zll 暂不处理 當料號未使用參考單位時不可輸入]]>
  </point>
  <point name="input.a.page6.sfdd008" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfdb6_d[l_ac].sfdd008) THEN
               #校验带值
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfdb6_d[l_ac].sfdd008
               IF cl_chk_exist_and_ref_val("v_ooca001_1") THEN
                  #檢查成功時後續處理
                  LET g_sfdb6_d[l_ac].sfdd008_desc = g_chkparam.return1
                  DISPLAY BY NAME g_sfdb6_d[l_ac].sfdd008_desc
               ELSE
                  #檢查失敗時後續處理
                  LET g_sfdb6_d[l_ac].sfdd008 = g_sfdb6_d_t.sfdd008
                  NEXT FIELD CURRENT
               END IF
               
               #單位需與發料料號的基礎單位有轉換率
               IF NOT cl_null(g_sfdb6_d[l_ac].sfdd001) THEN
                  CALL s_aimi190_chk_base_convert(g_sfdb6_d[l_ac].sfdd001,g_sfdb6_d[l_ac].sfdd008) RETURNING l_success
                  IF NOT l_success THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
               #更新参考数量
               IF (g_sfdb6_d_t.sfdd008 IS NULL OR (g_sfdb6_d[l_ac].sfdd008 != g_sfdb6_d_t.sfdd008)) AND NOT cl_null(g_sfdb6_d[l_ac].sfdd006) AND NOT cl_null(g_sfdb6_d[l_ac].sfdd007) THEN
                  CALL s_aimi190_get_convert(g_sfdb6_d[l_ac].sfdd001,g_sfdb6_d[l_ac].sfdd006,g_sfdb6_d[l_ac].sfdd008) RETURNING l_success,l_rate
                  IF NOT l_success THEN
                     NEXT FIELD CURRENT
                  END IF
                  LET g_sfdb6_d[l_ac].sfdd009 = g_sfdb6_d[l_ac].sfdd007 * l_rate
                  DISPLAY BY NAME g_sfdb6_d[l_ac].sfdd009
               END IF
            END IF
]]>
  </point>
  <point name="input.a.page6.sfdd007" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfdb6_d[l_ac].sfdd007) THEN 
               #zll數量總數不可超過申請數量
               #如果发料料号=需求料号，考虑单位换算
               #如果已经被替代，则只考虑替代率
            END IF 
]]>
  </point>
  <point name="input.a.page6.sfdd006" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #单位
            IF NOT cl_null(g_sfdb6_d[l_ac].sfdd006) THEN
               #校验带值
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfdb6_d[l_ac].sfdd006
               IF cl_chk_exist_and_ref_val("v_ooca001_1") THEN
                  #檢查成功時後續處理
                  LET g_sfdb6_d[l_ac].sfdd006_desc = g_chkparam.return1
                  DISPLAY BY NAME g_sfdb6_d[l_ac].sfdd006_desc
               ELSE
                  #檢查失敗時後續處理
                  LET g_sfdb6_d[l_ac].sfdd006 = g_sfdb6_d_t.sfdd006
                  NEXT FIELD CURRENT
               END IF
               
               #單位需與發料料號的基礎單位有轉換率
               IF NOT cl_null(g_sfdb6_d[l_ac].sfdd001) THEN
                  CALL s_aimi190_chk_base_convert(g_sfdb6_d[l_ac].sfdd001,g_sfdb6_d[l_ac].sfdd006) RETURNING l_success
                  IF NOT l_success THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
               #替代率赋值：替代檔的替代率分子/分母計算出替代率,考虑需求单位和发料单位的一致性
               CALL asft310_get_sfdd002(g_sfdb4_d[g_detail_idx].sfdc004,g_sfdb6_d[l_ac].sfdd001,l_bmea011,l_bmea012,l_bmea013,l_bmba010,g_sfdb6_d[l_ac].sfdd006,g_sfdb4_d[g_detail_idx].sfdc006)
                  RETURNING g_sfdb6_d[l_ac].sfdd002
               DISPLAY BY NAME g_sfdb6_d[l_ac].sfdd002
               
               #zll 此处单身录入完后处理吧，next field比较难处理，除这个以外还需考虑没有取替代关系的
               IF NOT cl_null(g_sfdb6_d[l_ac].sfdd007) THEN  #申请数量
                  ##检查总数不可超过申请数量
                  #IF g_sfdb6_d[l_ac].sfdd007 / g_sfdb6_d[l_ac].sfdd002 + 其他行的 > g_sfdb4_d[g_detail_idx].sfdc007 THEN
                  #   NEXT FIELD sfdc007
                  #END IF
               END IF
               
            END IF
]]>
  </point>
  <point name="input.a.page6.sfdd004" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #储位
            IF NOT cl_null(g_sfdb6_d[l_ac].sfdd003) AND NOT cl_null(g_sfdb6_d[l_ac].sfdd004) THEN
               #校验带值说明
               CALL asft310_chk_loca(g_sfdb6_d[l_ac].sfdd003,g_sfdb6_d[l_ac].sfdd004) 
                  RETURNING l_success,g_sfdb6_d[l_ac].sfdd004_desc
               IF NOT l_success THEN
                  LET g_sfdb5_d[l_ac].sfdf004 = g_sfdb5_d_t.sfdf004
                  NEXT FIELD CURRENT
               END IF
               DISPLAY BY NAME g_sfdb6_d[l_ac].sfdd004_desc
            END IF]]>
  </point>
  <point name="input.a.page6.sfdd003" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_site
            LET g_ref_fields[2] = g_sfdb6_d[l_ac].sfdd003
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
            LET g_sfdb6_d[l_ac].sfdd003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfdb6_d[l_ac].sfdd003_desc
]]>
  </point>
  <point name="input.a.page6.sfdd001" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #需求发料料号
            #只允許存在取替代料或等於需求料號
            IF NOT cl_null(g_sfdb6_d[l_ac].sfdd001) THEN
               IF g_sfdb6_d[l_ac].sfdd001 != g_sfdb4_d[g_detail_idx].sfdc004 THEN
                  #检查是否存在替代关系，并将替代料与替代单位抓出来
                  #CALL s_abmm201_chk_replace_item  #zll这块bmea生效日期有疑问
                  #  RETURNING l_success,l_bmea011,l_bmea012,l_bmea013,l_bmba010
                  #IF NOT l_success THEN  #不存在取替代关系
                  #   NEXT FIELD CURRENT
                  #END IF
                  
                  #替代率赋值：替代檔的替代率分子/分母計算出替代率,考虑需求单位和发料单位的一致性
                  CALL asft310_get_sfdd002(g_sfdb4_d[g_detail_idx].sfdc004,g_sfdb6_d[l_ac].sfdd001,l_bmea011,l_bmea012,l_bmea013,l_bmba010,g_sfdb6_d[l_ac].sfdd006,g_sfdb4_d[g_detail_idx].sfdc006)
                     RETURNING g_sfdb6_d[l_ac].sfdd002
                  DISPLAY BY NAME g_sfdb6_d[l_ac].sfdd002
                  
                  #zll 此处单身录入完后处理吧，next field比较难处理，除这个以外还需考虑没有取替代关系的
                  #IF NOT cl_null(g_sfdb6_d[l_ac].sfdd007) THEN  #申请数量
                  #   #检查总数不可超过申请数量
                  #   IF g_sfdb6_d[l_ac].sfdd007 / g_sfdb6_d[l_ac].sfdd002 + 其他行的 > g_sfdb4_d[g_detail_idx].sfdc007 THEN
                  #      NEXT FIELD sfdc007
                  #   END IF
                  #END IF
               END IF
            END IF


            CALL s_desc_get_item_desc(g_sfdb6_d[l_ac].sfdd001) RETURNING g_sfdb6_d[l_ac].sfdd001_desc,g_sfdb6_d[l_ac].sfdd001_desc2
            DISPLAY BY NAME g_sfdb6_d[l_ac].sfdd001_desc
            DISPLAY BY NAME g_sfdb6_d[l_ac].sfdd001_desc2]]>
  </point>
  <point name="input.a.page5.sfdfseq1" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfda_m.sfdadocno IS NOT NULL AND g_sfdb3_d[g_detail_idx].sfdeseq IS NOT NULL AND g_sfdb5_d[g_detail_idx2].sfdfseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t OR g_sfdb3_d[g_detail_idx].sfdeseq != g_sfdb3_d[g_detail_idx].sfdeseq OR g_sfdb5_d[g_detail_idx2].sfdfseq1 != g_sfdb5_d_t.sfdfseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfdf_t WHERE "||"sfdfent = '" ||g_enterprise|| "' AND sfdfsite = '" ||g_site|| "' AND "||"sfdfdocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "sfdfseq = '"||g_sfdb3_d[g_detail_idx].sfdeseq ||"' AND "|| "sfdfseq1 = '"||g_sfdb5_d[g_detail_idx2].sfdfseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page5.sfdf009" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfdb5_d[l_ac].sfdf009) THEN 
               #zll不可小於0 上面您能否实现
               
               #zll以下暂不处理
               #當庫存參數未使用參考數量時隱藏不顯示
               #當料號未使用參考單位時不可輸入
            END IF 
]]>
  </point>
  <point name="input.a.page5.sfdf008" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #参考单位 
            #zll料件有使用參考單位時才可輸入  参数未定，暂不处理

            IF NOT cl_null(g_sfdb5_d[l_ac].sfdf008) THEN
               #校验带值说明
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfdb5_d[l_ac].sfdf008
               IF cl_chk_exist_and_ref_val("v_ooca001_1") THEN
                  #檢查成功時後續處理
                  LET g_sfdb5_d[l_ac].sfdf006_desc = g_chkparam.return1
                  DISPLAY BY NAME g_sfdb5_d[l_ac].sfdf008_desc
               ELSE
                  #檢查失敗時後續處理
                  LET g_sfdb5_d[l_ac].sfdf008 = g_sfdb5_d_t.sfdf008
                  NEXT FIELD CURRENT
               END IF
               
               #單位需與發料料號的基礎單位有轉換率
               CALL s_aimi190_chk_base_convert(g_sfdb5_d[l_ac].sfdf001,g_sfdb5_d[l_ac].sfdf008) RETURNING l_success
               IF NOT l_success THEN
                  NEXT FIELD CURRENT
               END IF
               
               #zll预设参考数量
               #數量*單位轉換率
               
            END IF]]>
  </point>
  <point name="input.a.page5.sfdf007" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfdb5_d[l_ac].sfdf007) THEN 
               #zll 不可小于等于0 上面这个不知道可否实现
               
               #zll數量總數不可超過申請數量sfdc的  可以跟sfde004比

               #zll预设参考数量
               #數量*單位轉換率
               
            END IF ]]>
  </point>
  <point name="input.a.page5.sfdf006" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfdb5_d[l_ac].sfdf006) THEN
               #校验带值说明
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfdb5_d[l_ac].sfdf006
               IF cl_chk_exist_and_ref_val("v_ooca001_1") THEN
                  #檢查成功時後續處理
                  LET g_sfdb5_d[l_ac].sfdf006_desc = g_chkparam.return1
                  DISPLAY BY NAME g_sfdb5_d[l_ac].sfdf006_desc
               ELSE
                  #檢查失敗時後續處理
                  LET g_sfdb5_d[l_ac].sfdf006 = g_sfdb5_d_t.sfdf006
                  NEXT FIELD CURRENT
               END IF
               
               #單位需與發料料號的基礎單位有轉換率
               CALL s_aimi190_chk_base_convert(g_sfdb5_d[l_ac].sfdf001,g_sfdb5_d[l_ac].sfdf006) RETURNING l_success
               IF NOT l_success THEN
                  NEXT FIELD CURRENT
               END IF
               
               #zll预设参考数量
               #數量*單位轉換率
               
            END IF]]>
  </point>
  <point name="input.a.page5.sfdf004" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #储位
            IF NOT cl_null(g_sfdb5_d[l_ac].sfdf003) AND NOT cl_null(g_sfdb5_d[l_ac].sfdf004) THEN
               #校验带值说明
               CALL asft310_chk_loca(g_sfdb5_d[l_ac].sfdf003,g_sfdb5_d[l_ac].sfdf004) 
                  RETURNING l_success,g_sfdb5_d[l_ac].sfdf004_desc
               IF NOT l_success THEN
                  LET g_sfdb5_d[l_ac].sfdf004 = g_sfdb5_d_t.sfdf004
                  NEXT FIELD CURRENT
               END IF
               DISPLAY BY NAME g_sfdb5_d[l_ac].sfdf004_desc
            END IF]]>
  </point>
  <point name="input.a.page5.sfdf003" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_site
            LET g_ref_fields[2] = g_sfdb5_d[l_ac].sfdf003
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
            LET g_sfdb5_d[l_ac].sfdf003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfdb5_d[l_ac].sfdf003_desc
]]>
  </point>
  <point name="input.a.page4.sfdcseq_4" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfda_m.sfdadocno IS NOT NULL AND g_sfdb4_d[g_detail_idx].sfdcseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t OR g_sfdb4_d[g_detail_idx].sfdcseq != g_sfdb4_d_t.sfdcseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfdc_t WHERE "||"sfdcent = '" ||g_enterprise|| "' AND sfdcsite = '" ||g_site|| "' AND "||"sfdcdocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "sfdcseq = '"||g_sfdb4_d[g_detail_idx].sfdcseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.sfdeseq" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfda_m.sfdadocno IS NOT NULL AND g_sfdb3_d[g_detail_idx].sfdeseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t OR g_sfdb3_d[g_detail_idx].sfdeseq != g_sfdb3_d_t.sfdeseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfde_t WHERE "||"sfdeent = '" ||g_enterprise|| "' AND sfdesite = '" ||g_site|| "' AND "||"sfdedocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "sfdeseq = '"||g_sfdb3_d[g_detail_idx].sfdeseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.sfdedocno" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfda_m.sfdadocno IS NOT NULL AND g_sfdb3_d[g_detail_idx].sfdedocno IS NOT NULL AND g_sfdb3_d[g_detail_idx].sfdeseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t OR g_sfdb3_d[g_detail_idx].sfdedocno != g_sfdb3_d_t.sfdedocno OR g_sfdb3_d[g_detail_idx].sfdeseq != g_sfdb3_d_t.sfdeseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfde_t WHERE "||"sfdeent = '" ||g_enterprise|| "' AND sfdesite = '" ||g_site|| "' AND "||"sfdedocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "sfdeseq = '"||g_sfdb3_d[g_detail_idx].sfdedocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.sfde006" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #参考单位
            CALL s_desc_get_unit_desc(g_sfdb3_d[l_ac].sfde006) RETURNING g_sfdb3_d[l_ac].sfde006_desc
            DISPLAY BY NAME g_sfdb3_d[l_ac].sfde006_desc
]]>
  </point>
  <point name="input.a.page3.sfde003" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #单位
            CALL s_desc_get_unit_desc(g_sfdb3_d[l_ac].sfde003) RETURNING g_sfdb3_d[l_ac].sfde003_desc
            DISPLAY BY NAME g_sfdb3_d[l_ac].sfde003_desc
]]>
  </point>
  <point name="input.a.page3.sfde001" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #需求料号
            CALL s_desc_get_item_desc(g_sfdb3_d[l_ac].sfde001) RETURNING g_sfdb3_d[l_ac].sfde001_desc,g_sfdb3_d[l_ac].sfde001_desc2
            DISPLAY BY NAME g_sfdb3_d[l_ac].sfde001_desc,g_sfdb3_d[l_ac].sfde001_desc2
]]>
  </point>
  <point name="input.a.page2.sfdcseq" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfda_m.sfdadocno IS NOT NULL AND g_sfdb2_d[g_detail_idx].sfdcseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t OR g_sfdb2_d[g_detail_idx].sfdcseq != g_sfdb2_d_t.sfdcseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfdc_t WHERE "||"sfdcent = '" ||g_enterprise|| "' AND sfdcsite = '" ||g_site|| "' AND "||"sfdcdocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "sfdcseq = '"||g_sfdb2_d[g_detail_idx].sfdcseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_sfdb2_d[l_ac].sfdcseq) THEN
               IF g_sfdb2_d[l_ac].sfdcseq < 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00002'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD sfdcseq
               END IF
            ELSE
               LET g_sfdb2_d[l_ac].sfdcseq = g_sfdb2_d_t.sfdcseq
            END IF
]]>
  </point>
  <point name="input.a.page2.sfdc015" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #理由码
            IF NOT cl_null(g_sfdb2_d[l_ac].sfdc015) THEN
               CALL s_azzi650_chk_exist_and_desc('226',g_sfdb2_d[l_ac].sfdc015) RETURNING l_success,g_sfdb2_d[l_ac].sfdc015_desc
               IF NOT l_success THEN
                  LET g_sfdb2_d[l_ac].sfdc015 = g_sfdb2_d_t.sfdc015
                  NEXT FIELD CURRENT
               END IF
               DISPLAY BY NAME g_sfdb2_d[l_ac].sfdc015_desc
            END IF]]>
  </point>
  <point name="input.a.page2.sfdc013" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #储位
            IF NOT cl_null(g_sfdb2_d[l_ac].sfdc013) AND NOT cl_null(g_sfdb2_d[l_ac].sfdc012) THEN
               #校验带值说明
               CALL asft310_chk_loca(g_sfdb2_d[l_ac].sfdc012,g_sfdb2_d[l_ac].sfdc013)
                  RETURNING l_success,g_sfdb2_d[l_ac].sfdc013_desc
               IF NOT l_success THEN
                  LET g_sfdb2_d[l_ac].sfdc013 = g_sfdb2_d_t.sfdc013
                  NEXT FIELD CURRENT
               END IF
               DISPLAY BY NAME g_sfdb2_d[l_ac].sfdc013_desc
            END IF]]>
  </point>
  <point name="input.a.page2.sfdc012" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #仓库
            IF NOT cl_null(g_sfdb2_d[l_ac].sfdc012) THEN
               #校验带值说明，保税否，成本仓否
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfdb2_d[l_ac].sfdc012
               IF cl_chk_exist_and_ref_val("v_inaa002_2") THEN
                  #檢查成功時後續處理
                  LET g_sfdb2_d[l_ac].sfdc012_desc = g_chkparam.return1
                  LET l_inaa015 = g_chkparam.return2
                  LET l_inaa010 = g_chkparam.return3
                  IF cl_null(l_inaa015) THEN LET l_inaa015='N' END IF
                  IF cl_null(l_inaa010) THEN LET l_inaa010='N' END IF
                  DISPLAY BY NAME g_sfdb2_d[l_ac].sfdc012_desc
               ELSE
                  #檢查失敗時後續處理
                  LET g_sfdb2_d[l_ac].sfdc012 = g_sfdb2_d_t.sfdc012
                  NEXT FIELD CURRENT
               END IF
               
               #如果储位已有，检查储位
               IF NOT cl_null(g_sfdb2_d[l_ac].sfdc013) THEN
                  #校验带值说明
                  CALL asft310_chk_loca(g_sfdb2_d[l_ac].sfdc012,g_sfdb2_d[l_ac].sfdc013)
                     RETURNING l_success,g_sfdb2_d[l_ac].sfdc013_desc
                  IF NOT l_success THEN
                     LET g_sfdb2_d[l_ac].sfdc012 = g_sfdb2_d_t.sfdc012
                     NEXT FIELD CURRENT
                  END IF
                  DISPLAY BY NAME g_sfdb2_d[l_ac].sfdc013_desc
               END IF
            
               #参数：生產非保稅料號，可由保稅倉發料
               #画面上的保税料栏位对应的是需求料号
               #这里的控制是对于生产料号是否保税料
               CALL cl_get_doc_para(g_enterprise,g_site,g_sfda_m.sfdadocno,'D-MFG-0031') RETURNING g_para
               SELECT sfaa010,imaf034 INTO l_sfaa010,l_imaf034 
                 FROM sfaa_t,imaf_t
                WHERE sfaaent = imafent
                  AND sfaasite= imafsite
                  AND sfaa010 = imaf001
                  AND sfaaent   = g_entprise
                  AND sfaasite  = g_site
                  AND sfaadocno = g_sfdb2_d[l_ac].sfdc001
               #當工單的生產料號=非保稅料，不可由保稅倉發料。
               IF l_imaf034='N' AND (g_para = '1' OR g_para = '2') THEN  #拒绝或警告
                  CASE
                     WHEN l_inaa015='Y' AND g_para = '1'
                          INITIALIZE g_errparam TO NULL
                          LET g_errparam.code = 'asr-00008'
                          LET g_errparam.extend = ''
                          LET g_errparam.popup = TRUE
                          CALL cl_err()

                          NEXT FIELD CURRENT
                     WHEN l_inaa015='Y' AND g_para = '2'
                          INITIALIZE g_errparam TO NULL
                          LET g_errparam.code = 'asr-00008'
                          LET g_errparam.extend = ''
                          LET g_errparam.popup = TRUE
                          CALL cl_err()

                  END CASE
               END IF
    
               #參數：客供料可由成本倉料領料
               CALL cl_get_doc_para(g_enterprise,g_site,g_sfda_m.sfdadocno,'D-MFG-0052') RETURNING g_para
               #1.拒絕時，只可輸入非成本倉。(2為警告)
               IF g_sfdb2_d[l_ac].sfba028='Y' AND (g_para = '1' OR g_para = '2') THEN  
                  CASE
                     WHEN l_inaa010='Y' AND g_para = '1' #拒绝
                          INITIALIZE g_errparam TO NULL
                          LET g_errparam.code = 'asf-00048'
                          LET g_errparam.extend = ''
                          LET g_errparam.popup = TRUE
                          CALL cl_err()

                          NEXT FIELD CURRENT
                     WHEN l_inaa010='Y' AND g_para = '2' #警告
                          INITIALIZE g_errparam TO NULL
                          LET g_errparam.code = 'asf-00048'
                          LET g_errparam.extend = ''
                          LET g_errparam.popup = TRUE
                          CALL cl_err()

                  END CASE
               END IF

               #指定庫位、儲位、批號時，判斷參數是否檢查在檢量，如需檢查在檢量，在庫存數-在檢數不足申請數量時不允許輸入
               #zll参数未找到
               #   在检量是从哪里计算的？
               #   库存数单位应该是由申请的单位来判断，但是库存数量是获取营运据点+料件编号的库存数量（这个已有元件），
               #           还是获取营运据点+料件编号+特征的库存数量？
            END IF
]]>
  </point>
  <point name="input.a.page2.sfdc010" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #参考单位申请数量
            IF g_ref_unit='Y' AND NOT cl_null(g_sfdb2_d[l_ac].sfdc009) AND cl_null(g_sfdb2_d[l_ac].sfdc010) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'aoo-00052'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               NEXT FIELD CURRENT
            END IF

            IF NOT cl_null(g_sfdb2_d[l_ac].sfdc010) THEN 
               #不可小于0
               IF g_sfdb2_d[l_ac].sfdc010 < 0 THEN
                  #资料不可小于0,请检查！,请录入大于等于0的资料
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axc-00024'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD CURRENT
               END IF
               
               #更新相关栏位-参考单位差异数量
               LET g_sfdb2_d[l_ac].diff2 = g_sfdb2_d[l_ac].sfdc010  - g_sfdb2_d[l_ac].sfdc011 
            END IF 
            ]]>
  </point>
  <point name="input.a.page2.sfdc009" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfdb2_d[l_ac].sfdc009) THEN
               #校验带值说明
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfdb2_d[l_ac].sfdc009
               IF cl_chk_exist_and_ref_val("v_ooca001_1") THEN
                  #檢查成功時後續處理
                  LET g_sfdb2_d[l_ac].sfdc009_desc = g_chkparam.return1
                  DISPLAY BY NAME g_sfdb2_d[l_ac].sfdc009_desc
               ELSE
                  #檢查失敗時後續處理
                  LET g_sfdb2_d[l_ac].sfdc009 = g_sfdb2_d_t.sfdc009
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
  </point>
  <point name="input.a.page2.sfdc006" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #单位
            CALL s_desc_get_unit_desc(g_sfdb2_d[l_ac].sfdc006) RETURNING g_sfdb2_d[l_ac].sfdc006_desc
            DISPLAY BY NAME g_sfdb2_d[l_ac].sfdc006_desc]]>
  </point>
  <point name="input.a.page2.sfdc004" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #需求料号
            IF NOT cl_null(g_sfdb2_d[l_ac].sfdc004) THEN
               IF NOT ap_chk_isExist(g_sfdb2_d[l_ac].sfdc004,"SELECT COUNT(*) FROM imaa_t WHERE imaaent = '" ||g_enterprise||"' AND imaa001 = ? ","aim-00001",1 ) THEN
                  LET g_sfdb2_d[l_ac].sfdc004 = g_sfdb2_d_t.sfdc004
                  NEXT FIELD sfdc004
               END IF
               IF NOT ap_chk_isExist(g_sfdb2_d[l_ac].sfdc004,"SELECT COUNT(*) FROM imaa_t WHERE imaaent = '" ||g_enterprise||"' AND imaa001 = ? AND (imaastus = 'Y' OR imaastus = 'N') ","aim-00002",1 ) THEN
                  LET g_sfdb2_d[l_ac].sfdc004 = g_sfdb2_d_t.sfdc004
                  NEXT FIELD sfdc004
               END IF
               IF NOT ap_chk_isExist(g_sfdb2_d[l_ac].sfdc004,"SELECT COUNT(*) FROM imaa_t WHERE imaaent = '" ||g_enterprise||"' AND imaa001 = ? AND (imaastus = 'Y' OR imaastus = 'X') ","aim-00121",1 ) THEN
                  LET g_sfdb2_d[l_ac].sfdc004 = g_sfdb2_d_t.sfdc004
                  NEXT FIELD sfdc004
               END IF
            END IF

            CALL s_desc_get_item_desc(g_sfdb2_d[l_ac].sfdc004) RETURNING g_sfdb2_d[l_ac].sfdc004_desc,g_sfdb2_d[l_ac].sfdc004_desc2
            DISPLAY BY NAME g_sfdb3_d[l_ac].sfde001_desc
            DISPLAY BY NAME g_sfdb3_d[l_ac].sfde001_desc2]]>
  </point>
  <point name="input.a.page1.sfdb006" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CASE WHEN g_sfda_m.sfda002 = "11" OR g_sfda_m.sfda002 = "14" #成套发料、倒扣料
                      CALL asft310_get_max_set(l_cmd,'1') RETURNING l_sfdb006
                      IF g_sfdb_d[l_ac].sfdb006 > l_sfdb006 THEN
                         #不可超过最大可发料套数1%,请重新输入！
                         INITIALIZE g_errparam TO NULL
                         LET g_errparam.code = 'asf-00042'
                         LET g_errparam.extend = ''
                         LET g_errparam.popup = TRUE
                         LET g_errparam.replace[1] = l_sfdb006
                         CALL cl_err()

                         NEXT FIELD CURRENT
                      END IF
                 WHEN g_sfda_m.sfda002 = "15"    #制程中委外发料
                      CALL asft310_get_max_set(l_cmd,'5') RETURNING l_sfdb006
                      IF g_sfdb_d[l_ac].sfdb006 > l_sfdb006 THEN
                         #不可超过最大可发料套数1%,请重新输入！
                         INITIALIZE g_errparam TO NULL
                         LET g_errparam.code = 'asf-00042'
                         LET g_errparam.extend = ''
                         LET g_errparam.popup = TRUE
                         LET g_errparam.replace[1] = l_sfdb006
                         CALL cl_err()

                         NEXT FIELD CURRENT
                      END IF
            END CASE]]>
  </point>
  <point name="input.a.page1.sfdb005" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfda_m.sfdadocno IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb001 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb002 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb003 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb004 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb005 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t OR g_sfdb_d[g_detail_idx].sfdb001 != g_sfdb_d_t.sfdb001 OR g_sfdb_d[g_detail_idx].sfdb002 != g_sfdb_d_t.sfdb002 OR g_sfdb_d[g_detail_idx].sfdb003 != g_sfdb_d_t.sfdb003 OR g_sfdb_d[g_detail_idx].sfdb004 != g_sfdb_d_t.sfdb004 OR g_sfdb_d[g_detail_idx].sfdb005 != g_sfdb_d_t.sfdb005)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfdb_t WHERE "||"sfdbent = '" ||g_enterprise|| "' AND sfdbsite = '" ||g_site|| "' AND "||"sfdbdocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "sfdb001 = '"||g_sfdb_d[g_detail_idx].sfdb001 ||"' AND "|| "sfdb002 = '"||g_sfdb_d[g_detail_idx].sfdb002 ||"' AND "|| "sfdb003 = '"||g_sfdb_d[g_detail_idx].sfdb003 ||"' AND "|| "sfdb004 = '"||g_sfdb_d[g_detail_idx].sfdb004 ||"' AND "|| "sfdb005 = '"||g_sfdb_d[g_detail_idx].sfdb005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_sfdb_d[g_detail_idx].sfdb005) THEN
               IF g_sfda_m.sfda002='15' THEN
                  #作业+制程序需存在工单制程档中(sfcb003+sfcb004)，且为可委外(sfcb012=Y)
                  IF NOT cl_null(g_sfdb_d[l_ac].sfdb001) AND NOT cl_null(g_sfdb_d[l_ac].sfdb002) THEN
                     SELECT COUNT(*) INTO l_cnt FROM sfcb_t
                      WHERE sfcbent = g_enterprise
                        AND sfcbsite= g_site
                        AND sfcbdocno=g_sfdb_d[l_ac].sfdb001  #工单单号
                        AND sfcb001 = g_sfdb_d[l_ac].sfdb002  #run card
                        AND sfcb003 = g_sfdb_d[l_ac].sfdb004  #作业
                        AND sfcb012 = 'Y'
                     IF l_cnt = 0 THEN
                        #工单+runcard+作业+制程序不存在于工单制程单身档中,请检查工单制程维护作业asft301中的资料！
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'asf-00040'
                        LET g_errparam.extend = g_sfdb_d[l_ac].sfdb004
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        NEXT FIELD CURRENT
                     END IF
                     
                     IF NOT cl_null(g_sfdb_d[l_ac].sfdb005) THEN
                        SELECT COUNT(*) INTO l_cnt FROM sfcb_t
                         WHERE sfcbent = g_enterprise
                           AND sfcbsite= g_site
                           AND sfcbdocno=g_sfdb_d[l_ac].sfdb001
                           AND sfcb001 = g_sfdb_d[l_ac].sfdb002  #run card
                           AND sfcb003 = g_sfdb_d[l_ac].sfdb004  #作业
                           AND sfcb004 = g_sfdb_d[l_ac].sfdb005  #制程序
                           AND sfcb012 = 'Y'
                        IF l_cnt = 0 THEN
                           LET g_sfdb_d[l_ac].sfdb005 = ' '
                        END IF
                     END IF
                  END IF
               ELSE
            　    #检查是否存在工单单身
                  SELECT COUNT(*) INTO l_cnt FROM sfba_t
                   WHERE sfbaent = g_enterprise
                     AND sfbasite= g_site
                     AND sfbadocno=g_sfdb_d[l_ac].sfdb001
                     AND sfba003 = g_sfdb_d[l_ac].sfdb004  #作业
                     AND sfba004 = g_sfdb_d[l_ac].sfdb005  #制程序
                  IF l_cnt = 0 THEN
                     #不存在于 对应工单的单身栏位 中,请检查工单维护作业asft300中的资料!
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00039'
                     LET g_errparam.extend = g_sfdb_d[l_ac].sfdb005
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     NEXT FIELD CURRENT
                  END IF
               END IF
               
            END IF
            
            IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdb_d[g_detail_idx].sfdb002 != g_sfdb_d_t.sfdb002)) THEN
               #计算预计套数
               CALL asft310_def_sfdb006(p_cmd)
            END IF
]]>
  </point>
  <point name="input.a.page1.sfdb004" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfda_m.sfdadocno IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb001 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb002 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb003 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb004 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb005 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t OR g_sfdb_d[g_detail_idx].sfdb001 != g_sfdb_d_t.sfdb001 OR g_sfdb_d[g_detail_idx].sfdb002 != g_sfdb_d_t.sfdb002 OR g_sfdb_d[g_detail_idx].sfdb003 != g_sfdb_d_t.sfdb003 OR g_sfdb_d[g_detail_idx].sfdb004 != g_sfdb_d_t.sfdb004 OR g_sfdb_d[g_detail_idx].sfdb005 != g_sfdb_d_t.sfdb005)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfdb_t WHERE "||"sfdbent = '" ||g_enterprise|| "' AND sfdbsite = '" ||g_site|| "' AND "||"sfdbdocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "sfdb001 = '"||g_sfdb_d[g_detail_idx].sfdb001 ||"' AND "|| "sfdb002 = '"||g_sfdb_d[g_detail_idx].sfdb002 ||"' AND "|| "sfdb003 = '"||g_sfdb_d[g_detail_idx].sfdb003 ||"' AND "|| "sfdb004 = '"||g_sfdb_d[g_detail_idx].sfdb004 ||"' AND "|| "sfdb005 = '"||g_sfdb_d[g_detail_idx].sfdb005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            IF NOT cl_null(g_sfdb_d[l_ac].sfdb004) THEN
               IF g_sfda_m.sfda002='15' THEN
                  #作业+制程序需存在工单制程档中(sfcb003+sfcb004)，且为可委外(sfcb012=Y)
                  IF NOT cl_null(g_sfdb_d[l_ac].sfdb001) AND NOT cl_null(g_sfdb_d[l_ac].sfdb002) THEN
                     SELECT COUNT(*) INTO l_cnt FROM sfcb_t
                      WHERE sfcbent = g_enterprise
                        AND sfcbsite= g_site
                        AND sfcbdocno=g_sfdb_d[l_ac].sfdb001  #工单单号
                        AND sfcb001 = g_sfdb_d[l_ac].sfdb002  #run card
                        AND sfcb003 = g_sfdb_d[l_ac].sfdb004  #作业
                        AND sfcb012 = 'Y'
                     IF l_cnt = 0 THEN
                        #工单+runcard+作业+制程序不存在于工单制程单身档中,请检查工单制程维护作业asft301中的资料！
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'asf-00040'
                        LET g_errparam.extend = g_sfdb_d[l_ac].sfdb004
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        NEXT FIELD CURRENT
                     END IF
                     
                     IF NOT cl_null(g_sfdb_d[l_ac].sfdb005) THEN
                        SELECT COUNT(*) INTO l_cnt FROM sfcb_t
                         WHERE sfcbent = g_enterprise
                           AND sfcbsite= g_site
                           AND sfcbdocno=g_sfdb_d[l_ac].sfdb001
                           AND sfcb001 = g_sfdb_d[l_ac].sfdb002  #run card
                           AND sfcb003 = g_sfdb_d[l_ac].sfdb004  #作业
                           AND sfcb004 = g_sfdb_d[l_ac].sfdb005  #制程序
                           AND sfcb012 = 'Y'
                        IF l_cnt = 0 THEN
                           LET g_sfdb_d[l_ac].sfdb005 = ' '
                        END IF
                     END IF
                  END IF
               ELSE
                  IF NOT cl_null(g_sfdb_d[l_ac].sfdb004) AND NOT cl_null(g_sfdb_d[l_ac].sfdb001) THEN
                  　 #检查是否存在工单单身
                     SELECT COUNT(*) INTO l_cnt FROM sfba_t
                      WHERE sfbaent = g_enterprise
                        AND sfbasite= g_site
                        AND sfbadocno=g_sfdb_d[l_ac].sfdb001
                        AND sfba003 = g_sfdb_d[l_ac].sfdb004  #作业
                     IF l_cnt = 0 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'asf-00039'
                        LET g_errparam.extend = g_sfdb_d[l_ac].sfdb004
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        #不存在于 对应工单的单身栏位 中,请检查工单维护作业asft300中的资料!
                        NEXT FIELD CURRENT
                     END IF
                  
                     #检查+作业编号是否存在工单单身
                     IF NOT cl_null(g_sfdb_d[l_ac].sfdb003) THEN
                        SELECT COUNT(*) INTO l_cnt FROM sfba_t
                         WHERE sfbaent = g_enterprise
                           AND sfbasite= g_site
                           AND sfbadocno=g_sfdb_d[l_ac].sfdb001
                           AND sfba002 = g_sfdb_d[l_ac].sfdb003  #部位
                           AND sfba003 = g_sfdb_d[l_ac].sfdb004  #作业编号
                        IF l_cnt = 0 THEN
                           #工单+作业+制程序不存在于工单单身档中，请检查工单维护作业asft300中的资料！
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = 'asf-00059'
                           LET g_errparam.extend = g_sfdb_d[l_ac].sfdb004
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                           NEXT FIELD CURRENT
                        END IF
                     END IF
                  END IF
               END IF
               
               IF cl_null(g_sfdb_d[l_ac].sfdb005) THEN
                  CALL asft310_def_sfdb005()
               END IF
               
               #作业说明
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = '221'
               LET g_chkparam.arg2 = g_sfdb_d[l_ac].sfdb004
               CALL cl_ref_val("v_oocql002")
               LET g_sfdb_d[l_ac].sfdb004_desc = g_chkparam.return1
               DISPLAY BY NAME g_sfdb_d[l_ac].sfdb004_desc
            END IF

            IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdb_d[g_detail_idx].sfdb002 != g_sfdb_d_t.sfdb002)) THEN
               #计算预计套数
               CALL asft310_def_sfdb006(p_cmd)
            END IF
            
            #sfdb005 制程序：输入性：有输入作业时才可以输入
            CALL cl_set_comp_entry("sfdb005",FALSE)
            IF NOT cl_null(g_sfdb_d[g_detail_idx].sfdb004) THEN
               CALL cl_set_comp_entry("sfdb005",TRUE)
            END IF]]>
  </point>
  <point name="input.a.page1.sfdb003" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfda_m.sfdadocno IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb001 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb002 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb003 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb004 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb005 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t OR g_sfdb_d[g_detail_idx].sfdb001 != g_sfdb_d_t.sfdb001 OR g_sfdb_d[g_detail_idx].sfdb002 != g_sfdb_d_t.sfdb002 OR g_sfdb_d[g_detail_idx].sfdb003 != g_sfdb_d_t.sfdb003 OR g_sfdb_d[g_detail_idx].sfdb004 != g_sfdb_d_t.sfdb004 OR g_sfdb_d[g_detail_idx].sfdb005 != g_sfdb_d_t.sfdb005)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfdb_t WHERE "||"sfdbent = '" ||g_enterprise|| "' AND sfdbsite = '" ||g_site|| "' AND "||"sfdbdocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "sfdb001 = '"||g_sfdb_d[g_detail_idx].sfdb001 ||"' AND "|| "sfdb002 = '"||g_sfdb_d[g_detail_idx].sfdb002 ||"' AND "|| "sfdb003 = '"||g_sfdb_d[g_detail_idx].sfdb003 ||"' AND "|| "sfdb004 = '"||g_sfdb_d[g_detail_idx].sfdb004 ||"' AND "|| "sfdb005 = '"||g_sfdb_d[g_detail_idx].sfdb005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            IF NOT cl_null(g_sfdb_d[l_ac].sfdb003) AND NOT cl_null(g_sfdb_d[l_ac].sfdb001) THEN
            　 #检查是否存在工单单身的部位
               SELECT COUNT(*) INTO l_cnt FROM sfba_t
                WHERE sfbaent = g_enterprise
                  AND sfbasite= g_site
                  AND sfbadocno=g_sfdb_d[l_ac].sfdb001
                  AND sfba002 = g_sfdb_d[l_ac].sfdb003  #部位
               IF l_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'asf-00039'
                  LET g_errparam.extend = g_sfdb_d[l_ac].sfdb003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD CURRENT
               END IF
            
               #检查+作业编号是否存在工单单身
               IF NOT cl_null(g_sfdb_d[l_ac].sfdb004) THEN
                  SELECT COUNT(*) INTO l_cnt FROM sfba_t
                   WHERE sfbaent = g_enterprise
                     AND sfbasite= g_site
                     AND sfbadocno=g_sfdb_d[l_ac].sfdb001
                     AND sfba002 = g_sfdb_d[l_ac].sfdb003  #部位
                     AND sfba003 = g_sfdb_d[l_ac].sfdb004  #作业编号
                  IF l_cnt = 0 THEN
                     #工单+作业+制程序不存在于工单单身档中，请检查工单维护作业asft300中的资料！
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00059'
                     LET g_errparam.extend = g_sfdb_d[l_ac].sfdb003
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            #部位说明
            INITIALIZE g_chkparam.* TO NULL
            LET g_chkparam.arg1 = '215'
            LET g_chkparam.arg2 = g_sfdb_d[l_ac].sfdb003
            CALL cl_ref_val("v_oocql002")
            LET g_sfdb_d[l_ac].sfdb003_desc = g_chkparam.return1
            DISPLAY BY NAME g_sfdb_d[l_ac].sfdb003_desc
               
            IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdb_d[g_detail_idx].sfdb002 != g_sfdb_d_t.sfdb002)) THEN
               #计算预计套数
               CALL asft310_def_sfdb006(p_cmd)
            END IF
]]>
  </point>
  <point name="input.a.page1.sfdb002" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfda_m.sfdadocno IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb001 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb002 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb003 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb004 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb005 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t OR g_sfdb_d[g_detail_idx].sfdb001 != g_sfdb_d_t.sfdb001 OR g_sfdb_d[g_detail_idx].sfdb002 != g_sfdb_d_t.sfdb002 OR g_sfdb_d[g_detail_idx].sfdb003 != g_sfdb_d_t.sfdb003 OR g_sfdb_d[g_detail_idx].sfdb004 != g_sfdb_d_t.sfdb004 OR g_sfdb_d[g_detail_idx].sfdb005 != g_sfdb_d_t.sfdb005)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfdb_t WHERE "||"sfdbent = '" ||g_enterprise|| "' AND sfdbsite = '" ||g_site|| "' AND "||"sfdbdocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "sfdb001 = '"||g_sfdb_d[g_detail_idx].sfdb001 ||"' AND "|| "sfdb002 = '"||g_sfdb_d[g_detail_idx].sfdb002 ||"' AND "|| "sfdb003 = '"||g_sfdb_d[g_detail_idx].sfdb003 ||"' AND "|| "sfdb004 = '"||g_sfdb_d[g_detail_idx].sfdb004 ||"' AND "|| "sfdb005 = '"||g_sfdb_d[g_detail_idx].sfdb005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_sfdb_d[g_detail_idx].sfdb002) THEN
               #检查是否在工单制程档中的Run Card内(asft301)
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_site
               LET g_chkparam.arg2 = g_sfdb_d[g_detail_idx].sfdb001
               LET g_chkparam.arg3 = g_sfdb_d[g_detail_idx].sfdb002
               IF NOT cl_chk_exist("v_sfca001") THEN
                  NEXT FIELD CURRENT
               END IF

               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdb_d[g_detail_idx].sfdb002 != g_sfdb_d_t.sfdb002)) THEN
                  #计算预计套数
                  CALL asft310_def_sfdb006(p_cmd)
               END IF
            END IF
]]>
  </point>
  <point name="input.a.page1.sfdb001" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfda_m.sfdadocno IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb001 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb002 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb003 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb004 IS NOT NULL AND g_sfdb_d[g_detail_idx].sfdb005 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t OR g_sfdb_d[g_detail_idx].sfdb001 != g_sfdb_d_t.sfdb001 OR g_sfdb_d[g_detail_idx].sfdb002 != g_sfdb_d_t.sfdb002 OR g_sfdb_d[g_detail_idx].sfdb003 != g_sfdb_d_t.sfdb003 OR g_sfdb_d[g_detail_idx].sfdb004 != g_sfdb_d_t.sfdb004 OR g_sfdb_d[g_detail_idx].sfdb005 != g_sfdb_d_t.sfdb005)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfdb_t WHERE "||"sfdbent = '" ||g_enterprise|| "' AND sfdbsite = '" ||g_site|| "' AND "||"sfdbdocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "sfdb001 = '"||g_sfdb_d[g_detail_idx].sfdb001 ||"' AND "|| "sfdb002 = '"||g_sfdb_d[g_detail_idx].sfdb002 ||"' AND "|| "sfdb003 = '"||g_sfdb_d[g_detail_idx].sfdb003 ||"' AND "|| "sfdb004 = '"||g_sfdb_d[g_detail_idx].sfdb004 ||"' AND "|| "sfdb005 = '"||g_sfdb_d[g_detail_idx].sfdb005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_sfdb_d[g_detail_idx].sfdb001) THEN
               IF NOT asft310_sfdb001_chk() THEN
                  LET g_sfdb_d[g_detail_idx].sfdb001 = g_sfdb_d_t.sfdb001
                  NEXT FIELD CURRENT
               END IF

               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdb_d[g_detail_idx].sfdb001 != g_sfdb_d_t.sfdb001)) THEN 

                  CALL asft310_sfdb001_reference(l_cmd)
               END IF
            END IF
]]>
  </point>
  <point name="construct.c.sfdapstid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfdapstid  #顯示到畫面上

            NEXT FIELD sfdapstid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.sfdaownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfdaownid  #顯示到畫面上

            NEXT FIELD sfdaownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.sfdaowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfdaowndp  #顯示到畫面上

            NEXT FIELD sfdaowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.sfdamodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfdamodid  #顯示到畫面上

            NEXT FIELD sfdamodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.sfdacrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfdacrtid  #顯示到畫面上

            NEXT FIELD sfdacrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.sfdacrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfdacrtdp  #顯示到畫面上

            NEXT FIELD sfdacrtdp                     #返回原欄位

]]>
  </point>
  <point name="function.asft310_chk_sfdadocno" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 單別檢查
# Memo...........:
# Usage..........: CALL asft310_chk_sfdadocno()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2013/11/27 By zhangllc
# Modify.........:
################################################################################
PRIVATE FUNCTION asft310_chk_sfdadocno()
DEFINE l_cnt      LIKE type_t.num5

   LET g_errno = ""
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM oobl_t
    WHERE oobl001 IN (SELECT ooef004 FROM ooef_t
                       WHERE ooef001 = g_site
                         AND ooefent = g_enterprise )
      AND oobl002 = g_sfda_m.sfdadocno
      AND ooblent = g_enterprise
      AND oobl003 = g_prog
    IF l_cnt = 0 THEN
       LET g_errno = 'abm-00066'
    END IF
END FUNCTION]]>
  </point>
  <point name="function.asft310_get_oobal004" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 顯示單據說明
# Memo...........:
# Usage..........: CALL asft310_get_oobal004()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2013/11/27 By zhangllc
# Modify.........:
################################################################################
PRIVATE FUNCTION asft310_get_oobal004()
DEFINE l_ooef004       LIKE ooef_t.ooef004

   LET l_ooef004 = ""
   LET g_sfda_m.oobal004 = ""
   SELECT ooef004 INTO l_ooef004
     FROM ooef_t
    WHERE ooef001 = g_site
      AND ooefent = g_enterprise
   IF NOT cl_null(l_ooef004) THEN
      SELECT oobal004 INTO g_sfda_m.oobal004
        FROM oobal_t
       WHERE oobal001 = l_ooef004
         AND oobal002 = g_sfda_m.sfdadocno
         AND oobal003 = g_dlang
         AND oobalent = g_enterprise
   END IF
   DISPLAY BY NAME g_sfda_m.oobal004
END FUNCTION]]>
  </point>
  <point name="function.asft310_def_sfdb005" order="3" ver="3" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[########################################
#预设sfdb005作业序
########################################
PRIVATE FUNCTION asft310_def_sfdb005()
DEFINE l_sql     STRING

   ##预设工单制程内的本站作业对应的作业序第一笔
   #IF NOT cl_null(g_sfdb_d[g_detail_idx].sfdb005) THEN RETURN END IF
   #IF cl_null(g_sfdb_d[g_detail_idx].sfdb001) OR cl_null(g_sfdb_d[g_detail_idx].sfdb002)
   #OR cl_null(g_sfdb_d[g_detail_idx].sfdb004) THEN
   #   RETURN
   #END IF
   #
   #LET l_sql = " SELECT sfcb004  FROM sfcb_t ",
   #            "  WHERE sfcbent   = ",g_enterprise,
   #            "    AND sfcbsite  = '",g_site,"' ",
   #            "    AND sfcbdocno = '",g_sfdb_d[g_detail_idx].sfdb001,"' ",  #工单单号
   #            "    AND sfcb001   = '",g_sfdb_d[g_detail_idx].sfdb002,"' ",  #RUN CARD
   #            "    AND sfcb003   = '",g_sfdb_d[g_detail_idx].sfdb004,"' ",  #作业
   #            "  ORDER BY sfcb004 "
   #DECLARE asft310_def_sfdb005_c SCROLL CURSOR FROM l_sql                                                                                    
   #OPEN asft310_def_sfdb005_c                                                        
   #FETCH FIRST asft310_def_sfdb005_c INTO g_sfdb_d[g_detail_idx].sfdb005
   #CLOSE asft310_def_sfdb005_c
   #DISPLAY BY NAME g_sfdb_d[g_detail_idx].sfdb005

   #预设工单备料档内的本站作业对应的作业序第一笔
   IF NOT cl_null(g_sfdb_d[g_detail_idx].sfdb005) THEN RETURN END IF
   IF cl_null(g_sfdb_d[g_detail_idx].sfdb001) OR cl_null(g_sfdb_d[g_detail_idx].sfdb004) THEN
      RETURN
   END IF
   
   IF g_sfda_m.sfda002='15' OR g_sfda_m.sfda002='25' THEN
      IF cl_null(g_sfdb_d[g_detail_idx].sfdb002) THEN RETURN END IF
      LET l_sql = " SELECT sfcb004  FROM sfcb_t ",
                  "  WHERE sfcbent   = ",g_enterprise,
                  "    AND sfcbsite  = '",g_site,"' ",
                  "    AND sfcbdocno = '",g_sfdb_d[g_detail_idx].sfdb001,"' ",  #工单单号
                  "    AND sfcb001   = ",g_sfdb_d[g_detail_idx].sfdb002,     #Run card
                  "    AND sfcb003   = '",g_sfdb_d[g_detail_idx].sfdb004,"' "   #作业
      IF NOT cl_null(g_sfdb_d[g_detail_idx].sfdb003) THEN  #部位
         LET l_sql = l_sql CLIPPED," AND sfba002 = '",g_sfdb_d[g_detail_idx].sfdb003,"' "
      END IF
   ELSE
      LET l_sql = " SELECT sfba004  FROM sfba_t ",
                  "  WHERE sfbaent   = ",g_enterprise,
                  "    AND sfbasite  = '",g_site,"' ",
                  "    AND sfbadocno = '",g_sfdb_d[g_detail_idx].sfdb001,"' ",  #工单单号
                  "    AND sfba003   = '",g_sfdb_d[g_detail_idx].sfdb004,"' "   #作业
      IF NOT cl_null(g_sfdb_d[g_detail_idx].sfdb003) THEN  #部位
         LET l_sql = l_sql CLIPPED," AND sfba002 = '",g_sfdb_d[g_detail_idx].sfdb003,"' "
      END IF
   LET l_sql = l_sql CLIPPED," ORDER BY sfba004 "
   END IF
   DECLARE asft310_def_sfdb005_c SCROLL CURSOR FROM l_sql                                                                                    
   OPEN asft310_def_sfdb005_c                                                        
   FETCH FIRST asft310_def_sfdb005_c INTO g_sfdb_d[g_detail_idx].sfdb005
   CLOSE asft310_def_sfdb005_c
   DISPLAY BY NAME g_sfdb_d[g_detail_idx].sfdb005
END FUNCTION]]>
  </point>
  <point name="function.asft310_sfdb001_reference" order="4" ver="7" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[# Descriptions...: 发料套数中工单单号，相关字段值预设
PRIVATE FUNCTION asft310_sfdb001_reference(p_cmd)
DEFINE p_cmd       LIKE type_t.chr1     #a:新增 u:修改

   LET g_sfdb_d[g_detail_idx].sfaa010=''   #生产料号
   LET g_sfdb_d[g_detail_idx].sfaa010_desc=''
   LET g_sfdb_d[g_detail_idx].sfaa010_desc2=''
   LET g_sfdb_d[g_detail_idx].sfaa013=''   #生产单位
   LET g_sfdb_d[g_detail_idx].sfaa012=0    #生产数量
   SELECT sfaa010,imaal003,imaal004,sfaa013,sfaa012
     INTO g_sfdb_d[g_detail_idx].sfaa010,g_sfdb_d[g_detail_idx].sfaa010_desc,g_sfdb_d[g_detail_idx].sfaa010_desc2,
          g_sfdb_d[g_detail_idx].sfaa013,g_sfdb_d[g_detail_idx].sfaa012
     FROM sfaa_t LEFT JOIN imaal_t ON sfaaent = imaalent AND sfaa010 = imaal001 AND imaal002 = g_dlang
    WHERE sfaaent   = g_enterprise
      AND sfaasite  = g_site
      AND sfaadocno = g_sfdb_d[g_detail_idx].sfdb001

   #预设runcard
   LET g_sfdb_d[g_detail_idx].sfdb002 = ''
   SELECT sfca001 INTO g_sfdb_d[g_detail_idx].sfdb002 FROM sfca_t
    WHERE sfcaent = g_enterprise
      AND sfcasite= g_site
      AND sfcadocno=g_sfdb_d[g_detail_idx].sfdb001   #工单单号
   {SELECT COUNT(*) INTO l_cnt FROM sfca_t
    WHERE sfcaent = g_enterprise
      AND sfcasite= g_site
      AND sfcadocno=g_sfdb_d[g_detail_idx].sfdb001   #工单单号
   IF l_cnt = 1 THEN
   END IF}
   
   #计算预计套数
   CALL asft310_def_sfdb006(p_cmd) RETURNING g_sfdb_d[g_detail_idx].sfdb006
   CALL asft310_def_sfdb007()

END FUNCTION]]>
  </point>
  <point name="function.asft310_def_sfdb006" order="5" ver="7" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#预设sfdb006预计套数
#即：#计算最大可发料套数_分不同发料类型
PRIVATE FUNCTION asft310_def_sfdb006(p_cmd)
DEFINE p_cmd              LIKE type_t.chr1     #a:新增 u:修改
DEFINE r_sfdb006          LIKE sfdb_t.sfdb006  #最大可发预计套数

   LET r_sfdb006 = 0
   IF g_sfda_m.sfda002 = '11' THEN
      #mod 141229
      #CALL asft310_get_max_set(p_cmd,'11') RETURNING r_sfdb006
      CALL s_asft310_get_max_set(p_cmd,'11',g_sfda_m.sfdadocno,
                                 g_sfdb_d[g_detail_idx].sfdb001,g_sfdb_d[g_detail_idx].sfdb002,
                                 g_sfdb_d[g_detail_idx].sfdb003,g_sfdb_d[g_detail_idx].sfdb004,
                                 g_sfdb_d[g_detail_idx].sfdb005,
                                 g_sfdb_d_t.sfdb001,g_sfdb_d_t.sfdb002,g_sfdb_d_t.sfdb003,
                                 g_sfdb_d_t.sfdb004,g_sfdb_d_t.sfdb005,g_sfdb_d_t.sfdb006)
         RETURNING r_sfdb006
      #mod 141229 end
   ELSE
      LET r_sfdb006 = 0
   END IF
   
   IF g_sfda_m.sfda002 = '15' THEN #制程中委外发料
      #mod 141229
      #CALL asft310_get_max_set(p_cmd,'15') RETURNING r_sfdb006
      CALL s_asft310_get_max_set(p_cmd,'15',g_sfda_m.sfdadocno,
                                 g_sfdb_d[g_detail_idx].sfdb001,g_sfdb_d[g_detail_idx].sfdb002,
                                 g_sfdb_d[g_detail_idx].sfdb003,g_sfdb_d[g_detail_idx].sfdb004,
                                 g_sfdb_d[g_detail_idx].sfdb005,
                                 g_sfdb_d_t.sfdb001,g_sfdb_d_t.sfdb002,g_sfdb_d_t.sfdb003,
                                 g_sfdb_d_t.sfdb004,g_sfdb_d_t.sfdb005,g_sfdb_d_t.sfdb006)
         RETURNING r_sfdb006
      #mod 141229 end
   END IF
   
   RETURN r_sfdb006
END FUNCTION]]>
  </point>
  <point name="function.asft310_sfdb001_chk" order="6" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#检查发料套数表中的工单单号
PRIVATE FUNCTION asft310_sfdb001_chk()
DEFINE r_success   LIKE type_t.num5
DEFINE l_cnt       LIKE type_t.num5
DEFINE l_sfaadocdt LIKE sfaa_t.sfaadocdt  #150304 add

   LET r_success = TRUE

   #检查是否存在工单中，且为发放状态
   IF NOT s_asft300_chk_stus(g_sfdb_d[g_detail_idx].sfdb001,'F') THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #add 150304
   #检查工单的开单日期是否大于等于发退料的单据日期
   SELECT sfaadocdt INTO l_sfaadocdt FROM sfaa_t
    WHERE sfaaent   = g_enterprise
      AND sfaadocno = g_sfdb_d[g_detail_idx].sfdb001
   IF l_sfaadocdt > g_sfda_m.sfdadocdt THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00675'
      LET g_errparam.extend = l_sfaadocdt
      LET g_errparam.popup = FALSE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   #add 150304 end
   
   #add 141226
   #欠料补料检查是否有需补料的
   IF g_sfda_m.sfda002 = '13' THEN
      CALL asft310_chk_13(g_sfdb_d[g_detail_idx].sfdb001) RETURNING l_success
      IF NOT l_success THEN
         #无欠料，不需补料
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'asf-00665'
         LET g_errparam.extend = g_sfdb_d[g_detail_idx].sfdb001
         LET g_errparam.popup = FALSE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   #add 141226--end
   
   #检查PBI
   IF NOT cl_null(g_sfda_m.sfda005) THEN
      SELECT * FROM sfqb_t
       WHERE sfqbent   = g_enterprise
         AND sfqbdocno = g_sfda_m.sfda005
         AND sfqb001   = g_sfdb_d[g_detail_idx].sfdb001
      IF SQLCA.sqlcode THEN
         #工单单号:%1 与单头的 PBI号:%2 无相关性
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = 'asf-00471'
         LET g_errparam.extend = ""
         LET g_errparam.replace[1] = g_sfdb_d[g_detail_idx].sfdb001
         LET g_errparam.replace[2] = g_sfda_m.sfda005
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   
   #检查是否在工单制程档中的Run Card内(asft301)
   IF NOT cl_null(g_sfdb_d[g_detail_idx].sfdb002) THEN
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = g_site
      LET g_chkparam.arg2 = g_sfdb_d[g_detail_idx].sfdb001
      LET g_chkparam.arg3 = g_sfdb_d[g_detail_idx].sfdb002
      IF NOT cl_chk_exist("v_sfca001") THEN
         LET g_sfdb_d[l_ac].sfdb002 = ' '
      END IF
   END IF

   #检查是否存在工单单身的部位
   IF NOT cl_null(g_sfdb_d[l_ac].sfdb003) THEN
      SELECT COUNT(*) INTO l_cnt FROM sfba_t
       WHERE sfbaent = g_enterprise
         AND sfbasite= g_site
         AND sfbadocno=g_sfdb_d[l_ac].sfdb001
         AND sfba002 = g_sfdb_d[l_ac].sfdb003  #部位
      IF l_cnt = 0 THEN
         LET g_sfdb_d[l_ac].sfdb003 = '' #不能空格 否则required则不认识
      END IF
   END IF
   
   #检查是否存在工单单身的作业
   IF (g_sfda_m.sfda002!='15' AND g_sfda_m.sfda002!='25') AND NOT cl_null(g_sfdb_d[l_ac].sfdb004) THEN
      SELECT COUNT(*) INTO l_cnt FROM sfba_t
       WHERE sfbaent = g_enterprise
         AND sfbasite= g_site
         AND sfbadocno=g_sfdb_d[l_ac].sfdb001
         AND sfba003 = g_sfdb_d[l_ac].sfdb004  #作业
      IF l_cnt = 0 THEN
         LET g_sfdb_d[l_ac].sfdb004 = '' #不能空格 否则required则不认识
      END IF
   END IF
               
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asft310_sfdc003_reference" order="7" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#根据工单+项次+项序预设发料需求档的资料
PRIVATE FUNCTION asft310_sfdc003_reference(p_cmd)
DEFINE p_cmd            LIKE type_t.chr1     #a:新增 u:修改
DEFINE r_success        LIKE type_t.num5
#DEFINE l_sfaa010        LIKE sfaa_t.sfaa010  #生产料号
DEFINE l_sfba001        LIKE sfba_t.sfba001  #生产料号
DEFINE l_sfaa011        LIKE sfaa_t.sfaa011  #特性
DEFINE l_success        LIKE type_t.num5
DEFINE l_rate           LIKE inaj_t.inaj014  #单位换算率
DEFINE l_cnt            LIKE type_t.num5
DEFINE l_sfba008        LIKE sfba_t.sfba008  #必要性
DEFINE l_where          STRING
DEFINE l_flag2          LIKE type_t.num5   #s_control使用
DEFINE l_sfba025        LIKE sfba_t.sfba025 #超领量
DEFINE l_imaa005        LIKE imaa_t.imaa005  #产品特征
#DEFINE l_imae101        LIKE imae_t.imae101  #预设发料库位
#DEFINE l_imae102        LIKE imae_t.imae102  #预设发料储位
#DEFINE l_imae103        LIKE imae_t.imae103  #预设退料库位
#DEFINE l_imae104        LIKE imae_t.imae104  #预设退料储位
#mark 给发料前调拨使用的
DEFINE l_imaf091        LIKE imaf_t.imaf091
DEFINE l_imaf092        LIKE imaf_t.imaf092

   LET r_success = TRUE
   
   #PBI检查
   IF NOT cl_null(g_sfda_m.sfda005) THEN
      SELECT * FROM sfqb_t
       WHERE sfqbent   = g_enterprise
         AND sfqbdocno = g_sfda_m.sfda005
         AND sfqb001   = g_sfdc_d[l_ac].sfdc001
      IF SQLCA.sqlcode THEN
         #工单单号:%1 与单头的 PBI号:%2 无相关性
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = 'asf-00471'
         LET g_errparam.extend = ""
         LET g_errparam.replace[1] = g_sfdc_d[l_ac].sfdc001
         LET g_errparam.replace[2] = g_sfda_m.sfda005
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   
   #可超領工單未指定間接材料
   CALL s_aooi200_get_slip(g_sfda_m.sfdadocno) RETURNING l_success,g_ooba002
   CALL cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0071') RETURNING g_para
   
   LET g_sfdc_d[l_ac].sfba002 = ''   #部位
   LET g_sfdc_d[l_ac].sfba002_desc = ''
   LET g_sfdc_d[l_ac].sfba003 = ''   #作业
   LET g_sfdc_d[l_ac].sfba003_desc = ''
   LET g_sfdc_d[l_ac].sfba004 = ''   #作业序
   LET g_sfdc_d[l_ac].sfdc004 = ''   #需求料号
   LET g_sfdc_d[l_ac].sfdc004_desc=''
   LET g_sfdc_d[l_ac].sfdc004_desc2=''
   LET g_sfdc_d[l_ac].sfdc005 = ''   #特征
   LET g_sfdc_d[l_ac].sfdc005_desc=''
   LET g_sfdc_d[l_ac].sfba028 = ''   #客供料
   LET g_sfdc_d[l_ac].sfdc006 = ''   #单位
   LET g_sfdc_d[l_ac].sfdc006_desc=''
   LET g_sfdc_d[l_ac].sfdc007 = 0    #申请数量
   LET g_sfdc_d[l_ac].sfdc008 = 0    #实际数量
   LET g_sfdc_d[l_ac].diff = 0
   LET g_sfdc_d[l_ac].sfdc009 = ''   #参考单位
   LET g_sfdc_d[l_ac].sfdc009_desc=''
   LET g_sfdc_d[l_ac].sfdc010 = 0    #参考单位申请数量
   LET g_sfdc_d[l_ac].sfdc011 = 0    #参考单位实际数量
   LET g_sfdc_d[l_ac].diff2 = 0
   LET g_sfdc_d[l_ac].sfba013 = 0    #应发料
   LET g_sfdc_d[l_ac].sfba016 = 0    #已发量
   LET g_sfdc_d[l_ac].sfdc012 = ''   #指定库位
   LET g_sfdc_d[l_ac].sfdc012_desc=''
   LET g_sfdc_d[l_ac].sfdc013 = ''   #指定储位
   LET g_sfdc_d[l_ac].sfdc013_desc=''
   LET g_sfdc_d[l_ac].sfdc014 = ''   #指定批号
   LET g_sfdc_d[l_ac].sfdc015 = ''   #理由码
   LET g_sfdc_d[l_ac].sfdc015_desc=''
   LET g_sfdc_d[l_ac].sfdc016 = ''   #库存管理特征
   
   LET g_sfdc_d[l_ac].replace = ''
   LET g_sfdc_d[l_ac].imae092 = ''
   LET g_sfdc_d[l_ac].imaf034 = ''
   
   DISPLAY BY NAME g_sfdc_d[l_ac].sfba002_desc,g_sfdc_d[l_ac].sfba003_desc,
                   g_sfdc_d[l_ac].sfdc004_desc,g_sfdc_d[l_ac].sfdc004_desc2,
                   g_sfdc_d[l_ac].sfdc005_desc,
                   g_sfdc_d[l_ac].sfdc006_desc,g_sfdc_d[l_ac].sfdc009_desc,
                   g_sfdc_d[l_ac].sfdc012_desc,g_sfdc_d[l_ac].sfdc013_desc,
                   g_sfdc_d[l_ac].sfdc015_desc,g_sfdc_d[l_ac].replace,
                   g_sfdc_d[l_ac].imae092,g_sfdc_d[l_ac].imaf034
   
   SELECT sfba002,sfba003,sfba004,sfba006,
          sfba021,sfba028,sfba014,sfba013,
          sfba016,sfba019,sfba020,sfba029,
          sfba030,sfba001,sfaa011,sfba008,sfba025
     INTO g_sfdc_d[l_ac].sfba002,g_sfdc_d[l_ac].sfba003,g_sfdc_d[l_ac].sfba004,g_sfdc_d[l_ac].sfdc004,
          g_sfdc_d[l_ac].sfdc005,g_sfdc_d[l_ac].sfba028,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfba013,
          g_sfdc_d[l_ac].sfba016,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013,g_sfdc_d[l_ac].sfdc014,
          g_sfdc_d[l_ac].sfdc016,l_sfba001,l_sfaa011,l_sfba008,l_sfba025
     FROM sfba_t,sfaa_t
    WHERE sfbaent = sfaaent
      AND sfbasite= sfaasite
      AND sfbadocno=sfaadocno
      AND sfbaent = g_enterprise
      AND sfbasite= g_site
      AND sfbadocno=g_sfdc_d[l_ac].sfdc001
      AND sfbaseq = g_sfdc_d[l_ac].sfdc002
      AND sfbaseq1= g_sfdc_d[l_ac].sfdc003
   IF g_sfda_m.sfda002!='12' OR (g_sfda_m.sfda002='12' AND g_para='N') THEN
      IF SQLCA.sqlcode THEN
         #工单+项次+项序不存在工单单身档中,请检查工单维护作业asft300中的资料！
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'asf-00044'
         LET g_errparam.extend = g_sfdc_d[l_ac].sfdc001
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF
   ELSE
      IF SQLCA.sqlcode THEN
         RETURN r_success
      END IF
   END IF

   IF cl_null(g_sfdc_d[l_ac].sfdc012) AND cl_null(g_sfdc_d[l_ac].sfdc013)THEN  #工单未指定仓储
      #依料號設定的主要倉、儲
      #SELECT imae101,imae102,imae103,imae104
      #  INTO l_imae101,l_imae102,l_imae103,l_imae104
      #  FROM imae_t
      # WHERE imaeent = g_enterprise
      #   AND imaesite= g_site
      #   AND imae001 = g_sfdc_d[l_ac].sfdc004
      #IF g_prog[1,6] = 'asft31' THEN #发料
      #   LET g_sfdc_d[l_ac].sfdc012 = l_imae101
      #   LET g_sfdc_d[l_ac].sfdc013 = l_imae102
      #END IF
      #IF g_prog[1,6] = 'asft32' THEN #退料
      #   LET g_sfdc_d[l_ac].sfdc012 = l_imae103
      #   LET g_sfdc_d[l_ac].sfdc013 = l_imae104
      #END IF
      #mark 给发料前调拨使用的
      SELECT imaf091,imaf092
        INTO l_imaf091,l_imaf092
        FROM imaf_t
       WHERE imafent = g_enterprise
         AND imafsite= g_site
         AND imaf001 = g_sfdc_d[l_ac].sfdc004
      LET g_sfdc_d[l_ac].sfdc012 = l_imaf091
      LET g_sfdc_d[l_ac].sfdc013 = l_imaf092
   END IF

   IF l_sfba008 = '4' THEN  #参考材料
      #参考材料不需要发料，请确认！
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00310'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF

   #檢核輸入的料件的生命週期是否在單據別限制範圍內
   CALL s_control_chk_doc('4',g_sfda_m.sfdadocno,g_sfdc_d[l_ac].sfdc004,'','','','')
      RETURNING l_success,l_flag2    #处理状态否 存在否     都是num5类型
   IF NOT l_success OR NOT l_flag2 THEN
      #控制组检查错误,请检查单别设定的相关内容
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00122'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #檢核輸入的料件的產品分類是否在單據別限制範圍內
   CALL s_control_chk_doc('5',g_sfda_m.sfdadocno,g_sfdc_d[l_ac].sfdc004,'','','','')
      RETURNING l_success,l_flag2    #处理状态否 存在否     都是num5类型
   IF NOT l_success OR NOT l_flag2 THEN
      #控制组检查错误,请检查单别设定的相关内容
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00122'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF

   #超领退料检查超领量需要大于0的
   IF g_sfda_m.sfda002='22' AND l_sfba025 = 0 THEN
      #超领数量为0，不可退料
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00386'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   #一般退料检查已发数量需要大于0的
   IF g_sfda_m.sfda002='23' AND g_sfdc_d[l_ac].sfba016 = 0 THEN
      #已发数量为0，不可退料
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00385'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #部位说明
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = '215'
   LET g_chkparam.arg2 = g_sfdc_d[l_ac].sfba002
   CALL cl_ref_val("v_oocql002")
   LET g_sfdc_d[l_ac].sfba002_desc = g_chkparam.return1
   DISPLAY BY NAME g_sfdc_d[l_ac].sfba002_desc

   #作业说明
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = '221'
   LET g_chkparam.arg2 = g_sfdc_d[l_ac].sfba003
   CALL cl_ref_val("v_oocql002")
   LET g_sfdc_d[l_ac].sfba003_desc = g_chkparam.return1
   DISPLAY BY NAME g_sfdc_d[l_ac].sfba003_desc

   #replace取替代建议
   CALL s_abmm201_get_proposal(g_site,l_sfba001,l_sfaa011,g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfba002,g_sfdc_d[l_ac].sfba003,g_sfdc_d[l_ac].sfba004) RETURNING g_sfdc_d[l_ac].replace
   DISPLAY BY NAME g_sfdc_d[l_ac].replace
   
   #需求料号品名规格
   CALL s_desc_get_item_desc(g_sfdc_d[l_ac].sfdc004) RETURNING g_sfdc_d[l_ac].sfdc004_desc,g_sfdc_d[l_ac].sfdc004_desc2
   DISPLAY BY NAME g_sfdc_d[l_ac].sfdc004_desc
   DISPLAY BY NAME g_sfdc_d[l_ac].sfdc004_desc2
   
   ##产品特征
   #SELECT imaa005 INTO l_imaa005 FROM imaa_t
   # WHERE imaaent = g_enterprise
   #   AND imaa001 = g_sfdc_d[l_ac].sfdc004
   #IF cl_null(l_imaa005) THEN  #不做产品特征管理
   #   LET g_sfdc_d[l_ac].sfdc005 = ' '
   #END IF
   #mark 不需要 资料肯定会自动变的，只要工单维护的时候卡控住就好了
   #显示产品特征说明
   CALL s_feature_description(g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005)
      RETURNING l_success,g_sfdc_d[l_ac].sfdc005_desc
   IF NOT l_success THEN
      LET g_sfdc_d[l_ac].sfdc005_desc = ''
   END IF
   DISPLAY BY NAME g_sfdc_d[l_ac].sfdc005_desc
   
   #单位
   CALL s_desc_get_unit_desc(g_sfdc_d[l_ac].sfdc006) RETURNING g_sfdc_d[l_ac].sfdc006_desc
   DISPLAY BY NAME g_sfdc_d[l_ac].sfdc006_desc
   
   #保税料,参考单位
   SELECT imaf034,imaf015
     INTO g_sfdc_d[l_ac].imaf034,g_sfdc_d[l_ac].sfdc009
     FROM imaf_t
    WHERE imafent = g_enterprise
      AND imafsite= g_site
      AND imaf001 = g_sfdc_d[l_ac].sfdc004
   DISPLAY BY NAME g_sfdc_d[l_ac].imaf034
   IF NOT cl_null(g_sfdc_d[l_ac].sfdc009) THEN
      CALL s_desc_get_unit_desc(g_sfdc_d[l_ac].sfdc009) RETURNING g_sfdc_d[l_ac].sfdc009_desc
      DISPLAY BY NAME g_sfdc_d[l_ac].sfdc009_desc
   END IF

   #发料前调拨
   SELECT imae092 INTO g_sfdc_d[l_ac].imae092 FROM imae_t
    WHERE imaeent = g_enterprise
      AND imaesite= g_site
      AND imae001 = g_sfdc_d[l_ac].sfdc004
   DISPLAY BY NAME g_sfdc_d[l_ac].imae092
   
   CALL asft310_def_sfdc007(p_cmd) RETURNING g_sfdc_d[l_ac].sfdc007    #sfdc007申请数量
   #add 141226
   IF g_sfda_m.sfda002='13' AND g_sfdc_d[l_ac].sfdc007 = 0 THEN
      #无欠料，不需补料
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00665'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   #add 141226 end
   LET g_sfdc_d[l_ac].sfdc008 = g_sfdc_d[l_ac].sfdc007        #实际数量
   LET g_sfdc_d[l_ac].diff = g_sfdc_d[l_ac].sfdc007 - g_sfdc_d[l_ac].sfdc008  #差异数量
   
   IF NOT cl_null(g_sfdc_d[l_ac].sfdc009) THEN
      #参考单位申请数量=申请数量经过转换率换算为参考单位的数量
      #mod 150101
      #CALL s_aimi190_get_convert(g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc009)
      #   RETURNING l_success,l_rate
      #IF NOT l_success THEN
      #   LET l_rate = 1
      #END IF
      #LET g_sfdc_d[l_ac].sfdc010 = g_sfdc_d[l_ac].sfdc007 * l_rate
      CALL s_aooi250_convert_qty(g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc009,g_sfdc_d[l_ac].sfdc007)
         RETURNING l_success,g_sfdc_d[l_ac].sfdc010
      IF NOT l_success THEN
         LET g_sfdc_d[l_ac].sfdc010 = g_sfdc_d[l_ac].sfdc007
      END IF
      #mod 150101 end
      LET g_sfdc_d[l_ac].sfdc011 = 0        #参考单位实际数量
      LET g_sfdc_d[l_ac].diff2 = g_sfdc_d[l_ac].sfdc010  - g_sfdc_d[l_ac].sfdc011  #参考单位差异数量
   ELSE
      LET g_sfdc_d[l_ac].sfdc010 = 0
      LET g_sfdc_d[l_ac].sfdc011 = 0        #参考单位实际数量
      LET g_sfdc_d[l_ac].diff2 = 0  #参考单位差异数量
   END IF
   
   CALL s_desc_get_stock_desc(g_site,g_sfdc_d[l_ac].sfdc012) RETURNING g_sfdc_d[l_ac].sfdc012_desc    #库位名称
   CALL s_desc_get_locator_desc(g_site,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013) RETURNING g_sfdc_d[l_ac].sfdc013_desc  #储位名称
   
   #退料单:若发料批号只有一个，预设发料的批号
   IF g_prog[1,6] = 'asft32' THEN
      CALL asft310_def_sfdc014()
   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asft310_chk_sfdc007" order="8" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 检查申请数量
# Memo...........:
# Usage..........: CALL asft310_chk_sfdc007(p_cmd)
#                  RETURNING r_success
# Input parameter: p_cmd       a:新增  u:修改
# Return code....: r_success   检查状态TRUE/FALSE
# Date & Author..: 2013/12/19 By zhangllc
# Modify.........: 150309 增加欠料补料的检查，逻辑需与自动产生同步，以防自动产生的资料还过不去
# Modify.........:
################################################################################
PRIVATE FUNCTION asft310_chk_sfdc007(p_cmd)
DEFINE p_cmd            LIKE type_t.chr1
DEFINE r_success        LIKE type_t.num5
DEFINE l_sfba017        LIKE sfba_t.sfba017   #下阶料报废数量
DEFINE l_sfba025        LIKE sfba_t.sfba025   #超领数量
DEFINE l_sfdc007        LIKE sfdc_t.sfdc007 
DEFINE l_sfdc007_1      LIKE sfdc_t.sfdc007   #其他单据发料未过账申请数
DEFINE l_sfdc007_2      LIKE sfdc_t.sfdc007   #其他单据退料未过账申请数
DEFINE l_sfdc008_1      LIKE sfdc_t.sfdc008 
DEFINE l_sfdc008_2      LIKE sfdc_t.sfdc008 
DEFINE l_sfba            RECORD LIKE sfba_t.*
DEFINE l_sfba_0          RECORD LIKE sfba_t.*
DEFINE l_sfba016        LIKE sfba_t.sfba016    #已发数量
DEFINE l_sfaa049         LIKE sfaa_t.sfaa049   #已发套数 add 150309
DEFINE l_sfaa012         LIKE sfaa_t.sfaa012   #生产数量 add 150309
DEFINE l_sets            LIKE sfaa_t.sfaa049   #add 150309
DEFINE l_sfba022         LIKE sfba_t.sfba022   #旧值的  替代率
DEFINE issue_qty         LIKE sfba_t.sfba013   #可发量
DEFINE l_sfdb006         LIKE sfdb_t.sfdb006   #套数
DEFINE l_success         LIKE type_t.num5

   LET r_success = TRUE
   
   SELECT * INTO l_sfba.*
     FROM sfba_t
    WHERE sfbaent = g_enterprise
      AND sfbasite= g_site
      AND sfbadocno=g_sfdc_d[l_ac].sfdc001
      AND sfbaseq = g_sfdc_d[l_ac].sfdc002
      AND sfbaseq1= g_sfdc_d[l_ac].sfdc003
   #间接材料,发料时可直接超领，过账时分配，所以不需要控管是否超过工单的未发数量
   #IF l_sfba.sfba008 = '3' THEN  #必要特性
   IF l_sfba.sfba008 = '3' AND g_sfda_m.sfda002 = '12' THEN #mod 150309
      RETURN r_success
   END IF
   
   CASE 
      WHEN g_sfda_m.sfda002 = '11' OR g_sfda_m.sfda002 = '13'   #发料类型
           #不可超過工單的未發數量
           
           #本发料单据其他项次的
           CALL asft310_get_sfdc007(p_cmd) RETURNING l_sfdc007
           
           #其他单据发料未过账申请数
           SELECT SUM(sfdc007) INTO l_sfdc007_1
             FROM sfdc_t,sfda_t
            WHERE sfdcent   = sfdaent
              AND sfdcdocno = sfdadocno
              AND sfdcent   = g_enterprise
              AND sfdcdocno!=g_sfda_m.sfdadocno
              AND sfdc001   = g_sfdc_d[l_ac].sfdc001  #工单
              AND sfdc002   = g_sfdc_d[l_ac].sfdc002  #工单项次
              AND sfdc003   = g_sfdc_d[l_ac].sfdc003  #工单项序
              AND sfda002 IN ('11','13','14') #发料
              AND sfdastus != 'S' AND sfdastus != 'X'
           IF cl_null(l_sfdc007_1) THEN LET l_sfdc007_1 = 0 END IF

           ##其他单据退料未过账申请数
           #SELECT SUM(sfdc007) INTO l_sfdc007_2
           #  FROM sfdc_t,sfda_t
           # WHERE sfdcent   = sfdaent
           #   AND sfdcdocno = sfdadocno
           #   AND sfdcent   = g_enterprise
           #   AND sfdcdocno!=g_sfda_m.sfdadocno
           #   AND sfdc001   = g_sfdc_d[l_ac].sfdc001  #工单
           #   AND sfdc002   = g_sfdc_d[l_ac].sfdc002  #工单项次
           #   AND sfdc003   = g_sfdc_d[l_ac].sfdc003  #工单项序
           #   AND sfda002 IN ('21','23','24') #退料
           #   AND sfdastus != 'S' AND sfdastus != 'X'
           #IF cl_null(l_sfdc007_2) THEN LET l_sfdc007_2 = 0 END IF
           #mark 退料不算，一退料未过账不应算，二若退料删除，这边就多了
 
           #可发数量
           LET l_sfdc007 = l_sfba.sfba013 - l_sfba.sfba015 - l_sfba.sfba016 - l_sfdc007 - l_sfdc007_1 #+ l_sfdc007_2
           IF g_sfdc_d[l_ac].sfdc007  > l_sfdc007 THEN
              #不可超过工单的未发数量1%,请重新输入！
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = 'asf-00047'
              LET g_errparam.extend = ''
              LET g_errparam.popup = TRUE
              LET g_errparam.replace[1] = l_sfdc007
              CALL cl_err()
              LET r_success = FALSE
              RETURN r_success
           END IF
           
           #150309 add 同自动产生的逻辑
           #替代料,抓出原件资料
           SELECT * INTO l_sfba_0.* FROM sfba_t
            WHERE sfbaent = g_enterprise
              AND sfbasite= g_site
              AND sfbadocno=g_sfdc_d[l_ac].sfdc001
              AND sfbaseq = g_sfdc_d[l_ac].sfdc002
              AND sfbaseq1= 0
           IF SQLCA.sqlcode THEN
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = SQLCA.sqlcode
              LET g_errparam.extend = ''
              LET g_errparam.popup = TRUE
              CALL cl_err()
              LET r_success = FALSE
              RETURN r_success
           END IF
           #计算套数
           CALL s_asft310_get_sfdb006_2(g_sfda_m.sfdadocno,l_sfba.sfbadocno,l_sfba.sfba002,l_sfba.sfba003,l_sfba.sfba004)
              RETURNING l_success,l_sfdb006
           IF NOT l_success THEN
              LET r_success = FALSE
              RETURN r_success
           END IF
           #已发套数，生产数量
           SELECT sfaa049,sfaa012 INTO l_sfaa049,l_sfaa012
             FROM sfaa_t
            WHERE sfaaent  = g_enterprise
              AND sfaadocno= g_sfdc_d[l_ac].sfdc001
           IF SQLCA.sqlcode THEN
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = SQLCA.sqlcode
              LET g_errparam.extend = ''
              LET g_errparam.popup = TRUE
              CALL cl_err()
              LET r_success = FALSE
              RETURN r_success
           END IF
           #欠料补料只可发不足套的量issue_qty
           IF g_sfda_m.sfda002 = '13' OR (g_sfda_m.sfda002 = '11' AND l_sfdb006 = 0) THEN
              #工单单身某笔总共应发=应发-扣除委外代買量
              LET l_sfba.sfba013=l_sfba.sfba013-l_sfba.sfba015
              #欠料补料把已发套数中不足的部分补发出去
              IF l_sfaa049 = l_sfaa012 THEN  #已發套數=生產數量,即要把剩余 
                 #计算发料单上已产生的发料数量
                 CALL asft310_get_sfdc007(p_cmd) RETURNING l_sfdc007
           
                 #计算剩下的应发量=應發總數量-已發數量-本发料单上已产生的发料量
                 LET issue_qty = l_sfba.sfba013 - l_sfba.sfba016 - l_sfdc007
              ELSE
                 #LET issue_qty = l_sfaa049 * l_sfba.sfba010 / l_sfba.sfba011 - l_sfba.sfba016
                 #考虑可能有取替代料的情况
                 #计算备料+本单据上所有已发量(包含元件+所有替代料的已发量),折算成元件的已发量
                 CALL s_asft310_get_sfba016('2',g_sfda_m.sfdadocno,g_sfdc_d[l_ac].sfdc001,g_sfdc_d[l_ac].sfdc002) RETURNING l_sfba016
                 IF p_cmd='u' AND g_sfdc_d[l_ac].sfdc001=g_sfdc_d_t.sfdc001 AND g_sfdc_d[l_ac].sfdc002=g_sfdc_d_t.sfdc002 THEN
                    IF g_sfdc_d_t.sfdc003 = 0 THEN  #项序
                       LET l_sfba016 = l_sfba016 - g_sfdc_d_t.sfdc007
                    ELSE
                       SELECT sfba022 INTO l_sfba022 FROM sfba_t
                        WHERE sfbaent   = g_enterprise
                          AND sfbasite  = g_site
                          AND sfbadocno = g_sfdc_d_t.sfdc001
                          AND sfbaseq   = g_sfdc_d_t.sfdc002
                          AND sfbaseq1  = g_sfdc_d_t.sfdc003
                       LET l_sfba016 = l_sfba016 - g_sfdc_d_t.sfdc007/l_sfba022
                    END IF
                 END IF
                 #根据已发量计算该料已发套数
                 LET l_sets = l_sfba016 * l_sfba_0.sfba011 / l_sfba_0.sfba010
                 
                 IF l_sfba.sfbaseq1 = 0 THEN  #非替代料 不足套数*QPA分子/QPA分母
                    LET issue_qty = (l_sfaa049 - l_sets) * l_sfba_0.sfba010 / l_sfba_0.sfba011
                 ELSE  #替代料  不足套数*(QPA分子/QPA分母)*替代率=元件应发量*替代率=替代料的应发量
                    LET issue_qty = ((l_sfaa049 - l_sets) * l_sfba_0.sfba010 / l_sfba_0.sfba011)*l_sfba.sfba022
                 END IF
              END IF  
              
              IF issue_qty < 0 THEN
                 LET issue_qty = 0
              END IF
                 
              #单位取位
              CALL s_aooi250_get_msg(l_sfba.sfba014) RETURNING l_success,g_ooca002,g_ooca004
              IF l_success THEN
                 CALL s_num_round(g_ooca004,issue_qty,g_ooca002) RETURNING issue_qty
              END IF
              
              #发料时的應發量 > 应发 - 已发
              IF issue_qty>(l_sfba.sfba013-l_sfba.sfba016) THEN
                 LET issue_qty=(l_sfba.sfba013-l_sfba.sfba016)
              END IF
              
              IF g_sfdc_d[l_ac].sfdc007  > issue_qty THEN
                 #不可超过欠料量%1
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = 'asf-00676'
                 LET g_errparam.extend = ''
                 LET g_errparam.popup = TRUE
                 LET g_errparam.replace[1] = issue_qty
                 CALL cl_err()
                 LET r_success = FALSE
                 RETURN r_success
              END IF
           END IF  #欠料补料
           
           #成套只可发 套数的量issue_qty
           LET g_para = cl_get_para(g_enterprise,g_site,'S-MFG-0055') #发料控管套数否
           IF g_sfda_m.sfda002 = '11' AND l_sfdb006 > 0 AND g_para = 'Y' THEN #成套发&发料控管套数否='Y'
              #工单单身某笔总共应发=应发-扣除委外代買量
              LET l_sfba.sfba013=l_sfba.sfba013-l_sfba.sfba015
              IF l_sfdb006 = l_sfaa012 - l_sfaa049 THEN  #預計發料套數=生產數量-已發套數,即要把剩余 
                 #计算发料单上已产生的发料数量
                 CALL asft310_get_sfdc007(p_cmd) RETURNING l_sfdc007
                 #计算剩下的应发量=應發總數量-已發數量-本发料单上已产生的发料量
                 LET issue_qty = l_sfba.sfba013 - l_sfba.sfba016 - l_sfdc007
              ELSE
                 #LET issue_qty = l_sfaa049 * l_sfba.sfba010 / l_sfba.sfba011 - l_sfba.sfba016
                 #考虑可能有取替代料的情况
                 #计算本单据上已发量(包含元件+所有替代料的已发量)(不包括备料档),折算成元件的已发量
                 CALL s_asft310_get_sfba016('1',g_sfda_m.sfdadocno,g_sfdc_d[l_ac].sfdc001,g_sfdc_d[l_ac].sfdc002) RETURNING l_sfba016
                 #减去当笔修改掉的量
                 IF p_cmd='u' AND g_sfdc_d[l_ac].sfdc001=g_sfdc_d_t.sfdc001 AND g_sfdc_d[l_ac].sfdc002=g_sfdc_d_t.sfdc002 THEN
                    IF g_sfdc_d_t.sfdc003 = 0 THEN  #项序
                       LET l_sfba016 = l_sfba016 - g_sfdc_d_t.sfdc007
                    ELSE
                       SELECT sfba022 INTO l_sfba022 FROM sfba_t
                        WHERE sfbaent   = g_enterprise
                          AND sfbasite  = g_site
                          AND sfbadocno = g_sfdc_d_t.sfdc001
                          AND sfbaseq   = g_sfdc_d_t.sfdc002
                          AND sfbaseq1  = g_sfdc_d_t.sfdc003
                       LET l_sfba016 = l_sfba016 - g_sfdc_d_t.sfdc007/l_sfba022
                    END IF
                 END IF
                 #根据已发量计算该料已发套数
                 LET l_sets = l_sfba016 * l_sfba_0.sfba011 / l_sfba_0.sfba010
                 
                 IF l_sfba.sfbaseq1 = 0 THEN  #非替代料 不足套数*QPA分子/QPA分母
                    LET issue_qty = (l_sfdb006 - l_sets) * l_sfba_0.sfba010 / l_sfba_0.sfba011
                 ELSE  #替代料  不足套数*(QPA分子/QPA分母)*替代率=元件应发量*替代率=替代料的应发量
                    LET issue_qty = ((l_sfdb006 - l_sets) * l_sfba_0.sfba010 / l_sfba_0.sfba011)*l_sfba.sfba022
                 END IF
              END IF
              
              IF issue_qty < 0 THEN
                 LET issue_qty = 0
              END IF
                 
              #单位取位
              CALL s_aooi250_get_msg(l_sfba.sfba014) RETURNING l_success,g_ooca002,g_ooca004
              IF l_success THEN
                 CALL s_num_round(g_ooca004,issue_qty,g_ooca002) RETURNING issue_qty
              END IF
              
              #发料时的應發量 > 应发 - 已发
              IF issue_qty>(l_sfba.sfba013-l_sfba.sfba016) THEN
                 LET issue_qty=(l_sfba.sfba013-l_sfba.sfba016)
              END IF
              
              IF g_sfdc_d[l_ac].sfdc007  > issue_qty THEN
                 #不可超过欠料量%1
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = 'asf-00676'
                 LET g_errparam.extend = ''
                 LET g_errparam.popup = TRUE
                 LET g_errparam.replace[1] = issue_qty
                 CALL cl_err()
                 LET r_success = FALSE
                 RETURN r_success
              END IF
           END IF #成套发
           #150309 add end
      WHEN g_sfda_m.sfda002 = '12'  #发料类型=超领
           #依發料單別參數"超領數量與下階料報廢數量勾稽"，
           #當此參數=Y時，申請數量需判斷數量不可超過(下階料報廢數量-已存在超領數量+超領退料數量)
           CALL s_aooi200_get_slip(g_sfda_m.sfdadocno) RETURNING l_success,g_ooba002
           IF cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0056') = 'Y' THEN
              IF cl_null(l_sfba.sfba017) THEN LET l_sfba.sfba017=0 END IF #下阶报废数量
              IF cl_null(l_sfba.sfba025) THEN LET l_sfba.sfba025=0 END IF #超领数量
              
              #本发料单据其他项次的
              CALL asft310_get_sfdc007(p_cmd) RETURNING l_sfdc007

              #其他单据发料未过账申请数
              SELECT SUM(sfdc007) INTO l_sfdc007_1
                FROM sfdc_t,sfda_t
               WHERE sfdcent   = sfdaent
                 AND sfdcdocno = sfdadocno
                 AND sfdcent   = g_enterprise
                 AND sfdcdocno!=g_sfda_m.sfdadocno
                 AND sfdc001   = g_sfdc_d[l_ac].sfdc001  #工单
                 AND sfdc002   = g_sfdc_d[l_ac].sfdc002  #工单项次
                 AND sfdc003   = g_sfdc_d[l_ac].sfdc003  #工单项序
                 AND sfda002 = '12'  #发料
                 AND sfdastus != 'S' AND sfdastus != 'X'
              IF cl_null(l_sfdc007_1) THEN LET l_sfdc007_1 = 0 END IF

              ##其他单据退料未过账申请数
              #SELECT SUM(sfdc007) INTO l_sfdc007_2
              #  FROM sfdc_t,sfda_t
              # WHERE sfdcent   = sfdaent
              #   AND sfdcdocno = sfdadocno
              #   AND sfdcent   = g_enterprise
              #   AND sfdcdocno!=g_sfda_m.sfdadocno
              #   AND sfdc001   = g_sfdc_d[l_ac].sfdc001  #工单
              #   AND sfdc002   = g_sfdc_d[l_ac].sfdc002  #工单项次
              #   AND sfdc003   = g_sfdc_d[l_ac].sfdc003  #工单项序
              #   AND sfda002 = '22'  #退料
              #   AND sfdastus != 'S' AND sfdastus != 'X'
              #IF cl_null(l_sfdc007_2) THEN LET l_sfdc007_2 = 0 END IF

              #可发料的量
              #LET l_sfdc007 = l_sfba.sfba017-l_sfba.sfba025-l_sfdc007-l_sfdc007_1+l_sfdc007_2  #相当于=下階料報廢數量-已存在超領數量+超領退料數量
              #mark 退料不算，一退料未过账不应算，二若退料删除，这边就多了
              LET l_sfdc007 = l_sfba.sfba017-l_sfba.sfba025-l_sfdc007-l_sfdc007_1  #相当于=下階料報廢數量-已存在超領數量
              IF g_sfdc_d[l_ac].sfdc007  > l_sfdc007 THEN  
                 #不可超过工单的下阶料报废数量1%；请重新输入！
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = 'asf-00138'
                 LET g_errparam.extend = ''
                 LET g_errparam.popup = TRUE
                 LET g_errparam.replace[1] = l_sfdc007
                 CALL cl_err()
                 LET r_success = FALSE
                 RETURN r_success
              END IF
           END IF
      WHEN g_sfda_m.sfda002 = '21' OR g_sfda_m.sfda002 = '23' OR g_sfda_m.sfda002 = '24'   #发料类型
           #不可超過工單的已發數量l_sfba.sfba016
           
           #本发料单据其他项次的
           CALL asft310_get_sfdc007(p_cmd) RETURNING l_sfdc007
           
           #可退数量
           LET l_sfdc007 = l_sfba.sfba016 - l_sfdc007
           IF g_sfdc_d[l_ac].sfdc007  > l_sfdc007 THEN  
              #不可超过工单的已發数量1%,请重新输入！
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = 'asf-00065'
              LET g_errparam.extend = ''
              LET g_errparam.popup = TRUE
              LET g_errparam.replace[1] = l_sfdc007
              CALL cl_err()
              LET r_success = FALSE
              RETURN r_success
           END IF
      WHEN g_sfda_m.sfda002 = '22'  #发料类型=超领
           #不可超過工單的超領數量l_sfba.sfba025
           IF cl_null(l_sfba.sfba025) THEN LET l_sfba.sfba025=0 END IF
           #本发料单据其他项次的
           CALL asft310_get_sfdc007(p_cmd) RETURNING l_sfdc007

           #可超退数量
           LET l_sfdc007 = l_sfba.sfba025 - l_sfdc007
           IF g_sfdc_d[l_ac].sfdc007  > l_sfdc007 THEN  
              #不可超过工单的超领数量1%,请重新输入！
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = 'asf-00066'
              LET g_errparam.extend = ''
              LET g_errparam.popup = TRUE
              LET g_errparam.replace[1] = l_sfdc007
              CALL cl_err()
              LET r_success = FALSE
              RETURN r_success
           END IF
   END CASE
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asft310_def_sfdc007" order="9" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#预设sfdc007申请数量
#即最大可发料数量
#sfdc编辑状态时调用
PRIVATE FUNCTION asft310_def_sfdc007(p_cmd)
DEFINE p_cmd         LIKE type_t.chr1
DEFINE r_sfdc007     LIKE sfdc_t.sfdc007   #最大可发料数量
DEFINE l_sfaa012     LIKE sfaa_t.sfaa012   #生产数量
DEFINE l_sfaa049     LIKE sfaa_t.sfaa049   #已发套数
DEFINE l_sfdb006     LIKE sfdb_t.sfdb006   #工单+部位+作业+作业序 预计发料套数
DEFINE l_sfdc007     LIKE sfdc_t.sfdc007   #本发料单据其他项次的发料数量
DEFINE l_sfba010     LIKE sfba_t.sfba010   #标准QPA分子
DEFINE l_sfba011     LIKE sfba_t.sfba011   #标准QPA分母
DEFINE l_sfba002     LIKE sfba_t.sfba002   #部位
DEFINE l_sfba003     LIKE sfba_t.sfba003   #作业
DEFINE l_sfba004     LIKE sfba_t.sfba004   #作业序
DEFINE l_sfba016     LIKE sfba_t.sfba016   #已发数量
DEFINE l_success     LIKE type_t.num5

   LET r_sfdc007 = 0
   
   IF g_sfda_m.sfda002 ='11' OR g_sfda_m.sfda002 ='13' THEN
      #生产数量、已发套数、标准QPA分子、标准QPA分母
      #部位、作业、作业序、已发数量
      SELECT sfaa012,sfaa049,sfba010,sfba011,
             sfba002,sfba003,sfba004,sfba016
        INTO l_sfaa012,l_sfaa049,l_sfba010,l_sfba011,
             l_sfba002,l_sfba003,l_sfba004,l_sfba016
        FROM sfba_t,sfaa_t
       WHERE sfbaent = sfaaent
         AND sfbasite= sfaasite
         AND sfbadocno=sfaadocno
         AND sfbaent = g_enterprise
         AND sfbasite= g_site
         AND sfbadocno=g_sfdc_d[l_ac].sfdc001
         AND sfbaseq = g_sfdc_d[l_ac].sfdc002
         AND sfbaseq1= g_sfdc_d[l_ac].sfdc003
      IF cl_null(l_sfaa012) THEN LET l_sfaa012 = 0 END IF
      IF cl_null(l_sfaa049) THEN LET l_sfaa049 = 0 END IF

      #本发料单据其他项次的
      CALL asft310_get_sfdc007(p_cmd) RETURNING l_sfdc007
      
      IF g_sfda_m.sfda002 ='11' THEN
         #預計發料套數
         SELECT SUM(sfdb006) INTO l_sfdb006 FROM sfdb_t
          WHERE sfdbent  = g_enterprise
            AND sfdbsite = g_site
            AND sfdbdocno= g_sfda_m.sfdadocno       #发料单单号
            AND sfdb001  = g_sfdc_d[l_ac].sfdc001  #工单单号
            AND sfdb003  = l_sfba002  #部位
            AND sfdb004  = l_sfba003  #作业
            AND sfdb005  = l_sfba004  #作业序
            #AND sfdb002  = #run card 
         IF cl_null(l_sfdb006) THEN LET l_sfdb006=0 END IF
      END IF
   END IF
   
   CASE
      WHEN g_sfda_m.sfda002 ='11'   #成套发料
           IF l_sfdb006 = l_sfaa012 - l_sfaa049 THEN  #預計發料套數=生產數量-已發套數,即要把剩余
              #應發總數量-已發數量-本发料单据其他项次的发料数量
              LET r_sfdc007 = g_sfdc_d[l_ac].sfba013 - g_sfdc_d[l_ac].sfba016 - l_sfdc007
           ELSE
              #預計發料套數*標準QPA分子/標準QPA分母-本发料单据其他项次的发料数量
              LET r_sfdc007 = l_sfdb006 * l_sfba010 / l_sfba011 - l_sfdc007
           END IF
      WHEN g_sfda_m.sfda002 ='13'   #欠料补料
           IF l_sfaa012 = l_sfaa049 THEN   #生產數量=已發套數
              #應發總數量-已發數量-本发料单据其他项次的发料数量
              LET r_sfdc007 = g_sfdc_d[l_ac].sfba013 - g_sfdc_d[l_ac].sfba016 - l_sfdc007
           ELSE
              #(已發料套數*標準QPA分子/標準QPA分母)-已發數量-本发料单据其他项次的发料数量
              LET r_sfdc007 = l_sfaa049 * l_sfba010 / l_sfba011 - g_sfdc_d[l_ac].sfba016 - l_sfdc007
           END IF
      WHEN g_sfda_m.sfda002 = '21'  #成套退
           IF l_sfdb006 = l_sfaa049 THEN  #預計退料套數=已發套數  全退
              #已發數量-本发料单据其他项次的发料数量  
              LET r_sfdc007 = l_sfba016 - l_sfdc007
           ELSE
              #預計退料套數*標準QPA分子/標準QPA分母-本发料单据其他项次的发料数量
              LET r_sfdc007 = l_sfdb006 * l_sfba010 / l_sfba011 - l_sfdc007
              #不可超过工单的已发数量
              IF r_sfdc007 > l_sfba016 - l_sfdc007 THEN
                 LET r_sfdc007 = l_sfba016 - l_sfdc007
              END IF
           END IF
      OTHERWISE
           LET r_sfdc007 = 0
   END CASE
   IF r_sfdc007 < 0 THEN
      LET r_sfdc007 = 0
   END IF
   
   #add 150115 单位取位
   IF NOT cl_null(g_sfdc_d[l_ac].sfdc006) THEN
      CALL s_aooi250_get_msg(g_sfdc_d[l_ac].sfdc006) RETURNING l_success,g_ooca002,g_ooca004
      IF l_success THEN
         CALL s_num_round(g_ooca004,r_sfdc007,g_ooca002) RETURNING r_sfdc007
      END IF
   END IF
   #add 150115 end
   RETURN r_sfdc007
END FUNCTION]]>
  </point>
  <point name="function.asft310_set_entry_b_sfdc" order="10" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_set_entry_b_sfdc(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1

   CALL cl_set_comp_entry("sfdc016",TRUE)  #库存管理特征
   CALL cl_set_comp_entry("sfdc009,sfdc010",TRUE)  #参考单位申请数量
   CALL cl_set_comp_entry("sfdc012,sfdc013,sfdc014,sfdc016",TRUE)  #库位 储位 批号 库存管理特征
   LET g_sfdc012_switch = 'Y'   #庫位        可输入性 Y可输入 N不可输入
   LET g_sfdc013_switch = 'Y'   #儲位        可输入性 Y可输入 N不可输入
   LET g_sfdc014_switch = 'Y'   #批號        可输入性 Y可输入 N不可输入
   LET g_sfdc016_switch = 'Y'   #庫存管理特徵 可输入性 Y可输入 N不可输入
   
   CALL cl_set_comp_entry("sfdc005",TRUE)  #产品特征
   CALL cl_set_comp_entry("sfdc004",TRUE)  #需求料号
   CALL cl_set_comp_entry("sfdc003",TRUE)  #项序
   
   #發料料號有使用參考單位時sfdc009,sfdc010不允許空白
   CALL cl_set_comp_required("sfdc009,sfdc010",FALSE)
   #料件做产品特征管理时，产品特征栏位不允许空白
   CALL cl_set_comp_required("sfdc005",FALSE)  #add 141204 sfdc不控制，在sfdd中严格控制
   #料件设置为必须有库存管理特征时，库存管理特征不允许空白
   CALL cl_set_comp_required("sfdc016",FALSE)
END FUNCTION]]>
  </point>
  <point name="function.asft310_set_no_entry_b_sfdc" order="11" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_set_no_entry_b_sfdc(p_cmd)
DEFINE p_cmd      LIKE type_t.chr1
DEFINE l_imaf055  LIKE imaf_t.imaf055  #库存管理特征
DEFINE l_imaf015  LIKE imaf_t.imaf015  #参考单位
DEFINE l_imaa005  LIKE imaa_t.imaa005  #特征类别
DEFINE l_success  LIKE type_t.num5
DEFINE l_sfba019  LIKE sfba_t.sfba019  #指定库位
DEFINE l_sfba020  LIKE sfba_t.sfba020  #指定储位
DEFINE l_sfba029  LIKE sfba_t.sfba029  #指定批号
DEFINE l_sfba030  LIKE sfba_t.sfba030  #指定库存管理特征
DEFINE l_sfba021  LIKE sfba_t.sfba021  #产品特征
DEFINE l_cnt      LIKE type_t.num5

   #料件有使用庫存管理特徵时才可輸入库存管理特征栏位sfdc016
   IF NOT cl_null(g_sfdc_d[l_ac].sfdc004) THEN
      SELECT imaf055,imaf015 INTO l_imaf055,l_imaf015  #库存管理特征,参考单位
        FROM imaf_t
       WHERE imafent  = g_enterprise
         AND imafsite = g_site
         AND imaf001  = g_sfdc_d[l_ac].sfdc004
      IF l_imaf055 = '2' THEN
         CALL cl_set_comp_entry("sfdc016",FALSE)
         LET g_sfdc016_switch = 'N'   #可输入性 Y可输入 N不可输入
      END IF
      #料件设置为必须有库存管理特征时，库存管理特征不允许空白
      IF l_imaf055 = '1' THEN  #必须有库存管理特征
         CALL cl_set_comp_required("sfdc016",TRUE)
      END IF
      
      #當料號有使用參考單位時，才允許輸入
      CALL cl_set_comp_entry("sfdc009",FALSE)  #参考单位 单据上统一不允许修改
      IF g_ref_unit = 'N' THEN
         CALL cl_set_comp_entry("sfdc010",FALSE)  #参考单位申请数量
      ELSE
         IF cl_null(l_imaf015) THEN
            CALL cl_set_comp_entry("sfdc010",FALSE)  #参考单位申请数量
         ELSE
            #發料料號有使用參考單位時sfdc009,sfdc010不允許空白
            CALL cl_set_comp_required("sfdc009,sfdc010",TRUE)
         END IF
      END IF
   END IF

   #发料单需要卡控工单有指定的，不可修改 add 150116 g_prog[1,6]='asft31'
   #工单、项次、项序不为空
   IF g_prog[1,6]='asft31' AND NOT cl_null(g_sfdc_d[l_ac].sfdc001) AND NOT cl_null(g_sfdc_d[l_ac].sfdc002) AND NOT cl_null(g_sfdc_d[l_ac].sfdc003) AND g_prog[1,6]='asft31' THEN
      #工單指定發料庫儲，發料時允許修改
      CALL s_aooi200_get_slip(g_sfdc_d[l_ac].sfdc001) RETURNING l_success,g_ooba002
      IF cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0050') = 'N' THEN
         SELECT sfba019,sfba020,sfba029,sfba030
           INTO l_sfba019,l_sfba020,l_sfba029,l_sfba030
           FROM sfba_t
          WHERE sfbaent  = g_enterprise
            AND sfbadocno= g_sfdc_d[l_ac].sfdc001
            AND sfbaseq  = g_sfdc_d[l_ac].sfdc002
            AND sfbaseq1 = g_sfdc_d[l_ac].sfdc003
         IF NOT cl_null(l_sfba019) THEN
            CALL cl_set_comp_entry("sfdc012",FALSE)  #库位
            LET g_sfdc012_switch = 'N'   #可输入性 Y可输入 N不可输入
         END IF
         IF NOT cl_null(l_sfba020) THEN
            CALL cl_set_comp_entry("sfdc013",FALSE)  #储位
            LET g_sfdc013_switch = 'N'   #可输入性 Y可输入 N不可输入
         END IF
         IF NOT cl_null(l_sfba029) THEN
            CALL cl_set_comp_entry("sfdc014",FALSE)  #批号
            LET g_sfdc014_switch = 'N'   #可输入性 Y可输入 N不可输入
         END IF
         IF NOT cl_null(l_sfba030) THEN
            CALL cl_set_comp_entry("sfdc016",FALSE)  #库存管理特征
            LET g_sfdc016_switch = 'N'   #可输入性 Y可输入 N不可输入
         END IF
      END IF
   END IF
   
   #产品特征控制
   IF NOT cl_null(g_sfdc_d[l_ac].sfdc001) AND NOT cl_null(g_sfdc_d[l_ac].sfdc002) AND NOT cl_null(g_sfdc_d[l_ac].sfdc003) THEN
      SELECT sfba021 INTO l_sfba021
        FROM sfba_t
       WHERE sfbaent  = g_enterprise
         AND sfbadocno= g_sfdc_d[l_ac].sfdc001
         AND sfbaseq  = g_sfdc_d[l_ac].sfdc002
         AND sfbaseq1 = g_sfdc_d[l_ac].sfdc003
      #工单有指定产品特征，不可修改
      IF NOT cl_null(l_sfba021) THEN
         CALL cl_set_comp_entry("sfdc005",FALSE)  #产品特征
      END IF
   END IF
   IF NOT cl_null(g_sfdc_d[l_ac].sfdc004) THEN
      SELECT imaa005 INTO l_imaa005  #特征类别
        FROM imaa_t
       WHERE imaaent  = g_enterprise
         AND imaa001  = g_sfdc_d[l_ac].sfdc004
      IF cl_null(l_imaa005) THEN
         CALL cl_set_comp_entry("sfdc005",FALSE)  #产品特征
      ELSE
         #料件做产品特征管理时，不允许空白
         CALL cl_set_comp_required("sfdc005",TRUE)  #add 141204 sfdc不控制，在sfdd中严格控制
      END IF
   END IF
   
   #需求料号控制
   #可超領工單未指定間接材料
   CALL s_aooi200_get_slip(g_sfda_m.sfdadocno) RETURNING l_success,g_ooba002
   CALL cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0071') RETURNING g_para
   IF g_sfda_m.sfda002!='12' OR (g_sfda_m.sfda002='12' AND g_para='N') THEN
      CALL cl_set_comp_entry("sfdc004",FALSE)  #需求料号
   ELSE
      IF NOT cl_null(g_sfdc_d[l_ac].sfdc001) AND NOT cl_null(g_sfdc_d[l_ac].sfdc002) AND NOT cl_null(g_sfdc_d[l_ac].sfdc003) THEN
         SELECT COUNT(*) INTO l_cnt
           FROM sfba_t
          WHERE sfbaent  = g_enterprise
            AND sfbadocno= g_sfdc_d[l_ac].sfdc001
            AND sfbaseq  = g_sfdc_d[l_ac].sfdc002
            AND sfbaseq1 = g_sfdc_d[l_ac].sfdc003
         #存在备料档中的，不可修改
         IF l_cnt > 0 THEN
            CALL cl_set_comp_entry("sfdc004",FALSE)  #需求料号
         END IF
      ELSE
         CALL cl_set_comp_entry("sfdc004",FALSE)  #需求料号
      END IF
   END IF
   
   #项序控制
   #可超領工單未指定間接材料
   CALL s_aooi200_get_slip(g_sfda_m.sfdadocno) RETURNING l_success,g_ooba002
   CALL cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0071') RETURNING g_para
   IF g_sfda_m.sfda002='12' AND g_para='Y' THEN
      IF NOT cl_null(g_sfdc_d[l_ac].sfdc001) AND NOT cl_null(g_sfdc_d[l_ac].sfdc002) AND NOT cl_null(g_sfdc_d[l_ac].sfdc003) THEN
         SELECT COUNT(*) INTO l_cnt
           FROM sfba_t
          WHERE sfbaent  = g_enterprise
            AND sfbadocno= g_sfdc_d[l_ac].sfdc001
            AND sfbaseq  = g_sfdc_d[l_ac].sfdc002
         #存在备料档中的，不可修改
         IF l_cnt = 0 THEN
            CALL cl_set_comp_entry("sfdc003",FALSE)  #需求料号
         END IF
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="function.asft310_set_entry_b_sfdb" order="12" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_set_entry_b_sfdb(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1

   CALL cl_set_comp_entry("sfdb006",TRUE) #预计套数
END FUNCTION]]>
  </point>
  <point name="function.asft310_set_no_entry_b_sfdb" order="13" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_set_no_entry_b_sfdb(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1

   #13 欠料补料     23 一般退料   24 倒扣退料
   IF g_sfda_m.sfda002 = '13' OR g_sfda_m.sfda002 = '23' OR g_sfda_m.sfda002 = '24' THEN
      CALL cl_set_comp_entry("sfdb006",FALSE) #预计套数
   END IF
END FUNCTION]]>
  </point>
  <point name="function.asft310_set_entry_b_sfdf" order="14" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_set_entry_b_sfdf(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1

   CALL cl_set_comp_entry("sfdf003,sfdf004,sfdf005,sfdf010",TRUE) #仓储批 库存管理特征
   LET g_sfdf003_switch = 'Y'   #庫位        可输入性 Y可输入 N不可输入
   LET g_sfdf004_switch = 'Y'   #儲位        可输入性 Y可输入 N不可输入
   LET g_sfdf005_switch = 'Y'   #批號        可输入性 Y可输入 N不可输入
   LET g_sfdf010_switch = 'Y'   #庫存管理特徵 可输入性 Y可输入 N不可输入
   
   CALL cl_set_comp_entry("sfdf008,sfdf009",TRUE) #参考单位
   
END FUNCTION]]>
  </point>
  <point name="function.asft310_set_no_entry_b_sfdf" order="15" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_set_no_entry_b_sfdf(p_cmd)
DEFINE p_cmd      LIKE type_t.chr1
DEFINE l_imaf015  LIKE imaf_t.imaf015
DEFINE l_cnt      LIKE type_t.num5
DEFINE l_cnt1     LIKE type_t.num5
DEFINE l_sql      STRING

   #检查sfdf对应的sfde中包含的sfdc里是否只有一个相同的指定"库位"，此时库位栏位不允许输入只能默认
   IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
      LET l_sql = " SELECT COUNT(UNIQUE sfdc012) ",
                  "   FROM sfdc_t ",
                  "  WHERE sfdcent   = ",g_enterprise,
                  "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                  "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                  "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                  "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
                  #"    AND sfdc009   = '",g_sfde_d[g_detail_idx].sfde006,"' "    #参考单位  
      IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
         LET l_sql = l_sql CLIPPED,
                  "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"') ",
                  "       or (sfdc001,sfdc002,sfdc003) in ",
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"' ",
                  "           and sfba028 IS NULL)) "
      END IF
   ELSE
      LET l_sql = " SELECT COUNT(UNIQUE sfdc012) ",
                  "   FROM sfdc_t,sfba_t ",
                  "  WHERE sfdcent   = sfbaent ",
                  "    AND sfdc001   = sfbadocno ",
                  "    AND sfdc002   = sfbaseq ",
                  "    AND sfdc003   = sfbaseq1 ",
                  "    AND sfdcent   = ",g_enterprise,
                  "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                  "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                  "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                  "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
                  #"    AND sfdc009   = '",g_sfde_d[g_detail_idx].sfde006,"' "    #参考单位  
      IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
         LET l_sql = l_sql CLIPPED, " AND sfba028   = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
      END IF
   END IF
   IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
      LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
   ELSE
      LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
   END IF
   DECLARE asft310_set_no_entry_b_sfdf_c1 SCROLL CURSOR FROM l_sql
   OPEN asft310_set_no_entry_b_sfdf_c1
   FETCH asft310_set_no_entry_b_sfdf_c1 INTO l_cnt
   CLOSE asft310_set_no_entry_b_sfdf_c1
   IF l_cnt = 1 THEN
      #add 141211
      IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
         LET l_sql = " SELECT COUNT(UNIQUE sfdc012) ",
                     "   FROM sfdc_t ",
                     "  WHERE sfdcent   = ",g_enterprise,
                     "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                     "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                     "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                     "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",   #单位
                     "    AND sfdc012   = ' '  "  #库位
         IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
            LET l_sql = l_sql CLIPPED,
                  "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"') ",
                  "       or (sfdc001,sfdc002,sfdc003) in ",
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"' ",
                  "           and sfba028 IS NULL)) "
         END IF
      ELSE
         LET l_sql = " SELECT COUNT(UNIQUE sfdc012) ",
                     "   FROM sfdc_t,sfba_t ",
                     "  WHERE sfdcent   = sfbaent ",
                     "    AND sfdc001   = sfbadocno ",
                     "    AND sfdc002   = sfbaseq ",
                     "    AND sfdc003   = sfbaseq1 ",
                     "    AND sfdcent   = ",g_enterprise,
                     "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                     "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                     "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                     "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",   #单位
                     "    AND sfdc012   = ' '  "  #库位
         IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
            LET l_sql = l_sql CLIPPED, " AND sfba028   = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
         END IF
      END IF
      IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
         LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
      ELSE
         LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
      END IF
      DECLARE asft310_set_no_entry_b_sfdf_c11 SCROLL CURSOR FROM l_sql
      OPEN asft310_set_no_entry_b_sfdf_c11
      FETCH asft310_set_no_entry_b_sfdf_c11 INTO l_cnt
      CLOSE asft310_set_no_entry_b_sfdf_c11
      IF l_cnt = 0 THEN
      #add 141211 end
         CALL cl_set_comp_entry("sfdf003",FALSE)
         LET g_sfdf003_switch = 'N'
      END IF  #add 141211
   END IF
   #检查sfdf对应的sfde中包含的sfdc里是否有指定"储位"为非空，且只有一个相同的指定"储位"，此时此栏位不允许输入只能默认
   IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
      LET l_sql = " SELECT COUNT(UNIQUE sfdc013) ",
                  "   FROM sfdc_t ",
                  "  WHERE sfdcent   = ",g_enterprise,
                  "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                  "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                  "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                  "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
      IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
         LET l_sql = l_sql CLIPPED,
                  "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"') ",
                  "       or (sfdc001,sfdc002,sfdc003) in ",
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"' ",
                  "           and sfba028 IS NULL)) "
      END IF
   ELSE
      LET l_sql = " SELECT COUNT(UNIQUE sfdc013) ",
                  "   FROM sfdc_t,sfba_t ",
                  "  WHERE sfdcent   = sfbaent ",
                  "    AND sfdc001   = sfbadocno ",
                  "    AND sfdc002   = sfbaseq ",
                  "    AND sfdc003   = sfbaseq1 ",
                  "    AND sfdcent   = ",g_enterprise,
                  "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                  "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                  "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                  "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
      IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
         LET l_sql = l_sql CLIPPED, " AND sfba028   = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
      END IF
   END IF
               #"    AND sfdc009   = '",g_sfde_d[g_detail_idx].sfde006,"' "    #参考单位
   IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
      LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
   ELSE
      LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
   END IF
   DECLARE asft310_set_no_entry_b_sfdf_c2 SCROLL CURSOR FROM l_sql
   OPEN asft310_set_no_entry_b_sfdf_c2
   FETCH asft310_set_no_entry_b_sfdf_c2 INTO l_cnt
   CLOSE asft310_set_no_entry_b_sfdf_c2
   IF l_cnt = 1 THEN
      IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
         LET l_sql = " SELECT COUNT(UNIQUE sfdc013) ",
                     "   FROM sfdc_t ",
                     "  WHERE sfdcent   = ",g_enterprise,
                     "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                     "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                     "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                     "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",   #单位
                     "    AND sfdc013   = ' '  "  #儲位
         IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
            LET l_sql = l_sql CLIPPED,
                  "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"') ",
                  "       or (sfdc001,sfdc002,sfdc003) in ",
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"' ",
                  "           and sfba028 IS NULL)) "
         END IF
      ELSE
         LET l_sql = " SELECT COUNT(UNIQUE sfdc013) ",
                     "   FROM sfdc_t,sfba_t ",
                     "  WHERE sfdcent   = sfbaent ",
                     "    AND sfdc001   = sfbadocno ",
                     "    AND sfdc002   = sfbaseq ",
                     "    AND sfdc003   = sfbaseq1 ",
                     "    AND sfdcent   = ",g_enterprise,
                     "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                     "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                     "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                     "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",   #单位
                     "    AND sfdc013   = ' '  "  #儲位
         IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
            LET l_sql = l_sql CLIPPED, " AND sfba028   = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
         END IF
      END IF
      IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
         LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
      ELSE
         LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
      END IF
      DECLARE asft310_set_no_entry_b_sfdf_c21 SCROLL CURSOR FROM l_sql
      OPEN asft310_set_no_entry_b_sfdf_c21
      FETCH asft310_set_no_entry_b_sfdf_c21 INTO l_cnt
      CLOSE asft310_set_no_entry_b_sfdf_c21
      IF l_cnt = 0 THEN
         CALL cl_set_comp_entry("sfdf004",FALSE)
         LET g_sfdf004_switch = 'N'
      END IF
   END IF
   #检查sfdf对应的sfde中包含的sfdc里是否有指定"批号"为非空，且只有一个相同的指定"批号"，此时此栏位不允许输入只能默认
   IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
      LET l_sql = " SELECT COUNT(UNIQUE sfdc014) ",
                  "   FROM sfdc_t ",
                  "  WHERE sfdcent   = ",g_enterprise,
                  "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                  "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                  "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                  "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
      IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
         LET l_sql = l_sql CLIPPED,
                  "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"') ",
                  "       or (sfdc001,sfdc002,sfdc003) in ",
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"' ",
                  "           and sfba028 IS NULL)) "
      END IF
   ELSE
      LET l_sql = " SELECT COUNT(UNIQUE sfdc014) ",
                  "   FROM sfdc_t,sfba_t ",
                  "  WHERE sfdcent   = sfbaent ",
                  "    AND sfdc001   = sfbadocno ",
                  "    AND sfdc002   = sfbaseq ",
                  "    AND sfdc003   = sfbaseq1 ",
                  "    AND sfdcent   = ",g_enterprise,
                  "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                  "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                  "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                  "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
      IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
         LET l_sql = l_sql CLIPPED, " AND sfba028   = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
      END IF
   END IF
   IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
      LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
   ELSE
      LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
   END IF
   DECLARE asft310_set_no_entry_b_sfdf_c3 SCROLL CURSOR FROM l_sql
   OPEN asft310_set_no_entry_b_sfdf_c3
   FETCH asft310_set_no_entry_b_sfdf_c3 INTO l_cnt
   CLOSE asft310_set_no_entry_b_sfdf_c3
   IF l_cnt = 1 THEN
      IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
         LET l_sql = " SELECT COUNT(UNIQUE sfdc014) ",
                     "   FROM sfdc_t ",
                     "  WHERE sfdcent   = ",g_enterprise,
                     "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                     "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                     "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                     "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",   #单位
                     "    AND sfdc014   = ' '  "  #批号
         IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
            LET l_sql = l_sql CLIPPED,
                  "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"') ",
                  "       or (sfdc001,sfdc002,sfdc003) in ",
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"' ",
                  "           and sfba028 IS NULL)) "
         END IF
      ELSE
         LET l_sql = " SELECT COUNT(UNIQUE sfdc014) ",
                     "   FROM sfdc_t,sfba_t ",
                     "  WHERE sfdcent   = sfbaent ",
                     "    AND sfdc001   = sfbadocno ",
                     "    AND sfdc002   = sfbaseq ",
                     "    AND sfdc003   = sfbaseq1 ",
                     "    AND sfdcent   = ",g_enterprise,
                     "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                     "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                     "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                     "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",   #单位
                     "    AND sfdc014   = ' '  "  #批号
         IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
            LET l_sql = l_sql CLIPPED, " AND sfba028   = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
         END IF
      END IF
      IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
         LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
      ELSE
         LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
      END IF
      DECLARE asft310_set_no_entry_b_sfdf_c31 SCROLL CURSOR FROM l_sql
      OPEN asft310_set_no_entry_b_sfdf_c31
      FETCH asft310_set_no_entry_b_sfdf_c31 INTO l_cnt
      CLOSE asft310_set_no_entry_b_sfdf_c31
      IF l_cnt = 0 THEN
         CALL cl_set_comp_entry("sfdf005",FALSE)
         LET g_sfdf005_switch = 'N'
      END IF
   END IF
   #检查sfdf对应的sfde中包含的sfdc里是否有指定"库存管理特征"为非空，且只有一个相同的指定"库存管理特征"，此时此栏位不允许输入只能默认
   IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
      LET l_sql = " SELECT COUNT(UNIQUE sfdc016) ",
                  "   FROM sfdc_t ",
                  "  WHERE sfdcent   = ",g_enterprise,
                  "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                  "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                  "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                  "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
      IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
         LET l_sql = l_sql CLIPPED,
                  "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"') ",
                  "       or (sfdc001,sfdc002,sfdc003) in ",
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"' ",
                  "           and sfba028 IS NULL)) "
      END IF
   ELSE
      LET l_sql = " SELECT COUNT(UNIQUE sfdc016) ",
                  "   FROM sfdc_t,sfba_t ",
                  "  WHERE sfdcent   = sfbaent ",
                  "    AND sfdc001   = sfbadocno ",
                  "    AND sfdc002   = sfbaseq ",
                  "    AND sfdc003   = sfbaseq1 ",
                  "    AND sfdcent   = ",g_enterprise,
                  "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                  "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                  "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                  "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
      IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
         LET l_sql = l_sql CLIPPED, " AND sfba028   = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
      END IF
   END IF
   IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
      LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
   ELSE
      LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
   END IF
   DECLARE asft310_set_no_entry_b_sfdf_c4 SCROLL CURSOR FROM l_sql
   OPEN asft310_set_no_entry_b_sfdf_c4
   FETCH asft310_set_no_entry_b_sfdf_c4 INTO l_cnt
   CLOSE asft310_set_no_entry_b_sfdf_c4
   IF l_cnt = 1 THEN
      IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
         LET l_sql = " SELECT COUNT(UNIQUE sfdc016) ",
                     "   FROM sfdc_t ",
                     "  WHERE sfdcent   = ",g_enterprise,
                     "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                     "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                     "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                     "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",   #单位
                     "    AND sfdc016   = ' ' "  #库存管理特征
         IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
            LET l_sql = l_sql CLIPPED,
                  "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"') ",
                  "       or (sfdc001,sfdc002,sfdc003) in ",
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"' ",
                  "           and sfba028 IS NULL)) "
         END IF
      ELSE
         LET l_sql = " SELECT COUNT(UNIQUE sfdc016) ",
                     "   FROM sfdc_t,sfba_t ",
                     "  WHERE sfdcent   = sfbaent ",
                     "    AND sfdc001   = sfbadocno ",
                     "    AND sfdc002   = sfbaseq ",
                     "    AND sfdc003   = sfbaseq1 ",
                     "    AND sfdcent   = ",g_enterprise,
                     "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                     "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                     "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                     "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",   #单位
                     "    AND sfdc016   = ' ' "  #库存管理特征
         IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
            LET l_sql = l_sql CLIPPED, " AND sfba028   = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
         END IF
      END IF
      IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
         LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
      ELSE
         LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
      END IF
      DECLARE asft310_set_no_entry_b_sfdf_c41 SCROLL CURSOR FROM l_sql
      OPEN asft310_set_no_entry_b_sfdf_c41
      FETCH asft310_set_no_entry_b_sfdf_c41 INTO l_cnt
      CLOSE asft310_set_no_entry_b_sfdf_c41
      IF l_cnt = 0 THEN
         CALL cl_set_comp_entry("sfdf010",FALSE)
         LET g_sfdf010_switch = 'N'
      END IF
   END IF

   SELECT imaf015 INTO l_imaf015  #参考单位
     FROM imaf_t
    WHERE imafent = g_enterprise
      AND imafsite= g_site
      AND imaf001 = g_sfdf_d[l_ac].sfdf001
   #料件有使用參考單位時才可輸入
   CALL cl_set_comp_entry("sfdf008",FALSE)  #参考单位 单据上统一不允许修改
   IF g_ref_unit = 'N' THEN
      CALL cl_set_comp_entry("sfdf009",FALSE)  #数量
   ELSE
      IF cl_null(l_imaf015) THEN
         CALL cl_set_comp_entry("sfdf009",FALSE)  #数量
      END IF
   END IF
   
END FUNCTION]]>
  </point>
  <point name="function.asft310_set_entry_b_sfdd" order="16" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_set_entry_b_sfdd(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1

   IF g_prog[1,6] = 'asft31' THEN
      CALL cl_set_comp_entry("sfdd001,sfdd013",TRUE)  #发料料号
   END IF
   CALL cl_set_comp_entry("sfdd003",TRUE)  #库位 #add 141211
   CALL cl_set_comp_entry("sfdd004",TRUE)  #储位
   CALL cl_set_comp_entry("sfdd005",TRUE)  #批号
   CALL cl_set_comp_entry("sfdd010",TRUE)  #库存管理特征
   LET g_sfdd003_switch = 'Y'   #庫位        可输入性 Y可输入 N不可输入 add 141211
   LET g_sfdd004_switch = 'Y'   #儲位        可输入性 Y可输入 N不可输入
   LET g_sfdd005_switch = 'Y'   #批號        可输入性 Y可输入 N不可输入
   LET g_sfdd010_switch = 'Y'   #庫存管理特徵 可输入性 Y可输入 N不可输入
   
   CALL cl_set_comp_entry("sfdd008,sfdd009",TRUE)  #参考单位,数量
   
   #料件做产品特征管理时，产品特征栏位不允许空白
   CALL cl_set_comp_required("sfdd013",FALSE)  #add 141204
END FUNCTION]]>
  </point>
  <point name="function.asft310_set_no_entry_b_sfdd" order="17" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_set_no_entry_b_sfdd(p_cmd)
DEFINE p_cmd      LIKE type_t.chr1
DEFINE l_imaf015  LIKE imaf_t.imaf015
DEFINE l_imaa005  LIKE imaa_t.imaa005

   IF g_prog[1,6] = 'asft31' THEN
      #參數允許發料替代=Y時，才允許輸入发料料号
      CALL s_aooi200_get_slip(g_sfda_m.sfdadocno) RETURNING l_success,g_ooba002
      CALL cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0072') RETURNING g_para
      IF cl_null(g_para) THEN LET g_para = 'N' END IF
      IF g_para = 'N' THEN
         CALL cl_set_comp_entry("sfdd001,sfdd013",FALSE)
      END IF
   END IF
   IF g_prog[1,6] = 'asft32' THEN
      CALL cl_set_comp_entry("sfdd001,sfdd013",FALSE)
   END IF
   #add 141211
   #當指定库位為空白時才允許修改
   IF NOT cl_null(g_sfdc4_d[g_detail_idx].sfdc012) THEN
      CALL cl_set_comp_entry("sfdd003",FALSE)  #库位
      LET g_sfdd003_switch = 'N'
   END IF
   #add 141211 end
   #當指定儲位為空白時才允許修改
   IF NOT cl_null(g_sfdc4_d[g_detail_idx].sfdc013) THEN
      CALL cl_set_comp_entry("sfdd004",FALSE)  #储位
      LET g_sfdd004_switch = 'N'
   END IF
   #當指定批號為空白時才允許輸入
   IF NOT cl_null(g_sfdc4_d[g_detail_idx].sfdc014) THEN
      CALL cl_set_comp_entry("sfdd005",FALSE)  #批号
      LET g_sfdd005_switch = 'N'
   END IF
   #當指定庫存管理特徵為空白時才允許輸入
   IF NOT cl_null(g_sfdc4_d[g_detail_idx].sfdc016) THEN
      CALL cl_set_comp_entry("sfdd010",FALSE)  #库存管理特征
      LET g_sfdd010_switch = 'N'
   END IF
   
   SELECT imaf015 INTO l_imaf015  #参考单位
     FROM imaf_t
    WHERE imafent = g_enterprise
      AND imafsite= g_site
      AND imaf001 = g_sfdd_d[l_ac].sfdd001
   #料件有使用參考單位時才可輸入
   CALL cl_set_comp_entry("sfdd008",FALSE)  #参考单位 统一不允许修改 默认料件中设置的单位
   IF g_ref_unit = 'N' THEN
      CALL cl_set_comp_entry("sfdd009",FALSE)  #数量
   ELSE
      IF cl_null(l_imaf015) THEN
         CALL cl_set_comp_entry("sfdd009",FALSE)  #数量
      END IF
   END IF
   
   #料件做产品特征管理时，不允许空白
   IF NOT cl_null(g_sfdd_d[l_ac].sfdd001) THEN
      SELECT imaa005 INTO l_imaa005  #特征类别
        FROM imaa_t
       WHERE imaaent  = g_enterprise
         AND imaa001  = g_sfdd_d[l_ac].sfdd001
      IF NOT cl_null(l_imaa005) THEN
         CALL cl_set_comp_required("sfdd013",TRUE)  #add 141204
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="function.asft310_chk_loca" order="18" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#检查储位 校验带值
PRIVATE FUNCTION asft310_chk_loca(p_ware,p_loca)
DEFINE p_ware      LIKE sfdc_t.sfdc012  #库位
DEFINE p_loca      LIKE sfdc_t.sfdc013  #储位
DEFINE r_success   LIKE type_t.num5
DEFINE r_loca_desc LIKE type_t.chr80

   LET r_success = TRUE
   
   IF cl_null(p_ware) OR cl_null(p_loca) THEN
      RETURN r_success
   END IF
   
   #校验带值说明
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = p_ware
   LET g_chkparam.arg2 = p_loca
   IF cl_chk_exist_and_ref_val("v_inab003_2") THEN
      #檢查成功時後續處理
      LET r_loca_desc = g_chkparam.return1
   ELSE
      LET r_success = FALSE
   END IF

   RETURN r_success,r_loca_desc
END FUNCTION]]>
  </point>
  <point name="function.asft310_chk_sfda003" order="19" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_chk_sfda003()
DEFINE r_success  LIKE type_t.num5

   LET r_success = TRUE
   
   IF g_sfda_m.sfda002 = '15' OR g_sfda_m.sfda002 = '25' THEN  #製程中委外時，顯示名稱為委外廠商
      #厂商资料检查
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = g_sfda_m.sfda003
      #檢查存在
      IF NOT cl_chk_exist("v_pmaa001_1") THEN
         LET r_success = FALSE
      END IF
   ELSE
     #部门检查
     IF NOT s_department_chk(g_sfda_m.sfda003,g_sfda_m.sfdadocdt) THEN
         LET r_success = FALSE
     END IF
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asft310_get_sfdc007" order="20" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 获取本单据其他项次的需求申请数量
# Memo...........:
# Usage..........: CALL asft310_get_sfdc007(p_cmd)
#                  RETURNING r_sfdc007
# Input parameter: p_cmd       a:新增  u:修改
# Return code....: r_sfdc007   需求申请数量
# Date & Author..: 2013/12/19 By zhangllc
# Modify.........:
################################################################################
PRIVATE FUNCTION asft310_get_sfdc007(p_cmd)
DEFINE p_cmd       LIKE type_t.chr1     #a:新增 u:修改
DEFINE r_sfdc007   LIKE sfdc_t.sfdc007  #需求申请数量

   #本发料单据其他项次的
   IF p_cmd = 'u' THEN
      SELECT SUM(sfdc007) INTO r_sfdc007 FROM sfdc_t
       WHERE sfdcent = g_enterprise
         AND sfdcdocno=g_sfda_m.sfdadocno       #发料单单号
         AND sfdcseq != g_sfdc_d_t.sfdcseq
         AND sfdc001 = g_sfdc_d[l_ac].sfdc001  #工单
         AND sfdc002 = g_sfdc_d[l_ac].sfdc002  #工单项次
         AND sfdc003 = g_sfdc_d[l_ac].sfdc003  #工单项序
   ELSE
      SELECT SUM(sfdc007) INTO r_sfdc007 FROM sfdc_t
       WHERE sfdcent = g_enterprise
         AND sfdcdocno=g_sfda_m.sfdadocno       #发料单单号
         AND sfdc001 = g_sfdc_d[l_ac].sfdc001  #工单
         AND sfdc002 = g_sfdc_d[l_ac].sfdc002  #工单项次
         AND sfdc003 = g_sfdc_d[l_ac].sfdc003  #工单项序
   END IF
   IF cl_null(r_sfdc007) THEN LET r_sfdc007 = 0 END IF
   
   RETURN r_sfdc007
END FUNCTION]]>
  </point>
  <point name="function.asft310_init" order="21" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_init()
   DEFINE l_msg      STRING
   
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   LET g_error_show = 1
   LET g_today = cl_get_today()
   
   CALL cl_set_combo_scc('b_sfda002','4013')
   CALL cl_set_combo_scc_part('sfdastus','13','D,N,W,X,Y,A,R,S')
   CALL cl_set_combo_scc('sfda002','4013')
   CALL cl_set_combo_scc('sfda015','4029')  #来源类型
   CALL cl_set_combo_scc('replace','4011')    #取替代建议
   CALL cl_set_combo_scc('replace04','4011')  #取替代建议

   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件

   #add-point:畫面資料初始化
   #---SCC---
   CASE g_prog
      WHEN 'asft310'
           CALL cl_set_combo_scc_part('sfda002','4013','11,12,13,14,15')
      WHEN 'asft311'
           CALL cl_set_combo_scc_part('sfda002','4013','11')
      WHEN 'asft312'
           CALL cl_set_combo_scc_part('sfda002','4013','12')
      WHEN 'asft313'
           CALL cl_set_combo_scc_part('sfda002','4013','13')
      WHEN 'asft314'
           CALL cl_set_combo_scc_part('sfda002','4013','14')
      WHEN 'asft315'
           CALL cl_set_combo_scc_part('sfda002','4013','15')
      WHEN 'asft320'
           CALL cl_set_combo_scc_part('sfda002','4013','21,22,23,24,25')
      WHEN 'asft321'
           CALL cl_set_combo_scc_part('sfda002','4013','21')
      WHEN 'asft322'
           CALL cl_set_combo_scc_part('sfda002','4013','22')
      WHEN 'asft323'
           CALL cl_set_combo_scc_part('sfda002','4013','23')
      WHEN 'asft324'
           CALL cl_set_combo_scc_part('sfda002','4013','24')
      WHEN 'asft325'
           CALL cl_set_combo_scc_part('sfda002','4013','25')
   END CASE
   
   #---visible---
   CALL cl_set_comp_visible("sfdd011,sfdf011",FALSE)  #add 141118包装容器隐藏
   #发退料需求、料号汇总、发退料明细、制造批序号页签 页签隐藏
   IF g_prog='asft315' OR g_prog = 'asft325' THEN
      CALL cl_set_comp_visible("page_3,page_4,page_5,page_6",FALSE)
   END IF
   #用不到套数页签的类型，套数页签隐藏
   IF g_prog='asft314' OR g_prog='asft323' OR g_prog = 'asft324' THEN
      CALL cl_set_comp_visible("bpage_1",FALSE)
   END IF
   #當整體參數有使用參考單位時才顯示
   IF g_ref_unit = 'N' THEN
      CALL cl_set_comp_visible("sfdc009,sfdc009_desc,sfdc010,sfdc011,diff2",FALSE) #參考單位
      CALL cl_set_comp_visible("sfde006,sfde006_desc,sfde007,sfde008,diff23",FALSE) #參考單位
      CALL cl_set_comp_visible("sfdf008,sfdf008_desc,sfdf009",FALSE) #參考單位
      CALL cl_set_comp_visible("sfdc009_4,sfdc009_4_desc,sfdc010_4,sfdc011_4,diff24",FALSE) #參考單位
      CALL cl_set_comp_visible("sfdd008,sfdd008_desc,sfdd009",FALSE) #參考單位
   END IF
   #退料单保税料imaf034、客供料sfde009 隐藏
   IF g_prog[1,6]='asft32' THEN
      CALL cl_set_comp_visible("imaf034_3,sfde009",FALSE) #參考單位
   END IF
   #runcard 在类型为非制程委外时隐藏
   IF g_prog!='asft310' AND g_prog!='asft320' AND g_prog!='asft315' AND g_prog!='asft325' THEN
      CALL cl_set_comp_visible("sfdb002",FALSE)
   END IF
   #部位  在制程中委外时隐藏不显示
   IF g_prog='asft315' OR g_prog='asft325' THEN
      CALL cl_set_comp_visible("sfdb003,sfdb003_desc",FALSE)
   END IF
   
   #退料单调拨产生按钮隐藏
   IF g_prog[1,6] = 'asft32' THEN
      #CALL cl_set_act_visible("gen_asfp370",FALSE)
      #CALL cl_set_toolbaritem_visible("gen_asfp370",FALSE)
      CALL cl_set_act_visible_toolbaritem("gen_asfp370",FALSE)
   END IF
   #发料需求产生按钮隐藏
   #只有11,12,13,21,22才允许点击“发退料需求产生”按钮。在其他作业中，把这个按钮进行隐藏
   IF  g_prog != 'asft310' AND g_prog != 'asft320'
   AND g_prog != 'asft311' AND g_prog != 'asft313' AND g_prog != 'asft321'
   AND g_prog != 'asft312' AND g_prog != 'asft322' THEN
      CALL cl_set_act_visible_toolbaritem("gen_sfdc",FALSE)
   END IF
   
   #---requried---
   CALL cl_set_comp_required("sfdb003,sfdb004,sfdb005",FALSE)
   #制程委外时不可空白，其他的允许空白
   IF g_prog='asft315' OR g_prog = 'asft325' THEN
      CALL cl_set_comp_required("sfdb004,sfdb005",TRUE)
   END IF
   
   #---entry---
   #退料时，明细发料料号不允许输入
   IF g_prog[1,6] = 'asft32' THEN
      CALL cl_set_comp_entry("sfdd001,sfdd013",FALSE)  #发料料号
   END IF
   
   #--ACTION
   #asft310,asft320不允许新增，修改
   IF g_prog='asft310' OR g_prog='asft320' THEN
      CALL cl_set_act_visible_toolbaritem("insert,modify,modify_detail",FALSE)
   END IF
   
   #标签说明更改
   IF g_prog='asft315' OR g_prog='asft325' THEN
      LET l_msg = cl_getmsg("asf-00685",g_lang)  #委外厂商
      CALL gfrm_curr.setElementtext("lbl_sfda003",l_msg)
   END IF
   #end add-point

   CALL asft310_default_search()

END FUNCTION]]>
  </point>
  <point name="function.asft310_ui_dialog" order="22" ver="11" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_ui_dialog()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE l_inao013  LIKE inao_t.inao013  #出入库码
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD

   {</Local define>}

   CALL cl_set_act_visible("accept,cancel", FALSE)

   CALL gfrm_curr.setElementImage("logo","logo/applogo.png")
   #IF g_wc.trim() <> "1=1" THEN
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF

   WHILE TRUE

      CALL asft310_browser_fill("")
      
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_sfdadocno = g_sfdadocno_t THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF

      
      #add 150416切换营运据点画面处理
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_sfda_m.* TO NULL
         CALL g_sfdb_d.clear()
         CALL g_sfdc_d.clear()
         CALL g_sfde_d.clear()
         CALL g_sfdc4_d.clear()
         CALL g_sfdf_d.clear()
         CALL g_sfdd_d.clear()
         CALL g_inao_d.clear()
      
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL asft310_init()
      END IF
      #end
      
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
      
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)

            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE

               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF

               CALL asft310_fetch('') # reload data
               LET l_ac = 1
               CALL asft310_ui_detailshow() #Setting the current row

               CALL asft310_idx_chk()
               #NEXT FIELD sfdb001

               #add 150416
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
               #add 150416 end
         END DISPLAY

         DISPLAY ARRAY g_sfdb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1

            BEFORE ROW
               CALL asft310_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac

            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               CALL asft310_idx_chk()
               LET g_current_page = 1

            #自訂ACTION(detail_show,page_1)

         END DISPLAY

         DISPLAY ARRAY g_sfdc_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)

            BEFORE ROW
               CALL asft310_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               CALL asft310_b_fill2('6')


            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               CALL asft310_idx_chk()
               LET g_current_page = 2

            #自訂ACTION(detail_show,page_2)



         END DISPLAY

         DISPLAY ARRAY g_sfde_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)

            BEFORE ROW
               CALL asft310_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               CALL asft310_b_fill2('5')

            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               CALL asft310_idx_chk()
               LET g_current_page = 3

            #自訂ACTION(detail_show,page_3)


         END DISPLAY

         DISPLAY ARRAY g_sfdc4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)

            BEFORE ROW
               CALL asft310_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               CALL asft310_b_fill2('6')

            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               CALL asft310_idx_chk()
               LET g_current_page = 4

            #自訂ACTION(detail_show,page_4)

         END DISPLAY

         DISPLAY ARRAY g_sfdf_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)

            BEFORE ROW
               CALL asft310_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_detail_idx2 = l_ac

            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               CALL asft310_idx_chk()
               LET g_current_page = 5

            #自訂ACTION(detail_show,page_5)

         END DISPLAY

         DISPLAY ARRAY g_sfdd_d TO s_detail6.* ATTRIBUTES(COUNT=g_rec_b)
            ON ACTION serialnum   #s_lot_sel
               LET g_action_choice="serialnum"   #s_lot_sel
               IF cl_auth_chk_act("serialnum") THEN  #s_lot_sel
                  IF g_sfda_m.sfdastus <> 'Y' THEN
                     #该单据编号不是已确认状态，不可维护入库明细！
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'ain-00024'
                     LET g_errparam.extend = ""
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
            
                     EXIT DIALOG
                  END IF
            
                  IF cl_null(g_detail_idx2) OR g_detail_idx2 = 0 THEN
                     #未選擇資料,不可執行此操作;请选择一笔明细资料再执行此操作！
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00390'  #'abm-00073'单身缺少资料，不可维护！
                     LET g_errparam.extend = ""
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
            
                     EXIT DIALOG
                  END IF
            
                  IF NOT cl_null(g_sfdd_d[g_detail_idx2].sfddseq1) THEN
                     LET l_success = ''
                     CALL s_lot_sel_create_tmp()
                     CALL s_transaction_begin()
                     IF g_prog[1,6]='asft31' THEN
                        LET l_inao013 = -1  #出库
                     ELSE
                        LET l_inao013 = 1   #入库
                     END IF
                     #              資料抓取來源'1'代表從現有的製造批序號庫存明細檔inai_t中抓出資料供挑選
                     #                         '2'代表從單據對應的申請資料inao_t中抓取出資料供挑選
                     #                  資料類型:1.申請資料， 2.實際異動資料
                     CALL s_lot_sel('1','2',
                                    #營運據點 單據編號
                                    g_site,g_sfda_m.sfdadocno,
                                    #單據項次                        單據項序(若單據沒有到項序層則此參數固定傳0)
                                    g_sfdc4_d[g_detail_idx].sfdcseq,g_sfdd_d[g_detail_idx2].sfddseq1,
                                    #料件編號                        產品特徵
                                    g_sfdd_d[g_detail_idx2].sfdd001,g_sfdd_d[g_detail_idx2].sfdd013,
                                    #庫存管理特徵                    庫位
                                    g_sfdd_d[g_detail_idx2].sfdd010,g_sfdd_d[g_detail_idx2].sfdd003,
                                    #儲位                           批號
                                    g_sfdd_d[g_detail_idx2].sfdd004,g_sfdd_d[g_detail_idx2].sfdd005,
                                    #交易單位                       交易數量
                                    g_sfdd_d[g_detail_idx2].sfdd006,g_sfdd_d[g_detail_idx2].sfdd007,
                                    #出入庫異動碼'1:入庫'、'-1出庫'    作業編號 營運據點
                                    l_inao013,g_prog,g_site)
                          RETURNING l_success
                     IF l_success THEN
                        CALL s_transaction_end('Y','0')
                     ELSE
                        CALL s_transaction_end('N','0')
                     END IF
                     CALL s_lot_sel_drop_tmp()
                  END IF
                  EXIT DIALOG
               END IF
            
            BEFORE ROW
               CALL asft310_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_detail_idx2 = l_ac

            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               CALL asft310_idx_chk()
               LET g_current_page = 6
               CALL cl_set_toolbaritem_visible("serialnum",TRUE)  #s_lot_ins,s_lot_sel

            #自訂ACTION(detail_show,page_6)

         END DISPLAY

         DISPLAY ARRAY g_inao_d TO s_detail7.* ATTRIBUTES(COUNT=g_rec_b)

            BEFORE ROW
               CALL asft310_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_detail_idx = l_ac
               CALL asft310_b_fill_inao()

            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               CALL asft310_idx_chk()
               LET g_current_page = 7

            #自訂ACTION(detail_show,page_7)

         END DISPLAY

         #SUBDIALOG sub_s_lot.s_lot_display

         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps

         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE

            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF

            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL asft310_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL asft310_ui_detailshow() #Setting the current row

            #筆數顯示
            LET g_current_page = 1
            CALL asft310_idx_chk()

         ON ACTION bpage_1
            CALL cl_set_toolbaritem_visible("serialnum",FALSE)  #s_lot_ins,s_lot_sel
            
         ON ACTION page_3
            CALL cl_set_toolbaritem_visible("serialnum",FALSE)  #s_lot_ins,s_lot_sel
            
         ON ACTION page_4
            CALL cl_set_toolbaritem_visible("serialnum",FALSE)  #s_lot_ins,s_lot_sel
            
         ON ACTION page_5  #发退料明细页签
            CALL cl_set_toolbaritem_visible("serialnum",TRUE)  #s_lot_ins,s_lot_sel
            
         ON ACTION page_6
            CALL cl_set_toolbaritem_visible("serialnum",FALSE)  #s_lot_ins,s_lot_sel
            
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL asft310_statechange()
            EXIT DIALOG

         #此段落由子樣板a32產生
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            
            #END add-point
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               #mod pattern 修改调整150624
               #LET g_wc = ls_wc
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
               INITIALIZE g_wc2_table3 TO NULL
               INITIALIZE g_wc2_table5 TO NULL
               INITIALIZE g_wc2_table6 TO NULL


               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "sfda_t"
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "sfdb_t"
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "sfdc_t"
                        LET g_wc2_table2 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "sfde_t"
                        LET g_wc2_table3 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "sfdf_t"
                        LET g_wc2_table5 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "sfdd_t"
                        LET g_wc2_table6 = la_wc[li_idx].wc


                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
                  OR NOT cl_null(g_wc2_table3)
                  OR NOT cl_null(g_wc2_table5)
                  OR NOT cl_null(g_wc2_table6)


                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF


                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF

                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               #mod pattern 修改调整150624 end
               CALL asft310_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF

         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               #mod pattern 修改调整150624
               #LET g_wc = ls_wc
               ##取得條件後需要重查、跳到結果第一筆資料的功能程式段
               #CALL asft310_browser_fill("F")
               #IF g_browser_cnt = 0 THEN
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code = "-100"
               #   LET g_errparam.extend = ""
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #
               #   CLEAR FORM
               #ELSE
               #   CALL asft310_fetch("F")
               #END IF
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
               INITIALIZE g_wc2_table3 TO NULL
               INITIALIZE g_wc2_table5 TO NULL
               INITIALIZE g_wc2_table6 TO NULL
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "sfda_t"
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "sfdb_t"
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "sfdc_t"
                        LET g_wc2_table2 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "sfde_t"
                        LET g_wc2_table3 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "sfdf_t"
                        LET g_wc2_table5 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "sfdd_t"
                        LET g_wc2_table6 = la_wc[li_idx].wc


                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
                  OR NOT cl_null(g_wc2_table3)
                  OR NOT cl_null(g_wc2_table5)
                  OR NOT cl_null(g_wc2_table6)


                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF


                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL asft310_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = ""
                     LET g_errparam.code   = "-100"
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL asft310_fetch("F")
                  END IF
               END IF
               #mod pattern 修改调整150624 end
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()

         #ACTION表單列
         ON ACTION filter
            CALL asft310_filter()
            EXIT DIALOG

         ON ACTION first
            CALL asft310_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asft310_idx_chk()

         ON ACTION previous
            CALL asft310_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asft310_idx_chk()

         ON ACTION jump
            CALL asft310_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asft310_idx_chk()

         ON ACTION next
            CALL asft310_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asft310_idx_chk()

         ON ACTION last
            CALL asft310_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asft310_idx_chk()

         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG

         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG

         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF

         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF

         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet_detail",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet_detail",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden
            END IF

         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL asft310_delete()
               #add-point:ON ACTION delete
               
               #END add-point
            END IF

         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL asft310_insert()
               #add-point:ON ACTION insert
               
               #END add-point
               EXIT DIALOG
            END IF

         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               CALL asft310_modify()
               #add-point:ON ACTION modify
               
               #END add-point
               EXIT DIALOG
            END IF

         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               CALL asft310_modify()
               #add-point:ON ACTION modify_detail
               
               #END add-point
               EXIT DIALOG
            END IF

         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               #add-point:ON ACTION output
               #MENU "" ATTRIBUTE (STYLE="popup", IMAGE="question")
               #   ON ACTION open_asfr310_g01
               #      CALL asfr310_g01("sfdaent ="|| g_enterprise ||" AND sfdadocno ='"|| g_sfda_m.sfdadocno||"'")
               #      EXIT MENU
               #
               #   ON ACTION open_asfr310_g02
               #      CALL asfr310_g02("sfdaent ="|| g_enterprise ||" AND sfdadocno ='"|| g_sfda_m.sfdadocno||"'")
               #      EXIT MENU
               #
               #   ON ACTION open_asfr310_g03
               #      CALL asfr310_g03("sfdaent ="|| g_enterprise ||" AND sfdadocno ='"|| g_sfda_m.sfdadocno||"'",'')
               #      EXIT MENU
               #
               #   ON ACTION open_asfr310_g04
               #      CALL asfr310_g04("sfdaent ="|| g_enterprise ||" AND sfdadocno ='"|| g_sfda_m.sfdadocno||"'",'')
               #      EXIT MENU
               #END MENU
               LET g_rep_wc = " sfdaent = '",g_enterprise,"' AND sfdadocno = '",g_sfda_m.sfdadocno,"' "
               &include "erp/asf/asft310_rep.4gl"
               #END add-point
               EXIT DIALOG
            END IF

         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL asft310_query()
               #add-point:ON ACTION query
               
               #END add-point
            END IF

         #ON ACTION reproduce
         #   LET g_action_choice="reproduce"
         #   IF cl_auth_chk_act("reproduce") THEN
         #      CALL asft310_reproduce()
         #      #add-point:ON ACTION reproduce
         #      
         #      #END add-point
         #      EXIT DIALOG
         #   END IF

         #調撥單產生
         ON ACTION gen_asfp370
            #LET g_action_choice="gen_asfp370"
            IF cl_auth_chk_act("gen_asfp370") THEN
               #add-point:ON ACTION gen_asfp370
               LET g_action_choice=""
               INITIALIZE la_param.* TO NULL
               LET la_param.prog = "asfp370"  #发料前调拨作业
               LET la_param.param[1] = g_sfda_m.sfdadocno
               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun(ls_js) 
               #END add-point
               EXIT DIALOG
            END IF

         ##发/退料需求产生
         #ON ACTION gen_sfdc
         #   #LET g_action_choice="gen_sfdc"
         #   IF g_sfda_m.sfda002 != '11' AND g_sfda_m.sfda002 != '13' AND g_sfda_m.sfda002 != '21'  THEN
         #      #CALL cl_err('','asf-00169',1)
         #      INITIALIZE g_errparam TO NULL
         #      LET g_errparam.code = "asf-00169"
         #      LET g_errparam.extend = ""
         #      LET g_errparam.popup = TRUE
         #      CALL cl_err()
         #      EXIT DIALOG
         #   END IF
         #   SELECT COUNT(*) INTO l_cnt FROM sfdb_t
         #    WHERE sfdbent  = g_enterprise
         #      AND sfdbdocno= g_sfda_m.sfdadocno
         #   IF l_cnt = 0 THEN
         #      #CALL cl_err('','asf-00170',1)
         #      INITIALIZE g_errparam TO NULL
         #      LET g_errparam.code = "asf-00170"
         #      LET g_errparam.extend = ""
         #      LET g_errparam.popup = TRUE
         #      CALL cl_err()
         #      EXIT DIALOG
         #   END IF
         #   IF cl_auth_chk_act("gen_sfdc") THEN
         #      #add-point:ON ACTION serialnum
         #      IF asft310_01_cre_tmp_table() THEN
         #         CALL s_transaction_begin()
         #         CALL asft310_01(g_sfda_m.sfdadocno)
         #            RETURNING l_success
         #         IF l_success = TRUE THEN
         #            CALL s_transaction_end('Y','0')
         #         ELSE
         #            CALL s_transaction_end('N','0')
         #         END IF
         #         CALL asft310_01_drop_tmp_table()
         #      END IF
         #      #END add-point
         #      EXIT DIALOG
         #   END IF

         ##製造批序號維護
         #ON ACTION serialnum
         #   #LET g_action_choice="serialnum"
         #   IF cl_auth_chk_act("serialnum") THEN
         #      #add-point:ON ACTION serialnum
         #      #END add-point
         #      EXIT DIALOG
         #   END IF

         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL asft310_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document

               #END add-point
               CALL cl_doc()
            END IF

         ON ACTION agendum
            CALL asft310_set_pk_array()
            #add-point:ON ACTION agendum

            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()

         ON ACTION exporttoexcel   #匯出excel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_export_node[1] = base.typeInfo.create(g_browser)
               LET g_export_id[1]   = "s_browse"
               LET g_export_node[2] = base.typeInfo.create(g_sfdb_d)
               LET g_export_id[2]   = "s_detail1"
               LET g_export_node[3] = base.typeInfo.create(g_sfdc_d)
               LET g_export_id[3]   = "s_detail2"
               LET g_export_node[4] = base.typeInfo.create(g_sfde_d)
               LET g_export_id[4]   = "s_detail3"
               LET g_export_node[5] = base.typeInfo.create(g_sfdf_d)
               LET g_export_id[5]   = "s_detail5"
               LET g_export_node[6] = base.typeInfo.create(g_sfdc4_d)
               LET g_export_id[6]   = "s_detail4"
               LET g_export_node[7] = base.typeInfo.create(g_sfdd_d)
               LET g_export_id[7]   = "s_detail6"
               LET g_export_node[8] = base.typeInfo.create(g_inao_d)
               LET g_export_id[8]   = "s_detail7"
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
            
         ON ACTION followup
            CALL asft310_set_pk_array()
            #add-point:ON ACTION followup

            #END add-point
            CALL cl_user_overview_follow(g_sfda_m.sfdadocdt)
         
         #主選單用ACTION
         #&include "main_menu.4gl"
         &include "main_menu_exit_dialog.4gl"   #mod 150416
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG

      END DIALOG

      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF

   END WHILE

   CALL cl_set_act_visible("accept,cancel", TRUE)

END FUNCTION]]>
  </point>
  <point name="function.asft310_browser_search" order="23" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_browser_search(p_type)
   {<Local define>}
   DEFINE p_type LIKE type_t.chr10
   {</Local define>}
   #add-point:browser_search段define
   
   #end add-point

   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00005"
      LET g_errparam.extend = "searchcol"
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN FALSE
   END IF

   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF

   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY sfdadocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF

   CALL asft310_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE

END FUNCTION]]>
  </point>
  <point name="function.asft310_browser_fill" order="24" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_browser_fill(ps_page_action)
   {<Local define>}
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   {</Local define>}

   #清除畫面
   CLEAR FORM
   INITIALIZE g_sfda_m.* TO NULL
   CALL g_sfdb_d.clear()
   CALL g_sfdc_d.clear()
   CALL g_sfde_d.clear()
   CALL g_sfdf_d.clear()
   CALL g_sfdc4_d.clear()
   CALL g_sfdd_d.clear()
   CALL g_inao_d.clear()
   CALL g_browser.clear()

   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "sfdadocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF

   LET l_wc  = g_wc.trim()
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   ELSE
      #add 141104
      CASE g_prog
         WHEN 'asft310'
              LET l_wc = l_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('11','12','13','14','15')"
         WHEN 'asft311'
              LET l_wc = l_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('11')"
         WHEN 'asft312'
              LET l_wc = l_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('12')"
         WHEN 'asft313'
              LET l_wc = l_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('13')"
         WHEN 'asft314'
              LET l_wc = l_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('14')"
         WHEN 'asft315'
              LET l_wc = l_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('15')"
         WHEN 'asft320'
              LET l_wc = l_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('21','22','23','24','25')"
         WHEN 'asft321'
              LET l_wc = l_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('21')"
         WHEN 'asft322'
              LET l_wc = l_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('22')"
         WHEN 'asft323'
              LET l_wc = l_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('23')"
         WHEN 'asft324'
              LET l_wc = l_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('24')"
         WHEN 'asft325'
              LET l_wc = l_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('25')"
      END CASE
      #add 141104 end
   END IF

   IF l_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件
      #mod 150109
      #LET l_sub_sql = " SELECT UNIQUE sfdadocno ",
      #                  " FROM sfda_t ",
      #                        " LEFT JOIN sfdb_t ON sfdbent = sfdaent AND sfdbsite = sfdasite AND sfdadocno = sfdbdocno ",
      #                        " LEFT JOIN sfdc_t ON sfdcent = sfdaent AND sfdcsite = sfdasite AND sfdadocno = sfdcdocno",
      #                        " LEFT JOIN sfdd_t ON sfddent = sfdaent AND sfddsite = sfdasite AND sfdcdocno = sfdddocno AND sfdcseq = sfddseq",
      #                        " LEFT JOIN sfde_t ON sfdeent = sfdaent AND sfdesite = sfdasite AND sfdadocno = sfdedocno",
      #                        " LEFT JOIN sfdf_t ON sfdfent = sfdaent AND sfdfsite = sfdasite AND sfdedocno = sfdfdocno AND sfdeseq = sfdfseq",
      #                        #" LEFT JOIN inao_t ON inaoent = sfdaent AND inaosite = sfdasite AND sfdadocno = inaodocno",
      #                 #" WHERE sfdaent = '" ||g_enterprise|| "' AND sfdasite = '" ||g_site|| "' AND sfdbent = '" ||g_enterprise|| "' AND sfdbsite = '" ||g_site|| "' AND ",l_wc, " AND ", l_wc2
      #                  " WHERE sfdaent = '" ||g_enterprise|| "' AND sfdasite = '" ||g_site|| "' AND ",l_wc, " AND ", l_wc2

      LET l_sub_sql = " SELECT UNIQUE sfdadocno FROM sfda_t "
      IF l_wc2.getindexof('sfdb',1)>0 THEN
         LET l_sub_sql = l_sub_sql CLIPPED," LEFT JOIN sfdb_t ON sfdbent = sfdaent AND sfdadocno = sfdbdocno "
      END IF
      IF l_wc2.getindexof('sfdc',1)>0 THEN
         LET l_sub_sql = l_sub_sql CLIPPED," LEFT JOIN sfdc_t ON sfdcent = sfdaent AND sfdadocno = sfdcdocno "
      END IF
      IF l_wc2.getindexof('sfdd',1)>0 THEN
         LET l_sub_sql = l_sub_sql CLIPPED," LEFT JOIN sfdd_t ON sfddent = sfdaent AND sfdcdocno = sfdddocno AND sfdcseq = sfddseq "
      END IF
      IF l_wc2.getindexof('sfde',1)>0 THEN
         LET l_sub_sql = l_sub_sql CLIPPED," LEFT JOIN sfde_t ON sfdeent = sfdaent AND sfdadocno = sfdedocno "
      END IF
      IF l_wc2.getindexof('sfdf',1)>0 THEN
         LET l_sub_sql = l_sub_sql CLIPPED," LEFT JOIN sfdf_t ON sfdfent = sfdaent AND sfdedocno = sfdfdocno AND sfdeseq = sfdfseq "
      END IF
      LET l_sub_sql = l_sub_sql CLIPPED," WHERE sfdaent = '" ||g_enterprise|| "' AND sfdasite = '" ||g_site|| "' AND ",l_wc, " AND ", l_wc2
      #mod 150109
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE sfdadocno ",
                        " FROM sfda_t ",
                        "WHERE sfdaent = '" ||g_enterprise|| "' AND sfdasite = '" ||g_site|| "' AND ",l_wc CLIPPED

   END IF
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre

   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示

   #LET g_page_action = ps_page_action          # Keep Action

   IF ps_page_action = "F" OR
      ps_page_action = "P" OR
      ps_page_action = "N" OR
      ps_page_action = "L" THEN
      LET g_page_action = ps_page_action
   END IF

   CASE ps_page_action
      WHEN "F"
         LET g_pagestart = 1

      WHEN "P"
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
            LET g_pagestart = 1
         END IF

      WHEN "N"
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF

      WHEN "L"
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE

      WHEN '/'
         LET g_pagestart = g_jump
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = 1
         END IF

   END CASE

   #單身有輸入查詢條件且非null
   IF l_wc2 <> " 1=1" AND NOT cl_null(l_wc2) THEN
      #依照sfdadocno,sfdadocdt,sfda001,sfda002,sfda003,'',sfda004,'',sfda005 Browser欄位定義(取代原本bs_sql功能)
      #mod 150109
      #LET l_sql_rank = "SELECT DISTINCT sfdastus,sfdadocno,sfdadocdt,sfda001,sfda002,sfda003,'',sfda004,
      #    '',sfda005,DENSE_RANK() OVER(ORDER BY sfdadocno ",g_order,") AS RANK ",
      #                  " FROM sfda_t ",
      #                        " LEFT JOIN sfdb_t ON sfdbent = sfdaent AND sfdbsite = sfdasite AND sfdadocno = sfdbdocno ",
      #                        " LEFT JOIN sfdc_t ON sfdcent = sfdaent AND sfdcsite = sfdasite AND sfdadocno = sfdcdocno",
      #                        " LEFT JOIN sfde_t ON sfdeent = sfdaent AND sfdesite = sfdasite AND sfdadocno = sfdedocno",
      #                        " LEFT JOIN inao_t ON inaoent = sfdaent AND inaosite = sfdasite AND sfdadocno = inaodocno",
      #                        " LEFT JOIN sfdf_t ON sfdfent = sfdaent AND sfdfsite = sfdasite AND sfdedocno = sfdfdocno AND sfdeseq = sfdfseq",
      #                        " LEFT JOIN sfdd_t ON sfddent = sfdaent AND sfddsite = sfdasite AND sfdcdocno = sfdddocno AND sfdcseq = sfddseq",
      #                 " WHERE sfdaent = '" ||g_enterprise|| "' AND sfdasite = '" ||g_site|| "' AND ",l_wc," AND ",l_wc2
      LET l_sql_rank = "SELECT DISTINCT sfdastus,sfdadocno,sfdadocdt,sfda001,sfda002,sfda003,'',sfda004,
          '',sfda005,DENSE_RANK() OVER(ORDER BY sfdadocno ",g_order,") AS RANK ",
                        " FROM sfda_t "
      IF l_wc2.getindexof('sfdb',1)>0 THEN
         LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN sfdb_t ON sfdbent = sfdaent AND sfdadocno = sfdbdocno "
      END IF
      IF l_wc2.getindexof('sfdc',1)>0 THEN
         LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN sfdc_t ON sfdcent = sfdaent AND sfdadocno = sfdcdocno "
      END IF
      IF l_wc2.getindexof('sfdd',1)>0 THEN
         LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN sfdd_t ON sfddent = sfdaent AND sfdcdocno = sfdddocno AND sfdcseq = sfddseq "
      END IF
      IF l_wc2.getindexof('sfde',1)>0 THEN
         LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN sfde_t ON sfdeent = sfdaent AND sfdadocno = sfdedocno "
      END IF
      IF l_wc2.getindexof('sfdf',1)>0 THEN
         LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN sfdf_t ON sfdfent = sfdaent AND sfdedocno = sfdfdocno AND sfdeseq = sfdfseq "
      END IF
      IF l_wc2.getindexof('inao',1)>0 THEN
         LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN inao_t ON inaoent = sfdaent AND sfdadocno = inaodocno "
      END IF
      LET l_sql_rank = l_sql_rank CLIPPED," WHERE sfdaent = '" ||g_enterprise|| "' AND sfdasite = '" ||g_site|| "' AND ",l_wc, " AND ", l_wc2
      #mod 150109
   ELSE
      #單身無輸入資料
      LET l_sql_rank = "SELECT DISTINCT sfdastus,sfdadocno,sfdadocdt,sfda001,sfda002,sfda003,'',sfda004,
          '',sfda005,DENSE_RANK() OVER(ORDER BY sfdadocno ",g_order,") AS RANK ",
                       " FROM sfda_t ",
                       " WHERE sfdaent = '" ||g_enterprise|| "' AND sfdasite = '" ||g_site|| "' AND ", l_wc
   END IF

   #定義翻頁CURSOR
   LET g_sql= "SELECT sfdastus,sfdadocno,sfdadocdt,sfda001,sfda002,sfda003,'',sfda004,'',sfda005 FROM (",
       l_sql_rank,") WHERE ",
              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order

   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre

   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_sfdadocno,g_browser[g_cnt].b_sfdadocdt,
       g_browser[g_cnt].b_sfda001,g_browser[g_cnt].b_sfda002,g_browser[g_cnt].b_sfda003,g_browser[g_cnt].b_sfda003_desc,
       g_browser[g_cnt].b_sfda004,g_browser[g_cnt].b_sfda004_desc,g_browser[g_cnt].b_sfda005
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_sfda003
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_lang||"'",
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_sfda003_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_browser[g_cnt].b_sfda003_desc

      #人员姓名
      CALL s_desc_get_person_desc(g_browser[g_cnt].b_sfda004) RETURNING g_browser[g_cnt].b_sfda004_desc
      DISPLAY BY NAME g_browser[g_cnt].b_sfda004_desc

      #add-point:browser_fill段reference
      #部门
      IF g_browser[g_cnt].b_sfda002 = '15' OR g_browser[g_cnt].b_sfda002 = '25' THEN  #製程中委外時，顯示名稱為委外廠商
         #帶值:廠商名稱
         INITIALIZE g_chkparam.* TO NULL
         LET g_chkparam.arg1 = g_browser[g_cnt].b_sfda003
         CALL cl_ref_val("v_pmaal004")
         LET g_browser[g_cnt].b_sfda003_desc = g_chkparam.return1
         DISPLAY BY NAME g_browser[g_cnt].b_sfda003_desc
      ELSE
         #帶值:部门名稱
         CALL s_desc_get_department_desc(g_browser[g_cnt].b_sfda003) RETURNING g_browser[g_cnt].b_sfda003_desc
         DISPLAY BY NAME g_browser[g_cnt].b_sfda003_desc
      END IF          {#ADP版次:1#}
      #end add-point

      #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/open.png"  #unconfirmed
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "S"
            LET g_browser[g_cnt].b_statepic = "stus/16/posted.png"


		 #此段落由子樣板a33產生
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"


      END CASE


      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9035
         LET g_errparam.extend = ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF

   END FOREACH

   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()

   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0

   FREE browse_pre

   #add-point:browser_fill段結束前
   
   #end add-point

   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF

END FUNCTION]]>
  </point>
  <point name="function.asft310_ui_headershow" order="25" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_ui_headershow()
   #add-point:ui_headershow段define
   
   #end add-point

   LET g_sfda_m.sfdadocno = g_browser[g_current_idx].b_sfdadocno

    SELECT UNIQUE sfdadocno,sfdadocdt,sfda001,sfda002,sfda003,sfda004,sfda005,sfda015,sfda014,sfdastus,sfdaownid,sfdaowndp,
        sfdacrtid,sfdacrtdp,sfdacrtdt,sfdamodid,sfdamoddt,sfdacnfid,sfdacnfdt,sfdapstid,sfdapstdt
 INTO g_sfda_m.sfdadocno,g_sfda_m.sfdadocdt,g_sfda_m.sfda001,g_sfda_m.sfda002,g_sfda_m.sfda003,g_sfda_m.sfda004,
     g_sfda_m.sfda005,g_sfda_m.sfda015,g_sfda_m.sfda014,g_sfda_m.sfdastus,g_sfda_m.sfdaownid,g_sfda_m.sfdaowndp,g_sfda_m.sfdacrtid,g_sfda_m.sfdacrtdp,
     g_sfda_m.sfdacrtdt,g_sfda_m.sfdamodid,g_sfda_m.sfdamoddt,g_sfda_m.sfdacnfid,g_sfda_m.sfdacnfdt,
     g_sfda_m.sfdapstid,g_sfda_m.sfdapstdt
 FROM sfda_t
 WHERE sfdaent = g_enterprise AND sfdasite = g_site AND sfdadocno = g_sfda_m.sfdadocno
   CALL asft310_show()

END FUNCTION]]>
  </point>
  <point name="function.asft310_ui_detailshow" order="26" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_ui_detailshow()
   #add-point:ui_detailshow段define
   
   #end add-point

   #add-point:ui_detailshow段before
   
   #end add-point

   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)

      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)

      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)

      CALL g_curr_diag.setCurrentRow("s_detail5",g_detail_idx)

      CALL g_curr_diag.setCurrentRow("s_detail6",g_detail_idx)

      CALL g_curr_diag.setCurrentRow("s_detail7",g_detail_idx)


   END IF

   #add-point:ui_detailshow段after
   
   #end add-point

END FUNCTION]]>
  </point>
  <point name="function.asft310_ui_browser_refresh" order="27" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_ui_browser_refresh()
   {<Local define>}
   DEFINE l_i  LIKE type_t.num10
   {</Local define>}
   #add-point:ui_browser_refresh段define
   
   #end add-point

   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_sfdadocno = g_sfda_m.sfdadocno

         THEN
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR

   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF

   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示

END FUNCTION]]>
  </point>
  <point name="function.asft310_construct" order="28" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_construct()
   {<Local define>}
   DEFINE lc_qbe_sn   LIKE type_t.num10
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING
   {</Local define>}
   #add-point:cs段define
   
   #end add-point

   #清除畫面
   CLEAR FORM
   INITIALIZE g_sfda_m.* TO NULL
   CALL g_sfdb_d.clear()
   CALL g_sfdc_d.clear()

   CALL g_sfde_d.clear()
   CALL g_sfdf_d.clear()

   CALL g_sfdc4_d.clear()
   CALL g_sfdd_d.clear()

   CALL g_inao_d.clear()

   LET g_action_choice = ""

   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
   INITIALIZE g_wc2_table3 TO NULL
   INITIALIZE g_wc2_table5 TO NULL
   INITIALIZE g_wc2_table6 TO NULL

   LET g_qryparam.state = 'c'

   #add-point:cs段開始前
   
   #end add-point

   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #單頭
      CONSTRUCT BY NAME g_wc ON sfdadocno,sfdadocdt,sfda001,sfda002,sfda003,sfda004,sfda005,sfda015,sfda014,sfdastus,
          sfdaownid,sfdaowndp,sfdacrtid,sfdacrtdp,sfdacrtdt,sfdamodid,sfdamoddt,sfdacnfid,sfdacnfdt,
          sfdapstid,sfdapstdt

         BEFORE CONSTRUCT
#saki            CALL cl_qbe_init()

         ##----<<sfdacrtdt>>----
         AFTER FIELD sfdacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)

         #----<<sfdamoddt>>----
         AFTER FIELD sfdamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)

         #----<<sfdacnfdt>>----
         AFTER FIELD sfdacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)

         #----<<sfdapstdt>>----
         AFTER FIELD sfdapstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)

         ON ACTION controlp INFIELD sfdadocno
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CASE g_prog
               WHEN 'asft310'
                    LET g_qryparam.where = " sfda002 in ('11','12','13','14','15')"
               WHEN 'asft311'
                    LET g_qryparam.where = " sfda002 in ('11')"
               WHEN 'asft312'
                    LET g_qryparam.where = " sfda002 in ('12')"
               WHEN 'asft313'
                    LET g_qryparam.where = " sfda002 in ('13')"
               WHEN 'asft314'
                    LET g_qryparam.where = " sfda002 in ('14')"
               WHEN 'asft315'
                    LET g_qryparam.where = " sfda002 in ('15')"
               WHEN 'asft320'
                    LET g_qryparam.where = " sfda002 in ('21','22','23','24','25')"
               WHEN 'asft321'
                    LET g_qryparam.where = " sfda002 in ('21')"
               WHEN 'asft322'
                    LET g_qryparam.where = " sfda002 in ('22')"
               WHEN 'asft323'
                    LET g_qryparam.where = " sfda002 in ('23')"
               WHEN 'asft324'
                    LET g_qryparam.where = " sfda002 in ('24')"
               WHEN 'asft325'
                    LET g_qryparam.where = " sfda002 in ('25')"
            END CASE        
            CALL q_sfdadocno3()               #呼叫開窗 #製程中委外時，部门顯示名稱為委外廠商
            DISPLAY g_qryparam.return1 TO sfdadocno  #顯示到畫面上
            NEXT FIELD sfdadocno                     #返回原欄位

         ON ACTION controlp INFIELD sfda003
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CASE g_prog
               WHEN 'asft310'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('11','12','13','14','15')"
               WHEN 'asft311'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('11')"
               WHEN 'asft312'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('12')"
               WHEN 'asft313'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('13')"
               WHEN 'asft314'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('14')"
               WHEN 'asft315'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('15')"
               WHEN 'asft320'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('21','22','23','24','25')"
               WHEN 'asft321'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('21')"
               WHEN 'asft322'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('22')"
               WHEN 'asft323'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('23')"
               WHEN 'asft324'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('24')"
               WHEN 'asft325'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('25')"
            END CASE
            CALL q_sfda003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfda003  #顯示到畫面上
            NEXT FIELD sfda003                     #返回原欄位

         ON ACTION controlp INFIELD sfda004
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfda004  #顯示到畫面上
            NEXT FIELD sfda004                     #返回原欄位

         ON ACTION controlp INFIELD sfda005
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_sfda005()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfda005  #顯示到畫面上
            NEXT FIELD sfda005

         ON ACTION controlp INFIELD sfda014 #来源单号
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_sfda014()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfda014  #顯示到畫面上
            NEXT FIELD sfda014                     #返回原欄位

         ON ACTION controlp INFIELD sfdaownid
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfdaownid  #顯示到畫面上
            NEXT FIELD sfdaownid                     #返回原欄位

         ON ACTION controlp INFIELD sfdaowndp
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfdaowndp  #顯示到畫面上
            NEXT FIELD sfdaowndp                     #返回原欄位

         ON ACTION controlp INFIELD sfdacrtid
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfdacrtid  #顯示到畫面上
            NEXT FIELD sfdacrtid                     #返回原欄位

         ON ACTION controlp INFIELD sfdacrtdp
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfdacrtdp  #顯示到畫面上
            NEXT FIELD sfdacrtdp                     #返回原欄位

         ON ACTION controlp INFIELD sfdamodid
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfdamodid  #顯示到畫面上
            NEXT FIELD sfdamodid                     #返回原欄位

         ON ACTION controlp INFIELD sfdacnfid
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfdacnfid  #顯示到畫面上
            NEXT FIELD sfdacnfid                     #返回原欄位

         ON ACTION controlp INFIELD sfdapstid
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfdapstid  #顯示到畫面上
            NEXT FIELD sfdapstid                     #返回原欄位

      END CONSTRUCT

      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON sfdb001,sfdb002,sfdb003,sfdb004,sfdb005,sfdb006,sfdb007,sfdb008
           FROM s_detail1[1].sfdb001,s_detail1[1].sfdb002,s_detail1[1].sfdb003,s_detail1[1].sfdb004,
               s_detail1[1].sfdb005,s_detail1[1].sfdb006,s_detail1[1].sfdb007,s_detail1[1].sfdb008

         BEFORE CONSTRUCT
#saki            CALL cl_qbe_display_condition(lc_qbe_sn)

         ON ACTION controlp INFIELD sfdb001
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfaasite ='",g_site,"' "
            CALL q_sfaadocno_3()
            DISPLAY g_qryparam.return1 TO sfdb001
            NEXT FIELD sfdb001                     #返回原欄位

         ON ACTION controlp INFIELD sfdb003 #部位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "215"
            CALL q_oocq002_4()
            DISPLAY g_qryparam.return1 TO sfdb003
            NEXT FIELD sfdb003                     #返回原欄位

         ON ACTION controlp INFIELD sfdb004  #作业
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "221"
            CALL q_oocq002_4()
            DISPLAY g_qryparam.return1 TO sfdb004
            NEXT FIELD sfdb004                     #返回原欄位

         ON ACTION controlp INFIELD sfdb005 #作业序
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            CALL q_sfdb005()
            DISPLAY g_qryparam.return1 TO sfdb005
            NEXT FIELD sfdb005                     #返回原欄位
      END CONSTRUCT

      CONSTRUCT g_wc2_table2 ON sfdcseq,sfdc001,sfdc002,sfdc003,
                                --sfba002,sfba003,sfba004,
                                sfdc004,sfdc005,
                                --imaf034,imae092,sfba028,
                                sfdc006,
                                --sfba013,
                                sfdc007,sfdc008,
                                sfdc009,sfdc010,sfdc011,sfdc012,
                                sfdc013,sfdc014,sfdc016,sfdc015,
                                sfdc017
           FROM s_detail2[1].sfdcseq,s_detail2[1].sfdc001,s_detail2[1].sfdc002,s_detail2[1].sfdc003,
                --s_detail2[1].sfba002,s_detail2[1].sfba003,s_detail2[1].sfba004,
                s_detail2[1].sfdc004,s_detail2[1].sfdc005,
                --s_detail2[1].imaf034,s_detail2[1].imae092,s_detail2[1].sfba028,
                s_detail2[1].sfdc006,
                --s_detail2[1].sfba013,
                s_detail2[1].sfdc007,s_detail2[1].sfdc008,
                s_detail2[1].sfdc009,s_detail2[1].sfdc010,s_detail2[1].sfdc011,s_detail2[1].sfdc012,
                s_detail2[1].sfdc013,s_detail2[1].sfdc014,s_detail2[1].sfdc016,s_detail2[1].sfdc015,
                s_detail2[1].sfdc017

         BEFORE CONSTRUCT
#saki       CALL cl_qbe_display_condition(lc_qbe_sn)

         ON ACTION controlp INFIELD sfdc001
            #工单单号
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfbasite ='",g_site,"' "
            CALL q_sfba001()
            DISPLAY g_qryparam.return1 TO sfdc001
            NEXT FIELD sfdc001                     #返回原欄位 

#         ON ACTION controlp INFIELD sfba002
#         ON ACTION controlp INFIELD sfba003
#         ON ACTION controlp INFIELD sfba004

         ON ACTION controlp INFIELD sfdc004
            #需求料号
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdcsite ='",g_site,"' "
            CALL q_sfdc004()
            DISPLAY g_qryparam.return1 TO sfdc004
            NEXT FIELD sfdc004                     #返回原欄位

         ON ACTION controlp INFIELD sfdc005
            #特征
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdcsite ='",g_site,"' "
            CALL q_sfdc005()
            DISPLAY g_qryparam.return1 TO sfdc005
            NEXT FIELD sfdc005                     #返回原欄位

         ON ACTION controlp INFIELD sfdc006
            #单位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdcsite ='",g_site,"' "
            CALL q_sfdc006()
            DISPLAY g_qryparam.return1 TO sfdc006
            NEXT FIELD sfdc006                     #返回原欄位

         ON ACTION controlp INFIELD sfdc009
            #单位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdcsite ='",g_site,"' "
            CALL q_sfdc009()
            DISPLAY g_qryparam.return1 TO sfdc009
            NEXT FIELD sfdc009                     #返回原欄位

         ON ACTION controlp INFIELD sfdc012
            #库位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdcsite ='",g_site,"' "
            CALL q_sfdc012()
            DISPLAY g_qryparam.return1 TO sfdc012
            NEXT FIELD sfdc012                     #返回原欄位

         ON ACTION controlp INFIELD sfdc013
            #储位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdcsite ='",g_site,"' "
            CALL q_sfdc013()
            DISPLAY g_qryparam.return1 TO sfdc013
            NEXT FIELD sfdc013                     #返回原欄位

         ON ACTION controlp INFIELD sfdc014
            #批号
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdcsite ='",g_site,"' "
            CALL q_sfdc014()
            DISPLAY g_qryparam.return1 TO sfdc014
            NEXT FIELD sfdc014                     #返回原欄位

         ON ACTION controlp INFIELD sfdc016
            #库存管理特征
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdcsite ='",g_site,"' "
            CALL q_sfdc016()
            DISPLAY g_qryparam.return1 TO sfdc016
            NEXT FIELD sfdc016                     #返回原欄位

         ON ACTION controlp INFIELD sfdc015
            #理由码
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdcsite ='",g_site,"' "
            CALL q_sfdc015()
            DISPLAY g_qryparam.return1 TO sfdc015
            NEXT FIELD sfdc015                     #返回原欄位

      END CONSTRUCT

      CONSTRUCT g_wc2_table3 ON sfdeseq,sfde001,sfde002,sfde009,
                                sfde003,sfde004,sfde005,sfde006,
                                sfde007,sfde008,sfde010
           FROM s_detail3[1].sfdeseq,s_detail3[1].sfde001,s_detail3[1].sfde002,s_detail3[1].sfde009,
                s_detail3[1].sfde003,s_detail3[1].sfde004,s_detail3[1].sfde005,s_detail3[1].sfde006,
                s_detail3[1].sfde007,s_detail3[1].sfde008,s_detail3[1].sfde010

         BEFORE CONSTRUCT
#saki            CALL cl_qbe_display_condition(lc_qbe_sn)


         ON ACTION controlp INFIELD sfde001
            #需求料号
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdesite ='",g_site,"' "
            CALL q_sfde001()
            DISPLAY g_qryparam.return1 TO sfde001
            NEXT FIELD sfde001                     #返回原欄位

         ON ACTION controlp INFIELD sfde002
            #特征
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdesite ='",g_site,"' "
            CALL q_sfde002()
            DISPLAY g_qryparam.return1 TO sfde002
            NEXT FIELD sfde002                     #返回原欄位

         ON ACTION controlp INFIELD sfde003
            #单位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdesite ='",g_site,"' "
            CALL q_sfde003()
            DISPLAY g_qryparam.return1 TO sfde003

         ON ACTION controlp INFIELD sfde006
            #参考单位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdesite ='",g_site,"' "
            CALL q_sfde006()
            DISPLAY g_qryparam.return1 TO sfde006
            NEXT FIELD sfde006                     #返回原欄位

      END CONSTRUCT

      CONSTRUCT g_wc2_table5 ON sfdfseq1,sfdf001,sfdf013,sfdf002,
                                sfdf003,
                                sfdf004,sfdf005,sfdf010,sfdf006,
                                sfdf007,sfdf008,sfdf009,sfdf011,
                                sfdf012
           FROM s_detail5[1].sfdfseq1,s_detail5[1].sfdf001,s_detail5[1].sfdf013,s_detail5[1].sfdf002,
                s_detail5[1].sfdf003,
                s_detail5[1].sfdf004,s_detail5[1].sfdf005,s_detail5[1].sfdf010,s_detail5[1].sfdf006,
                s_detail5[1].sfdf007,s_detail5[1].sfdf008,s_detail5[1].sfdf009,s_detail5[1].sfdf011,
                s_detail5[1].sfdf012

         BEFORE CONSTRUCT


         ON ACTION controlp INFIELD sfdf001
            #发料料号
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdfsite ='",g_site,"' "
            CALL q_sfdf001()
            DISPLAY g_qryparam.return1 TO sfdf001
            NEXT FIELD sfdf001                     #返回原欄位 

         ON ACTION controlp INFIELD sfdf013
            #产品特征
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdfsite ='",g_site,"' "
            CALL q_sfdf013()
            DISPLAY g_qryparam.return1 TO sfdf013
            NEXT FIELD sfdf013                     #返回原欄位 

         ON ACTION controlp INFIELD sfdf003
            #库位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdfsite ='",g_site,"' "
            CALL q_sfdf003()
            DISPLAY g_qryparam.return1 TO sfdf003
            NEXT FIELD sfdf003                    #返回原欄位 

         ON ACTION controlp INFIELD sfdf004
            #储位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdfsite ='",g_site,"' "
            CALL q_sfdf004()
            DISPLAY g_qryparam.return1 TO sfdf004
            NEXT FIELD sfdf004                    #返回原欄位

         ON ACTION controlp INFIELD sfdf005
            #批号
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdfsite ='",g_site,"' "
            CALL q_sfdf005()
            DISPLAY g_qryparam.return1 TO sfdf005
            NEXT FIELD sfdf005                    #返回原欄位

         ON ACTION controlp INFIELD sfdf010
            #库存管理特征
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdfsite ='",g_site,"' "
            CALL q_sfdf010()
            DISPLAY g_qryparam.return1 TO sfdf010
            NEXT FIELD sfdf010                    #返回原欄位

         ON ACTION controlp INFIELD sfdf006
            #单位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdfsite ='",g_site,"' "
            CALL q_sfdf006()
            DISPLAY g_qryparam.return1 TO sfdf006
            NEXT FIELD sfdf006                    #返回原欄位

         ON ACTION controlp INFIELD sfdf008
            #add-point:ON ACTION controlp INFIELD sfdf008
            #参考单位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdfsite ='",g_site,"' "
            CALL q_sfdf008()
            DISPLAY g_qryparam.return1 TO sfdf008
            NEXT FIELD sfdf008                    #返回原欄位

         ON ACTION controlp INFIELD sfdf011
            #包装容器
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdfsite ='",g_site,"' "
            CALL q_sfdf011()
            DISPLAY g_qryparam.return1 TO sfdf011
            NEXT FIELD sfdf011                    #返回原欄位 

#         ON ACTION controlp INFIELD sfdf012

      END CONSTRUCT

      CONSTRUCT g_wc2_table6 ON sfddseq1,sfdd001,sfdd013,sfdd002,sfdd003,
                                sfdd004,sfdd005,sfdd010,sfdd006,
                                sfdd007,sfdd008,sfdd009,sfdd011,
                                sfdd012
           FROM s_detail6[1].sfddseq1,s_detail6[1].sfdd001,s_detail6[1].sfdd013,s_detail6[1].sfdd002,s_detail6[1].sfdd003,
                s_detail6[1].sfdd004,s_detail6[1].sfdd005,s_detail6[1].sfdd010,s_detail6[1].sfdd006,
                s_detail6[1].sfdd007,s_detail6[1].sfdd008,s_detail6[1].sfdd009,s_detail6[1].sfdd011,
                s_detail6[1].sfdd012

         BEFORE CONSTRUCT

         ON ACTION controlp INFIELD sfdd001
            #发料料号
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfddsite ='",g_site,"' "
            CALL q_sfdd001()
            DISPLAY g_qryparam.return1 TO sfdd001
            NEXT FIELD sfdd001                    #返回原欄位 
            
         ON ACTION controlp INFIELD sfdd013
            #产品特征
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfddsite ='",g_site,"' "
            CALL q_sfdd013()
            DISPLAY g_qryparam.return1 TO sfdd013
            NEXT FIELD sfdd013                     #返回原欄位 

         ON ACTION controlp INFIELD sfdd003
            #库位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfddsite ='",g_site,"' "
            CALL q_sfdd003()
            DISPLAY g_qryparam.return1 TO sfdd003
            NEXT FIELD sfdd003                    #返回原欄位 
            
         ON ACTION controlp INFIELD sfdd004
            #储位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfddsite ='",g_site,"' "
            CALL q_sfdd004()
            DISPLAY g_qryparam.return1 TO sfdd004
            NEXT FIELD sfdd004                    #返回原欄位
            
         ON ACTION controlp INFIELD sfdd005
            #批号
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfddsite ='",g_site,"' "
            CALL q_sfdd005()
            DISPLAY g_qryparam.return1 TO sfdd005
            NEXT FIELD sfdd005                    #返回原欄位 
            
         ON ACTION controlp INFIELD sfdd010
            #库存管理特征
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfddsite ='",g_site,"' "
            CALL q_sfdd010()
            DISPLAY g_qryparam.return1 TO sfdd010
            NEXT FIELD sfdd010                    #返回原欄位 
            
         ON ACTION controlp INFIELD sfdd006
            #单位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfddsite ='",g_site,"' "
            CALL q_sfdd006()
            DISPLAY g_qryparam.return1 TO sfdd006
            NEXT FIELD sfdd006                    #返回原欄位 
            
         ON ACTION controlp INFIELD sfdd008
            #参考单位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfddsite ='",g_site,"' "
            CALL q_sfdd008()
            DISPLAY g_qryparam.return1 TO sfdd008
            NEXT FIELD sfdd008                    #返回原欄位 
            
         ON ACTION controlp INFIELD sfdd011
            #包装容器
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfddsite ='",g_site,"' "
            CALL q_sfdd011()
            DISPLAY g_qryparam.return1 TO sfdd011
            NEXT FIELD sfdd011                    #返回原欄位

      END CONSTRUCT

      #inao也可以下查询条件的，先跟全局接轨，不下条件
      #CONSTRUCT g_wc2_table7 ON inaoseq,inaoseq1,inaoseq2,inao000,
      #                          inao001,inao008,inao009,inao010,
      #                          inao012
      #     FROM s_detail7[1].inaoseq,s_detail7[1].inaoseq1,s_detail7[1].inaoseq2,s_detail7[1].inao000,
      #          s_detail6[1].inao001,s_detail6[1].inao008,s_detail6[1].inao009,s_detail6[1].inao010,
      #          s_detail7[1].inao012
      #
      #   BEFORE CONSTRUCT
      #
      #   ON ACTION controlp INFIELD inao001
      #      #发料料号
      #      INITIALIZE g_qryparam.* TO NULL
      #      LET g_qryparam.state = "c"
      #      LET g_qryparam.reqry = FALSE
      #      LET g_qryparam.where = " inaosite ='",g_site,"' "
      #      CALL q_inao001()
      #      DISPLAY g_qryparam.return1 TO inao001
      #      NEXT FIELD inao001                    #返回原欄位 
      #END CONSTRUCT

      BEFORE DIALOG


      ON ACTION qbe_select     #條件查詢
#saki         CALL cl_qbe_list() RETURNING lc_qbe_sn
#saki         CALL cl_qbe_display_condition(lc_qbe_sn)

      ON ACTION qbe_save       #條件儲存
#saki         CALL cl_qbe_save()

      ON ACTION accept
         ACCEPT DIALOG

      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG

      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG

   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF

   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF

   IF g_wc2_table5 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
   END IF

   IF g_wc2_table6 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
   END IF

   #add-point:cs段結束前
   IF cl_null(g_wc) THEN LET g_wc = " 1=1" END IF
   CASE g_prog
      WHEN 'asft310'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('11','12','13','14','15')"
      WHEN 'asft311'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('11')"
      WHEN 'asft312'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('12')"
      WHEN 'asft313'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('13')"
      WHEN 'asft314'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('14')"
      WHEN 'asft315'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('15')"
      WHEN 'asft320'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('21','22','23','24','25')"
      WHEN 'asft321'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('21')"
      WHEN 'asft322'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('22')"
      WHEN 'asft323'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('23')"
      WHEN 'asft324'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('24')"
      WHEN 'asft325'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('25')"
   END CASE          {#ADP版次:1#}
   #end add-point

   IF INT_FLAG THEN
      RETURN
   END IF

END FUNCTION]]>
  </point>
  <point name="function.asft310_filter" order="29" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_filter()
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF

   LET INT_FLAG = 0

   LET g_qryparam.state = 'c'

   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc

   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')

   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #單頭
      CONSTRUCT g_wc_filter ON sfdadocno,sfdadocdt,sfda001,sfda002,sfda003,sfda004,sfda005
                          FROM s_browse[1].b_sfdadocno,s_browse[1].b_sfdadocdt,s_browse[1].b_sfda001,
                              s_browse[1].b_sfda002,s_browse[1].b_sfda003,s_browse[1].b_sfda004,s_browse[1].b_sfda005


         BEFORE CONSTRUCT
#saki            CALL cl_qbe_init()
               DISPLAY asft310_filter_parser('sfdadocno') TO s_browse[1].b_sfdadocno
            DISPLAY asft310_filter_parser('sfdadocdt') TO s_browse[1].b_sfdadocdt
            DISPLAY asft310_filter_parser('sfda001') TO s_browse[1].b_sfda001
            DISPLAY asft310_filter_parser('sfda002') TO s_browse[1].b_sfda002
            DISPLAY asft310_filter_parser('sfda003') TO s_browse[1].b_sfda003
            DISPLAY asft310_filter_parser('sfda004') TO s_browse[1].b_sfda004
            DISPLAY asft310_filter_parser('sfda005') TO s_browse[1].b_sfda005

      END CONSTRUCT



      BEFORE DIALOG


      ON ACTION accept
         ACCEPT DIALOG

      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG

      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG

   END DIALOG

   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF

      CALL asft310_filter_show('sfdadocno')
   CALL asft310_filter_show('sfdadocdt')
   CALL asft310_filter_show('sfda001')
   CALL asft310_filter_show('sfda002')
   CALL asft310_filter_show('sfda003')
   CALL asft310_filter_show('sfda004')
   CALL asft310_filter_show('sfda005')

END FUNCTION]]>
  </point>
  <point name="function.asft310_filter_parser" order="30" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}

   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF

   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF

   RETURN ls_var

END FUNCTION]]>
  </point>
  <point name="function.asft310_filter_show" order="31" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING

   LET ls_name = "formonly.b_", ps_field

   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF

   #顯示資料組合
   LET ls_condition = asft310_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF

   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)

END FUNCTION]]>
  </point>
  <point name="function.asft310_query" order="32" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_query()
   {<Local define>}
   DEFINE ls_wc STRING
   DEFINE ls_wc2 STRING
   {</Local define>}

   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF

   LET ls_wc = g_wc
   LET ls_wc2= g_wc2

   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""

   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()
   CALL g_sfdb_d.clear()
   CALL g_sfdc_d.clear()

   CALL g_sfde_d.clear()
   CALL g_sfdf_d.clear()

   CALL g_sfdc4_d.clear()
   CALL g_sfdd_d.clear()

   CALL g_inao_d.clear()


   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count

   CALL asft310_construct()

   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      LET g_wc2= ls_wc2
      CALL asft310_browser_fill("")
      CALL asft310_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化
   LET g_detail_cnt = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   LET l_ac = 1
   LET g_wc_filter = ""
   CALL FGL_SET_ARR_CURR(1)
      CALL asft310_filter_show('sfdadocno')
   CALL asft310_filter_show('sfdadocdt')
   CALL asft310_filter_show('sfda001')
   CALL asft310_filter_show('sfda002')
   CALL asft310_filter_show('sfda003')
   CALL asft310_filter_show('sfda004')
   CALL asft310_filter_show('sfda005')
   LET g_error_show = 1
   CALL asft310_browser_fill("F")

   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "-100"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()

   ELSE
      CALL asft310_fetch("F")
   END IF

END FUNCTION]]>
  </point>
  <point name="function.asft310_fetch" order="33" ver="11" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_fetch(p_flag)
   {<Local define>}
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   {</Local define>}

   IF g_browser_cnt = 0 THEN
      RETURN
   END IF

   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt
      WHEN 'P'
         IF g_current_idx > 1 THEN
            LET g_current_idx = g_current_idx - 1
         END IF
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF
      WHEN '/'
         IF (NOT g_no_ask) THEN
            CALL cl_set_act_visible("accept,cancel", TRUE)
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0

            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl"
            END PROMPT

            CALL cl_set_act_visible("accept,cancel", FALSE)
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE
            END IF
         END IF

         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF

         LET g_no_ask = FALSE
   END CASE


   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引

   LET g_detail_cnt = g_header_cnt

   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx
   END IF

   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數

   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )

   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF

   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF

   LET g_sfda_m.sfdadocno = g_browser[g_current_idx].b_sfdadocno
   
   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE sfdadocno,sfdadocdt,sfda001,sfda002,sfda003,sfda004,sfda005,sfda015,sfda014,sfdastus,sfdaownid,sfdaowndp,
                  sfdacrtid,sfdacrtdp,sfdacrtdt,sfdamodid,sfdamoddt,sfdacnfid,sfdacnfdt,sfdapstid,sfdapstdt
      INTO g_sfda_m.sfdadocno,g_sfda_m.sfdadocdt,g_sfda_m.sfda001,g_sfda_m.sfda002,g_sfda_m.sfda003,g_sfda_m.sfda004,
           g_sfda_m.sfda005,g_sfda_m.sfda015,g_sfda_m.sfda014,g_sfda_m.sfdastus,g_sfda_m.sfdaownid,g_sfda_m.sfdaowndp,g_sfda_m.sfdacrtid,g_sfda_m.sfdacrtdp,
           g_sfda_m.sfdacrtdt,g_sfda_m.sfdamodid,g_sfda_m.sfdamoddt,g_sfda_m.sfdacnfid,g_sfda_m.sfdacnfdt,
           g_sfda_m.sfdapstid,g_sfda_m.sfdapstdt
      FROM sfda_t
     WHERE sfdaent = g_enterprise AND sfdasite = g_site AND sfdadocno = g_sfda_m.sfdadocno
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "sfda_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      INITIALIZE g_sfda_m.* TO NULL
      RETURN
   END IF
   #fetch段action控制
   CALL cl_set_act_visible("modify,delete,insert,modify_detail",TRUE)
   IF g_sfda_m.sfdastus NOT MATCHES "[NYDR]" THEN   # N未確認/D抽單/R已拒絕允許修改  #150511-00026 增加Y
         CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF
   #重新顯示
   CALL asft310_show()

END FUNCTION]]>
  </point>
  <point name="function.asft310_insert" order="34" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_insert()
   
   #asft310,asft320不允许新增，修改
   IF g_prog='asft310' OR g_prog='asft320' THEN
      RETURN
   END IF
   
   #清畫面欄位內容
   CLEAR FORM
   CALL g_sfdb_d.clear()
   CALL g_sfdc_d.clear()
   CALL g_sfde_d.clear()
   CALL g_sfdc4_d.clear()
   CALL g_sfdf_d.clear()
   CALL g_sfdd_d.clear()
   CALL g_inao_d.clear()
   
   CALL s_lot_clear_detail()
   
   INITIALIZE g_sfda_m.* LIKE sfda_t.*             #DEFAULT 設定
   LET g_sfdadocno_t = NULL

   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生
      LET g_sfda_m.sfdaownid = g_user
      LET g_sfda_m.sfdaowndp = g_dept
      LET g_sfda_m.sfdacrtid = g_user
      LET g_sfda_m.sfdacrtdp = g_dept
      LET g_sfda_m.sfdacrtdt = cl_get_current()
      LET g_sfda_m.sfdamodid = ""
      LET g_sfda_m.sfdamoddt = ""

      #add-point:單頭預設值
      LET g_sfda_m.sfdadocdt = g_today
      LET g_sfda_m.sfda001 = g_today
      CASE g_prog
         WHEN 'asft310'
              LET g_sfda_m.sfda002 = '11'
         WHEN 'asft311'
              LET g_sfda_m.sfda002 = '11'
         WHEN 'asft312'
              LET g_sfda_m.sfda002 = '12'
         WHEN 'asft313'
              LET g_sfda_m.sfda002 = '13'
         WHEN 'asft314'
              LET g_sfda_m.sfda002 = '14'
         WHEN 'asft315'
              LET g_sfda_m.sfda002 = '15'
         WHEN 'asft320'
              LET g_sfda_m.sfda002 = '21'
         WHEN 'asft321'
              LET g_sfda_m.sfda002 = '21'
         WHEN 'asft322'
              LET g_sfda_m.sfda002 = '22'
         WHEN 'asft323'
              LET g_sfda_m.sfda002 = '23'
         WHEN 'asft324'
              LET g_sfda_m.sfda002 = '24'
         WHEN 'asft325'
              LET g_sfda_m.sfda002 = '25'
         OTHERWISE
      END CASE

      IF g_sfda_m.sfda002 = '15' OR g_sfda_m.sfda002 = '25' THEN  #製程中委外時，顯示名稱為委外廠商
         #委外厂商
      ELSE
         #部门
         LET g_sfda_m.sfda003 = g_dept
         CALL s_desc_get_department_desc(g_sfda_m.sfda003) RETURNING g_sfda_m.sfda003_desc
         DISPLAY BY NAME g_sfda_m.sfda003_desc
      END IF

      LET g_sfda_m.sfda004 = g_user

      #人员姓名
      CALL s_desc_get_person_desc(g_sfda_m.sfda004) RETURNING g_sfda_m.sfda004_desc
      DISPLAY BY NAME g_sfda_m.sfda004_desc

      LET g_sfda_m.sfda015 = "01" 
      LET g_sfda_m.sfda014 = "" 
      LET g_sfda_m.sfdastus = "N" 
      #end add-point

      CALL asft310_input("a")
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_sfda_m.* = g_sfda_m_t.*
         CALL asft310_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9001
         LET g_errparam.extend = ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF

      CALL g_sfdb_d.clear()
      CALL g_sfdc_d.clear()
      CALL g_sfde_d.clear()
      CALL g_sfdc4_d.clear()
      CALL g_sfdf_d.clear()
      CALL g_sfdd_d.clear()
      CALL g_inao_d.clear()


      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE

   END WHILE

   LET g_state = "Y"

   LET g_sfdadocno_t = g_sfda_m.sfdadocno


   LET g_wc = g_wc,
              " OR ( sfdaent = '" ||g_enterprise|| "' AND sfdasite = '" ||g_site|| "' AND",
              " sfdadocno = '", g_sfda_m.sfdadocno CLIPPED, "') "
   CLOSE asft310_cl

END FUNCTION]]>
  </point>
  <point name="function.asft310_modify" order="35" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_modify()
   {<Local define>}
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   {</Local define>}

   #asft310,asft320不允许新增，修改
   IF g_prog='asft310' OR g_prog='asft320' THEN
      RETURN
   END IF
   
   IF g_sfda_m.sfdadocno IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF

   SELECT UNIQUE sfdadocno,sfdadocdt,sfda001,sfda002,sfda003,sfda004,sfda005,sfda015,sfda014,sfdastus,sfdaownid,sfdaowndp,
                 sfdacrtid,sfdacrtdp,sfdacrtdt,sfdamodid,sfdamoddt,sfdacnfid,sfdacnfdt,sfdapstid,sfdapstdt
     INTO g_sfda_m.sfdadocno,g_sfda_m.sfdadocdt,g_sfda_m.sfda001,g_sfda_m.sfda002,g_sfda_m.sfda003,g_sfda_m.sfda004,
          g_sfda_m.sfda005,g_sfda_m.sfda015,g_sfda_m.sfda014,g_sfda_m.sfdastus,g_sfda_m.sfdaownid,g_sfda_m.sfdaowndp,g_sfda_m.sfdacrtid,g_sfda_m.sfdacrtdp,
          g_sfda_m.sfdacrtdt,g_sfda_m.sfdamodid,g_sfda_m.sfdamoddt,g_sfda_m.sfdacnfid,g_sfda_m.sfdacnfdt,
          g_sfda_m.sfdapstid,g_sfda_m.sfdapstdt
     FROM sfda_t
    WHERE sfdaent = g_enterprise AND sfdadocno = g_sfda_m.sfdadocno

   #IF g_sfda_m.sfdastus != 'N' THEN
   #   #此笔资料状态不为'N.未确认',不可对此单据资料进行修改
   #   #CALL cl_err("","art-00030",0)
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code = "art-00030"
   #   LET g_errparam.extend = ""
   #   LET g_errparam.popup = FALSE
   #   CALL cl_err()
   #   RETURN
   #END IF
   #mark for已审核的单据也能修改，只能修改发料明细和料号汇总页签
   IF g_sfda_m.sfdastus = 'S' THEN
      #已过账资料不可修改
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "asf-00119"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF
   
   IF g_sfda_m.sfdastus = 'X' THEN
      #资料已作废，不可异动!
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "afa-00023"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF
   
   IF g_sfda_m.sfdastus = 'Y' AND (g_sfda_m.sfda002='15' OR g_sfda_m.sfda002='25')THEN
      #资料已审核,不可修改
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "anm-00120"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF
   
   ERROR ""
   
   LET g_sfdadocno_t = g_sfda_m.sfdadocno

   CALL s_transaction_begin()

   OPEN asft310_cl USING g_enterprise,g_sfda_m.sfdadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN asft310_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE asft310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   #鎖住將被更改或取消的資料
   FETCH asft310_cl INTO g_sfda_m.sfdadocno,g_sfda_m.oobal004,g_sfda_m.sfdadocdt,g_sfda_m.sfda001,g_sfda_m.sfda002,
       g_sfda_m.sfda003,g_sfda_m.sfda003_desc,g_sfda_m.sfda004,g_sfda_m.sfda004_desc,g_sfda_m.sfda005,g_sfda_m.sfda015,g_sfda_m.sfda014,
       g_sfda_m.sfdastus,g_sfda_m.sfdaownid,g_sfda_m.sfdaownid_desc,g_sfda_m.sfdaowndp,g_sfda_m.sfdaowndp_desc,
       g_sfda_m.sfdacrtid,g_sfda_m.sfdacrtid_desc,g_sfda_m.sfdacrtdp,g_sfda_m.sfdacrtdp_desc,g_sfda_m.sfdacrtdt,
       g_sfda_m.sfdamodid,g_sfda_m.sfdamodid_desc,g_sfda_m.sfdamoddt,g_sfda_m.sfdacnfid,g_sfda_m.sfdacnfid_desc,
       g_sfda_m.sfdacnfdt,g_sfda_m.sfdapstid,g_sfda_m.sfdapstid_desc,g_sfda_m.sfdapstdt

   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_sfda_m.sfdadocno
      LET g_errparam.popup = FALSE
      CALL cl_err()

      CLOSE asft310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   CALL asft310_show()
   WHILE TRUE
      LET g_sfdadocno_t = g_sfda_m.sfdadocno

      #寫入修改者/修改日期資訊(單頭)
      LET g_sfda_m.sfdamodid = g_user
      LET g_sfda_m.sfdamoddt = cl_get_current()

      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_sfda_m.sfdastus MATCHES "[DR]" THEN 
         LET g_sfda_m.sfdastus = "N"
      END IF

      CALL asft310_input("u")     #欄位更改
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_sfda_m.* = g_sfda_m_t.*
         CALL asft310_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9001
         LET g_errparam.extend = ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT WHILE
      END IF

      ##若單頭key欄位有變更
      #add这个应该在input里面的update sfda后马上处理的吧，否则鼠标移到单身会不见,且单头修改完后进入单身点放弃后，单身的key值就不会更新到了
      #   独立成函数asft310_upd_key()
      #IF g_sfda_m.sfdadocno != g_sfdadocno_t THEN
      #   CALL s_transaction_begin()
      #   #更新單身key值
      #   UPDATE sfdb_t SET sfdbdocno = g_sfda_m.sfdadocno
      #    WHERE sfdbent = g_enterprise AND sfdbdocno = g_sfdadocno_t
      #   CASE
      #      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
      #         #CALL cl_err("sfdb_t","std-00009",1)
      #         INITIALIZE g_errparam TO NULL
      #         LET g_errparam.code = "std-00009"
      #         LET g_errparam.extend = "sfdb_t"
      #         LET g_errparam.popup = TRUE
      #         CALL cl_err()
      #         CALL s_transaction_end('N','0')
      #         CONTINUE WHILE
      #      WHEN SQLCA.sqlcode #其他錯誤
      #         #CALL cl_err("sfdb_t",SQLCA.sqlcode,1)
      #         INITIALIZE g_errparam TO NULL
      #         LET g_errparam.code = SQLCA.sqlcode
      #         LET g_errparam.extend = "sfdb_t"
      #         LET g_errparam.popup = TRUE
      #         CALL cl_err()
      #         CALL s_transaction_end('N','0')
      #         CONTINUE WHILE
      #   END CASE
	  #
      #   #更新單身key值
      #   UPDATE sfdc_t
      #      SET sfdcdocno = g_sfda_m.sfdadocno
      #    WHERE sfdcent = g_enterprise AND sfdcdocno = g_sfdadocno_t
      #   CASE
      #      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
      #         #CALL cl_err("sfdc_t","std-00009",1)
      #         INITIALIZE g_errparam TO NULL
      #         LET g_errparam.code = "std-00009"
      #         LET g_errparam.extend = "sfdc_t"
      #         LET g_errparam.popup = TRUE
      #         CALL cl_err()
      #         CALL s_transaction_end('N','0')
      #         CONTINUE WHILE
      #      WHEN SQLCA.sqlcode #其他錯誤
      #         #CALL cl_err("sfdc_t",SQLCA.sqlcode,1)
      #         INITIALIZE g_errparam TO NULL
      #         LET g_errparam.code = SQLCA.sqlcode
      #         LET g_errparam.extend = "sfdc_t"
      #         LET g_errparam.popup = TRUE
      #         CALL cl_err()
      #         CALL s_transaction_end('N','0')
      #         CONTINUE WHILE
      #   END CASE
	  #
      #   #更新單身key值
      #   UPDATE sfde_t
      #      SET sfdedocno = g_sfda_m.sfdadocno
      #    WHERE sfdeent = g_enterprise AND sfdedocno = g_sfdadocno_t
      #   CASE
      #      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
      #         #CALL cl_err("sfde_t","std-00009",1)
      #         INITIALIZE g_errparam TO NULL
      #         LET g_errparam.code = "std-00009"
      #         LET g_errparam.extend = "sfde_t"
      #         LET g_errparam.popup = TRUE
      #         CALL cl_err()
      #         CALL s_transaction_end('N','0')
      #         CONTINUE WHILE
      #      WHEN SQLCA.sqlcode #其他錯誤
      #         #CALL cl_err("sfde_t",SQLCA.sqlcode,1)
      #         INITIALIZE g_errparam TO NULL
      #         LET g_errparam.code = SQLCA.sqlcode
      #         LET g_errparam.extend = "sfde_t"
      #         LET g_errparam.popup = TRUE
      #         CALL cl_err()
      #         CALL s_transaction_end('N','0')
      #         CONTINUE WHILE
      #   END CASE
	  #
	  #
      #   #更新單身key值
      #   UPDATE inao_t
      #      SET inaodocno = g_sfda_m.sfdadocno
      #    WHERE inaoent = g_enterprise AND inaosite = g_site AND
      #          inaodocno = g_sfdadocno_t
      #   CASE
      #      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
      #         #CALL cl_err("inao_t","std-00009",1)
      #         INITIALIZE g_errparam TO NULL
      #         LET g_errparam.code = "std-00009"
      #         LET g_errparam.extend = "inao_t"
      #         LET g_errparam.popup = TRUE
      #         CALL cl_err()
      #         CALL s_transaction_end('N','0')
      #         CONTINUE WHILE
      #      WHEN SQLCA.sqlcode #其他錯誤
      #         #CALL cl_err("inao_t",SQLCA.sqlcode,1)
      #         INITIALIZE g_errparam TO NULL
      #         LET g_errparam.code = SQLCA.sqlcode
      #         LET g_errparam.extend = "inao_t"
      #         LET g_errparam.popup = TRUE
      #         CALL cl_err()
      #         CALL s_transaction_end('N','0')
      #         CONTINUE WHILE
      #   END CASE
	  #
      #   #更新單身key值
      #   UPDATE sfdf_t
      #      SET sfdfdocno = g_sfda_m.sfdadocno
      #    WHERE sfdfent = g_enterprise AND sfdfdocno = g_sfdadocno_t
      #   CASE
      #      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
      #         #CALL cl_err("sfdf_t","std-00009",1)
      #         INITIALIZE g_errparam TO NULL
      #         LET g_errparam.code = "std-00009"
      #         LET g_errparam.extend = "sfdf_t"
      #         LET g_errparam.popup = TRUE
      #         CALL cl_err()
      #         CALL s_transaction_end('N','0')
      #         CONTINUE WHILE
      #      WHEN SQLCA.sqlcode #其他錯誤
      #         #CALL cl_err("sfdf_t",SQLCA.sqlcode,1)
      #         INITIALIZE g_errparam TO NULL
      #         LET g_errparam.code = SQLCA.sqlcode
      #         LET g_errparam.extend = "sfdf_t"
      #         LET g_errparam.popup = TRUE
      #         CALL cl_err()
      #         CALL s_transaction_end('N','0')
      #         CONTINUE WHILE
      #   END CASE
	  #
	  #
      #   #更新單身key值
      #   UPDATE sfdd_t
      #      SET sfdddocno = g_sfda_m.sfdadocno
      #    WHERE sfddent = g_enterprise AND sfdddocno = g_sfdadocno_t
      #   CASE
      #      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
      #         #CALL cl_err("sfdd_t","std-00009",1)
      #         INITIALIZE g_errparam TO NULL
      #         LET g_errparam.code = "std-00009"
      #         LET g_errparam.extend = "sfdd_t"
      #         LET g_errparam.popup = TRUE
      #         CALL cl_err()
      #         CALL s_transaction_end('N','0')
      #         CONTINUE WHILE
      #      WHEN SQLCA.sqlcode #其他錯誤
      #         #CALL cl_err("sfdd_t",SQLCA.sqlcode,1)
      #         INITIALIZE g_errparam TO NULL
      #         LET g_errparam.code = SQLCA.sqlcode
      #         LET g_errparam.extend = "sfdd_t"
      #         LET g_errparam.popup = TRUE
      #         CALL cl_err()
      #         CALL s_transaction_end('N','0')
      #         CONTINUE WHILE
      #   END CASE
      #   #UPDATE 多語言table key值
      #   CALL s_transaction_end('Y','0')
      #END IF

      EXIT WHILE
   END WHILE

   #修改歷程記錄
   IF NOT cl_log_modified_record(g_sfda_m.sfdadocno,g_site) THEN
      CALL s_transaction_end('N','0')
   END IF

   CLOSE asft310_cl
   CALL s_transaction_end('Y','0')

   #流程通知預埋點-U
   CALL cl_flow_notify(g_sfda_m.sfdadocno,'U')

END FUNCTION]]>
  </point>
  <point name="function.asft310_detail_show" order="36" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#讀入ref值(單身)
PRIVATE FUNCTION asft310_detail_show()
DEFINE l_ac_t      LIKE type_t.num5
DEFINE l_sfba001   LIKE sfba_t.sfba001  #生产料号
DEFINE l_sfaa011   LIKE sfaa_t.sfaa011  #特性

   LET l_ac_t = l_ac
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_sfdb_d.getLength()
      #部位说明
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = '215'
      LET g_chkparam.arg2 = g_sfdb_d[l_ac].sfdb003
      CALL cl_ref_val("v_oocql002")
      LET g_sfdb_d[l_ac].sfdb003_desc = g_chkparam.return1

      #作业说明
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = '221'
      LET g_chkparam.arg2 = g_sfdb_d[l_ac].sfdb004
      CALL cl_ref_val("v_oocql002")
      LET g_sfdb_d[l_ac].sfdb004_desc = g_chkparam.return1

      SELECT sfaa010,imaal003,imaal004,sfaa013,sfaa012
        INTO g_sfdb_d[l_ac].sfaa010,g_sfdb_d[l_ac].sfaa010_desc,g_sfdb_d[l_ac].sfaa010_desc2,
             g_sfdb_d[l_ac].sfaa013,g_sfdb_d[l_ac].sfaa012
        FROM sfaa_t LEFT JOIN imaal_t ON sfaaent = imaalent AND sfaa010 = imaal001 AND imaal002 = g_dlang
       WHERE sfaaent   = g_enterprise
         AND sfaasite  = g_site
         AND sfaadocno = g_sfdb_d[l_ac].sfdb001
   END FOR

   FOR l_ac = 1 TO g_sfdc_d.getLength()
      #单位
      CALL s_desc_get_unit_desc(g_sfdc_d[l_ac].sfdc006) RETURNING g_sfdc_d[l_ac].sfdc006_desc
      LET g_sfdc4_d[l_ac].sfdc006_desc = g_sfdc_d[l_ac].sfdc006_desc
      
      #参考单位
      CALL s_desc_get_unit_desc(g_sfdc_d[l_ac].sfdc009) RETURNING g_sfdc_d[l_ac].sfdc009_desc
      LET g_sfdc4_d[l_ac].sfdc009_desc = g_sfdc_d[l_ac].sfdc009_desc
      
      #理由码
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_sfdc_d[l_ac].sfdc015
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='226' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_sfdc_d[l_ac].sfdc015_desc = '', g_rtn_fields[1] , ''
      LET g_sfdc4_d[l_ac].sfdc015_desc = g_sfdc_d[l_ac].sfdc015_desc
      
      #需求料号品名规格
      CALL s_desc_get_item_desc(g_sfdc_d[l_ac].sfdc004) RETURNING g_sfdc_d[l_ac].sfdc004_desc,g_sfdc_d[l_ac].sfdc004_desc2
      LET g_sfdc4_d[l_ac].sfdc004_desc  = g_sfdc_d[l_ac].sfdc004_desc 
      LET g_sfdc4_d[l_ac].sfdc004_desc2 = g_sfdc_d[l_ac].sfdc004_desc2
      #显示产品特征说明
      CALL s_feature_description(g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005)
         RETURNING l_success,g_sfdc_d[l_ac].sfdc005_desc
      IF NOT l_success THEN
         LET g_sfdc_d[l_ac].sfdc005_desc = ''
      END IF
      LET g_sfdc4_d[l_ac].sfdc005_desc  = g_sfdc_d[l_ac].sfdc005_desc 

      #保税料
      SELECT imaf034
        INTO g_sfdc_d[l_ac].imaf034
        FROM imaf_t
       WHERE imafent = g_enterprise
         AND imafsite= g_site
         AND imaf001 = g_sfdc_d[l_ac].sfdc004
      LET g_sfdc4_d[l_ac].imaf034 = g_sfdc_d[l_ac].imaf034
      
      #发料前调拨
      SELECT imae092 INTO g_sfdc_d[l_ac].imae092
        FROM imae_t
       WHERE imaeent = g_enterprise
         AND imaesite= g_site
         AND imae001 = g_sfdc_d[l_ac].sfdc004
      LET g_sfdc4_d[l_ac].imae092 = g_sfdc_d[l_ac].imae092
      
      #差异数量
      LET g_sfdc_d[l_ac].diff  = g_sfdc_d[l_ac].sfdc007 - g_sfdc_d[l_ac].sfdc008
      LET g_sfdc4_d[l_ac].diff = g_sfdc_d[l_ac].diff
      #参考单位差异数量
      LET g_sfdc_d[l_ac].diff2 = g_sfdc_d[l_ac].sfdc010  - g_sfdc_d[l_ac].sfdc011
      LET g_sfdc4_d[l_ac].diff2= g_sfdc_d[l_ac].diff2
      
      #库位名称
      CALL s_desc_get_stock_desc(g_site,g_sfdc_d[l_ac].sfdc012) RETURNING g_sfdc_d[l_ac].sfdc012_desc
      LET g_sfdc4_d[l_ac].sfdc012_desc = g_sfdc_d[l_ac].sfdc012_desc
      
      #储位名称
      IF NOT cl_null(g_sfdc_d[l_ac].sfdc013) THEN
         CALL s_desc_get_locator_desc(g_site,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013) RETURNING g_sfdc_d[l_ac].sfdc013_desc
         LET g_sfdc4_d[l_ac].sfdc013_desc = g_sfdc_d[l_ac].sfdc013_desc
      END IF
      
      #工单信息-部位、作业、作业序、客供料、应发料、已发量
      SELECT sfba002,sfba003,sfba004,sfba028,
             sfba013,sfba016,sfba001,sfaa011
        INTO g_sfdc_d[l_ac].sfba002,g_sfdc_d[l_ac].sfba003,g_sfdc_d[l_ac].sfba004,g_sfdc_d[l_ac].sfba028,
             g_sfdc_d[l_ac].sfba013,g_sfdc_d[l_ac].sfba016,l_sfba001,l_sfaa011
        FROM sfba_t,sfaa_t
       WHERE sfbaent = sfaaent
         AND sfbasite= sfaasite
         AND sfbadocno=sfaadocno
         AND sfbaent = g_enterprise
         AND sfbasite= g_site
         AND sfbadocno=g_sfdc_d[l_ac].sfdc001
         AND sfbaseq = g_sfdc_d[l_ac].sfdc002
         AND sfbaseq1= g_sfdc_d[l_ac].sfdc003
      LET g_sfdc4_d[l_ac].sfba002 = g_sfdc_d[l_ac].sfba002
      LET g_sfdc4_d[l_ac].sfba003 = g_sfdc_d[l_ac].sfba003
      LET g_sfdc4_d[l_ac].sfba004 = g_sfdc_d[l_ac].sfba004
      LET g_sfdc4_d[l_ac].sfba028 = g_sfdc_d[l_ac].sfba028
      LET g_sfdc4_d[l_ac].sfba013 = g_sfdc_d[l_ac].sfba013
      LET g_sfdc4_d[l_ac].sfba016 = g_sfdc_d[l_ac].sfba016

      #部位说明
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = '215'
      LET g_chkparam.arg2 = g_sfdc_d[l_ac].sfba002
      CALL cl_ref_val("v_oocql002")
      LET g_sfdc_d[l_ac].sfba002_desc = g_chkparam.return1
      LET g_sfdc4_d[l_ac].sfba002_desc= g_sfdc_d[l_ac].sfba002_desc
      
      #作业说明
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = '221'
      LET g_chkparam.arg2 = g_sfdc_d[l_ac].sfba003
      CALL cl_ref_val("v_oocql002")
      LET g_sfdc_d[l_ac].sfba003_desc = g_chkparam.return1
      LET g_sfdc4_d[l_ac].sfba003_desc= g_sfdc_d[l_ac].sfba003_desc
      
      #replace取替代建议
      CALL s_abmm201_get_proposal(g_site,l_sfba001,l_sfaa011,g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfba002,g_sfdc_d[l_ac].sfba003,g_sfdc_d[l_ac].sfba004) RETURNING g_sfdc_d[l_ac].replace 
      LET g_sfdc4_d[l_ac].replace = g_sfdc_d[l_ac].replace 
      
      CALL asft310_show_sfdc_ooff013(l_ac) #add 141222 备注说明
      LET g_sfdc4_d[l_ac].sfdc_ooff013 = g_sfdc_d[l_ac].sfdc_ooff013
   END FOR

   FOR l_ac = 1 TO g_sfde_d.getLength()
      #需求料号
      CALL s_desc_get_item_desc(g_sfde_d[l_ac].sfde001) RETURNING g_sfde_d[l_ac].sfde001_desc,g_sfde_d[l_ac].sfde001_desc2
      #显示产品特征说明
      CALL s_feature_description(g_sfde_d[l_ac].sfde001,g_sfde_d[l_ac].sfde002)
         RETURNING l_success,g_sfde_d[l_ac].sfde002_desc
      IF NOT l_success THEN
         LET g_sfde_d[l_ac].sfde002_desc = ''
      END IF
      #保税料
      SELECT imaf034
        INTO g_sfde_d[l_ac].imaf034
        FROM imaf_t
       WHERE imafent = g_enterprise
         AND imafsite= g_site
         AND imaf001 = g_sfde_d[l_ac].sfde001
      
      #发料前调拨
      SELECT imae092 INTO g_sfde_d[l_ac].imae092
        FROM imae_t
       WHERE imaeent = g_enterprise
         AND imaesite= g_site
         AND imae001 = g_sfde_d[l_ac].sfde001

      #单位
      CALL s_desc_get_unit_desc(g_sfde_d[l_ac].sfde003) RETURNING g_sfde_d[l_ac].sfde003_desc

      #差异数量
      LET g_sfde_d[l_ac].diff03 = g_sfde_d[l_ac].sfde004 - g_sfde_d[l_ac].sfde005

      #参考单位
      CALL s_desc_get_unit_desc(g_sfde_d[l_ac].sfde006) RETURNING g_sfde_d[l_ac].sfde006_desc
      
      #参考单位差异数量
      LET g_sfde_d[l_ac].diff23 = g_sfde_d[l_ac].sfde007 - g_sfde_d[l_ac].sfde008
   END FOR

   FOR l_ac = 1 TO g_sfdf_d.getLength()
      #发料料号
      CALL s_desc_get_item_desc(g_sfdf_d[l_ac].sfdf001) RETURNING g_sfdf_d[l_ac].sfdf001_desc,g_sfdf_d[l_ac].sfdf001_desc2
      #显示产品特征说明
      CALL s_feature_description(g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf013)
         RETURNING l_success,g_sfdf_d[l_ac].sfdf013_desc
      IF NOT l_success THEN
         LET g_sfdf_d[l_ac].sfdf013_desc = ''
      END IF

      #库位
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_site
      LET g_ref_fields[2] = g_sfdf_d[l_ac].sfdf003
      CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
      LET g_sfdf_d[l_ac].sfdf003_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_sfdf_d[l_ac].sfdf003_desc

      #储位
      IF NOT cl_null(g_sfdf_d[l_ac].sfdf004) THEN
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_site
         LET g_ref_fields[2] = g_sfdf_d[l_ac].sfdf003
         LET g_ref_fields[3] = g_sfdf_d[l_ac].sfdf004
         CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inabsite=? AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
         LET g_sfdf_d[l_ac].sfdf004_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_sfdf_d[l_ac].sfdf004_desc
      END IF

      #单位
      CALL s_desc_get_unit_desc(g_sfdf_d[l_ac].sfdf006) RETURNING g_sfdf_d[l_ac].sfdf006_desc
      DISPLAY BY NAME g_sfdf_d[l_ac].sfdf006_desc

      #参考单位
      CALL s_desc_get_unit_desc(g_sfdf_d[l_ac].sfdf008) RETURNING g_sfdf_d[l_ac].sfdf008_desc
      DISPLAY BY NAME g_sfdf_d[l_ac].sfdf008_desc
   END FOR

   FOR l_ac = 1 TO g_sfdd_d.getLength()
      #发料料号
      CALL s_desc_get_item_desc(g_sfdd_d[l_ac].sfdd001) RETURNING g_sfdd_d[l_ac].sfdd001_desc,g_sfdd_d[l_ac].sfdd001_desc2
      DISPLAY BY NAME g_sfdd_d[l_ac].sfdd001_desc
      DISPLAY BY NAME g_sfdd_d[l_ac].sfdd001_desc2
      #显示产品特征说明
      CALL s_feature_description(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013)
         RETURNING l_success,g_sfdd_d[l_ac].sfdd013_desc
      IF NOT l_success THEN
         LET g_sfdd_d[l_ac].sfdd013_desc = ''
      END IF
      DISPLAY BY NAME g_sfdd_d[l_ac].sfdd013_desc
      
      #库位
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_site
      LET g_ref_fields[2] = g_sfdd_d[l_ac].sfdd003
      CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
      LET g_sfdd_d[l_ac].sfdd003_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_sfdd_d[l_ac].sfdd003_desc

      #储位
      IF NOT cl_null(g_sfdd_d[l_ac].sfdd004) THEN
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_site
         LET g_ref_fields[2] = g_sfdd_d[l_ac].sfdd003
         LET g_ref_fields[3] = g_sfdd_d[l_ac].sfdd004
         CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inabsite=? AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
         LET g_sfdd_d[l_ac].sfdd004_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_sfdd_d[l_ac].sfdd004_desc
      END IF

      #单位
      CALL s_desc_get_unit_desc(g_sfdd_d[l_ac].sfdd006) RETURNING g_sfdd_d[l_ac].sfdd006_desc
      DISPLAY BY NAME g_sfdd_d[l_ac].sfdd006_desc

      #参考单位
      CALL s_desc_get_unit_desc(g_sfdd_d[l_ac].sfdd008) RETURNING g_sfdd_d[l_ac].sfdd008_desc
      DISPLAY BY NAME g_sfdd_d[l_ac].sfdd008_desc
      
      CALL asft310_show_sfdd_ooff013(l_ac) #add 141222 备注说明
   END FOR

   FOR l_ac = 1 TO g_inao_d.getLength()
      #料件编号
      CALL s_desc_get_item_desc(g_inao_d[l_ac].inao001) RETURNING g_inao_d[l_ac].inao001_desc,g_inao_d[l_ac].inao001_desc2
      DISPLAY BY NAME g_inao_d[l_ac].inao001_desc
      DISPLAY BY NAME g_inao_d[l_ac].inao001_desc2 
   END FOR

   LET l_ac = l_ac_t

END FUNCTION]]>
  </point>
  <point name="function.asft310_input" order="37" ver="11" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_input(p_cmd)
   {<Local define>}
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   {</Local define>}
   #add-point:input段define
   DEFINE l_ooef004        LIKE ooef_t.ooef004
   DEFINE l_sfdb006        LIKE sfdb_t.sfdb006
   DEFINE l_inaa015        LIKE inaa_t.inaa015  #保税仓否
   DEFINE l_inaa010        LIKE inaa_t.inaa010  #成本库否
   DEFINE l_imaf034        LIKE imaf_t.imaf034  #生产料号是否保税料
   DEFINE l_rate           LIKE inaj_t.inaj014  #单位换算率
   DEFINE l_imaa006        LIKE imaa_t.imaa006  #基础单位
   DEFINE l_bmea           RECORD LIKE bmea_t.*
   DEFINE l_sfdd007        LIKE sfdd_t.sfdd007  #替换料件折合成元件的数量
   DEFINE l_sfdd009        LIKE sfdd_t.sfdd009  #替换料件折合成元件的参考数量
   DEFINE l_sfdc           RECORD LIKE sfdc_t.*
   DEFINE l_sfdd           RECORD LIKE sfdd_t.*
   DEFINE l_sfdf           RECORD LIKE sfdf_t.*
   DEFINE l_sfdc_t         RECORD LIKE sfdc_t.*
   DEFINE l_sfdd_t         RECORD LIKE sfdd_t.*
   DEFINE l_sfdf_t         RECORD LIKE sfdf_t.*
   DEFINE l_sql            STRING
   DEFINE l_flag           LIKE type_t.chr1  #是否需要指定进入哪个单身，目前两个0不指定 b:sfdb单身 c:sfdc需求单身 d：sfdd单身 f:sfdf单身
   DEFINE l_cnt1           LIKE type_t.num5  #检查笔数用
   DEFINE l_cnt2           LIKE type_t.num5  #检查笔数用
   DEFINE l_where          STRING
   DEFINE l_flag2          LIKE type_t.num5  #s_control使用
   DEFINE l_imae023        LIKE imae_t.imae023
   #add 150107
   DEFINE l_sfba019  LIKE sfba_t.sfba019  #指定库位
   DEFINE l_sfba020  LIKE sfba_t.sfba020  #指定储位
   DEFINE l_sfba029  LIKE sfba_t.sfba029  #指定批号
   DEFINE l_sfba030  LIKE sfba_t.sfba030  #指定库存管理特征
   #add 150107 end
   DEFINE l_sfaadocdt LIKE sfaa_t.sfaadocdt  #150304 add
   #end add-point
   DEFINE l_sfaa005   LIKE sfaa_t.sfaa005    #add by lixh 20150529
   DEFINE l_sfaa010   LIKE sfaa_t.sfaa010    #add by lixh 20150529
   DEFINE j           LIKE type_t.num10
   DEFINE l_sfdc012_switch  LIKE type_t.chr1
   LET l_flag = '0'
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF

   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF

   CALL cl_set_head_visible("","YES")

   LET l_insert = FALSE
   LET g_action_choice = ""

   LET g_forupd_sql = "SELECT sfdb001,sfdb002,sfdb003,'',sfdb004,'',sfdb005,'','','','','',sfdb006,sfdb007,
       sfdb008 FROM sfdb_t WHERE sfdbent=? AND sfdbsite=? AND sfdbdocno=? AND sfdb001=? AND sfdb002=?
       AND sfdb003=? AND sfdb004=? AND sfdb005=? FOR UPDATE"
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE asft310_bcl CURSOR FROM g_forupd_sql

   LET g_forupd_sql = "SELECT sfdcseq,sfdc001,sfdc002,sfdc003,'','','','','','',sfdc004,'','',sfdc005,'',
       '','','',sfdc006,'','','',sfdc007,sfdc008,'',sfdc009,'',sfdc010,sfdc011,'',sfdc012,'',sfdc013,
       '',sfdc014,sfdc016,sfdc015,'',sfdc017 FROM sfdc_t WHERE sfdcent=? AND sfdcsite=?
       AND sfdcdocno=? AND sfdcseq=? FOR UPDATE"
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE asft310_bcl2 CURSOR FROM g_forupd_sql

   #LET g_forupd_sql = "SELECT sfdeseq,sfde001,'','',sfde002,'','','',sfde009,sfde003,'',sfde004,sfde005,
   #    '',sfde006,'',sfde007,sfde008,'',sfde010 FROM sfde_t WHERE sfdeent=? AND sfdesite=? AND sfdedocno=?
   #    AND sfdeseq=? FOR UPDATE"
   #LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   #DECLARE asft310_bcl3 CURSOR FROM g_forupd_sql

   #LET g_forupd_sql = "SELECT inaoseq,inaoseq1,inaoseq2,inao000,inao001,'','',inao008,inao009,inao010,
   #    inao012 FROM inao_t WHERE inaoent=? AND inaosite=? AND inaodocno=? AND inaoseq=? AND inaoseq1=?
   #    AND inaoseq2=? AND inao000=? FOR UPDATE"
   #LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   #DECLARE asft310_bcl4 CURSOR FROM g_forupd_sql

   LET g_forupd_sql = "SELECT sfdfseq1,sfdf001,'','',sfdf013,'',sfdf002,sfdf003,'',sfdf004,'',sfdf005,sfdf010,sfdf006,
       '',sfdf007,sfdf008,'',sfdf009,sfdf011,sfdf012 FROM sfdf_t WHERE sfdfent=? AND sfdfsite=? AND
       sfdfdocno=? AND sfdfseq=? AND sfdfseq1=? FOR UPDATE"
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE asft310_bcl5 CURSOR FROM g_forupd_sql

   LET g_forupd_sql = "SELECT sfddseq1,sfdd001,'','',sfdd013,'',sfdd002,sfdd003,'',sfdd004,'',sfdd005,sfdd010,sfdd006,
       '',sfdd007,sfdd008,'',sfdd009,sfdd011,sfdd012 FROM sfdd_t WHERE sfddent=? AND sfddsite=? AND
       sfdddocno=? AND sfddseq=? AND sfddseq1=? FOR UPDATE"
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE asft310_bcl6 CURSOR FROM g_forupd_sql

   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'

   #控制key欄位可否輸入
   CALL asft310_set_entry(p_cmd)
   CALL asft310_set_no_entry(p_cmd)

   DISPLAY BY NAME g_sfda_m.sfdadocno,g_sfda_m.sfdadocdt,g_sfda_m.sfda001,g_sfda_m.sfda002,g_sfda_m.sfda003,
       g_sfda_m.sfda004,g_sfda_m.sfda005,g_sfda_m.sfda015,g_sfda_m.sfda014,g_sfda_m.sfdastus,g_sfda_m.sfdapstid,g_sfda_m.sfdapstdt

   LET lb_reproduce = FALSE

WHILE TRUE
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #單頭段
      INPUT BY NAME g_sfda_m.sfdadocno,g_sfda_m.sfdadocdt,g_sfda_m.sfda001,g_sfda_m.sfda002,g_sfda_m.sfda003,
          g_sfda_m.sfda004,g_sfda_m.sfda005,g_sfda_m.sfda015,g_sfda_m.sfda014,g_sfda_m.sfdastus,g_sfda_m.sfdapstid,g_sfda_m.sfdapstdt

         ATTRIBUTE(WITHOUT DEFAULTS)

         #自訂ACTION(master_input)


         BEFORE INPUT
            IF g_sfda_m.sfdastus = 'Y' THEN #已审核的不能修改
               #单据已审核，只可修改发料明细或料号汇总页签
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'asf-00301'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               LET l_flag = 'f'
               CONTINUE WHILE
            END IF
            
            CALL asft310_set_entry(p_cmd)
            CALL asft310_set_no_entry(p_cmd)

            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF

            IF l_cmd_t = 'r' THEN

            END IF
            IF g_prog = 'asft310' OR g_prog = 'asft320' THEN
               #---visible---
               #15/25.製程中委發/退料 發/退料需求、發/退料明細、料號匯總、製造批序號頁籤隱藏不可維護
               CALL cl_set_comp_visible("page_3,page_4,page_5,page_6",TRUE)
               CALL cl_set_comp_visible("bpage_1",TRUE)
               CALL cl_set_comp_visible("sfdb002",TRUE)
               #部位  在制程中委外时隐藏不显示
               CALL cl_set_comp_visible("sfdb003,sfdb003_desc",TRUE)
               
               #---required---
               #制程委外时不可空白，其他的允许空白
               CALL cl_set_comp_required("sfdb004,sfdb005",FALSE)
            END IF

         BEFORE FIELD sfdadocno
            CALL asft310_set_entry(p_cmd)
            
         AFTER FIELD sfdadocno
            IF NOT cl_null(g_sfda_m.sfdadocno) THEN
               CALL s_aooi200_chk_slip(g_site,'',g_sfda_m.sfdadocno,g_prog)
               RETURNING l_success
               IF NOT l_success THEN
                  NEXT FIELD CURRENT
               END IF
               
               #檢核輸入的單據別是否可以被key人員對應的控制組使用,'6' 為生管控制組類型
               CALL s_control_chk_doc('1',g_sfda_m.sfdadocno,'6',g_user,g_dept,'','')
                    RETURNING l_success,l_flag2
               IF l_success THEN
                  IF NOT l_flag2 THEN
                     NEXT FIELD CURRENT
                  END IF
               ELSE
                  NEXT FIELD CURRENT
               END IF
               
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t )) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfda_t WHERE "||"sfdaent = '" ||g_enterprise|| "' AND sfdasite = '" ||g_site|| "' AND "||"sfdadocno = '"||g_sfda_m.sfdadocno ||"'",'std-00004',0) THEN
                     LET g_sfda_m.sfdadocno = g_sfdadocno_t
                     NEXT FIELD CURRENT
                  END IF
                  CALL asft310_get_doc_default()
               END IF
               #CALL asft310_get_oobal004()
               #NEXT FIELD sfdadocdt
               CALL s_aooi200_get_slip_desc(g_sfda_m.sfdadocno)
                    RETURNING g_sfda_m.oobal004
               DISPLAY BY NAME g_sfda_m.oobal004
               
               CALL asft310_show_sfda_ooff013()   #add 141222
               
               CALL asft310_set_no_entry(p_cmd)
            END IF

         AFTER FIELD sfdadocdt
            IF NOT cl_null(g_sfda_m.sfdadocdt) THEN
               #不可小于等于关帐日期
               IF g_sfda_m.sfdadocdt <= g_docdt THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'asf-00411'
                  LET g_errparam.extend = g_sfda_m.sfdadocdt
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_sfda_m.sfdadocdt = g_sfda_m_t.sfdadocdt
                  NEXT FIELD sfdadocdt
               END IF
            END IF
            
         AFTER FIELD sfda001
            IF NOT cl_null(g_sfda_m.sfda001) THEN
               #不可小于等于关帐日期
               IF g_sfda_m.sfda001 <= g_docdt THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'asf-00411'
                  LET g_errparam.extend = g_sfda_m.sfda001
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_sfda_m.sfda001 = g_sfda_m_t.sfda001
                  NEXT FIELD sfda001
               END IF
            END IF
            
         ON CHANGE sfda002
            IF NOT cl_null(g_sfda_m.sfda003) THEN
               IF NOT asft310_chk_sfda003() THEN
                  NEXT FIELD sfda003
               END IF
            END IF
            
         AFTER FIELD sfda003
            IF NOT cl_null(g_sfda_m.sfda003) THEN
               IF NOT asft310_chk_sfda003() THEN
                  LET g_sfda_m.sfda003 = g_sfda_m_t.sfda003
                  NEXT FIELD sfda003
               END IF
            END IF

            IF g_sfda_m.sfda002 = '15' OR g_sfda_m.sfda002 = '25' THEN  #製程中委外時，顯示名稱為委外廠商
               #帶值:廠商名稱
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfda_m.sfda003
               CALL cl_ref_val("v_pmaal004")
               LET g_sfda_m.sfda003_desc = g_chkparam.return1
               DISPLAY BY NAME g_sfda_m.sfda003_desc
            ELSE
               #帶值:部门名稱
               CALL s_desc_get_department_desc(g_sfda_m.sfda003) RETURNING g_sfda_m.sfda003_desc
               DISPLAY BY NAME g_sfda_m.sfda003_desc
            END IF

         AFTER FIELD sfda004
            IF NOT cl_null(g_sfda_m.sfda004) THEN
               IF NOT s_employee_chk(g_sfda_m.sfda004) THEN
                  LET g_sfda_m.sfda004 = g_sfda_m_t.sfda004
                  NEXT FIELD sfda004
               END IF
            END IF

            CALL s_desc_get_person_desc(g_sfda_m.sfda004) RETURNING g_sfda_m.sfda004_desc
            DISPLAY BY NAME g_sfda_m.sfda004_desc
            
         AFTER FIELD sfda005
            IF NOT cl_null(g_sfda_m.sfda005) THEN
               IF cl_null(g_sfda_m_t.sfda005) OR g_sfda_m.sfda005 != g_sfda_m_t.sfda005 THEN
                  IF NOT asft310_chk_sfda005() THEN
                     LET g_sfda_m.sfda005 = g_sfda_m_t.sfda005
                     DISPLAY BY NAME g_sfda_m.sfda005
                     NEXT FIELD sfda005
                  END IF
               END IF
            END IF
         
         ON ACTION controlp INFIELD sfdadocno
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfda_m.sfdadocno             #給予default值
            #給予arg
            SELECT ooef004 INTO l_ooef004
              FROM ooef_t
             WHERE ooef001 = g_site
               AND ooefent  = g_enterprise
            LET g_qryparam.arg1 = l_ooef004 #參照表編號
            LET g_qryparam.arg2 = g_prog    #作业代号
            CALL q_ooba002_1()                                #呼叫開窗
            LET g_sfda_m.sfdadocno = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_sfda_m.sfdadocno TO sfdadocno              #顯示到畫面上
            NEXT FIELD sfdadocno                          #返回原欄位

         ON ACTION controlp INFIELD sfda003
            IF g_sfda_m.sfda002 = '15' OR g_sfda_m.sfda002 = '25' THEN  #製程中委外時，顯示名稱為委外廠商
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_sfda_m.sfda003             #給予default值
               CALL q_pmaa001_3()                                #呼叫開窗
               LET g_sfda_m.sfda003 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_sfda_m.sfda003 TO sfda003              #顯示到畫面上
               #帶值:廠商名稱
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfda_m.sfda003
               CALL cl_ref_val("v_pmaal004")
               LET g_sfda_m.sfda003_desc = g_chkparam.return1
               DISPLAY BY NAME g_sfda_m.sfda003_desc
               NEXT FIELD sfda003                          #返回原欄位
            ELSE
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_sfda_m.sfda003             #給予default值
               #給予arg
               LET g_qryparam.arg1 = g_sfda_m.sfdadocdt  #
               CALL q_ooeg001()                                #呼叫開窗
               LET g_sfda_m.sfda003 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_sfda_m.sfda003 TO sfda003              #顯示到畫面上
               #帶值:部门名稱
               CALL s_desc_get_department_desc(g_sfda_m.sfda003) RETURNING g_sfda_m.sfda003_desc
               DISPLAY BY NAME g_sfda_m.sfda003_desc
               NEXT FIELD sfda003                          #返回原欄位
            END IF
            
         ON ACTION controlp INFIELD sfda004
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfda_m.sfda004             #給予default值
            LET g_qryparam.default2 = "" #g_sfda_m.oofa011->ooag #全名
            #給予arg
            CALL q_ooag001_2()                                #呼叫開窗
            LET g_sfda_m.sfda004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_sfda_m.sfda004 TO sfda004              #顯示到畫面上
            CALL s_desc_get_person_desc(g_sfda_m.sfda004) RETURNING g_sfda_m.sfda004_desc
            DISPLAY BY NAME g_sfda_m.sfda004_desc
            NEXT FIELD sfda004                          #返回原欄位 

         ON ACTION controlp INFIELD sfda005
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfda_m.sfda005             #給予default值
            #給予arg
            CALL q_sfqadocno()                               #呼叫開窗
            LET g_sfda_m.sfda005 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_sfda_m.sfda005 TO sfda005              #顯示到畫面上
            NEXT FIELD sfda005                          #返回原欄位 

         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            #CALL cl_showmsg()      #錯誤訊息統整顯示  controlg后输入一个不存在的作业编号，报错，这边编辑完退出就会一直报错
            DISPLAY BY NAME g_sfda_m.sfdadocno
            
            IF p_cmd <> 'u' THEN
               LET l_count = 1
               SELECT COUNT(*) INTO l_count FROM sfda_t
                WHERE sfdaent = g_enterprise AND sfdasite = g_site AND sfdadocno = g_sfda_m.sfdadocno
               IF l_count = 0 THEN
                  #add-point:單頭新增前
                  CALL s_aooi200_gen_docno(g_site,g_sfda_m.sfdadocno,g_sfda_m.sfdadocdt,g_prog)
                       RETURNING l_success,g_sfda_m.sfdadocno
                  IF NOT l_success THEN
                     NEXT FIELD sfdadocno
                  END IF          {#ADP版次:1#}
                  #end add-point

                  INSERT INTO sfda_t (sfdaent, sfdasite,sfdadocno,sfdadocdt,sfda001,sfda002,sfda003,
                      sfda004,sfda005,sfda015,sfda014,sfdastus,sfdaownid,sfdaowndp,sfdacrtid,sfdacrtdp,sfdacrtdt,sfdamodid,
                      sfdamoddt,sfdacnfid,sfdacnfdt,sfdapstid,sfdapstdt)
                  VALUES (g_enterprise, g_site,g_sfda_m.sfdadocno,g_sfda_m.sfdadocdt,g_sfda_m.sfda001,
                      g_sfda_m.sfda002,g_sfda_m.sfda003,g_sfda_m.sfda004,g_sfda_m.sfda005,g_sfda_m.sfda015,g_sfda_m.sfda014,g_sfda_m.sfdastus,
                      g_sfda_m.sfdaownid,g_sfda_m.sfdaowndp,g_sfda_m.sfdacrtid,g_sfda_m.sfdacrtdp,g_sfda_m.sfdacrtdt,
                      g_sfda_m.sfdamodid,g_sfda_m.sfdamoddt,g_sfda_m.sfdacnfid,g_sfda_m.sfdacnfdt,g_sfda_m.sfdapstid,
                      g_sfda_m.sfdapstdt)
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "g_sfda_m"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CONTINUE DIALOG
                  END IF
                  
                  LET g_sfda_m_t.* = g_sfda_m.*
                  CALL s_transaction_end('Y','0')

                  IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                     CALL asft310_detail_reproduce()  #执行复制的功能
                  END IF

                  LET p_cmd = 'u'

               ELSE
                  INITIALIZE g_errparam TO NULL
                  #LET g_errparam.code = '!'
                  LET g_errparam.code = 'std-00006'
                  LET g_errparam.extend =  g_sfda_m.sfdadocno
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  NEXT FIELD sfdadocno
               END IF
            ELSE
               UPDATE sfda_t SET (sfdadocno,sfdadocdt,sfda001,sfda002,sfda003,sfda004,sfda005,sfda015,sfda014,sfdastus,
                   sfdaownid,sfdaowndp,sfdacrtid,sfdacrtdp,sfdacrtdt,sfdamodid,sfdamoddt,sfdacnfid,sfdacnfdt,
                   sfdapstid,sfdapstdt) = (g_sfda_m.sfdadocno,g_sfda_m.sfdadocdt,g_sfda_m.sfda001,g_sfda_m.sfda002,
                   g_sfda_m.sfda003,g_sfda_m.sfda004,g_sfda_m.sfda005,g_sfda_m.sfda015,g_sfda_m.sfda014,g_sfda_m.sfdastus,g_sfda_m.sfdaownid,
                   g_sfda_m.sfdaowndp,g_sfda_m.sfdacrtid,g_sfda_m.sfdacrtdp,g_sfda_m.sfdacrtdt,g_sfda_m.sfdamodid,
                   g_sfda_m.sfdamoddt,g_sfda_m.sfdacnfid,g_sfda_m.sfdacnfdt,g_sfda_m.sfdapstid,g_sfda_m.sfdapstdt)
                WHERE sfdaent = g_enterprise AND sfdasite = g_site AND sfdadocno = g_sfdadocno_t
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "sfda_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_sfda_m.sfdadocno = g_sfdadocno_t  #add
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "sfda_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_sfda_m.sfdadocno = g_sfdadocno_t  #add
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     #add-point:单头修改後
                     #关联处理
                     LET l_success_tot = TRUE
                     #若key值变化，单身key跟着变化
                     IF g_sfda_m.sfdadocno != g_sfdadocno_t THEN
                        CALL asft310_upd_key() RETURNING l_success
                        IF NOT l_success THEN
                           LET l_success_tot = FALSE
                        END IF
                     END IF
                     IF NOT l_success_tot THEN
                        LET g_sfda_m.sfdadocno = g_sfdadocno_t
                        CALL s_transaction_end('N','0')
                     END IF
                     #end add-point
                     CALL s_transaction_end('Y','0')
               END CASE
            END IF
            LET g_sfdadocno_t = g_sfda_m.sfdadocno

            IF g_prog = 'asft310' OR g_prog = 'asft320' THEN
               #---visible---
               #发退料需求、料号汇总、发退料明细、制造批序号页签隐藏
               #部位  在制程中委外时隐藏不显示
               IF g_sfda_m.sfda002 = '15' OR g_sfda_m.sfda002 = '25' THEN
                  CALL cl_set_comp_visible("page_3,page_4,page_5,page_6",FALSE)
                  CALL cl_set_comp_visible("sfdb003,sfdb003_desc",FALSE)
               END IF
               #用不到套数页签的类型，套数页签隐藏
               IF g_sfda_m.sfda002 = '14' OR g_sfda_m.sfda002 = '23' OR g_sfda_m.sfda002 = '24' THEN
                  CALL cl_set_comp_visible("bpage_1",FALSE)
               END IF
               #runcard在类型为非制程委外时隐藏
               IF g_sfda_m.sfda002 != '15' AND g_sfda_m.sfda002 != '25' THEN
                  CALL cl_set_comp_visible("sfdb002",FALSE)
               END IF
               
               #---required---
               #制程委外时不可空白，其他的允许空白
               IF g_sfda_m.sfda002 = '15' OR g_sfda_m.sfda002 = '25' THEN
                  CALL cl_set_comp_required("sfdb004,sfdb005",TRUE)
               END IF
            END IF
            
            CALL asft310_show_sfda_ooff013()   #add 141222
            
            #mark 150101 移到单身问
            ##PBI自动产生单身
            #IF NOT cl_null(g_sfda_m.sfda005) THEN
            #   SELECT COUNT(*) INTO l_cnt1 FROM sfdb_t
            #    WHERE sfdbent   = g_enterprise
            #      AND sfdbdocno = g_sfda_m.sfdadocno
            #   SELECT COUNT(*) INTO l_cnt2 FROM sfdc_t
            #    WHERE sfdcent   = g_enterprise
            #      AND sfdcdocno = g_sfda_m.sfdadocno
            #   #单身没资料的可自动产生
            #   IF l_cnt1=0 AND l_cnt2=0 THEN
            #      IF cl_ask_confirm('asf-00473') THEN  #是否由【PBI编号】自动产生单身资料？
            #         CALL asft310_gen_b_sfda005()
            #      END IF
            #   END IF
            #END IF
            #mark 150101 end

      END INPUT

      #add 141222 begin
      #單頭段
      INPUT BY NAME g_sfda_m.sfda_ooff013
          ATTRIBUTE(WITHOUT DEFAULTS)

         #自訂ACTION
         
         BEFORE INPUT
         
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF

            CALL s_transaction_begin()
            IF NOT cl_null(g_sfda_m.sfda_ooff013) THEN
               CALL s_aooi360_gen('6',g_sfda_m.sfdadocno,' ',' ',' ',' ',' ',' ',' ',' ',' ','4',g_sfda_m.sfda_ooff013)
                  RETURNING l_success
            ELSE
               CALL s_aooi360_del('6',g_sfda_m.sfdadocno,' ',' ',' ',' ',' ',' ',' ',' ',' ','4')
                  RETURNING l_success
            END IF
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
      END INPUT
      #add 141222 end

      #Page1 預設值產生於此處
      INPUT ARRAY g_sfdb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)

         #自訂ACTION(detail_input,page_1)


         BEFORE INPUT
            IF g_sfda_m.sfdastus = 'Y' THEN #已审核的不能修改
               #单据已审核，只可修改发料明细或料号汇总页签
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'asf-00301'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               LET l_flag = 'f'
               CONTINUE WHILE
            END IF
            IF g_sfda_m.sfda002 ='14' OR g_sfda_m.sfda002 ='23' OR g_sfda_m.sfda002 ='24'  #14.倒扣領料、23.一般退料、24.倒扣退料
            THEN
               CALL DIALOG.setCurrentRow("s_detail2",l_ac) #進入發/退料需求單身
               NEXT FIELD sfdcseq
            END IF

            #add 150101
            #PBI自动产生单身
            IF NOT cl_null(g_sfda_m.sfda005) THEN
               SELECT COUNT(*) INTO l_cnt1 FROM sfdb_t
                WHERE sfdbent   = g_enterprise
                  AND sfdbdocno = g_sfda_m.sfdadocno
               SELECT COUNT(*) INTO l_cnt2 FROM sfdc_t
                WHERE sfdcent   = g_enterprise
                  AND sfdcdocno = g_sfda_m.sfdadocno
               #单身没资料的可自动产生
               IF l_cnt1=0 AND l_cnt2=0 THEN
                  IF cl_ask_confirm('asf-00473') THEN  #是否由【PBI编号】自动产生单身资料？
                     CALL asft310_gen_b_sfda005()
                  END IF
               END IF
            END IF
            #add 150101 end
            
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN
              CALL FGL_SET_ARR_CURR(g_sfdb_d.getLength()+1)
              LET g_insert = 'N'
            END IF

            CALL asft310_b_fill()
            LET g_rec_b = g_sfdb_d.getLength()


         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac

            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx

            CALL s_transaction_begin()
            OPEN asft310_cl USING g_enterprise,g_sfda_m.sfdadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN asft310_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()
               CLOSE asft310_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF

            #FETCH asft310_cl INTO g_sfda_m.sfdadocno,g_sfda_m.oobal004,g_sfda_m.sfdadocdt,g_sfda_m.sfda001,
            #    g_sfda_m.sfda002,g_sfda_m.sfda003,g_sfda_m.sfda003_desc,g_sfda_m.sfda004,g_sfda_m.sfda004_desc,
            #    g_sfda_m.sfda005,g_sfda_m.sfda015,g_sfda_m.sfda014,g_sfda_m.sfdastus,g_sfda_m.sfdaownid,g_sfda_m.sfdaownid_desc,g_sfda_m.sfdaowndp,
            #    g_sfda_m.sfdaowndp_desc,g_sfda_m.sfdacrtid,g_sfda_m.sfdacrtid_desc,g_sfda_m.sfdacrtdp,
            #    g_sfda_m.sfdacrtdp_desc,g_sfda_m.sfdacrtdt,g_sfda_m.sfdamodid,g_sfda_m.sfdamodid_desc,
            #    g_sfda_m.sfdamoddt,g_sfda_m.sfdacnfid,g_sfda_m.sfdacnfid_desc,g_sfda_m.sfdacnfdt,g_sfda_m.sfdapstid,
            #    g_sfda_m.sfdapstid_desc,g_sfda_m.sfdapstdt #鎖住將被更改或取消的資料
            #IF SQLCA.sqlcode THEN
            #   #CALL cl_err(g_sfda_m.sfdadocno,SQLCA.sqlcode,0)
            #   INITIALIZE g_errparam TO NULL
            #   LET g_errparam.code = SQLCA.sqlcode
            #   LET g_errparam.extend = g_sfda_m.sfdadocno
            #   LET g_errparam.popup = FALSE
            #   CALL cl_err()
            #   CLOSE asft310_cl
            #   CALL s_transaction_end('N','0')
            #   RETURN
            #END IF

            LET g_rec_b = g_sfdb_d.getLength()

            IF g_rec_b >= l_ac
               AND g_sfdb_d[l_ac].sfdb001 IS NOT NULL
               AND g_sfdb_d[l_ac].sfdb002 IS NOT NULL
               AND g_sfdb_d[l_ac].sfdb003 IS NOT NULL
               AND g_sfdb_d[l_ac].sfdb004 IS NOT NULL
               AND g_sfdb_d[l_ac].sfdb005 IS NOT NULL
            THEN
               LET l_cmd='u'
               LET g_sfdb_d_t.* = g_sfdb_d[l_ac].*  #BACKUP
               LET g_sfdb_d_o.* = g_sfdb_d[l_ac].*  #BACKUP
               #CALL asft310_set_entry_b_sfdb(l_cmd)
               #CALL asft310_set_no_entry_b_sfdb(l_cmd)
               IF NOT asft310_lock_b("sfdb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH asft310_bcl INTO g_sfdb_d[l_ac].sfdb001,g_sfdb_d[l_ac].sfdb002,g_sfdb_d[l_ac].sfdb003,
                      g_sfdb_d[l_ac].sfdb003_desc,g_sfdb_d[l_ac].sfdb004,g_sfdb_d[l_ac].sfdb004_desc,
                      g_sfdb_d[l_ac].sfdb005,g_sfdb_d[l_ac].sfaa010,g_sfdb_d[l_ac].sfaa010_desc,g_sfdb_d[l_ac].sfaa010_desc2,
                      g_sfdb_d[l_ac].sfaa012,g_sfdb_d[l_ac].sfaa013,g_sfdb_d[l_ac].sfdb006,g_sfdb_d[l_ac].sfdb007,
                      g_sfdb_d[l_ac].sfdb008
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = g_sfdb_d_t.sfdb001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF

                  #mod 150121
                  #LET g_bfill = "N"
                  #CALL asft310_show()
                  #LET g_bfill = "Y"
                  CALL asft310_b_show('sfdb',l_ac)
                  #mod 150121 end

                  CALL cl_show_fld_cont()
               END IF
               CALL asft310_set_entry_b_sfdb(l_cmd)
               CALL asft310_set_no_entry_b_sfdb(l_cmd)
            ELSE
               LET l_cmd='a'
            END IF
            #sfdb005 作业序：有输入作业时才可以输入
            CALL cl_set_comp_entry("sfdb005",FALSE)
            IF NOT cl_null(g_sfdb_d[g_detail_idx].sfdb004) THEN
               CALL cl_set_comp_entry("sfdb005",TRUE)
            END IF
            #其他table資料備份(確定是否更改用)

            #其他table進行lock


         BEFORE INSERT
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_sfdb_d[l_ac].* TO NULL
            LET g_sfdb_d_t.* = g_sfdb_d[l_ac].*     #新輸入資料
            LET g_sfdb_d_o.* = g_sfdb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            #CALL asft310_set_entry_b_sfdb(l_cmd)
            #CALL asft310_set_no_entry_b_sfdb(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_sfdb_d[li_reproduce_target].* = g_sfdb_d[li_reproduce].*
               LET g_sfdb_d[li_reproduce_target].sfdb001 = NULL
               LET g_sfdb_d[li_reproduce_target].sfdb002 = NULL
               LET g_sfdb_d[li_reproduce_target].sfdb003 = NULL
               LET g_sfdb_d[li_reproduce_target].sfdb004 = NULL
               LET g_sfdb_d[li_reproduce_target].sfdb005 = NULL
            END IF
            #公用欄位給值(單身)
            #LET g_sfdb_d[l_ac].sfdb003 = ' '  #部位
            #LET g_sfdb_d[l_ac].sfdb004 = ' '  #作业
            #LET g_sfdb_d[l_ac].sfdb005 = ' '  #作业序 
            #mark reason：不能空格 否则required则不认识
            IF g_prog[1,6]='asft31' THEN
               LET g_sfdb_d[l_ac].sfdb008 = -1  #正负 发料-1
            END IF
            IF g_prog[1,6]='asft32' THEN
               LET g_sfdb_d[l_ac].sfdb008 = 1   #正负 退料1
            END IF
            CALL asft310_set_entry_b_sfdb(l_cmd)
            CALL asft310_set_no_entry_b_sfdb(l_cmd)

         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF

            #add-point:單身新增
            IF cl_null(g_sfdb_d[l_ac].sfdb003) THEN
               LET g_sfdb_d[l_ac].sfdb003 = ' '
            END IF
            IF cl_null(g_sfdb_d[l_ac].sfdb004) THEN
               LET g_sfdb_d[l_ac].sfdb004 = ' '
            END IF
            IF cl_null(g_sfdb_d[l_ac].sfdb005) THEN
               LET g_sfdb_d[l_ac].sfdb005 = ' '
            END IF          {#ADP版次:1#}
            #end add-point

            LET l_count = 1
            SELECT COUNT(*) INTO l_count FROM sfdb_t
             WHERE sfdbent = g_enterprise AND sfdbsite = g_site AND sfdbdocno = g_sfda_m.sfdadocno
               AND sfdb001 = g_sfdb_d[l_ac].sfdb001
               AND sfdb002 = g_sfdb_d[l_ac].sfdb002
               AND sfdb003 = g_sfdb_d[l_ac].sfdb003
               AND sfdb004 = g_sfdb_d[l_ac].sfdb004
               AND sfdb005 = g_sfdb_d[l_ac].sfdb005
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN
               INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_sfda_m.sfdadocno
               LET gs_keys[2] = g_sfdb_d[g_detail_idx].sfdb001
               LET gs_keys[3] = g_sfdb_d[g_detail_idx].sfdb002
               LET gs_keys[4] = g_sfdb_d[g_detail_idx].sfdb003
               LET gs_keys[5] = g_sfdb_d[g_detail_idx].sfdb004
               LET gs_keys[6] = g_sfdb_d[g_detail_idx].sfdb005
               CALL asft310_insert_b('sfdb_t',gs_keys,"'1'")
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()
               INITIALIZE g_sfdb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF

            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "sfdb_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL asft310_b_fill()
               #資料多語言用-增/改
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF

         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_sfdb_d.deleteElement(l_ac)
               NEXT FIELD sfdb001
            END IF

            IF g_sfdb_d_t.sfdb001 IS NOT NULL
               AND g_sfdb_d_t.sfdb002 IS NOT NULL
               AND g_sfdb_d_t.sfdb003 IS NOT NULL
               AND g_sfdb_d_t.sfdb004 IS NOT NULL
               AND g_sfdb_d_t.sfdb005 IS NOT NULL
            THEN
               #add
               #可删除否检查
               CALL asft310_del_sfdb_chk() RETURNING l_success
               IF NOT l_success THEN
                  CANCEL DELETE
               END IF
               #add --end
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CANCEL DELETE
               END IF

               DELETE FROM sfdb_t
                WHERE sfdbent = g_enterprise
                  AND sfdbdocno = g_sfda_m.sfdadocno
                  AND sfdb001 = g_sfdb_d_t.sfdb001
                  AND sfdb002 = g_sfdb_d_t.sfdb002
                  AND sfdb003 = g_sfdb_d_t.sfdb003
                  AND sfdb004 = g_sfdb_d_t.sfdb004
                  AND sfdb005 = g_sfdb_d_t.sfdb005
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "sfdb_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  #CALL s_transaction_end('N','0')  事务结束后再回到before 单身状态，就没事务了
                  CANCEL DELETE
               ELSE
                  LET g_rec_b = g_rec_b-1
                  #add-point:單身2刪除後
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF
               CLOSE asft310_bcl
               LET l_count = g_sfdb_d.getLength()
            END IF
            #INITIALIZE gs_keys TO NULL
            #LET gs_keys[1] = g_sfda_m.sfdadocno
            #LET gs_keys[2] = g_sfdb_d[g_detail_idx].sfdb001
            #LET gs_keys[3] = g_sfdb_d[g_detail_idx].sfdb002
            #LET gs_keys[4] = g_sfdb_d[g_detail_idx].sfdb003
            #LET gs_keys[5] = g_sfdb_d[g_detail_idx].sfdb004
            #LET gs_keys[6] = g_sfdb_d[g_detail_idx].sfdb005

         AFTER DELETE
            #IF asft310_delete_b('sfdb_t',gs_keys,"'1'") THEN
            #END IF

         AFTER FIELD sfdb001
            #工单单号
            IF NOT cl_null(g_sfdb_d[g_detail_idx].sfdb001) THEN
               IF cl_null(g_sfdb_d_t.sfdb001) OR g_sfdb_d[g_detail_idx].sfdb001 != g_sfdb_d_t.sfdb001 THEN
                  IF NOT asft310_sfdb001_chk() THEN
                     LET g_sfdb_d[g_detail_idx].sfdb001 = g_sfdb_d_t.sfdb001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            #add 150312 需求有工单的，这边不能被改掉
            IF NOT cl_null(g_sfdb_d_t.sfdb001) AND (cl_null(g_sfdb_d_t.sfdb001) OR g_sfdb_d[g_detail_idx].sfdb001 != g_sfdb_d_t.sfdb001) THEN
               LET l_cnt1 = 0
               LET l_cnt2 = 0
               SELECT COUNT(*) INTO l_cnt1 FROM sfdc_t  #是否存在于需求单重
                WHERE sfdcent   = g_enterprise
                  AND sfdcdocno = g_sfda_m.sfdadocno
                  AND sfdc001   = g_sfdb_d_t.sfdb001
               SELECT COUNT(*) INTO l_cnt2 FROM sfdb_t  #除当笔之外是否还有此工单的
                WHERE sfdbent   = g_enterprise
                  AND sfdbdocno = g_sfda_m.sfdadocno
                  AND sfdb001   = g_sfdb_d_t.sfdb001
               IF l_cnt1 > 0 AND l_cnt2 =1 THEN
                  #已存在需求申請資料，不可刪除或修改，請刪除需求申請資料后再重新操作
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'asf-00115'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_sfdb_d[g_detail_idx].sfdb001 = g_sfdb_d_t.sfdb001
                  NEXT FIELD CURRENT
               END IF
            END IF
            #add 150312 end
   
            IF NOT cl_null(g_sfdb_d[g_detail_idx].sfdb001) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdb_d[g_detail_idx].sfdb001 != g_sfdb_d_o.sfdb001)) THEN
                  CALL asft310_sfdb001_reference(l_cmd)
               END IF
            END IF
            
            LET g_sfdb_d_o.sfdb001 = g_sfdb_d[g_detail_idx].sfdb001

         AFTER FIELD sfdb002
            #Run Card
            IF NOT cl_null(g_sfdb_d[g_detail_idx].sfdb002) THEN
               #检查是否在工单制程档中的Run Card内(asft301)
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_site
               LET g_chkparam.arg2 = g_sfdb_d[g_detail_idx].sfdb001
               LET g_chkparam.arg3 = g_sfdb_d[g_detail_idx].sfdb002
               IF NOT cl_chk_exist("v_sfca001") THEN
                  NEXT FIELD CURRENT
               END IF

               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdb_d[g_detail_idx].sfdb002 != g_sfdb_d_o.sfdb002)) THEN
                  IF NOT cl_null(g_sfdb_d[g_detail_idx].sfdb001) THEN
                     #计算预计套数
                     CALL asft310_def_sfdb006(l_cmd) RETURNING g_sfdb_d[g_detail_idx].sfdb006
                     CALL asft310_def_sfdb007()
                  END IF
               END IF
            END IF

            LET g_sfdb_d_o.sfdb002 = g_sfdb_d[g_detail_idx].sfdb002
            
         AFTER FIELD sfdb003
            #部位
            IF NOT cl_null(g_sfdb_d[l_ac].sfdb003) AND NOT cl_null(g_sfdb_d[l_ac].sfdb001) THEN
            　 #检查是否存在工单单身的部位
               SELECT COUNT(*) INTO l_cnt FROM sfba_t
                WHERE sfbaent = g_enterprise
                  AND sfbasite= g_site
                  AND sfbadocno=g_sfdb_d[l_ac].sfdb001
                  AND sfba002 = g_sfdb_d[l_ac].sfdb003  #部位
               IF l_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'asf-00039'
                  LET g_errparam.extend = g_sfdb_d[l_ac].sfdb003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF

               #检查+作业编号是否存在工单单身
               IF NOT cl_null(g_sfdb_d[l_ac].sfdb004) THEN
                  SELECT COUNT(*) INTO l_cnt FROM sfba_t
                   WHERE sfbaent = g_enterprise
                     AND sfbasite= g_site
                     AND sfbadocno=g_sfdb_d[l_ac].sfdb001
                     AND sfba002 = g_sfdb_d[l_ac].sfdb003  #部位
                     AND sfba003 = g_sfdb_d[l_ac].sfdb004  #作业编号
                  IF l_cnt = 0 THEN
                     #工单+作业+作业序不存在于工单单身档中，请检查工单维护作业asft300中的资料！
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00059'
                     LET g_errparam.extend = g_sfdb_d[l_ac].sfdb003
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            #部位说明
            INITIALIZE g_chkparam.* TO NULL
            LET g_chkparam.arg1 = '215'
            LET g_chkparam.arg2 = g_sfdb_d[l_ac].sfdb003
            CALL cl_ref_val("v_oocql002")
            LET g_sfdb_d[l_ac].sfdb003_desc = g_chkparam.return1
            DISPLAY BY NAME g_sfdb_d[l_ac].sfdb003_desc

            IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdb_d[l_ac].sfdb003 != g_sfdb_d_o.sfdb003)) THEN
               IF NOT cl_null(g_sfdb_d[g_detail_idx].sfdb001) THEN
                  #计算预计套数
                  CALL asft310_def_sfdb006(l_cmd) RETURNING g_sfdb_d[l_ac].sfdb006
                  CALL asft310_def_sfdb007()
               END IF
            END IF
            
            LET g_sfdb_d_o.sfdb003 = g_sfdb_d[l_ac].sfdb003
         
         BEFORE FIELD sfdb004
            CALL cl_set_comp_entry("sfdb005",TRUE)
         
         AFTER FIELD sfdb004
            #作业
            IF NOT cl_null(g_sfdb_d[l_ac].sfdb004) THEN
               IF g_sfda_m.sfda002='15' OR g_sfda_m.sfda002='25' THEN
                  #作业+作业序需存在工单制程档中(sfcb003+sfcb004)，且为可委外(sfcb012=Y)
                  IF NOT cl_null(g_sfdb_d[l_ac].sfdb001) AND NOT cl_null(g_sfdb_d[l_ac].sfdb002) THEN
                     SELECT COUNT(*) INTO l_cnt FROM sfcb_t
                      WHERE sfcbent = g_enterprise
                        AND sfcbsite= g_site
                        AND sfcbdocno=g_sfdb_d[l_ac].sfdb001  #工单单号
                        AND sfcb001 = g_sfdb_d[l_ac].sfdb002  #run card
                        AND sfcb003 = g_sfdb_d[l_ac].sfdb004  #作业
                        AND sfcb012 = 'Y'
                     IF l_cnt = 0 THEN
                        #工单+runcard+作业+作业序不存在于工单制程单身档中,请检查工单制程维护作业asft301中的资料！
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'asf-00040'
                        LET g_errparam.extend = g_sfdb_d[l_ac].sfdb004
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        NEXT FIELD CURRENT
                     END IF

                     IF NOT cl_null(g_sfdb_d[l_ac].sfdb005) THEN
                        SELECT COUNT(*) INTO l_cnt FROM sfcb_t
                         WHERE sfcbent = g_enterprise
                           AND sfcbsite= g_site
                           AND sfcbdocno=g_sfdb_d[l_ac].sfdb001
                           AND sfcb001 = g_sfdb_d[l_ac].sfdb002  #run card
                           AND sfcb003 = g_sfdb_d[l_ac].sfdb004  #作业
                           AND sfcb004 = g_sfdb_d[l_ac].sfdb005  #作业序
                           AND sfcb012 = 'Y'
                        IF l_cnt = 0 THEN
                           #工单+runcard+作业+作业序不存在于工单制程单身档中,请检查工单制程维护作业asft301中的资料！
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = 'asf-00040'
                           LET g_errparam.extend = g_sfdb_d[l_ac].sfdb004
                           LET g_errparam.popup = TRUE
                           CALL cl_err()
                           NEXT FIELD CURRENT
                        END IF
                     END IF
                  END IF
               ELSE
                  IF NOT cl_null(g_sfdb_d[l_ac].sfdb004) AND NOT cl_null(g_sfdb_d[l_ac].sfdb001) THEN
                  　 #检查是否存在工单单身
                     SELECT COUNT(*) INTO l_cnt FROM sfba_t
                      WHERE sfbaent = g_enterprise
                        AND sfbasite= g_site
                        AND sfbadocno=g_sfdb_d[l_ac].sfdb001
                        AND sfba003 = g_sfdb_d[l_ac].sfdb004  #作业
                     IF l_cnt = 0 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'asf-00039'
                        LET g_errparam.extend = g_sfdb_d[l_ac].sfdb004
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        #不存在于 对应工单的单身栏位 中,请检查工单维护作业asft300中的资料!
                        NEXT FIELD CURRENT
                     END IF

                     #检查+作业编号是否存在工单单身
                     IF NOT cl_null(g_sfdb_d[l_ac].sfdb003) THEN
                        SELECT COUNT(*) INTO l_cnt FROM sfba_t
                         WHERE sfbaent = g_enterprise
                           AND sfbasite= g_site
                           AND sfbadocno=g_sfdb_d[l_ac].sfdb001
                           AND sfba002 = g_sfdb_d[l_ac].sfdb003  #部位
                           AND sfba003 = g_sfdb_d[l_ac].sfdb004  #作业编号
                        IF l_cnt = 0 THEN
                           #工单+作业+作业序不存在于工单单身档中，请检查工单维护作业asft300中的资料！
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = 'asf-00059'
                           LET g_errparam.extend = g_sfdb_d[l_ac].sfdb004
                           LET g_errparam.popup = TRUE
                           CALL cl_err()
                           NEXT FIELD CURRENT
                        END IF
                     END IF
                  END IF
               END IF

               IF cl_null(g_sfdb_d[l_ac].sfdb005) THEN
                  CALL asft310_def_sfdb005()
               END IF

               #作业说明
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = '221'
               LET g_chkparam.arg2 = g_sfdb_d[l_ac].sfdb004
               CALL cl_ref_val("v_oocql002")
               LET g_sfdb_d[l_ac].sfdb004_desc = g_chkparam.return1
               DISPLAY BY NAME g_sfdb_d[l_ac].sfdb004_desc
               
               #sfdb005 作业序：有输入作业时才可以输入
               CALL cl_set_comp_entry("sfdb005",TRUE)
            ELSE
               LET g_sfdb_d[l_ac].sfdb004_desc = ''
               DISPLAY BY NAME g_sfdb_d[l_ac].sfdb004_desc
               LET g_sfdb_d[l_ac].sfdb005 = ''  #作业不输入，作业序清空  #不能空格 否则required则不认识
               CALL cl_set_comp_entry("sfdb005",FALSE)
               LET g_sfdb_d[l_ac].sfdb005 = ' '  #作业不输入，作业序空格
            END IF

            IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdb_d[l_ac].sfdb004 != g_sfdb_d_o.sfdb004)) THEN
               IF NOT cl_null(g_sfdb_d[g_detail_idx].sfdb001) THEN
                  #计算预计套数
                  CALL asft310_def_sfdb006(l_cmd) RETURNING g_sfdb_d[l_ac].sfdb006
                  CALL asft310_def_sfdb007()
               END IF
            END IF
            
            LET g_sfdb_d_o.sfdb004 = g_sfdb_d[l_ac].sfdb004

         BEFORE FIELD sfdb005
            CALL cl_set_comp_entry("sfdb005",TRUE)
            IF cl_null(g_sfdb_d[l_ac].sfdb004 ) THEN
               CALL cl_set_comp_entry("sfdb005",FALSE)
            END IF
            
         AFTER FIELD sfdb005
            #作业序
            IF NOT cl_null(g_sfdb_d[g_detail_idx].sfdb005) THEN
               IF g_sfda_m.sfda002='15' OR g_sfda_m.sfda002='25' THEN
                  #作业+作业序需存在工单制程档中(sfcb003+sfcb004)，且为可委外(sfcb012=Y)
                  IF NOT cl_null(g_sfdb_d[l_ac].sfdb001) AND NOT cl_null(g_sfdb_d[l_ac].sfdb002) THEN
                     SELECT COUNT(*) INTO l_cnt FROM sfcb_t
                      WHERE sfcbent = g_enterprise
                        AND sfcbsite= g_site
                        AND sfcbdocno=g_sfdb_d[l_ac].sfdb001  #工单单号
                        AND sfcb001 = g_sfdb_d[l_ac].sfdb002  #run card
                        AND sfcb003 = g_sfdb_d[l_ac].sfdb004  #作业
                        AND sfcb012 = 'Y'
                     IF l_cnt = 0 THEN
                        #工单+runcard+作业+作业序不存在于工单制程单身档中,请检查工单制程维护作业asft301中的资料！
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'asf-00040'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        NEXT FIELD CURRENT
                     END IF

                     IF NOT cl_null(g_sfdb_d[l_ac].sfdb005) THEN
                        SELECT COUNT(*) INTO l_cnt FROM sfcb_t
                         WHERE sfcbent = g_enterprise
                           AND sfcbsite= g_site
                           AND sfcbdocno=g_sfdb_d[l_ac].sfdb001
                           AND sfcb001 = g_sfdb_d[l_ac].sfdb002  #run card
                           AND sfcb003 = g_sfdb_d[l_ac].sfdb004  #作业
                           AND sfcb004 = g_sfdb_d[l_ac].sfdb005  #作业序
                           AND sfcb012 = 'Y'
                        IF l_cnt = 0 THEN
                           #工单+runcard+作业+作业序不存在于工单制程单身档中,请检查工单制程维护作业asft301中的资料！
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = 'asf-00040'
                           LET g_errparam.extend = ''
                           LET g_errparam.popup = TRUE
                           CALL cl_err()
                           NEXT FIELD CURRENT
                        END IF
                     END IF
                  END IF
               ELSE
            　    #检查是否存在工单单身
                  SELECT COUNT(*) INTO l_cnt FROM sfba_t
                   WHERE sfbaent = g_enterprise
                     AND sfbasite= g_site
                     AND sfbadocno=g_sfdb_d[l_ac].sfdb001
                     AND sfba003 = g_sfdb_d[l_ac].sfdb004  #作业
                     AND sfba004 = g_sfdb_d[l_ac].sfdb005  #作业序
                  IF l_cnt = 0 THEN
                     #不存在于 对应工单的单身栏位 中,请检查工单维护作业asft300中的资料!
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00039'
                     LET g_errparam.extend = g_sfdb_d[l_ac].sfdb005
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF

            END IF

            IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdb_d[l_ac].sfdb005 != g_sfdb_d_o.sfdb005)) THEN
               IF NOT cl_null(g_sfdb_d[g_detail_idx].sfdb001) THEN
                  #计算预计套数
                  CALL asft310_def_sfdb006(l_cmd) RETURNING g_sfdb_d[l_ac].sfdb006
                  CALL asft310_def_sfdb007()
               END IF
            END IF
            
            LET g_sfdb_d_o.sfdb005 = g_sfdb_d[l_ac].sfdb005

         AFTER FIELD sfdb006
            #预计套数
            IF NOT cl_null(g_sfdb_d[l_ac].sfdb006) THEN
               #13 欠料补料 必须为0
               IF g_sfda_m.sfda002 = '13' THEN
                  IF g_sfdb_d[l_ac].sfdb006 != 0 THEN
                     #此栏位必须为0
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00341'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD sfdb006
                  END IF
               END IF
               #11 成套发料 不可小于0,可以是0,代表做欠料补料的动作
               IF g_sfda_m.sfda002 = '11' THEN
                  IF NOT cl_ap_chk_Range(g_sfdb_d[l_ac].sfdb006,"0.000","1","","","azz-00079",1) THEN
                     NEXT FIELD sfdb006
                  END IF
               END IF
               #退料单\12 超领\15 制程委外发料 不可小于等于0
               IF g_prog[1,6] = 'asft32' OR g_sfda_m.sfda002 = '12' OR g_sfda_m.sfda002 = '15' THEN
                  IF g_sfdb_d[l_ac].sfdb006 <= 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00155'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD sfdb006
                  END IF
               END IF
               
               CASE
                  WHEN g_sfda_m.sfda002='11' OR g_sfda_m.sfda002='14' #成套发料、倒扣领料
                       #不能超过runcard剩余可发套数 
                       #mod 141229
                       #CALL asft310_get_max_set(l_cmd,'11') RETURNING l_sfdb006
                       CALL s_asft310_get_max_set(l_cmd,'11',g_sfda_m.sfdadocno,
                                                  g_sfdb_d[g_detail_idx].sfdb001,g_sfdb_d[g_detail_idx].sfdb002,
                                                  g_sfdb_d[g_detail_idx].sfdb003,g_sfdb_d[g_detail_idx].sfdb004,
                                                  g_sfdb_d[g_detail_idx].sfdb005,
                                                  g_sfdb_d_t.sfdb001,g_sfdb_d_t.sfdb002,g_sfdb_d_t.sfdb003,
                                                  g_sfdb_d_t.sfdb004,g_sfdb_d_t.sfdb005,g_sfdb_d_t.sfdb006)
                          RETURNING l_sfdb006
                       #mod 141229 end
                       IF g_sfdb_d[l_ac].sfdb006 > l_sfdb006 THEN
                          #不可超过最大可发/退料套数1%,请重新输入！
                          INITIALIZE g_errparam TO NULL
                          LET g_errparam.code = 'asf-00042'
                          LET g_errparam.extend = ''
                          LET g_errparam.popup = TRUE
                          LET g_errparam.replace[1] = l_sfdb006
                          CALL cl_err()
                          NEXT FIELD CURRENT
                       END IF
                  WHEN g_sfda_m.sfda002='15' #制程中委外发料：预计套数不可大于用工单单号+Run Card+作业+制程序找到找到生产数量-委外发数量+委外退料数量
                       #mod 141229
                       #CALL asft310_get_max_set(l_cmd,'15') RETURNING l_sfdb006
                       CALL s_asft310_get_max_set(l_cmd,'15',g_sfda_m.sfdadocno,
                                                  g_sfdb_d[g_detail_idx].sfdb001,g_sfdb_d[g_detail_idx].sfdb002,
                                                  g_sfdb_d[g_detail_idx].sfdb003,g_sfdb_d[g_detail_idx].sfdb004,
                                                  g_sfdb_d[g_detail_idx].sfdb005,
                                                  g_sfdb_d_t.sfdb001,g_sfdb_d_t.sfdb002,g_sfdb_d_t.sfdb003,
                                                  g_sfdb_d_t.sfdb004,g_sfdb_d_t.sfdb005,g_sfdb_d_t.sfdb006)
                          RETURNING l_sfdb006
                       #mod 141229 end
                       IF g_sfdb_d[l_ac].sfdb006 > l_sfdb006 THEN
                          #不可超过最大可发/退料套数1%,请重新输入！
                          INITIALIZE g_errparam TO NULL
                          LET g_errparam.code = 'asf-00042'
                          LET g_errparam.extend = ''
                          LET g_errparam.popup = TRUE
                          LET g_errparam.replace[1] = l_sfdb006
                          CALL cl_err()
                          NEXT FIELD CURRENT
                       END IF
                  WHEN g_sfda_m.sfda002='21' #成套退料：预计退料套数不可大于工单已发套数
                       #mod 141229
                       #CALL asft310_get_max_set(l_cmd,'21') RETURNING l_sfdb006
                       CALL s_asft310_get_max_set(l_cmd,'21',g_sfda_m.sfdadocno,
                                                  g_sfdb_d[g_detail_idx].sfdb001,g_sfdb_d[g_detail_idx].sfdb002,
                                                  g_sfdb_d[g_detail_idx].sfdb003,g_sfdb_d[g_detail_idx].sfdb004,
                                                  g_sfdb_d[g_detail_idx].sfdb005,
                                                  g_sfdb_d_t.sfdb001,g_sfdb_d_t.sfdb002,g_sfdb_d_t.sfdb003,
                                                  g_sfdb_d_t.sfdb004,g_sfdb_d_t.sfdb005,g_sfdb_d_t.sfdb006)
                          RETURNING l_sfdb006
                       #mod 141229 end
                       IF g_sfdb_d[l_ac].sfdb006 > l_sfdb006 THEN
                          #不可超过最大可发/退料套数1%,请重新输入！
                          INITIALIZE g_errparam TO NULL
                          LET g_errparam.code = 'asf-00042'
                          LET g_errparam.extend = ''
                          LET g_errparam.popup = TRUE
                          LET g_errparam.replace[1] = l_sfdb006
                          CALL cl_err()
                          NEXT FIELD CURRENT
                       END IF
                  WHEN g_sfda_m.sfda002='25' #制程中委外退料：预计套数不可大于同一工单+Run card+作业+制程序的已发-退料套数
                       #mod 141229
                       #CALL asft310_get_max_set(l_cmd,'25') RETURNING l_sfdb006
                       CALL s_asft310_get_max_set(l_cmd,'25',g_sfda_m.sfdadocno,
                                                  g_sfdb_d[g_detail_idx].sfdb001,g_sfdb_d[g_detail_idx].sfdb002,
                                                  g_sfdb_d[g_detail_idx].sfdb003,g_sfdb_d[g_detail_idx].sfdb004,
                                                  g_sfdb_d[g_detail_idx].sfdb005,
                                                  g_sfdb_d_t.sfdb001,g_sfdb_d_t.sfdb002,g_sfdb_d_t.sfdb003,
                                                  g_sfdb_d_t.sfdb004,g_sfdb_d_t.sfdb005,g_sfdb_d_t.sfdb006)
                          RETURNING l_sfdb006
                       #mod 141229 end
                       IF g_sfdb_d[l_ac].sfdb006 > l_sfdb006 THEN
                          #不可超过最大可发/退料套数1%,请重新输入！
                          INITIALIZE g_errparam TO NULL
                          LET g_errparam.code = 'asf-00042'
                          LET g_errparam.extend = ''
                          LET g_errparam.popup = TRUE
                          LET g_errparam.replace[1] = l_sfdb006
                          CALL cl_err()
                          NEXT FIELD CURRENT
                       END IF
               END CASE

               #LET g_sfdb_d[l_ac].sfdb007 = g_sfdb_d[l_ac].sfdb006
               CALL asft310_def_sfdb007()
            END IF
            
            LET g_sfdb_d_o.sfdb006 = g_sfdb_d[l_ac].sfdb006

         ON ACTION controlp INFIELD sfdb001
            #工單單號
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb_d[l_ac].sfdb001
            LET g_qryparam.where = " sfaasite ='",g_site,"' AND sfaastus='F'"
            IF g_sfda_m.sfda002='22' THEN   #超领退料只开有超领量的
               LET g_qryparam.where = g_qryparam.where CLIPPED,
                                      " AND sfaadocno in (select unique sfbadocno from sfba_t ",
                                      "                  where sfbaent   = ",g_enterprise,
                                      "                    and sfbasite  = '",g_site,"' ",
                                      "                    and sfba025 > 0 ) "
            END IF
            #单头PBI
            IF NOT cl_null(g_sfda_m.sfda005) THEN
               LET g_qryparam.where = g_qryparam.where CLIPPED,
                                      " AND sfaadocno in (select unique sfqb001 from sfqb_t ",
                                      "                  where sfqbent   = ",g_enterprise,
                                      "                    and sfqbdocno = '",g_sfda_m.sfda005,"') "
            END IF
            CALL q_sfaadocno_3()
            LET g_sfdb_d[l_ac].sfdb001 = g_qryparam.return1
            DISPLAY g_sfdb_d[l_ac].sfdb001 TO sfdb001
            
         ON ACTION controlp INFIELD sfdb002
            #Run Card單號
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb_d[l_ac].sfdb002
            LET g_qryparam.where = " sfcasite ='",g_site,"'"
            IF NOT cl_null(g_sfdb_d[l_ac].sfdb001) THEN
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfcadocno='",g_sfdb_d[l_ac].sfdb001,"'"
            END IF
            CALL q_sfca001_2()
            LET g_sfdb_d[l_ac].sfdb002 = g_qryparam.return1
            DISPLAY g_sfdb_d[l_ac].sfdb002 TO sfdb002

         ON ACTION controlp INFIELD sfdb003
            #部位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb_d[l_ac].sfdb003
            LET g_qryparam.where = " sfbasite ='",g_site,"'"
            IF NOT cl_null(g_sfdb_d[l_ac].sfdb001) THEN
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfbadocno='",g_sfdb_d[l_ac].sfdb001,"'"
            END IF
            IF NOT cl_null(g_sfdb_d[l_ac].sfdb004) THEN  #作业编号
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfba003='",g_sfdb_d[l_ac].sfdb004,"'"
            END IF
            CALL q_sfba002()
            LET g_sfdb_d[l_ac].sfdb003 = g_qryparam.return1
            DISPLAY g_sfdb_d[l_ac].sfdb003 TO sfdb003

         ON ACTION controlp INFIELD sfdb004
             #作业编号
             INITIALIZE g_qryparam.* TO NULL
             LET g_qryparam.state = "i"
             LET g_qryparam.reqry = FALSE
             LET g_qryparam.default1 = g_sfdb_d[l_ac].sfdb004
             
             IF g_sfda_m.sfda002='15' OR g_sfda_m.sfda002='25' THEN
                LET g_qryparam.where = " sfcbsite ='",g_site,"' AND sfcb012='Y'"
                IF NOT cl_null(g_sfdb_d[l_ac].sfdb001) THEN  #工单单号
                   LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfcbdocno='",g_sfdb_d[l_ac].sfdb001,"'"
                END IF
                IF NOT cl_null(g_sfdb_d[l_ac].sfdb002) THEN  #Run Card
                   LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfcb001= ",g_sfdb_d[l_ac].sfdb002
                END IF
                CALL q_sfcb003_3()
             ELSE
                LET g_qryparam.where = " sfbasite ='",g_site,"'"
                IF NOT cl_null(g_sfdb_d[l_ac].sfdb001) THEN  #工单单号
                   LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfbadocno='",g_sfdb_d[l_ac].sfdb001,"'"
                END IF
                IF NOT cl_null(g_sfdb_d[l_ac].sfdb003) THEN  #部位
                   LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfba002='",g_sfdb_d[l_ac].sfdb003,"'"
                END IF
                CALL q_sfba003()
             END IF
             LET g_sfdb_d[l_ac].sfdb004 = g_qryparam.return1
             DISPLAY g_sfdb_d[l_ac].sfdb004 TO sfdb004

         ON ACTION controlp INFIELD sfdb005
             #作业序
             INITIALIZE g_qryparam.* TO NULL
             LET g_qryparam.state = "i"
             LET g_qryparam.reqry = FALSE
             LET g_qryparam.default1 = g_sfdb_d[l_ac].sfdb005
             IF g_sfda_m.sfda002='15' OR g_sfda_m.sfda002='25' THEN
                LET g_qryparam.where = " sfcbsite ='",g_site,"' AND sfcb012='Y'"
                IF NOT cl_null(g_sfdb_d[l_ac].sfdb001) THEN  #工单单号
                   LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfcbdocno='",g_sfdb_d[l_ac].sfdb001,"'"
                END IF
                IF NOT cl_null(g_sfdb_d[l_ac].sfdb002) THEN  #Run Card
                   LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfcb001= ",g_sfdb_d[l_ac].sfdb002
                END IF
                CALL q_sfcb004_2()
             ELSE
                LET g_qryparam.where = " sfbasite ='",g_site,"' "
                IF NOT cl_null(g_sfdb_d[l_ac].sfdb001) THEN  #工单单号
                   LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfbadocno='",g_sfdb_d[l_ac].sfdb001,"'"
                END IF
                IF NOT cl_null(g_sfdb_d[l_ac].sfdb003) THEN  #部位
                   LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfba002='",g_sfdb_d[l_ac].sfdb003,"'"
                END IF
                IF NOT cl_null(g_sfdb_d[l_ac].sfdb004) THEN  #作业编号
                   LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfba003='",g_sfdb_d[l_ac].sfdb004,"'"
                END IF
                CALL q_sfba004()
             END IF
             LET g_sfdb_d[l_ac].sfdb005 = g_qryparam.return1
             DISPLAY g_sfdb_d[l_ac].sfdb005 TO sfdb005

         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_sfdb_d[l_ac].* = g_sfdb_d_t.*
               CLOSE asft310_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = g_sfdb_d[l_ac].sfdb001
               LET g_errparam.popup = TRUE
               CALL cl_err()
               LET g_sfdb_d[l_ac].* = g_sfdb_d_t.*
            ELSE
               #寫入修改者/修改日期資訊(單身)
               IF cl_null(g_sfdb_d[l_ac].sfdb003) THEN LET g_sfdb_d[l_ac].sfdb003 = ' ' END IF
               IF cl_null(g_sfdb_d[l_ac].sfdb004) THEN LET g_sfdb_d[l_ac].sfdb004 = ' ' END IF
               IF cl_null(g_sfdb_d[l_ac].sfdb005) THEN LET g_sfdb_d[l_ac].sfdb005 = ' ' END IF
               UPDATE sfdb_t SET (sfdbdocno,sfdb001,sfdb002,sfdb003,sfdb004,sfdb005,sfdb006,sfdb007,
                   sfdb008) = (g_sfda_m.sfdadocno,g_sfdb_d[l_ac].sfdb001,g_sfdb_d[l_ac].sfdb002,g_sfdb_d[l_ac].sfdb003,
                   g_sfdb_d[l_ac].sfdb004,g_sfdb_d[l_ac].sfdb005,g_sfdb_d[l_ac].sfdb006,g_sfdb_d[l_ac].sfdb007,
                   g_sfdb_d[l_ac].sfdb008)
                WHERE sfdbent = g_enterprise AND sfdbsite = g_site AND sfdbdocno = g_sfda_m.sfdadocno
                  AND sfdb001 = g_sfdb_d_t.sfdb001 #項次
                  AND sfdb002 = g_sfdb_d_t.sfdb002
                  AND sfdb003 = g_sfdb_d_t.sfdb003
                  AND sfdb004 = g_sfdb_d_t.sfdb004
                  AND sfdb005 = g_sfdb_d_t.sfdb005
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "sfdb_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_sfdb_d[l_ac].* = g_sfdb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "sfdb_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_sfdb_d[l_ac].* = g_sfdb_d_t.*
                     CALL s_transaction_end('N','0')
                  #OTHERWISE
                  #   INITIALIZE gs_keys TO NULL
                  #   LET gs_keys[1] = g_sfda_m.sfdadocno
                  #   LET gs_keys_bak[1] = g_sfdadocno_t
                  #   LET gs_keys[2] = g_sfdb_d[g_detail_idx].sfdb001
                  #   LET gs_keys_bak[2] = g_sfdb_d_t.sfdb001
                  #   LET gs_keys[3] = g_sfdb_d[g_detail_idx].sfdb002
                  #   LET gs_keys_bak[3] = g_sfdb_d_t.sfdb002
                  #   LET gs_keys[4] = g_sfdb_d[g_detail_idx].sfdb003
                  #   LET gs_keys_bak[4] = g_sfdb_d_t.sfdb003
                  #   LET gs_keys[5] = g_sfdb_d[g_detail_idx].sfdb004
                  #   LET gs_keys_bak[5] = g_sfdb_d_t.sfdb004
                  #   LET gs_keys[6] = g_sfdb_d[g_detail_idx].sfdb005
                  #   LET gs_keys_bak[6] = g_sfdb_d_t.sfdb005
                  #   CALL asft310_update_b('sfdb_t',gs_keys,gs_keys_bak,"'1'")
                  #   #資料多語言用-增/改
               END CASE
            END IF

         AFTER ROW
            CALL asft310_unlock_b("sfdb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock


         AFTER INPUT
            SELECT COUNT(*) INTO l_cnt1 FROM sfdb_t  #套数单身笔数
             WHERE sfdbent  = g_enterprise
               AND sfdbdocno= g_sfda_m.sfdadocno
            SELECT COUNT(*) INTO l_cnt2 FROM sfdc_t  #需求单身笔数
             WHERE sfdcent  = g_enterprise
               AND sfdcdocno= g_sfda_m.sfdadocno
            ##成套发、成套退、欠料补料发、制程委外发退，必须打套数
            #IF g_sfda_m.sfda002 = '11' OR g_sfda_m.sfda002 = '13' OR g_sfda_m.sfda002 = '21'
            #OR g_sfda_m.sfda002 = '15' OR g_sfda_m.sfda002 = '25' THEN
            #   IF l_cnt1 = 0 THEN   #套数单身笔数
            #      #当前发/退料类别，套数单身必须维护数据;请维护套数单身数据，或确认单头发退料类别是否正确！
            #      INITIALIZE g_errparam TO NULL
            #      LET g_errparam.code = 'asf-00331'
            #      LET g_errparam.extend = ''
            #      LET g_errparam.popup = TRUE
            #      CALL cl_err()
            #      NEXT FIELD sfdb001
            #   END IF
            #END IF
            #超领发12和超领退22可以打套数，也可以不打套数，打了套数则需要开asft310_01
            #成套发11、成套退21、欠料补料发13，必须打套数,需要开asft310_01
            #制程委外发退15,25，必须打套数，不需要开asft310_01
            #其他类型的发退料单14,23,24，用不到套数页签，套数页签隐藏，不需要打开asft310_01
            IF g_sfda_m.sfda002 = '11' OR g_sfda_m.sfda002 = '13' OR g_sfda_m.sfda002 = '21'
            OR g_sfda_m.sfda002 = '12' OR g_sfda_m.sfda002 = '22' THEN
               IF l_cnt1 >0 AND l_cnt2 = 0 THEN    #套数单身笔数,需求单身笔数 #没产生过才自动跳出来，否则总跳烦
                  IF asft310_01_cre_tmp_table() THEN
                     CALL s_transaction_begin()
                     CALL asft310_01(g_sfda_m.sfdadocno)
                        RETURNING l_success
                     IF l_success = TRUE THEN
                        CALL s_transaction_end('Y','0')
                     ELSE
                        CALL s_transaction_end('N','0')
                     END IF
                     CALL asft310_01_drop_tmp_table()
                  END IF
               END IF
            END IF

         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_sfdb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_sfdb_d.getLength()+1

         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG

      END INPUT

      INPUT ARRAY g_sfdc_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效!

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)

         #自訂ACTION(detail_input,page_2)



         #发/退料需求产生
         ON ACTION gen_sfdc
            #LET g_action_choice="gen_sfdc"
            IF g_sfda_m.sfda002 != '11' AND g_sfda_m.sfda002 != '13' AND g_sfda_m.sfda002 != '21' AND g_sfda_m.sfda002 != '12' AND g_sfda_m.sfda002 != '22' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'asf-00169'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD CURRENT
            END IF

            SELECT COUNT(*) INTO l_cnt FROM sfdb_t
             WHERE sfdbent  = g_enterprise
               AND sfdbdocno= g_sfda_m.sfdadocno
            IF l_cnt = 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'asf-00170'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD CURRENT
            END IF

            IF cl_auth_chk_act("gen_sfdc") THEN
               #add-point:ON ACTION gen_sfdc
               CALL s_transaction_end('N','0')
               IF asft310_01_cre_tmp_table() THEN
                  CALL s_transaction_begin()
                  CALL asft310_01(g_sfda_m.sfdadocno)
                     RETURNING l_success
                  IF l_success = TRUE THEN
                     CALL s_transaction_end('Y','0')
                  ELSE
                     CALL s_transaction_end('N','0')
                  END IF
                  CALL asft310_01_drop_tmp_table()
               END IF
               LET l_flag = 'c'
               LET l_ac = 1
               CONTINUE WHILE
               #END add-point
            END IF

         BEFORE INPUT
            IF g_sfda_m.sfdastus = 'Y' THEN #已审核的不能修改
               #单据已审核，只可修改发料明细或料号汇总页签
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'asf-00301'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               LET l_flag = 'f'
               CONTINUE WHILE
            END IF
            #成套发、成套退、欠料补料发、制程委外发退，必须打套数
            IF g_sfda_m.sfda002 = '11' OR g_sfda_m.sfda002 = '13' OR g_sfda_m.sfda002 = '21'
            OR g_sfda_m.sfda002 = '15' OR g_sfda_m.sfda002 = '25' THEN
               SELECT COUNT(*) INTO l_cnt1 FROM sfdb_t  #套数单身笔数
                WHERE sfdbent  = g_enterprise
                  AND sfdbdocno= g_sfda_m.sfdadocno
               IF l_cnt1 = 0 THEN   #套数单身笔数
                  #当前发/退料类别，套数单身必须维护数据;请维护套数单身数据，或确认单头发退料类别是否正确！
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'asf-00331'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD sfdb001
               END IF
            END IF
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN
               CALL FGL_SET_ARR_CURR(g_sfdc_d.getLength()+1)
               LET g_insert = 'N'
            END IF

            CALL asft310_b_fill()
            LET g_rec_b = g_sfdc_d.getLength()
            #add-point:資料輸入前
            #由發料單別參數"發料理由碼不可空白"控制理由碼是不是一定要輸入
            CALL cl_set_comp_required("sfdc015",FALSE)
            #参数D-MFG-0032：發料理由碼是否可空白
            CALL s_aooi200_get_slip(g_sfda_m.sfdadocno) RETURNING l_success,g_ooba002
            CALL cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0032') RETURNING g_para
            IF g_para = 'N' THEN  #不可空白
               CALL cl_set_comp_required("sfdc015",TRUE)
            END IF
            
            #发料需求产生按钮隐藏显示gen_sfdc
            #只有11,12,13,21,22才允许点击“发退料需求产生”按钮。在其他作业中，把这个按钮进行隐藏
            CALL cl_set_act_visible_toolbaritem("gen_sfdc",TRUE)
            IF g_sfda_m.sfda002 != '11' AND g_sfda_m.sfda002 != '13' AND g_sfda_m.sfda002 != '21'
            AND g_sfda_m.sfda002 != '12' AND g_sfda_m.sfda002 != '22' THEN
               CALL cl_set_act_visible_toolbaritem("gen_sfdc",FALSE)
            END IF
            #end add-point

         BEFORE INSERT
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_sfdc_d[l_ac].* TO NULL
            LET g_sfdc_d_t.* = g_sfdc_d[l_ac].*     #新輸入資料
            LET g_sfdc_d_o.* = g_sfdc_d[l_ac].*     #新輸入資料
            LET g_sfdc_d[l_ac].sfdc008 = "0"
            LET g_sfdc_d[l_ac].sfdc011 = "0"
            CALL cl_show_fld_cont()
            #CALL asft310_set_entry_b_sfdc(l_cmd)
            #CALL asft310_set_no_entry_b_sfdc(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_sfdc_d[li_reproduce_target].* = g_sfdc_d[li_reproduce].*
               LET g_sfdc4_d[li_reproduce_target].* = g_sfdc4_d[li_reproduce].*
               LET g_sfdc_d[li_reproduce_target].sfdcseq = NULL
            END IF

            SELECT MAX(sfdcseq) INTO g_sfdc_d[l_ac].sfdcseq  #项次
              FROM sfdc_t
             WHERE sfdcent = g_enterprise
               AND sfdcsite= g_site
               AND sfdcdocno=g_sfda_m.sfdadocno
            IF g_sfdc_d[l_ac].sfdcseq IS NULL THEN
               LET g_sfdc_d[l_ac].sfdcseq = 0
            END IF
            LET g_sfdc_d[l_ac].sfdcseq = g_sfdc_d[l_ac].sfdcseq + 1
            IF g_prog[1,6]='asft31' THEN
               LET g_sfdc_d[l_ac].sfdc017 = -1  #正负 发料-1
            END IF
            IF g_prog[1,6]='asft32' THEN
               LET g_sfdc_d[l_ac].sfdc017 =  1  #正负 退料1
            END IF
            CALL asft310_set_entry_b_sfdc(l_cmd)
            CALL asft310_set_no_entry_b_sfdc(l_cmd)

         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            CALL asft310_b_fill2('6')

            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx

            CALL s_transaction_begin()
            OPEN asft310_cl USING g_enterprise,g_sfda_m.sfdadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN asft310_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()
               CLOSE asft310_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            #FETCH asft310_cl INTO g_sfda_m.sfdadocno,g_sfda_m.oobal004,g_sfda_m.sfdadocdt,g_sfda_m.sfda001,
            #    g_sfda_m.sfda002,g_sfda_m.sfda003,g_sfda_m.sfda003_desc,g_sfda_m.sfda004,g_sfda_m.sfda004_desc,
            #    g_sfda_m.sfda005,g_sfda_m.sfda015,g_sfda_m.sfda014,g_sfda_m.sfdastus,g_sfda_m.sfdaownid,g_sfda_m.sfdaownid_desc,g_sfda_m.sfdaowndp,
            #    g_sfda_m.sfdaowndp_desc,g_sfda_m.sfdacrtid,g_sfda_m.sfdacrtid_desc,g_sfda_m.sfdacrtdp,
            #    g_sfda_m.sfdacrtdp_desc,g_sfda_m.sfdacrtdt,g_sfda_m.sfdamodid,g_sfda_m.sfdamodid_desc,
            #    g_sfda_m.sfdamoddt,g_sfda_m.sfdacnfid,g_sfda_m.sfdacnfid_desc,g_sfda_m.sfdacnfdt,g_sfda_m.sfdapstid,
            #    g_sfda_m.sfdapstid_desc,g_sfda_m.sfdapstdt #鎖住將被更改或取消的資料
            #IF SQLCA.sqlcode THEN
            #   #CALL cl_err(g_sfda_m.sfdadocno,SQLCA.sqlcode,0)
            #   INITIALIZE g_errparam TO NULL
            #   LET g_errparam.code =  SQLCA.sqlcode
            #   LET g_errparam.extend = g_sfda_m.sfdadocno
            #   LET g_errparam.popup = FALSE
            #   CALL cl_err()
            #   CLOSE asft310_cl
            #   CALL s_transaction_end('N','0')
            #   RETURN
            #END IF

            LET g_rec_b = g_sfdc_d.getLength()

            IF g_rec_b >= l_ac
               AND g_sfdc_d[l_ac].sfdcseq IS NOT NULL
            THEN
               LET l_cmd='u'
               LET g_sfdc_d_t.* = g_sfdc_d[l_ac].*  #BACKUP
               LET g_sfdc_d_o.* = g_sfdc_d[l_ac].*  #BACKUP
               #add
               SELECT * INTO l_sfdc_t.* FROM sfdc_t
                WHERE sfdcent   = g_enterprise
                  AND sfdcdocno = g_sfda_m.sfdadocno
                  AND sfdcseq   = g_sfdc_d_t.sfdcseq
               #add--ent
               #CALL asft310_set_entry_b_sfdc(l_cmd)
               #CALL asft310_set_no_entry_b_sfdc(l_cmd)
               IF NOT asft310_lock_b("sfdc_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH asft310_bcl2 INTO g_sfdc_d[l_ac].sfdcseq,g_sfdc_d[l_ac].sfdc001,g_sfdc_d[l_ac].sfdc002,
                      g_sfdc_d[l_ac].sfdc003,g_sfdc_d[l_ac].sfba002,g_sfdc_d[l_ac].sfba002_desc,g_sfdc_d[l_ac].sfba003,
                      g_sfdc_d[l_ac].sfba003_desc,g_sfdc_d[l_ac].sfba004,g_sfdc_d[l_ac].replace,g_sfdc_d[l_ac].sfdc004,
                      g_sfdc_d[l_ac].sfdc004_desc,g_sfdc_d[l_ac].sfdc004_desc2,g_sfdc_d[l_ac].sfdc005,g_sfdc_d[l_ac].sfdc005_desc,
                      g_sfdc_d[l_ac].imaf034,g_sfdc_d[l_ac].imae092,g_sfdc_d[l_ac].sfba028,g_sfdc_d[l_ac].sfdc006,
                      g_sfdc_d[l_ac].sfdc006_desc,g_sfdc_d[l_ac].sfba013,g_sfdc_d[l_ac].sfba016,g_sfdc_d[l_ac].sfdc007,
                      g_sfdc_d[l_ac].sfdc008,g_sfdc_d[l_ac].diff,g_sfdc_d[l_ac].sfdc009,g_sfdc_d[l_ac].sfdc009_desc,
                      g_sfdc_d[l_ac].sfdc010,g_sfdc_d[l_ac].sfdc011,g_sfdc_d[l_ac].diff2,g_sfdc_d[l_ac].sfdc012,
                      g_sfdc_d[l_ac].sfdc012_desc,g_sfdc_d[l_ac].sfdc013,g_sfdc_d[l_ac].sfdc013_desc,
                      g_sfdc_d[l_ac].sfdc014,g_sfdc_d[l_ac].sfdc016,g_sfdc_d[l_ac].sfdc015,g_sfdc_d[l_ac].sfdc015_desc,
                      g_sfdc_d[l_ac].sfdc017
                   IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF

                  #mod 150121
                  #LET g_bfill = "N"
                  #CALL asft310_show()
                  #LET g_bfill = "Y"
                  CALL asft310_b_show('sfdc',l_ac)
                  #mod 150121 end

                  CALL cl_show_fld_cont()
               END IF
               CALL asft310_set_entry_b_sfdc(l_cmd)
               CALL asft310_set_no_entry_b_sfdc(l_cmd)
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row

            #end add-point
            #其他table資料備份(確定是否更改用)

            #其他table進行lock


         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_sfdc_d.deleteElement(l_ac)
               NEXT FIELD sfdcseq
            END IF

            IF g_sfdc_d_t.sfdcseq IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CANCEL DELETE
               END IF

               LET l_success_tot = TRUE
               
               #sfde,sfdf
               CALL s_asft310_chg_sfde_f_sfdc_del(l_sfdc_t.*) RETURNING l_success
               IF NOT l_success THEN
                  LET l_success_tot = FALSE
               END IF
               
               #sfdd
               CALL s_asft310_chg_sfdd_f_sfdc_del(g_sfda_m.sfdadocno,g_sfdc_d_t.sfdcseq) RETURNING l_success
               IF NOT l_success THEN
                  LET l_success_tot = FALSE
               END IF
               
               DELETE FROM sfdc_t
                WHERE sfdcent  = g_enterprise
                  AND sfdcdocno= g_sfda_m.sfdadocno
                  AND sfdcseq  = g_sfdc_d_t.sfdcseq
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "sfdb_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET l_success_tot = FALSE
               END IF
               
               #add 141222
               DELETE FROM ooff_t
                WHERE ooffent = g_enterprise
                  AND ooff001 = '7'
                  AND ooff002 = g_sfda_m.sfdadocno
                  AND ooff003 = g_sfdc_d_t.sfdcseq
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "DELETE ooff_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET l_success_tot = FALSE
               END IF
               #add 141222 end
               
               IF NOT l_success_tot THEN
                  CALL s_transaction_end('N','0')  #需要有事务，如果没有事务，直接cancel delete ，回到单身状态就不在事务中了
                  #CANCEL DELETE
                  LET l_flag = 'c'   #取消cancel的做法，本次事务回滚，重新走INPUT进入，回到当前笔状态
                  CLOSE asft310_bcl2 #重新进入单身需要先关闭游标
                  CONTINUE WHILE
               ELSE
                  LET g_rec_b = g_rec_b-1
                  CALL s_transaction_end('Y','0')
               END IF  
                  
               CLOSE asft310_bcl2
               LET l_count = g_sfdb_d.getLength()
            END IF
            #INITIALIZE gs_keys TO NULL
            #LET gs_keys[1] = g_sfda_m.sfdadocno
            #LET gs_keys[2] = g_sfdc_d[g_detail_idx].sfdcseq

         AFTER DELETE
            #IF asft310_delete_b('sfdc_t',gs_keys,"'2'") THEN
            #END IF

         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF

            LET l_count = 1
            SELECT COUNT(*) INTO l_count FROM sfdc_t
             WHERE sfdcent = g_enterprise AND sfdcsite = g_site AND sfdcdocno = g_sfda_m.sfdadocno
               AND sfdcseq = g_sfdc_d[l_ac].sfdcseq
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN
               INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_sfda_m.sfdadocno
               LET gs_keys[2] = g_sfdc_d[g_detail_idx].sfdcseq
               CALL asft310_insert_b('sfdc_t',gs_keys,"'2'")
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()
               INITIALIZE g_sfdb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF

            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "sfdc_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL asft310_b_fill()
               #資料多語言用-增/改

               #add-point:單身新增後
               LET l_success_tot = TRUE
               #同步新增sfdd
               CALL s_asft310_chg_sfdd_f_sfdc_ins(g_sfda_m.sfdadocno, g_sfdc_d[l_ac].sfdcseq) RETURNING l_success
               IF NOT l_success THEN
                  LET l_success_tot = FALSE
               END IF
               #新增或更新sfde('Y'代表新增或更新sfdf)
               CALL s_asft310_chg_sfde_f_sfdc_ins(g_sfda_m.sfdadocno, g_sfdc_d[l_ac].sfdcseq,'Y') RETURNING l_success
               IF NOT l_success THEN
                  LET l_success_tot = FALSE
               END IF
               
               #add 141222 
               #处理备注 
               IF NOT cl_null(g_sfdc_d[l_ac].sfdc_ooff013) THEN
                  CALL s_aooi360_gen('7',g_sfda_m.sfdadocno,g_sfdc_d[l_ac].sfdcseq,' ',' ',' ',' ',' ',' ',' ',' ','4',g_sfdc_d[l_ac].sfdc_ooff013)
                     RETURNING l_success
                  IF NOT l_success  THEN
                     LET l_success_tot = FALSE
                  END IF
               END IF
               #add 141222 end
               
               IF NOT l_success_tot THEN
                  CALL s_transaction_end('N','0')
                  CANCEL INSERT
                  #cancel insert了就不往下走了，都则就需要写LET g_rec_b = g_rec_b - 1来补救
               END IF
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF

         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_sfdc_d[l_ac].* = g_sfdc_d_t.*
               CLOSE asft310_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               LET g_sfdc_d[l_ac].* = g_sfdc_d_t.*
            ELSE
               #寫入修改者/修改日期資訊(單身2)
               IF cl_null(g_sfdc_d[l_ac].sfdc005) THEN LET g_sfdc_d[l_ac].sfdc005 = ' ' END IF #产品特征
               IF cl_null(g_sfdc_d[l_ac].sfdc012) THEN LET g_sfdc_d[l_ac].sfdc012 = ' ' END IF
               IF cl_null(g_sfdc_d[l_ac].sfdc013) THEN LET g_sfdc_d[l_ac].sfdc013 = ' ' END IF
               IF cl_null(g_sfdc_d[l_ac].sfdc014) THEN LET g_sfdc_d[l_ac].sfdc014 = ' ' END IF
               IF cl_null(g_sfdc_d[l_ac].sfdc016) THEN LET g_sfdc_d[l_ac].sfdc016 = ' ' END IF
               IF cl_null(g_sfdc_d[l_ac].sfdc010) THEN LET g_sfdc_d[l_ac].sfdc010 = 0 END IF #参考单位需求数量
               IF cl_null(g_sfdc_d[l_ac].sfdc011) THEN LET g_sfdc_d[l_ac].sfdc011 = 0 END IF #参考单位实际数量 
               #150115 add 单位取位
               CALL s_aooi250_get_msg(g_sfdc_d[l_ac].sfdc006) RETURNING l_success,g_ooca002,g_ooca004
               IF l_success THEN
                  CALL s_num_round(g_ooca004,g_sfdc_d[l_ac].sfdc007,g_ooca002) RETURNING g_sfdc_d[l_ac].sfdc007
                  CALL s_num_round(g_ooca004,g_sfdc_d[l_ac].sfdc008,g_ooca002) RETURNING g_sfdc_d[l_ac].sfdc008
               END IF
               IF NOT cl_null(g_sfdc_d[l_ac].sfdc009) THEN
                  CALL s_aooi250_get_msg(g_sfdc_d[l_ac].sfdc009) RETURNING l_success,g_ooca002,g_ooca004
                  IF l_success THEN
                     CALL s_num_round(g_ooca004,g_sfdc_d[l_ac].sfdc010,g_ooca002) RETURNING g_sfdc_d[l_ac].sfdc010
                     CALL s_num_round(g_ooca004,g_sfdc_d[l_ac].sfdc011,g_ooca002) RETURNING g_sfdc_d[l_ac].sfdc011
                  END IF
               END IF
               #150115 add end
               UPDATE sfdc_t SET (sfdcdocno,sfdcseq,sfdc001,sfdc002,sfdc003,sfdc004,sfdc005,sfdc006,
                   sfdc007,sfdc008,sfdc009,sfdc010,sfdc011,sfdc012,sfdc013,sfdc014,sfdc016,sfdc015,sfdc017) = (g_sfda_m.sfdadocno,
                   g_sfdc_d[l_ac].sfdcseq,g_sfdc_d[l_ac].sfdc001,g_sfdc_d[l_ac].sfdc002,g_sfdc_d[l_ac].sfdc003,
                   g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc007,
                   g_sfdc_d[l_ac].sfdc008,g_sfdc_d[l_ac].sfdc009,g_sfdc_d[l_ac].sfdc010,g_sfdc_d[l_ac].sfdc011,
                   g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013,g_sfdc_d[l_ac].sfdc014,g_sfdc_d[l_ac].sfdc016,
                   g_sfdc_d[l_ac].sfdc015,g_sfdc_d[l_ac].sfdc017)
                WHERE sfdcent = g_enterprise AND sfdcsite = g_site AND sfdcdocno = g_sfda_m.sfdadocno
                  AND sfdcseq = g_sfdc_d_t.sfdcseq #項次
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "sfdc_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_sfdc_d[l_ac].* = g_sfdc_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "sfdc_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_sfdc_d[l_ac].* = g_sfdc_d_t.*
                  #OTHERWISE
                  #   INITIALIZE gs_keys TO NULL
                  #   LET gs_keys[1] = g_sfda_m.sfdadocno
                  #   LET gs_keys_bak[1] = g_sfdadocno_t
                  #   LET gs_keys[2] = g_sfdc_d[g_detail_idx].sfdcseq
                  #   LET gs_keys_bak[2] = g_sfdc_d_t.sfdcseq
                  #   CALL asft310_update_b('sfdc_t',gs_keys,gs_keys_bak,"'2'")
                  #   #資料多語言用-增/改
               END CASE
               #add-point:單身page2修改後
               #关联表处理
               #當有修改工單單號、項次、項序、申請數量、參考單位申請數量、指定庫、儲、批號、庫存管理特徵時
               IF g_intrans = 'Y' THEN  #若事务还没走rollback则(上面没有走commit)
                  LET l_success_tot = TRUE
                  
                  SELECT * INTO l_sfdc.* FROM sfdc_t
                   WHERE sfdcent   = g_enterprise
                     AND sfdcdocno = g_sfda_m.sfdadocno
                     AND sfdcseq   = g_sfdc_d[l_ac].sfdcseq
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = 'sel sfdc'
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET l_success_tot = FALSE
                  END IF
                  #处理sfdd,sfdf,sfde
                  CALL s_asft310_chg_sfdd_f_sfdc_upd(l_sfdc_t.*,l_sfdc.*) RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
                  #add 141222
                  #ooff资料
                  IF NOT cl_null(g_sfdc_d[l_ac].sfdc_ooff013) THEN
                     CALL s_aooi360_gen('7',g_sfda_m.sfdadocno,g_sfdc_d[l_ac].sfdcseq,' ',' ',' ',' ',' ',' ',' ',' ','4',g_sfdc_d[l_ac].sfdc_ooff013)
                        RETURNING l_success
                  ELSE
                     CALL s_aooi360_del('7',g_sfda_m.sfdadocno,g_sfdc_d[l_ac].sfdcseq,' ',' ',' ',' ',' ',' ',' ',' ','4')
                        RETURNING l_success
                  END IF
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
                  #若key值变化
                  CALL asft310_update_ooff_key("c") RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
                  #add 141222 end
                  IF NOT l_success_tot THEN
                     CALL s_transaction_end('N','0')
                     LET g_sfdc_d[l_ac].* = g_sfdc_d_t.*
                  END IF
               END IF
               #end add-point
            END IF

         AFTER FIELD sfdcseq
         #项次
            IF g_sfda_m.sfdadocno IS NOT NULL AND g_sfdc_d[g_detail_idx].sfdcseq IS NOT NULL THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t OR g_sfdc_d[g_detail_idx].sfdcseq != g_sfdc_d_t.sfdcseq)) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfdc_t WHERE "||"sfdcent = '" ||g_enterprise|| "' AND sfdcsite = '" ||g_site|| "' AND "||"sfdcdocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "sfdcseq = '"||g_sfdc_d[g_detail_idx].sfdcseq ||"'",'std-00004',0) THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_sfdc_d[l_ac].sfdcseq) THEN
               IF g_sfdc_d[l_ac].sfdcseq < 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00002'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET g_sfdc_d[l_ac].sfdcseq = g_sfdc_d_t.sfdcseq
            END IF
            
            LET g_sfdc_d_o.sfdcseq = g_sfdc_d[l_ac].sfdcseq
            
         BEFORE FIELD sfdc001
            #CALL asft310_set_entry_b_sfdc(l_cmd)

         AFTER FIELD sfdc001
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc001) THEN
               #检查是否存在工单中，且为发放状态
               IF NOT s_asft300_chk_stus(g_sfdc_d[l_ac].sfdc001,'F') THEN
                  NEXT FIELD CURRENT
               END IF
               #add 150304
               #检查工单的开单日期是否大于等于发退料的单据日期
               SELECT sfaadocdt INTO l_sfaadocdt FROM sfaa_t
                WHERE sfaaent   = g_enterprise
                  AND sfaadocno = g_sfdc_d[l_ac].sfdc001
               IF l_sfaadocdt > g_sfda_m.sfdadocdt THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'asf-00675'
                  LET g_errparam.extend = l_sfaadocdt
                  LET g_errparam.popup = FALSE
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               #add 150304 end
               IF g_sfda_m.sfda002='11' OR g_sfda_m.sfda002='13' OR g_sfda_m.sfda002='21' THEN
                  #检查工单需存在发料套数单身
                  SELECT COUNT(*) INTO l_cnt FROM sfdb_t
                   WHERE sfdbent = g_enterprise
                     AND sfdbsite= g_site
                     AND sfdbdocno=g_sfda_m.sfdadocno
                     AND sfdb001 = g_sfdc_d[l_ac].sfdc001
                  IF l_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00043'
                     LET g_errparam.extend = g_sfdc_d[l_ac].sfdc001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF NOT cl_null(g_sfdc_d[l_ac].sfdc002) AND NOT cl_null(g_sfdc_d[l_ac].sfdc003) THEN
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdc_d[l_ac].sfdc001 != g_sfdc_d_t.sfdc001)) THEN
                     CALL asft310_sfdc003_reference(l_cmd) RETURNING l_success
                     IF NOT l_success THEN
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF

            CALL asft310_set_entry_b_sfdc(l_cmd)
            CALL asft310_set_no_entry_b_sfdc(l_cmd) 

            LET g_sfdc_d_o.sfdc001 = g_sfdc_d[l_ac].sfdc001

         BEFORE FIELD sfdc002
            #CALL asft310_set_entry_b_sfdc(l_cmd)

         AFTER FIELD sfdc002
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc002) THEN
               IF NOT cl_null(g_sfdc_d[l_ac].sfdc001) THEN
                  #可超領工單未指定間接材料
                  CALL s_aooi200_get_slip(g_sfda_m.sfdadocno) RETURNING l_success,g_ooba002
                  CALL cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0071') RETURNING g_para
                  IF g_sfda_m.sfda002!='12' OR (g_sfda_m.sfda002='12' AND g_para='N') THEN
                     #工单号号+项次需存在工单项次中
                     SELECT COUNT(*) INTO l_cnt FROM sfba_t
                      WHERE sfbaent = g_enterprise
                        AND sfbadocno=g_sfdc_d[l_ac].sfdc001
                        AND sfbaseq = g_sfdc_d[l_ac].sfdc002
                     IF l_cnt = 0 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'asf-00044'
                        LET g_errparam.extend = g_sfdc_d[l_ac].sfdc001
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        NEXT FIELD CURRENT
                     END IF
                  ELSE #g_sfda_m.sfda002='12' AND g_para='Y'
                     #工单号号+项次若不存在于工单项次中，则需判断未被其他发料单占用
                     SELECT COUNT(*) INTO l_cnt FROM sfba_t
                      WHERE sfbaent = g_enterprise
                        AND sfbadocno=g_sfdc_d[l_ac].sfdc001
                        AND sfbaseq = g_sfdc_d[l_ac].sfdc002
                     IF l_cnt = 0 THEN
                        SELECT COUNT(*) INTO l_cnt FROM sfdc_t
                         WHERE sfdcent   = g_enterprise
                           AND sfdcdocno!= g_sfda_m.sfdadocno
                           AND sfdc001   = g_sfdc_d[l_ac].sfdc001
                           AND sfdc002   = g_sfdc_d[l_ac].sfdc002
                        IF l_cnt > 0 THEN
                           #此工单项次已被其他发料单占用，本单据不可使用
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = 'asf-00393'
                           LET g_errparam.extend = ''
                           LET g_errparam.popup = TRUE
                           CALL cl_err()
                           NEXT FIELD CURRENT
                        END IF
                        LET g_sfdc_d[l_ac].sfdc003 = 0  #项序=0
                     END IF
                  END IF
               END IF
               IF NOT cl_null(g_sfdc_d[l_ac].sfdc001) AND NOT cl_null(g_sfdc_d[l_ac].sfdc003) THEN
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdc_d[l_ac].sfdc002 != g_sfdc_d_t.sfdc002)) THEN
                     CALL asft310_sfdc003_reference(l_cmd) RETURNING l_success
                     IF NOT l_success THEN
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF

            CALL asft310_set_entry_b_sfdc(l_cmd)
            CALL asft310_set_no_entry_b_sfdc(l_cmd) 

            LET g_sfdc_d_o.sfdc002 = g_sfdc_d[l_ac].sfdc002

         BEFORE FIELD sfdc003
            #工单单号+项次若只有一个项序时，自动带出
            IF cl_null(g_sfdc_d[l_ac].sfdc003) THEN
               SELECT COUNT(*) INTO l_cnt FROM sfba_t
                WHERE sfbaent = g_enterprise
                  AND sfbadocno=g_sfdc_d[l_ac].sfdc001
                  AND sfbaseq = g_sfdc_d[l_ac].sfdc002
               IF l_cnt = 1 THEN
                  SELECT sfbaseq1 INTO g_sfdc_d[l_ac].sfdc003 FROM sfba_t
                      WHERE sfbaent = g_enterprise
                        AND sfbadocno=g_sfdc_d[l_ac].sfdc001
                        AND sfbaseq = g_sfdc_d[l_ac].sfdc002
               END IF
            END IF

            #CALL asft310_set_entry_b_sfdc(l_cmd)  #mark 12超领类型空值sfdc003可输入性是，回车能控制住，鼠标控制不住
            
         AFTER FIELD sfdc003
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc003) THEN
               IF NOT cl_null(g_sfdc_d[l_ac].sfdc001) AND NOT cl_null(g_sfdc_d[l_ac].sfdc002) THEN
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdc_d[l_ac].sfdc003 != g_sfdc_d_t.sfdc003)) THEN
                     CALL asft310_sfdc003_reference(l_cmd) RETURNING l_success
                     IF NOT l_success THEN
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF

            CALL asft310_set_entry_b_sfdc(l_cmd)
            CALL asft310_set_no_entry_b_sfdc(l_cmd)  

            LET g_sfdc_d_o.sfdc003 = g_sfdc_d[l_ac].sfdc003
         
         AFTER FIELD sfdc004  #需求料号
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc004) THEN
               #可超領工單未指定間接材料
               CALL s_aooi200_get_slip(g_sfda_m.sfdadocno) RETURNING l_success,g_ooba002
               CALL cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0071') RETURNING g_para
               IF g_sfda_m.sfda002='12' AND g_para='Y' THEN
                  #工单号号+项次若不存在于工单项次中，则需判断料件为间接材料
                  SELECT COUNT(*) INTO l_cnt FROM sfba_t
                   WHERE sfbaent = g_enterprise
                     AND sfbadocno=g_sfdc_d[l_ac].sfdc001
                     AND sfbaseq = g_sfdc_d[l_ac].sfdc002
                  IF l_cnt = 0 THEN
                     #在超領工單領工單不存在的料件，在申請頁籤可以輸入"間接材料"(imae023)='3'
                     SELECT imae023 INTO l_imae023 FROM imae_t
                      WHERE imaeent = g_enterprise
                        AND imaesite= g_site
                        AND imae001 = g_sfdc_d[l_ac].sfdc004
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = g_sfdc_d[l_ac].sfdc004
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        NEXT FIELD CURRENT
                     END IF
                     IF cl_null(l_imae023) OR l_imae023 != '3' THEN
                        #此料件非间接材料，不可直接超领
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'asf-00392'
                        LET g_errparam.extend = g_sfdc_d[l_ac].sfdc004
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        NEXT FIELD CURRENT
                     END IF
                     
                     #檢核輸入的料件的生命週期是否在單據別限制範圍內
                     CALL s_control_chk_doc('4',g_sfda_m.sfdadocno,g_sfdc_d[l_ac].sfdc004,'','','','')
                        RETURNING l_success,l_flag2    #处理状态否 存在否     都是num5类型
                     IF NOT l_success OR NOT l_flag2 THEN
                        #控制组检查错误,请检查单别设定的相关内容
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'asf-00122'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        NEXT FIELD CURRENT
                     END IF
                     
                     #檢核輸入的料件的產品分類是否在單據別限制範圍內
                     CALL s_control_chk_doc('5',g_sfda_m.sfdadocno,g_sfdc_d[l_ac].sfdc004,'','','','')
                        RETURNING l_success,l_flag2    #处理状态否 存在否     都是num5类型
                     IF NOT l_success OR NOT l_flag2 THEN
                        #控制组检查错误,请检查单别设定的相关内容
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'asf-00122'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        NEXT FIELD CURRENT
                     END IF

                     #预设栏位
                     IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdc_d[l_ac].sfdc004 != g_sfdc_d_t.sfdc004)) THEN
                        #需求料号品名规格
                        CALL s_desc_get_item_desc(g_sfdc_d[l_ac].sfdc004) RETURNING g_sfdc_d[l_ac].sfdc004_desc,g_sfdc_d[l_ac].sfdc004_desc2
                        DISPLAY BY NAME g_sfdc_d[l_ac].sfdc004_desc
                        DISPLAY BY NAME g_sfdc_d[l_ac].sfdc004_desc2
                        #显示产品特征说明
                        CALL s_feature_description(g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005)
                           RETURNING l_success,g_sfdc_d[l_ac].sfdc005_desc
                        IF NOT l_success THEN
                           LET g_sfdc_d[l_ac].sfdc005_desc = ''
                        END IF
                        DISPLAY BY NAME g_sfdc_d[l_ac].sfdc005_desc
                        #sfdc006单位
                        SELECT imae081 INTO g_sfdc_d[l_ac].sfdc006 FROM imae_t
                         WHERE imaeent=g_enterprise AND imaesite=g_site AND imae001=g_sfdc_d[l_ac].sfdc004
                        IF cl_null(g_sfdc_d[l_ac].sfdc006) THEN
                           SELECT imaa006 INTO g_sfdc_d[l_ac].sfdc006 FROM imaa_t
                            WHERE imaaent=g_enterprise AND imaa001=g_sfdc_d[l_ac].sfdc004
                        END IF
                        CALL s_desc_get_unit_desc(g_sfdc_d[l_ac].sfdc006) RETURNING g_sfdc_d[l_ac].sfdc006_desc
                        DISPLAY BY NAME g_sfdc_d[l_ac].sfdc006_desc
                        #sfdc009 参考单位,保税料
                        SELECT imaf015,imaf034 INTO g_sfdc_d[l_ac].sfdc009,g_sfdc_d[l_ac].imaf034 FROM imaf_t
                         WHERE imafent=g_enterprise AND imafsite=g_site AND imaf001=g_sfdc_d[l_ac].sfdc004
                        IF NOT cl_null(g_sfdc_d[l_ac].sfdc009) THEN
                           CALL s_desc_get_unit_desc(g_sfdc_d[l_ac].sfdc009) RETURNING g_sfdc_d[l_ac].sfdc009_desc
                           DISPLAY BY NAME g_sfdc_d[l_ac].sfdc009_desc
                        END IF
                        #发料前调拨
                        SELECT imae092 INTO g_sfdc_d[l_ac].imae092 FROM imae_t
                         WHERE imaeent = g_enterprise
                           AND imaesite= g_site
                           AND imae001 = g_sfdc_d[l_ac].sfdc004
                        DISPLAY BY NAME g_sfdc_d[l_ac].imae092

                        #replace取替代建议
                        CALL s_abmm201_get_proposal(g_site,'','',g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfba002,g_sfdc_d[l_ac].sfba003,g_sfdc_d[l_ac].sfba004) RETURNING g_sfdc_d[l_ac].replace
                        DISPLAY BY NAME g_sfdc_d[l_ac].replace

                     END IF
                     
                     #检查产品特征
                     IF NOT cl_null(g_sfdc_d[l_ac].sfdc005) THEN
                        IF NOT s_feature_check(g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005) THEN
                           NEXT FIELD sfdc005
                        END IF
                     END IF
                     
                  END IF
                  
               END IF
            END IF
            
            CALL asft310_set_entry_b_sfdc(l_cmd)
            CALL asft310_set_no_entry_b_sfdc(l_cmd)  

            LET g_sfdc_d_o.sfdc004 = g_sfdc_d[l_ac].sfdc004
         
         BEFORE FIELD sfdc005  #产品特征
            IF cl_null(g_sfdc_d[l_ac].sfdc001) OR cl_null(g_sfdc_d[l_ac].sfdc002) OR cl_null(g_sfdc_d[l_ac].sfdc003) THEN
               #请先选择工单资料
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'asf-00391'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD sfdc001
            END IF
         
         AFTER FIELD sfdc005   #产品特征
            LET g_sfdc_d[l_ac].sfdc005_desc = ''
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc005) AND NOT cl_null(g_sfdc_d[l_ac].sfdc004) THEN
               #检查产品特征
               IF NOT s_feature_check(g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005) THEN
                  LET g_sfdc_d[l_ac].sfdc005 = g_sfdc_d_t.sfdc005

                  CALL s_feature_description(g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005)
                     RETURNING l_success,g_sfdc_d[l_ac].sfdc005_desc
                  IF NOT l_success THEN
                     LET g_sfdc_d[l_ac].sfdc005_desc = ''
                  END IF
                  DISPLAY BY NAME g_sfdc_d[l_ac].sfdc005_desc
                  NEXT FIELD sfdc005
               END IF
               
               #add 141209 退料单检查
               IF g_prog[1,6]='asft32' THEN
                  #做产品特征管理的料件检查该特征的退料量不可超过已发量
                  CALL asft310_chk_feature2() RETURNING l_success
                  IF NOT l_success THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
               #add 141209 end
               
               #显示产品特征说明
               CALL s_feature_description(g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005)
                  RETURNING l_success,g_sfdc_d[l_ac].sfdc005_desc
               IF NOT l_success THEN
                  LET g_sfdc_d[l_ac].sfdc005_desc = ''
               END IF
            END IF
            DISPLAY BY NAME g_sfdc_d[l_ac].sfdc005_desc
            
            LET g_sfdc_d_o.sfdc005 = g_sfdc_d[l_ac].sfdc005
            
         AFTER FIELD sfdc007
            #申请数量
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc007) THEN
               #不可小于等于0
               IF g_sfdc_d[l_ac].sfdc007 <= 0 THEN
                  #资料不可小于等于0,请检查！请录入大于0的资料
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axc-00025'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add 150115 单位取位
               IF NOT cl_null(g_sfdc_d[l_ac].sfdc006) THEN
                  CALL s_aooi250_get_msg(g_sfdc_d[l_ac].sfdc006) RETURNING l_success,g_ooca002,g_ooca004
                  IF l_success THEN
                     CALL s_num_round(g_ooca004,g_sfdc_d[l_ac].sfdc007,g_ooca002) RETURNING g_sfdc_d[l_ac].sfdc007
                     DISPLAY BY NAME g_sfdc_d[l_ac].sfdc007
                  END IF
               END IF
               #add 150115 end
               
               #mark reason：实际发料数量改成岁申请数量变动而变动
               ##检查是否小于实际发料数量
               #IF g_sfdc_d[l_ac].sfdc007 < g_sfdc_d[l_ac].sfdc008 THEN
               #   #申请数量不可小于实际数量,请先减少实发明细数量再来调整！
               #   #CALL cl_err('','asf-00126',1)
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code = 'asf-00126'
               #   LET g_errparam.extend = ''
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   NEXT FIELD CURRENT
               #END IF
               
               #可超領工單未指定間接材料
               CALL s_aooi200_get_slip(g_sfda_m.sfdadocno) RETURNING l_success,g_ooba002
               CALL cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0071') RETURNING g_para
               IF g_sfda_m.sfda002!='12' OR (g_sfda_m.sfda002='12' AND g_para='N') THEN
                  #检查是否可超过 可发数量
                  IF NOT asft310_chk_sfdc007(l_cmd) THEN
                     NEXT FIELD CURRENT
                  END IF
               ELSE  #g_sfda_m.sfda002='12' AND g_para='Y'
                  #工单号号+项次若不存在于工单项次中，则发料数量不需要控制
                  SELECT COUNT(*) INTO l_cnt FROM sfba_t
                   WHERE sfbaent = g_enterprise
                     AND sfbadocno=g_sfdc_d[l_ac].sfdc001
                     AND sfbaseq = g_sfdc_d[l_ac].sfdc002
                  IF l_cnt > 0 THEN
                     #检查是否可超过 可发数量
                     IF NOT asft310_chk_sfdc007(l_cmd) THEN
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               
               #发料单做在捡量的检查
               IF g_prog[1,6]='asft31' AND NOT cl_null(g_sfdc_d[l_ac].sfdc007) AND NOT cl_null(g_sfdc_d[l_ac].sfdc012) THEN  #在捡数量 库位
                  IF cl_null(g_sfdc_d[l_ac].sfdc016) THEN LET g_sfdc_d[l_ac].sfdc016= ' ' END IF  #库存管理特征
                  IF cl_null(g_sfdc_d[l_ac].sfdc013) THEN LET g_sfdc_d[l_ac].sfdc013= ' ' END IF  #储位
                  IF cl_null(g_sfdc_d[l_ac].sfdc014) THEN LET g_sfdc_d[l_ac].sfdc014= ' ' END IF  #批号
                  #指定庫位、儲位、批號時，判斷參數是否檢查在檢量，如需檢查在檢量，在庫存數-在檢數不足申請數量時不允許輸入
                  #                           据点   料件编号                产品特征                库存管理特征
                  CALL s_inventory_check_inan(g_site,g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005,g_sfdc_d[l_ac].sfdc016,
                  #                           库位                   储位                    批号
                                              g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013,g_sfdc_d[l_ac].sfdc014,
                  #                           交易单位                在捡数量
                                              g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc007,
                  #                           单据编号            项次                   项序
                                              g_sfda_m.sfdadocno,g_sfdc_d[l_ac].sfdcseq,'0')
                       RETURNING l_success,l_flag
                  IF NOT l_flag THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
               #add 141209 退料单检查
               IF g_prog[1,6]='asft32' THEN
                  #做产品特征管理的料件检查该特征的退料量不可超过已发量
                  CALL asft310_chk_feature2() RETURNING l_success
                  IF NOT l_success THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
               #add 141209 end
               
               #更新相关栏位-差异数量
               LET g_sfdc_d[l_ac].diff = g_sfdc_d[l_ac].sfdc007 - g_sfdc_d[l_ac].sfdc008
               #更新相关栏位-参考单位申请数量，参考单位差异数量
               IF NOT cl_null(g_sfdc_d[l_ac].sfdc009) THEN
                  #参考单位申请数量=申请数量经过转换率换算为参考单位的数量
                  #mod 150101
                  #CALL s_aimi190_get_convert(g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc009) RETURNING l_success,l_rate
                  #IF NOT l_success THEN
                  #   LET l_rate = 1
                  #END IF
                  #LET g_sfdc_d[l_ac].sfdc010 = g_sfdc_d[l_ac].sfdc007 * l_rate
                  CALL s_aooi250_convert_qty(g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc009,g_sfdc_d[l_ac].sfdc007)
                     RETURNING l_success,g_sfdc_d[l_ac].sfdc010
                  IF NOT l_success THEN
                     LET g_sfdc_d[l_ac].sfdc010 = g_sfdc_d[l_ac].sfdc007
                  END IF
                  #mod 150101 end
                  LET g_sfdc_d[l_ac].diff2 = g_sfdc_d[l_ac].sfdc010  - g_sfdc_d[l_ac].sfdc011  #参考单位差异数量
               ELSE
                  LET g_sfdc_d[l_ac].sfdc010 = 0
                  LET g_sfdc_d[l_ac].sfdc011 = 0
                  LET g_sfdc_d[l_ac].diff2 = 0  #参考单位差异数量
               END IF
               #更新相关栏位-实际数量，差异数量，参考单位实际数量，参考单位差异数量
               IF cl_null(g_sfdc_d_o.sfdc007) OR g_sfdc_d[l_ac].sfdc007!=g_sfdc_d_o.sfdc007 THEN
                  LET g_sfdc_d[l_ac].sfdc008 = g_sfdc_d[l_ac].sfdc007                          #实际数量
                  LET g_sfdc_d[l_ac].diff = g_sfdc_d[l_ac].sfdc007 - g_sfdc_d[l_ac].sfdc008    #差异数量
                  LET g_sfdc_d[l_ac].sfdc011 = g_sfdc_d[l_ac].sfdc010                          #参考单位实际数量
                  LET g_sfdc_d[l_ac].diff2 = g_sfdc_d[l_ac].sfdc010  - g_sfdc_d[l_ac].sfdc011  #参考单位差异数量
               END IF
            END IF 
            
            LET g_sfdc_d_o.sfdc007 = g_sfdc_d[l_ac].sfdc007

         AFTER FIELD sfdc009
            #参考单位
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc009) THEN
               #校验带值说明
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfdc_d[l_ac].sfdc009
               IF cl_chk_exist_and_ref_val("v_ooca001_1") THEN
                  #檢查成功時後續處理
                  LET g_sfdc_d[l_ac].sfdc009_desc = g_chkparam.return1
                  DISPLAY BY NAME g_sfdc_d[l_ac].sfdc009_desc
               ELSE
                  #檢查失敗時後續處理
                  LET g_sfdc_d[l_ac].sfdc009 = g_sfdc_d_t.sfdc009
                  NEXT FIELD CURRENT
               END IF

               #参考单位申请数量=申请数量经过转换率换算为参考单位的数量
               #mod 150101
               #CALL s_aimi190_get_convert(g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc009) RETURNING l_success,l_rate
               #IF NOT l_success THEN
               #   LET l_rate = 1
               #END IF
               #LET g_sfdc_d[l_ac].sfdc010 = g_sfdc_d[l_ac].sfdc007 * l_rate
               #IF cl_null(g_sfdc_d_t.sfdc007) OR g_sfdc_d[l_ac].sfdc007!=g_sfdc_d_t.sfdc007 THEN
               #   LET g_sfdc_d[l_ac].sfdc011 = g_sfdc_d[l_ac].sfdc008 * l_rate
               #END IF
               CALL s_aooi250_convert_qty(g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc009,g_sfdc_d[l_ac].sfdc007)
                  RETURNING l_success,g_sfdc_d[l_ac].sfdc010
               IF NOT l_success THEN
                  LET g_sfdc_d[l_ac].sfdc010 = g_sfdc_d[l_ac].sfdc007
               END IF
               IF cl_null(g_sfdc_d_t.sfdc007) OR g_sfdc_d[l_ac].sfdc007!=g_sfdc_d_t.sfdc007 THEN
                  CALL s_aooi250_convert_qty(g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc009,g_sfdc_d[l_ac].sfdc008)
                     RETURNING l_success,g_sfdc_d[l_ac].sfdc011
                  IF NOT l_success THEN
                     LET g_sfdc_d[l_ac].sfdc011 = g_sfdc_d[l_ac].sfdc008
                  END IF
               END IF
               #mod 150101 end
               LET g_sfdc_d[l_ac].diff2 = g_sfdc_d[l_ac].sfdc010  - g_sfdc_d[l_ac].sfdc011  #参考单位差异数量
            ELSE
               LET g_sfdc_d[l_ac].sfdc010 = 0
               LET g_sfdc_d[l_ac].sfdc011 = 0
               LET g_sfdc_d[l_ac].diff2 = 0
            END IF 
            LET g_sfdc_d_o.sfdc009 = g_sfdc_d[l_ac].sfdc009

         AFTER FIELD sfdc010
            #参考单位申请数量
            #add 150115 单位取位
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc009) AND NOT cl_null(g_sfdc_d[l_ac].sfdc010) THEN
               CALL s_aooi250_get_msg(g_sfdc_d[l_ac].sfdc009) RETURNING l_success,g_ooca002,g_ooca004
               IF l_success THEN
                  CALL s_num_round(g_ooca004,g_sfdc_d[l_ac].sfdc010,g_ooca002) RETURNING g_sfdc_d[l_ac].sfdc010
                  DISPLAY BY NAME g_sfdc_d[l_ac].sfdc010
               END IF
            END IF
            #add 150115 end
            
            IF NOT cl_ap_chk_Range(g_sfdc_d[l_ac].sfdc010,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD sfdc010
            END IF

            IF NOT cl_null(g_sfdc_d[l_ac].sfdc010) THEN
               #不可小于0
               IF g_sfdc_d[l_ac].sfdc010 < 0 THEN
                  #资料不可小于0,请检查！,请录入大于等于0的资料
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axc-00024'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF

               #mark reason:实际发料量改成随申请量的变动而变动
               ##检查是否小于实际发料数量
               #IF g_sfdc_d[l_ac].sfdc010 < g_sfdc_d[l_ac].sfdc011 THEN
               #   #申请数量不可小于实际数量,请先减少实发明细数量再来调整！
               #   #CALL cl_err('','asf-00126',1)
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code = 'asf-00126'
               #   LET g_errparam.extend = ''
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   NEXT FIELD CURRENT
               #END IF
               
               IF cl_null(g_sfdc_d_t.sfdc007) OR g_sfdc_d[l_ac].sfdc007!=g_sfdc_d_t.sfdc007 THEN
                  LET g_sfdc_d[l_ac].sfdc011 = g_sfdc_d[l_ac].sfdc010
               END IF
               #更新相关栏位-参考单位差异数量
               LET g_sfdc_d[l_ac].diff2 = g_sfdc_d[l_ac].sfdc010  - g_sfdc_d[l_ac].sfdc011
            END IF
            LET g_sfdc_d_o.sfdc010 = g_sfdc_d[l_ac].sfdc010

         BEFORE FIELD sfdc012  #仓库
            IF cl_null(g_sfdc_d[l_ac].sfdc001) OR cl_null(g_sfdc_d[l_ac].sfdc002) OR cl_null(g_sfdc_d[l_ac].sfdc003) THEN
               #请先选择工单资料
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'asf-00391'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD sfdc001
            END IF
            
         AFTER FIELD sfdc012
            #仓库
            #不可输入的栏位不做检查，以防死循环（工單指定的時候庫存不一定有了，可能是還在在製的東西，等庫存有了就能發了）
            IF g_sfdc012_switch = 'Y' THEN
               IF cl_null(g_sfdc_d[l_ac].sfdc012) THEN
                  LET g_sfdc_d[l_ac].sfdc012_desc = ''
                  DISPLAY BY NAME g_sfdc_d[l_ac].sfdc012_desc
               END IF
               #add by lixh 20150529
               IF NOT cl_null(g_sfdc_d[l_ac].sfdc001) THEN
                  SELECT sfaa005,sfaa010 INTO l_sfaa005,l_sfaa010 FROM sfaa_t
                   WHERE sfaaent = g_enterprise
                     AND sfaadocno = g_sfdc_d[l_ac].sfdc001
                  IF l_sfaa005 = '5' AND l_sfaa010 = g_sfdc_d[l_ac].sfdc004 THEN
                     #檢查倉庫是否未非成本倉
                     LET l_inaa010 = ''
                     SELECT inaa010 INTO l_inaa010 FROM inaa_t
                      WHERE inaaent = g_enterprise
                        AND inaasite = g_site
                        AND inaa001 = g_sfdc_d[l_ac].sfdc012
                     IF l_inaa010 <> 'N' THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'arm-00011'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        NEXT FIELD sfdc012
                     END IF                     
                  END IF
               END IF   
               #add by lixh 20150529
               IF NOT cl_null(g_sfdc_d[l_ac].sfdc012) AND (g_sfdc_d[l_ac].sfdc012 != g_sfdc_d_t.sfdc012 OR g_sfdc_d_t.sfdc012 IS NULL) THEN
                  #校验带值说明，保税否，成本仓否
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_sfdc_d[l_ac].sfdc012
                  IF cl_chk_exist_and_ref_val("v_inaa002_2") THEN
                     #檢查成功時後續處理
                     LET g_sfdc_d[l_ac].sfdc012_desc = g_chkparam.return1
                     LET l_inaa015 = g_chkparam.return2
                     LET l_inaa010 = g_chkparam.return3
                     IF cl_null(l_inaa015) THEN LET l_inaa015='N' END IF
                     IF cl_null(l_inaa010) THEN LET l_inaa010='N' END IF
                     DISPLAY BY NAME g_sfdc_d[l_ac].sfdc012_desc
                  ELSE
                     #檢查失敗時後續處理
                     LET g_sfdc_d[l_ac].sfdc012 = g_sfdc_d_t.sfdc012
                     NEXT FIELD CURRENT
                  END IF
               
                  #檢核輸入的庫位是否在單據別限制範圍內，若不在限制內則不允許使用此庫位
                  CALL s_control_chk_doc('6',g_sfda_m.sfdadocno,g_sfdc_d[l_ac].sfdc012,'','','','') 
                     RETURNING l_success,l_flag2
                  IF NOT l_success OR NOT l_flag2 THEN
                     #控制组检查错误,请检查单别设定的相关内容
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00122'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_sfdc_d[l_ac].sfdc012 = g_sfdc_d_t.sfdc012
                     NEXT FIELD CURRENT
                  END IF
               
                  #如果储位已有，检查储位
                  IF NOT cl_null(g_sfdc_d[l_ac].sfdc013) THEN
                     #校验带值说明
                     CALL asft310_chk_loca(g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013)
                        RETURNING l_success,g_sfdc_d[l_ac].sfdc013_desc
                     IF NOT l_success THEN
                        LET g_sfdc_d[l_ac].sfdc012 = g_sfdc_d_t.sfdc012
                        NEXT FIELD CURRENT
                     END IF
                     DISPLAY BY NAME g_sfdc_d[l_ac].sfdc013_desc
                  END IF
               
                  #参数：生產非保稅料號，可由保稅倉發料
                  CALL s_aooi200_get_slip(g_sfda_m.sfdadocno) RETURNING l_success,g_ooba002
                  CALL cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0031') RETURNING g_para
                  #生产料号保税否
                  LET l_imaf034 = ''
                  SELECT imaf034 INTO l_imaf034 FROM imaf_t,sfaa_t
                   WHERE imafent  = sfaaent
                     AND imafsite = g_site
                     AND imaf001  = sfaa010
                     AND sfaaent  = g_enterprise
                     AND sfaadocno= g_sfdc_d[l_ac].sfdc001
                  IF cl_null(l_imaf034) THEN LET l_imaf034 = 'N' END IF
                  #當工單的生產料號=非保稅料，不可由保稅倉發料。
                  IF l_imaf034='N' AND (g_para = '1' OR g_para = '2') THEN  #拒绝或警告
                     CASE
                        WHEN l_inaa015='Y' AND g_para = '1'
                             INITIALIZE g_errparam TO NULL
                             LET g_errparam.code = 'asr-00008'
                             LET g_errparam.extend = ''
                             LET g_errparam.popup = TRUE
                             CALL cl_err()
                             NEXT FIELD CURRENT
                        WHEN l_inaa015='Y' AND g_para = '2'
                             INITIALIZE g_errparam TO NULL
                             LET g_errparam.code = 'asr-00008'
                             LET g_errparam.extend = ''
                             LET g_errparam.popup = TRUE
                             CALL cl_err()
                     END CASE
                  END IF
               
                  #參數：客供料可由成本倉料領料
                  CALL s_aooi200_get_slip(g_sfda_m.sfdadocno) RETURNING l_success,g_ooba002
                  CALL cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0052') RETURNING g_para
                  #1.拒絕時，只可輸入非成本倉。(2為警告)
                  IF g_sfdc_d[l_ac].sfba028='Y' AND (g_para = '1' OR g_para = '2') THEN
                     CASE
                        WHEN l_inaa010='Y' AND g_para = '1' #拒绝
                             INITIALIZE g_errparam TO NULL
                             LET g_errparam.code = 'asf-00048'
                             LET g_errparam.extend = ''
                             LET g_errparam.popup = TRUE
                             CALL cl_err()
                             NEXT FIELD CURRENT
                        WHEN l_inaa010='Y' AND g_para = '2' #警告
                             INITIALIZE g_errparam TO NULL
                             LET g_errparam.code = 'asf-00048'
                             LET g_errparam.extend = ''
                             LET g_errparam.popup = TRUE
                             CALL cl_err()
                     END CASE
                  END IF
               
                  #发料单做在捡量的检查
                  IF g_prog[1,6]='asft31' AND NOT cl_null(g_sfdc_d[l_ac].sfdc007) AND NOT cl_null(g_sfdc_d[l_ac].sfdc012) THEN  #在捡数量 库位
                     IF cl_null(g_sfdc_d[l_ac].sfdc016) THEN LET g_sfdc_d[l_ac].sfdc016= ' ' END IF  #库存管理特征
                     IF cl_null(g_sfdc_d[l_ac].sfdc013) THEN LET g_sfdc_d[l_ac].sfdc013= ' ' END IF  #储位
                     IF cl_null(g_sfdc_d[l_ac].sfdc014) THEN LET g_sfdc_d[l_ac].sfdc014= ' ' END IF  #批号
                     #指定庫位、儲位、批號時，判斷參數是否檢查在檢量，如需檢查在檢量，在庫存數-在檢數不足申請數量時不允許輸入
                     #                           据点   料件编号                产品特征                库存管理特征
                     CALL s_inventory_check_inan(g_site,g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005,g_sfdc_d[l_ac].sfdc016,
                     #                           库位                   储位                    批号
                                                 g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013,g_sfdc_d[l_ac].sfdc014,
                     #                           交易单位                在捡数量
                                                 g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc007,
                     #                           单据编号            项次                   项序
                                                 g_sfda_m.sfdadocno,g_sfdc_d[l_ac].sfdcseq,'0')
                          RETURNING l_success,l_flag
                     IF NOT l_flag THEN
                        LET g_sfdc_d[l_ac].sfdc012 = g_sfdc_d_t.sfdc012
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            LET g_sfdc_d_o.sfdc012 = g_sfdc_d[l_ac].sfdc012

         BEFORE FIELD sfdc013  #储位
            IF cl_null(g_sfdc_d[l_ac].sfdc001) OR cl_null(g_sfdc_d[l_ac].sfdc002) OR cl_null(g_sfdc_d[l_ac].sfdc003) THEN
               #请先选择工单资料
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'asf-00391'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD sfdc001
            END IF
            
         AFTER FIELD sfdc013
            #储位
            #不可输入的栏位不做检查，以防死循环（工單指定的時候庫存不一定有了，可能是還在在製的東西，等庫存有了就能發了）
            IF g_sfdc013_switch = 'Y' THEN
               IF cl_null(g_sfdc_d[l_ac].sfdc013) THEN
                  LET g_sfdc_d[l_ac].sfdc013_desc = ''
                  DISPLAY BY NAME g_sfdc_d[l_ac].sfdc013_desc
               END IF
               IF NOT cl_null(g_sfdc_d[l_ac].sfdc013) AND NOT cl_null(g_sfdc_d[l_ac].sfdc012)
               AND (g_sfdc_d[l_ac].sfdc013 != g_sfdc_d_t.sfdc013 OR g_sfdc_d_t.sfdc013 IS NULL) THEN
                  #校验带值说明
                  CALL asft310_chk_loca(g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013)
                     RETURNING l_success,g_sfdc_d[l_ac].sfdc013_desc
                  IF NOT l_success THEN
                     LET g_sfdc_d[l_ac].sfdc013 = g_sfdc_d_t.sfdc013
                     NEXT FIELD CURRENT
                  END IF
                  DISPLAY BY NAME g_sfdc_d[l_ac].sfdc013_desc
               
                  #檢核輸入的庫位是否在單據別限制範圍內，若不在限制內則不允許使用此庫位
                  CALL s_control_chk_doc('6',g_sfda_m.sfdadocno,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013,'','','')
                     RETURNING l_success,l_flag2
                  IF NOT l_success OR NOT l_flag2 THEN
                     #控制组检查错误,请检查单别设定的相关内容
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00122'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_sfdc_d[l_ac].sfdc013 = g_sfdc_d_t.sfdc013
                     NEXT FIELD CURRENT
                  END IF
               
                  #发料单做在捡量的检查
                  IF g_prog[1,6]='asft31' AND NOT cl_null(g_sfdc_d[l_ac].sfdc007) AND NOT cl_null(g_sfdc_d[l_ac].sfdc012) THEN  #在捡数量 库位
                     IF cl_null(g_sfdc_d[l_ac].sfdc016) THEN LET g_sfdc_d[l_ac].sfdc016= ' ' END IF  #库存管理特征
                     IF cl_null(g_sfdc_d[l_ac].sfdc013) THEN LET g_sfdc_d[l_ac].sfdc013= ' ' END IF  #储位
                     IF cl_null(g_sfdc_d[l_ac].sfdc014) THEN LET g_sfdc_d[l_ac].sfdc014= ' ' END IF  #批号
                     #指定庫位、儲位、批號時，判斷參數是否檢查在檢量，如需檢查在檢量，在庫存數-在檢數不足申請數量時不允許輸入
                     #                           据点   料件编号                产品特征                库存管理特征
                     CALL s_inventory_check_inan(g_site,g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005,g_sfdc_d[l_ac].sfdc016,
                     #                           库位                   储位                    批号
                                                 g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013,g_sfdc_d[l_ac].sfdc014,
                     #                           交易单位                在捡数量
                                                 g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc007,
                     #                           单据编号            项次                   项序
                                                 g_sfda_m.sfdadocno,g_sfdc_d[l_ac].sfdcseq,'0')
                          RETURNING l_success,l_flag
                     IF NOT l_flag THEN
                        LET g_sfdc_d[l_ac].sfdc013 = g_sfdc_d_t.sfdc013
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF 
            END IF
            LET g_sfdc_d_o.sfdc013 = g_sfdc_d[l_ac].sfdc013


         BEFORE FIELD sfdc014
            #指定批号
            #退料預設值:若發料批號只有一個，預設發料的批號
            IF g_sfda_m.sfda002[1,1]='2' AND cl_null(g_sfdc_d[l_ac].sfdc014) THEN
               CALL asft310_def_sfdc014()
               DISPLAY g_sfdc_d[l_ac].sfdc014 TO sfdc014
            END IF
            
         AFTER FIELD sfdc014
            #不可输入的栏位不做检查，以防死循环（工單指定的時候庫存不一定有了，可能是還在在製的東西，等庫存有了就能發了）
            IF g_sfdc014_switch = 'Y' THEN
               IF NOT cl_null(g_sfdc_d[l_ac].sfdc014) THEN
                  #发料单做在捡量的检查
                  IF g_prog[1,6]='asft31' AND NOT cl_null(g_sfdc_d[l_ac].sfdc007) AND NOT cl_null(g_sfdc_d[l_ac].sfdc012) THEN  #在捡数量 库位
                     IF cl_null(g_sfdc_d[l_ac].sfdc016) THEN LET g_sfdc_d[l_ac].sfdc016= ' ' END IF  #库存管理特征
                     IF cl_null(g_sfdc_d[l_ac].sfdc013) THEN LET g_sfdc_d[l_ac].sfdc013= ' ' END IF  #储位
                     IF cl_null(g_sfdc_d[l_ac].sfdc014) THEN LET g_sfdc_d[l_ac].sfdc014= ' ' END IF  #批号
                     #指定庫位、儲位、批號時，判斷參數是否檢查在檢量，如需檢查在檢量，在庫存數-在檢數不足申請數量時不允許輸入
                     #                           据点   料件编号                产品特征                库存管理特征
                     CALL s_inventory_check_inan(g_site,g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005,g_sfdc_d[l_ac].sfdc016,
                     #                           库位                   储位                    批号
                                                 g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013,g_sfdc_d[l_ac].sfdc014,
                     #                           交易单位                在捡数量
                                                 g_sfdc_d[l_ac].sfdc006,g_sfdc_d[l_ac].sfdc007,
                     #                           单据编号            项次                   项序
                                                 g_sfda_m.sfdadocno,g_sfdc_d[l_ac].sfdcseq,'0')
                          RETURNING l_success,l_flag
                     IF NOT l_flag THEN
                        LET g_sfdc_d[l_ac].sfdc014 = g_sfdc_d_t.sfdc014
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            LET g_sfdc_d_o.sfdc014 = g_sfdc_d[l_ac].sfdc014
               
         AFTER FIELD sfdc016
            #库存管理特征
            #不可输入的栏位不做检查，以防死循环（工單指定的時候庫存不一定有了，可能是還在在製的東西，等庫存有了就能發了）
            IF g_sfdc016_switch = 'Y' THEN
               IF NOT cl_null(g_sfdc_d[l_ac].sfdc016) THEN
                  #mark 150119 reason：需求时，库存资料也可以不存在
                  #SELECT COUNT(*) INTO l_cnt FROM inag_t
                  # WHERE inagent  = g_enterprise
                  #   AND inagsite = g_site
                  #   AND inag001  = g_sfdc_d[l_ac].sfdc004  #料件
                  #   AND inag002  = g_sfdc_d[l_ac].sfdc005  #产品特征
                  #   AND inag003  = g_sfdc_d[l_ac].sfdc016  #库存管理特征
                  #IF l_cnt = 0 THEN
                  #   #无此库存管理特征，请检查库存资料后从新输入
                  #   INITIALIZE g_errparam TO NULL
                  #   LET g_errparam.code = 'asf-00117'
                  #   LET g_errparam.extend = '' #g_sfdc_d[l_ac].sfdc004
                  #   LET g_errparam.popup = TRUE
                  #   CALL cl_err()
                  #   NEXT FIELD CURRENT
                  #END IF
                  #mark 150119 end
               END IF
            END IF
            LET g_sfdc_d_o.sfdc016 = g_sfdc_d[l_ac].sfdc016

         AFTER FIELD sfdc015
            #理由码
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc015) THEN
               CALL s_azzi650_chk_exist_and_desc('226',g_sfdc_d[l_ac].sfdc015) RETURNING l_success,g_sfdc_d[l_ac].sfdc015_desc
               IF NOT l_success THEN
                  LET g_sfdc_d[l_ac].sfdc015 = g_sfdc_d_t.sfdc015
                  NEXT FIELD CURRENT
               END IF
               DISPLAY BY NAME g_sfdc_d[l_ac].sfdc015_desc
               
               #控制组检查
               CALL s_control_chk_doc('8',g_sfda_m.sfdadocno,g_sfdc_d[l_ac].sfdc015,'','','','')
                  RETURNING l_success,l_flag2
               IF NOT l_success OR NOT l_flag2 THEN
                  #控制组检查错误,请检查单别设定的相关内容
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'asf-00122'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
            END IF 
            LET g_sfdc_d_o.sfdc015 = g_sfdc_d[l_ac].sfdc015

         ON ACTION controlp INFIELD sfdc001
            #工单单号
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdc_d[l_ac].sfdc001
            LET g_qryparam.default2 = g_sfdc_d[l_ac].sfdc002
            LET g_qryparam.default3 = g_sfdc_d[l_ac].sfdc003
            LET g_qryparam.where = " sfbasite ='",g_site,"'"
            SELECT COUNT(*) INTO l_cnt FROM sfdb_t
             WHERE sfdbent   = g_enterprise
               AND sfdbdocno = g_sfda_m.sfdadocno
            IF l_cnt > 0 THEN
               #找套数页签中有的工单
               LET g_qryparam.where = g_qryparam.where CLIPPED,
                                      " AND sfbadocno in (select unique sfdb001 from sfdb_t ",
                                      "                  where sfdbent   = ",g_enterprise,
                                      "                    and sfdbdocno = '",g_sfda_m.sfdadocno,"') "
            END IF
            IF g_sfda_m.sfda002='22' THEN   #超领退料只开有超领量的
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfba025 > 0 "
            END IF
            #IF g_sfda_m.sfda002='23' THEN   #一般退料只开有已发量的
            IF g_sfda_m.sfda002='21' OR g_sfda_m.sfda002='23' OR g_sfda_m.sfda002='24' OR g_sfda_m.sfda002='25' THEN   #一般退料只开有已发量的
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfba016 > 0 "
            END IF
            #单头PBI
            IF NOT cl_null(g_sfda_m.sfda005) THEN
               LET g_qryparam.where = g_qryparam.where CLIPPED,
                                      " AND sfbadocno in (select unique sfqb001 from sfqb_t ",
                                      "                  where sfqbent   = ",g_enterprise,
                                      "                    and sfqbdocno = '",g_sfda_m.sfda005,"') "
            END IF
            CALL q_sfba001_1()
            LET g_sfdc_d[l_ac].sfdc001 = g_qryparam.return1
            LET g_sfdc_d[l_ac].sfdc002 = g_qryparam.return2
            LET g_sfdc_d[l_ac].sfdc003 = g_qryparam.return3
            DISPLAY g_sfdc_d[l_ac].sfdc001 TO sfdc001
            DISPLAY g_sfdc_d[l_ac].sfdc002 TO sfdc002
            DISPLAY g_sfdc_d[l_ac].sfdc003 TO sfdc003 

         ON ACTION controlp INFIELD sfdc002
            #项次
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdc_d[l_ac].sfdc001
            LET g_qryparam.default2 = g_sfdc_d[l_ac].sfdc002
            LET g_qryparam.default3 = g_sfdc_d[l_ac].sfdc003
            LET g_qryparam.where = " sfbasite ='",g_site,"'"
            SELECT COUNT(*) INTO l_cnt FROM sfdb_t
             WHERE sfdbent   = g_enterprise
               AND sfdbdocno = g_sfda_m.sfdadocno
            IF l_cnt > 0 THEN
               #找套数页签中有的工单
               LET g_qryparam.where = g_qryparam.where CLIPPED,
                                      " AND sfbadocno in (select unique sfdb001 from sfdb_t ",
                                      "                  where sfdbent   = ",g_enterprise,
                                      "                    and sfdbdocno = '",g_sfda_m.sfdadocno,"') "
            END IF
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc001) THEN
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfbadocno = '",g_sfdc_d[l_ac].sfdc001,"' "
            END IF
            IF g_sfda_m.sfda002='22' THEN   #超领退料只开有超领量的
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfba025 > 0 "
            END IF
            #IF g_sfda_m.sfda002='23' THEN   #一般退料只开有已发量的
            IF g_sfda_m.sfda002='21' OR g_sfda_m.sfda002='23' OR g_sfda_m.sfda002='24' OR g_sfda_m.sfda002='25' THEN   #一般退料只开有已发量的
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfba016 > 0 "
            END IF
            CALL q_sfba001_1()
            LET g_sfdc_d[l_ac].sfdc001 = g_qryparam.return1
            LET g_sfdc_d[l_ac].sfdc002 = g_qryparam.return2
            LET g_sfdc_d[l_ac].sfdc003 = g_qryparam.return3
            DISPLAY g_sfdc_d[l_ac].sfdc001 TO sfdc001
            DISPLAY g_sfdc_d[l_ac].sfdc002 TO sfdc002
            DISPLAY g_sfdc_d[l_ac].sfdc003 TO sfdc003

         ON ACTION controlp INFIELD sfdc003
            #项序
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdc_d[l_ac].sfdc001
            LET g_qryparam.default2 = g_sfdc_d[l_ac].sfdc002
            LET g_qryparam.default3 = g_sfdc_d[l_ac].sfdc003
            LET g_qryparam.where = " sfbasite ='",g_site,"'"
            SELECT COUNT(*) INTO l_cnt FROM sfdb_t
             WHERE sfdbent   = g_enterprise
               AND sfdbdocno = g_sfda_m.sfdadocno
            IF l_cnt > 0 THEN
               #找套数页签中有的工单
               LET g_qryparam.where = g_qryparam.where CLIPPED,
                                      " AND sfbadocno in (select unique sfdb001 from sfdb_t ",
                                      "                  where sfdbent   = ",g_enterprise,
                                      "                    and sfdbdocno = '",g_sfda_m.sfdadocno,"') "
            END IF
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc001) THEN
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfbadocno = '",g_sfdc_d[l_ac].sfdc001,"' "
            END IF
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc002) THEN
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfbaseq = ",g_sfdc_d[l_ac].sfdc002
            END IF
            IF g_sfda_m.sfda002='22' THEN   #超领退料只开有超领量的
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfba025 > 0 "
            END IF
            #IF g_sfda_m.sfda002='23' THEN   #一般退料只开有已发量的
            IF g_sfda_m.sfda002='21' OR g_sfda_m.sfda002='23' OR g_sfda_m.sfda002='24' OR g_sfda_m.sfda002='25' THEN   #一般退料只开有已发量的
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfba016 > 0 "
            END IF
            CALL q_sfba001_1()
            LET g_sfdc_d[l_ac].sfdc001 = g_qryparam.return1
            LET g_sfdc_d[l_ac].sfdc002 = g_qryparam.return2
            LET g_sfdc_d[l_ac].sfdc003 = g_qryparam.return3
            DISPLAY g_sfdc_d[l_ac].sfdc001 TO sfdc001
            DISPLAY g_sfdc_d[l_ac].sfdc002 TO sfdc002
            DISPLAY g_sfdc_d[l_ac].sfdc003 TO sfdc003

         ON ACTION controlp INFIELD sfdc004  #需求料号
            #因只有在超領工單領工單不存在的料件，在申請頁籤才可以輸入"間接材料"(imae023)='3'，所以这边只开间接材料的料件
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdc_d[l_ac].sfdc004
            CALL q_imae001()
            LET g_sfdc_d[l_ac].sfdc004 = g_qryparam.return1
            DISPLAY g_sfdc_d[l_ac].sfdc004 TO sfdc004

         ON ACTION controlp INFIELD sfdc005
            CALL s_feature_single(g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005,g_site,'')
               RETURNING l_success,g_sfdc_d[l_ac].sfdc005
            IF NOT l_success THEN
               LET g_sfdc_d[l_ac].sfdc005 = ' '
            END IF
            DISPLAY g_sfdc_d[l_ac].sfdc005 TO sfdc005              #顯示到畫面上
            NEXT FIELD sfdc005 
            
         ON ACTION controlp INFIELD sfdc009
            #参考单位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdc_d[l_ac].sfdc009
            CALL q_ooca001_1()
            LET g_sfdc_d[l_ac].sfdc009 = g_qryparam.return1
            DISPLAY g_sfdc_d[l_ac].sfdc009 TO sfdc009

         ON ACTION controlp INFIELD sfdc012
            #仓库
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdc_d[l_ac].sfdc012
            LET g_qryparam.default2 = g_sfdc_d[l_ac].sfdc013
            LET g_qryparam.default3 = g_sfdc_d[l_ac].sfdc014
            LET g_qryparam.default4 = g_sfdc_d[l_ac].sfdc016
            #mod 141118 q_inag004_13修改成传参方式
            #LET g_qryparam.where = " inag001 ='",g_sfdc_d[l_ac].sfdc004,"'"
            LET g_qryparam.arg1 = g_sfdc_d[l_ac].sfdc004
            IF cl_null(g_sfdc_d[l_ac].sfdc005) THEN
               LET g_qryparam.arg2 = ' '
            ELSE
               LET g_qryparam.arg2 = g_sfdc_d[l_ac].sfdc005
            END IF
            
            #已有指定不可输入
            LET g_qryparam.where = "1=1 "
            #add 150107
            LET l_sfba019=''
            LET l_sfba020=''
            LET l_sfba029=''
            LET l_sfba030=''
            SELECT sfba019,sfba020,sfba029,sfba030
              INTO l_sfba019,l_sfba020,l_sfba029,l_sfba030
              FROM sfba_t
             WHERE sfbaent  = g_enterprise
               AND sfbadocno= g_sfdc_d[l_ac].sfdc001
               AND sfbaseq  = g_sfdc_d[l_ac].sfdc002
               AND sfbaseq1 = g_sfdc_d[l_ac].sfdc003
            #add 150107 end
            #IF g_sfdc012_switch = 'N' THEN
            #   IF cl_null(g_sfdc_d[l_ac].sfdc012) THEN
            #      LET g_qryparam.where = g_qryparam.where ," AND inag004 = ' ' "
            #   ELSE
            #      LET g_qryparam.where = g_qryparam.where ," AND inag004 = '",g_sfdc_d[l_ac].sfdc012,"' "
            #   END IF
            #END IF
            IF g_sfdc013_switch = 'N' THEN
               IF cl_null(g_sfdc_d[l_ac].sfdc013) THEN
                  #mod 150107
                  #LET g_qryparam.where = g_qryparam.where ," AND inag005 = ' ' "
                  IF NOT cl_null(l_sfba020) THEN
                     LET g_qryparam.where = g_qryparam.where ," AND inag005 = '",l_sfba020,"' "
                  ELSE
                     LET g_qryparam.where = g_qryparam.where ," AND inag005 = ' ' "
                  END IF
                  #mod 150107 end
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag005 = '",g_sfdc_d[l_ac].sfdc013,"' "
               END IF
            END IF
            IF g_sfdc014_switch = 'N' THEN
               IF cl_null(g_sfdc_d[l_ac].sfdc014) THEN
                  #mod 150107
                  #LET g_qryparam.where = g_qryparam.where ," AND inag006 = ' ' "
                  IF NOT cl_null(l_sfba029) THEN
                     LET g_qryparam.where = g_qryparam.where ," AND inag006 = '",l_sfba029,"' "
                  ELSE
                     LET g_qryparam.where = g_qryparam.where ," AND inag006 = ' ' "
                  END IF
                  #mod 150107 end
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag006 = '",g_sfdc_d[l_ac].sfdc014,"' "
               END IF
            END IF
            IF g_sfdc016_switch = 'N' THEN
               IF cl_null(g_sfdc_d[l_ac].sfdc016) THEN
                  #mod 150107
                  #LET g_qryparam.where = g_qryparam.where ," AND inag003 = ' ' "
                  IF NOT cl_null(l_sfba030) THEN
                     LET g_qryparam.where = g_qryparam.where ," AND inag003 = '",l_sfba030,"' "
                  ELSE
                     LET g_qryparam.where = g_qryparam.where ," AND inag003 = ' ' "
                  END IF
                  #mod 150107 end
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag003 = '",g_sfdc_d[l_ac].sfdc016,"' "
               END IF
            END IF
            #mod 141118 --end
            
            #关于控制组
            CALL s_control_get_doc_sql("inag004",g_sfda_m.sfdadocno,'6')
                 RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_where
            END IF
            #关于控制组--end
            
            IF g_sfda_m.sfda002[1,1]='1' THEN #發料單 庫存>0
               CALL q_inag004_13()  #库位、储位、批号、库存管理特征
            ELSE #退料單 不卡控库存
               CALL q_inag004_16()  #库位、储位、批号、库存管理特征
            END IF
            LET g_sfdc_d[l_ac].sfdc012 = g_qryparam.return1
            LET g_sfdc_d[l_ac].sfdc013 = g_qryparam.return2
            LET g_sfdc_d[l_ac].sfdc014 = g_qryparam.return3
            LET g_sfdc_d[l_ac].sfdc016 = g_qryparam.return4
            DISPLAY g_sfdc_d[l_ac].sfdc012 TO sfdc012
            DISPLAY g_sfdc_d[l_ac].sfdc013 TO sfdc013
            DISPLAY g_sfdc_d[l_ac].sfdc014 TO sfdc014 
            DISPLAY g_sfdc_d[l_ac].sfdc016 TO sfdc016 
            CALL s_desc_get_stock_desc(g_site,g_sfdc_d[l_ac].sfdc012) RETURNING g_sfdc_d[l_ac].sfdc012_desc
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc013) THEN
               CALL s_desc_get_locator_desc(g_site,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013) RETURNING g_sfdc_d[l_ac].sfdc013_desc
            END IF
            DISPLAY g_sfdc_d[l_ac].sfdc012_desc TO sfdc012_desc
            DISPLAY g_sfdc_d[l_ac].sfdc013_desc TO sfdc013_desc
            NEXT FIELD sfdc012

         ON ACTION controlp INFIELD sfdc013
            #储位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdc_d[l_ac].sfdc012
            LET g_qryparam.default2 = g_sfdc_d[l_ac].sfdc013
            LET g_qryparam.default3 = g_sfdc_d[l_ac].sfdc014
            LET g_qryparam.default4 = g_sfdc_d[l_ac].sfdc016
            #mod 141118 q_inag004_13修改成传参方式
            #LET g_qryparam.where = " inag001 ='",g_sfdc_d[l_ac].sfdc004,"'"
            LET g_qryparam.arg1 = g_sfdc_d[l_ac].sfdc004
            IF cl_null(g_sfdc_d[l_ac].sfdc005) THEN
               LET g_qryparam.arg2 = ' '
            ELSE
               LET g_qryparam.arg2 = g_sfdc_d[l_ac].sfdc005
            END IF
            
            #已有指定不可输入
            LET g_qryparam.where = "1=1 "
            #add 150107
            LET l_sfba019=''
            LET l_sfba020=''
            LET l_sfba029=''
            LET l_sfba030=''
            SELECT sfba019,sfba020,sfba029,sfba030
              INTO l_sfba019,l_sfba020,l_sfba029,l_sfba030
              FROM sfba_t
             WHERE sfbaent  = g_enterprise
               AND sfbadocno= g_sfdc_d[l_ac].sfdc001
               AND sfbaseq  = g_sfdc_d[l_ac].sfdc002
               AND sfbaseq1 = g_sfdc_d[l_ac].sfdc003
            #add 150107 end
            IF g_sfdc012_switch = 'N' THEN
               IF cl_null(g_sfdc_d[l_ac].sfdc012) THEN
                  #mod 150107
                  #LET g_qryparam.where = g_qryparam.where ," AND inag004 = ' ' "
                  IF NOT cl_null(l_sfba019) THEN
                     LET g_qryparam.where = g_qryparam.where ," AND inag004 = '",l_sfba019,"' "
                  ELSE
                     LET g_qryparam.where = g_qryparam.where ," AND inag004 = ' ' "
                  END IF
                  #mod 150107 end
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag004 = '",g_sfdc_d[l_ac].sfdc012,"' "
               END IF
            END IF
            #IF g_sfdc013_switch = 'N' THEN
            #   IF cl_null(g_sfdc_d[l_ac].sfdc013) THEN
            #      LET g_qryparam.where = g_qryparam.where ," AND inag005 = ' ' "
            #   ELSE
            #      LET g_qryparam.where = g_qryparam.where ," AND inag005 = '",g_sfdc_d[l_ac].sfdc013,"' "
            #   END IF
            #END IF
            IF g_sfdc014_switch = 'N' THEN
               IF cl_null(g_sfdc_d[l_ac].sfdc014) THEN
                  #mod 150107
                  #LET g_qryparam.where = g_qryparam.where ," AND inag006 = ' ' "
                  IF NOT cl_null(l_sfba029) THEN
                     LET g_qryparam.where = g_qryparam.where ," AND inag006 = '",l_sfba029,"' "
                  ELSE
                     LET g_qryparam.where = g_qryparam.where ," AND inag006 = ' ' "
                  END IF
                  #mod 150107 end
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag006 = '",g_sfdc_d[l_ac].sfdc014,"' "
               END IF
            END IF
            IF g_sfdc016_switch = 'N' THEN
               IF cl_null(g_sfdc_d[l_ac].sfdc016) THEN
                  #mod 150107
                  #LET g_qryparam.where = g_qryparam.where ," AND inag003 = ' ' "
                  IF NOT cl_null(l_sfba030) THEN
                     LET g_qryparam.where = g_qryparam.where ," AND inag003 = '",l_sfba030,"' "
                  ELSE
                     LET g_qryparam.where = g_qryparam.where ," AND inag003 = ' ' "
                  END IF
                  #mod 150107 end
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag003 = '",g_sfdc_d[l_ac].sfdc016,"' "
               END IF
            END IF
            #mod 141118 --end
            IF g_sfda_m.sfda002[1,1]='1' THEN #發料單 庫存>0
               CALL q_inag004_13()  #库位、储位、批号、库存管理特征
            ELSE #退料單 不卡控库存
               CALL q_inag004_16()  #库位、储位、批号、库存管理特征
            END IF
            LET g_sfdc_d[l_ac].sfdc012 = g_qryparam.return1
            LET g_sfdc_d[l_ac].sfdc013 = g_qryparam.return2
            LET g_sfdc_d[l_ac].sfdc014 = g_qryparam.return3
            LET g_sfdc_d[l_ac].sfdc016 = g_qryparam.return4
            DISPLAY g_sfdc_d[l_ac].sfdc012 TO sfdc012
            DISPLAY g_sfdc_d[l_ac].sfdc013 TO sfdc013
            DISPLAY g_sfdc_d[l_ac].sfdc014 TO sfdc014 
            DISPLAY g_sfdc_d[l_ac].sfdc016 TO sfdc016 
            #栏位说明
            CALL s_desc_get_stock_desc(g_site,g_sfdc_d[l_ac].sfdc012) RETURNING g_sfdc_d[l_ac].sfdc012_desc
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc013) THEN
               CALL s_desc_get_locator_desc(g_site,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013) RETURNING g_sfdc_d[l_ac].sfdc013_desc
            END IF
            DISPLAY g_sfdc_d[l_ac].sfdc012_desc TO sfdc012_desc
            DISPLAY g_sfdc_d[l_ac].sfdc013_desc TO sfdc013_desc
            NEXT FIELD sfdc013

         ON ACTION controlp INFIELD sfdc014
            #批号
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdc_d[l_ac].sfdc012
            LET g_qryparam.default2 = g_sfdc_d[l_ac].sfdc013
            LET g_qryparam.default3 = g_sfdc_d[l_ac].sfdc014
            LET g_qryparam.default4 = g_sfdc_d[l_ac].sfdc016
            #mod 141118 q_inag004_13修改成传参方式
            #LET g_qryparam.where = " inag001 ='",g_sfdc_d[l_ac].sfdc004,"'"
            LET g_qryparam.arg1 = g_sfdc_d[l_ac].sfdc004
            IF cl_null(g_sfdc_d[l_ac].sfdc005) THEN
               LET g_qryparam.arg2 = ' '
            ELSE
               LET g_qryparam.arg2 = g_sfdc_d[l_ac].sfdc005
            END IF
            
            #已有指定不可输入
            LET g_qryparam.where = "1=1 "
            #add 150107
            LET l_sfba019=''
            LET l_sfba020=''
            LET l_sfba029=''
            LET l_sfba030=''
            SELECT sfba019,sfba020,sfba029,sfba030
              INTO l_sfba019,l_sfba020,l_sfba029,l_sfba030
              FROM sfba_t
             WHERE sfbaent  = g_enterprise
               AND sfbadocno= g_sfdc_d[l_ac].sfdc001
               AND sfbaseq  = g_sfdc_d[l_ac].sfdc002
               AND sfbaseq1 = g_sfdc_d[l_ac].sfdc003
            #add 150107 end
            IF g_sfdc012_switch = 'N' THEN
               IF cl_null(g_sfdc_d[l_ac].sfdc012) THEN
                  #mod 150107
                  #LET g_qryparam.where = g_qryparam.where ," AND inag004 = ' ' "
                  IF NOT cl_null(l_sfba019) THEN
                     LET g_qryparam.where = g_qryparam.where ," AND inag004 = '",l_sfba019,"' "
                  ELSE
                     LET g_qryparam.where = g_qryparam.where ," AND inag004 = ' ' "
                  END IF
                  #mod 150107 end
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag004 = '",g_sfdc_d[l_ac].sfdc012,"' "
               END IF
            END IF
            IF g_sfdc013_switch = 'N' THEN
               IF cl_null(g_sfdc_d[l_ac].sfdc013) THEN
                  #mod 150107
                  #LET g_qryparam.where = g_qryparam.where ," AND inag005 = ' ' "
                  IF NOT cl_null(l_sfba020) THEN
                     LET g_qryparam.where = g_qryparam.where ," AND inag005 = '",l_sfba020,"' "
                  ELSE
                     LET g_qryparam.where = g_qryparam.where ," AND inag005 = ' ' "
                  END IF
                  #mod 150107 end
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag005 = '",g_sfdc_d[l_ac].sfdc013,"' "
               END IF
            END IF
            #IF g_sfdc014_switch = 'N' THEN
            #   IF cl_null(g_sfdc_d[l_ac].sfdc014) THEN
            #      LET g_qryparam.where = g_qryparam.where ," AND inag006 = ' ' "
            #   ELSE
            #      LET g_qryparam.where = g_qryparam.where ," AND inag006 = '",g_sfdc_d[l_ac].sfdc014,"' "
            #   END IF
            #END IF
            IF g_sfdc016_switch = 'N' THEN
               IF cl_null(g_sfdc_d[l_ac].sfdc016) THEN
                  #mod 150107
                  #LET g_qryparam.where = g_qryparam.where ," AND inag003 = ' ' "
                  IF NOT cl_null(l_sfba030) THEN
                     LET g_qryparam.where = g_qryparam.where ," AND inag003 = '",l_sfba030,"' "
                  ELSE
                     LET g_qryparam.where = g_qryparam.where ," AND inag003 = ' ' "
                  END IF
                  #mod 150107 end
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag003 = '",g_sfdc_d[l_ac].sfdc016,"' "
               END IF
            END IF
            #mod 141118 --end
            IF g_sfda_m.sfda002[1,1]='1' THEN #發料單 庫存>0
               CALL q_inag004_13()  #库位、储位、批号、库存管理特征
            ELSE #退料單 不卡控库存
               CALL q_inag004_16()  #库位、储位、批号、库存管理特征
            END IF
            LET g_sfdc_d[l_ac].sfdc012 = g_qryparam.return1
            LET g_sfdc_d[l_ac].sfdc013 = g_qryparam.return2
            LET g_sfdc_d[l_ac].sfdc014 = g_qryparam.return3
            LET g_sfdc_d[l_ac].sfdc016 = g_qryparam.return4
            DISPLAY g_sfdc_d[l_ac].sfdc012 TO sfdc012
            DISPLAY g_sfdc_d[l_ac].sfdc013 TO sfdc013
            DISPLAY g_sfdc_d[l_ac].sfdc014 TO sfdc014 
            DISPLAY g_sfdc_d[l_ac].sfdc016 TO sfdc016 
            #栏位说明
            CALL s_desc_get_stock_desc(g_site,g_sfdc_d[l_ac].sfdc012) RETURNING g_sfdc_d[l_ac].sfdc012_desc
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc013) THEN
               CALL s_desc_get_locator_desc(g_site,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013) RETURNING g_sfdc_d[l_ac].sfdc013_desc
            END IF
            DISPLAY g_sfdc_d[l_ac].sfdc012_desc TO sfdc012_desc
            DISPLAY g_sfdc_d[l_ac].sfdc013_desc TO sfdc013_desc
            NEXT FIELD sfdc014

         ON ACTION controlp INFIELD sfdc016
            #库存管理特征
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdc_d[l_ac].sfdc012
            LET g_qryparam.default2 = g_sfdc_d[l_ac].sfdc013
            LET g_qryparam.default3 = g_sfdc_d[l_ac].sfdc014
            LET g_qryparam.default4 = g_sfdc_d[l_ac].sfdc016
            #mod 141118 q_inag004_13修改成传参方式
            #LET g_qryparam.where = " inag001 ='",g_sfdc_d[l_ac].sfdc004,"'"
            LET g_qryparam.arg1 = g_sfdc_d[l_ac].sfdc004
            IF cl_null(g_sfdc_d[l_ac].sfdc005) THEN
               LET g_qryparam.arg2 = ' '
            ELSE
               LET g_qryparam.arg2 = g_sfdc_d[l_ac].sfdc005
            END IF
            
            #已有指定不可输入
            LET g_qryparam.where = "1=1 "
            #add 150107
            LET l_sfba019=''
            LET l_sfba020=''
            LET l_sfba029=''
            LET l_sfba030=''
            SELECT sfba019,sfba020,sfba029,sfba030
              INTO l_sfba019,l_sfba020,l_sfba029,l_sfba030
              FROM sfba_t
             WHERE sfbaent  = g_enterprise
               AND sfbadocno= g_sfdc_d[l_ac].sfdc001
               AND sfbaseq  = g_sfdc_d[l_ac].sfdc002
               AND sfbaseq1 = g_sfdc_d[l_ac].sfdc003
            #add 150107 end
            IF g_sfdc012_switch = 'N' THEN
               IF cl_null(g_sfdc_d[l_ac].sfdc012) THEN
                  #mod 150107
                  #LET g_qryparam.where = g_qryparam.where ," AND inag004 = ' ' "
                  IF NOT cl_null(l_sfba019) THEN
                     LET g_qryparam.where = g_qryparam.where ," AND inag004 = '",l_sfba019,"' "
                  ELSE
                     LET g_qryparam.where = g_qryparam.where ," AND inag004 = ' ' "
                  END IF
                  #mod 150107 end
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag004 = '",g_sfdc_d[l_ac].sfdc012,"' "
               END IF
            END IF
            IF g_sfdc013_switch = 'N' THEN
               IF cl_null(g_sfdc_d[l_ac].sfdc013) THEN
                  #mod 150107
                  #LET g_qryparam.where = g_qryparam.where ," AND inag005 = ' ' "
                  IF NOT cl_null(l_sfba020) THEN
                     LET g_qryparam.where = g_qryparam.where ," AND inag005 = '",l_sfba020,"' "
                  ELSE
                     LET g_qryparam.where = g_qryparam.where ," AND inag005 = ' ' "
                  END IF
                  #mod 150107 end
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag005 = '",g_sfdc_d[l_ac].sfdc013,"' "
               END IF
            END IF
            IF g_sfdc014_switch = 'N' THEN
               IF cl_null(g_sfdc_d[l_ac].sfdc014) THEN
                  #mod 150107
                  #LET g_qryparam.where = g_qryparam.where ," AND inag006 = ' ' "
                  IF NOT cl_null(l_sfba029) THEN
                     LET g_qryparam.where = g_qryparam.where ," AND inag006 = '",l_sfba029,"' "
                  ELSE
                     LET g_qryparam.where = g_qryparam.where ," AND inag006 = ' ' "
                  END IF
                  #mod 150107 end
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag006 = '",g_sfdc_d[l_ac].sfdc014,"' "
               END IF
            END IF
            #IF g_sfdc016_switch = 'N' THEN
            #   IF cl_null(g_sfdc_d[l_ac].sfdc016) THEN
            #      LET g_qryparam.where = g_qryparam.where ," AND inag003 = ' ' "
            #   ELSE
            #      LET g_qryparam.where = g_qryparam.where ," AND inag003 = '",g_sfdc_d[l_ac].sfdc016,"' "
            #   END IF
            #END IF
            #mod 141118 --end
            
            IF g_sfda_m.sfda002[1,1]='1' THEN #發料單 庫存>0
               CALL q_inag004_13()  #库位、储位、批号、库存管理特征
            ELSE #退料單 不卡控库存
               CALL q_inag004_16()  #库位、储位、批号、库存管理特征
            END IF
            LET g_sfdc_d[l_ac].sfdc012 = g_qryparam.return1
            LET g_sfdc_d[l_ac].sfdc013 = g_qryparam.return2
            LET g_sfdc_d[l_ac].sfdc014 = g_qryparam.return3
            LET g_sfdc_d[l_ac].sfdc016 = g_qryparam.return4
            DISPLAY g_sfdc_d[l_ac].sfdc012 TO sfdc012
            DISPLAY g_sfdc_d[l_ac].sfdc013 TO sfdc013
            DISPLAY g_sfdc_d[l_ac].sfdc014 TO sfdc014 
            DISPLAY g_sfdc_d[l_ac].sfdc016 TO sfdc016 
            #栏位说明
            CALL s_desc_get_stock_desc(g_site,g_sfdc_d[l_ac].sfdc012) RETURNING g_sfdc_d[l_ac].sfdc012_desc
            IF NOT cl_null(g_sfdc_d[l_ac].sfdc013) THEN
               CALL s_desc_get_locator_desc(g_site,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013) RETURNING g_sfdc_d[l_ac].sfdc013_desc
            END IF
            DISPLAY g_sfdc_d[l_ac].sfdc012_desc TO sfdc012_desc
            DISPLAY g_sfdc_d[l_ac].sfdc013_desc TO sfdc013_desc
            NEXT FIELD sfdc016
            
         ON ACTION controlp INFIELD sfdc015
            #理由码
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdc_d[l_ac].sfdc015
            LET g_qryparam.arg1 = '226'
            #关于控制组
            LET g_qryparam.where = "1=1 "
            CALL s_control_get_doc_sql("oocq002",g_sfda_m.sfdadocno,'8')
               RETURNING l_success,l_where    #num5和STRING类型
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND ",l_where
            END IF
            #关于控制组--end
            CALL q_oocq002_5()
            LET g_sfdc_d[l_ac].sfdc015 = g_qryparam.return1     #將開窗取得的值回傳到變數
            DISPLAY g_sfdc_d[l_ac].sfdc015 TO sfdc015
            NEXT FIELD sfdc015 

         #add 141222
         ON ACTION controlp INFIELD sfdc_ooff013  #备注
            CALL s_aooi360_edit('7',g_sfda_m.sfdadocno,g_sfdc_d[l_ac].sfdcseq,' ',' ',' ',' ',' ',' ',' ',' ','4',g_sfdc_d[l_ac].sfdc_ooff013)
               RETURNING g_sfdc_d[l_ac].sfdc_ooff013
            DISPLAY g_sfdc_d[l_ac].sfdc_ooff013 TO sfdc_ooff013              #顯示到畫面上
            NEXT FIELD sfdc_ooff013                          #返回原欄位
         #add 141222 end
         
         AFTER ROW
            LET l_ac = ARR_CURR()
            
            LET l_ac_t = l_ac
            CALL asft310_b_fill() #單身填充
            CALL asft310_b_fill2('0') #單身填充
            LET l_ac = l_ac_t
            
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_sfdc_d[l_ac].* = g_sfdc_d_t.*
               END IF
               CLOSE asft310_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            #其他table進行unlock

            CALL asft310_unlock_b("sfdc_t","'2'")
            CALL s_transaction_end('Y','0')

         AFTER INPUT
         #add by lixh 20150529  
            IF g_sfdc_d.getLength() > 0 THEN
               LET j = 1
               FOR j = 1 TO g_sfdc_d.getLength()
                  CALL s_aooi200_get_slip(g_sfdc_d[j].sfdc001) RETURNING l_success,g_ooba002
                  IF cl_get_doc_para(g_enterprise,g_site,g_ooba002,'D-MFG-0050') = 'N' THEN
                     SELECT sfba019
                       INTO l_sfba019
                       FROM sfba_t
                      WHERE sfbaent  = g_enterprise
                        AND sfbadocno= g_sfdc_d[j].sfdc001
                        AND sfbaseq  = g_sfdc_d[j].sfdc002
                        AND sfbaseq1 = g_sfdc_d[j].sfdc003
                     IF NOT cl_null(l_sfba019) THEN
                        LET l_sfdc012_switch = 'N'   #可输入性 Y可输入 N不可输入
                     ELSE
                        LET l_sfdc012_switch = 'Y'
                     END IF   
                   END IF     
                   IF l_sfdc012_switch = 'Y' THEN
                  
                      SELECT sfaa005,sfaa010 INTO l_sfaa005,l_sfaa010 FROM sfaa_t
                       WHERE sfaaent = g_enterprise
                         AND sfaadocno = g_sfdc_d[j].sfdc001
                      IF l_sfaa005 = '5' AND l_sfaa010 = g_sfdc_d[j].sfdc004 THEN
                         #檢查倉庫是否未非成本倉
                         LET l_inaa010 = ''
                         SELECT inaa010 INTO l_inaa010 FROM inaa_t
                          WHERE inaaent = g_enterprise
                            AND inaasite = g_site
                            AND inaa001 = g_sfdc_d[j].sfdc012
                         IF l_inaa010 <> 'N' THEN
                            INITIALIZE g_errparam TO NULL
                            LET g_errparam.code = 'arm-00011'
                            LET g_errparam.extend = ''
                            LET g_errparam.popup = TRUE
                            CALL cl_err()
                            EXIT FOR
                         END IF                     
                      END IF
                  
                   END IF                   
                   LET j = j + 1
               END FOR
               CALL g_sfdc_d.deleteElement(j)
               LET j = j - 1               
            END IF

         #add by lixh 20150529  
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_sfdc_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_sfdc_d.getLength()+1

      END INPUT

      DISPLAY ARRAY g_sfde_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)

         BEFORE ROW
            CALL asft310_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            LET g_detail_idx = l_ac
            CALL asft310_b_fill2('5')

         BEFORE DISPLAY
            CALL FGL_SET_ARR_CURR(g_detail_idx)
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            CALL asft310_idx_chk()
            LET g_current_page = 3

         #自訂ACTION(detail_show,page_3)

      END DISPLAY

      DISPLAY ARRAY g_sfdc4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)

         BEFORE ROW
            CALL asft310_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail4")
            LET g_detail_idx = l_ac
            CALL asft310_b_fill2('6')

         BEFORE DISPLAY
            CALL FGL_SET_ARR_CURR(g_detail_idx)
            LET l_ac = DIALOG.getCurrentRow("s_detail4")
            CALL asft310_idx_chk()
            LET g_current_page = 4

         #自訂ACTION(detail_show,page_4)

      END DISPLAY
      
      DISPLAY ARRAY g_inao_d TO s_detail7.* ATTRIBUTES(COUNT=g_rec_b)

         BEFORE ROW
            CALL asft310_idx_chk()
            #LET l_ac = DIALOG.getCurrentRow("s_detail7")
            #LET g_detail_idx = l_ac
            CALL asft310_b_fill_inao()

         BEFORE DISPLAY
            #CALL FGL_SET_ARR_CURR(g_detail_idx)
            #LET l_ac = DIALOG.getCurrentRow("s_detail7")
            CALL asft310_idx_chk()
            LET g_current_page = 7

         #自訂ACTION(detail_show,page_7)

      END DISPLAY

      INPUT ARRAY g_sfdf_d FROM s_detail5.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效!

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)

         #自訂ACTION(detail_input,page_5)

         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN
              CALL FGL_SET_ARR_CURR(g_sfdf_d.getLength()+1)
              LET g_insert = 'N'
            END IF

            LET g_rec_b = g_sfdf_d.getLength()

         BEFORE INSERT
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_sfdf_d[l_ac].* TO NULL
            LET g_sfdf_d_t.* = g_sfdf_d[l_ac].*     #新輸入資料
            LET g_sfdf_d_o.* = g_sfdf_d[l_ac].*     #新輸入資料
            LET g_sfdf_d[l_ac].sfdf002 = "1"
            CALL cl_show_fld_cont()
            #CALL asft310_set_entry_b_sfdf(l_cmd)
            #CALL asft310_set_no_entry_b_sfdf(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_sfdf_d[li_reproduce_target].* = g_sfdf_d[li_reproduce].*
               LET g_sfdf_d[li_reproduce_target].sfdfseq1 = NULL
            END IF
            #公用欄位給值(單身5)

            #add-point:modify段before insert
            #自动流水号
            SELECT MAX(sfdfseq1) INTO g_sfdf_d[l_ac].sfdfseq1
              FROM sfdf_t
             WHERE sfdfent = g_enterprise
               AND sfdfsite= g_site
               AND sfdfdocno=g_sfda_m.sfdadocno
               AND sfdfseq=g_sfde_d[g_detail_idx].sfdeseq
            IF g_sfdf_d[l_ac].sfdfseq1 IS NULL THEN
               LET g_sfdf_d[l_ac].sfdfseq1 = 0
            END IF
            LET g_sfdf_d[l_ac].sfdfseq1 = g_sfdf_d[l_ac].sfdfseq1 + 1
            

            #发料料号：预设带出需求料号
            LET g_sfdf_d[l_ac].sfdf001 = g_sfde_d[g_detail_idx].sfde001
            CALL s_desc_get_item_desc(g_sfdf_d[l_ac].sfdf001) RETURNING g_sfdf_d[l_ac].sfdf001_desc,g_sfdf_d[l_ac].sfdf001_desc2
            #产品特征：预设带出需求料号特征
            LET g_sfdf_d[l_ac].sfdf013 = g_sfde_d[g_detail_idx].sfde002
            #显示产品特征说明
            CALL s_feature_description(g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf013)
               RETURNING l_success,g_sfdf_d[l_ac].sfdf013_desc
            IF NOT l_success THEN
               LET g_sfdf_d[l_ac].sfdf013_desc = ''
            END IF
            
            #替代率预设1
            LET g_sfdf_d[l_ac].sfdf002 = 1
            
            #库位：发料需求指定的库位
            #检查sfdf对应的sfde中包含的sfdc里是否只有一个相同的指定"库位"，此时库位栏位不允许输入只能默认
            IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
               LET l_sql = "SELECT COUNT(UNIQUE sfdc012) ",
                           "  FROM sfdc_t ",
                           " WHERE sfdcent   = ",g_enterprise,
                           "   AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                           "   AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                           "   AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                           "   AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
               IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                  LET l_sql = l_sql CLIPPED,
                  "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"') ",
                  "       or (sfdc001,sfdc002,sfdc003) in ",
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"' ",
                  "           and sfba028 IS NULL)) "
               END IF
            ELSE
               LET l_sql = "SELECT COUNT(UNIQUE sfdc012) ",
                           "  FROM sfdc_t,sfba_t ",
                           " WHERE sfdcent   = sfbaent ",
                           "   AND sfdc001   = sfbadocno ",
                           "   AND sfdc002   = sfbaseq ",
                           "   AND sfdc003   = sfbaseq1 ",
                           "   AND sfdcent   = ",g_enterprise,
                           "   AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                           "   AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                           "   AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                           "   AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
               IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                  LET l_sql = l_sql CLIPPED," AND sfba028 = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
               END IF
            END IF
            IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
               LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
            ELSE
               LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
            END IF
            DECLARE asft310_input_sfdf_c1 SCROLL CURSOR FROM l_sql
            OPEN asft310_input_sfdf_c1
            FETCH asft310_input_sfdf_c1 INTO l_cnt
            CLOSE asft310_input_sfdf_c1
            IF l_cnt = 1 THEN
               IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
                  LET l_sql = "SELECT UNIQUE sfdc012 ",
                              "  FROM sfdc_t ",
                              " WHERE sfdcent   = ",g_enterprise,
                              "   AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                              "   AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                              "   AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                              "   AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
                  IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                     LET l_sql = l_sql CLIPPED,
                         "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                         "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                         "         where sfbaent  = ",g_enterprise,
                         "           and sfbasite = '",g_site,"') ",
                         "       or (sfdc001,sfdc002,sfdc003) in ",
                         "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                         "         where sfbaent  = ",g_enterprise,
                         "           and sfbasite = '",g_site,"' ",
                         "           and sfba028 IS NULL)) "
                  END IF
               ELSE
                  LET l_sql = "SELECT UNIQUE sfdc012 ",
                              "  FROM sfdc_t,sfba_t ",
                              " WHERE sfdcent   = sfbaent ",
                              "   AND sfdc001   = sfbadocno ",
                              "   AND sfdc002   = sfbaseq ",
                              "   AND sfdc003   = sfbaseq1 ",
                              "   AND sfdcent   = ",g_enterprise,
                              "   AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                              "   AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                              "   AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                              "   AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
                  IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                     LET l_sql = l_sql CLIPPED," AND sfba028 = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
                  END IF
               END IF
               IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
                  LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
               ELSE
                  LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
               END IF
               DECLARE asft310_input_sfdf_c11 SCROLL CURSOR FROM l_sql
               OPEN asft310_input_sfdf_c11
               FETCH asft310_input_sfdf_c11 INTO g_sfdf_d[l_ac].sfdf003
               CLOSE asft310_input_sfdf_c11
               CALL s_desc_get_stock_desc(g_site,g_sfdf_d[l_ac].sfdf003) RETURNING g_sfdf_d[l_ac].sfdf003_desc
            END IF
            #儲位：發料需求的指定儲位
            #检查sfdf对应的sfde中包含的sfdc里是否有指定"储位"为非空，且只有一个相同的指定"储位"，此时此栏位不允许输入只能默认
            IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
               LET l_sql = "SELECT COUNT(UNIQUE sfdc013) ",
                           "  FROM sfdc_t ",
                           " WHERE sfdcent   = ",g_enterprise,
                           "   AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                           "   AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                           "   AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                           "   AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
               IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                  LET l_sql = l_sql CLIPPED,
                      "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                      "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                      "         where sfbaent  = ",g_enterprise,
                      "           and sfbasite = '",g_site,"') ",
                      "       or (sfdc001,sfdc002,sfdc003) in ",
                      "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                      "         where sfbaent  = ",g_enterprise,
                      "           and sfbasite = '",g_site,"' ",
                      "           and sfba028 IS NULL)) "
               END IF
            ELSE
               LET l_sql = "SELECT COUNT(UNIQUE sfdc013) ",
                           "  FROM sfdc_t,sfba_t ",
                           " WHERE sfdcent   = sfbaent ",
                           "   AND sfdc001   = sfbadocno ",
                           "   AND sfdc002   = sfbaseq ",
                           "   AND sfdc003   = sfbaseq1 ",
                           "   AND sfdcent   = ",g_enterprise,
                           "   AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                           "   AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                           "   AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                           "   AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
               IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                  LET l_sql = l_sql CLIPPED," AND sfba028 = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
               END IF
            END IF
            IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
               LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
            ELSE
               LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
            END IF
            DECLARE asft310_input_sfdf_c2 SCROLL CURSOR FROM l_sql
            OPEN asft310_input_sfdf_c2
            FETCH asft310_input_sfdf_c2 INTO l_cnt
            CLOSE asft310_input_sfdf_c2
            IF l_cnt = 1 THEN
               IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
                  LET l_sql = "SELECT UNIQUE sfdc013 ",
                              "  FROM sfdc_t ",
                              " WHERE sfdcent   = ",g_enterprise,
                              "   AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                              "   AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                              "   AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                              "   AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
                  IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                     LET l_sql = l_sql CLIPPED,
                            "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                            "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                            "         where sfbaent  = ",g_enterprise,
                            "           and sfbasite = '",g_site,"') ",
                            "       or (sfdc001,sfdc002,sfdc003) in ",
                            "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                            "         where sfbaent  = ",g_enterprise,
                            "           and sfbasite = '",g_site,"' ",
                            "           and sfba028 IS NULL)) "
                  END IF
               ELSE
                  LET l_sql = "SELECT UNIQUE sfdc013 ",
                              "  FROM sfdc_t,sfba_t ",
                              " WHERE sfdcent   = sfbaent ",
                              "   AND sfdc001   = sfbadocno ",
                              "   AND sfdc002   = sfbaseq ",
                              "   AND sfdc003   = sfbaseq1 ",
                              "   AND sfdcent   = ",g_enterprise,
                              "   AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                              "   AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                              "   AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                              "   AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
                  IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                     LET l_sql = l_sql CLIPPED," AND sfba028 = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
                  END IF
               END IF
               IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
                  LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
               ELSE
                  LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
               END IF
               DECLARE asft310_input_sfdf_c21 SCROLL CURSOR FROM l_sql
               OPEN asft310_input_sfdf_c21
               FETCH asft310_input_sfdf_c21 INTO g_sfdf_d[l_ac].sfdf004
               CLOSE asft310_input_sfdf_c21
               CALL s_desc_get_locator_desc(g_site,g_sfdf_d[l_ac].sfdf003,g_sfdf_d[l_ac].sfdf004) RETURNING g_sfdf_d[l_ac].sfdf004_desc
            END IF
            #批號：發料需求的指定批號
            #检查sfdf对应的sfde中包含的sfdc里是否有指定"批号"为非空，且只有一个相同的指定"批号"，此时此栏位不允许输入只能默认
            IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
               LET l_sql = "SELECT COUNT(UNIQUE sfdc014) ",
                           "  FROM sfdc_t ",
                           " WHERE sfdcent   = ",g_enterprise,
                           "   AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                           "   AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                           "   AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                           "   AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
               IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                  LET l_sql = l_sql CLIPPED,
                      "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                      "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                      "         where sfbaent  = ",g_enterprise,
                      "           and sfbasite = '",g_site,"') ",
                      "       or (sfdc001,sfdc002,sfdc003) in ",
                      "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                      "         where sfbaent  = ",g_enterprise,
                      "           and sfbasite = '",g_site,"' ",
                      "           and sfba028 IS NULL)) "
               END IF
            ELSE
               LET l_sql = "SELECT COUNT(UNIQUE sfdc014) ",
                           "  FROM sfdc_t,sfba_t ",
                           " WHERE sfdcent   = sfbaent ",
                           "   AND sfdc001   = sfbadocno ",
                           "   AND sfdc002   = sfbaseq ",
                           "   AND sfdc003   = sfbaseq1 ",
                           "   AND sfdcent   = ",g_enterprise,
                           "   AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                           "   AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                           "   AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                           "   AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
               IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                  LET l_sql = l_sql CLIPPED," AND sfba028 = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
               END IF
            END IF
            IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
               LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
            ELSE
               LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
            END IF
            DECLARE asft310_input_sfdf_c3 SCROLL CURSOR FROM l_sql
            OPEN asft310_input_sfdf_c3
            FETCH asft310_input_sfdf_c3 INTO l_cnt
            CLOSE asft310_input_sfdf_c3
            IF l_cnt = 1 THEN
               IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
                  LET l_sql = "SELECT UNIQUE sfdc014 ",
                              "  FROM sfdc_t ",
                              " WHERE sfdcent   = ",g_enterprise,
                              "   AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                              "   AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                              "   AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                              "   AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
                  IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                     LET l_sql = l_sql CLIPPED,
                          "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                          "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                          "         where sfbaent  = ",g_enterprise,
                          "           and sfbasite = '",g_site,"') ",
                          "       or (sfdc001,sfdc002,sfdc003) in ",
                          "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                          "         where sfbaent  = ",g_enterprise,
                          "           and sfbasite = '",g_site,"' ",
                          "           and sfba028 IS NULL)) "
                  END IF
               ELSE
                  LET l_sql = "SELECT UNIQUE sfdc014 ",
                              "  FROM sfdc_t,sfba_t ",
                              " WHERE sfdcent   = sfbaent ",
                              "   AND sfdc001   = sfbadocno ",
                              "   AND sfdc002   = sfbaseq ",
                              "   AND sfdc003   = sfbaseq1 ",
                              "   AND sfdcent   = ",g_enterprise,
                              "   AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                              "   AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                              "   AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                              "   AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
                  IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                     LET l_sql = l_sql CLIPPED," AND sfba028 = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
                  END IF
               END IF
               IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
                  LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
               ELSE
                  LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
               END IF
               DECLARE asft310_input_sfdf_c31 SCROLL CURSOR FROM l_sql
               OPEN asft310_input_sfdf_c31
               FETCH asft310_input_sfdf_c31 INTO g_sfdf_d[l_ac].sfdf005
               CLOSE asft310_input_sfdf_c31
            END IF
            #庫存管理特徵：發料需求的庫存管理特徵
            #检查sfdf对应的sfde中包含的sfdc里是否有指定"库存管理特征"为非空，且只有一个相同的指定"库存管理特征"，此时此栏位不允许输入只能默认
            IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
               LET l_sql = "SELECT COUNT(UNIQUE sfdc016) ",
                           "  FROM sfdc_t ",
                           " WHERE sfdcent   = ",g_enterprise,
                           "   AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                           "   AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                           "   AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                           "   AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
               IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                  LET l_sql = l_sql CLIPPED,
                     "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                     "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                     "         where sfbaent  = ",g_enterprise,
                     "           and sfbasite = '",g_site,"') ",
                     "       or (sfdc001,sfdc002,sfdc003) in ",
                     "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                     "         where sfbaent  = ",g_enterprise,
                     "           and sfbasite = '",g_site,"' ",
                     "           and sfba028 IS NULL)) "
               END IF
            ELSE
               LET l_sql = "SELECT COUNT(UNIQUE sfdc016) ",
                           "  FROM sfdc_t,sfba_t ",
                           " WHERE sfdcent   = sfbaent ",
                           "   AND sfdc001   = sfbadocno ",
                           "   AND sfdc002   = sfbaseq ",
                           "   AND sfdc003   = sfbaseq1 ",
                           "   AND sfdcent   = ",g_enterprise,
                           "   AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                           "   AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                           "   AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                           "   AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
               IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                  LET l_sql = l_sql CLIPPED," AND sfba028 = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
               END IF
            END IF
            IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
               LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
            ELSE
               LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
            END IF
            DECLARE asft310_input_sfdf_c4 SCROLL CURSOR FROM l_sql
            OPEN asft310_input_sfdf_c4
            FETCH asft310_input_sfdf_c4 INTO l_cnt
            CLOSE asft310_input_sfdf_c4
            IF l_cnt = 1 THEN
               IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
                  LET l_sql = "SELECT UNIQUE sfdc016 ",
                              "  FROM sfdc_t ",
                              " WHERE sfdcent   = ",g_enterprise,
                              "   AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                              "   AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                              "   AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                              "   AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
                  IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                     LET l_sql = l_sql CLIPPED,
                          "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                          "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                          "         where sfbaent  = ",g_enterprise,
                          "           and sfbasite = '",g_site,"') ",
                          "       or (sfdc001,sfdc002,sfdc003) in ",
                          "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                          "         where sfbaent  = ",g_enterprise,
                          "           and sfbasite = '",g_site,"' ",
                          "           and sfba028 IS NULL)) "
                  END IF
               ELSE
                  LET l_sql = "SELECT UNIQUE sfdc016 ",
                              "  FROM sfdc_t,sfba_t ",
                              " WHERE sfdcent   = sfbaent ",
                              "   AND sfdc001   = sfbadocno ",
                              "   AND sfdc002   = sfbaseq ",
                              "   AND sfdc003   = sfbaseq1 ",
                              "   AND sfdcent   = ",g_enterprise,
                              "   AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",
                              "   AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",   #需求料号
                              "   AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",   #特征
                              "   AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "    #单位
                  IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                     LET l_sql = l_sql CLIPPED," AND sfba028 = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
                  END IF
               END IF
               IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
                  LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
               ELSE
                  LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
               END IF
               DECLARE asft310_input_sfdf_c41 SCROLL CURSOR FROM l_sql
               OPEN asft310_input_sfdf_c41
               FETCH asft310_input_sfdf_c41 INTO g_sfdf_d[l_ac].sfdf010
               CLOSE asft310_input_sfdf_c41
            END IF
            
            #单位：發料申請單身的單位
            LET g_sfdf_d[l_ac].sfdf006 = g_sfde_d[g_detail_idx].sfde003
            CALL s_desc_get_unit_desc(g_sfdf_d[l_ac].sfdf006) RETURNING g_sfdf_d[l_ac].sfdf006_desc
            #參考單位：發料申請單身的參考單位
            LET g_sfdf_d[l_ac].sfdf008 = g_sfde_d[g_detail_idx].sfde006
            CALL s_desc_get_unit_desc(g_sfdf_d[l_ac].sfdf008) RETURNING g_sfdf_d[l_ac].sfdf008_desc
            
            IF g_prog[1,6]='asft31' THEN
               LET g_sfdf_d[l_ac].sfdf012 = -1  #正负 发料-1
            END IF
            IF g_prog[1,6]='asft32' THEN
               LET g_sfdf_d[l_ac].sfdf012 =  1  #正负 退料1
            END IF
            
            CALL asft310_set_entry_b_sfdf(l_cmd)
            CALL asft310_set_no_entry_b_sfdf(l_cmd)
            #end add-point

         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac

            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx

            CALL s_transaction_begin()
            OPEN asft310_cl USING g_enterprise,g_sfda_m.sfdadocno
            #OPEN asft310_bcl3 USING g_enterprise, g_site,g_sfda_m.sfdadocno,g_sfde_d[g_detail_idx].sfdeseq
            #IF STATUS THEN
            #   INITIALIZE g_errparam TO NULL
            #   LET g_errparam.code =  STATUS
            #   LET g_errparam.extend = "OPEN asft310_cl:"
            #   LET g_errparam.popup = TRUE
            #   CALL cl_err()

            #   CLOSE asft310_cl
            #   CLOSE asft310_bcl3
            #   CALL s_transaction_end('N','0')
            #   RETURN
            #END IF

            #FETCH asft310_cl INTO g_sfda_m.sfdadocno,g_sfda_m.oobal004,g_sfda_m.sfdadocdt,g_sfda_m.sfda001,
            #    g_sfda_m.sfda002,g_sfda_m.sfda003,g_sfda_m.sfda003_desc,g_sfda_m.sfda004,g_sfda_m.sfda004_desc,
            #    g_sfda_m.sfda005,g_sfda_m.sfda015,g_sfda_m.sfda014,g_sfda_m.sfdastus,g_sfda_m.sfdaownid,g_sfda_m.sfdaownid_desc,g_sfda_m.sfdaowndp,
            #    g_sfda_m.sfdaowndp_desc,g_sfda_m.sfdacrtid,g_sfda_m.sfdacrtid_desc,g_sfda_m.sfdacrtdp,
            #    g_sfda_m.sfdacrtdp_desc,g_sfda_m.sfdacrtdt,g_sfda_m.sfdamodid,g_sfda_m.sfdamodid_desc,
            #    g_sfda_m.sfdamoddt,g_sfda_m.sfdacnfid,g_sfda_m.sfdacnfid_desc,g_sfda_m.sfdacnfdt,g_sfda_m.sfdapstid,
            #    g_sfda_m.sfdapstid_desc,g_sfda_m.sfdapstdt #鎖住將被更改或取消的資料
            #IF SQLCA.sqlcode THEN
            #   #CALL cl_err(g_sfda_m.sfdadocno,SQLCA.sqlcode,0)
            #   INITIALIZE g_errparam TO NULL
            #   LET g_errparam.code =  SQLCA.sqlcode
            #   LET g_errparam.extend = g_sfda_m.sfdadocno
            #   LET g_errparam.popup = FALSE
            #   CALL cl_err()
            #   CLOSE asft310_cl
            #   CALL s_transaction_end('N','0')
            #   RETURN
            #END IF

            LET g_rec_b = g_sfdf_d.getLength()

            IF g_rec_b >= l_ac
               AND g_sfdf_d[l_ac].sfdfseq1 IS NOT NULL
            THEN
               LET l_cmd='u'
               LET g_sfdf_d_t.* = g_sfdf_d[l_ac].*  #BACKUP
               LET g_sfdf_d_o.* = g_sfdf_d[l_ac].*  #BACKUP
               #add
               SELECT * INTO l_sfdf_t.* FROM sfdf_t
                WHERE sfdfent   = g_enterprise
                  AND sfdfdocno = g_sfda_m.sfdadocno
                  AND sfdfseq   = g_sfde_d[g_detail_idx].sfdeseq
                  AND sfdfseq1  = g_sfdf_d_t.sfdfseq1
               #add--ent
               #CALL asft310_set_entry_b_sfdf(l_cmd)
               #CALL asft310_set_no_entry_b_sfdf(l_cmd)
               IF NOT asft310_lock_b("sfdf_t","'5'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH asft310_bcl5 INTO g_sfdf_d[l_ac].sfdfseq1,g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf001_desc,
                      g_sfdf_d[l_ac].sfdf001_desc2,g_sfdf_d[l_ac].sfdf013,g_sfdf_d[l_ac].sfdf013_desc,g_sfdf_d[l_ac].sfdf002,g_sfdf_d[l_ac].sfdf003,
                      g_sfdf_d[l_ac].sfdf003_desc,g_sfdf_d[l_ac].sfdf004,g_sfdf_d[l_ac].sfdf004_desc,
                      g_sfdf_d[l_ac].sfdf005,g_sfdf_d[l_ac].sfdf010,g_sfdf_d[l_ac].sfdf006,g_sfdf_d[l_ac].sfdf006_desc,
                      g_sfdf_d[l_ac].sfdf007,g_sfdf_d[l_ac].sfdf008,g_sfdf_d[l_ac].sfdf008_desc,g_sfdf_d[l_ac].sfdf009,
                      g_sfdf_d[l_ac].sfdf011,g_sfdf_d[l_ac].sfdf012
                   IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #mod 150121
                  #LET g_bfill = "N"
                  #CALL asft310_show()
                  #LET g_bfill = "Y"
                  CALL asft310_b_show('sfdf',l_ac)
                  #mod 150121 end

                  CALL cl_show_fld_cont()
               END IF
               
               #mark 141211
               ##库位为空，不允许输入,需求申请人需先到指定库位
               #IF cl_null(g_sfdf_d[l_ac].sfdf003) THEN #库位
               #   #缺少库位信息，请先指定库位
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code = 'asf-00185'
               #   LET g_errparam.extend = ''
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   LET l_flag = 'c'
               #   LET l_ac = g_detail_idx
               #   CALL s_transaction_end('N','0')
               #   CONTINUE WHILE
               #END IF
               #mark 141211 end

               CALL asft310_set_entry_b_sfdf(l_cmd)
               CALL asft310_set_no_entry_b_sfdf(l_cmd)
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row

            #end add-point
            #其他table資料備份(確定是否更改用)

            #其他table進行lock


         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_sfdf_d.deleteElement(l_ac)
               NEXT FIELD sfdfseq1
            END IF
            IF g_sfdf_d_t.sfdfseq1 IS NOT NULL THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF
              
               DELETE FROM sfdf_t
                WHERE sfdfent  = g_enterprise
                  AND sfdfdocno= g_sfda_m.sfdadocno
                  AND sfdfseq  = g_sfde_d[g_detail_idx].sfdeseq
                  #AND sfdfseq1 = g_sfdf_d[g_detail_idx2].sfdfseq1
                  AND sfdfseq1 = g_sfdf_d_t.sfdfseq1
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "sfdb_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  #CALL s_transaction_end('N','0')
                  #CANCEL DELETE
                  CALL s_transaction_end('N','0')  #需要有事务，如果没有事务，直接cancel delete ，回到单身状态就不在事务中了
                  LET l_flag = 'f'  #取消cancel的做法，本次事务回滚，重新走INPUT进入，回到当前笔状态
                  CLOSE asft310_bcl5 #重新进入单身需要先关闭游标
                  CONTINUE WHILE
               ELSE
                  #add-point:單身2刪除後


                  #回写sfde的实际数量，参考单位实际数量
                  CALL s_asft310_chg_sfde_f_sfdf_del('N',l_sfdf_t.*) RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
                  #处理sfdd,sfdc
                  CALL s_asft310_chg_sfdd_f_sfdf_del('N',l_sfdf_t.*) RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
                  
                  IF NOT l_success_tot THEN
                     CALL s_transaction_end('N','0')  #需要有事务，如果没有事务，直接cancel delete ，回到单身状态就不在事务中了
                     #CANCEL DELETE
                     LET l_flag = 'f'   #取消cancel的做法，本次事务回滚，重新走INPUT进入，回到当前笔状态
                     CLOSE asft310_bcl5 #重新进入单身需要先关闭游标
                     CONTINUE WHILE
                  ELSE
                     LET g_rec_b = g_rec_b-1
                     CALL s_transaction_end('Y','0')
                  END IF 
                  #end add-point
               END IF
               CLOSE asft310_bcl5
               LET l_count = g_sfdb_d.getLength()
            END IF

            #INITIALIZE gs_keys TO NULL
            #LET gs_keys[1] = g_sfda_m.sfdadocno
            #LET gs_keys[2] = g_sfde_d[g_detail_idx].sfdeseq
            #LET gs_keys[3] = g_sfdf_d[g_detail_idx2].sfdfseq1


         AFTER DELETE
            #IF asft310_delete_b('sfdf_t',gs_keys,"'5'") THEN
            #END IF

         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF

            #重复性检查
            IF NOT asft310_chk_sfdf_unique() THEN
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF

            #检查库位、储位、批号的范围，是否在需求指定发料库位、储位、批号允许的数量内
            #检查储位、批号是否满足需求指定范围
            IF NOT asft310_chk_ware_range('ALL') THEN
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
            #检查储位、批号数量是否超出需求指定范围内的数量
            IF NOT asft310_chk_ware_range_qty('ALL') THEN
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF

            LET l_count = 1
            SELECT COUNT(*) INTO l_count FROM sfdf_t
             WHERE sfdfent = g_enterprise AND sfdfsite = g_site AND sfdfdocno = g_sfda_m.sfdadocno AND
                 sfdfseq = g_sfde_d[g_detail_idx].sfdeseq AND sfdfseq1 = g_sfdf_d[g_detail_idx2].sfdfseq1
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN
               INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_sfda_m.sfdadocno
               LET gs_keys[2] = g_sfde_d[g_detail_idx].sfdeseq
               LET gs_keys[3] = g_sfdf_d[g_detail_idx2].sfdfseq1
               CALL asft310_insert_b('sfdf_t',gs_keys,"'5'")
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_sfdb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF

            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "sfdf_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CANCEL INSERT
            ELSE
               #add
               LET l_success_tot = TRUE
               
               #更新sfde
               CALL s_asft310_chg_sfde_f_sfdf_ins(g_sfda_m.sfdadocno,g_sfde_d[g_detail_idx].sfdeseq,g_sfdf_d[g_detail_idx2].sfdfseq1) RETURNING l_success
               IF NOT l_success THEN
                  LET l_success_tot = FALSE
               END IF
               #处理sfdd与dfdc：sfdd与sfdf总数应该平的
               CALL s_asft310_chg_sfdd_f_sfdf_ins(g_sfda_m.sfdadocno,g_sfde_d[g_detail_idx].sfdeseq,g_sfdf_d[g_detail_idx2].sfdfseq1) RETURNING l_success
               IF NOT l_success THEN
                  LET l_success_tot = FALSE
               END IF
               
               IF NOT l_success_tot THEN
                  CALL s_transaction_end('N','0')
                  CANCEL INSERT
               END IF
               #add--end
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF

         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_sfdf_d[l_ac].* = g_sfdf_d_t.*
               CLOSE asft310_bcl5
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            #检查库位、储位、批号的范围，是否在需求指定发料库位、储位、批号允许的数量内
            #检查储位、批号是否满足需求指定范围
            IF NOT asft310_chk_ware_range('ALL') THEN
               NEXT FIELD sfdf004  #储位
            END IF
            #检查储位、批号数量是否超出需求指定范围内的数量
            IF NOT asft310_chk_ware_range_qty('ALL') THEN
               NEXT FIELD sfdf004  #储位
            END IF

            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_sfdf_d[l_ac].* = g_sfdf_d_t.*
            ELSE
               #寫入修改者/修改日期資訊(單身5)

               IF cl_null(g_sfdf_d[l_ac].sfdf013) THEN LET g_sfdf_d[l_ac].sfdf013 = ' ' END IF #产品特征
               IF cl_null(g_sfdf_d[l_ac].sfdf003) THEN LET g_sfdf_d[l_ac].sfdf003 = ' ' END IF
               IF cl_null(g_sfdf_d[l_ac].sfdf004) THEN LET g_sfdf_d[l_ac].sfdf004 = ' ' END IF
               IF cl_null(g_sfdf_d[l_ac].sfdf005) THEN LET g_sfdf_d[l_ac].sfdf005 = ' ' END IF
               IF cl_null(g_sfdf_d[l_ac].sfdf010) THEN LET g_sfdf_d[l_ac].sfdf010 = ' ' END IF
               IF cl_null(g_sfdf_d[l_ac].sfdf009) THEN LET g_sfdf_d[l_ac].sfdf009 = 0 END IF #参考单位数量
               
               #add 150115 单位取位
               IF NOT cl_null(g_sfdf_d[l_ac].sfdf006) THEN
                  CALL s_aooi250_get_msg(g_sfdf_d[l_ac].sfdf006) RETURNING l_success,g_ooca002,g_ooca004
                  IF l_success THEN
                     CALL s_num_round(g_ooca004,g_sfdf_d[l_ac].sfdf007,g_ooca002) RETURNING g_sfdf_d[l_ac].sfdf007
                  END IF
               END IF
               IF NOT cl_null(g_sfdf_d[l_ac].sfdf008) THEN
                  CALL s_aooi250_get_msg(g_sfdf_d[l_ac].sfdf008) RETURNING l_success,g_ooca002,g_ooca004
                  IF l_success THEN
                     CALL s_num_round(g_ooca004,g_sfdf_d[l_ac].sfdf009,g_ooca002) RETURNING g_sfdf_d[l_ac].sfdf009
                  END IF
               END IF
               #add 150115 end
               
               UPDATE sfdf_t SET (sfdfdocno,sfdfseq,sfdfseq1,sfdf001,sfdf013,sfdf002,sfdf003,sfdf004,sfdf005,
                   sfdf010,sfdf006,sfdf007,sfdf008,sfdf009,sfdf011,sfdf012) = (g_sfda_m.sfdadocno,g_sfde_d[g_detail_idx].sfdeseq,
                   g_sfdf_d[l_ac].sfdfseq1,g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf013,g_sfdf_d[l_ac].sfdf002,g_sfdf_d[l_ac].sfdf003,
                   g_sfdf_d[l_ac].sfdf004,g_sfdf_d[l_ac].sfdf005,g_sfdf_d[l_ac].sfdf010,g_sfdf_d[l_ac].sfdf006,
                   g_sfdf_d[l_ac].sfdf007,g_sfdf_d[l_ac].sfdf008,g_sfdf_d[l_ac].sfdf009,g_sfdf_d[l_ac].sfdf011,
                   g_sfdf_d[l_ac].sfdf012) #自訂欄位頁簽
                WHERE sfdfent = g_enterprise AND sfdfsite = g_site AND sfdfdocno = g_sfdadocno_t AND
                    sfdfseq = g_sfde_d[g_detail_idx].sfdeseq AND sfdfseq1 = g_sfdf_d_t.sfdfseq1
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "sfdf_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_sfdf_d[l_ac].* = g_sfdf_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "sfdf_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_sfdf_d[l_ac].* = g_sfdf_d_t.*
                  #OTHERWISE
                  #   INITIALIZE gs_keys TO NULL
                  #   LET gs_keys[1] = g_sfda_m.sfdadocno
                  #   LET gs_keys_bak[1] = g_sfdadocno_t
                  #   LET gs_keys[2] = g_sfde_d[g_detail_idx].sfdeseq
                  #   LET gs_keys_bak[2] = g_sfde_d[g_detail_idx].sfdeseq
                  #   LET gs_keys[3] = g_sfdf_d[g_detail_idx2].sfdfseq1
                  #   LET gs_keys_bak[3] = g_sfdf_d_t.sfdfseq1
                  #   CALL asft310_update_b('sfdf_t',gs_keys,gs_keys_bak,"'5'")
                  #   #資料多語言用-增/改
               END CASE
               #add-point:單身修改後
               #关联表处理
               IF g_intrans = 'Y' THEN  #若事务还没走rollback则(上面没有走commit)
                  LET l_success_tot = TRUE

                  SELECT * INTO l_sfdf.* FROM sfdf_t
                   WHERE sfdfent   = g_enterprise
                     AND sfdfdocno = g_sfda_m.sfdadocno
                     AND sfdfseq   = g_sfde_d[g_detail_idx].sfdeseq
                     AND sfdfseq1  = g_sfdf_d[g_detail_idx2].sfdfseq1
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = 'sel sfdf'
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_success_tot = FALSE
                  END IF
                  #处理sfde
                  CALL s_asft310_chg_sfde_f_sfdf_upd(l_sfdf_t.*,l_sfdf.*) RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
                  #处理sfdd,sfdc
                  CALL s_asft310_chg_sfdd_f_sfdf_upd(l_sfdf_t.*,l_sfdf.*) RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
                  
                  IF NOT l_success_tot THEN
                     CALL s_transaction_end('N','0')
                     LET g_sfdf_d[l_ac].* = g_sfdf_d_t.*
                  END IF
               END IF
               #end add-point
            END IF

         AFTER FIELD sfdfseq1
            IF  g_sfda_m.sfdadocno IS NOT NULL AND g_sfde_d[g_detail_idx].sfdeseq IS NOT NULL AND g_sfdf_d[g_detail_idx2].sfdfseq1 IS NOT NULL THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfda_m.sfdadocno != g_sfdadocno_t OR g_sfde_d[g_detail_idx].sfdeseq != g_sfde_d[g_detail_idx].sfdeseq OR g_sfdf_d[g_detail_idx2].sfdfseq1 != g_sfdf_d_t.sfdfseq1)) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfdf_t WHERE "||"sfdfent = '" ||g_enterprise|| "' AND sfdfsite = '" ||g_site|| "' AND "||"sfdfdocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "sfdfseq = '"||g_sfde_d[g_detail_idx].sfdeseq ||"' AND "|| "sfdfseq1 = '"||g_sfdf_d[g_detail_idx2].sfdfseq1 ||"'",'std-00004',0) THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_sfdf_d[l_ac].sfdfseq1) THEN
               IF g_sfdf_d[l_ac].sfdfseq1 < 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00002'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET g_sfdf_d[l_ac].sfdfseq1 = g_sfdf_d_t.sfdfseq1
            END IF
            
            LET g_sfdf_d_o.sfdfseq1 = g_sfdf_d[l_ac].sfdfseq1

         AFTER FIELD sfdf003
            #储位
            #不可输入的栏位不做检查，以防死循环（工單指定的時候庫存不一定有了，可能是還在在製的東西，等庫存有了就能發了）
            IF g_sfdf003_switch = 'Y' THEN
               IF cl_null(g_sfdf_d[l_ac].sfdf003) THEN
                  LET g_sfdf_d[l_ac].sfdf003_desc = ''
                  DISPLAY BY NAME g_sfdf_d[l_ac].sfdf003_desc
               END IF
               IF NOT cl_null(g_sfdf_d[l_ac].sfdf003) AND (g_sfdf_d_t.sfdf003 IS NULL OR g_sfdf_d[l_ac].sfdf003 != g_sfdf_d_t.sfdf003) THEN
                  #相同项目重复性检查
                  IF NOT asft310_chk_sfdf_unique() THEN
                     NEXT FIELD CURRENT
                  END IF
                  #检查库位、储位、批号的范围，是否在需求指定发料库位、储位、批号允许的数量内
                  #检查储位是否满足需求指定储位
                  IF NOT asft310_chk_ware_range('sfdf003') THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF NOT cl_null(g_sfdf_d[l_ac].sfdf003) AND NOT cl_null(g_sfdf_d[l_ac].sfdf004) THEN
                  #校验带值说明
                  CALL asft310_chk_loca(g_sfdf_d[l_ac].sfdf003,g_sfdf_d[l_ac].sfdf004)
                     RETURNING l_success,g_sfdf_d[l_ac].sfdf004_desc
                  IF NOT l_success THEN
                     LET g_sfdf_d[l_ac].sfdf003 = g_sfdf_d_t.sfdf003
                     NEXT FIELD CURRENT
                  END IF
                  DISPLAY BY NAME g_sfdf_d[l_ac].sfdf004_desc
               
                  #檢核輸入的庫位是否在單據別限制範圍內，若不在限制內則不允許使用此庫位
                  CALL s_control_chk_doc('6',g_sfda_m.sfdadocno,g_sfdf_d[l_ac].sfdf003,g_sfdf_d[l_ac].sfdf004,'','','')
                     RETURNING l_success,l_flag2
                  IF NOT l_success OR NOT l_flag2 THEN
                     #控制组检查错误,请检查单别设定的相关内容
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00122'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_sfdf_d[l_ac].sfdf003 = g_sfdf_d_t.sfdf003
                     NEXT FIELD CURRENT
                  END IF
               
                  #发料单做在捡量的检查
                  IF g_prog[1,6]='asft31' AND NOT cl_null(g_sfdf_d[l_ac].sfdf007) AND NOT cl_null(g_sfdf_d[l_ac].sfdf003) THEN  #在捡数量 库位
                     IF cl_null(g_sfdf_d[l_ac].sfdf010) THEN LET g_sfdf_d[l_ac].sfdf010= ' ' END IF  #库存管理特征
                     IF cl_null(g_sfdf_d[l_ac].sfdf004) THEN LET g_sfdf_d[l_ac].sfdf004= ' ' END IF  #储位
                     IF cl_null(g_sfdf_d[l_ac].sfdf005) THEN LET g_sfdf_d[l_ac].sfdf005= ' ' END IF  #批号
                     #指定庫位、儲位、批號時，判斷參數是否檢查在檢量，如需檢查在檢量，在庫存數-在檢數不足申請數量時不允許輸入
                     #                           据点   料件编号                产品特征                库存管理特征
                     CALL s_inventory_check_inan(g_site,g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf013,g_sfdf_d[l_ac].sfdf010,
                     #                           库位                   储位                    批号
                                                 g_sfdf_d[l_ac].sfdf003,g_sfdf_d[l_ac].sfdf004,g_sfdf_d[l_ac].sfdf005,
                     #                           交易单位                在捡数量
                                                 g_sfdf_d[l_ac].sfdf006,g_sfdf_d[l_ac].sfdf007,
                     #                           单据编号            项次                           项序
                                                 g_sfda_m.sfdadocno,g_sfde_d[g_detail_idx].sfdeseq,g_sfdf_d[l_ac].sfdfseq1)
                          RETURNING l_success,l_flag
                     IF NOT l_flag THEN
                        LET g_sfdf_d[l_ac].sfdf003 = g_sfdf_d_t.sfdf003
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            LET g_sfdf_d_o.sfdf003 = g_sfdf_d[l_ac].sfdf003
         
         AFTER FIELD sfdf004
            #储位
            #不可输入的栏位不做检查，以防死循环（工單指定的時候庫存不一定有了，可能是還在在製的東西，等庫存有了就能發了）
            IF g_sfdf004_switch = 'Y' THEN
               IF cl_null(g_sfdf_d[l_ac].sfdf004) THEN
                  LET g_sfdf_d[l_ac].sfdf004_desc = ''
                  DISPLAY BY NAME g_sfdf_d[l_ac].sfdf004_desc
               END IF
               IF NOT cl_null(g_sfdf_d[l_ac].sfdf003) AND NOT cl_null(g_sfdf_d[l_ac].sfdf004) THEN
                  #校验带值说明
                  CALL asft310_chk_loca(g_sfdf_d[l_ac].sfdf003,g_sfdf_d[l_ac].sfdf004)
                     RETURNING l_success,g_sfdf_d[l_ac].sfdf004_desc
                  IF NOT l_success THEN
                     LET g_sfdf_d[l_ac].sfdf004 = g_sfdf_d_t.sfdf004
                     NEXT FIELD CURRENT
                  END IF
                  DISPLAY BY NAME g_sfdf_d[l_ac].sfdf004_desc
               
                  #檢核輸入的庫位是否在單據別限制範圍內，若不在限制內則不允許使用此庫位
                  CALL s_control_chk_doc('6',g_sfda_m.sfdadocno,g_sfdf_d[l_ac].sfdf003,g_sfdf_d[l_ac].sfdf004,'','','')
                     RETURNING l_success,l_flag2
                  IF NOT l_success OR NOT l_flag2 THEN
                     #控制组检查错误,请检查单别设定的相关内容
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00122'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_sfdf_d[l_ac].sfdf004 = g_sfdf_d_t.sfdf004
                     NEXT FIELD CURRENT
                  END IF
               
                  #发料单做在捡量的检查
                  IF g_prog[1,6]='asft31' AND NOT cl_null(g_sfdf_d[l_ac].sfdf007) AND NOT cl_null(g_sfdf_d[l_ac].sfdf003) THEN  #在捡数量 库位
                     IF cl_null(g_sfdf_d[l_ac].sfdf010) THEN LET g_sfdf_d[l_ac].sfdf010= ' ' END IF  #库存管理特征
                     IF cl_null(g_sfdf_d[l_ac].sfdf004) THEN LET g_sfdf_d[l_ac].sfdf004= ' ' END IF  #储位
                     IF cl_null(g_sfdf_d[l_ac].sfdf005) THEN LET g_sfdf_d[l_ac].sfdf005= ' ' END IF  #批号
                     #指定庫位、儲位、批號時，判斷參數是否檢查在檢量，如需檢查在檢量，在庫存數-在檢數不足申請數量時不允許輸入
                     #                           据点   料件编号                产品特征                库存管理特征
                     CALL s_inventory_check_inan(g_site,g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf013,g_sfdf_d[l_ac].sfdf010,
                     #                           库位                   储位                    批号
                                                 g_sfdf_d[l_ac].sfdf003,g_sfdf_d[l_ac].sfdf004,g_sfdf_d[l_ac].sfdf005,
                     #                           交易单位                在捡数量
                                                 g_sfdf_d[l_ac].sfdf006,g_sfdf_d[l_ac].sfdf007,
                     #                           单据编号            项次                           项序
                                                 g_sfda_m.sfdadocno,g_sfde_d[g_detail_idx].sfdeseq,g_sfdf_d[l_ac].sfdfseq1)
                          RETURNING l_success,l_flag
                     IF NOT l_flag THEN
                        LET g_sfdf_d[l_ac].sfdf004 = g_sfdf_d_t.sfdf004
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               IF NOT cl_null(g_sfdf_d[l_ac].sfdf004) AND (g_sfdf_d_t.sfdf004 IS NULL OR g_sfdf_d[l_ac].sfdf004 != g_sfdf_d_t.sfdf004) THEN
                  #相同项目重复性检查
                  IF NOT asft310_chk_sfdf_unique() THEN
                     NEXT FIELD CURRENT
                  END IF
                  #检查库位、储位、批号的范围，是否在需求指定发料库位、储位、批号允许的数量内
                  #检查储位是否满足需求指定储位
                  IF NOT asft310_chk_ware_range('sfdf004') THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_sfdf_d_o.sfdf004 = g_sfdf_d[l_ac].sfdf004

         AFTER FIELD sfdf005
            #批号
            #不可输入的栏位不做检查，以防死循环（工單指定的時候庫存不一定有了，可能是還在在製的東西，等庫存有了就能發了）
            IF g_sfdf005_switch = 'Y' THEN
               IF NOT cl_null(g_sfdf_d[l_ac].sfdf005) AND (g_sfdf_d_t.sfdf005 IS NULL OR g_sfdf_d[l_ac].sfdf005 != g_sfdf_d_t.sfdf005) THEN
                  #相同项目重复性检查
                  IF NOT asft310_chk_sfdf_unique() THEN
                     NEXT FIELD CURRENT
                  END IF
                  #检查库位、储位、批号的范围，是否在需求指定发料库位、储位、批号允许的数量内
                  #检查批号是否满足需求指定批号
                  IF NOT asft310_chk_ware_range('sfdf005') THEN
                     NEXT FIELD CURRENT
                  END IF
                  
                  #发料单做在捡量的检查
                  IF g_prog[1,6]='asft31' AND NOT cl_null(g_sfdf_d[l_ac].sfdf007) AND NOT cl_null(g_sfdf_d[l_ac].sfdf003) THEN  #在捡数量 库位
                     IF cl_null(g_sfdf_d[l_ac].sfdf010) THEN LET g_sfdf_d[l_ac].sfdf010= ' ' END IF  #库存管理特征
                     IF cl_null(g_sfdf_d[l_ac].sfdf004) THEN LET g_sfdf_d[l_ac].sfdf004= ' ' END IF  #储位
                     IF cl_null(g_sfdf_d[l_ac].sfdf005) THEN LET g_sfdf_d[l_ac].sfdf005= ' ' END IF  #批号
                     #指定庫位、儲位、批號時，判斷參數是否檢查在檢量，如需檢查在檢量，在庫存數-在檢數不足申請數量時不允許輸入
                     #                           据点   料件编号                产品特征                库存管理特征
                     CALL s_inventory_check_inan(g_site,g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf013,g_sfdf_d[l_ac].sfdf010,
                     #                           库位                   储位                    批号
                                                 g_sfdf_d[l_ac].sfdf003,g_sfdf_d[l_ac].sfdf004,g_sfdf_d[l_ac].sfdf005,
                     #                           交易单位                在捡数量
                                                 g_sfdf_d[l_ac].sfdf006,g_sfdf_d[l_ac].sfdf007,
                     #                           单据编号            项次                           项序
                                                 g_sfda_m.sfdadocno,g_sfde_d[g_detail_idx].sfdeseq,g_sfdf_d[l_ac].sfdfseq1)
                          RETURNING l_success,l_flag
                     IF NOT l_flag THEN
                        LET g_sfdf_d[l_ac].sfdf005 = g_sfdf_d_t.sfdf005
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            LET g_sfdf_d_o.sfdf005 = g_sfdf_d[l_ac].sfdf005
            
         AFTER FIELD sfdf010
            #库存管理特征
            #不可输入的栏位不做检查，以防死循环（工單指定的時候庫存不一定有了，可能是還在在製的東西，等庫存有了就能發了）
            IF g_sfdf010_switch = 'Y' THEN
               IF NOT cl_null(g_sfdf_d[l_ac].sfdf010) THEN
                  SELECT COUNT(*) INTO l_cnt FROM inag_t
                   WHERE inagent  = g_enterprise
                     AND inagsite = g_site
                     AND inag001  = g_sfdc_d[l_ac].sfdc001  #料件
                     AND inag002  = g_sfde_d[g_detail_idx].sfde002  #产品特征
                     AND inag003  = g_sfdf_d[l_ac].sfdf010  #库存管理特征
                  IF l_cnt = 0 THEN
                     #无此库存管理特征，请检查库存资料后从新输入
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00117'
                     LET g_errparam.extend = '' #g_sfdc_d[l_ac].sfdc001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
               
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF NOT cl_null(g_sfdf_d[l_ac].sfdf010) AND (g_sfdf_d_t.sfdf010 IS NULL OR g_sfdf_d[l_ac].sfdf010 != g_sfdf_d_t.sfdf010) THEN
                  IF NOT asft310_chk_sfdf_unique() THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_sfdf_d_o.sfdf010 = g_sfdf_d[l_ac].sfdf010

         AFTER FIELD sfdf006
            #单位
            IF NOT cl_null(g_sfdf_d[l_ac].sfdf006) THEN
               #校验带值说明
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfdf_d[l_ac].sfdf006
               IF cl_chk_exist_and_ref_val("v_ooca001_1") THEN
                  #檢查成功時後續處理
                  LET g_sfdf_d[l_ac].sfdf006_desc = g_chkparam.return1
                  DISPLAY BY NAME g_sfdf_d[l_ac].sfdf006_desc
               ELSE
                  #檢查失敗時後續處理
                  LET g_sfdf_d[l_ac].sfdf006 = g_sfdf_d_t.sfdf006
                  NEXT FIELD CURRENT
               END IF

               #單位需與發料料號的基礎單位有轉換率
               CALL s_aimi190_chk_base_convert(g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf006) RETURNING l_success
               IF NOT l_success THEN
                  NEXT FIELD CURRENT
               END IF

               #预设参考数量=數量*單位轉換率
               IF NOT cl_null(g_sfdf_d[l_ac].sfdf007) AND NOT cl_null(g_sfdf_d[l_ac].sfdf008) THEN
                  #参考单位申请数量=申请数量经过转换率换算为参考单位的数量
                  #mod 150101
                  #CALL s_aimi190_get_convert(g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf006,g_sfdf_d[l_ac].sfdf008) RETURNING l_success,l_rate
                  #IF NOT l_success THEN
                  #   LET l_rate = 1
                  #END IF
                  #LET g_sfdf_d[l_ac].sfdf009 = g_sfdf_d[l_ac].sfdf007 * l_rate
                  CALL s_aooi250_convert_qty(g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf006,g_sfdf_d[l_ac].sfdf008,g_sfdf_d[l_ac].sfdf007)
                     RETURNING l_success,g_sfdf_d[l_ac].sfdf009
                  IF NOT l_success THEN
                     LET g_sfdf_d[l_ac].sfdf009 = g_sfdf_d[l_ac].sfdf007
                  END IF
                  #mod 150101 end
               ELSE
                  LET g_sfdf_d[l_ac].sfdf009 = 0
               END IF
               
               #计算sfdf002替代率
               IF NOT cl_null(g_sfdf_d_t.sfdf006) AND g_sfdf_d[l_ac].sfdf006 != g_sfdf_d_t.sfdf006 THEN
                  #若是替代料，则不允许修改单位，因为无法指定到主件，因此无法计算替代率
                  IF g_sfdf_d[l_ac].sfdf001 != g_sfde_d[g_detail_idx].sfde001 OR g_sfdf_d[l_ac].sfdf013 != g_sfde_d[g_detail_idx].sfde002 THEN
                     #汇总发退料时，若使用取替代料，不可修改单位；若确实需要修改单位元，请至“发料明细”页签进行修改
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00136'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_sfdf_d[l_ac].sfdf006 = g_sfdf_d_t.sfdf006
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            IF NOT cl_null(g_sfdf_d[l_ac].sfdf006) AND (g_sfdf_d_t.sfdf006 IS NULL OR g_sfdf_d[l_ac].sfdf006 != g_sfdf_d_t.sfdf006) THEN
               #相同项目重复性检查
               IF NOT asft310_chk_sfdf_unique() THEN
                  NEXT FIELD CURRENT
               END IF
            END IF
            LET g_sfdf_d_o.sfdf006 = g_sfdf_d[l_ac].sfdf006

         AFTER FIELD sfdf007
            #数量
            #add 150115 单位取位
            IF NOT cl_null(g_sfdf_d[l_ac].sfdf006) AND NOT cl_null(g_sfdf_d[l_ac].sfdf007) THEN
               CALL s_aooi250_get_msg(g_sfdf_d[l_ac].sfdf006) RETURNING l_success,g_ooca002,g_ooca004
               IF l_success THEN
                  CALL s_num_round(g_ooca004,g_sfdf_d[l_ac].sfdf007,g_ooca002) RETURNING g_sfdf_d[l_ac].sfdf007
                  DISPLAY BY NAME g_sfdf_d[l_ac].sfdf007
               END IF
            END IF
            #add 150115 end
            
            #mod 141211
            ##不可小于等于0
            #IF NOT cl_ap_chk_Range(g_sfdf_d[l_ac].sfdf007,"0.000","0","","","azz-00079",1) THEN
            #   NEXT FIELD sfdf007
            #END IF
            IF g_sfda_m.sfda002[1,1]='1' THEN #發料單
               #不可小于0，可以等于0 因为到倉庫那確實沒有庫存，那實際量就0，其他的有庫存還是要發
               IF NOT cl_null(g_sfdf_d[l_ac].sfdf007) AND g_sfdf_d[l_ac].sfdf007 < 0 THEN
                  #數量不可小於0
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00041'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
            ELSE #退料单
               #不可小于等于0
               IF NOT cl_ap_chk_Range(g_sfdf_d[l_ac].sfdf007,"0.000","0","","","azz-00079",1) THEN
                  NEXT FIELD sfdf007
               END IF
            END IF
            #mod 141211-end

            IF NOT cl_null(g_sfdf_d[l_ac].sfdf007) AND (g_sfdf_d_t.sfdf007 IS NULL OR g_sfdf_d[l_ac].sfdf007 != g_sfdf_d_t.sfdf007) THEN
               #检查库位、储位、批号的范围，是否在需求指定发料库位、储位、批号允许的数量内
               IF NOT asft310_chk_ware_range_qty('sfdf007') THEN
                  NEXT FIELD CURRENT
               END IF
            END IF
            
            IF NOT cl_null(g_sfdf_d[l_ac].sfdf007) THEN
               #數量總數不可超過申請數量
               CALL asft310_chk_sfdf_amt(l_cmd,'sfdf007') RETURNING l_success
               IF NOT l_success THEN
                  NEXT FIELD CURRENT
               END IF
               
               #发料单做在捡量的检查
               IF g_prog[1,6]='asft31' AND NOT cl_null(g_sfdf_d[l_ac].sfdf007) AND NOT cl_null(g_sfdf_d[l_ac].sfdf003) THEN  #在捡数量 库位
                  IF cl_null(g_sfdf_d[l_ac].sfdf010) THEN LET g_sfdf_d[l_ac].sfdf010= ' ' END IF  #库存管理特征
                  IF cl_null(g_sfdf_d[l_ac].sfdf004) THEN LET g_sfdf_d[l_ac].sfdf004= ' ' END IF  #储位
                  IF cl_null(g_sfdf_d[l_ac].sfdf005) THEN LET g_sfdf_d[l_ac].sfdf005= ' ' END IF  #批号
                  #指定庫位、儲位、批號時，判斷參數是否檢查在檢量，如需檢查在檢量，在庫存數-在檢數不足申請數量時不允許輸入
                  #                           据点   料件编号                产品特征                库存管理特征
                  CALL s_inventory_check_inan(g_site,g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf013,g_sfdf_d[l_ac].sfdf010,
                  #                           库位                   储位                    批号
                                              g_sfdf_d[l_ac].sfdf003,g_sfdf_d[l_ac].sfdf004,g_sfdf_d[l_ac].sfdf005,
                  #                           交易单位                在捡数量
                                              g_sfdf_d[l_ac].sfdf006,g_sfdf_d[l_ac].sfdf007,
                  #                           单据编号            项次                           项序
                                              g_sfda_m.sfdadocno,g_sfde_d[g_detail_idx].sfdeseq,g_sfdf_d[l_ac].sfdfseq1)
                       RETURNING l_success,l_flag
                  IF NOT l_flag THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF

               #预设参考数量=數量*單位轉換率
               IF NOT cl_null(g_sfdf_d[l_ac].sfdf006) AND NOT cl_null(g_sfdf_d[l_ac].sfdf008) THEN
                  #参考单位申请数量=申请数量经过转换率换算为参考单位的数量
                  #mod 150101
                  #CALL s_aimi190_get_convert(g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf006,g_sfdf_d[l_ac].sfdf008) RETURNING l_success,l_rate
                  #IF NOT l_success THEN
                  #   LET l_rate = 1
                  #END IF
                  #LET g_sfdf_d[l_ac].sfdf009 = g_sfdf_d[l_ac].sfdf007 * l_rate
                  CALL s_aooi250_convert_qty(g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf006,g_sfdf_d[l_ac].sfdf008,g_sfdf_d[l_ac].sfdf007)
                     RETURNING l_success,g_sfdf_d[l_ac].sfdf009
                  IF NOT l_success THEN
                     LET g_sfdf_d[l_ac].sfdf009 = g_sfdf_d[l_ac].sfdf007
                  END IF
                  #mod 150101 end
               ELSE
                  LET g_sfdf_d[l_ac].sfdf009 = 0
               END IF
            END IF
            LET g_sfdf_d_o.sfdf007 = g_sfdf_d[l_ac].sfdf007

         AFTER FIELD sfdf008
            #参考单位
            IF NOT cl_null(g_sfdf_d[l_ac].sfdf008) THEN
               #校验带值说明
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfdf_d[l_ac].sfdf008
               IF cl_chk_exist_and_ref_val("v_ooca001_1") THEN
                  #檢查成功時後續處理
                  LET g_sfdf_d[l_ac].sfdf008_desc = g_chkparam.return1
                  DISPLAY BY NAME g_sfdf_d[l_ac].sfdf008_desc
               ELSE
                  #檢查失敗時後續處理
                  LET g_sfdf_d[l_ac].sfdf008 = g_sfdf_d_t.sfdf008
                  NEXT FIELD CURRENT
               END IF

               #單位需與發料料號的基礎單位有轉換率
               CALL s_aimi190_chk_base_convert(g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf008) RETURNING l_success
               IF NOT l_success THEN
                  NEXT FIELD CURRENT
               END IF

               #预设参考数量=數量*單位轉換率
               IF NOT cl_null(g_sfdf_d[l_ac].sfdf006) AND NOT cl_null(g_sfdf_d[l_ac].sfdf007) THEN
                  #参考单位申请数量=申请数量经过转换率换算为参考单位的数量
                  #mod 150101
                  #CALL s_aimi190_get_convert(g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf006,g_sfdf_d[l_ac].sfdf008) RETURNING l_success,l_rate
                  #IF NOT l_success THEN
                  #   LET l_rate = 1
                  #END IF
                  #LET g_sfdf_d[l_ac].sfdf009 = g_sfdf_d[l_ac].sfdf007 * l_rate
                  CALL s_aooi250_convert_qty(g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf006,g_sfdf_d[l_ac].sfdf008,g_sfdf_d[l_ac].sfdf007)
                     RETURNING l_success,g_sfdf_d[l_ac].sfdf009
                  IF NOT l_success THEN
                     LET g_sfdf_d[l_ac].sfdf009 = g_sfdf_d[l_ac].sfdf007
                  END IF
                  #mod 150101 end
               END IF
            ELSE
               LET g_sfdf_d[l_ac].sfdf009 = 0
            END IF
            IF NOT cl_null(g_sfdf_d[l_ac].sfdf008) AND (g_sfdf_d_t.sfdf008 IS NULL OR g_sfdf_d[l_ac].sfdf008 != g_sfdf_d_t.sfdf008) THEN
               #相同项目重复性检查
               IF NOT asft310_chk_sfdf_unique() THEN
                  NEXT FIELD CURRENT
               END IF
            END IF
            LET g_sfdf_d_o.sfdf008 = g_sfdf_d[l_ac].sfdf008

         AFTER FIELD sfdf009
            #参考数量
            #add 150115 单位取位
            IF NOT cl_null(g_sfdf_d[l_ac].sfdf008) AND NOT cl_null(g_sfdf_d[l_ac].sfdf009) THEN
               CALL s_aooi250_get_msg(g_sfdf_d[l_ac].sfdf008) RETURNING l_success,g_ooca002,g_ooca004
               IF l_success THEN
                  CALL s_num_round(g_ooca004,g_sfdf_d[l_ac].sfdf009,g_ooca002) RETURNING g_sfdf_d[l_ac].sfdf009
                  DISPLAY BY NAME g_sfdf_d[l_ac].sfdf009
               END IF
            END IF
            #add 150115 end
            #不可小於0
            IF NOT cl_ap_chk_Range(g_sfdf_d[l_ac].sfdf009,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD sfdf009
            END IF

            IF NOT cl_null(g_sfdf_d[l_ac].sfdf009) AND (g_sfdf_d_t.sfdf009 IS NULL OR g_sfdf_d[l_ac].sfdf009 != g_sfdf_d_t.sfdf009) THEN
               #检查库位、储位、批号的范围，是否在需求指定发料库位、储位、批号允许的数量内
               IF NOT asft310_chk_ware_range_qty('sfdf009') THEN
                  NEXT FIELD CURRENT
               END IF
            END IF
            LET g_sfdf_d_o.sfdf009 = g_sfdf_d[l_ac].sfdf009

         AFTER FIELD sfdf011
            #包装容器
            #輸入值須存在[T:料件包裝資料檔].[C:包裝容器編號]，錯誤訊息「此料沒有這種包裝方式，請重新輸入」
            IF NOT cl_null(g_sfdf_d[l_ac].sfdf011) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfdf_d[l_ac].sfdf011
               IF NOT cl_chk_exist("v_imaa001_3") THEN
                  LET g_sfdf_d[l_ac].sfdf011 = g_sfdf_d_t.sfdf011
                  NEXT FIELD CURRENT
               END IF
            END IF
            LET g_sfdf_d_o.sfdf011 = g_sfdf_d[l_ac].sfdf011


         ON ACTION controlp INFIELD sfdf013
            #产品特征
            CALL s_feature_single(g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf013,g_site,'')
               RETURNING l_success,g_sfdf_d[l_ac].sfdf013
            IF NOT l_success THEN
               LET g_sfdf_d[l_ac].sfdf013 = ' '
            END IF
            DISPLAY g_sfdf_d[l_ac].sfdf013 TO sfdf013              #顯示到畫面上
            NEXT FIELD sfdf013

         ON ACTION controlp INFIELD sfdf003
            #仓库            
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdf_d[l_ac].sfdf003
            LET g_qryparam.default2 = g_sfdf_d[l_ac].sfdf004
            LET g_qryparam.default3 = g_sfdf_d[l_ac].sfdf005
            LET g_qryparam.default4 = g_sfdf_d[l_ac].sfdf010
            
            #mod 141118 q_inag004_13修改成传参方式
            #LET g_qryparam.where = " inag001 ='",g_sfdf_d[l_ac].sfdf001,"' AND inag002 ='",g_sfdf_d[l_ac].sfdf013,"' "
            LET g_qryparam.arg1 = g_sfdf_d[l_ac].sfdf001
            IF cl_null(g_sfdf_d[l_ac].sfdf013) THEN
               LET g_qryparam.arg2 = ' '
            ELSE
               LET g_qryparam.arg2 = g_sfdf_d[l_ac].sfdf013
            END IF
            
            #已有指定不可输入
            LET g_qryparam.where = "1=1 "
            #IF g_sfdf003_switch = 'N' THEN
            #   IF cl_null(g_sfdf_d[l_ac].sfdf003) THEN
            #      LET g_qryparam.where = g_qryparam.where ," AND inag004 = ' ' "
            #   ELSE
            #      LET g_qryparam.where = g_qryparam.where ," AND inag004 = '",g_sfdf_d[l_ac].sfdf003,"' "
            #   END IF
            #END IF
            IF g_sfdf004_switch = 'N' THEN
               IF cl_null(g_sfdf_d[l_ac].sfdf004) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag005 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag005 = '",g_sfdf_d[l_ac].sfdf004,"' "
               END IF
            END IF
            IF g_sfdf005_switch = 'N' THEN
               IF cl_null(g_sfdf_d[l_ac].sfdf005) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag006 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag006 = '",g_sfdf_d[l_ac].sfdf005,"' "
               END IF
            END IF
            IF g_sfdf010_switch = 'N' THEN
               IF cl_null(g_sfdf_d[l_ac].sfdf010) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag003 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag003 = '",g_sfdf_d[l_ac].sfdf010,"' "
               END IF
            END IF
            #mod 141118 --end
            
            #关于控制组
            CALL s_control_get_doc_sql("inag004",g_sfda_m.sfdadocno,'6')
                 RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_where
            END IF
            #关于控制组--end
            
            IF g_sfda_m.sfda002[1,1]='1' THEN #發料單 庫存>0
               CALL q_inag004_13()  #库位、储位、批号、库存管理特征
            ELSE #退料單 不卡控库存
               CALL q_inag004_16()  #库位、储位、批号、库存管理特征
            END IF
            LET g_sfdf_d[l_ac].sfdf003 = g_qryparam.return1
            LET g_sfdf_d[l_ac].sfdf004 = g_qryparam.return2
            LET g_sfdf_d[l_ac].sfdf005 = g_qryparam.return3
            LET g_sfdf_d[l_ac].sfdf010 = g_qryparam.return4
            DISPLAY g_sfdf_d[l_ac].sfdf003 TO sfdf003
            DISPLAY g_sfdf_d[l_ac].sfdf004 TO sfdf004
            DISPLAY g_sfdf_d[l_ac].sfdf005 TO sfdf005
            DISPLAY g_sfdf_d[l_ac].sfdf010 TO sfdf010
            #栏位说明
            CALL s_desc_get_stock_desc(g_site,g_sfdf_d[l_ac].sfdf003) RETURNING g_sfdf_d[l_ac].sfdf003_desc
            IF NOT cl_null(g_sfdf_d[l_ac].sfdf004) THEN
               CALL s_desc_get_locator_desc(g_site,g_sfdf_d[l_ac].sfdf003,g_sfdf_d[l_ac].sfdf004) RETURNING g_sfdf_d[l_ac].sfdf004_desc
            END IF
            DISPLAY g_sfdf_d[l_ac].sfdf003_desc TO sfdf003_desc
            DISPLAY g_sfdf_d[l_ac].sfdf004_desc TO sfdf004_desc
            NEXT FIELD sfdf003

         ON ACTION controlp INFIELD sfdf004
            #储位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdf_d[l_ac].sfdf004
            LET g_qryparam.default2 = g_sfdf_d[l_ac].sfdf005
            LET g_qryparam.default3 = g_sfdf_d[l_ac].sfdf010
            LET g_qryparam.where = " inag001 ='",g_sfdf_d[l_ac].sfdf001,"' AND inag002 ='",g_sfdf_d[l_ac].sfdf013,"' AND inag004 ='",g_sfdf_d[l_ac].sfdf003,"' "
            #已有指定不可输入
            IF g_sfdf003_switch = 'N' THEN
               IF cl_null(g_sfdf_d[l_ac].sfdf003) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag004 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag004 = '",g_sfdf_d[l_ac].sfdf003,"' "
               END IF
            END IF
            #IF g_sfdf004_switch = 'N' THEN
            #   IF cl_null(g_sfdf_d[l_ac].sfdf004) THEN
            #      LET g_qryparam.where = g_qryparam.where ," AND inag005 = ' ' "
            #   ELSE
            #      LET g_qryparam.where = g_qryparam.where ," AND inag005 = '",g_sfdf_d[l_ac].sfdf004,"' "
            #   END IF
            #END IF
            IF g_sfdf005_switch = 'N' THEN
               IF cl_null(g_sfdf_d[l_ac].sfdf005) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag006 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag006 = '",g_sfdf_d[l_ac].sfdf005,"' "
               END IF
            END IF
            IF g_sfdf010_switch = 'N' THEN
               IF cl_null(g_sfdf_d[l_ac].sfdf010) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag003 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag003 = '",g_sfdf_d[l_ac].sfdf010,"' "
               END IF
            END IF
            
            IF g_sfda_m.sfda002[1,1]='1' THEN #發料單 庫存>0
               CALL q_inag005_13()  #储位、批号、库存管理特征
            ELSE #退料單 不卡控库存
               CALL q_inag005_14()  #储位、批号、库存管理特征
            END IF
            LET g_sfdf_d[l_ac].sfdf004 = g_qryparam.return1
            LET g_sfdf_d[l_ac].sfdf005 = g_qryparam.return2
            LET g_sfdf_d[l_ac].sfdf010 = g_qryparam.return3
            DISPLAY g_sfdf_d[l_ac].sfdf004 TO sfdf004
            DISPLAY g_sfdf_d[l_ac].sfdf005 TO sfdf005
            DISPLAY g_sfdf_d[l_ac].sfdf010 TO sfdf010 
            #栏位说明
            IF NOT cl_null(g_sfdf_d[l_ac].sfdf004) THEN
               CALL s_desc_get_locator_desc(g_site,g_sfdf_d[l_ac].sfdf003,g_sfdf_d[l_ac].sfdf004) RETURNING g_sfdf_d[l_ac].sfdf004_desc
            END IF
            DISPLAY g_sfdf_d[l_ac].sfdf004_desc TO sfdf004_desc
            NEXT FIELD sfdf004

         ON ACTION controlp INFIELD sfdf005
            #批号
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdf_d[l_ac].sfdf004
            LET g_qryparam.default2 = g_sfdf_d[l_ac].sfdf005
            LET g_qryparam.default3 = g_sfdf_d[l_ac].sfdf010
            LET g_qryparam.where = " inag001 ='",g_sfdf_d[l_ac].sfdf001,"' AND inag002 ='",g_sfdf_d[l_ac].sfdf013,"' AND inag004 ='",g_sfdf_d[l_ac].sfdf003,"' "
            #IF NOT cl_null(g_sfdf_d[l_ac].sfdf004) THEN  #以防储位不可输入时误更新
            #   LET g_qryparam.where = g_qryparam.where CLIPPED," AND inag005 ='",g_sfdf_d[l_ac].sfdf004,"' "
            #END IF
            #已有指定不可输入
            IF g_sfdf003_switch = 'N' THEN
               IF cl_null(g_sfdf_d[l_ac].sfdf003) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag004 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag004 = '",g_sfdf_d[l_ac].sfdf003,"' "
               END IF
            END IF
            IF g_sfdf004_switch = 'N' THEN
               IF cl_null(g_sfdf_d[l_ac].sfdf004) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag005 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag005 = '",g_sfdf_d[l_ac].sfdf004,"' "
               END IF
            END IF
            #IF g_sfdf005_switch = 'N' THEN
            #   IF cl_null(g_sfdf_d[l_ac].sfdf005) THEN
            #      LET g_qryparam.where = g_qryparam.where ," AND inag006 = ' ' "
            #   ELSE
            #      LET g_qryparam.where = g_qryparam.where ," AND inag006 = '",g_sfdf_d[l_ac].sfdf005,"' "
            #   END IF
            #END IF
            IF g_sfdf010_switch = 'N' THEN
               IF cl_null(g_sfdf_d[l_ac].sfdf010) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag003 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag003 = '",g_sfdf_d[l_ac].sfdf010,"' "
               END IF
            END IF
            
            IF g_sfda_m.sfda002[1,1]='1' THEN #發料單 庫存>0
               CALL q_inag005_13()  #储位、批号、库存管理特征
            ELSE #退料單 不卡控库存
               CALL q_inag005_14()  #储位、批号、库存管理特征
            END IF
            LET g_sfdf_d[l_ac].sfdf004 = g_qryparam.return1
            LET g_sfdf_d[l_ac].sfdf005 = g_qryparam.return2
            LET g_sfdf_d[l_ac].sfdf010 = g_qryparam.return3
            DISPLAY g_sfdf_d[l_ac].sfdf004 TO sfdf004
            DISPLAY g_sfdf_d[l_ac].sfdf005 TO sfdf005
            DISPLAY g_sfdf_d[l_ac].sfdf010 TO sfdf010 
            #栏位说明
            IF NOT cl_null(g_sfdf_d[l_ac].sfdf004) THEN
               CALL s_desc_get_locator_desc(g_site,g_sfdf_d[l_ac].sfdf003,g_sfdf_d[l_ac].sfdf004) RETURNING g_sfdf_d[l_ac].sfdf004_desc
            END IF
            DISPLAY g_sfdf_d[l_ac].sfdf004_desc TO sfdf004_desc
            NEXT FIELD sfdf005

         ON ACTION controlp INFIELD sfdf010
            #库存管理特征
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdf_d[l_ac].sfdf004
            LET g_qryparam.default2 = g_sfdf_d[l_ac].sfdf005
            LET g_qryparam.default3 = g_sfdf_d[l_ac].sfdf010
            LET g_qryparam.where = " inag001 ='",g_sfdf_d[l_ac].sfdf001,"' AND inag002 ='",g_sfdf_d[l_ac].sfdf013,"' AND inag004 ='",g_sfdf_d[l_ac].sfdf003,"' "
            #IF NOT cl_null(g_sfdf_d[l_ac].sfdf004) THEN  #以防储位不可输入时误更新
            #   LET g_qryparam.where = g_qryparam.where CLIPPED," AND inag005 ='",g_sfdf_d[l_ac].sfdf004,"' "
            #END IF
            #已有指定不可输入
            IF g_sfdf003_switch = 'N' THEN
               IF cl_null(g_sfdf_d[l_ac].sfdf003) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag004 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag004 = '",g_sfdf_d[l_ac].sfdf003,"' "
               END IF
            END IF
            IF g_sfdf004_switch = 'N' THEN
               IF cl_null(g_sfdf_d[l_ac].sfdf004) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag005 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag005 = '",g_sfdf_d[l_ac].sfdf004,"' "
               END IF
            END IF
            IF g_sfdf005_switch = 'N' THEN
               IF cl_null(g_sfdf_d[l_ac].sfdf005) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag006 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag006 = '",g_sfdf_d[l_ac].sfdf005,"' "
               END IF
            END IF
            #IF g_sfdf010_switch = 'N' THEN
            #   IF cl_null(g_sfdf_d[l_ac].sfdf010) THEN
            #      LET g_qryparam.where = g_qryparam.where ," AND inag003 = ' ' "
            #   ELSE
            #      LET g_qryparam.where = g_qryparam.where ," AND inag003 = '",g_sfdf_d[l_ac].sfdf010,"' "
            #   END IF
            #END IF
            
            IF g_sfda_m.sfda002[1,1]='1' THEN #發料單 庫存>0
               CALL q_inag005_13()  #储位、批号、库存管理特征
            ELSE #退料單 不卡控库存
               CALL q_inag005_14()  #储位、批号、库存管理特征
            END IF
            LET g_sfdf_d[l_ac].sfdf004 = g_qryparam.return1
            LET g_sfdf_d[l_ac].sfdf005 = g_qryparam.return2
            LET g_sfdf_d[l_ac].sfdf010 = g_qryparam.return3
            DISPLAY g_sfdf_d[l_ac].sfdf004 TO sfdf004
            DISPLAY g_sfdf_d[l_ac].sfdf005 TO sfdf005
            DISPLAY g_sfdf_d[l_ac].sfdf010 TO sfdf010 
            #栏位说明
            IF NOT cl_null(g_sfdf_d[l_ac].sfdf004) THEN
               CALL s_desc_get_locator_desc(g_site,g_sfdf_d[l_ac].sfdf003,g_sfdf_d[l_ac].sfdf004) RETURNING g_sfdf_d[l_ac].sfdf004_desc
            END IF
            DISPLAY g_sfdf_d[l_ac].sfdf004_desc TO sfdf004_desc
            NEXT FIELD sfdf010

         ON ACTION controlp INFIELD sfdf006
            #单位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdf_d[l_ac].sfdf006
            CALL q_ooca001_1()
            LET g_sfdf_d[l_ac].sfdf006 = g_qryparam.return1
            DISPLAY g_sfdf_d[l_ac].sfdf006 TO sfdf006

         ON ACTION controlp INFIELD sfdf008
         #参考单位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdf_d[l_ac].sfdf008
            CALL q_ooca001_1()
            LET g_sfdf_d[l_ac].sfdf008 = g_qryparam.return1
            DISPLAY g_sfdf_d[l_ac].sfdf008 TO sfdf008

         ON ACTION controlp INFIELD sfdf011
         #包装容器
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdf_d[l_ac].sfdf011
            CALL q_imaa001_11()
            LET g_sfdf_d[l_ac].sfdf011 = g_qryparam.return1     #將開窗取得的值>
            DISPLAY g_sfdf_d[l_ac].sfdf011 TO sfdf011
            NEXT FIELD sfdf011

         AFTER ROW
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            CALL asft310_b_fill() #單身填充
            CALL asft310_b_fill2('0') #單身填充
            LET l_ac = l_ac_t
            
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_sfdf_d[l_ac].* = g_sfdf_d_t.*
               END IF
               CLOSE asft310_bcl5
               #CLOSE asft310_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            #其他table進行unlock

            CALL asft310_unlock_b("sfdf_t","'5'")
            CALL s_transaction_end('Y','0')

         AFTER INPUT

         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_sfdf_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_sfdf_d.getLength()+1

      END INPUT

      INPUT ARRAY g_sfdd_d FROM s_detail6.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效!
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)

         #自訂ACTION(detail_input,page_6)
         
         #製造批序號維護
         ON ACTION serialnum
            #LET g_action_choice="serialnum"
            IF cl_auth_chk_act("serialnum") THEN
               #add-point:ON ACTION serialnum
               #END add-point
            END IF

         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN
              CALL FGL_SET_ARR_CURR(g_sfdd_d.getLength()+1)
              LET g_insert = 'N'
            END IF

            LET g_rec_b = g_sfdd_d.getLength()

         BEFORE INSERT
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_sfdd_d[l_ac].* TO NULL
            LET g_sfdd_d_t.* = g_sfdd_d[l_ac].*     #新輸入資料
            LET g_sfdd_d_o.* = g_sfdd_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            #CALL asft310_set_entry_b_sfdd(l_cmd)
            #CALL asft310_set_no_entry_b_sfdd(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_sfdd_d[li_reproduce_target].* = g_sfdd_d[li_reproduce].*
               LET g_sfdd_d[li_reproduce_target].sfddseq1 = NULL
            END IF
            #公用欄位給值(單身6)

            #add-point:modify段before insert
            #项序
            SELECT MAX(sfddseq1) INTO g_sfdd_d[l_ac].sfddseq1
              FROM sfdd_t
             WHERE sfddent  = g_enterprise
               AND sfddsite = g_site
               AND sfdddocno= g_sfda_m.sfdadocno
               AND sfddseq  = g_sfdc4_d[g_detail_idx].sfdcseq
            IF cl_null(g_sfdd_d[l_ac].sfddseq1) THEN LET g_sfdd_d[l_ac].sfddseq1 = 0 END IF
            LET g_sfdd_d[l_ac].sfddseq1 = g_sfdd_d[l_ac].sfddseq1 + 1
            #发料料号：预设带出需求料号
            LET g_sfdd_d[l_ac].sfdd001 = g_sfdc4_d[g_detail_idx].sfdc004
            CALL s_desc_get_item_desc(g_sfdd_d[l_ac].sfdd001) RETURNING g_sfdd_d[l_ac].sfdd001_desc,g_sfdd_d[l_ac].sfdd001_desc2
            DISPLAY BY NAME g_sfdd_d[l_ac].sfdd001_desc
            DISPLAY BY NAME g_sfdd_d[l_ac].sfdd001_desc2
            #产品特征：预设带出需求料号特征
            LET g_sfdd_d[l_ac].sfdd013 = g_sfdc4_d[g_detail_idx].sfdc005
            #显示产品特征说明
            CALL s_feature_description(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013)
               RETURNING l_success,g_sfdd_d[l_ac].sfdd013_desc
            IF NOT l_success THEN
               LET g_sfdd_d[l_ac].sfdd013_desc = ''
            END IF
            DISPLAY BY NAME g_sfdd_d[l_ac].sfdd013_desc
            
            LET g_sfdd_d[l_ac].sfdd002 = 1  #替代率
            LET g_sfdd_d[l_ac].sfdd003 = g_sfdc4_d[g_detail_idx].sfdc012  #库位
            CALL s_desc_get_stock_desc(g_site,g_sfdd_d[l_ac].sfdd003) RETURNING g_sfdd_d[l_ac].sfdd003_desc
            LET g_sfdd_d[l_ac].sfdd004 = g_sfdc4_d[g_detail_idx].sfdc013  #储位
            IF NOT cl_null(g_sfdd_d[l_ac].sfdd004) THEN
               CALL s_desc_get_locator_desc(g_site,g_sfdd_d[l_ac].sfdd003,g_sfdd_d[l_ac].sfdd004) RETURNING g_sfdd_d[l_ac].sfdd004_desc
            END IF
            LET g_sfdd_d[l_ac].sfdd005 = g_sfdc4_d[g_detail_idx].sfdc014  #批号
            LET g_sfdd_d[l_ac].sfdd010 = g_sfdc4_d[g_detail_idx].sfdc016  #库存管理特征
            LET g_sfdd_d[l_ac].sfdd006 = g_sfdc4_d[g_detail_idx].sfdc006  #单位
            CALL s_desc_get_unit_desc(g_sfdd_d[l_ac].sfdd006) RETURNING g_sfdd_d[l_ac].sfdd006_desc
            LET g_sfdd_d[l_ac].sfdd008 = g_sfdc4_d[g_detail_idx].sfdc009  #参考单位
            CALL s_desc_get_unit_desc(g_sfdd_d[l_ac].sfdd008) RETURNING g_sfdd_d[l_ac].sfdd008_desc
            IF g_prog[1,6]='asft31' THEN
               LET g_sfdd_d[l_ac].sfdd012 = -1  #正负 发料-1
            END IF
            IF g_prog[1,6]='asft32' THEN
               LET g_sfdd_d[l_ac].sfdd012 =  1  #正负 退料1
            END IF
            
            CALL asft310_set_entry_b_sfdd(l_cmd)
            CALL asft310_set_no_entry_b_sfdd(l_cmd)
            #end add-point

         BEFORE ROW
            IF cl_null(g_detail_idx) OR g_detail_idx=0 THEN
               #请先选择需求申请资料
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  'asf-00666'
               LET g_errparam.extend = "OPEN asft310_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()
               RETURN
            END IF
            
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac

            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx

            CALL s_transaction_begin()
            OPEN asft310_cl USING g_enterprise,g_sfda_m.sfdadocno
            OPEN asft310_bcl2 USING g_enterprise, g_site,g_sfda_m.sfdadocno,g_sfdc4_d[g_detail_idx].sfdcseq

            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  SQLCA.sqlcode
               LET g_errparam.extend = "OPEN asft310_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CLOSE asft310_cl
               CLOSE asft310_bcl2
               CALL s_transaction_end('N','0')
               RETURN
            END IF

            #FETCH asft310_cl INTO g_sfda_m.sfdadocno,g_sfda_m.oobal004,g_sfda_m.sfdadocdt,g_sfda_m.sfda001,
            #    g_sfda_m.sfda002,g_sfda_m.sfda003,g_sfda_m.sfda003_desc,g_sfda_m.sfda004,g_sfda_m.sfda004_desc,
            #    g_sfda_m.sfda005,g_sfda_m.sfda015,g_sfda_m.sfda014,g_sfda_m.sfdastus,g_sfda_m.sfdaownid,g_sfda_m.sfdaownid_desc,g_sfda_m.sfdaowndp,
            #    g_sfda_m.sfdaowndp_desc,g_sfda_m.sfdacrtid,g_sfda_m.sfdacrtid_desc,g_sfda_m.sfdacrtdp,
            #    g_sfda_m.sfdacrtdp_desc,g_sfda_m.sfdacrtdt,g_sfda_m.sfdamodid,g_sfda_m.sfdamodid_desc,
            #    g_sfda_m.sfdamoddt,g_sfda_m.sfdacnfid,g_sfda_m.sfdacnfid_desc,g_sfda_m.sfdacnfdt,g_sfda_m.sfdapstid,
            #    g_sfda_m.sfdapstid_desc,g_sfda_m.sfdapstdt #鎖住將被更改或取消的資料
            #IF SQLCA.sqlcode THEN
            #   #CALL cl_err(g_sfda_m.sfdadocno,SQLCA.sqlcode,0)
            #   INITIALIZE g_errparam TO NULL
            #   LET g_errparam.code =  SQLCA.sqlcode
            #   LET g_errparam.extend = g_sfda_m.sfdadocno
            #   LET g_errparam.popup = FALSE
            #   CALL cl_err()
            #   CLOSE asft310_cl
            #   CALL s_transaction_end('N','0')
            #   RETURN
            #END IF

            LET g_rec_b = g_sfdd_d.getLength()

            IF g_rec_b >= l_ac AND g_sfdd_d[l_ac].sfddseq1 IS NOT NULL THEN
               LET l_cmd='u'
               LET g_sfdd_d_t.* = g_sfdd_d[l_ac].*  #BACKUP
               LET g_sfdd_d_o.* = g_sfdd_d[l_ac].*  #BACKUP
               #add
               SELECT * INTO l_sfdd_t.* FROM sfdd_t
                WHERE sfddent   = g_enterprise
                  AND sfdddocno = g_sfda_m.sfdadocno
                  AND sfddseq   = g_sfdc4_d[g_detail_idx].sfdcseq
                  AND sfddseq1  = g_sfdd_d_t.sfddseq1
               #add--ent
               #CALL asft310_set_entry_b_sfdd(l_cmd)
               #CALL asft310_set_no_entry_b_sfdd(l_cmd)
               IF NOT asft310_lock_b("sfdd_t","'6'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH asft310_bcl6 INTO g_sfdd_d[l_ac].sfddseq1,g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd001_desc,
                      g_sfdd_d[l_ac].sfdd001_desc2,g_sfdd_d[l_ac].sfdd013,g_sfdd_d[l_ac].sfdd013_desc,g_sfdd_d[l_ac].sfdd002,g_sfdd_d[l_ac].sfdd003,
                      g_sfdd_d[l_ac].sfdd003_desc,g_sfdd_d[l_ac].sfdd004,g_sfdd_d[l_ac].sfdd004_desc,
                      g_sfdd_d[l_ac].sfdd005,g_sfdd_d[l_ac].sfdd010,g_sfdd_d[l_ac].sfdd006,g_sfdd_d[l_ac].sfdd006_desc,
                      g_sfdd_d[l_ac].sfdd007,g_sfdd_d[l_ac].sfdd008,g_sfdd_d[l_ac].sfdd008_desc,g_sfdd_d[l_ac].sfdd009,
                      g_sfdd_d[l_ac].sfdd011,g_sfdd_d[l_ac].sfdd012
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #mod 150121
                  #LET g_bfill = "N"
                  #CALL asft310_show()
                  #LET g_bfill = "Y"
                  CALL asft310_b_show('sfdd',l_ac)
                  #mod 150121 end

                  CALL cl_show_fld_cont()
               END IF
               
               #mark 141211
               ##库位为空，不允许输入,需求申请人需先到指定库位
               #IF cl_null(g_sfdd_d[l_ac].sfdd003) THEN #库位
               #   #缺少库位信息，请先指定库位
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code = 'asf-00185'
               #   LET g_errparam.extend = ''
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   LET l_flag = 'c'
               #   LET l_ac = g_detail_idx
               #   CALL s_transaction_end('N','0')
               #   CONTINUE WHILE
               #END IF
               #mark 141211 end

               CALL asft310_set_entry_b_sfdd(l_cmd)
               CALL asft310_set_no_entry_b_sfdd(l_cmd)
            ELSE
               LET l_cmd='a'
            END IF
            #其他table資料備份(確定是否更改用)

            #获取工单单头资讯
            INITIALIZE g_sfaa.* TO NULL
            SELECT * INTO g_sfaa.* FROM sfaa_t
             WHERE sfaaent = g_enterprise
               AND sfaasite = g_site
               AND sfaadocno = g_sfdc4_d[g_detail_idx].sfdc001  #工单
               
            #其他table進行lock


         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_sfdd_d.deleteElement(l_ac)
               NEXT FIELD sfddseq1
            END IF
            IF g_sfdd_d_t.sfddseq1 IS NOT NULL THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF

               DELETE FROM sfdd_t
                WHERE sfddent = g_enterprise AND sfddsite = g_site
                  AND sfdddocno = g_sfda_m.sfdadocno
                  AND sfddseq = g_sfdc4_d[g_detail_idx].sfdcseq
                  #AND sfddseq1 = g_sfdd_d[g_detail_idx2].sfddseq1
                  AND sfddseq1 = g_sfdd_d_t.sfddseq1
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "sfdb_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  #CALL s_transaction_end('N','0')
                  #CANCEL DELETE
                  CALL s_transaction_end('N','0')  #需要有事务，如果没有事务，直接cancel delete ，回到单身状态就不在事务中了
                  LET l_flag = 'd'  #取消cancel的做法，本次事务回滚，重新走INPUT进入，回到当前笔状态
                  CLOSE asft310_bcl6 #重新进入单身需要先关闭游标
                  CONTINUE WHILE
               ELSE
                  #add-point:單身2刪除後
                  LET l_success_tot = TRUE
                  
                  #删除inao
                  CALL asft310_del_inao() RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
                  #处理sfdf,sfde
                  CALL s_asft310_chg_sfdf_f_sfdd_del('N',l_sfdd_t.*) RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
                  #更新sfdc
                  CALL s_asft310_chg_sfdc_f_sfdd_del('N',l_sfdd_t.*) RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
                  #add 141222
                  DELETE FROM ooff_t
                   WHERE ooffent = g_enterprise
                     AND ooff001 = '7'
                     AND ooff002 = g_sfda_m.sfdadocno
                     AND ooff003 = g_sfdc4_d[g_detail_idx].sfdcseq
                     AND ooff004 = g_sfdd_d_t.sfddseq1
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "DELETE ooff_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET l_success_tot = FALSE
                  END IF
                  #add 141222 end
                  IF NOT l_success_tot THEN
                     CALL s_transaction_end('N','0')  #需要有事务，如果没有事务，直接cancel delete ，回到单身状态就不在事务中了
                     #CANCEL DELETE
                     LET l_flag = 'd'   #取消cancel的做法，本次事务回滚，重新走INPUT进入，回到当前笔状态
                     CLOSE asft310_bcl6 #重新进入单身需要先关闭游标
                     CONTINUE WHILE
                  ELSE
                     LET g_rec_b = g_rec_b-1
                     CALL s_transaction_end('Y','0')
                  END IF 
                  #end add-point
               END IF
               CLOSE asft310_bcl6
               LET l_count = g_sfdb_d.getLength()
            END IF

            #INITIALIZE gs_keys TO NULL
            #LET gs_keys[1] = g_sfda_m.sfdadocno
            #LET gs_keys[2] = g_sfdc4_d[g_detail_idx].sfdcseq
            #LET gs_keys[3] = g_sfdd_d[g_detail_idx2].sfddseq1


         AFTER DELETE
            #IF asft310_delete_b('sfdd_t',gs_keys,"'6'") THEN
            #END IF

         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF

            LET l_count = 1
            SELECT COUNT(*) INTO l_count FROM sfdd_t
             WHERE sfddent = g_enterprise AND sfddsite = g_site AND sfdddocno = g_sfda_m.sfdadocno AND
                 sfddseq = g_sfdc4_d[g_detail_idx].sfdcseq AND sfddseq1 = g_sfdd_d[g_detail_idx2].sfddseq1
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN
               INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_sfda_m.sfdadocno
               LET gs_keys[2] = g_sfdc4_d[g_detail_idx].sfdcseq
               LET gs_keys[3] = g_sfdd_d[g_detail_idx2].sfddseq1
               CALL asft310_insert_b('sfdd_t',gs_keys,"'6'")
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_sfdb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF

            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "sfdd_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            ELSE
               #add
               LET l_success_tot = TRUE

               #更新sfdc
               CALL s_asft310_chg_sfdc_f_sfdd_ins(g_sfda_m.sfdadocno,g_sfdc4_d[g_detail_idx].sfdcseq,g_sfdd_d[g_detail_idx2].sfddseq1) RETURNING l_success
               IF NOT l_success THEN
                  LET l_success_tot = FALSE
               END IF
               #处理sfdf,sfde：sfdd与sfdf总数应该平的
               CALL s_asft310_chg_sfdf_f_sfdd_ins(g_sfda_m.sfdadocno,g_sfdc4_d[g_detail_idx].sfdcseq,g_sfdd_d[g_detail_idx2].sfddseq1) RETURNING l_success
               IF NOT l_success THEN
                  LET l_success_tot = FALSE
               END IF

               #add 141222 
               #处理备注 
               IF NOT cl_null(g_sfdd_d[l_ac].sfdd_ooff013) THEN
                  CALL s_aooi360_gen('7',g_sfda_m.sfdadocno,g_sfdc4_d[g_detail_idx].sfdcseq,g_sfdd_d[g_detail_idx2].sfddseq1,' ',' ',' ',' ',' ',' ',' ','4',g_sfdd_d[l_ac].sfdd_ooff013)
                     RETURNING l_success
                  IF NOT l_success  THEN
                     LET l_success_tot = FALSE
                  END IF
               END IF
               #add 141222 end
               
               IF NOT l_success_tot THEN
                  CALL s_transaction_end('N','0')
                  CANCEL INSERT
               END IF
               #add--end
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
               
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_sfdd_d[l_ac].* = g_sfdd_d_t.*
               CLOSE asft310_bcl6
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_sfdd_d[l_ac].* = g_sfdd_d_t.*
            ELSE
               #寫入修改者/修改日期資訊(單身6)
               IF cl_null(g_sfdd_d[l_ac].sfdd013) THEN LET g_sfdd_d[l_ac].sfdd013 = ' ' END IF
               IF cl_null(g_sfdd_d[l_ac].sfdd003) THEN LET g_sfdd_d[l_ac].sfdd003 = ' ' END IF
               IF cl_null(g_sfdd_d[l_ac].sfdd004) THEN LET g_sfdd_d[l_ac].sfdd004 = ' ' END IF
               IF cl_null(g_sfdd_d[l_ac].sfdd005) THEN LET g_sfdd_d[l_ac].sfdd005 = ' ' END IF
               IF cl_null(g_sfdd_d[l_ac].sfdd010) THEN LET g_sfdd_d[l_ac].sfdd010 = ' ' END IF
               IF cl_null(g_sfdd_d[l_ac].sfdd009) THEN LET g_sfdd_d[l_ac].sfdd009 = 0 END IF #参考单位数量
               
               #add 150115 单位取位
               IF NOT cl_null(g_sfdd_d[l_ac].sfdd006) THEN
                  CALL s_aooi250_get_msg(g_sfdd_d[l_ac].sfdd006) RETURNING l_success,g_ooca002,g_ooca004
                  IF l_success THEN
                     CALL s_num_round(g_ooca004,g_sfdd_d[l_ac].sfdd007,g_ooca002) RETURNING g_sfdd_d[l_ac].sfdd007
                  END IF
               END IF
               IF NOT cl_null(g_sfdd_d[l_ac].sfdd008) THEN
                  CALL s_aooi250_get_msg(g_sfdd_d[l_ac].sfdd008) RETURNING l_success,g_ooca002,g_ooca004
                  IF l_success THEN
                     CALL s_num_round(g_ooca004,g_sfdd_d[l_ac].sfdd009,g_ooca002) RETURNING g_sfdd_d[l_ac].sfdd009
                  END IF
               END IF
               #add 150115 end
               UPDATE sfdd_t SET (sfdddocno,sfddseq,sfddseq1,sfdd001,sfdd013,sfdd002,sfdd003,sfdd004,sfdd005,
                   sfdd010,sfdd006,sfdd007,sfdd008,sfdd009,sfdd011,sfdd012) = (g_sfda_m.sfdadocno,g_sfdc4_d[g_detail_idx].sfdcseq,
                   g_sfdd_d[l_ac].sfddseq1,g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013,g_sfdd_d[l_ac].sfdd002,g_sfdd_d[l_ac].sfdd003,
                   g_sfdd_d[l_ac].sfdd004,g_sfdd_d[l_ac].sfdd005,g_sfdd_d[l_ac].sfdd010,g_sfdd_d[l_ac].sfdd006,
                   g_sfdd_d[l_ac].sfdd007,g_sfdd_d[l_ac].sfdd008,g_sfdd_d[l_ac].sfdd009,g_sfdd_d[l_ac].sfdd011,
                   g_sfdd_d[l_ac].sfdd012) #自訂欄位頁簽
                WHERE sfddent = g_enterprise AND sfddsite = g_site AND sfdddocno = g_sfdadocno_t AND
                    sfddseq = g_sfdc4_d[g_detail_idx].sfdcseq AND sfddseq1 = g_sfdd_d_t.sfddseq1
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "sfdd_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_sfdd_d[l_ac].* = g_sfdd_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "sfdd_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_sfdd_d[l_ac].* = g_sfdd_d_t.*
                  #OTHERWISE
                  #   INITIALIZE gs_keys TO NULL
                  #   LET gs_keys[1] = g_sfda_m.sfdadocno
                  #   LET gs_keys_bak[1] = g_sfdadocno_t
                  #   LET gs_keys[2] = g_sfdc4_d[g_detail_idx].sfdcseq
                  #   LET gs_keys_bak[2] = g_sfdc4_d[g_detail_idx].sfdcseq
                  #   LET gs_keys[3] = g_sfdd_d[g_detail_idx2].sfddseq1
                  #   LET gs_keys_bak[3] = g_sfdd_d_t.sfddseq1
                  #   CALL asft310_update_b('sfdd_t',gs_keys,gs_keys_bak,"'6'")
                  #   #資料多語言用-增/改
               END CASE
               #add-point:單身修改後
               #关联表处理
               IF g_intrans = 'Y' THEN  #若事务还没走rollback则(上面没有走commit)
                  LET l_success_tot = TRUE

                  SELECT * INTO l_sfdd.* FROM sfdd_t
                   WHERE sfddent   = g_enterprise
                     AND sfdddocno = g_sfda_m.sfdadocno
                     AND sfddseq   = g_sfdc4_d[g_detail_idx].sfdcseq
                     AND sfddseq1  = g_sfdd_d[g_detail_idx2].sfddseq1
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = 'sel sfdd'
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET l_success_tot = FALSE
                  END IF
                  #处理sfdc
                  CALL s_asft310_chg_sfdc_f_sfdd_upd(l_sfdd_t.*,l_sfdd.*) RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
                  #处理sfdf,sfde
                  CALL s_asft310_chg_sfdf_f_sfdd_upd(l_sfdd_t.*,l_sfdd.*) RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
                  #add 141222
                  #ooff资料
                  IF NOT cl_null(g_sfdd_d[l_ac].sfdd_ooff013) THEN
                     CALL s_aooi360_gen('7',g_sfda_m.sfdadocno,g_sfdc4_d[g_detail_idx].sfdcseq,g_sfdd_d_t.sfddseq1,' ',' ',' ',' ',' ',' ',' ','4',g_sfdd_d[l_ac].sfdd_ooff013)
                        RETURNING l_success
                  ELSE
                     CALL s_aooi360_del('7',g_sfda_m.sfdadocno,g_sfdc4_d[g_detail_idx].sfdcseq,g_sfdd_d_t.sfddseq1,' ',' ',' ',' ',' ',' ',' ','4')
                        RETURNING l_success
                  END IF
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
                  #若key值变化
                  CALL asft310_update_ooff_key("d") RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
                  #add 141222 end
                  IF NOT l_success_tot THEN
                     CALL s_transaction_end('N','0')
                     LET g_sfdd_d[l_ac].* = g_sfdd_d_t.*
                  END IF
               END IF
               #end add-point
            END IF

         AFTER FIELD sfddseq1
         #项序
            #重复性检查
            IF NOT cl_null(g_sfdd_d[l_ac].sfddseq1) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdd_d[l_ac].sfddseq1 != g_sfdd_d_t.sfddseq1)) THEN
                  #IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfdd_t WHERE "||"sfddent = '" ||g_enterprise|| "' AND sfddsite = '" ||g_site|| "' AND "||"sfdddocno = '"||g_sfda_m.sfdadocno ||"' AND "|| "sfddseq = '"||g_sfdc4_d[g_detail_idx].sfdcseq ||"' AND "|| "sfddseq1 = '"||g_sfdd_d[l_ac].sfddseq1 ||"'",'std-00004',0) THEN
                  #   NEXT FIELD CURRENT
                  #END IF
                  SELECT COUNT(*) INTO l_cnt FROM sfdd_t
                   WHERE sfddent  = g_enterprise AND sfddsite = g_site
                     AND sfdddocno= g_sfda_m.sfdadocno
                     AND sfddseq  = g_sfdc4_d[g_detail_idx].sfdcseq
                     AND sfddseq1 = g_sfdd_d[l_ac].sfddseq1
                  CASE
                      WHEN SQLCA.sqlcode
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = SQLCA.sqlcode
                           LET g_errparam.extend = ""
                           LET g_errparam.popup = TRUE
                           LET g_errparam. sqlerr = SQLCA.SQLERRD[2]
                           CALL cl_err()
                           NEXT FIELD CURRENT
                      WHEN l_cnt > 0
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = 'std-00004'
                           LET g_errparam.extend = ''
                           LET g_errparam.popup = TRUE
                           CALL cl_err()
                           NEXT FIELD CURRENT
                  END CASE
               END IF
               IF g_sfdd_d[l_ac].sfddseq1 < 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'amm-00002'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               #CALL asft310_show_sfdd_ooff013(l_ac) #add 141222 备注说明
            ELSE
               LET g_sfdd_d[l_ac].sfddseq1 = g_sfdd_d_t.sfddseq1
            END IF
            LET g_sfdd_d_o.sfddseq1 = g_sfdd_d[l_ac].sfddseq1
         
         BEFORE FIELD sfdd001
            CALL asft310_set_entry_b_sfdd(l_cmd)
         
         AFTER FIELD sfdd001
         #料件编号
            IF NOT cl_null(g_sfdd_d[l_ac].sfdd001) THEN
               IF g_sfdd_d[l_ac].sfdd001 != g_sfdc4_d[g_detail_idx].sfdc004 OR g_sfdd_d[l_ac].sfdd013 != g_sfdc4_d[g_detail_idx].sfdc005 THEN
                  #取替代检查
                  CALL asft310_chk_replace('sfdd001') RETURNING l_success
                  IF NOT l_success THEN
                     LET g_sfdd_d[l_ac].sfdd001 = g_sfdd_d_t.sfdd001
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF cl_null(g_sfdd_d_t.sfdd001) OR g_sfdd_d[l_ac].sfdd001!=g_sfdd_d_t.sfdd001 THEN
                  #檢核輸入的料件的生命週期是否在單據別限制範圍內，若不在限制內則不允許雜收此料
                  CALL s_control_chk_doc('4',g_sfda_m.sfdadocno,g_sfdd_d[l_ac].sfdd001,'','','','')
                     RETURNING l_success,l_flag2    #处理状态否 存在否     都是num5类型
                  IF NOT l_success OR NOT l_flag2 THEN
                     #控制组检查错误,请检查单别设定的相关内容
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00122'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                  
                     LET g_sfdd_d[l_ac].sfdd001 = g_sfdd_d_t.sfdd001
                     NEXT FIELD CURRENT
                  END IF
                  
                  #檢核輸入的料件的產品分類是否在單據別限制範圍內，若不在限制內則不允許雜收此料
                  CALL s_control_chk_doc('5',g_sfda_m.sfdadocno,g_sfdd_d[l_ac].sfdd001,'','','','')
                     RETURNING l_success,l_flag2    #处理状态否 存在否     都是num5类型
                  IF NOT l_success OR NOT l_flag2 THEN
                     #控制组检查错误,请检查单别设定的相关内容
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00122'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                  
                     LET g_sfdd_d[l_ac].sfdd001 = g_sfdd_d_t.sfdd001
                     NEXT FIELD CURRENT
                  END IF
      
                  #计算替代率
                  CALL s_asft310_get_sfdd002(
                       g_sfaa.sfaa010,g_sfaa.sfaa011,    #主料，特性
                       g_sfdc4_d[g_detail_idx].sfba002,g_sfdc4_d[g_detail_idx].sfba003,g_sfdc4_d[g_detail_idx].sfba004,  #部位，作业，作业序
                       g_sfdc4_d[g_detail_idx].sfdc004,g_sfdc4_d[g_detail_idx].sfdc006,  #需求料号，需求料件单位
                       g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013,g_sfdd_d[l_ac].sfdd006)    #替代料号,替代发料单位
                     RETURNING g_sfdd_d[l_ac].sfdd002
                  DISPLAY g_sfdd_d[l_ac].sfdd002 TO sfdd002
               END IF
               
               #检查产品特征
               IF NOT cl_null(g_sfdd_d[l_ac].sfdd013) THEN
                  IF NOT s_feature_check(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013) THEN
                     NEXT FIELD sfdd013
                  END IF
               END IF
            END IF
            
            CALL asft310_set_no_entry_b_sfdd(l_cmd)
            LET g_sfdd_d_o.sfdd001 = g_sfdd_d[l_ac].sfdd001
         
         BEFORE FIELD sfdd013
            CALL asft310_set_entry_b_sfdd(l_cmd)
         
         AFTER FIELD sfdd013
            #产品特征 
            IF NOT cl_null(g_sfdd_d[l_ac].sfdd013) AND NOT cl_null(g_sfdd_d[l_ac].sfdd001) THEN
               #检查产品特征
               IF NOT s_feature_check(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013) THEN
                  LET g_sfdd_d[l_ac].sfdd013 = g_sfdd_d_t.sfdd013

                  CALL s_feature_description(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013)
                     RETURNING l_success,g_sfdd_d[l_ac].sfdd013_desc
                  IF NOT l_success THEN
                     LET g_sfdd_d[l_ac].sfdd013_desc = ''
                  END IF
                  DISPLAY BY NAME g_sfdd_d[l_ac].sfdd013_desc
                  NEXT FIELD sfdd013
               END IF
            END IF
            
            IF g_sfdd_d[l_ac].sfdd013 != g_sfdc4_d[g_detail_idx].sfdc005 OR g_sfdd_d[l_ac].sfdd001 != g_sfdc4_d[g_detail_idx].sfdc004 THEN
               #取替代检查
               CALL asft310_chk_replace('sfdd013') RETURNING l_success
               IF NOT l_success THEN
                  LET g_sfdd_d[l_ac].sfdd013 = g_sfdd_d_t.sfdd013
                  CALL s_feature_description(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013)
                     RETURNING l_success,g_sfdd_d[l_ac].sfdd013_desc
                  IF NOT l_success THEN
                     LET g_sfdd_d[l_ac].sfdd013_desc = ''
                  END IF
                  DISPLAY BY NAME g_sfdd_d[l_ac].sfdd013_desc
                  NEXT FIELD CURRENT
               END IF
            END IF
            
            #显示产品特征说明
            LET g_sfdd_d[l_ac].sfdd013_desc = ''
            CALL s_feature_description(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013)
               RETURNING l_success,g_sfdd_d[l_ac].sfdd013_desc
            IF NOT l_success THEN
               LET g_sfdd_d[l_ac].sfdd013_desc = ''
            END IF
            DISPLAY BY NAME g_sfdd_d[l_ac].sfdd013_desc
            
            #计算替代率
            CALL s_asft310_get_sfdd002(
                 g_sfaa.sfaa010,g_sfaa.sfaa011,    #主料，特性
                 g_sfdc4_d[g_detail_idx].sfba002,g_sfdc4_d[g_detail_idx].sfba003,g_sfdc4_d[g_detail_idx].sfba004,  #部位，作业，作业序
                 g_sfdc4_d[g_detail_idx].sfdc004,g_sfdc4_d[g_detail_idx].sfdc006,  #需求料号，需求料件单位
                 g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013,g_sfdd_d[l_ac].sfdd006)    #替代料号,替代发料单位
               RETURNING g_sfdd_d[l_ac].sfdd002
            DISPLAY g_sfdd_d[l_ac].sfdd002 TO sfdd002
            
            CALL asft310_set_no_entry_b_sfdd(l_cmd)
            LET g_sfdd_d_o.sfdd013 = g_sfdd_d[l_ac].sfdd013
         
         AFTER FIELD sfdd003  #库位
            #不可输入的栏位不做检查，以防死循环（工單指定的時候庫存不一定有了，可能是還在在製的東西，等庫存有了就能發了）
            IF cl_null(g_sfdc4_d[g_detail_idx].sfdc012) THEN
               IF cl_null(g_sfdd_d[l_ac].sfdd003) THEN
                  LET g_sfdd_d[l_ac].sfdd003_desc = ''
                  DISPLAY BY NAME g_sfdd_d[l_ac].sfdd003_desc
               END IF
               #发料单做在捡量的检查
               IF g_prog[1,6]='asft31' AND NOT cl_null(g_sfdd_d[l_ac].sfdd007) AND NOT cl_null(g_sfdd_d[l_ac].sfdd003) THEN  #在捡数量 库位
                  IF cl_null(g_sfdd_d[l_ac].sfdd010) THEN LET g_sfdd_d[l_ac].sfdd010= ' ' END IF  #库存管理特征
                  IF cl_null(g_sfdd_d[l_ac].sfdd004) THEN LET g_sfdd_d[l_ac].sfdd004= ' ' END IF  #储位
                  IF cl_null(g_sfdd_d[l_ac].sfdd005) THEN LET g_sfdd_d[l_ac].sfdd005= ' ' END IF  #批号
                  #指定庫位、儲位、批號時，判斷參數是否檢查在檢量，如需檢查在檢量，在庫存數-在檢數不足申請數量時不允許輸入
                  #                           据点   料件编号                产品特征                库存管理特征
                  CALL s_inventory_check_inan(g_site,g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013,g_sfdd_d[l_ac].sfdd010,
                  #                           库位                   储位                    批号
                                              g_sfdd_d[l_ac].sfdd003,g_sfdd_d[l_ac].sfdd004,g_sfdd_d[l_ac].sfdd005,
                  #                           交易单位                在捡数量
                                              g_sfdd_d[l_ac].sfdd006,g_sfdd_d[l_ac].sfdd007,
                  #                           单据编号            项次                            项序
                                              g_sfda_m.sfdadocno,g_sfdc4_d[g_detail_idx].sfdcseq,g_sfdd_d[l_ac].sfddseq1)
                       RETURNING l_success,l_flag
                  IF NOT l_flag THEN
                     LET g_sfdd_d[l_ac].sfdd003 = g_sfdd_d_t.sfdd003
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF NOT cl_null(g_sfdd_d[l_ac].sfdd003) AND NOT cl_null(g_sfdd_d[l_ac].sfdd004) THEN
                  #校验带值说明
                  CALL asft310_chk_loca(g_sfdd_d[l_ac].sfdd003,g_sfdd_d[l_ac].sfdd004)
                     RETURNING l_success,g_sfdd_d[l_ac].sfdd004_desc
                  IF NOT l_success THEN
                     LET g_sfdd_d[l_ac].sfdd003 = g_sfdd_d_t.sfdd003
                     NEXT FIELD CURRENT
                  END IF
                  
                  #檢核輸入的庫位是否在單據別限制範圍內，若不在限制內則不允許使用此庫位
                  CALL s_control_chk_doc('6',g_sfda_m.sfdadocno,g_sfdd_d[l_ac].sfdd003,g_sfdd_d[l_ac].sfdd003,'','','')
                     RETURNING l_success,l_flag2
                  IF NOT l_success OR NOT l_flag2 THEN
                     #控制组检查错误,请检查单别设定的相关内容
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00122'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_sfdd_d[l_ac].sfdd003 = g_sfdd_d_t.sfdd003
                     NEXT FIELD CURRENT
                  END IF
                  DISPLAY BY NAME g_sfdd_d[l_ac].sfdd004_desc
               END IF
            END IF
            LET g_sfdd_d_o.sfdd003 = g_sfdd_d[l_ac].sfdd003
         
         AFTER FIELD sfdd004  #储位
            #不可输入的栏位不做检查，以防死循环（工單指定的時候庫存不一定有了，可能是還在在製的東西，等庫存有了就能發了）
            IF cl_null(g_sfdc4_d[g_detail_idx].sfdc013) THEN
               IF cl_null(g_sfdd_d[l_ac].sfdd004) THEN
                  LET g_sfdd_d[l_ac].sfdd004_desc = ''
                  DISPLAY BY NAME g_sfdd_d[l_ac].sfdd004_desc
               END IF
               IF NOT cl_null(g_sfdd_d[l_ac].sfdd003) AND NOT cl_null(g_sfdd_d[l_ac].sfdd004) THEN
                  #校验带值说明
                  CALL asft310_chk_loca(g_sfdd_d[l_ac].sfdd003,g_sfdd_d[l_ac].sfdd004)
                     RETURNING l_success,g_sfdd_d[l_ac].sfdd004_desc
                  IF NOT l_success THEN
                     LET g_sfdd_d[l_ac].sfdd004 = g_sfdd_d_t.sfdd004
                     NEXT FIELD CURRENT
                  END IF
                  
                  #檢核輸入的庫位是否在單據別限制範圍內，若不在限制內則不允許使用此庫位
                  CALL s_control_chk_doc('6',g_sfda_m.sfdadocno,g_sfdd_d[l_ac].sfdd003,g_sfdd_d[l_ac].sfdd003,'','','')
                     RETURNING l_success,l_flag2
                  IF NOT l_success OR NOT l_flag2 THEN
                     #控制组检查错误,请检查单别设定的相关内容
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00122'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                  
                     LET g_sfdd_d[l_ac].sfdd004 = g_sfdd_d_t.sfdd004
                     NEXT FIELD CURRENT
                  END IF
               
                  DISPLAY BY NAME g_sfdd_d[l_ac].sfdd004_desc
               END IF
               IF NOT cl_null(g_sfdd_d[l_ac].sfdd004) THEN
                  #发料单做在捡量的检查
                  IF g_prog[1,6]='asft31' AND NOT cl_null(g_sfdd_d[l_ac].sfdd007) AND NOT cl_null(g_sfdd_d[l_ac].sfdd003) THEN  #在捡数量 库位
                     IF cl_null(g_sfdd_d[l_ac].sfdd010) THEN LET g_sfdd_d[l_ac].sfdd010= ' ' END IF  #库存管理特征
                     IF cl_null(g_sfdd_d[l_ac].sfdd004) THEN LET g_sfdd_d[l_ac].sfdd004= ' ' END IF  #储位
                     IF cl_null(g_sfdd_d[l_ac].sfdd005) THEN LET g_sfdd_d[l_ac].sfdd005= ' ' END IF  #批号
                     #指定庫位、儲位、批號時，判斷參數是否檢查在檢量，如需檢查在檢量，在庫存數-在檢數不足申請數量時不允許輸入
                     #                           据点   料件编号                产品特征                库存管理特征
                     CALL s_inventory_check_inan(g_site,g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013,g_sfdd_d[l_ac].sfdd010,
                     #                           库位                   储位                    批号
                                                 g_sfdd_d[l_ac].sfdd003,g_sfdd_d[l_ac].sfdd004,g_sfdd_d[l_ac].sfdd005,
                     #                           交易单位                在捡数量
                                                 g_sfdd_d[l_ac].sfdd006,g_sfdd_d[l_ac].sfdd007,
                     #                           单据编号            项次                            项序
                                                 g_sfda_m.sfdadocno,g_sfdc4_d[g_detail_idx].sfdcseq,g_sfdd_d[l_ac].sfddseq1)
                          RETURNING l_success,l_flag
                     IF NOT l_flag THEN
                        LET g_sfdd_d[l_ac].sfdd004 = g_sfdd_d_t.sfdd004
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            LET g_sfdd_d_o.sfdd004 = g_sfdd_d[l_ac].sfdd004
         
         AFTER FIELD sfdd005  #批号
            #不可输入的栏位不做检查，以防死循环（工單指定的時候庫存不一定有了，可能是還在在製的東西，等庫存有了就能發了）
            IF cl_null(g_sfdc4_d[g_detail_idx].sfdc014) THEN
               IF NOT cl_null(g_sfdd_d[l_ac].sfdd005) THEN
                  #发料单做在捡量的检查
                  IF g_prog[1,6]='asft31' AND NOT cl_null(g_sfdd_d[l_ac].sfdd007) AND NOT cl_null(g_sfdd_d[l_ac].sfdd003) THEN  #在捡数量 库位
                     IF cl_null(g_sfdd_d[l_ac].sfdd010) THEN LET g_sfdd_d[l_ac].sfdd010= ' ' END IF  #库存管理特征
                     IF cl_null(g_sfdd_d[l_ac].sfdd004) THEN LET g_sfdd_d[l_ac].sfdd004= ' ' END IF  #储位
                     IF cl_null(g_sfdd_d[l_ac].sfdd005) THEN LET g_sfdd_d[l_ac].sfdd005= ' ' END IF  #批号
                     #指定庫位、儲位、批號時，判斷參數是否檢查在檢量，如需檢查在檢量，在庫存數-在檢數不足申請數量時不允許輸入
                     #                           据点   料件编号                产品特征                库存管理特征
                     CALL s_inventory_check_inan(g_site,g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013,g_sfdd_d[l_ac].sfdd010,
                     #                           库位                   储位                    批号
                                                 g_sfdd_d[l_ac].sfdd003,g_sfdd_d[l_ac].sfdd004,g_sfdd_d[l_ac].sfdd005,
                     #                           交易单位                在捡数量
                                                 g_sfdd_d[l_ac].sfdd006,g_sfdd_d[l_ac].sfdd007,
                     #                           单据编号            项次                            项序
                                                 g_sfda_m.sfdadocno,g_sfdc4_d[g_detail_idx].sfdcseq,g_sfdd_d[l_ac].sfddseq1)
                          RETURNING l_success,l_flag
                     IF NOT l_flag THEN
                        LET g_sfdd_d[l_ac].sfdd005 = g_sfdd_d_t.sfdd005
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            LET g_sfdd_d_o.sfdd005 = g_sfdd_d[l_ac].sfdd005
         
         AFTER FIELD sfdd006
         #单位
            IF NOT cl_null(g_sfdd_d_t.sfdd006) THEN
               IF cl_null(g_sfdd_d_t.sfdd006) OR g_sfdd_d[l_ac].sfdd006!=g_sfdd_d_t.sfdd006 THEN
                  #校验带值说明
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_sfdd_d[l_ac].sfdd006
                  IF cl_chk_exist_and_ref_val("v_ooca001_1") THEN
                     #檢查成功時後續處理
                     LET g_sfdd_d[l_ac].sfdd006_desc = g_chkparam.return1
                     DISPLAY BY NAME g_sfdd_d[l_ac].sfdd006_desc
                  ELSE
                     #檢查失敗時後續處理
                     LET g_sfdd_d[l_ac].sfdd006 = g_sfdd_d_t.sfdd006
                     NEXT FIELD CURRENT
                  END IF
   
                  #單位需與發料料號的基礎單位有轉換率
                  CALL s_aimi190_chk_base_convert(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd006) RETURNING l_success
                  IF NOT l_success THEN
                     NEXT FIELD CURRENT
                  END IF
   
                  #预设参考数量=數量*單位轉換率
                  IF NOT cl_null(g_sfdd_d[l_ac].sfdd007) AND NOT cl_null(g_sfdd_d[l_ac].sfdd008) THEN
                     #参考单位申请数量=申请数量经过转换率换算为参考单位的数量
                     #mod 150101
                     #CALL s_aimi190_get_convert(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd006,g_sfdd_d[l_ac].sfdd008) RETURNING l_success,l_rate
                     #IF NOT l_success THEN
                     #   LET l_rate = 1
                     #END IF
                     #LET g_sfdd_d[l_ac].sfdd009 = g_sfdd_d[l_ac].sfdd007 * l_rate
                     CALL s_aooi250_convert_qty(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd006,g_sfdd_d[l_ac].sfdd008,g_sfdd_d[l_ac].sfdd007)
                        RETURNING l_success,g_sfdd_d[l_ac].sfdd009
                     IF NOT l_success THEN
                        LET g_sfdd_d[l_ac].sfdd009 = g_sfdd_d[l_ac].sfdd007
                     END IF
                     #mod 150101 end
                  ELSE
                     LET g_sfdd_d[l_ac].sfdd009 = 0
                  END IF
               
                  #计算替代率
                  CALL s_asft310_get_sfdd002(
                       g_sfaa.sfaa010,g_sfaa.sfaa011,    #主料，特性
                       g_sfdc4_d[g_detail_idx].sfba002,g_sfdc4_d[g_detail_idx].sfba003,g_sfdc4_d[g_detail_idx].sfba004,  #部位，作业，作业序
                       g_sfdc4_d[g_detail_idx].sfdc004,g_sfdc4_d[g_detail_idx].sfdc006,  #需求料号，需求料件单位
                       g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013,g_sfdd_d[l_ac].sfdd006)    #替代料号,替代发料单位
                     RETURNING g_sfdd_d[l_ac].sfdd002
                  DISPLAY g_sfdd_d[l_ac].sfdd002 TO sfdd002
               END IF
            END IF
            LET g_sfdd_d_o.sfdd006 = g_sfdd_d[l_ac].sfdd006
          
         AFTER FIELD sfdd007
         #数量
            #add 150115 单位取位
            IF NOT cl_null(g_sfdd_d[l_ac].sfdd006) AND NOT cl_null(g_sfdd_d[l_ac].sfdd007) THEN
               CALL s_aooi250_get_msg(g_sfdd_d[l_ac].sfdd006) RETURNING l_success,g_ooca002,g_ooca004
               IF l_success THEN
                  CALL s_num_round(g_ooca004,g_sfdd_d[l_ac].sfdd007,g_ooca002) RETURNING g_sfdd_d[l_ac].sfdd007
                  DISPLAY BY NAME g_sfdd_d[l_ac].sfdd007
               END IF
            END IF
            #add 150115 end
            
            #mod 141211
            ##不可小于等于0
            #IF NOT cl_ap_chk_Range(g_sfdd_d[l_ac].sfdd007,"0.000","0","","","azz-00079",1) THEN
            #   NEXT FIELD CURRENT
            #END IF
            IF g_sfda_m.sfda002[1,1]='1' THEN #發料單
               #不可小于0，可以等于0 因为到倉庫那確實沒有庫存，那實際量就0，其他的有庫存還是要發
               IF NOT cl_null(g_sfdd_d[l_ac].sfdd007) AND g_sfdd_d[l_ac].sfdd007 < 0 THEN
                  #數量不可小於0
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00041'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
            ELSE #退料單
               #不可小于等于0
               IF NOT cl_ap_chk_Range(g_sfdd_d[l_ac].sfdd007,"0.000","0","","","azz-00079",1) THEN
                  NEXT FIELD CURRENT
               END IF
            END IF
            #mod 141211-end

            IF NOT cl_null(g_sfdd_d[l_ac].sfdd007) THEN
               #替代料数量检查
               IF g_sfdd_d[l_ac].sfdd001 != g_sfdc4_d[g_detail_idx].sfdc004 OR g_sfdd_d[l_ac].sfdd013 != g_sfdc4_d[g_detail_idx].sfdc005 THEN  #替代料
                  CALL s_asft310_get_bmea(g_sfaa.sfaa010,g_sfaa.sfaa011,g_sfdc4_d[g_detail_idx].sfdc004,g_sfdc4_d[g_detail_idx].sfba002,g_sfdc4_d[g_detail_idx].sfba003,g_sfdc4_d[g_detail_idx].sfba004,g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013)
                     RETURNING l_success,l_bmea.*
                  IF NOT l_success THEN
                     NEXT FIELD CURRENT
                  END IF
                  #替代料为部分替代时，替代料的數量不可超过上限比率
                  IF l_bmea.bmea016 = '1' THEN
                     CALL asft310_get_sfdd007_replace(l_cmd) RETURNING l_success,l_sfdd007,l_sfdd009   #替换料件折合成元件的数量
                     IF NOT l_success THEN
                        NEXT FIELD CURRENT
                     END IF
                     #  实际发料数量 > 需求数量 * 部份替代上限比率 / 100
                     IF l_sfdd007 > g_sfdc4_d[g_detail_idx].sfdc007 * l_bmea.bmea017 / 100 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'asf-00327'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               
               #數量總數不可超過申請數量
               CALL asft310_chk_sfdd_amt(l_cmd,'sfdd007') RETURNING l_success
               IF NOT l_success THEN
                  NEXT FIELD CURRENT
               END IF
               
               #发料单做在捡量的检查
               IF g_prog[1,6]='asft31' AND NOT cl_null(g_sfdd_d[l_ac].sfdd007) AND NOT cl_null(g_sfdd_d[l_ac].sfdd003) THEN  #在捡数量 库位
                  IF cl_null(g_sfdd_d[l_ac].sfdd010) THEN LET g_sfdd_d[l_ac].sfdd010= ' ' END IF  #库存管理特征
                  IF cl_null(g_sfdd_d[l_ac].sfdd004) THEN LET g_sfdd_d[l_ac].sfdd004= ' ' END IF  #储位
                  IF cl_null(g_sfdd_d[l_ac].sfdd005) THEN LET g_sfdd_d[l_ac].sfdd005= ' ' END IF  #批号
                  #指定庫位、儲位、批號時，判斷參數是否檢查在檢量，如需檢查在檢量，在庫存數-在檢數不足申請數量時不允許輸入
                  #                           据点   料件编号                产品特征                库存管理特征
                  CALL s_inventory_check_inan(g_site,g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013,g_sfdd_d[l_ac].sfdd010,
                  #                           库位                   储位                    批号
                                              g_sfdd_d[l_ac].sfdd003,g_sfdd_d[l_ac].sfdd004,g_sfdd_d[l_ac].sfdd005,
                  #                           交易单位                在捡数量
                                              g_sfdd_d[l_ac].sfdd006,g_sfdd_d[l_ac].sfdd007,
                  #                           单据编号            项次                            项序
                                              g_sfda_m.sfdadocno,g_sfdc4_d[g_detail_idx].sfdcseq,g_sfdd_d[l_ac].sfddseq1)
                       RETURNING l_success,l_flag
                  IF NOT l_flag THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
               #预设参考数量=數量*單位轉換率
               IF NOT cl_null(g_sfdd_d[l_ac].sfdd006) AND NOT cl_null(g_sfdd_d[l_ac].sfdd008) THEN
                  #参考单位申请数量=申请数量经过转换率换算为参考单位的数量
                  #mod 150101
                  #CALL s_aimi190_get_convert(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd006,g_sfdd_d[l_ac].sfdd008) RETURNING l_success,l_rate
                  #IF NOT l_success THEN
                  #   LET l_rate = 1
                  #END IF
                  #LET g_sfdd_d[l_ac].sfdd009 = g_sfdd_d[l_ac].sfdd007 * l_rate
                  CALL s_aooi250_convert_qty(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd006,g_sfdd_d[l_ac].sfdd008,g_sfdd_d[l_ac].sfdd007)
                     RETURNING l_success,g_sfdd_d[l_ac].sfdd009
                  IF NOT l_success THEN
                     LET g_sfdd_d[l_ac].sfdd009 = g_sfdd_d[l_ac].sfdd007
                  END IF
                  #mod 150101 end
               ELSE
                  LET g_sfdd_d[l_ac].sfdd009 = 0
               END IF
               
            END IF
            LET g_sfdd_d_o.sfdd007 = g_sfdd_d[l_ac].sfdd007
             
         AFTER FIELD sfdd008
         #参考单位
            IF NOT cl_null(g_sfdd_d[l_ac].sfdd008) THEN
               #校验带值说明
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfdd_d[l_ac].sfdd008
               IF cl_chk_exist_and_ref_val("v_ooca001_1") THEN
                  #檢查成功時後續處理
                  LET g_sfdd_d[l_ac].sfdd008_desc = g_chkparam.return1
                  DISPLAY BY NAME g_sfdd_d[l_ac].sfdd008_desc
               ELSE
                  #檢查失敗時後續處理
                  LET g_sfdd_d[l_ac].sfdd008 = g_sfdd_d_t.sfdd008
                  NEXT FIELD CURRENT
               END IF

               #單位需與發料料號的基礎單位有轉換率
               CALL s_aimi190_chk_base_convert(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd008) RETURNING l_success
               IF NOT l_success THEN
                  NEXT FIELD CURRENT
               END IF

               #预设参考数量=數量*單位轉換率
               IF NOT cl_null(g_sfdd_d[l_ac].sfdd006) AND NOT cl_null(g_sfdd_d[l_ac].sfdd007) THEN
                  #参考单位申请数量=申请数量经过转换率换算为参考单位的数量
                  #mod 150101
                  #CALL s_aimi190_get_convert(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd006,g_sfdd_d[l_ac].sfdd008) RETURNING l_success,l_rate
                  #IF NOT l_success THEN
                  #   LET l_rate = 1
                  #END IF
                  #LET g_sfdd_d[l_ac].sfdd009 = g_sfdd_d[l_ac].sfdd007 * l_rate
                  CALL s_aooi250_convert_qty(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd006,g_sfdd_d[l_ac].sfdd008,g_sfdd_d[l_ac].sfdd007)
                     RETURNING l_success,g_sfdd_d[l_ac].sfdd009
                  IF NOT l_success THEN
                     LET g_sfdd_d[l_ac].sfdd009 = g_sfdd_d[l_ac].sfdd007
                  END IF
                  #mod 150101 end
               END IF
            ELSE
               LET g_sfdd_d[l_ac].sfdd009 = 0
            END IF
            LET g_sfdd_d_o.sfdd008 = g_sfdd_d[l_ac].sfdd008

         AFTER FIELD sfdd009
         #参考数量
            #add 150115 单位取位
            IF NOT cl_null(g_sfdd_d[l_ac].sfdd008) AND NOT cl_null(g_sfdd_d[l_ac].sfdd009) THEN
               CALL s_aooi250_get_msg(g_sfdd_d[l_ac].sfdd008) RETURNING l_success,g_ooca002,g_ooca004
               IF l_success THEN
                  CALL s_num_round(g_ooca004,g_sfdd_d[l_ac].sfdd009,g_ooca002) RETURNING g_sfdd_d[l_ac].sfdd009
                  DISPLAY BY NAME g_sfdd_d[l_ac].sfdd009
               END IF
            END IF
            #add 150115 end
            
            #不可小於0 
            IF NOT cl_ap_chk_Range(g_sfdd_d[l_ac].sfdd009,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD sfdd009
            END IF
            
            IF NOT cl_null(g_sfdd_d[l_ac].sfdd009) THEN
               #替代料数量检查
               IF g_sfdd_d[l_ac].sfdd001 != g_sfdc4_d[g_detail_idx].sfdc004 OR g_sfdd_d[l_ac].sfdd013 != g_sfdc4_d[g_detail_idx].sfdc005 THEN  #替代料
                  CALL s_asft310_get_bmea(g_sfaa.sfaa010,g_sfaa.sfaa011,g_sfdc4_d[g_detail_idx].sfdc004,g_sfdc4_d[g_detail_idx].sfba002,g_sfdc4_d[g_detail_idx].sfba003,g_sfdc4_d[g_detail_idx].sfba004,g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013)
                     RETURNING l_success,l_bmea.*
                  IF NOT l_success THEN
                     NEXT FIELD CURRENT
                  END IF
                  #替代料为部分替代时，替代料的數量不可超过上限比率
                  IF l_bmea.bmea016 = '1' THEN
                     CALL asft310_get_sfdd007_replace(l_cmd) RETURNING l_success,l_sfdd007,l_sfdd009   #替换料件折合成元件的数量
                     IF NOT l_success THEN
                        NEXT FIELD CURRENT
                     END IF
                     #  实际发料数量 > 需求数量 * 部份替代上限比率 / 100
                     IF l_sfdd009 > g_sfdc4_d[g_detail_idx].sfdc010 * l_bmea.bmea017 / 100 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'asf-00327'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               
               #數量總數不可超過申請數量
               CALL asft310_chk_sfdd_amt(l_cmd,'sfdd009') RETURNING l_success
               IF NOT l_success THEN
                  NEXT FIELD CURRENT
               END IF
            END IF
            LET g_sfdd_d_o.sfdd009 = g_sfdd_d[l_ac].sfdd009

         AFTER FIELD sfdd010
            #库存管理特征
            #不可输入的栏位不做检查，以防死循环（工單指定的時候庫存不一定有了，可能是還在在製的東西，等庫存有了就能發了）
            IF cl_null(g_sfdc4_d[g_detail_idx].sfdc016) THEN
               IF NOT cl_null(g_sfdd_d[l_ac].sfdd010) THEN
                  SELECT COUNT(*) INTO l_cnt FROM inag_t
                   WHERE inagent  = g_enterprise
                     AND inagsite = g_site
                     AND inag001  = g_sfdd_d[l_ac].sfdd001  #料件
                     AND inag002  = g_sfdd_d[l_ac].sfdd013  #产品特征
                     AND inag003  = g_sfdd_d[l_ac].sfdd010  #库存管理特征
                  IF l_cnt = 0 THEN
                     #无此库存管理特征，请检查库存资料后从新输入
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00117'
                     LET g_errparam.extend = '' #g_sfdd_d[l_ac].sfdd001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_sfdd_d_o.sfdd010 = g_sfdd_d[l_ac].sfdd010

         AFTER FIELD sfdd011
            #包装容器
            #輸入值須存在[T:料件包裝資料檔].[C:包裝容器編號]，錯誤訊息「此料沒有這種包裝方式，請重新輸入」
            IF NOT cl_null(g_sfdd_d[l_ac].sfdd011) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfdd_d[l_ac].sfdd011
               IF NOT cl_chk_exist("v_imaa001_3") THEN
                  LET g_sfdd_d[l_ac].sfdd011 = g_sfdd_d_t.sfdd011
                  NEXT FIELD CURRENT
               END IF
            END IF
            LET g_sfdd_d_o.sfdd011 = g_sfdd_d[l_ac].sfdd011
            
         ON ACTION controlp INFIELD sfdd001
         #需求料号
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdd_d[l_ac].sfdd001
            LET g_qryparam.where = " (  (bmea001 ='",g_sfaa.sfaa010,"' ",   #主件料號
                                   " AND bmea002 = '",g_sfaa.sfaa011,"' ",  #特性
                                   " AND bmea003 = '",g_sfdc4_d[g_detail_idx].sfdc004,"' ",  #元件料號
                                   " AND bmea004 = '",g_sfdc4_d[g_detail_idx].sfba002,"' ",  #部位
                                   " AND bmea005 = '",g_sfdc4_d[g_detail_idx].sfba003,"' ",  #作業
                                   " AND bmea006 = '",g_sfdc4_d[g_detail_idx].sfba004,"') ", #製程序
                                   " OR ",
                                   "(bmea001 ='ALL' ",   #主件料號
                                   " AND bmea003 = '",g_sfdc4_d[g_detail_idx].sfdc004,"')) ",  #元件料號
                                   " AND bmea009<= '",g_today,"' ",
                                   " AND (bmea010 > '",g_today,"' OR bmea010 IS NULL ) "
            #关于控制组
            CALL s_control_get_doc_sql("imaf016",g_sfda_m.sfdadocno,'4')   #下面开窗中的据点生命周期、需限制的单据、4代表产品生命周期检核
               RETURNING l_success,l_where     #num5和STRING类型
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND ",l_where
            END IF
            CALL s_control_get_doc_sql("imaa009",g_sfda_m.sfdadocno,'5')
               RETURNING l_success,l_where      #num5和STRING类型
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND ",l_where
            END IF
            #关于控制组--end
            CALL q_bmea008_5()  #取替代中抓取
            LET g_sfdd_d[l_ac].sfdd001 = g_qryparam.return1     #將開窗取得的值
            DISPLAY g_sfdd_d[l_ac].sfdd001 TO sfdd001
            NEXT FIELD sfdd001


         ON ACTION controlp INFIELD sfdd013
            #产品特征
            CALL s_feature_single(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013,g_site,'')
               RETURNING l_success,g_sfdd_d[l_ac].sfdd013
            IF NOT l_success THEN
               LET g_sfdd_d[l_ac].sfdd013 = ' '
            END IF
            DISPLAY g_sfdd_d[l_ac].sfdd013 TO sfdd013              #顯示到畫面上
            NEXT FIELD sfdd013

         ON ACTION controlp INFIELD sfdd003
            #仓库
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdd_d[l_ac].sfdd003
            LET g_qryparam.default2 = g_sfdd_d[l_ac].sfdd004
            LET g_qryparam.default3 = g_sfdd_d[l_ac].sfdd005
            LET g_qryparam.default4 = g_sfdd_d[l_ac].sfdd010
            
            #mod 141118 q_inag004_13修改成传参方式
            #LET g_qryparam.where = " inag001 ='",g_sfdd_d[l_ac].sfdd001,"' AND inag002 ='",g_sfdd_d[l_ac].sfdd013,"'"
            LET g_qryparam.arg1 = g_sfdd_d[l_ac].sfdd001
            IF cl_null(g_sfdd_d[l_ac].sfdd013) THEN
               LET g_qryparam.arg2 = ' '
            ELSE
               LET g_qryparam.arg2 = g_sfdd_d[l_ac].sfdd013
            END IF
            
            #已有指定不可输入
            LET g_qryparam.where = "1=1 "
            #IF g_sfdd003_switch = 'N' THEN
            #   IF cl_null(g_sfdd_d[l_ac].sfdd003) THEN
            #      LET g_qryparam.where = g_qryparam.where ," AND inag004 = ' ' "
            #   ELSE
            #      LET g_qryparam.where = g_qryparam.where ," AND inag004 = '",g_sfdd_d[l_ac].sfdd003,"' "
            #   END IF
            #END IF
            IF g_sfdd004_switch = 'N' THEN
               IF cl_null(g_sfdd_d[l_ac].sfdd004) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag005 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag005 = '",g_sfdd_d[l_ac].sfdd004,"' "
               END IF
            END IF
            IF g_sfdd005_switch = 'N' THEN
               IF cl_null(g_sfdd_d[l_ac].sfdd005) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag006 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag006 = '",g_sfdd_d[l_ac].sfdd005,"' "
               END IF
            END IF
            IF g_sfdd010_switch = 'N' THEN
               IF cl_null(g_sfdd_d[l_ac].sfdd010) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag003 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag003 = '",g_sfdd_d[l_ac].sfdd010,"' "
               END IF
            END IF
            #mod 141118 --end
            
            #关于控制组
            CALL s_control_get_doc_sql("inag004",g_sfda_m.sfdadocno,'6')
                 RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_where
            END IF
            #关于控制组--end
               
            IF g_sfda_m.sfda002[1,1]='1' THEN #發料單 庫存>0
               CALL q_inag004_13()  #库位、储位、批号、库存管理特征
            ELSE #退料單 不卡控库存
               CALL q_inag004_16()  #库位、储位、批号、库存管理特征
            END IF
            LET g_sfdd_d[l_ac].sfdd003 = g_qryparam.return1
            LET g_sfdd_d[l_ac].sfdd004 = g_qryparam.return2
            LET g_sfdd_d[l_ac].sfdd005 = g_qryparam.return3
            LET g_sfdd_d[l_ac].sfdd010 = g_qryparam.return4
            DISPLAY g_sfdd_d[l_ac].sfdd003 TO sfdd003
            DISPLAY g_sfdd_d[l_ac].sfdd004 TO sfdd004
            DISPLAY g_sfdd_d[l_ac].sfdd005 TO sfdd005
            DISPLAY g_sfdd_d[l_ac].sfdd010 TO sfdd010
            #栏位说明
            CALL s_desc_get_stock_desc(g_site,g_sfdd_d[l_ac].sfdd003) RETURNING g_sfdd_d[l_ac].sfdd003_desc
            IF NOT cl_null(g_sfdd_d[l_ac].sfdd004) THEN
               CALL s_desc_get_locator_desc(g_site,g_sfdd_d[l_ac].sfdd003,g_sfdd_d[l_ac].sfdd004) RETURNING g_sfdd_d[l_ac].sfdd004_desc
            END IF
            DISPLAY g_sfdd_d[l_ac].sfdd003_desc TO sfdd003_desc
            DISPLAY g_sfdd_d[l_ac].sfdd004_desc TO sfdd004_desc
            NEXT FIELD sfdd003
            
         ON ACTION controlp INFIELD sfdd004
         #储位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdd_d[l_ac].sfdd004
            LET g_qryparam.default2 = g_sfdd_d[l_ac].sfdd005
            LET g_qryparam.default3 = g_sfdd_d[l_ac].sfdd010
            #LET g_qryparam.where = " inag001 ='",g_sfdd_d[l_ac].sfdd001,"' AND inag002 ='",g_sfdd_d[l_ac].sfdd013,"' AND inag004 ='",g_sfdd_d[l_ac].sfdd003,"' "
            LET g_qryparam.where = " inag001 ='",g_sfdd_d[l_ac].sfdd001,"' AND inag002 ='",g_sfdd_d[l_ac].sfdd013,"' " #mod 141211
            #已有指定不可输入
            #add 141211
            IF g_sfdd003_switch = 'N' THEN
               IF cl_null(g_sfdd_d[l_ac].sfdd003) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag004 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag004 = '",g_sfdd_d[l_ac].sfdd003,"' "
               END IF
            END IF
            #add 141211 end
            #IF g_sfdd004_switch = 'N' THEN
            #   IF cl_null(g_sfdd_d[l_ac].sfdd004) THEN
            #      LET g_qryparam.where = g_qryparam.where ," AND inag005 = ' ' "
            #   ELSE
            #      LET g_qryparam.where = g_qryparam.where ," AND inag005 = '",g_sfdd_d[l_ac].sfdd004,"' "
            #   END IF
            #END IF
            IF g_sfdd005_switch = 'N' THEN
               IF cl_null(g_sfdd_d[l_ac].sfdd005) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag006 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag006 = '",g_sfdd_d[l_ac].sfdd005,"' "
               END IF
            END IF
            IF g_sfdd010_switch = 'N' THEN
               IF cl_null(g_sfdd_d[l_ac].sfdd010) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag003 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag003 = '",g_sfdd_d[l_ac].sfdd010,"' "
               END IF
            END IF
            
            IF g_sfda_m.sfda002[1,1]='1' THEN #發料單 庫存>0
               CALL q_inag005_13()  #储位、批号、库存管理特征
            ELSE #退料單 不卡控库存
               CALL q_inag005_14()  #储位、批号、库存管理特征
            END IF
            LET g_sfdd_d[l_ac].sfdd004 = g_qryparam.return1
            LET g_sfdd_d[l_ac].sfdd005 = g_qryparam.return2
            LET g_sfdd_d[l_ac].sfdd010 = g_qryparam.return3
            DISPLAY g_sfdd_d[l_ac].sfdd004 TO sfdd004
            DISPLAY g_sfdd_d[l_ac].sfdd005 TO sfdd005
            DISPLAY g_sfdd_d[l_ac].sfdd010 TO sfdd010 
            #栏位说明
            IF NOT cl_null(g_sfdd_d[l_ac].sfdd004) THEN
               CALL s_desc_get_locator_desc(g_site,g_sfdd_d[l_ac].sfdd003,g_sfdd_d[l_ac].sfdd004) RETURNING g_sfdd_d[l_ac].sfdd004_desc
            END IF
            DISPLAY g_sfdd_d[l_ac].sfdd004_desc TO sfdd004_desc
            NEXT FIELD sfdd004

         ON ACTION controlp INFIELD sfdd005
         #批号
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdd_d[l_ac].sfdd004
            LET g_qryparam.default2 = g_sfdd_d[l_ac].sfdd005
            LET g_qryparam.default3 = g_sfdd_d[l_ac].sfdd010
            #LET g_qryparam.where = " inag001 ='",g_sfdd_d[l_ac].sfdd001,"' AND inag002 ='",g_sfdd_d[l_ac].sfdd013,"' AND inag004 ='",g_sfdd_d[l_ac].sfdd003,"' "
            LET g_qryparam.where = " inag001 ='",g_sfdd_d[l_ac].sfdd001,"' AND inag002 ='",g_sfdd_d[l_ac].sfdd013,"' " #mod 141211
            #IF NOT cl_null(g_sfdd_d[l_ac].sfdd004) THEN  #以防储位不可输入时误更新
            #   LET g_qryparam.where = g_qryparam.where CLIPPED," AND inag005 ='",g_sfdd_d[l_ac].sfdd004,"' "
            #END IF
            #已有指定不可输入
            #add 141211
            IF g_sfdd003_switch = 'N' THEN
               IF cl_null(g_sfdd_d[l_ac].sfdd003) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag004 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag004 = '",g_sfdd_d[l_ac].sfdd003,"' "
               END IF
            END IF
            #add 141211 end
            IF g_sfdd004_switch = 'N' THEN
               IF cl_null(g_sfdd_d[l_ac].sfdd004) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag005 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag005 = '",g_sfdd_d[l_ac].sfdd004,"' "
               END IF
            END IF
            #IF g_sfdd005_switch = 'N' THEN
            #   IF cl_null(g_sfdd_d[l_ac].sfdd005) THEN
            #      LET g_qryparam.where = g_qryparam.where ," AND inag006 = ' ' "
            #   ELSE
            #      LET g_qryparam.where = g_qryparam.where ," AND inag006 = '",g_sfdd_d[l_ac].sfdd005,"' "
            #   END IF
            #END IF
            IF g_sfdd010_switch = 'N' THEN
               IF cl_null(g_sfdd_d[l_ac].sfdd010) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag003 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag003 = '",g_sfdd_d[l_ac].sfdd010,"' "
               END IF
            END IF
            
            IF g_sfda_m.sfda002[1,1]='1' THEN #發料單 庫存>0
               CALL q_inag005_13()  #储位、批号、库存管理特征
            ELSE #退料單 不卡控库存
               CALL q_inag005_14()  #储位、批号、库存管理特征
            END IF
            LET g_sfdd_d[l_ac].sfdd004 = g_qryparam.return1
            LET g_sfdd_d[l_ac].sfdd005 = g_qryparam.return2
            LET g_sfdd_d[l_ac].sfdd010 = g_qryparam.return3
            DISPLAY g_sfdd_d[l_ac].sfdd004 TO sfdd004
            DISPLAY g_sfdd_d[l_ac].sfdd005 TO sfdd005
            DISPLAY g_sfdd_d[l_ac].sfdd010 TO sfdd010 
            #栏位说明
            IF NOT cl_null(g_sfdd_d[l_ac].sfdd004) THEN
               CALL s_desc_get_locator_desc(g_site,g_sfdd_d[l_ac].sfdd003,g_sfdd_d[l_ac].sfdd004) RETURNING g_sfdd_d[l_ac].sfdd004_desc
            END IF
            DISPLAY g_sfdd_d[l_ac].sfdd004_desc TO sfdd004_desc
            NEXT FIELD sfdd005

         ON ACTION controlp INFIELD sfdd010
         #库存管理特征
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdd_d[l_ac].sfdd004
            LET g_qryparam.default2 = g_sfdd_d[l_ac].sfdd005
            LET g_qryparam.default3 = g_sfdd_d[l_ac].sfdd010
            #LET g_qryparam.where = " inag001 ='",g_sfdd_d[l_ac].sfdd001,"' AND inag002 ='",g_sfdd_d[l_ac].sfdd013,"' AND inag004 ='",g_sfdd_d[l_ac].sfdd003,"' "
            LET g_qryparam.where = " inag001 ='",g_sfdd_d[l_ac].sfdd001,"' AND inag002 ='",g_sfdd_d[l_ac].sfdd013,"' " #mod 141211
            #IF NOT cl_null(g_sfdd_d[l_ac].sfdd004) THEN  #以防储位不可输入时误更新
            #   LET g_qryparam.where = g_qryparam.where CLIPPED," AND inag005 ='",g_sfdd_d[l_ac].sfdd004,"' "
            #END IF
            #已有指定不可输入
            #add 141211
            IF g_sfdd003_switch = 'N' THEN
               IF cl_null(g_sfdd_d[l_ac].sfdd003) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag004 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag004 = '",g_sfdd_d[l_ac].sfdd003,"' "
               END IF
            END IF
            #add 141211 end
            IF g_sfdd004_switch = 'N' THEN
               IF cl_null(g_sfdd_d[l_ac].sfdd004) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag005 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag005 = '",g_sfdd_d[l_ac].sfdd004,"' "
               END IF
            END IF
            IF g_sfdd005_switch = 'N' THEN
               IF cl_null(g_sfdd_d[l_ac].sfdd005) THEN
                  LET g_qryparam.where = g_qryparam.where ," AND inag006 = ' ' "
               ELSE
                  LET g_qryparam.where = g_qryparam.where ," AND inag006 = '",g_sfdd_d[l_ac].sfdd005,"' "
               END IF
            END IF
            #IF g_sfdd010_switch = 'N' THEN
            #   IF cl_null(g_sfdd_d[l_ac].sfdd010) THEN
            #      LET g_qryparam.where = g_qryparam.where ," AND inag003 = ' ' "
            #   ELSE
            #      LET g_qryparam.where = g_qryparam.where ," AND inag003 = '",g_sfdd_d[l_ac].sfdd010,"' "
            #   END IF
            #END IF
            
            IF g_sfda_m.sfda002[1,1]='1' THEN #發料單 庫存>0
               CALL q_inag005_13()  #储位、批号、库存管理特征
            ELSE #退料單 不卡控库存
               CALL q_inag005_14()  #储位、批号、库存管理特征
            END IF
            LET g_sfdd_d[l_ac].sfdd004 = g_qryparam.return1
            LET g_sfdd_d[l_ac].sfdd005 = g_qryparam.return2
            LET g_sfdd_d[l_ac].sfdd010 = g_qryparam.return3
            DISPLAY g_sfdd_d[l_ac].sfdd004 TO sfdd004
            DISPLAY g_sfdd_d[l_ac].sfdd005 TO sfdd005
            DISPLAY g_sfdd_d[l_ac].sfdd010 TO sfdd010 
            #栏位说明
            IF NOT cl_null(g_sfdd_d[l_ac].sfdd004) THEN
               CALL s_desc_get_locator_desc(g_site,g_sfdd_d[l_ac].sfdd003,g_sfdd_d[l_ac].sfdd004) RETURNING g_sfdd_d[l_ac].sfdd004_desc
            END IF
            DISPLAY g_sfdd_d[l_ac].sfdd004_desc TO sfdd004_desc
            NEXT FIELD sfdd010

         ON ACTION controlp INFIELD sfdd006
         #单位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdd_d[l_ac].sfdd006
            CALL q_ooca001_1()
            LET g_sfdd_d[l_ac].sfdd006 = g_qryparam.return1
            DISPLAY g_sfdd_d[l_ac].sfdd006 TO sfdd006

         ON ACTION controlp INFIELD sfdd008
         #参考单位
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdd_d[l_ac].sfdd008
            CALL q_ooca001_1()
            LET g_sfdd_d[l_ac].sfdd008 = g_qryparam.return1
            DISPLAY g_sfdd_d[l_ac].sfdd008 TO sfdd008

         ON ACTION controlp INFIELD sfdd011
         #包装容器
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdd_d[l_ac].sfdd011
            CALL q_imaa001_11()
            LET g_sfdd_d[l_ac].sfdd011 = g_qryparam.return1     #將開窗取得的值>
            DISPLAY g_sfdd_d[l_ac].sfdd011 TO sfdd011
            NEXT FIELD sfdd011
         
         #add 141222
         ON ACTION controlp INFIELD sfdd_ooff013  #备注
            CALL s_aooi360_edit('7',g_sfda_m.sfdadocno,g_sfdc4_d[g_detail_idx].sfdcseq,g_sfdd_d[l_ac].sfddseq1,' ',' ',' ',' ',' ',' ',' ','4',g_sfdd_d[l_ac].sfdd_ooff013)
               RETURNING g_sfdd_d[l_ac].sfdd_ooff013
            DISPLAY g_sfdd_d[l_ac].sfdd_ooff013 TO sfdd_ooff013              #顯示到畫面上
            NEXT FIELD sfdd_ooff013                          #返回原欄位
         #add 141222 end
         
         AFTER ROW
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            CALL asft310_b_fill() #單身填充
            CALL asft310_b_fill2('0') #單身填充
            LET l_ac = l_ac_t
            
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_sfdd_d[l_ac].* = g_sfdd_d_t.*
               END IF
               CLOSE asft310_bcl6
               CLOSE asft310_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            #其他table進行unlock

            CALL asft310_unlock_b("sfdd_t","'6'")
            CALL s_transaction_end('Y','0')

         AFTER INPUT
            IF INT_FLAG THEN
            END IF
            
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_sfdd_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_sfdd_d.getLength()+1

      END INPUT


      BEFORE DIALOG
         IF g_sfda_m.sfdastus = 'Y' THEN #已审核的单据只能修改发料明细和料号汇总页签
            LET l_flag = 'f'
         END IF
         #新增時強制從單頭開始填
         IF cl_null(l_flag) THEN LET l_flag = '0' END IF
         CASE l_flag
            WHEN '0'
                 IF p_cmd = 'a' THEN
                    NEXT FIELD sfdadocno
                 ELSE
                    #LET g_curr_diag = ui.DIALOG.getCurrent()
                    #LET g_aw = g_curr_diag.getCurrentItem()
                    #DISPLAY "1=",g_aw
                    #
                    #LET g_aw =  DIALOG.getCurrentItem()
                    #DISPLAY "2=",g_aw
                    #
                    #LET g_aw =  DIALOG.getForm()
                    #DISPLAY "3=",g_aw
                    #
                    #LET g_aw =  g_curr_diag.getForm()
                    #DISPLAY "4=",g_aw
                    #
                    #LET g_aw =  g_curr_diag.getForm()
                    #DISPLAY "4=",g_aw
                    
                    CASE DIALOG.getCurrentItem()
                       WHEN "s_detail1"
                          NEXT FIELD sfdb001
                       WHEN "s_detail2"
                          NEXT FIELD sfdcseq
                       #WHEN "s_detail3"
                       #   NEXT FIELD sfdeseq
                       #WHEN "s_detail4"
                       #   NEXT FIELD sfdcseq_4
                       WHEN "s_detail5"
                          NEXT FIELD sfdfseq1
                       WHEN "s_detail6"
                          NEXT FIELD sfddseq1
                       #WHEN "s_detail7"
                       #   NEXT FIELD inaoseq
                    END CASE
                 END IF
            WHEN 'b'
                 LET l_flag = '0'
                 IF cl_null(l_ac) OR l_ac=0 THEN LET l_ac = 1 END IF
                 #LET l_ac = 1   #不能是当前笔，因为产生方式有可能全部删除再产生，当前笔可能虚大
                 CALL DIALOG.setCurrentRow("s_detail1",l_ac)
                 NEXT FIELD sfdb001
            WHEN 'c'
                 LET l_flag = '0'
                 IF cl_null(l_ac) OR l_ac=0 THEN LET l_ac = 1 END IF
                 #LET l_ac = 1   #不能是当前笔，因为产生方式有可能全部删除再产生，当前笔可能虚大
                 CALL DIALOG.setCurrentRow("s_detail2",l_ac)
                 NEXT FIELD sfdcseq
            WHEN 'f'
                 LET l_flag = '0'
                 IF cl_null(l_ac) OR l_ac=0 THEN LET l_ac = 1 END IF
                 #LET l_ac = 1   #不能是当前笔，因为产生方式有可能全部删除再产生，当前笔可能虚大
                 CALL DIALOG.setCurrentRow("s_detail5",l_ac)
                 NEXT FIELD sfdfseq1
            WHEN 'd'
                 LET l_flag = '0'
                 IF cl_null(l_ac) OR l_ac=0 THEN LET l_ac = 1 END IF
                 #LET l_ac = 1   #不能是当前笔，因为产生方式有可能全部删除再产生，当前笔可能虚大
                 CALL DIALOG.setCurrentRow("s_detail6",l_ac)
                 NEXT FIELD sfddseq1
         END CASE

      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)

      ON ACTION controlr
         CALL cl_show_req_fields()

      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")

      ON ACTION accept
         ACCEPT DIALOG

      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG

      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE
         EXIT DIALOG

      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG

   END DIALOG
EXIT WHILE
END WHILE

END FUNCTION]]>
  </point>
  <point name="function.asft310_show" order="38" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_show()
   LET g_sfda_m_t.* = g_sfda_m.*      #保存單頭舊值

   #发退料需求、料号汇总、发退料明细、制造批序号页签隐藏
   #部位  在制程中委外时隐藏不显示
   IF g_sfda_m.sfda002 = '15' OR g_sfda_m.sfda002 = '25' THEN
      CALL cl_set_comp_visible("page_3,page_4,page_5,page_6",FALSE)
      CALL cl_set_comp_visible("sfdb003,sfdb003_desc",FALSE)
   ELSE
      CALL cl_set_comp_visible("page_3,page_4,page_5,page_6",TRUE)
      CALL cl_set_comp_visible("sfdb003,sfdb003_desc",TRUE)
   END IF
   #用不到套数页签的类型，套数页签隐藏
   IF g_sfda_m.sfda002 = '14' OR g_sfda_m.sfda002 = '23' OR g_sfda_m.sfda002 = '24' THEN
      CALL cl_set_comp_visible("bpage_1",FALSE)
   ELSE
      CALL cl_set_comp_visible("bpage_1",TRUE)
   END IF
   #runcard在类型为非制程委外时隐藏
   IF g_sfda_m.sfda002 = '15' OR g_sfda_m.sfda002 = '25' THEN
      CALL cl_set_comp_visible("sfdb002",TRUE)
   ELSE
      CALL cl_set_comp_visible("sfdb002",FALSE)
   END IF
   
   IF g_bfill = "Y" THEN
      CALL asft310_b_fill() #單身填充
      CALL asft310_b_fill2('0') #單身填充
   END IF

   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL asft310_set_pk_array()
   #add-point:ON ACTION agendum

   #END add-point
   CALL cl_user_overview_set_follow_pic()

   #讀入ref值(單頭)
   #add-point:show段reference

   CALL s_aooi200_get_slip_desc(g_sfda_m.sfdadocno)
        RETURNING g_sfda_m.oobal004
   DISPLAY BY NAME g_sfda_m.oobal004
   
   #部门
   IF g_sfda_m.sfda002 = '15' OR g_sfda_m.sfda002 = '25' THEN  #製程中委外時，顯示名稱為委外廠商
      #帶值:廠商名稱
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = g_sfda_m.sfda003
      CALL cl_ref_val("v_pmaal004")
      LET g_sfda_m.sfda003_desc = g_chkparam.return1
      DISPLAY BY NAME g_sfda_m.sfda003_desc
   ELSE
      #帶值:部门名稱
      CALL s_desc_get_department_desc(g_sfda_m.sfda003) RETURNING g_sfda_m.sfda003_desc
      DISPLAY BY NAME g_sfda_m.sfda003_desc
   END IF

   #人员姓名
   CALL s_desc_get_person_desc(g_sfda_m.sfda004) RETURNING g_sfda_m.sfda004_desc
   DISPLAY BY NAME g_sfda_m.sfda004_desc

   #人员姓名
   CALL s_desc_get_person_desc(g_sfda_m.sfdaownid) RETURNING g_sfda_m.sfdaownid_desc
   DISPLAY BY NAME g_sfda_m.sfdaownid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_sfda_m.sfdaowndp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_sfda_m.sfdaowndp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_sfda_m.sfdaowndp_desc

   #人员姓名
   CALL s_desc_get_person_desc(g_sfda_m.sfdacrtid) RETURNING g_sfda_m.sfdacrtid_desc
   DISPLAY BY NAME g_sfda_m.sfdacrtid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_sfda_m.sfdacrtdp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_sfda_m.sfdacrtdp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_sfda_m.sfdacrtdp_desc

   #人员姓名
   CALL s_desc_get_person_desc(g_sfda_m.sfdamodid) RETURNING g_sfda_m.sfdamodid_desc
   DISPLAY BY NAME g_sfda_m.sfdamodid_desc

   #人员姓名
   CALL s_desc_get_person_desc(g_sfda_m.sfdacnfid) RETURNING g_sfda_m.sfdacnfid_desc
   DISPLAY BY NAME g_sfda_m.sfdacnfid_desc

   #人员姓名
   CALL s_desc_get_person_desc(g_sfda_m.sfdapstid) RETURNING g_sfda_m.sfdapstid_desc
   DISPLAY BY NAME g_sfda_m.sfdapstid_desc
   
   
   CALL asft310_show_sfda_ooff013()   #add 141222备注说明
   #end add-point

   #將資料輸出到畫面上
   DISPLAY BY NAME g_sfda_m.sfdadocno,g_sfda_m.oobal004,g_sfda_m.sfdadocdt,g_sfda_m.sfda001,g_sfda_m.sfda002,
       g_sfda_m.sfda003,g_sfda_m.sfda003_desc,g_sfda_m.sfda004,g_sfda_m.sfda004_desc,g_sfda_m.sfda005,
       g_sfda_m.sfda015,g_sfda_m.sfda014,
       g_sfda_m.sfdastus,g_sfda_m.sfdaownid,g_sfda_m.sfdaownid_desc,g_sfda_m.sfdaowndp,g_sfda_m.sfdaowndp_desc,
       g_sfda_m.sfdacrtid,g_sfda_m.sfdacrtid_desc,g_sfda_m.sfdacrtdp,g_sfda_m.sfdacrtdp_desc,g_sfda_m.sfdacrtdt,
       g_sfda_m.sfdamodid,g_sfda_m.sfdamodid_desc,g_sfda_m.sfdamoddt,g_sfda_m.sfdacnfid,g_sfda_m.sfdacnfid_desc,
       g_sfda_m.sfdacnfdt,g_sfda_m.sfdapstid,g_sfda_m.sfdapstid_desc,g_sfda_m.sfdapstdt

   #顯示狀態(stus)圖片
   CASE g_sfda_m.sfdastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")  #unconfirmed
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "S"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
   END CASE

   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()

   #讀入ref值(單身)
   #CALL asft310_detail_show() mark 150109 提高效能

END FUNCTION]]>
  </point>
  <point name="function.asft310_reproduce" order="39" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_reproduce()
   {<Local define>}
   DEFINE l_newno     LIKE sfda_t.sfdadocno
   DEFINE l_oldno     LIKE sfda_t.sfdadocno
   DEFINE l_master    RECORD LIKE sfda_t.*
   DEFINE l_detail    RECORD LIKE sfdb_t.*
   DEFINE l_detail2    RECORD LIKE sfdc_t.*
   DEFINE l_detail3    RECORD LIKE sfde_t.*
   DEFINE l_detail4    RECORD LIKE inao_t.*
   DEFINE l_detail5    RECORD LIKE sfdf_t.*
   DEFINE l_detail6    RECORD LIKE sfdd_t.*
   DEFINE l_cnt       LIKE type_t.num5
   {</Local define>}

   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF

   IF g_sfda_m.sfdadocno IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF

   LET g_sfdadocno_t = g_sfda_m.sfdadocno

   LET g_sfda_m.sfdadocno = ""

   CALL asft310_set_entry('a')
   CALL asft310_set_no_entry('a')

   CALL cl_set_head_visible("","YES")

   #公用欄位給予預設值
   #此段落由子樣板a14產生
   LET g_sfda_m.sfdaownid = g_user
   LET g_sfda_m.sfdaowndp = g_dept
   LET g_sfda_m.sfdacrtid = g_user
   LET g_sfda_m.sfdacrtdp = g_dept
   LET g_sfda_m.sfdacrtdt = cl_get_current()
   LET g_sfda_m.sfdamodid = ""
   LET g_sfda_m.sfdamoddt = ""
   LET g_sfda_m.sfdacnfid = ""
   LET g_sfda_m.sfdacnfdt = ""
   LET g_sfda_m.sfdapstid = ""
   LET g_sfda_m.sfdapstdt = ""
   LET g_sfda_m.sfdadocdt = g_today
   LET g_sfda_m.sfda001   = g_today
   LET g_sfda_m.sfda015   = "01"  #人工输入
   LET g_sfda_m.sfda014   = ""
   LET g_sfda_m.sfdastus  = "N"

   CALL asft310_input("r")

   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF

   LET g_state = "Y"

   LET g_wc = g_wc,
              " OR (",
              " sfdadocno = '", g_sfda_m.sfdadocno CLIPPED, "' "
              , ") "

END FUNCTION]]>
  </point>
  <point name="function.asft310_detail_reproduce" order="40" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_detail_reproduce()
   {<Local define>}
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE sfdb_t.*
   DEFINE l_detail2    RECORD LIKE sfdc_t.*
   DEFINE l_detail3    RECORD LIKE sfde_t.*
   DEFINE l_detail4    RECORD LIKE inao_t.*
   DEFINE l_detail5    RECORD LIKE sfdf_t.*
   DEFINE l_detail6    RECORD LIKE sfdd_t.*
   DEFINE l_detail7    RECORD LIKE sfdd_t.*
   {</Local define>}

   CALL s_transaction_begin()

   LET ld_date = cl_get_current()

   DROP TABLE asft310_detail

   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE asft310_detail AS ",
                "SELECT * FROM sfdb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl

   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO asft310_detail
   SELECT * FROM sfdb_t
    WHERE sfdbent = g_enterprise 
      AND sfdbdocno = g_sfdadocno_t

   #將key修正為調整後
   UPDATE asft310_detail
      #更新key欄位
      SET sfdbdocno = g_sfda_m.sfdadocno

      #更新共用欄位



   #將資料塞回原table
   INSERT INTO sfdb_t SELECT * FROM asft310_detail
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "reproduce"
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN
   END IF



   #刪除TEMP TABLE
   DROP TABLE asft310_detail
   #CREATE TEMP TABLE
   LET ls_sql =
      "CREATE GLOBAL TEMPORARY TABLE asft310_detail AS ",
      "SELECT * FROM sfdc_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO asft310_detail
   SELECT * FROM sfdc_t
    WHERE sfdcent = g_enterprise AND sfdcdocno = g_sfdadocno_t
   #將key修正為調整後
   UPDATE asft310_detail SET sfdcdocno = g_sfda_m.sfdadocno
   #將資料塞回原table
   INSERT INTO sfdc_t SELECT * FROM asft310_detail

   #刪除TEMP TABLE
   DROP TABLE asft310_detail
   #CREATE TEMP TABLE
   LET ls_sql =
      "CREATE GLOBAL TEMPORARY TABLE asft310_detail AS ",
      "SELECT * FROM sfde_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO asft310_detail
   SELECT * FROM sfde_t
    WHERE sfdeent = g_enterprise AND sfdedocno = g_sfdadocno_t
   #將key修正為調整後
   UPDATE asft310_detail SET sfdedocno = g_sfda_m.sfdadocno
   #將資料塞回原table
   INSERT INTO sfde_t SELECT * FROM asft310_detail
   
   #mark 批序号不适合用于赋值，不会有同批同序的多次发货退，且唯一性管控检核也不好做
   ##刪除TEMP TABLE
   #DROP TABLE asft310_detail
   ##CREATE TEMP TABLE
   #LET ls_sql =
   #   "CREATE GLOBAL TEMPORARY TABLE asft310_detail AS ",
   #   "SELECT * FROM inao_t "
   #PREPARE repro_tbl4 FROM ls_sql
   #EXECUTE repro_tbl4
   #FREE repro_tbl4
   #
   ##將符合條件的資料丟入TEMP TABLE
   #INSERT INTO asft310_detail
   #SELECT * FROM inao_t
   # WHERE inaoent = g_enterprise AND inaosite = g_site AND inaodocno = g_sfdadocno_t
   ##將key修正為調整後
   #UPDATE asft310_detail SET inaodocno = g_sfda_m.sfdadocno
   ##將資料塞回原table
   #INSERT INTO inao_t SELECT * FROM asft310_detail

   #刪除TEMP TABLE
   DROP TABLE asft310_detail
   #CREATE TEMP TABLE
   LET ls_sql =
      "CREATE GLOBAL TEMPORARY TABLE asft310_detail AS ",
      "SELECT * FROM sfdf_t "
   PREPARE repro_tbl5 FROM ls_sql
   EXECUTE repro_tbl5
   FREE repro_tbl5
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO asft310_detail
   SELECT * FROM sfdf_t
    WHERE sfdfent = g_enterprise AND sfdfdocno = g_sfdadocno_t
   #將key修正為調整後
   UPDATE asft310_detail SET sfdfdocno = g_sfda_m.sfdadocno
   #將資料塞回原table
   INSERT INTO sfdf_t SELECT * FROM asft310_detail

   #刪除TEMP TABLE
   DROP TABLE asft310_detail
   #CREATE TEMP TABLE
   LET ls_sql =
      "CREATE GLOBAL TEMPORARY TABLE asft310_detail AS ",
      "SELECT * FROM sfdd_t "
   PREPARE repro_tbl6 FROM ls_sql
   EXECUTE repro_tbl6
   FREE repro_tbl6
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO asft310_detail
   SELECT * FROM sfdd_t
    WHERE sfddent = g_enterprise AND sfdddocno = g_sfdadocno_t
   #將key修正為調整後
   UPDATE asft310_detail SET sfdddocno = g_sfda_m.sfdadocno
   #將資料塞回原table
   INSERT INTO sfdd_t SELECT * FROM asft310_detail

   #刪除TEMP TABLE
   DROP TABLE asft310_detail

   #多語言複製段落


   CALL s_transaction_end('Y','0')

   #已新增完, 調整資料內容(修改時使用)
   LET g_sfdadocno_t = g_sfda_m.sfdadocno

   DROP TABLE asft310_detail

END FUNCTION]]>
  </point>
  <point name="function.asft310_delete" order="41" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_delete()
   {<Local define>}
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}
   DEFINE l_sfda014   LIKE sfda_t.sfda014
   DEFINE l_sfda015   LIKE sfda_t.sfda015

   IF g_sfda_m.sfdadocno IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF

   SELECT UNIQUE sfdadocno,sfdadocdt,sfda001,sfda002,sfda003,sfda004,sfda005,sfda015,sfda014,sfdastus,sfdaownid,sfdaowndp,
                 sfdacrtid,sfdacrtdp,sfdacrtdt,sfdamodid,sfdamoddt,sfdacnfid,sfdacnfdt,sfdapstid,sfdapstdt
    INTO g_sfda_m.sfdadocno,g_sfda_m.sfdadocdt,g_sfda_m.sfda001,g_sfda_m.sfda002,g_sfda_m.sfda003,g_sfda_m.sfda004,
         g_sfda_m.sfda005,g_sfda_m.sfda015,g_sfda_m.sfda014,g_sfda_m.sfdastus,g_sfda_m.sfdaownid,g_sfda_m.sfdaowndp,g_sfda_m.sfdacrtid,g_sfda_m.sfdacrtdp,
         g_sfda_m.sfdacrtdt,g_sfda_m.sfdamodid,g_sfda_m.sfdamoddt,g_sfda_m.sfdacnfid,g_sfda_m.sfdacnfdt,
         g_sfda_m.sfdapstid,g_sfda_m.sfdapstdt
    FROM sfda_t
   WHERE sfdaent = g_enterprise AND sfdadocno = g_sfda_m.sfdadocno
   
   IF g_sfda_m.sfdastus != 'N' THEN
      #此筆資料狀態不為'N.未確認',不可對此單據資料進行刪除
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "art-00031"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF

   CALL s_transaction_begin()

   OPEN asft310_cl USING g_enterprise,g_sfda_m.sfdadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN asft310_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE asft310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   FETCH asft310_cl INTO g_sfda_m.sfdadocno,g_sfda_m.oobal004,g_sfda_m.sfdadocdt,g_sfda_m.sfda001,g_sfda_m.sfda002,
       g_sfda_m.sfda003,g_sfda_m.sfda003_desc,g_sfda_m.sfda004,g_sfda_m.sfda004_desc,g_sfda_m.sfda005,g_sfda_m.sfda015,g_sfda_m.sfda014,
       g_sfda_m.sfdastus,g_sfda_m.sfdaownid,g_sfda_m.sfdaownid_desc,g_sfda_m.sfdaowndp,g_sfda_m.sfdaowndp_desc,
       g_sfda_m.sfdacrtid,g_sfda_m.sfdacrtid_desc,g_sfda_m.sfdacrtdp,g_sfda_m.sfdacrtdp_desc,g_sfda_m.sfdacrtdt,
       g_sfda_m.sfdamodid,g_sfda_m.sfdamodid_desc,g_sfda_m.sfdamoddt,g_sfda_m.sfdacnfid,g_sfda_m.sfdacnfid_desc,
       g_sfda_m.sfdacnfdt,g_sfda_m.sfdapstid,g_sfda_m.sfdapstid_desc,g_sfda_m.sfdapstdt
        #鎖住將被更改或取消的資料
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_sfda_m.sfdadocno
      LET g_errparam.popup = FALSE
      CALL cl_err()
          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   CALL asft310_show()

   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下


      #INITIALIZE g_doc.* TO NULL
      #LET g_doc.column1 = "sfdadocno"
      #LET g_doc.value1 = g_sfda_m.sfdadocno
      #CALL cl_doc_remove()
      #刪除相關文件
      #LET g_pk_array[1].values = g_enterprise
      #LET g_pk_array[1].column = "sfdaent"
      #LET g_pk_array[2].values = g_sfda_m.sfdadocno
      #LET g_pk_array[2].column = "sfdadocno"
      CALL asft310_set_pk_array()
      CALL cl_doc_remove()

      #資料備份
      LET g_sfdadocno_t = g_sfda_m.sfdadocno


      #更新下阶料报废上的退料单号
      SELECT sfda014,sfda015 INTO l_sfda014,l_sfda015
        FROM sfda_t
       WHERE sfdaent   = g_enterprise
         AND sfdadocno = g_sfda_m.sfdadocno
      IF l_sfda015 = '04' THEN
         UPDATE sfja_t SET sfja005 = NULL
          WHERE sfjaent   = g_enterprise
            AND sfjadocno = l_sfda014
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'upd sfja'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF


      DELETE FROM sfda_t
       WHERE sfdaent = g_enterprise AND sfdadocno = g_sfda_m.sfdadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = g_sfda_m.sfdadocno
         LET g_errparam.popup = FALSE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      IF NOT s_aooi200_del_docno(g_sfda_m.sfdadocno,g_sfda_m.sfdadocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #end add-point

      DELETE FROM sfdb_t
       WHERE sfdbent = g_enterprise AND sfdbdocno = g_sfda_m.sfdadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "sfdb_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      DELETE FROM sfdc_t
       WHERE sfdcent = g_enterprise AND sfdcdocno = g_sfda_m.sfdadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "sfdc_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      DELETE FROM sfde_t
       WHERE sfdeent = g_enterprise AND sfdedocno = g_sfda_m.sfdadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "sfde_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      DELETE FROM sfdf_t
       WHERE sfdfent = g_enterprise AND sfdfdocno = g_sfda_m.sfdadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "sfdf_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      DELETE FROM sfdd_t
       WHERE sfddent = g_enterprise AND sfdddocno = g_sfda_m.sfdadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "sfdd_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      #add 141222
      #删除备注--单头
      DELETE FROM ooff_t
       WHERE ooffent = g_enterprise
         AND ooff001 = '6'
         AND ooff002 = g_sfda_m.sfdadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "DELETE ooff_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      #删除备注--单身sfdd,sfdc
      DELETE FROM ooff_t
       WHERE ooffent = g_enterprise
         AND ooff001 = '7'
         AND ooff002 = g_sfda_m.sfdadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "DELETE ooff_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #add 141222 end

      DELETE FROM inao_t
       WHERE inaoent = g_enterprise AND inaosite = g_site AND inaodocno = g_sfda_m.sfdadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "sfdc_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      #倒扣料需要更新sfea005入库单
      IF g_sfda_m.sfda002 = '14' THEN
         UPDATE sfea_t SET sfea005 = ''
          WHERE sfeaent = g_enterprise
            AND sfeasite= g_site
            AND sfea005 = g_sfda_m.sfdadocno
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'upd sfea'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF
      
      CLEAR FORM
      CALL g_sfdb_d.clear()
      CALL g_sfdc_d.clear()
      CALL g_sfde_d.clear()
      CALL g_sfdc4_d.clear()
      CALL g_sfdf_d.clear()
      CALL g_sfdd_d.clear()
      CALL g_inao_d.clear()

      CALL asft310_ui_browser_refresh()
      CALL asft310_ui_headershow()
      CALL asft310_ui_detailshow()

      IF g_browser_cnt > 0 THEN
         CALL asft310_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         #LET g_wc = " 1=1"
         #CALL asft310_browser_fill("F")
         CLEAR FORM
      END IF
   END IF

   #多語言刪除
   CLOSE asft310_cl
   CALL s_transaction_end('Y','0')

   #流程通知預埋點-D
   CALL cl_flow_notify(g_sfda_m.sfdadocno,'D')

END FUNCTION]]>
  </point>
  <point name="function.asft310_b_fill" order="42" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_b_fill()
   CALL asft310_b_fill_sfdb()
   CALL asft310_b_fill_sfdc()
   CALL asft310_b_fill_sfde()

END FUNCTION]]>
  </point>
  <point name="function.asft310_delete_b" order="43" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num5

   ##判斷是否是同一群組的table
   #LET ls_group = "'1',"
   #IF ls_group.getIndexOf(ps_page,1) > 0 THEN
   #   DELETE FROM sfdb_t
   #    WHERE sfdbent = g_enterprise AND
   #      sfdbdocno = ps_keys_bak[1] AND sfdb001 = ps_keys_bak[2] AND sfdb002 = ps_keys_bak[3] AND sfdb003 = ps_keys_bak[4] AND sfdb004 = ps_keys_bak[5] AND sfdb005 = ps_keys_bak[6]
   #   IF SQLCA.sqlcode THEN
   #      #CALL cl_err("",SQLCA.sqlcode,0)
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code = SQLCA.sqlcode
   #      LET g_errparam.extend = ""
   #      LET g_errparam.popup = FALSE
   #      CALL cl_err()
   #      RETURN FALSE
   #   END IF
   #END IF

   #LET ls_group = "'2','4',"
   ##判斷是否是同一群組的table
   #IF ls_group.getIndexOf(ps_page,1) > 0 THEN
   #   DELETE FROM sfdc_t
   #    WHERE sfdcent = g_enterprise AND
   #      sfdcdocno = ps_keys_bak[1] AND sfdcseq = ps_keys_bak[2]
   #   IF SQLCA.sqlcode THEN
   #      #CALL cl_err("sfdc_t",SQLCA.sqlcode,0)
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code = SQLCA.sqlcode
   #      LET g_errparam.extend = "sfdc_t"
   #      LET g_errparam.popup = FALSE
   #      CALL cl_err()
   #      RETURN FALSE
   #   END IF
   #END IF

   #LET ls_group = "'3',"
   ##判斷是否是同一群組的table2
   #IF ls_group.getIndexOf(ps_page,1) > 0 THEN
   #   DELETE FROM sfdf_t
   #    WHERE sfdfent = g_enterprise AND sfdfdocno = ps_keys_bak[1] AND sfdfseq = ps_keys_bak[2]
   #   IF SQLCA.sqlcode THEN
   #      #CALL cl_err("sfdf_t",SQLCA.sqlcode,0)
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code = SQLCA.sqlcode
   #      LET g_errparam.extend = "sfdf_t"
   #      LET g_errparam.popup = FALSE
   #      CALL cl_err()
   #      RETURN FALSE
   #   END IF
   #END IF

   #LET ls_group = "'2','4',"
   ##判斷是否是同一群組的table2
   #IF ls_group.getIndexOf(ps_page,1) > 0 THEN
   #   DELETE FROM sfdd_t
   #    WHERE sfddent = g_enterprise AND sfdddocno = ps_keys_bak[1] AND sfddseq = ps_keys_bak[2]
   #   IF SQLCA.sqlcode THEN
   #      #CALL cl_err("sfdd_t",SQLCA.sqlcode,0)
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code = SQLCA.sqlcode
   #      LET g_errparam.extend = "sfdd_t"
   #      LET g_errparam.popup = FALSE
   #      CALL cl_err()
   #      RETURN FALSE
   #   END IF
   #END IF
   
   #RETURN TRUE
   
END FUNCTION]]>
  </point>
  <point name="function.asft310_insert_b" order="44" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_insert_b(ps_table,ps_keys,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   {</Local define>}

   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      IF cl_null(ps_keys[3]) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'asf-00179'
         LET g_errparam.extend = ps_keys[2]
         LET g_errparam.popup = TRUE
         CALL cl_err()

      END IF
      IF cl_null(ps_keys[4]) THEN LET ps_keys[4] = ' ' END IF
      IF cl_null(ps_keys[5]) THEN LET ps_keys[5] = ' ' END IF
      IF cl_null(ps_keys[6]) THEN LET ps_keys[6] = ' ' END IF
      INSERT INTO sfdb_t
                  (sfdbent, sfdbsite,
                   sfdbdocno,
                   sfdb001,sfdb002,sfdb003,sfdb004,sfdb005
                   ,sfdb006,sfdb007,sfdb008)
            VALUES(g_enterprise, g_site,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6]
                   ,g_sfdb_d[g_detail_idx].sfdb006,g_sfdb_d[g_detail_idx].sfdb007,g_sfdb_d[g_detail_idx].sfdb008)
      IF SQLCA.sqlcode THEN
         ##CALL cl_err("sfdb_t",SQLCA.sqlcode,0)
         #INITIALIZE g_errparam TO NULL
         #LET g_errparam.code = SQLCA.sqlcode
         #LET g_errparam.extend = "sfdb_t"
         #LET g_errparam.popup = FALSE
         #CALL cl_err()
         RETURN
      END IF
   END IF

   LET ls_group = "'2','4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      IF cl_null(g_sfdc_d[g_detail_idx].sfdc005) THEN LET g_sfdc_d[g_detail_idx].sfdc005 = ' ' END IF  #特征
      IF cl_null(g_sfdc_d[g_detail_idx].sfdc012) THEN LET g_sfdc_d[g_detail_idx].sfdc012 = ' ' END IF
      IF cl_null(g_sfdc_d[g_detail_idx].sfdc013) THEN LET g_sfdc_d[g_detail_idx].sfdc013 = ' ' END IF
      IF cl_null(g_sfdc_d[g_detail_idx].sfdc014) THEN LET g_sfdc_d[g_detail_idx].sfdc014 = ' ' END IF
      IF cl_null(g_sfdc_d[g_detail_idx].sfdc016) THEN LET g_sfdc_d[g_detail_idx].sfdc016 = ' ' END IF
      IF cl_null(g_sfdc_d[g_detail_idx].sfdc010) THEN LET g_sfdc_d[g_detail_idx].sfdc010 = 0 END IF #参考单位需求数量
      IF cl_null(g_sfdc_d[g_detail_idx].sfdc011) THEN LET g_sfdc_d[g_detail_idx].sfdc011 = 0 END IF #参考单位实际数量
      #150115 add 单位取位
      CALL s_aooi250_get_msg(g_sfdc_d[g_detail_idx].sfdc006) RETURNING l_success,g_ooca002,g_ooca004
      IF l_success THEN
         CALL s_num_round(g_ooca004,g_sfdc_d[g_detail_idx].sfdc007,g_ooca002) RETURNING g_sfdc_d[g_detail_idx].sfdc007
         CALL s_num_round(g_ooca004,g_sfdc_d[g_detail_idx].sfdc008,g_ooca002) RETURNING g_sfdc_d[g_detail_idx].sfdc008
      END IF
      IF NOT cl_null(g_sfdc_d[g_detail_idx].sfdc009) THEN
         CALL s_aooi250_get_msg(g_sfdc_d[g_detail_idx].sfdc009) RETURNING l_success,g_ooca002,g_ooca004
         IF l_success THEN
            CALL s_num_round(g_ooca004,g_sfdc_d[g_detail_idx].sfdc010,g_ooca002) RETURNING g_sfdc_d[g_detail_idx].sfdc010
            CALL s_num_round(g_ooca004,g_sfdc_d[g_detail_idx].sfdc011,g_ooca002) RETURNING g_sfdc_d[g_detail_idx].sfdc011
         END IF
      END IF
      #150115 add end
      INSERT INTO sfdc_t(sfdcent, sfdcsite,sfdcdocno,sfdcseq,
                         sfdc001,sfdc002,sfdc003,
                         sfdc004,sfdc005,sfdc006,
                         sfdc007,sfdc008,sfdc009,
                         sfdc010,sfdc011,sfdc012,
                         sfdc013,sfdc014,sfdc016,
                         sfdc015,sfdc017)
            VALUES(g_enterprise, g_site,ps_keys[1],ps_keys[2],
                   g_sfdc_d[g_detail_idx].sfdc001,g_sfdc_d[g_detail_idx].sfdc002,g_sfdc_d[g_detail_idx].sfdc003,
                   g_sfdc_d[g_detail_idx].sfdc004,g_sfdc_d[g_detail_idx].sfdc005,g_sfdc_d[g_detail_idx].sfdc006,
                   g_sfdc_d[g_detail_idx].sfdc007,g_sfdc_d[g_detail_idx].sfdc008,g_sfdc_d[g_detail_idx].sfdc009,
                   g_sfdc_d[g_detail_idx].sfdc010,g_sfdc_d[g_detail_idx].sfdc011,g_sfdc_d[g_detail_idx].sfdc012,
                   g_sfdc_d[g_detail_idx].sfdc013,g_sfdc_d[g_detail_idx].sfdc014,g_sfdc_d[g_detail_idx].sfdc016,
                   g_sfdc_d[g_detail_idx].sfdc015,g_sfdc_d[g_detail_idx].sfdc017)
      IF SQLCA.sqlcode THEN
         ##CALL cl_err("sfdc_t",SQLCA.sqlcode,0)
         #INITIALIZE g_errparam TO NULL
         #LET g_errparam.code = SQLCA.sqlcode
         #LET g_errparam.extend = "sfdc_t"
         #LET g_errparam.popup = FALSE
         #CALL cl_err()
         RETURN
      END IF
   END IF

   #LET ls_group = "'3',"
   ##判斷是否是同一群組的table
   #IF ls_group.getIndexOf(ps_page,1) > 0 THEN
   #   INSERT INTO sfde_t
   #               (sfdeent, sfdesite,
   #                sfdedocno,
   #                sfdeseq
   #                ,sfde001,sfde002,sfde009,sfde003,sfde004,sfde005,sfde006,sfde007,sfde008,sfde010)
   #         VALUES(g_enterprise, g_site,
   #                ps_keys[1],ps_keys[2]
   #                ,g_sfde_d[g_detail_idx].sfde001,g_sfde_d[g_detail_idx].sfde002,g_sfde_d[g_detail_idx].sfde009,
   #                    g_sfde_d[g_detail_idx].sfde003,g_sfde_d[g_detail_idx].sfde004,g_sfde_d[g_detail_idx].sfde005,
   #                    g_sfde_d[g_detail_idx].sfde006,g_sfde_d[g_detail_idx].sfde007,g_sfde_d[g_detail_idx].sfde008,
   #                    g_sfde_d[g_detail_idx].sfde010)
   #   IF SQLCA.sqlcode THEN
   #      #CALL cl_err("sfde_t",SQLCA.sqlcode,0)
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code = SQLCA.sqlcode
   #      LET g_errparam.extend = "sfde_t"
   #      LET g_errparam.popup = FALSE
   #      CALL cl_err()
   #   END IF
   #END IF
#
   #LET ls_group = "'7',"
   ##判斷是否是同一群組的table
   #IF ls_group.getIndexOf(ps_page,1) > 0 THEN
   #   INSERT INTO inao_t
   #               (inaoent, inaosite,
   #                inaodocno,
   #                inaoseq,inaoseq1,inaoseq2,inao000
   #                ,inao001,inao008,inao009,inao010,inao012)
   #         VALUES(g_enterprise, g_site,
   #                ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5]
   #                ,g_inao_d[g_detail_idx].inao001,g_inao_d[g_detail_idx].inao008,g_inao_d[g_detail_idx].inao009,
   #                    g_inao_d[g_detail_idx].inao010,g_inao_d[g_detail_idx].inao012)
   #   IF SQLCA.sqlcode THEN
   #      #CALL cl_err("inao_t",SQLCA.sqlcode,0)
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code = SQLCA.sqlcode
   #      LET g_errparam.extend = "inao_t"
   #      LET g_errparam.popup = FALSE
   #      CALL cl_err()
   #   END IF
   #END IF

   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      IF cl_null(g_sfdf_d[g_detail_idx2].sfdf013) THEN LET g_sfdf_d[g_detail_idx2].sfdf013 = ' ' END IF  #产品特征
      IF cl_null(g_sfdf_d[g_detail_idx2].sfdf003) THEN LET g_sfdf_d[g_detail_idx2].sfdf003 = ' ' END IF
      IF cl_null(g_sfdf_d[g_detail_idx2].sfdf004) THEN LET g_sfdf_d[g_detail_idx2].sfdf004 = ' ' END IF
      IF cl_null(g_sfdf_d[g_detail_idx2].sfdf005) THEN LET g_sfdf_d[g_detail_idx2].sfdf005 = ' ' END IF
      IF cl_null(g_sfdf_d[g_detail_idx2].sfdf010) THEN LET g_sfdf_d[g_detail_idx2].sfdf010 = ' ' END IF
      IF cl_null(g_sfdf_d[g_detail_idx2].sfdf009) THEN LET g_sfdf_d[g_detail_idx2].sfdf009 = 0 END IF #参考单位数量
      #150115 add 单位取位
      CALL s_aooi250_get_msg(g_sfdf_d[g_detail_idx2].sfdf006) RETURNING l_success,g_ooca002,g_ooca004
      IF l_success THEN
         CALL s_num_round(g_ooca004,g_sfdf_d[g_detail_idx2].sfdf007,g_ooca002) RETURNING g_sfdf_d[g_detail_idx2].sfdf007
      END IF
      IF NOT cl_null(g_sfdf_d[g_detail_idx2].sfdf008) THEN
         CALL s_aooi250_get_msg(g_sfdf_d[g_detail_idx2].sfdf008) RETURNING l_success,g_ooca002,g_ooca004
         IF l_success THEN
            CALL s_num_round(g_ooca004,g_sfdf_d[g_detail_idx2].sfdf009,g_ooca002) RETURNING g_sfdf_d[g_detail_idx2].sfdf009
         END IF
      END IF
      #150115 add end
      INSERT INTO sfdf_t
                  (sfdfent, sfdfsite,
                   sfdfdocno,sfdfseq,
                   sfdfseq1
                   ,sfdf001,sfdf013,sfdf002,sfdf003,sfdf004,sfdf005,sfdf010,sfdf006,sfdf007,sfdf008,sfdf009,sfdf011,sfdf012)
            VALUES(g_enterprise, g_site,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_sfdf_d[g_detail_idx2].sfdf001,g_sfdf_d[g_detail_idx2].sfdf013,g_sfdf_d[g_detail_idx2].sfdf002,g_sfdf_d[g_detail_idx2].sfdf003,
                       g_sfdf_d[g_detail_idx2].sfdf004,g_sfdf_d[g_detail_idx2].sfdf005,g_sfdf_d[g_detail_idx2].sfdf010,
                       g_sfdf_d[g_detail_idx2].sfdf006,g_sfdf_d[g_detail_idx2].sfdf007,g_sfdf_d[g_detail_idx2].sfdf008,
                       g_sfdf_d[g_detail_idx2].sfdf009,g_sfdf_d[g_detail_idx2].sfdf011,g_sfdf_d[g_detail_idx2].sfdf012)
      IF SQLCA.sqlcode THEN
         ##CALL cl_err("sfdf_t",SQLCA.sqlcode,0)
         #INITIALIZE g_errparam TO NULL
         #LET g_errparam.code = SQLCA.sqlcode
         #LET g_errparam.extend = "sfdf_t"
         #LET g_errparam.popup = FALSE
         #CALL cl_err()
         RETURN
      END IF
   END IF

   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      IF cl_null(g_sfdd_d[g_detail_idx2].sfdd013) THEN LET g_sfdd_d[g_detail_idx2].sfdd013 = ' ' END IF  #产品特征
      IF cl_null(g_sfdd_d[g_detail_idx2].sfdd003) THEN LET g_sfdd_d[g_detail_idx2].sfdd003 = ' ' END IF
      IF cl_null(g_sfdd_d[g_detail_idx2].sfdd004) THEN LET g_sfdd_d[g_detail_idx2].sfdd004 = ' ' END IF
      IF cl_null(g_sfdd_d[g_detail_idx2].sfdd005) THEN LET g_sfdd_d[g_detail_idx2].sfdd005 = ' ' END IF
      IF cl_null(g_sfdd_d[g_detail_idx2].sfdd010) THEN LET g_sfdd_d[g_detail_idx2].sfdd010 = ' ' END IF
      IF cl_null(g_sfdd_d[g_detail_idx2].sfdd009) THEN LET g_sfdd_d[g_detail_idx2].sfdd009 = 0 END IF #参考单位数量
      #150115 add 单位取位
      CALL s_aooi250_get_msg(g_sfdd_d[g_detail_idx2].sfdd006) RETURNING l_success,g_ooca002,g_ooca004
      IF l_success THEN
         CALL s_num_round(g_ooca004,g_sfdd_d[g_detail_idx2].sfdd007,g_ooca002) RETURNING g_sfdd_d[g_detail_idx2].sfdd007
      END IF
      IF NOT cl_null(g_sfdd_d[g_detail_idx2].sfdd008) THEN
         CALL s_aooi250_get_msg(g_sfdd_d[g_detail_idx2].sfdd008) RETURNING l_success,g_ooca002,g_ooca004
         IF l_success THEN
            CALL s_num_round(g_ooca004,g_sfdd_d[g_detail_idx2].sfdd009,g_ooca002) RETURNING g_sfdd_d[g_detail_idx2].sfdd009
         END IF
      END IF
      #150115 add end
      INSERT INTO sfdd_t
                  (sfddent, sfddsite,sfdddocno,sfddseq,sfddseq1
                   ,sfdd001,sfdd013,sfdd002,sfdd003,sfdd004,sfdd005,sfdd010,sfdd006,sfdd007,sfdd008,sfdd009,sfdd011,sfdd012)
            VALUES(g_enterprise, g_site,ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_sfdd_d[g_detail_idx2].sfdd001,g_sfdd_d[g_detail_idx2].sfdd013,g_sfdd_d[g_detail_idx2].sfdd002,g_sfdd_d[g_detail_idx2].sfdd003,
                       g_sfdd_d[g_detail_idx2].sfdd004,g_sfdd_d[g_detail_idx2].sfdd005,g_sfdd_d[g_detail_idx2].sfdd010,
                       g_sfdd_d[g_detail_idx2].sfdd006,g_sfdd_d[g_detail_idx2].sfdd007,g_sfdd_d[g_detail_idx2].sfdd008,
                       g_sfdd_d[g_detail_idx2].sfdd009,g_sfdd_d[g_detail_idx2].sfdd011,g_sfdd_d[g_detail_idx2].sfdd012)
      IF SQLCA.sqlcode THEN
         ##CALL cl_err("sfdd_t",SQLCA.sqlcode,0)
         #INITIALIZE g_errparam TO NULL
         #LET g_errparam.code = SQLCA.sqlcode
         #LET g_errparam.extend = "sfdd_t"
         #LET g_errparam.popup = FALSE
         #CALL cl_err()
         RETURN
      END IF
   END IF

END FUNCTION]]>
  </point>
  <point name="function.asft310_update_b" order="45" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   {</Local define>}
   
   ##判斷key是否有改變
   #LET lb_chk = TRUE
   #FOR li_idx = 1 TO ps_keys.getLength()
   #   IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
   #      LET lb_chk = FALSE
   #      EXIT FOR
   #   END IF
   #END FOR
   #
   ##不需要做處理
   #IF lb_chk THEN
   #   RETURN
   #END IF
   #
   ##判斷是否是同一群組的table
   #LET ls_group = "'1',"
   #IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "sfdb_t" THEN
   #   UPDATE sfdb_t
   #      SET (sfdbdocno,
   #           sfdb001,sfdb002,sfdb003,sfdb004,sfdb005
   #           ,sfdb006,sfdb007,sfdb008)
   #           =
   #          (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6]
   #           ,g_sfdb_d[g_detail_idx].sfdb006,g_sfdb_d[g_detail_idx].sfdb007,g_sfdb_d[g_detail_idx].sfdb008)
   #
   #      WHERE sfdbent = g_enterprise AND sfdbsite = g_site AND sfdbdocno = ps_keys_bak[1] AND sfdb001 = ps_keys_bak[2] AND sfdb002 = ps_keys_bak[3] AND sfdb003 = ps_keys_bak[4] AND sfdb004 = ps_keys_bak[5] AND sfdb005 = ps_keys_bak[6]
   #   CASE
   #      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
   #         #CALL cl_err("sfdb_t","std-00009",1)
   #         INITIALIZE g_errparam TO NULL
   #         LET g_errparam.code = "std-00009"
   #         LET g_errparam.extend = "sfdb_t"
   #         LET g_errparam.popup = TRUE
   #         CALL cl_err()
   #         CALL s_transaction_end('N','0')
   #      WHEN SQLCA.sqlcode #其他錯誤
   #         #CALL cl_err("sfdb_t",SQLCA.sqlcode,1)
   #         INITIALIZE g_errparam TO NULL
   #         LET g_errparam.code = SQLCA.sqlcode
   #         LET g_errparam.extend = "sfdb_t"
   #         LET g_errparam.popup = TRUE
   #         CALL cl_err()
   #         CALL s_transaction_end('N','0')
   #      OTHERWISE
   #
   #   END CASE
   #END IF
   #
   #LET ls_group = "'2','4',"
   ##判斷是否是同一群組的table
   #IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "sfdc_t" THEN
   #   UPDATE sfdc_t
   #      SET (sfdcdocno,
   #           sfdcseq
   #           ,sfdc001,sfdc002,sfdc003,sfdc004,sfdc005,sfdc006,sfdc007,sfdc008,sfdc009,sfdc010,sfdc011,sfdc012,sfdc013,sfdc014,sfdc016,sfdc015,sfdc017,sfdc001,sfdc002,sfdc003,sfdc004,sfdc005,sfdc006,sfdc007,sfdc008,sfdc009,sfdc010,sfdc011,sfdc012,sfdc013,sfdc014,sfdc016,sfdc015,sfdc017)
   #           =
   #          (ps_keys[1],ps_keys[2]
   #           ,g_sfdc_d[g_detail_idx].sfdc001,g_sfdc_d[g_detail_idx].sfdc002,g_sfdc_d[g_detail_idx].sfdc003,
   #               g_sfdc_d[g_detail_idx].sfdc004,g_sfdc_d[g_detail_idx].sfdc005,g_sfdc_d[g_detail_idx].sfdc006,
   #               g_sfdc_d[g_detail_idx].sfdc007,g_sfdc_d[g_detail_idx].sfdc008,g_sfdc_d[g_detail_idx].sfdc009,
   #               g_sfdc_d[g_detail_idx].sfdc010,g_sfdc_d[g_detail_idx].sfdc011,g_sfdc_d[g_detail_idx].sfdc012,
   #               g_sfdc_d[g_detail_idx].sfdc013,g_sfdc_d[g_detail_idx].sfdc014,g_sfdc_d[g_detail_idx].sfdc016,
   #               g_sfdc_d[g_detail_idx].sfdc015,g_sfdc_d[g_detail_idx].sfdc017,g_sfdc_d[g_detail_idx].sfdc001,
   #               g_sfdc_d[g_detail_idx].sfdc002,g_sfdc_d[g_detail_idx].sfdc003,g_sfdc_d[g_detail_idx].sfdc004,
   #               g_sfdc_d[g_detail_idx].sfdc005,g_sfdc_d[g_detail_idx].sfdc006,g_sfdc_d[g_detail_idx].sfdc007,
   #               g_sfdc_d[g_detail_idx].sfdc008,g_sfdc_d[g_detail_idx].sfdc009,g_sfdc_d[g_detail_idx].sfdc010,
   #               g_sfdc_d[g_detail_idx].sfdc011,g_sfdc_d[g_detail_idx].sfdc012,g_sfdc_d[g_detail_idx].sfdc013,
   #               g_sfdc_d[g_detail_idx].sfdc014,g_sfdc_d[g_detail_idx].sfdc016,g_sfdc_d[g_detail_idx].sfdc015,
   #               g_sfdc_d[g_detail_idx].sfdc017)
   #      WHERE sfdcent = g_enterprise AND sfdcsite = g_site AND sfdcdocno = ps_keys_bak[1] AND sfdcseq = ps_keys_bak[2]
   #   CASE
   #      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
   #         #CALL cl_err("sfdc_t","std-00009",1)
   #         INITIALIZE g_errparam TO NULL
   #         LET g_errparam.code = "std-00009"
   #         LET g_errparam.extend = "sfdc_t"
   #         LET g_errparam.popup = TRUE
   #         CALL cl_err()
   #         CALL s_transaction_end('N','0')
   #      WHEN SQLCA.sqlcode #其他錯誤
   #         #CALL cl_err("sfdc_t",SQLCA.sqlcode,1)
   #         INITIALIZE g_errparam TO NULL
   #         LET g_errparam.code = SQLCA.sqlcode
   #         LET g_errparam.extend = "sfdc_t"
   #         LET g_errparam.popup = TRUE
   #         CALL cl_err()
   #         CALL s_transaction_end('N','0')
   #      OTHERWISE
   #
   #   END CASE
   #END IF
   #
   #LET ls_group = "'3',"
   ##判斷是否是同一群組的table
   #IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "sfde_t" THEN
   #   UPDATE sfde_t
   #      SET (sfdedocno,
   #           sfdeseq
   #           ,sfde001,sfde002,sfde009,sfde003,sfde004,sfde005,sfde006,sfde007,sfde008,sfde010)
   #           =
   #          (ps_keys[1],ps_keys[2]
   #           ,g_sfde_d[g_detail_idx].sfde001,g_sfde_d[g_detail_idx].sfde002,g_sfde_d[g_detail_idx].sfde009,
   #               g_sfde_d[g_detail_idx].sfde003,g_sfde_d[g_detail_idx].sfde004,g_sfde_d[g_detail_idx].sfde005,
   #               g_sfde_d[g_detail_idx].sfde006,g_sfde_d[g_detail_idx].sfde007,g_sfde_d[g_detail_idx].sfde008,
   #               g_sfde_d[g_detail_idx].sfde010)
   #      WHERE sfdeent = g_enterprise AND sfdesite = g_site AND sfdedocno = ps_keys_bak[1] AND sfdeseq = ps_keys_bak[2]
   #   CASE
   #      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
   #         #CALL cl_err("sfde_t","std-00009",1)
   #         INITIALIZE g_errparam TO NULL
   #         LET g_errparam.code = "std-00009"
   #         LET g_errparam.extend = "sfde_t"
   #         LET g_errparam.popup = TRUE
   #         CALL cl_err()
   #         CALL s_transaction_end('N','0')
   #      WHEN SQLCA.sqlcode #其他錯誤
   #         #CALL cl_err("sfde_t",SQLCA.sqlcode,1)
   #         INITIALIZE g_errparam TO NULL
   #         LET g_errparam.code = SQLCA.sqlcode
   #         LET g_errparam.extend = "sfde_t"
   #         LET g_errparam.popup = TRUE
   #         CALL cl_err()
   #         CALL s_transaction_end('N','0')
   #      OTHERWISE
   #
   #   END CASE
   #END IF
   #
   #LET ls_group = "'7',"
   ##判斷是否是同一群組的table
   #IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "inao_t" THEN
   #   UPDATE inao_t
   #      SET (inaodocno,
   #           inaoseq,inaoseq1,inaoseq2,inao000
   #           ,inao001,inao008,inao009,inao010,inao012)
   #           =
   #          (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5]
   #           ,g_inao_d[g_detail_idx].inao001,g_inao_d[g_detail_idx].inao008,g_inao_d[g_detail_idx].inao009,
   #               g_inao_d[g_detail_idx].inao010,g_inao_d[g_detail_idx].inao012)
   #      WHERE inaoent = g_enterprise AND inaosite = g_site AND inaodocno = ps_keys_bak[1] AND inaoseq = ps_keys_bak[2] AND inaoseq1 = ps_keys_bak[3] AND inaoseq2 = ps_keys_bak[4] AND inao000 = ps_keys_bak[5]
   #   CASE
   #      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
   #         #CALL cl_err("inao_t","std-00009",1)
   #         INITIALIZE g_errparam TO NULL
   #         LET g_errparam.code = "std-00009"
   #         LET g_errparam.extend = "inao_t"
   #         LET g_errparam.popup = TRUE
   #         CALL cl_err()
   #         CALL s_transaction_end('N','0')
   #      WHEN SQLCA.sqlcode #其他錯誤
   #         #CALL cl_err("inao_t",SQLCA.sqlcode,1)
   #         INITIALIZE g_errparam TO NULL
   #         LET g_errparam.code = SQLCA.sqlcode
   #         LET g_errparam.extend = "inao_t"
   #         LET g_errparam.popup = TRUE
   #         CALL cl_err()
   #         CALL s_transaction_end('N','0')
   #      OTHERWISE
   #
   #   END CASE
   #END IF
   #
   #
   #
   #LET ls_group = "'5',"
   ##判斷是否是同一群組的table
   #IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "sfdf_t" THEN
   #   UPDATE sfdf_t
   #      SET (sfdfdocno,sfdfseq,
   #           sfdfseq1
   #           ,sfdf001,sfdf013,sfdf002,sfdf003,sfdf004,sfdf005,sfdf010,sfdf006,sfdf007,sfdf008,sfdf009,sfdf011,sfdf012)
   #           =
   #          (ps_keys[1],ps_keys[2],ps_keys[3]
   #           ,g_sfdf_d[g_detail_idx2].sfdf001,g_sfdf_d[g_detail_idx2].sfdf013,g_sfdf_d[g_detail_idx2].sfdf002,g_sfdf_d[g_detail_idx2].sfdf003,
   #               g_sfdf_d[g_detail_idx2].sfdf004,g_sfdf_d[g_detail_idx2].sfdf005,g_sfdf_d[g_detail_idx2].sfdf010,
   #               g_sfdf_d[g_detail_idx2].sfdf006,g_sfdf_d[g_detail_idx2].sfdf007,g_sfdf_d[g_detail_idx2].sfdf008,
   #               g_sfdf_d[g_detail_idx2].sfdf009,g_sfdf_d[g_detail_idx2].sfdf011,g_sfdf_d[g_detail_idx2].sfdf012)
   #
   #      WHERE sfdfent = g_enterprise AND sfdfsite = g_site AND sfdfdocno = ps_keys_bak[1] AND sfdfseq = ps_keys_bak[2] AND sfdfseq1 = ps_keys_bak[3]
   #   CASE
   #      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
   #         #CALL cl_err("sfdf_t","std-00009",1)
   #         INITIALIZE g_errparam TO NULL
   #         LET g_errparam.code = "std-00009"
   #         LET g_errparam.extend = "sfdf_t"
   #         LET g_errparam.popup = TRUE
   #         CALL cl_err()
   #         CALL s_transaction_end('N','0')
   #      WHEN SQLCA.sqlcode #其他錯誤
   #         #CALL cl_err("sfdf_t",SQLCA.sqlcode,1)
   #         INITIALIZE g_errparam TO NULL
   #         LET g_errparam.code = SQLCA.sqlcode
   #         LET g_errparam.extend = "sfdf_t"
   #         LET g_errparam.popup = TRUE
   #         CALL cl_err()
   #         CALL s_transaction_end('N','0')
   #      OTHERWISE
   #
   #   END CASE
   #END IF
   #
   #LET ls_group = "'6',"
   ##判斷是否是同一群組的table
   #IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "sfdd_t" THEN
   #   UPDATE sfdd_t
   #      SET (sfdddocno,sfddseq,
   #           sfddseq1
   #           ,sfdd001,sfdd013,sfdd002,sfdd003,sfdd004,sfdd005,sfdd010,sfdd006,sfdd007,sfdd008,sfdd009,sfdd011,sfdd012)
   #           =
   #          (ps_keys[1],ps_keys[2],ps_keys[3]
   #           ,g_sfdd_d[g_detail_idx2].sfdd001,g_sfdd_d[g_detail_idx2].sfdd013,g_sfdd_d[g_detail_idx2].sfdd002,g_sfdd_d[g_detail_idx2].sfdd003,
   #               g_sfdd_d[g_detail_idx2].sfdd004,g_sfdd_d[g_detail_idx2].sfdd005,g_sfdd_d[g_detail_idx2].sfdd010,
   #               g_sfdd_d[g_detail_idx2].sfdd006,g_sfdd_d[g_detail_idx2].sfdd007,g_sfdd_d[g_detail_idx2].sfdd008,
   #               g_sfdd_d[g_detail_idx2].sfdd009,g_sfdd_d[g_detail_idx2].sfdd011,g_sfdd_d[g_detail_idx2].sfdd012)
   #
   #      WHERE sfddent = g_enterprise AND sfddsite = g_site AND sfdddocno = ps_keys_bak[1] AND sfddseq = ps_keys_bak[2] AND sfddseq1 = ps_keys_bak[3]
   #   #add-point:update_b段修改中
   #   
   #   #end add-point
   #   CASE
   #      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
   #         #CALL cl_err("sfdd_t","std-00009",1)
   #         INITIALIZE g_errparam TO NULL
   #         LET g_errparam.code = "std-00009"
   #         LET g_errparam.extend = "sfdd_t"
   #         LET g_errparam.popup = TRUE
   #         CALL cl_err()
   #         CALL s_transaction_end('N','0')
   #      WHEN SQLCA.sqlcode #其他錯誤
   #         #CALL cl_err("sfdd_t",SQLCA.sqlcode,1)
   #         INITIALIZE g_errparam TO NULL
   #         LET g_errparam.code = SQLCA.sqlcode
   #         LET g_errparam.extend = "sfdd_t"
   #         LET g_errparam.popup = TRUE
   #         CALL cl_err()
   #         CALL s_transaction_end('N','0')
   #      OTHERWISE
   #
   #   END CASE
   #   #add-point:update_b段修改後
   #   
   #   #end add-point
   #END IF
   #
   #
   #
   #LET ls_group = "'3',"
   ##判斷是否是同一群組的table
   #IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "sfdf_t" THEN
   #   #add-point:update_b段修改前
   #   
   #   #end add-point
   #   UPDATE sfdf_t
   #      SET (sfdfdocno,sfdfseq)
   #           =
   #          (ps_keys[1],ps_keys[2])
   #      WHERE sfdfent = g_enterprise AND sfdfsite = g_site AND sfdfdocno = ps_keys_bak[1] AND sfdfseq = ps_keys_bak[2]
   #   #add-point:update_b段修改中
   #   
   #   #end add-point
   #   CASE
   #      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
   #         #CALL cl_err("sfdf_t","std-00009",1)
   #         INITIALIZE g_errparam TO NULL
   #         LET g_errparam.code = "std-00009"
   #         LET g_errparam.extend = "sfdf_t"
   #         LET g_errparam.popup = TRUE
   #         CALL cl_err()
   #         CALL s_transaction_end('N','0')
   #      WHEN SQLCA.sqlcode #其他錯誤
   #         #CALL cl_err("sfdf_t",SQLCA.sqlcode,1)
   #         INITIALIZE g_errparam TO NULL
   #         LET g_errparam.code = SQLCA.sqlcode
   #         LET g_errparam.extend = "sfdf_t"
   #         LET g_errparam.popup = TRUE
   #         CALL cl_err()
   #         CALL s_transaction_end('N','0')
   #      OTHERWISE
   #
   #   END CASE
   #   #add-point:update_b段修改後
   #   
   #   #end add-point
   #END IF
   #
   #LET ls_group = "'2','4',"
   ##判斷是否是同一群組的table
   #IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "sfdd_t" THEN
   #   #add-point:update_b段修改前
   #   
   #   #end add-point
   #   UPDATE sfdd_t
   #      SET (sfdddocno,sfddseq)
   #           =
   #          (ps_keys[1],ps_keys[2])
   #      WHERE sfddent = g_enterprise AND sfddsite = g_site AND sfdddocno = ps_keys_bak[1] AND sfddseq = ps_keys_bak[2]
   #   #add-point:update_b段修改中
   #   
   #   #end add-point
   #   CASE
   #      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
   #         #CALL cl_err("sfdd_t","std-00009",1)
   #         INITIALIZE g_errparam TO NULL
   #         LET g_errparam.code = "std-00009"
   #         LET g_errparam.extend = "sfdd_t"
   #         LET g_errparam.popup = TRUE
   #         CALL cl_err()
   #         CALL s_transaction_end('N','0')
   #      WHEN SQLCA.sqlcode #其他錯誤
   #         #CALL cl_err("sfdd_t",SQLCA.sqlcode,1)
   #         INITIALIZE g_errparam TO NULL
   #         LET g_errparam.code = SQLCA.sqlcode
   #         LET g_errparam.extend = "sfdd_t"
   #         LET g_errparam.popup = TRUE
   #         CALL cl_err()
   #         CALL s_transaction_end('N','0')
   #      OTHERWISE
   #
   #   END CASE
   #   #add-point:update_b段修改後
   #   
   #   #end add-point
   #END IF



END FUNCTION]]>
  </point>
  <point name="function.asft310_lock_b" order="46" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_lock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}

   #先刷新資料
   #CALL asft310_b_fill()

   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "sfdb_t"

   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN asft310_bcl USING g_enterprise, g_site,
                             g_sfda_m.sfdadocno,g_sfdb_d[g_detail_idx].sfdb001,g_sfdb_d[g_detail_idx].sfdb002,
                             g_sfdb_d[g_detail_idx].sfdb003,g_sfdb_d[g_detail_idx].sfdb004,
                             g_sfdb_d[g_detail_idx].sfdb005
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "asft310_bcl"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF

   #鎖定整組table
   #LET ls_group = "'2','4',"
   #僅鎖定自身table
   LET ls_group = "sfdc_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN asft310_bcl2 USING g_enterprise, g_site,
                              g_sfda_m.sfdadocno,g_sfdc_d[g_detail_idx].sfdcseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "asft310_bcl2"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF

   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   #LET ls_group = "sfde_t"
   #IF ls_group.getIndexOf(ps_table,1) THEN
   #   OPEN asft310_bcl3 USING g_enterprise, g_site,
   #                           g_sfda_m.sfdadocno,g_sfde_d[g_detail_idx].sfdeseq
   #   IF SQLCA.sqlcode THEN
   #      #CALL cl_err("asft310_bcl3",SQLCA.sqlcode,1)
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code = SQLCA.sqlcode
   #      LET g_errparam.extend = "asft310_bcl3"
   #      LET g_errparam.popup = TRUE
   #      CALL cl_err()
   #      RETURN FALSE
   #   END IF
   #END IF

   #鎖定整組table
   #LET ls_group = "'7',"
   #僅鎖定自身table
   #LET ls_group = "inao_t"
   #IF ls_group.getIndexOf(ps_table,1) THEN
   #   OPEN asft310_bcl4 USING g_enterprise, g_site,
   #                           g_sfda_m.sfdadocno,g_inao_d[g_detail_idx].inaoseq,g_inao_d[g_detail_idx].inaoseq1,
   #                           g_inao_d[g_detail_idx].inaoseq2,g_inao_d[g_detail_idx].inao000
   #   IF SQLCA.sqlcode THEN
   #      #CALL cl_err("asft310_bcl4",SQLCA.sqlcode,1)
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code = SQLCA.sqlcode
   #      LET g_errparam.extend = "asft310_bcl4"
   #      LET g_errparam.popup = TRUE
   #      CALL cl_err()
   #      RETURN FALSE
   #   END IF
   #END IF



   #鎖定整組table
   #LET ls_group = "'5',"
   #僅鎖定自身table
   LET ls_group = "sfdf_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN asft310_bcl5 USING g_enterprise, g_site,
                              g_sfda_m.sfdadocno,g_sfde_d[g_detail_idx].sfdeseq,
                              g_sfdf_d[g_detail_idx2].sfdfseq1
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "asft310_bcl5"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF

   #鎖定整組table
   #LET ls_group = "'6',"
   #僅鎖定自身table
   LET ls_group = "sfdd_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN asft310_bcl6 USING g_enterprise, g_site,
                              g_sfda_m.sfdadocno,g_sfdc4_d[g_detail_idx].sfdcseq,
                              g_sfdd_d[g_detail_idx2].sfddseq1
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "asft310_bcl6"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF



   RETURN TRUE

END FUNCTION]]>
  </point>
  <point name="function.asft310_unlock_b" order="47" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_unlock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:unlock_b段define
   
   #end add-point

   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE asft310_bcl
   END IF

   LET ls_group = "'2','4',"
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE asft310_bcl2
   END IF

   #LET ls_group = "'3',"
   #IF ls_group.getIndexOf(ps_page,1) THEN
   #   CLOSE asft310_bcl3
   #END IF

   #LET ls_group = "'7',"
   #IF ls_group.getIndexOf(ps_page,1) THEN
   #   CLOSE asft310_bcl4
   #END IF

   LET ls_group = "'5',"
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE asft310_bcl5
   END IF

   LET ls_group = "'6',"
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE asft310_bcl6
   END IF

END FUNCTION]]>
  </point>
  <point name="function.asft310_set_entry" order="48" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_set_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1
   {</Local define>}
   #add-point:set_entry段define
   DEFINE l_fields      STRING
   #end add-point

   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("sfdadocno",TRUE)
      #add-point:set_entry段欄位控制
      
      #end add-point
   END IF

   #add-point:set_entry段欄位控制後
   IF NOT cl_null(g_sfda_m.sfdadocno) THEN
      LET l_fields = s_aooi200_get_doc_fields(g_site,'1',g_sfda_m.sfdadocno)
      CALL cl_set_comp_entry(l_fields,TRUE)
   END IF
   
   CALL cl_set_comp_entry("sfda002",TRUE)          {#ADP版次:1#}
   #end add-point

END FUNCTION]]>
  </point>
  <point name="function.asft310_set_no_entry" order="49" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_set_no_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1
   {</Local define>}
   #add-point:set_no_entry段define
   DEFINE l_fields      STRING
   #end add-point

   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("sfdadocno",FALSE)
      #add-point:set_no_entry段欄位控制
      
      #end add-point
   END IF

   #add-point:set_no_entry段欄位控制後
   IF NOT cl_null(g_sfda_m.sfdadocno) THEN
      LET l_fields = s_aooi200_get_doc_fields(g_site,'1',g_sfda_m.sfdadocno)
      CALL cl_set_comp_entry(l_fields,FALSE)
   END IF
   
   IF g_prog != 'asft310' AND g_prog != 'asft320' THEN
      CALL cl_set_comp_entry("sfda002",FALSE)
   END IF          {#ADP版次:1#}
   #end add-point

END FUNCTION]]>
  </point>
  <point name="function.asft310_default_search" order="50" ver="11" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   {</Local define>}
   #add-point:default_search段define
   
   #end add-point

   #add-point:default_search段開始前
   
   #end add-point

   LET g_pagestart = 1

   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF

   #IF NOT cl_null(g_argv[1]) THEN
   #   LET ls_wc = ls_wc, " sfdadocno = '", g_argv[1], "' AND "
   #END IF
   
   #非固定参数
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " sfdadocno = '", g_argv[02], "' AND "
   END IF
   
   #非固定参数--傳單號範圍至asft310,一次查詢可查詢出多個單號資料
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc,g_argv[03]," AND "
   END IF

   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      #mod pattern 修改调整150624
      #LET g_wc = cl_qbe_get_default_qryplan()
      #IF cl_null(g_wc) THEN
      #   LET g_wc = " 1=2"
      #END IF
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
         INITIALIZE g_wc2_table3 TO NULL
         INITIALIZE g_wc2_table5 TO NULL
         INITIALIZE g_wc2_table6 TO NULL


         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "sfda_t"
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "sfdb_t"
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "sfdc_t"
                  LET g_wc2_table2 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "sfde_t"
                  LET g_wc2_table3 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "sfdf_t"
                  LET g_wc2_table5 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "sfdd_t"
                  LET g_wc2_table6 = la_wc[li_idx].wc


               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
            OR NOT cl_null(g_wc2_table2)
            OR NOT cl_null(g_wc2_table3)
            OR NOT cl_null(g_wc2_table5)
            OR NOT cl_null(g_wc2_table6)


            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
            IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
            END IF
            IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
            END IF


            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF

            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
      #mod pattern 修改调整150624 end
   END IF

   #add-point:default_search段結束前
   CASE g_prog
      WHEN 'asft310'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('11','12','13','14','15')"
      WHEN 'asft311'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('11')"
      WHEN 'asft312'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('12')"
      WHEN 'asft313'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('13')"
      WHEN 'asft314'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('14')"
      WHEN 'asft315'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('15')"
      WHEN 'asft320'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('21','22','23','24','25')"
      WHEN 'asft321'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('21')"
      WHEN 'asft322'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('22')"
      WHEN 'asft323'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('23')"
      WHEN 'asft324'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('24')"
      WHEN 'asft325'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('25')"
   END CASE          {#ADP版次:1#}
   #
   ##傳單號範圍至asft310,一次查詢可查詢出多個單號資料
   #IF NOT cl_null(g_argv[02]) THEN
   #   LET g_wc = g_wc," AND ",g_argv[02]
   #END IF

   #LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' "
   #固定参数
   CASE g_argv[01]
      WHEN '10'
           LET ls_wc = ls_wc CLIPPED," AND sfda002 in ('11','12','13','14','15')"
      WHEN '11'
           LET ls_wc = ls_wc CLIPPED," AND sfda002 in ('11')"
      WHEN '12'
           LET ls_wc = ls_wc CLIPPED," AND sfda002 in ('12')"
      WHEN '13'
           LET ls_wc = ls_wc CLIPPED," AND sfda002 in ('13')"
      WHEN '14'
           LET ls_wc = ls_wc CLIPPED," AND sfda002 in ('14')"
      WHEN '15'
           LET ls_wc = ls_wc CLIPPED," AND sfda002 in ('15')"
      WHEN '20'
           LET ls_wc = ls_wc CLIPPED," AND sfda002 in ('21','22','23','24','25')"
      WHEN '21'
           LET ls_wc = ls_wc CLIPPED," AND sfda002 in ('21')"
      WHEN '22'
           LET ls_wc = ls_wc CLIPPED," AND sfda002 in ('22')"
      WHEN '23'
           LET ls_wc = ls_wc CLIPPED," AND sfda002 in ('23')"
      WHEN '24'
           LET ls_wc = ls_wc CLIPPED," AND sfda002 in ('24')"
      WHEN '25'
           LET ls_wc = ls_wc CLIPPED," AND sfda002 in ('25')"
   END CASE
   #end add-point
   
   IF g_wc.getIndexOf(" 1=2", 1) THEN  #此段版型写在最后感觉不是很好，应该写在上面的"LET g_wc = " 1=2""后面比较好
      LET g_default = TRUE
   END IF
END FUNCTION]]>
  </point>
  <point name="function.asft310_statechange" order="51" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_statechange()
   {<Local define>}
   DEFINE lc_state   LIKE type_t.chr5
   DEFINE l_sfda014  LIKE sfda_t.sfda014   #liuym add 2015/3/2
   DEFINE l_sfda015  LIKE sfda_t.sfda015   #liuym add 2015/3/2
   {</Local define>}

   ERROR ""     #清空畫面右下側ERROR區塊

   IF g_sfda_m.sfdadocno IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()
      RETURN
   END IF
   
   IF g_sfda_m.sfdastus MATCHES '[X]' THEN  #已作废，不可取消作废
      #INITIALIZE g_errparam TO NULL
      #LET g_errparam.code = "asf-00380"
      #LET g_errparam.extend = ""
      #LET g_errparam.popup = FALSE
      #CALL cl_err()
      #mark 同apmt500的做法
      RETURN
   END IF

   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_sfda_m.sfdastus
            WHEN "N" #未確認
               HIDE OPTION "unconfirmed"
               HIDE OPTION "posted"
               HIDE OPTION "unposted"
            WHEN "X" #作廢
               HIDE OPTION "invalid"
               HIDE OPTION "confirmed"
               HIDE OPTION "posted"
               HIDE OPTION "unposted"
            WHEN "Y" #已確認
               HIDE OPTION "confirmed"
               HIDE OPTION "invalid"
               HIDE OPTION "unposted"
            WHEN "A" #已核准
               HIDE OPTION "approved"
            WHEN "D" #抽單
               HIDE OPTION "withdraw"
            WHEN "R" #已拒絕
               HIDE OPTION "rejection"
            WHEN "W" #送簽中
               HIDE OPTION "signing"
            WHEN "S" #已扣帳
               HIDE OPTION "posted"
               HIDE OPTION "confirmed"
               HIDE OPTION "unconfirmed"
               HIDE OPTION "invalid"
            WHEN "Z" #扣帳還原
               HIDE OPTION "unposted"
               
			#此段落由子樣板a35產生
            #狀況碼為『D.抽單』時，必須隱藏『抽單(draw_out)』按鈕
            #狀況碼為『W.已送簽』時，必須隱藏『提交(send)』按鈕
            #WHEN "D"    #D.抽單
            #   HIDE OPTION "draw_out"   #「抽單」action
            #WHEN "W"    #W.已送簽
            #   HIDE OPTION "send"       #「提交」action


         END CASE
         #add-point:menu前
         CALL cl_set_act_visible("unconfirmed,invalid,confirmed,posted,unposted",TRUE)
         CALL cl_set_act_visible("signing,withdraw",FALSE)
         
         CASE g_sfda_m.sfdastus
            #未確認
            WHEN "N"
               CALL cl_set_act_visible("unconfirmed,posted,unposted",FALSE)
               #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
               IF cl_bpm_chk() THEN
                   CALL cl_set_act_visible("signing",TRUE)
                   CALL cl_set_act_visible("confirmed",FALSE)
               END IF
            #已拒絕
            WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
               CALL cl_set_act_visible("confirmed,unconfirmed,posted,unposted",FALSE)
            #抽單
            WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
               CALL cl_set_act_visible("confirmed,unconfirmed,posted,unposted",FALSE)
            #作廢
            WHEN "X"
               CALL cl_set_act_visible("unconfirmed,invalid,confirmed,posted,unposted",FALSE)
            #已確認
            WHEN "Y"
               CALL cl_set_act_visible("invalid,confirmed,unposted",FALSE)
            #送簽中
            WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
                CALL cl_set_act_visible("withdraw",TRUE)  #抽单
                CALL cl_set_act_visible("unconfirmed,invalid,confirmed,posted,unposted",FALSE)
            #已核准
            WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
                CALL cl_set_act_visible("confirmed ",TRUE)
                CALL cl_set_act_visible("unconfirmed,invalid,posted,unposted",FALSE)
         
            WHEN "S" #已扣帳
                CALL cl_set_act_visible("unconfirmed,invalid,confirmed,posted",FALSE)
            #WHEN "Z" #扣帳還原
            #    CALL cl_set_act_visible("unposted",FALSE)
         END CASE
         #end add-point
	
      #ON ACTION withdraw
      #   LET lc_state = "D"
      #   #add-point:action控制
      #   #IF g_sfda_m.sfdastus MATCHES '[S]' THEN  #tmp
      #      RETURN
      #   #END IF
      #   #end add-point
      #   EXIT MENU
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         IF g_sfda_m.sfdastus = 'Y' THEN
            CALL s_transaction_begin()
            CALL s_asft310_unconfirm(g_sfda_m.sfdadocno)
                 RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N',0)
            ELSE
               LET g_sfda_m.sfdastus = 'N'
               CALL s_transaction_end('Y',0)
            END IF
            RETURN 
         ELSE
            #目前单据状态不可更新成未确认状态，请确认当前状态是否为'X.作废'或'Y.已确认'
            IF g_sfda_m.sfdastus NOT MATCHES '[XY]' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'sub-00474'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               RETURN
            END IF
         END IF
         #end add-point
         EXIT MENU

      #ON ACTION signing
      #   LET lc_state = "W"
      #   #add-point:action控制
      #   #IF g_sfda_m.sfdastus MATCHES '[S]' THEN  #tmp
      #      RETURN
      #   #END IF
      #   #end add-point
      #   EXIT MENU

      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         #仅当状态为 N.未审核 时,才可以切换为X.作废
         IF g_sfda_m.sfdastus NOT MATCHES '[N]' THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'asf-00186'
            LET g_errparam.extend = ''
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN
         END IF
         IF NOT cl_ask_confirm('aim-00109') THEN
            RETURN
         END IF
         #2015/3/2 liuym add ----str----- 
         #更新下阶料报废上的退料单号 
         SELECT sfda014,sfda015 INTO l_sfda014,l_sfda015
           FROM sfda_t
          WHERE sfdaent   = g_enterprise
            AND sfdadocno = g_sfda_m.sfdadocno
         IF l_sfda015 = '04' THEN
            UPDATE sfja_t SET sfja005 = NULL
             WHERE sfjaent   = g_enterprise
               AND sfjadocno = l_sfda014
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = 'upd sfja'
               LET g_errparam.popup = TRUE
               CALL cl_err()
               CALL s_transaction_end('N','0')
               RETURN
            END IF
         END IF
         #2015/3/2 liuym add ----end----- 
         #end add-point
         EXIT MENU

      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         IF g_sfda_m.sfdastus = 'N' THEN
            CALL s_transaction_begin()
            CALL s_asft310_confirm(g_sfda_m.sfdadocno)
                 RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N',0)
            ELSE
               LET g_sfda_m.sfdastus = 'Y'
               CALL s_transaction_end('Y',0)
            END IF
            RETURN
         END IF

         #end add-point
         EXIT MENU
         
      ON ACTION unposted
         LET lc_state = "Z"
         #add-point:action控制
         LET lc_state = "Y"
         IF g_sfda_m.sfdastus = 'S' THEN
            IF s_asft310_upd_sfcb_cre_tmp_table() THEN
               CALL s_transaction_begin()
               CALL s_asft310_unpost(g_sfda_m.sfdadocno)
                    RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N',0)
               ELSE
                  LET g_sfda_m.sfdastus = 'Y'
                  CALL s_transaction_end('Y',0)
               END IF
               CALL s_asft310_upd_sfcb_drop_tmp_table()
            END IF
            RETURN
         END IF 
         #end add-point
         EXIT MENU
         
      ON ACTION approved
         LET lc_state = "A"
         #add-point:action控制
         #IF g_sfda_m.sfdastus MATCHES '[S]' THEN  #tmp
            RETURN
         #END IF
         #end add-point
         EXIT MENU

      ON ACTION rejection
         LET lc_state = "R"
         #add-point:action控制
         #IF g_sfda_m.sfdastus MATCHES '[S]' THEN  #tmp
            RETURN
         #END IF
         #end add-point
         EXIT MENU

      ON ACTION posted
         LET lc_state = "S"
         #add-point:action控制
         IF s_asft310_upd_sfcb_cre_tmp_table() THEN
            CALL s_transaction_begin()
            CALL s_asft310_post(g_sfda_m.sfdadocno)
                 RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N',0)
            ELSE
               LET g_sfda_m.sfdastus = 'S'
               CALL s_transaction_end('Y',0)
            END IF
            CALL s_asft310_upd_sfcb_drop_tmp_table()
         END IF
         RETURN
         #end add-point
         EXIT MENU


	
	  #此段落由子樣板a36產生
      #提交
      #ON ACTION send
      #   #IF g_sfda_m.sfdastus MATCHES '[S]' THEN  #tmp
      #      RETURN
      #   #END IF
      #   IF cl_auth_chk_act("send") THEN
      #      CALL asft310_send()
      #   END IF
      #   LET lc_state = 'W'
      #   EXIT MENU
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT asft310_send() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''  #因為_send()已有執行update動作
         EXIT MENU

      #抽單
      #ON ACTION draw_out
      #   #IF g_sfda_m.sfdastus MATCHES '[S]' THEN  #tmp
      #      RETURN
      #   #END IF
      #   IF cl_auth_chk_act("draw_out") THEN
      #      CALL asft310_draw_out()
      #   END IF
      #   LET lc_state = 'D'
      #   EXIT MENU
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT asft310_draw_out() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''  #因為_draw_out()已有執行update動作
         EXIT MENU


	
      #add-point:stus控制
      
      #end add-point
	
   END MENU

   IF (lc_state <> "N"
      AND lc_state <> "X"
      AND lc_state <> "Y"
      AND lc_state <> "S"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      ) OR
      cl_null(lc_state) THEN
      RETURN
   END IF

   UPDATE sfda_t SET sfdastus = lc_state
    WHERE sfdaent = g_enterprise AND sfdasite = g_site AND sfdadocno = g_sfda_m.sfdadocno
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")  #unconfirmed
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")

		 #此段落由子樣板a37產生
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      END CASE
      LET g_sfda_m.sfdastus = lc_state
      DISPLAY BY NAME g_sfda_m.sfdastus
   END IF
   #add-point:stus修改後
   
   #end add-point

   #add-point:statechange段結束前
   
   #end add-point

END FUNCTION]]>
  </point>
  <point name="function.asft310_idx_chk" order="52" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_idx_chk()
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_sfdb_d.getLength() THEN
         LET g_detail_idx = g_sfdb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_sfdb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_sfdb_d.getLength() TO FORMONLY.cnt
   END IF

   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_sfdc_d.getLength() THEN
         LET g_detail_idx = g_sfdc_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_sfdc_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_sfdc_d.getLength() TO FORMONLY.cnt
   END IF

   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_sfde_d.getLength() THEN
         LET g_detail_idx = g_sfde_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_sfde_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_sfde_d.getLength() TO FORMONLY.cnt
   END IF

   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_sfdc4_d.getLength() THEN
         LET g_detail_idx = g_sfdc4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_sfdc4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_sfdc4_d.getLength() TO FORMONLY.cnt
   END IF

   IF g_current_page = 5 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail5")
      IF g_detail_idx2 > g_sfdf_d.getLength() THEN
         LET g_detail_idx2 = g_sfdf_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_sfdf_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_sfdf_d.getLength() TO FORMONLY.cnt
   END IF

   IF g_current_page = 6 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail6")
      IF g_detail_idx2 > g_sfdd_d.getLength() THEN
         LET g_detail_idx2 = g_sfdd_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_sfdd_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_sfdd_d.getLength() TO FORMONLY.cnt
   END IF

   IF g_current_page = 7 THEN
      DISPLAY g_d_idx_display, g_d_cnt_display TO FORMONLY.idx, FORMONLY.cnt
   END IF

END FUNCTION]]>
  </point>
  <point name="function.asft310_b_fill2" order="53" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_b_fill2(pi_idx)
DEFINE pi_idx          LIKE type_t.num5
DEFINE l_ac_t          LIKE type_t.num5

   #有在单身处理中，需先备份旧值
   LET l_ac_t = l_ac

   CASE pi_idx
      WHEN '0'
           CALL asft310_b_fill_sfdf()
           CALL asft310_b_fill_sfdd()
           CALL asft310_b_fill_inao()
      WHEN '5'
           CALL asft310_b_fill_sfdf()
      WHEN '6'
           CALL asft310_b_fill_sfdd()
           CALL asft310_b_fill_inao()
   END CASE

   #还原旧值
   LET l_ac = l_ac_t

   #CALL asft310_detail_show() #mark 150109 提高效能

END FUNCTION]]>
  </point>
  <point name="function.asft310_draw_out" order="54" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#抽单
PRIVATE FUNCTION asft310_draw_out()
   #檢查資料是否存在
   IF g_sfda_m.sfdadocno IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF

   #LOCK主檔資料
   CALL s_transaction_begin()

   #進行BPM抽單功能
   OPEN asft310_cl USING g_enterprise,g_sfda_m.sfdadocno

   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN asft310_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE asft310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   #鎖住將被更改的資料
   FETCH asft310_cl INTO g_sfda_m.sfdadocno,g_sfda_m.oobal004,g_sfda_m.sfdadocdt,g_sfda_m.sfda001,g_sfda_m.sfda002,
       g_sfda_m.sfda003,g_sfda_m.sfda003_desc,g_sfda_m.sfda004,g_sfda_m.sfda004_desc,g_sfda_m.sfda005,g_sfda_m.sfda015,g_sfda_m.sfda014,
       g_sfda_m.sfdastus,g_sfda_m.sfdaownid,g_sfda_m.sfdaownid_desc,g_sfda_m.sfdaowndp,g_sfda_m.sfdaowndp_desc,
       g_sfda_m.sfdacrtid,g_sfda_m.sfdacrtid_desc,g_sfda_m.sfdacrtdp,g_sfda_m.sfdacrtdp_desc,g_sfda_m.sfdacrtdt,
       g_sfda_m.sfdamodid,g_sfda_m.sfdamodid_desc,g_sfda_m.sfdamoddt,g_sfda_m.sfdacnfid,g_sfda_m.sfdacnfid_desc,
       g_sfda_m.sfdacnfdt,g_sfda_m.sfdapstid,g_sfda_m.sfdapstid_desc,g_sfda_m.sfdapstdt

   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_sfda_m.sfdadocno
      LET g_errparam.popup = FALSE
      CALL cl_err()

      CLOSE asft310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN
      CLOSE asft310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   #完成狀態更新
   CLOSE asft310_cl
   CALL s_transaction_end('Y','0')

   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"

   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL asft310_ui_headershow()
   CALL asft310_ui_detailshow()

   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.asft310_send" order="55" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_send()
   IF g_sfda_m.sfdadocno IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF

   #重新取得與顯示完整單據資料(最新單據資料)
    SELECT UNIQUE sfdadocno,sfdadocdt,sfda001,sfda002,sfda003,sfda004,sfda005,sfda015,sfda014,sfdastus,sfdaownid,sfdaowndp,
                  sfdacrtid,sfdacrtdp,sfdacrtdt,sfdamodid,sfdamoddt,sfdacnfid,sfdacnfdt,sfdapstid,sfdapstdt
      INTO g_sfda_m.sfdadocno,g_sfda_m.sfdadocdt,g_sfda_m.sfda001,g_sfda_m.sfda002,g_sfda_m.sfda003,g_sfda_m.sfda004,
           g_sfda_m.sfda005,g_sfda_m.sfda015,g_sfda_m.sfda014,g_sfda_m.sfdastus,g_sfda_m.sfdaownid,g_sfda_m.sfdaowndp,g_sfda_m.sfdacrtid,g_sfda_m.sfdacrtdp,
           g_sfda_m.sfdacrtdt,g_sfda_m.sfdamodid,g_sfda_m.sfdamoddt,g_sfda_m.sfdacnfid,g_sfda_m.sfdacnfdt,
           g_sfda_m.sfdapstid,g_sfda_m.sfdapstdt
      FROM sfda_t
     WHERE sfdaent = g_enterprise AND sfdasite = g_site AND sfdadocno = g_sfda_m.sfdadocno

   ERROR ""

   CALL s_transaction_begin()

   OPEN asft310_cl USING g_enterprise,g_sfda_m.sfdadocno

   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN asft310_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE asft310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   #鎖住將被更改的資料
   FETCH asft310_cl INTO g_sfda_m.sfdadocno,g_sfda_m.oobal004,g_sfda_m.sfdadocdt,g_sfda_m.sfda001,g_sfda_m.sfda002,
       g_sfda_m.sfda003,g_sfda_m.sfda003_desc,g_sfda_m.sfda004,g_sfda_m.sfda004_desc,g_sfda_m.sfda005,g_sfda_m.sfda015,g_sfda_m.sfda014,
       g_sfda_m.sfdastus,g_sfda_m.sfdaownid,g_sfda_m.sfdaownid_desc,g_sfda_m.sfdaowndp,g_sfda_m.sfdaowndp_desc,
       g_sfda_m.sfdacrtid,g_sfda_m.sfdacrtid_desc,g_sfda_m.sfdacrtdp,g_sfda_m.sfdacrtdp_desc,g_sfda_m.sfdacrtdt,
       g_sfda_m.sfdamodid,g_sfda_m.sfdamodid_desc,g_sfda_m.sfdamoddt,g_sfda_m.sfdacnfid,g_sfda_m.sfdacnfid_desc,
       g_sfda_m.sfdacnfdt,g_sfda_m.sfdapstid,g_sfda_m.sfdapstid_desc,g_sfda_m.sfdapstdt

   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_sfda_m.sfdadocno
      LET g_errparam.popup = FALSE
      CALL cl_err()

      CLOSE asft310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
   LET g_wc2_table3 = " 1=1"
   LET g_wc2_table5 = " 1=1"
   LET g_wc2_table6 = " 1=1"


   CALL asft310_show()
   CALL asft310_set_pk_array()
   #add-point: 提交前的ADP
   #確認前檢核段
   IF NOT s_asft310_confirm_chk(g_sfda_m.sfdadocno) THEN
      CLOSE asft310_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
   #end add-point

   #公用變數初始化
   CALL cl_bpm_data_init()

   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data()
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_sfda_m))

   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_sfdb_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_sfdc_d))
   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_sfde_d))
   CALL cl_bpm_set_detail_data("s_detail4", util.JSONArray.fromFGL(g_sfdc4_d))
   CALL cl_bpm_set_detail_data("s_detail5", util.JSONArray.fromFGL(g_sfdf_d))
   CALL cl_bpm_set_detail_data("s_detail6", util.JSONArray.fromFGL(g_sfdd_d))
   CALL cl_bpm_set_detail_data("s_detail7", util.JSONArray.fromFGL(g_inao_d))


   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功

   #開單失敗
   IF NOT cl_bpm_cli() THEN
      CLOSE asft310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   #add-point: 提交後的ADP
   
   #end add-point

   #完成狀態更新
   CLOSE asft310_cl
   CALL s_transaction_end('Y','0')

   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL asft310_ui_browser_refresh()

   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_row].b_statepic = "stus/16/signing.png"

   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL asft310_ui_headershow()
   CALL asft310_ui_detailshow()

   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.asft310_b_fill_sfdb" order="56" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_b_fill_sfdb()
   CALL g_sfdb_d.clear()
   
   LET g_sql = "SELECT  UNIQUE sfdb001,sfdb002,sfdb003,'',sfdb004,'',sfdb005,'','','','','',sfdb006,sfdb007,sfdb008 ",
               "  FROM sfdb_t",
               #" INNER JOIN sfda_t ON sfdadocno = sfdbdocno AND sfdasite = sfdbsite AND sfdaent = sfdbent",
               " WHERE sfdbent=? AND sfdbsite=? AND sfdbdocno=?"
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
   END IF
   #子單身的WC
   LET g_sql = g_sql, " ORDER BY sfdb_t.sfdb001,sfdb_t.sfdb002,sfdb_t.sfdb003,sfdb_t.sfdb004,sfdb_t.sfdb005" 
   PREPARE b_fill_sfdb_p FROM g_sql
   DECLARE b_fill_sfdb_c CURSOR FOR b_fill_sfdb_p
   LET g_cnt = l_ac
   LET l_ac = 1
   OPEN b_fill_sfdb_c USING g_enterprise, g_site,g_sfda_m.sfdadocno
   FOREACH b_fill_sfdb_c INTO g_sfdb_d[l_ac].sfdb001,g_sfdb_d[l_ac].sfdb002,g_sfdb_d[l_ac].sfdb003,g_sfdb_d[l_ac].sfdb003_desc,
       g_sfdb_d[l_ac].sfdb004,g_sfdb_d[l_ac].sfdb004_desc,g_sfdb_d[l_ac].sfdb005,g_sfdb_d[l_ac].sfaa010,
       g_sfdb_d[l_ac].sfaa010_desc,g_sfdb_d[l_ac].sfaa010_desc2,g_sfdb_d[l_ac].sfaa012,g_sfdb_d[l_ac].sfaa013,
       g_sfdb_d[l_ac].sfdb006,g_sfdb_d[l_ac].sfdb007,g_sfdb_d[l_ac].sfdb008
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      #add 150109
      #部位说明
      IF NOT cl_null(g_sfdb_d[l_ac].sfdb003) THEN
         INITIALIZE g_chkparam.* TO NULL
         LET g_chkparam.arg1 = '215'
         LET g_chkparam.arg2 = g_sfdb_d[l_ac].sfdb003
         CALL cl_ref_val("v_oocql002")
         LET g_sfdb_d[l_ac].sfdb003_desc = g_chkparam.return1
      END IF

      #作业说明
      IF NOT cl_null(g_sfdb_d[l_ac].sfdb004) THEN
         INITIALIZE g_chkparam.* TO NULL
         LET g_chkparam.arg1 = '221'
         LET g_chkparam.arg2 = g_sfdb_d[l_ac].sfdb004
         CALL cl_ref_val("v_oocql002")
         LET g_sfdb_d[l_ac].sfdb004_desc = g_chkparam.return1
      END IF

      SELECT sfaa010,imaal003,imaal004,sfaa013,sfaa012
        INTO g_sfdb_d[l_ac].sfaa010,g_sfdb_d[l_ac].sfaa010_desc,g_sfdb_d[l_ac].sfaa010_desc2,
             g_sfdb_d[l_ac].sfaa013,g_sfdb_d[l_ac].sfaa012
        FROM sfaa_t LEFT JOIN imaal_t ON sfaaent = imaalent AND sfaa010 = imaal001 AND imaal002 = g_dlang
       WHERE sfaaent   = g_enterprise
         AND sfaasite  = g_site
         AND sfaadocno = g_sfdb_d[l_ac].sfdb001
      #add 150109 end

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec AND g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

   END FOREACH
   LET g_error_show = 0
   #CALL g_sfdb_d.deleteElement(g_sfdb_d.getLength())
   CALL g_sfdb_d.deleteElement(l_ac)
   LET l_ac = g_cnt
   LET g_cnt = 0
   FREE b_fill_sfdb_p
END FUNCTION]]>
  </point>
  <point name="function.asft310_b_fill_sfdc" order="57" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_b_fill_sfdc()
DEFINE l_sfba001   LIKE sfba_t.sfba001  #生产料号
DEFINE l_sfaa011   LIKE sfaa_t.sfaa011  #特性
   
   CALL g_sfdc_d.clear()
   CALL g_sfdc4_d.clear()
   
   LET g_sql = "SELECT  UNIQUE sfdcseq,sfdc001,sfdc002,sfdc003,'','','','','','',sfdc004,'','',sfdc005,'','','','',sfdc006,'','','',sfdc007,sfdc008,'',sfdc009,'',sfdc010,sfdc011,'',sfdc012,'',sfdc013,'',sfdc014,sfdc016,sfdc015,'',sfdc017 ",
               "  FROM sfdc_t",
               #" INNER JOIN sfda_t ON sfdadocno = sfdcdocno AND sfdasite = sfdcsite AND sfdaent = sfdcent ",
               " LEFT JOIN sfdd_t ON sfdcent = sfddent AND sfdcsite = sfddsite AND sfdcdocno = sfdddocno AND sfdcseq = sfddseq ",
               " WHERE sfdcent=? AND sfdcsite=? AND sfdcdocno=?"
   IF NOT cl_null(g_wc2_table2) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
   END IF
   #子單身的WC
   IF NOT cl_null(g_wc2_table6) THEN
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table6 CLIPPED
   END IF
   LET g_sql = g_sql, " ORDER BY sfdc_t.sfdcseq" 
   PREPARE b_fill_sfdc_p FROM g_sql
   DECLARE b_fill_sfdc_c CURSOR FOR b_fill_sfdc_p
   LET l_ac = 1
   OPEN b_fill_sfdc_c USING g_enterprise, g_site,g_sfda_m.sfdadocno
   FOREACH b_fill_sfdc_c INTO g_sfdc_d[l_ac].sfdcseq,g_sfdc_d[l_ac].sfdc001,g_sfdc_d[l_ac].sfdc002,
                              g_sfdc_d[l_ac].sfdc003,g_sfdc_d[l_ac].sfba002,g_sfdc_d[l_ac].sfba002_desc,
                              g_sfdc_d[l_ac].sfba003,g_sfdc_d[l_ac].sfba003_desc,g_sfdc_d[l_ac].sfba004,
                              g_sfdc_d[l_ac].replace,g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc004_desc,
                              g_sfdc_d[l_ac].sfdc004_desc2,g_sfdc_d[l_ac].sfdc005,
                              g_sfdc_d[l_ac].sfdc005_desc,g_sfdc_d[l_ac].imaf034,
                              g_sfdc_d[l_ac].imae092,g_sfdc_d[l_ac].sfba028,g_sfdc_d[l_ac].sfdc006,
                              g_sfdc_d[l_ac].sfdc006_desc,g_sfdc_d[l_ac].sfba013,g_sfdc_d[l_ac].sfba016,
                              g_sfdc_d[l_ac].sfdc007,g_sfdc_d[l_ac].sfdc008,g_sfdc_d[l_ac].diff,
                              g_sfdc_d[l_ac].sfdc009,g_sfdc_d[l_ac].sfdc009_desc,g_sfdc_d[l_ac].sfdc010,
                              g_sfdc_d[l_ac].sfdc011,g_sfdc_d[l_ac].diff2,g_sfdc_d[l_ac].sfdc012,
                              g_sfdc_d[l_ac].sfdc012_desc,g_sfdc_d[l_ac].sfdc013,g_sfdc_d[l_ac].sfdc013_desc,
                              g_sfdc_d[l_ac].sfdc014,g_sfdc_d[l_ac].sfdc016,g_sfdc_d[l_ac].sfdc015,
                              g_sfdc_d[l_ac].sfdc015_desc,g_sfdc_d[l_ac].sfdc017
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF

      #add 150109
      #单位
      CALL s_desc_get_unit_desc(g_sfdc_d[l_ac].sfdc006) RETURNING g_sfdc_d[l_ac].sfdc006_desc
      
      #参考单位
      IF NOT cl_null(g_sfdc_d[l_ac].sfdc009) THEN
         CALL s_desc_get_unit_desc(g_sfdc_d[l_ac].sfdc009) RETURNING g_sfdc_d[l_ac].sfdc009_desc
      END IF
      
      #理由码
      IF NOT cl_null(g_sfdc_d[l_ac].sfdc015) THEN
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_sfdc_d[l_ac].sfdc015
         CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='226' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_sfdc_d[l_ac].sfdc015_desc = '', g_rtn_fields[1] , ''
         CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='226' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      END IF
      
      #需求料号品名规格
      CALL s_desc_get_item_desc(g_sfdc_d[l_ac].sfdc004)
         RETURNING g_sfdc_d[l_ac].sfdc004_desc,g_sfdc_d[l_ac].sfdc004_desc2
      #显示产品特征说明
      IF NOT cl_null(g_sfdc_d[l_ac].sfdc005) THEN
         CALL s_feature_description(g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfdc005)
            RETURNING l_success,g_sfdc_d[l_ac].sfdc005_desc
         IF NOT l_success THEN
            LET g_sfdc_d[l_ac].sfdc005_desc = ''
         END IF
      END IF

      #保税料
      SELECT imaf034
        INTO g_sfdc_d[l_ac].imaf034
        FROM imaf_t
       WHERE imafent = g_enterprise
         AND imafsite= g_site
         AND imaf001 = g_sfdc_d[l_ac].sfdc004
      
      #发料前调拨
      SELECT imae092 INTO g_sfdc_d[l_ac].imae092
        FROM imae_t
       WHERE imaeent = g_enterprise
         AND imaesite= g_site
         AND imae001 = g_sfdc_d[l_ac].sfdc004
      
      #差异数量
      LET g_sfdc_d[l_ac].diff  = g_sfdc_d[l_ac].sfdc007 - g_sfdc_d[l_ac].sfdc008
      #参考单位差异数量
      LET g_sfdc_d[l_ac].diff2 = g_sfdc_d[l_ac].sfdc010 - g_sfdc_d[l_ac].sfdc011
      
      #库位名称
      IF NOT cl_null(g_sfdc_d[l_ac].sfdc012) THEN
         CALL s_desc_get_stock_desc(g_site,g_sfdc_d[l_ac].sfdc012)
            RETURNING g_sfdc_d[l_ac].sfdc012_desc
      END IF
      
      #储位名称
      IF NOT cl_null(g_sfdc_d[l_ac].sfdc013) THEN
         CALL s_desc_get_locator_desc(g_site,g_sfdc_d[l_ac].sfdc012,g_sfdc_d[l_ac].sfdc013)
            RETURNING g_sfdc_d[l_ac].sfdc013_desc
      END IF
      
      #工单信息-部位、作业、作业序、客供料、应发料、已发量
      SELECT sfba002,sfba003,sfba004,sfba028,
             sfba013,sfba016,sfba001,sfaa011
        INTO g_sfdc_d[l_ac].sfba002,g_sfdc_d[l_ac].sfba003,g_sfdc_d[l_ac].sfba004,g_sfdc_d[l_ac].sfba028,
             g_sfdc_d[l_ac].sfba013,g_sfdc_d[l_ac].sfba016,l_sfba001,l_sfaa011
        FROM sfba_t,sfaa_t
       WHERE sfbaent = sfaaent
         AND sfbasite= sfaasite
         AND sfbadocno=sfaadocno
         AND sfbaent = g_enterprise
         AND sfbasite= g_site
         AND sfbadocno=g_sfdc_d[l_ac].sfdc001
         AND sfbaseq = g_sfdc_d[l_ac].sfdc002
         AND sfbaseq1= g_sfdc_d[l_ac].sfdc003

      #部位说明
      IF NOT cl_null(g_sfdc_d[l_ac].sfba002) THEN
         INITIALIZE g_chkparam.* TO NULL
         LET g_chkparam.arg1 = '215'
         LET g_chkparam.arg2 = g_sfdc_d[l_ac].sfba002
         CALL cl_ref_val("v_oocql002")
         LET g_sfdc_d[l_ac].sfba002_desc = g_chkparam.return1
      END IF
      
      #作业说明
      IF NOT cl_null(g_sfdc_d[l_ac].sfba003) THEN
         INITIALIZE g_chkparam.* TO NULL
         LET g_chkparam.arg1 = '221'
         LET g_chkparam.arg2 = g_sfdc_d[l_ac].sfba003
         CALL cl_ref_val("v_oocql002")
         LET g_sfdc_d[l_ac].sfba003_desc = g_chkparam.return1
      END IF
      
      #replace取替代建议
      CALL s_abmm201_get_proposal(g_site,l_sfba001,l_sfaa011,g_sfdc_d[l_ac].sfdc004,g_sfdc_d[l_ac].sfba002,g_sfdc_d[l_ac].sfba003,g_sfdc_d[l_ac].sfba004)
         RETURNING g_sfdc_d[l_ac].replace 
      
      #备注说明
      CALL asft310_show_sfdc_ooff013(l_ac)
      #add 150109 end
      LET g_sfdc4_d[l_ac].* = g_sfdc_d[l_ac].*

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF
   END FOREACH
   #CALL g_sfdc_d.deleteElement(g_sfdc_d.getLength())
   CALL g_sfdc_d.deleteElement(l_ac)
   #CALL g_sfdc4_d.deleteElement(g_sfdc4_d.getLength())
   LET l_ac = g_cnt
   LET g_cnt = 0
   FREE b_fill_sfdc_p
   
END FUNCTION]]>
  </point>
  <point name="function.asft310_b_fill_sfde" order="58" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_b_fill_sfde()

   CALL g_sfde_d.clear()
   
   LET g_sql = "SELECT  UNIQUE sfdeseq,sfde001,'','',sfde002,'','','',sfde009,sfde003,'',sfde004,sfde005,'',sfde006,'',sfde007,sfde008,'',sfde010 FROM sfde_t",
               #" INNER JOIN sfda_t ON sfdadocno = sfdedocno AND sfdasite = sfdesite AND sfdaent = sfdeent ",
               " LEFT JOIN sfdf_t ON sfdeent = sfdfent AND sfdesite = sfdfsite AND sfdedocno = sfdfdocno AND sfdeseq = sfdfseq ",
               " WHERE sfdeent=? AND sfdesite=? AND sfdedocno=?"
   IF NOT cl_null(g_wc2_table3) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
   END IF
   #子單身的WC
   IF NOT cl_null(g_wc2_table5) THEN
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table5 CLIPPED
   END IF
   LET g_sql = g_sql, " ORDER BY sfde_t.sfdeseq"
   PREPARE b_fill_sfde_p FROM g_sql
   DECLARE b_fill_sfde_c CURSOR FOR b_fill_sfde_p
   LET l_ac = 1
   OPEN b_fill_sfde_c USING g_enterprise, g_site,g_sfda_m.sfdadocno
   FOREACH b_fill_sfde_c INTO g_sfde_d[l_ac].sfdeseq,g_sfde_d[l_ac].sfde001,g_sfde_d[l_ac].sfde001_desc,
       g_sfde_d[l_ac].sfde001_desc2,g_sfde_d[l_ac].sfde002,g_sfde_d[l_ac].sfde002_desc,g_sfde_d[l_ac].imaf034,g_sfde_d[l_ac].imae092,
       g_sfde_d[l_ac].sfde009,g_sfde_d[l_ac].sfde003,g_sfde_d[l_ac].sfde003_desc,g_sfde_d[l_ac].sfde004,
       g_sfde_d[l_ac].sfde005,g_sfde_d[l_ac].diff03,g_sfde_d[l_ac].sfde006,g_sfde_d[l_ac].sfde006_desc,
       g_sfde_d[l_ac].sfde007,g_sfde_d[l_ac].sfde008,g_sfde_d[l_ac].diff23,g_sfde_d[l_ac].sfde010

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF

      #add 150109
      #需求料号
      CALL s_desc_get_item_desc(g_sfde_d[l_ac].sfde001)
         RETURNING g_sfde_d[l_ac].sfde001_desc,g_sfde_d[l_ac].sfde001_desc2
      #显示产品特征说明
      IF NOT cl_null(g_sfde_d[l_ac].sfde002) THEN
         CALL s_feature_description(g_sfde_d[l_ac].sfde001,g_sfde_d[l_ac].sfde002)
            RETURNING l_success,g_sfde_d[l_ac].sfde002_desc
         IF NOT l_success THEN
            LET g_sfde_d[l_ac].sfde002_desc = ''
         END IF
      END IF
      #保税料
      SELECT imaf034
        INTO g_sfde_d[l_ac].imaf034
        FROM imaf_t
       WHERE imafent = g_enterprise
         AND imafsite= g_site
         AND imaf001 = g_sfde_d[l_ac].sfde001
      
      #发料前调拨
      SELECT imae092 INTO g_sfde_d[l_ac].imae092
        FROM imae_t
       WHERE imaeent = g_enterprise
         AND imaesite= g_site
         AND imae001 = g_sfde_d[l_ac].sfde001

      #单位
      CALL s_desc_get_unit_desc(g_sfde_d[l_ac].sfde003) RETURNING g_sfde_d[l_ac].sfde003_desc

      #差异数量
      LET g_sfde_d[l_ac].diff03 = g_sfde_d[l_ac].sfde004 - g_sfde_d[l_ac].sfde005

      #参考单位
      IF NOT cl_null(g_sfde_d[l_ac].sfde006) THEN
         CALL s_desc_get_unit_desc(g_sfde_d[l_ac].sfde006) RETURNING g_sfde_d[l_ac].sfde006_desc
      END IF
      
      #参考单位差异数量
      LET g_sfde_d[l_ac].diff23 = g_sfde_d[l_ac].sfde007 - g_sfde_d[l_ac].sfde008
      #add 150109 end

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF

   END FOREACH
   #CALL g_sfde_d.deleteElement(g_sfde_d.getLength())
   CALL g_sfde_d.deleteElement(l_ac)
   LET l_ac = g_cnt
   LET g_cnt = 0
   FREE b_fill_sfde_p
END FUNCTION]]>
  </point>
  <point name="function.asft310_b_fill_inao" order="59" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#明細單身 inao000 = '2'
PRIVATE FUNCTION asft310_b_fill_inao()
   
   CALL g_inao_d.clear()
   
   LET g_sql = "SELECT  UNIQUE inaoseq,inaoseq1,inaoseq2,inao000,inao001,'','',inao008,inao009,inao010,inao012 ",
               "  FROM inao_t",
               " INNER JOIN sfda_t ON sfdadocno = inaodocno AND sfdaent = inaoent AND sfdasite = inaosite ",
               " WHERE inaoent=? AND inaosite=? AND inaodocno=? AND inao000 = '2'"
   IF NOT cl_null(g_wc2_table6) THEN
      LET g_sql = g_sql CLIPPED, " AND (inaoseq,inaoseq1) IN ( SELECT sfddseq,sfddseq1 FROM sfdd_t WHERE sfddent='",g_enterprise,"' AND sfddsite='",g_site,"' AND sfdddocno='",g_sfda_m.sfdadocno,"' AND ", g_wc2_table6 CLIPPED, " )"
   END IF
   #子單身的WC
   LET g_sql = g_sql CLIPPED, " ORDER BY inao_t.inaoseq,inao_t.inaoseq1,inao_t.inaoseq2 "
   PREPARE b_fill_inao_p FROM g_sql
   DECLARE b_fill_inao_c CURSOR FOR b_fill_inao_p
   LET l_ac = 1
   OPEN b_fill_inao_c USING g_enterprise, g_site,g_sfda_m.sfdadocno
   FOREACH b_fill_inao_c INTO g_inao_d[l_ac].inaoseq,g_inao_d[l_ac].inaoseq1,g_inao_d[l_ac].inaoseq2,
       g_inao_d[l_ac].inao000,g_inao_d[l_ac].inao001,g_inao_d[l_ac].inao001_desc,g_inao_d[l_ac].inao001_desc2,
       g_inao_d[l_ac].inao008,g_inao_d[l_ac].inao009,g_inao_d[l_ac].inao010,g_inao_d[l_ac].inao012

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      #add 150109
      #料件编号
      CALL s_desc_get_item_desc(g_inao_d[l_ac].inao001)
         RETURNING g_inao_d[l_ac].inao001_desc,g_inao_d[l_ac].inao001_desc2
      #add 150109 end
      
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF

   END FOREACH
   #CALL g_inao_d.deleteElement(g_inao_d.getLength())
   CALL g_inao_d.deleteElement(l_ac)
   LET l_ac = g_cnt
   LET g_cnt = 0
   FREE b_fill_inao_p

END FUNCTION]]>
  </point>
  <point name="function.asft310_b_fill_sfdf" order="60" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_b_fill_sfdf()
   CALL g_sfdf_d.clear()

   LET g_sql = "SELECT UNIQUE sfdfseq1,sfdf001,'','',sfdf013,'',sfdf002,sfdf003,'',sfdf004,'',sfdf005,sfdf010, ",
               "              sfdf006,'',sfdf007,sfdf008,'',sfdf009,sfdf011,sfdf012 ",
               "  FROM sfdf_t",
               " WHERE sfdfent=? AND sfdfsite=? AND sfdfdocno=? AND sfdfseq=?"
   IF NOT cl_null(g_wc2_table5) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table5 CLIPPED
   END IF
   LET g_sql = g_sql, " ORDER BY  sfdf_t.sfdfseq1"

   #add-point:單身填充前
   IF cl_null(g_detail_idx) OR g_detail_idx=0 THEN
      LET g_detail_idx = 1
   END IF
   #end add-point

   PREPARE b_fill_sfdf_p FROM g_sql
   DECLARE b_fill_sfdf_c CURSOR FOR b_fill_sfdf_p
   OPEN b_fill_sfdf_c USING g_enterprise, g_site,g_sfda_m.sfdadocno,g_sfde_d[g_detail_idx].sfdeseq
   LET l_ac = 1
   FOREACH b_fill_sfdf_c INTO g_sfdf_d[l_ac].sfdfseq1,g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf001_desc,
       g_sfdf_d[l_ac].sfdf001_desc2,g_sfdf_d[l_ac].sfdf013,g_sfdf_d[l_ac].sfdf013_desc,
       g_sfdf_d[l_ac].sfdf002,g_sfdf_d[l_ac].sfdf003,g_sfdf_d[l_ac].sfdf003_desc,
       g_sfdf_d[l_ac].sfdf004,g_sfdf_d[l_ac].sfdf004_desc,g_sfdf_d[l_ac].sfdf005,g_sfdf_d[l_ac].sfdf010,
       g_sfdf_d[l_ac].sfdf006,g_sfdf_d[l_ac].sfdf006_desc,g_sfdf_d[l_ac].sfdf007,g_sfdf_d[l_ac].sfdf008,
       g_sfdf_d[l_ac].sfdf008_desc,g_sfdf_d[l_ac].sfdf009,g_sfdf_d[l_ac].sfdf011,g_sfdf_d[l_ac].sfdf012

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF

      #add 150109
      #发料料号
      CALL s_desc_get_item_desc(g_sfdf_d[l_ac].sfdf001)
         RETURNING g_sfdf_d[l_ac].sfdf001_desc,g_sfdf_d[l_ac].sfdf001_desc2
      #显示产品特征说明
      IF NOT cl_null(g_sfdf_d[l_ac].sfdf013) THEN
         CALL s_feature_description(g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf013)
            RETURNING l_success,g_sfdf_d[l_ac].sfdf013_desc
         IF NOT l_success THEN
            LET g_sfdf_d[l_ac].sfdf013_desc = ''
         END IF
      END IF

      #库位
      IF NOT cl_null(g_sfdf_d[l_ac].sfdf003) THEN
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_site
         LET g_ref_fields[2] = g_sfdf_d[l_ac].sfdf003
         CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
         LET g_sfdf_d[l_ac].sfdf003_desc = '', g_rtn_fields[1] , ''
      END IF

      #储位
      IF NOT cl_null(g_sfdf_d[l_ac].sfdf004) THEN
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_site
         LET g_ref_fields[2] = g_sfdf_d[l_ac].sfdf003
         LET g_ref_fields[3] = g_sfdf_d[l_ac].sfdf004
         CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inabsite=? AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
         LET g_sfdf_d[l_ac].sfdf004_desc = '', g_rtn_fields[1] , ''
      END IF

      #单位
      CALL s_desc_get_unit_desc(g_sfdf_d[l_ac].sfdf006) RETURNING g_sfdf_d[l_ac].sfdf006_desc

      #参考单位
      IF NOT cl_null(g_sfdf_d[l_ac].sfdf008) THEN
         CALL s_desc_get_unit_desc(g_sfdf_d[l_ac].sfdf008) RETURNING g_sfdf_d[l_ac].sfdf008_desc
      END IF
      #add 150109 end

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = FALSE
         CALL cl_err()
         EXIT FOREACH
      END IF

   END FOREACH
   #CALL g_sfdf_d.deleteElement(g_sfdf_d.getLength())
   CALL g_sfdf_d.deleteElement(l_ac)
   FREE b_fill_sfdf_p
END FUNCTION]]>
  </point>
  <point name="function.asft310_b_fill_sfdd" order="61" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_b_fill_sfdd()
   CALL g_sfdd_d.clear()

   LET g_sql = "SELECT UNIQUE sfddseq1,sfdd001,'','',sfdd013,'',sfdd002,sfdd003,'',sfdd004,'',sfdd005,sfdd010,",
               "              sfdd006,'',sfdd007,sfdd008,'',sfdd009,sfdd011,sfdd012,'' ",
               "  FROM sfdd_t",
               " WHERE sfddent=? AND sfddsite=? AND sfdddocno=? AND sfddseq=?"
   IF NOT cl_null(g_wc2_table6) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table6 CLIPPED
   END IF
   LET g_sql = g_sql, " ORDER BY  sfdd_t.sfddseq1"

   IF cl_null(g_detail_idx) OR g_detail_idx=0 THEN
      LET g_detail_idx = 1
   END IF

   PREPARE b_fill_sfdd_p FROM g_sql
   DECLARE b_fill_sfdd_c CURSOR FOR b_fill_sfdd_p
   OPEN b_fill_sfdd_c USING g_enterprise, g_site,g_sfda_m.sfdadocno,g_sfdc4_d[g_detail_idx].sfdcseq
   LET l_ac = 1
   FOREACH b_fill_sfdd_c INTO g_sfdd_d[l_ac].sfddseq1,g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd001_desc,
       g_sfdd_d[l_ac].sfdd001_desc2,g_sfdd_d[l_ac].sfdd013,g_sfdd_d[l_ac].sfdd013_desc,g_sfdd_d[l_ac].sfdd002,g_sfdd_d[l_ac].sfdd003,g_sfdd_d[l_ac].sfdd003_desc,
       g_sfdd_d[l_ac].sfdd004,g_sfdd_d[l_ac].sfdd004_desc,g_sfdd_d[l_ac].sfdd005,g_sfdd_d[l_ac].sfdd010,
       g_sfdd_d[l_ac].sfdd006,g_sfdd_d[l_ac].sfdd006_desc,g_sfdd_d[l_ac].sfdd007,g_sfdd_d[l_ac].sfdd008,
       g_sfdd_d[l_ac].sfdd008_desc,g_sfdd_d[l_ac].sfdd009,g_sfdd_d[l_ac].sfdd011,g_sfdd_d[l_ac].sfdd012,
       g_sfdd_d[l_ac].sfdd_ooff013

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF

      #add 150109
      #发料料号
      CALL s_desc_get_item_desc(g_sfdd_d[l_ac].sfdd001) 
         RETURNING g_sfdd_d[l_ac].sfdd001_desc,g_sfdd_d[l_ac].sfdd001_desc2
      #显示产品特征说明
      IF NOT cl_null(g_sfdd_d[l_ac].sfdd013) THEN
         CALL s_feature_description(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013)
            RETURNING l_success,g_sfdd_d[l_ac].sfdd013_desc
         IF NOT l_success THEN
            LET g_sfdd_d[l_ac].sfdd013_desc = ''
         END IF
      END IF
      
      #库位
      IF NOT cl_null(g_sfdd_d[l_ac].sfdd003) THEN
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_site
         LET g_ref_fields[2] = g_sfdd_d[l_ac].sfdd003
         CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
         LET g_sfdd_d[l_ac].sfdd003_desc = '', g_rtn_fields[1] , ''
      END IF

      #储位
      IF NOT cl_null(g_sfdd_d[l_ac].sfdd004) THEN
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_site
         LET g_ref_fields[2] = g_sfdd_d[l_ac].sfdd003
         LET g_ref_fields[3] = g_sfdd_d[l_ac].sfdd004
         CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inabsite=? AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
         LET g_sfdd_d[l_ac].sfdd004_desc = '', g_rtn_fields[1] , ''
      END IF

      #单位
      CALL s_desc_get_unit_desc(g_sfdd_d[l_ac].sfdd006) RETURNING g_sfdd_d[l_ac].sfdd006_desc

      #参考单位
      IF NOT cl_null(g_sfdd_d[l_ac].sfdd008) THEN
         CALL s_desc_get_unit_desc(g_sfdd_d[l_ac].sfdd008) RETURNING g_sfdd_d[l_ac].sfdd008_desc
      END IF
      
      CALL asft310_show_sfdd_ooff013(l_ac)
      #add 150109 end
      
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = FALSE
         CALL cl_err()
         EXIT FOREACH
      END IF
   END FOREACH
   #CALL g_sfdd_d.deleteElement(g_sfdd_d.getLength())
   CALL g_sfdd_d.deleteElement(l_ac)
   FREE b_fill_sfdd_p
END FUNCTION]]>
  </point>
  <point name="function.asft310_upd_key" order="62" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#若单头key栏位有变更，单身的key一起变更
PRIVATE FUNCTION asft310_upd_key()
DEFINE r_success LIKE type_t.num5
DEFINE l_success LIKE type_t.num5

   LET r_success = FALSE
   
   #更新單身key值
   UPDATE sfdb_t SET sfdbdocno = g_sfda_m.sfdadocno
    WHERE sfdbent = g_enterprise AND sfdbdocno = g_sfdadocno_t
   CASE
      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "std-00009"
         LET g_errparam.extend = "sfdb_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN r_success
      WHEN SQLCA.sqlcode #其他錯誤
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "sfdb_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN r_success
   END CASE

   #更新單身key值
   UPDATE sfdc_t
      SET sfdcdocno = g_sfda_m.sfdadocno
    WHERE sfdcent = g_enterprise AND sfdcdocno = g_sfdadocno_t
   CASE
      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "std-00009"
         LET g_errparam.extend = "sfdc_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN r_success
      WHEN SQLCA.sqlcode #其他錯誤
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "sfdc_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN r_success
   END CASE

   #更新單身key值
   UPDATE sfde_t
      SET sfdedocno = g_sfda_m.sfdadocno
    WHERE sfdeent = g_enterprise AND sfdedocno = g_sfdadocno_t
   CASE
      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "std-00009"
         LET g_errparam.extend = "sfde_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN r_success
      WHEN SQLCA.sqlcode #其他錯誤
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "sfde_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN r_success
   END CASE


   #更新單身key值
   UPDATE inao_t
      SET inaodocno = g_sfda_m.sfdadocno
    WHERE inaoent = g_enterprise AND inaosite = g_site AND
          inaodocno = g_sfdadocno_t
   CASE
      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "std-00009"
         LET g_errparam.extend = "inao_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN r_success
      WHEN SQLCA.sqlcode #其他錯誤
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "inao_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN r_success
   END CASE

   #更新單身key值
   UPDATE sfdf_t
      SET sfdfdocno = g_sfda_m.sfdadocno
    WHERE sfdfent = g_enterprise AND sfdfdocno = g_sfdadocno_t
   CASE
      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "std-00009"
         LET g_errparam.extend = "sfdf_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN r_success
      WHEN SQLCA.sqlcode #其他錯誤
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "sfdf_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN r_success
   END CASE

   #更新單身key值
   UPDATE sfdd_t
      SET sfdddocno = g_sfda_m.sfdadocno
    WHERE sfddent = g_enterprise AND sfdddocno = g_sfdadocno_t
   CASE
      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "std-00009"
         LET g_errparam.extend = "sfdd_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN r_success
      WHEN SQLCA.sqlcode #其他錯誤
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "sfdd_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN r_success
   END CASE

   #add 141222
   #更新ooff之key
   CALL asft310_update_ooff_key("a") RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success
   END IF
   #add 141222 end
   
   LET r_success = TRUE
   RETURN r_success
   
END FUNCTION]]>
  </point>
  <point name="function.asft310_del_sfdb_chk" order="63" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#套数单身中某一笔可删除否检查
#在单身编辑状态
PRIVATE FUNCTION asft310_del_sfdb_chk()
DEFINE r_success       LIKE type_t.num5
DEFINE l_sfdb006       LIKE sfdb_t.sfdb006
DEFINE l_sfdc007       LIKE sfdc_t.sfdc007
DEFINE l_sfdc007_sum   LIKE sfdc_t.sfdc007  #已申请的数量
DEFINE l_sql           STRING
DEFINE l_sets          LIKE sfdc_t.sfdc007  #套数
DEFINE l_max_sets      LIKE sfdc_t.sfdc007  #最大套数

   LET r_success = TRUE

   #备注：如果工单备料同工单+部位+作业编号+作业序的发料单位不同，又套数单身中维护了同工单不同的部位+作业+作业序，这个无法空管住的
   #因为不同单位的数量可多可少,无法确定套数单身是针对那一笔工单备料，也就无法对应到单位。
   #所以这里只空管这个工单+部位+作业+作业序已经有申请发料量了，就不允许删除
   
   #计算已申请的数量
   SELECT SUM(sfdc007) INTO l_sfdc007_sum FROM sfdc_t,sfba_t
    WHERE sfdcent = sfbaent
      AND sfdc001 = sfbadocno
      AND sfdc002 = sfbaseq
      AND sfdc003 = sfbaseq1
      AND sfdcent = g_enterprise
      AND sfdcdocno=g_sfda_m.sfdadocno       #发料单单号
      AND sfbadocno= g_sfdb_d_t.sfdb001  #工单
      AND sfba002  = g_sfdb_d_t.sfdb003  #部位
      AND sfba003  = g_sfdb_d_t.sfdb004  #作业编号
      AND sfba004  = g_sfdb_d_t.sfdb005  #作业序
   IF cl_null(l_sfdc007_sum) THEN LET l_sfdc007_sum = 0 END IF

   #删除本笔单身后的預計發料套數
   SELECT SUM(sfdb006) INTO l_sfdb006 FROM sfdb_t
    WHERE sfdbent  = g_enterprise
      AND sfdbdocno= g_sfda_m.sfdadocno       #发料单单号
      AND sfdb001  = g_sfdb_d_t.sfdb001  #工单单号
      AND sfdb003  = g_sfdb_d_t.sfdb003  #部位
      AND sfdb004  = g_sfdb_d_t.sfdb004  #作业
      AND sfdb005  = g_sfdb_d_t.sfdb005  #作业序
      #AND sfdb002  = #run card 
   IF cl_null(l_sfdb006) THEN LET l_sfdb006=0 END IF
   LET l_sfdb006 = l_sfdb006 - g_sfdb_d_t.sfdb006
   IF l_sfdc007_sum > 0 AND l_sfdb006 = 0 THEN
      #已存在需求申請資料，不可刪除，請刪除需求申請資料后再重新操作
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00115'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF

   RETURN r_success
{
   #根据sfdc去判断所删除工单的各个项次，各项序中其最大的套数，是否超过套数单身的套数
   #定义：抓出工单项次中，有项序的数量
   LET l_sql = " SELECT sfba022,SUM(sfdc007) ",  #替代率，申请数量
               "   FROM sfdc_t,sfba_t ",
               "  WHERE sfdcent = sfbaent ",
               "    AND sfdc001 = sfbadocno ",
               "    AND sfdc002 = sfbaseq ",
               "    AND sfdc003 = sfbaseq1 ",
               "    AND sfdcent = ",g_enterprise,
               "    AND sfdcdocno='",g_sfda_m.sfdadocno,"' ",      #发料单单号
               "    AND sfdc001  ='",g_sfdb_d[l_ac].sfdb001,"' ",  #工单
               "    AND sfba002  ='",g_sfdb_d[l_ac].sfdb003,"' ",  #部位
               "    AND sfba003  ='",g_sfdb_d[l_ac].sfdb004,"' ",  #作业编号
               "    AND sfba004  ='",g_sfdb_d[l_ac].sfdb005,"' ",  #作业序
               "    AND sfdc002  = ? ",    #工单项次
               "    AND sfdc003  != 0 ",   #工单项序
               " GROUP BY sfba022 "
   PREPARE s_asft310_del_sfdb_chk_p2 FROM l_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 's_asft310_del_sfdb_chk_p2'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN r_success
   END IF
   DECLARE s_asft310_del_sfdb_chk_cs2 CURSOR FOR s_asft310_del_sfdb_chk_p2
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 's_asft310_del_sfdb_chk_cs2'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN r_success
   END IF
   
   #工单项次、标准QPA分子、标准QPA分母
   #发料单位、申请数量
   LET l_sql = " SELECT sfdc002,sfba010,sfba011, ", 
               "        sfdc006,SUM(sfdc007) ",
               "   FROM sfdc_t,sfba_t ",
               "  WHERE sfdcent = sfbaent ",
               "    AND sfdc001 = sfbadocno ",
               "    AND sfdc002 = sfbaseq ",
               "    AND sfdc003 = sfbaseq1 ",
               "    AND sfdcent = ",g_enterprise,
               "    AND sfdcdocno='",g_sfda_m.sfdadocno,"' ",      #发料单单号
               "    AND sfdc001  ='",g_sfdb_d[l_ac].sfdb001,"' ",  #工单
               "    AND sfba002  ='",g_sfdb_d[l_ac].sfdb003,"' ",  #部位
               "    AND sfba003  ='",g_sfdb_d[l_ac].sfdb004,"' ",  #作业编号
               "    AND sfba004  ='",g_sfdb_d[l_ac].sfdb005,"' ",  #作业序
               "    AND sfdc003  = 0 ",   #工单项序
               " GROUP BY sfdc002,sfba010,sfba011, ", 
               "        sfdc006 "
   PREPARE s_asft310_del_sfdb_chk_p1 FROM l_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 's_asft310_del_sfdb_chk_p1'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN r_success
   END IF
   DECLARE s_asft310_del_sfdb_chk_cs1 CURSOR FOR s_asft310_del_sfdb_chk_p1
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 's_asft310_del_sfdb_chk_cs1'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN r_success
   END IF
   LET l_max_sets = 0
   LET l_tot_sfdc007 = 0
   FOREACH s_asft310_del_sfdb_chk_cs1 INTO l_sfdc002,l_sfba010,l_sfba011,
                l_sfdc006,l_sfdc007
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 's_asft310_del_sfdb_chk_cs1'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF

      LET l_tot_sfdc007 = l_tot_sfdc007 + l_sfdc007
      
      #抓出工单项次中，有项序的数量（取替代）
      FOREACH s_asft310_del_sfdb_chk_cs2 USING l_tot.sfbaseq INTO l_sfba022,l_sfdc007
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 's_asft310_del_sfdb_chk_cs1'
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET r_success = FALSE
            RETURN r_success
         END IF
         
         LET l_tot_sfdc007 = l_tot_sfdc007 + l_sfdc007 * l_sfba022
      
      END FOREACH
   
      
      #单项足套数=(SUM(已发数量*替代率) / 项序0的标准QPA分子 * 项序0的标准QPA分母 WHERE 相同工单+项次)
      LET l_sets = l_tot_sfdc007 / l_sfba010 * l_sfba011 

      IF l_max_sets < l_sets THEN
         LET l_max_sets = l_sets
      END IF

      LET l_tot_sfdc007 = 0
   END FOREACH

   IF l_sfdb006 < l_max_sets THEN
      #删除后已存在需求申请数量大于套数设定可申请数量，不可删除，请修改需求申请数据后再重新操作
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00116'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success
   END IF
   

}


   #   #计算删除此笔单身后可申请的数量
   #   CASE
   #     WHEN g_sfda_m.sfda002='11' OR g_sfda_m.sfda002='21'  #11.成套發料 21.成套退料 
   #                    #计算此本发退料单中，删除此笔后的工单+项次+项序+料的可产生的发料数量（套数的数量）与sfdc中已存储的比较
   #
   #
   #        IF l_sfdb006 = l_sfaa012 - l_sfaa049 THEN  #預計發料套數=生產數量-已發套數,即要把剩余
   #           #應發總數量-已發數量-本发料单据其他项次的发料数量
   #           LET l_sfdc007 = g_sfdc_d[l_ac].sfba013 - g_sfdc_d[l_ac].sfba016 - l_sfdc007
   #        ELSE
   #           #預計發料套數*標準QPA分子/標準QPA分母-本发料单据其他项次的发料数量
   #           LET l_sfdc007 = l_sfdb006 * l_sfba010 / l_sfba011 - l_sfdc007
   #        END IF
   #                    #如果小于则不能删除
   #     WHEN g_sfda_m.sfda002='13'   #13.欠料補料的单据  发料套数是不允许输入的
   #                    #计算此本发退料单中，删除此笔后的工单+项次+项序+料的可产生的发料数量（补料的数量）与sfdc中已存储的比较
   #                    #如果小于则不能删除
   #        IF l_sfaa012 = l_sfaa049 THEN   #生產數量=已發套數
   #           #應發總數量-已發數量-本发料单据其他项次的发料数量
   #           LET r_sfdc007 = g_sfdc_d[l_ac].sfba013 - g_sfdc_d[l_ac].sfba016 - l_sfdc007
   #        ELSE
   #           #(已發料套數*標準QPA分子/標準QPA分母)-已發數量-本发料单据其他项次的发料数量
   #           LET r_sfdc007 = l_sfaa049 * l_sfba010 / l_sfba011 - g_sfdc_d[l_ac].sfba016 - l_sfdc007
   #        END IF
   #     END CASE
   #
   #END FOREACH

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asft310_chk_ware_range" order="64" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#检查库位、储位、批号的范围(sfdf)，是否在需求指定发料库位、储位、批号允许的数量内(sfdc)
#sfdf编辑状态时调用
#仓储批检查
PRIVATE FUNCTION asft310_chk_ware_range(p_column)
DEFINE p_column     LIKE type_t.chr10  #检查类型
DEFINE r_success    LIKE type_t.num5
DEFINE l_cnt        LIKE type_t.num5
DEFINE l_sql        STRING

   LET r_success = TRUE

   CASE p_column
      #add 141211
      WHEN 'sfdf003'  #库位
           IF cl_null(g_sfdf_d[l_ac].sfdf003) THEN
              ##若储位是空，检查sfdf对应的sfde对应的多笔sfdc中有储位为空的资料吗？
              #IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
              #   LET l_sql = " SELECT COUNT(sfdcseq) ",
              #               "   FROM sfdc_t ",
              #               "  WHERE sfdcent   = ",g_enterprise,
              #               "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
              #               "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
              #               "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
              #               "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
              #               "    AND sfdc012   = ' ' "    #庫位
              #   IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
              #      LET l_sql = l_sql CLIPPED,
              #            "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
              #            "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
              #            "         where sfbaent  = ",g_enterprise,
              #            "           and sfbasite = '",g_site,"') ",
              #            "       or (sfdc001,sfdc002,sfdc003) in ",
              #            "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
              #            "         where sfbaent  = ",g_enterprise,
              #            "           and sfbasite = '",g_site,"' ",
              #            "           and sfba028 IS NULL)) "
              #   END IF
              #ELSE
              #   LET l_sql = " SELECT COUNT(sfdcseq) ",
              #               "   FROM sfdc_t,sfba_t ",
              #               "  WHERE sfdcent   = sfbaent ",
              #               "    AND sfdc001   = sfbadocno ",
              #               "    AND sfdc002   = sfbaseq ",
              #               "    AND sfdc003   = sfbaseq1 ",
              #               "    AND sfdcent   = ",g_enterprise,
              #               "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
              #               "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
              #               "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
              #               "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
              #               "    AND sfdc012   = ' ' "    #庫位
              #   IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
              #      LET l_sql = l_sql CLIPPED," AND sfba028 = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
              #   END IF
              #END IF
              #IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
              #   LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
              #ELSE
              #   LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
              #END IF
              #DECLARE asft310_chk_ware_range_c1 SCROLL CURSOR FROM l_sql
              #OPEN asft310_chk_ware_range_c1
              #FETCH asft310_chk_ware_range_c1 INTO l_cnt
              #CLOSE asft310_chk_ware_range_c1
              #IF l_cnt = 0 THEN
              #   #如果没有报错：储位、批号不在需求指定储位范围内，请输入需求申请指定储位、批号
              #   INITIALIZE g_errparam TO NULL
              #   LET g_errparam.code = 'asf-00131'
              #   LET g_errparam.extend = ''
              #   LET g_errparam.popup = TRUE
              #   CALL cl_err()
              #   LET r_success = FALSE
              #   RETURN r_success
              #END IF
           ELSE
              #若储位非空，检查sfdf对应的sfde对应的多笔sfdc中有储位为空的资料或储位为输入的资料吗？
              IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
                 LET l_sql = " SELECT COUNT(sfdcseq) ",
                             "   FROM sfdc_t ",
                             "  WHERE sfdcent   = ",g_enterprise,
                             "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
                             "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
                             "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
                             "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
                             "    AND (sfdc012  = '",g_sfdf_d[l_ac].sfdf003,"' OR sfdc012 = ' ') "    #庫位
                 IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                    LET l_sql = l_sql CLIPPED,
                        "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                        "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                        "         where sfbaent  = ",g_enterprise,
                        "           and sfbasite = '",g_site,"') ",
                        "       or (sfdc001,sfdc002,sfdc003) in ",
                        "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                        "         where sfbaent  = ",g_enterprise,
                        "           and sfbasite = '",g_site,"' ",
                        "           and sfba028 IS NULL)) "
                 END IF
              ELSE
                 LET l_sql = " SELECT COUNT(sfdcseq) ",
                             "   FROM sfdc_t,sfba_t ",
                             "  WHERE sfdcent   = sfbaent ",
                             "    AND sfdc001   = sfbadocno ",
                             "    AND sfdc002   = sfbaseq ",
                             "    AND sfdc003   = sfbaseq1 ",
                             "    AND sfdcent   = ",g_enterprise,
                             "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
                             "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
                             "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
                             "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
                             "    AND (sfdc012  = '",g_sfdf_d[l_ac].sfdf003,"' OR sfdc012 = ' ') "    #庫位
                 IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                    LET l_sql = l_sql CLIPPED," AND sfba028 = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
                 END IF
              END IF
              IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
                 LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
              ELSE
                 LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
              END IF
              DECLARE asft310_chk_ware_range_c01 SCROLL CURSOR FROM l_sql
              OPEN asft310_chk_ware_range_c01
              FETCH asft310_chk_ware_range_c01 INTO l_cnt
              CLOSE asft310_chk_ware_range_c01
              IF l_cnt = 0 THEN
                 #如果没有报错：库位、储位、批号不在需求指定储位范围内，请输入需求申请指定库位、储位、批号
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = 'asf-00131'
                 LET g_errparam.extend = ''
                 LET g_errparam.popup = TRUE
                 CALL cl_err()
                 LET r_success = FALSE
                 RETURN r_success
              END IF
           END IF
      #add 141211 end
      WHEN 'sfdf004'  #储位
           IF cl_null(g_sfdf_d[l_ac].sfdf004) THEN
              #若储位是空，检查sfdf对应的sfde对应的多笔sfdc中有储位为空的资料吗？
              IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
                 LET l_sql = " SELECT COUNT(sfdcseq) ",
                             "   FROM sfdc_t ",
                             "  WHERE sfdcent   = ",g_enterprise,
                             "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
                             "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
                             "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
                             "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
                             #"    AND sfdc012   = '",g_sfdf_d[l_ac].sfdf003,"' ",    #庫位
                             "    AND (sfdc012  = '",g_sfdf_d[l_ac].sfdf003,"' OR sfdc012 = ' ') ",   #庫位#mod 141211
                             "    AND sfdc013   = ' ' "  #儲位
                 IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                    LET l_sql = l_sql CLIPPED,
                          "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                          "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                          "         where sfbaent  = ",g_enterprise,
                          "           and sfbasite = '",g_site,"') ",
                          "       or (sfdc001,sfdc002,sfdc003) in ",
                          "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                          "         where sfbaent  = ",g_enterprise,
                          "           and sfbasite = '",g_site,"' ",
                          "           and sfba028 IS NULL)) "
                 END IF
              ELSE
                 LET l_sql = " SELECT COUNT(sfdcseq) ",
                             "   FROM sfdc_t,sfba_t ",
                             "  WHERE sfdcent   = sfbaent ",
                             "    AND sfdc001   = sfbadocno ",
                             "    AND sfdc002   = sfbaseq ",
                             "    AND sfdc003   = sfbaseq1 ",
                             "    AND sfdcent   = ",g_enterprise,
                             "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
                             "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
                             "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
                             "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
                             #"    AND sfdc012   = '",g_sfdf_d[l_ac].sfdf003,"' ",    #庫位
                             "    AND (sfdc012  = '",g_sfdf_d[l_ac].sfdf003,"' OR sfdc012 = ' ') ",   #庫位 #mod 141211
                             "    AND sfdc013   = ' ' "  #儲位
                 IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                    LET l_sql = l_sql CLIPPED," AND sfba028 = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
                 END IF
              END IF
              IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
                 LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
              ELSE
                 LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
              END IF
              DECLARE asft310_chk_ware_range_c1 SCROLL CURSOR FROM l_sql
              OPEN asft310_chk_ware_range_c1
              FETCH asft310_chk_ware_range_c1 INTO l_cnt
              CLOSE asft310_chk_ware_range_c1
              IF l_cnt = 0 THEN
                 #如果没有报错：储位、批号不在需求指定储位范围内，请输入需求申请指定储位、批号
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = 'asf-00131'
                 LET g_errparam.extend = ''
                 LET g_errparam.popup = TRUE
                 CALL cl_err()
                 LET r_success = FALSE
                 RETURN r_success
              END IF
           ELSE
              #若储位非空，检查sfdf对应的sfde对应的多笔sfdc中有储位为空的资料或储位为输入的资料吗？
              IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
                 LET l_sql = " SELECT COUNT(sfdcseq) ",
                             "   FROM sfdc_t ",
                             "  WHERE sfdcent   = ",g_enterprise,
                             "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
                             "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
                             "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
                             "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
                             #"    AND sfdc012   = '",g_sfdf_d[l_ac].sfdf003,"' ",    #庫位
                             "    AND (sfdc012  = '",g_sfdf_d[l_ac].sfdf003,"' OR sfdc012 = ' ') ",   #庫位#mod 141211
                             "    AND (sfdc013  = '",g_sfdf_d[l_ac].sfdf004,"' OR sfdc013 = ' ') "  #儲位
                 IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                    LET l_sql = l_sql CLIPPED,
                        "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                        "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                        "         where sfbaent  = ",g_enterprise,
                        "           and sfbasite = '",g_site,"') ",
                        "       or (sfdc001,sfdc002,sfdc003) in ",
                        "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                        "         where sfbaent  = ",g_enterprise,
                        "           and sfbasite = '",g_site,"' ",
                        "           and sfba028 IS NULL)) "
                 END IF
              ELSE
                 LET l_sql = " SELECT COUNT(sfdcseq) ",
                             "   FROM sfdc_t,sfba_t ",
                             "  WHERE sfdcent   = sfbaent ",
                             "    AND sfdc001   = sfbadocno ",
                             "    AND sfdc002   = sfbaseq ",
                             "    AND sfdc003   = sfbaseq1 ",
                             "    AND sfdcent   = ",g_enterprise,
                             "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
                             "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
                             "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
                             "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
                             #"    AND sfdc012   = '",g_sfdf_d[l_ac].sfdf003,"' ",    #庫位
                             "    AND (sfdc012  = '",g_sfdf_d[l_ac].sfdf003,"' OR sfdc012 = ' ') ",   #庫位#mod 141211
                             "    AND (sfdc013  = '",g_sfdf_d[l_ac].sfdf004,"' OR sfdc013 = ' ') "  #儲位
                 IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                    LET l_sql = l_sql CLIPPED," AND sfba028 = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
                 END IF
              END IF
              IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
                 LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
              ELSE
                 LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
              END IF
              DECLARE asft310_chk_ware_range_c11 SCROLL CURSOR FROM l_sql
              OPEN asft310_chk_ware_range_c11
              FETCH asft310_chk_ware_range_c11 INTO l_cnt
              CLOSE asft310_chk_ware_range_c11
              IF l_cnt = 0 THEN
                 #如果没有报错：储位、批号不在需求指定储位范围内，请输入需求申请指定储位、批号
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = 'asf-00131'
                 LET g_errparam.extend = ''
                 LET g_errparam.popup = TRUE
                 CALL cl_err()
                 LET r_success = FALSE
                 RETURN r_success
              END IF
           END IF
      WHEN 'sfdf005'  #批号
           IF cl_null(g_sfdf_d[l_ac].sfdf005) THEN
              #若批号是空，检查sfdf对应的sfde对应的多笔sfdc中有批号为空的资料吗？
              IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
                 LET l_sql = " SELECT COUNT(sfdcseq) ",
                             "   FROM sfdc_t ",
                             "  WHERE sfdcent   = ",g_enterprise,
                             "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
                             "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
                             "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
                             "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
                             #"    AND sfdc012   = '",g_sfdf_d[l_ac].sfdf003,"' ",    #庫位
                             "    AND (sfdc012  = '",g_sfdf_d[l_ac].sfdf003,"' OR sfdc012 = ' ') ",   #庫位#mod 141211
                             "    AND sfdc014   = ' ' "    #批号
                 IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                    LET l_sql = l_sql CLIPPED,
                        "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                        "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                        "         where sfbaent  = ",g_enterprise,
                        "           and sfbasite = '",g_site,"') ",
                        "       or (sfdc001,sfdc002,sfdc003) in ",
                        "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                        "         where sfbaent  = ",g_enterprise,
                        "           and sfbasite = '",g_site,"' ",
                        "           and sfba028 IS NULL)) "
                 END IF
              ELSE
                 LET l_sql = " SELECT COUNT(sfdcseq) ",
                             "   FROM sfdc_t,sfba_t ",
                             "  WHERE sfdcent   = sfbaent ",
                             "    AND sfdc001   = sfbadocno ",
                             "    AND sfdc002   = sfbaseq ",
                             "    AND sfdc003   = sfbaseq1 ",
                             "    AND sfdcent   = ",g_enterprise,
                             "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
                             "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
                             "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
                             "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
                             #"    AND sfdc012   = '",g_sfdf_d[l_ac].sfdf003,"' ",    #庫位
                             "    AND (sfdc012  = '",g_sfdf_d[l_ac].sfdf003,"' OR sfdc012 = ' ') ",   #庫位#mod 141211
                             "    AND sfdc014   = ' ' "    #批号
                 IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                    LET l_sql = l_sql CLIPPED," AND sfba028 = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
                 END IF
              END IF
              IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
                 LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
              ELSE
                 LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
              END IF
              DECLARE asft310_chk_ware_range_c2 SCROLL CURSOR FROM l_sql
              OPEN asft310_chk_ware_range_c2
              FETCH asft310_chk_ware_range_c2 INTO l_cnt
              CLOSE asft310_chk_ware_range_c2
              IF l_cnt = 0 THEN
                 #如果没有报错：储位、批号不在需求指定储位范围内，请输入需求申请指定储位、批号
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = 'asf-00131'
                 LET g_errparam.extend = ''
                 LET g_errparam.popup = TRUE
                 CALL cl_err()
                 LET r_success = FALSE
                 RETURN r_success
              END IF
           ELSE
              #若批号非空，检查sfdf对应的sfde对应的多笔sfdc中有批号为空的资料或批号为输入的资料吗？
              IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
                 LET l_sql = " SELECT COUNT(sfdcseq) ",
                             "   FROM sfdc_t ",
                             "  WHERE sfdcent   = ",g_enterprise,
                             "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
                             "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
                             "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
                             "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
                             #"    AND sfdc012   = '",g_sfdf_d[l_ac].sfdf003,"' ",    #庫位
                             "    AND (sfdc012  = '",g_sfdf_d[l_ac].sfdf003,"' OR sfdc012 = ' ') ",   #庫位#mod 141211
                             "    AND (sfdc014  = '",g_sfdf_d[l_ac].sfdf005,"' OR sfdc014 = ' ') "  #批号
                 IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                    LET l_sql = l_sql CLIPPED,
                          "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                          "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                          "         where sfbaent  = ",g_enterprise,
                          "           and sfbasite = '",g_site,"') ",
                          "       or (sfdc001,sfdc002,sfdc003) in ",
                          "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                          "         where sfbaent  = ",g_enterprise,
                          "           and sfbasite = '",g_site,"' ",
                          "           and sfba028 IS NULL)) "
                 END IF
              ELSE
                 LET l_sql = " SELECT COUNT(sfdcseq) ",
                             "   FROM sfdc_t,sfba_t ",
                             "  WHERE sfdcent   = sfbaent ",
                             "    AND sfdc001   = sfbadocno ",
                             "    AND sfdc002   = sfbaseq ",
                             "    AND sfdc003   = sfbaseq1 ",
                             "    AND sfdcent   = ",g_enterprise,
                             "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
                             "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
                             "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
                             "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
                             #"    AND sfdc012   = '",g_sfdf_d[l_ac].sfdf003,"' ",    #庫位
                             "    AND (sfdc012  = '",g_sfdf_d[l_ac].sfdf003,"' OR sfdc012 = ' ') ",  #庫位#mod 141211
                             "    AND (sfdc014  = '",g_sfdf_d[l_ac].sfdf005,"' OR sfdc014 = ' ') "  #批号
                 IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                    LET l_sql = l_sql CLIPPED," AND sfba028 = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
                 END IF
              END IF
              IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
                 LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
              ELSE
                 LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
              END IF
              DECLARE asft310_chk_ware_range_c21 SCROLL CURSOR FROM l_sql
              OPEN asft310_chk_ware_range_c21
              FETCH asft310_chk_ware_range_c21 INTO l_cnt
              CLOSE asft310_chk_ware_range_c21
              IF l_cnt = 0 THEN
                 #如果没有报错：储位、批号不在需求指定储位范围内，请输入需求申请指定储位、批号
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = 'asf-00131'
                 LET g_errparam.extend = ''
                 LET g_errparam.popup = TRUE
                 CALL cl_err()
                 LET r_success = FALSE
                 RETURN r_success
              END IF
           END IF
      WHEN 'ALL'  #单笔输入完后，储位+批号
           #如果储位和批号都是空，检查sfdf对应的sfde对应的多笔sfdc中是否有1.储位+批号都是空的资料
           IF cl_null(g_sfdf_d[l_ac].sfdf004) AND cl_null(g_sfdf_d[l_ac].sfdf005) THEN
              IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
                 LET l_sql = " SELECT COUNT(sfdcseq) ",
                             "   FROM sfdc_t ",
                             "  WHERE sfdcent   = ",g_enterprise,
                             "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
                             "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
                             "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
                             "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
                             #"    AND sfdc012   = '",g_sfdf_d[l_ac].sfdf003,"' ",    #庫位
                             "    AND (sfdc012  = '",g_sfdf_d[l_ac].sfdf003,"' OR sfdc012 = ' ') ",   #庫位#mod 141211
                             "    AND sfdc013   = ' ' ",   #储位
                             "    AND sfdc014   = ' ' "    #批号
                 IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                    LET l_sql = l_sql CLIPPED,
                         "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                         "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                         "         where sfbaent  = ",g_enterprise,
                         "           and sfbasite = '",g_site,"') ",
                         "       or (sfdc001,sfdc002,sfdc003) in ",
                         "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                         "         where sfbaent  = ",g_enterprise,
                         "           and sfbasite = '",g_site,"' ",
                         "           and sfba028 IS NULL)) "
                 END IF
              ELSE
                 LET l_sql = " SELECT COUNT(sfdcseq) ",
                             "   FROM sfdc_t,sfba_t ",
                             "  WHERE sfdcent   = sfbaent ",
                             "    AND sfdc001   = sfbadocno ",
                             "    AND sfdc002   = sfbaseq ",
                             "    AND sfdc003   = sfbaseq1 ",
                             "    AND sfdcent   = ",g_enterprise,
                             "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
                             "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
                             "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
                             "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
                             #"    AND sfdc012   = '",g_sfdf_d[l_ac].sfdf003,"' ",    #庫位
                             "    AND (sfdc012  = '",g_sfdf_d[l_ac].sfdf003,"' OR sfdc012 = ' ') ",   #庫位#mod 141211
                             "    AND sfdc013   = ' ' ",   #储位
                             "    AND sfdc014   = ' ' "    #批号
                 IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                    LET l_sql = l_sql CLIPPED," AND sfba028 = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
                 END IF
              END IF
              IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
                 LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
              ELSE
                 LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
              END IF
              DECLARE asft310_chk_ware_range_c3 SCROLL CURSOR FROM l_sql
              OPEN asft310_chk_ware_range_c3
              FETCH asft310_chk_ware_range_c3 INTO l_cnt
              CLOSE asft310_chk_ware_range_c3
              IF l_cnt = 0 THEN
                 #如果没有报错：储位、批号不在需求指定储位范围内，请输入需求申请指定储位、批号
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = 'asf-00131'
                 LET g_errparam.extend = ''
                 LET g_errparam.popup = TRUE
                 CALL cl_err()
                 LET r_success = FALSE
                 RETURN r_success
              END IF
           END IF
           #如果储位和批号都非空，检查sfdf对应的sfde对应的多笔sfdc中是否有1.储位+批号都是空的资料   
           #                                                          2.储位为输入储位+批号是空的资料 
           #                                                          3.储位是空+批号为输入批号的资料 
           #                                                          4.储位+批号都为输入的资料 
           IF NOT cl_null(g_sfdf_d[l_ac].sfdf004) AND NOT cl_null(g_sfdf_d[l_ac].sfdf005) THEN
              IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
                 LET l_sql = " SELECT COUNT(sfdcseq) ",
                             "   FROM sfdc_t ",
                             "  WHERE sfdcent   = ",g_enterprise,
                             "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
                             "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
                             "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
                             "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
                             #"    AND sfdc012   = '",g_sfdf_d[l_ac].sfdf003,"' ",    #庫位
                             "    AND (sfdc012  = '",g_sfdf_d[l_ac].sfdf003,"' OR sfdc012 = ' ') ",   #庫位#mod 141211
                             "    AND (sfdc013  = '",g_sfdf_d[l_ac].sfdf004,"' OR sfdc013 = ' ') ",   #储位
                             "    AND (sfdc014  = '",g_sfdf_d[l_ac].sfdf005,"' OR sfdc014 = ' ') "    #批号
                 IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                    LET l_sql = l_sql CLIPPED,
                        "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                        "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                        "         where sfbaent  = ",g_enterprise,
                        "           and sfbasite = '",g_site,"') ",
                        "       or (sfdc001,sfdc002,sfdc003) in ",
                        "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                        "         where sfbaent  = ",g_enterprise,
                        "           and sfbasite = '",g_site,"' ",
                        "           and sfba028 IS NULL)) "
                 END IF
              ELSE
                 LET l_sql = " SELECT COUNT(sfdcseq) ",
                             "   FROM sfdc_t,sfba_t ",
                             "  WHERE sfdcent   = sfbaent ",
                             "    AND sfdc001   = sfbadocno ",
                             "    AND sfdc002   = sfbaseq ",
                             "    AND sfdc003   = sfbaseq1 ",
                             "    AND sfdcent   = ",g_enterprise,
                             "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
                             "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
                             "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
                             "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
                             #"    AND sfdc012   = '",g_sfdf_d[l_ac].sfdf003,"' ",    #庫位
                             "    AND (sfdc012  = '",g_sfdf_d[l_ac].sfdf003,"' OR sfdc012 = ' ') ",   #庫位#mod 141211
                             "    AND (sfdc013  = '",g_sfdf_d[l_ac].sfdf004,"' OR sfdc013 = ' ') ",   #储位
                             "    AND (sfdc014  = '",g_sfdf_d[l_ac].sfdf005,"' OR sfdc014 = ' ') "    #批号
                 IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                    LET l_sql = l_sql CLIPPED," AND sfba028 = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
                 END IF
              END IF
              IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
                 LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
              ELSE
                 LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
              END IF
              DECLARE asft310_chk_ware_range_c31 SCROLL CURSOR FROM l_sql
              OPEN asft310_chk_ware_range_c31
              FETCH asft310_chk_ware_range_c31 INTO l_cnt
              CLOSE asft310_chk_ware_range_c31
              IF l_cnt = 0 THEN
                 #如果没有报错：储位、批号不在需求指定储位范围内，请输入需求申请指定储位、批号
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = 'asf-00131'
                 LET g_errparam.extend = ''
                 LET g_errparam.popup = TRUE
                 CALL cl_err()
                 LET r_success = FALSE
                 RETURN r_success
              END IF
           END IF
           #如果储位为空、批号非空，检查sfdf对应的sfde对应的多笔sfdc中是否有1.储位+批号都是空的资料
           #                                                            3.储位是空+批号为输入批号的资料
           IF cl_null(g_sfdf_d[l_ac].sfdf004) AND NOT cl_null(g_sfdf_d[l_ac].sfdf005) THEN
              IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
                 LET l_sql = " SELECT COUNT(sfdcseq) ",
                             "   FROM sfdc_t ",
                             "  WHERE sfdcent   = ",g_enterprise,
                             "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
                             "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
                             "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
                             "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
                             #"    AND sfdc012   = '",g_sfdf_d[l_ac].sfdf003,"' ",    #庫位
                             "    AND (sfdc012  = '",g_sfdf_d[l_ac].sfdf003,"' OR sfdc012 = ' ') ",   #庫位#mod 141211
                             "    AND sfdc013 = ' ' ",   #储位
                             "    AND (sfdc014  = '",g_sfdf_d[l_ac].sfdf005,"' OR sfdc014 = ' ') "    #批号
                 IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                    LET l_sql = l_sql CLIPPED,
                      "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                      "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                      "         where sfbaent  = ",g_enterprise,
                      "           and sfbasite = '",g_site,"') ",
                      "       or (sfdc001,sfdc002,sfdc003) in ",
                      "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                      "         where sfbaent  = ",g_enterprise,
                      "           and sfbasite = '",g_site,"' ",
                      "           and sfba028 IS NULL)) "
                 END IF
              ELSE
                 LET l_sql = " SELECT COUNT(sfdcseq) ",
                             "   FROM sfdc_t,sfba_t ",
                             "  WHERE sfdcent   = sfbaent ",
                             "    AND sfdc001   = sfbadocno ",
                             "    AND sfdc002   = sfbaseq ",
                             "    AND sfdc003   = sfbaseq1 ",
                             "    AND sfdcent   = ",g_enterprise,
                             "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
                             "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
                             "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
                             "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
                             #"    AND sfdc012   = '",g_sfdf_d[l_ac].sfdf003,"' ",    #庫位
                             "    AND (sfdc012  = '",g_sfdf_d[l_ac].sfdf003,"' OR sfdc012 = ' ') ",   #庫位#mod 141211
                             "    AND sfdc013 = ' ' ",   #储位
                             "    AND (sfdc014  = '",g_sfdf_d[l_ac].sfdf005,"' OR sfdc014 = ' ') "    #批号
                 IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                    LET l_sql = l_sql CLIPPED," AND sfba028 = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
                 END IF
              END IF
              IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
                 LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
              ELSE
                 LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
              END IF
              DECLARE asft310_chk_ware_range_c32 SCROLL CURSOR FROM l_sql
              OPEN asft310_chk_ware_range_c32
              FETCH asft310_chk_ware_range_c32 INTO l_cnt
              CLOSE asft310_chk_ware_range_c32
              IF l_cnt = 0 THEN
                 #如果没有报错：储位、批号不在需求指定储位范围内，请输入需求申请指定储位、批号
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = 'asf-00131'
                 LET g_errparam.extend = ''
                 LET g_errparam.popup = TRUE
                 CALL cl_err()
                 LET r_success = FALSE
                 RETURN r_success
              END IF
           END IF
           #如果储位非空、批号为空，检查sfdf对应的sfde对应的多笔sfdc中是否有1.储位+批号都是空的资料
           #                                                            2.储位为输入储位+批号是空的资料
           IF NOT cl_null(g_sfdf_d[l_ac].sfdf004) AND cl_null(g_sfdf_d[l_ac].sfdf005) THEN
              IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
                 LET l_sql = " SELECT COUNT(sfdcseq) ",
                             "   FROM sfdc_t ",
                             "  WHERE sfdcent   = ",g_enterprise,
                             "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
                             "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
                             "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
                             "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
                             #"    AND sfdc012   = '",g_sfdf_d[l_ac].sfdf003,"' ",    #庫位
                             "    AND (sfdc012  = '",g_sfdf_d[l_ac].sfdf003,"' OR sfdc012 = ' ') ",   #庫位#mod 141211
                             "    AND (sfdc013  = '",g_sfdf_d[l_ac].sfdf004,"' OR sfdc013 = ' ') ",  #储位
                             "    AND sfdc014 = ' '  "   #批号
                 IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                    LET l_sql = l_sql CLIPPED,
                        "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                        "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                        "         where sfbaent  = ",g_enterprise,
                        "           and sfbasite = '",g_site,"') ",
                        "       or (sfdc001,sfdc002,sfdc003) in ",
                        "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                        "         where sfbaent  = ",g_enterprise,
                        "           and sfbasite = '",g_site,"' ",
                        "           and sfba028 IS NULL)) "
                 END IF
              ELSE
                 LET l_sql = " SELECT COUNT(sfdcseq) ",
                             "   FROM sfdc_t,sfba_t ",
                             "  WHERE sfdcent   = sfbaent ",
                             "    AND sfdc001   = sfbadocno ",
                             "    AND sfdc002   = sfbaseq ",
                             "    AND sfdc003   = sfbaseq1 ",
                             "    AND sfdcent   = ",g_enterprise,
                             "    AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ", 
                             "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",    #需求料号
                             "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",    #特征
                             "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' ",    #单位
                             #"    AND sfdc012   = '",g_sfdf_d[l_ac].sfdf003,"' ",    #庫位
                             "    AND (sfdc012  = '",g_sfdf_d[l_ac].sfdf003,"' OR sfdc012 = ' ') ",   #庫位#mod 141211
                             "    AND (sfdc013  = '",g_sfdf_d[l_ac].sfdf004,"' OR sfdc013 = ' ') ",  #储位
                             "    AND sfdc014 = ' '  "   #批号
                 IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
                    LET l_sql = l_sql CLIPPED," AND sfba028 = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
                 END IF
              END IF
              IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
                 LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
              ELSE
                 LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
              END IF
              DECLARE asft310_chk_ware_range_c33 SCROLL CURSOR FROM l_sql
              OPEN asft310_chk_ware_range_c33
              FETCH asft310_chk_ware_range_c33 INTO l_cnt
              CLOSE asft310_chk_ware_range_c33
              IF l_cnt = 0 THEN
                 #如果没有报错：储位、批号不在需求指定储位范围内，请输入需求申请指定储位、批号
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = 'asf-00131'
                 LET g_errparam.extend = ''
                 LET g_errparam.popup = TRUE
                 CALL cl_err()
                 LET r_success = FALSE
                 RETURN r_success
              END IF
           END IF
      OTHERWISE
           RETURN r_success
   END CASE

   RETURN r_success

END FUNCTION]]>
  </point>
  <point name="function.asft310_chk_sfdf_unique" order="65" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#检查单身仓储批+库存管理特征+单位+参考单位不重复
#若不控管住，sfdf与sfdc,sfdd,sfde各表的分配关系会比较混乱
#同时相同资料，不应该存在多笔资料，造成资料冗余
PRIVATE FUNCTION asft310_chk_sfdf_unique()
DEFINE r_success    LIKE type_t.num5
DEFINE l_cnt        LIKE type_t.num5

   LET r_success = TRUE

   IF g_sfdf_d[l_ac].sfdf003 IS NULL OR g_sfdf_d[l_ac].sfdf004 IS NULL OR g_sfdf_d[l_ac].sfdf005 IS NULL
   OR g_sfdf_d[l_ac].sfdf010 IS NULL OR cl_null(g_sfdf_d[l_ac].sfdf006) OR cl_null(g_sfdf_d[l_ac].sfdf008) THEN
      RETURN r_success
   END IF

   #只可存在一笔
   IF g_sfdf_d[l_ac].sfdf008 IS NULL THEN
      SELECT COUNT(*) INTO l_cnt FROM sfdf_t
       WHERE sfdfent  = g_enterprise
         AND sfdfdocno= g_sfda_m.sfdadocno   #發退料單號
         AND sfdfseq  = g_sfde_d[g_detail_idx].sfdeseq  #項次
         AND sfdf003  = g_sfdf_d[l_ac].sfdf003 #庫位
         AND sfdf004  = g_sfdf_d[l_ac].sfdf004 #儲位
         AND sfdf005  = g_sfdf_d[l_ac].sfdf005 #批號
         AND sfdf010  = g_sfdf_d[l_ac].sfdf010 #库存管理特征
         AND sfdf006  = g_sfdf_d[l_ac].sfdf006 #单位
         AND sfdf008  IS NULL   #参考单位
   ELSE
      SELECT COUNT(*) INTO l_cnt FROM sfdf_t
       WHERE sfdfent  = g_enterprise
         AND sfdfdocno= g_sfda_m.sfdadocno   #發退料單號
         AND sfdfseq  = g_sfde_d[g_detail_idx].sfdeseq  #項次
         AND sfdf003  = g_sfdf_d[l_ac].sfdf003 #庫位
         AND sfdf004  = g_sfdf_d[l_ac].sfdf004 #儲位
         AND sfdf005  = g_sfdf_d[l_ac].sfdf005 #批號
         AND sfdf010  = g_sfdf_d[l_ac].sfdf010 #库存管理特征
         AND sfdf006  = g_sfdf_d[l_ac].sfdf006 #单位
         AND sfdf008  = g_sfdf_d[l_ac].sfdf008 #参考单位
   END IF
   IF l_cnt > 0 THEN
      #已存在相同数据，不可重复输入；请在已存在的数据中修改
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00123'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asft310_upd_sfde005" order="66" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#回写sfde的实际数量，参考单位实际数量
#sfdf单身编辑状态调用
PRIVATE FUNCTION asft310_upd_sfde005()
DEFINE r_success      LIKE type_t.num5
DEFINE l_sfdf007_sum  LIKE sfdf_t.sfdf007
DEFINE l_sfdf009_sum  LIKE sfdf_t.sfdf009

   LET r_success = TRUE
   
   LET l_sfdf007_sum = 0
   LET l_sfdf009_sum = 0
   SELECT SUM(sfdf007),SUM(sfdf009) INTO l_sfdf007_sum,l_sfdf009_sum
     FROM sfdf_t
    WHERE sfdfent   = g_enterprise
      AND sfdfdocno = g_sfda_m.sfdadocno
      AND sfdfseq   = g_sfde_d[g_detail_idx].sfdeseq
   IF cl_null(l_sfdf007_sum) THEN LET l_sfdf007_sum = 0 END IF
   IF cl_null(l_sfdf009_sum) THEN LET l_sfdf009_sum = 0 END IF
   UPDATE sfde_t SET sfde005 = l_sfdf007_sum,
                     sfde008 = l_sfdf009_sum
    WHERE sfdeent   = g_enterprise
      AND sfdedocno = g_sfda_m.sfdadocno
      AND sfdeseq   = g_sfde_d[g_detail_idx].sfdeseq
   IF SQLCA.sqlcode OR SQLCA.sqlerrd[3]=0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'upd sfde'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asft310_chk_ware_range_qty" order="67" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#检查库位、储位、批号的范围(sfdf)，是否在需求指定发料库位、储位、批号允许的数量内(sfdc)
#sfdf编辑状态时调用
#数量检查
PRIVATE FUNCTION asft310_chk_ware_range_qty(p_column)
DEFINE p_column      LIKE type_t.chr10  #检查类型
DEFINE r_success   LIKE type_t.num5
DEFINE l_sql       STRING
DEFINE l_sql1      STRING
DEFINE l_sfdc012   LIKE sfdc_t.sfdc012  #仓
DEFINE l_sfdc013   LIKE sfdc_t.sfdc013  #储
DEFINE l_sfdc014   LIKE sfdc_t.sfdc014  #批
DEFINE l_sfdc007   LIKE sfdc_t.sfdc007  #数量
DEFINE l_sfdc010   LIKE sfdc_t.sfdc010  #参考单位数量
DEFINE l_sfdc_d    DYNAMIC ARRAY OF RECORD
                   sfdc012    LIKE sfdc_t.sfdc012,  #仓
                   sfdc013    LIKE sfdc_t.sfdc013,  #储
                   sfdc014    LIKE sfdc_t.sfdc014,  #批
                   sfdc007    LIKE sfdc_t.sfdc007,  #数量
                   sfdc010    LIKE sfdc_t.sfdc010   #参考单位数量
                   END RECORD
DEFINE l_cnt_sfdc   LIKE type_t.num5  #笔数
DEFINE l_sfdf      RECORD LIKE sfdf_t.*
DEFINE l_sfdf_d    DYNAMIC ARRAY OF RECORD
                   sfdf003    LIKE sfdf_t.sfdf003,  #仓
                   sfdf004    LIKE sfdf_t.sfdf004,  #储
                   sfdf005    LIKE sfdf_t.sfdf005,  #批
                   sfdf007    LIKE sfdf_t.sfdf007,  #按换算率折算成sfdc的数量
                   sfdf009    LIKE sfdf_t.sfdf009   #按换算率折算成sfdc的参考单位数量
                   END RECORD
DEFINE l_cnt_sfdf   LIKE type_t.num5  #笔数
DEFINE l_cnt_b      LIKE type_t.num5  #笔数
DEFINE l_rate       LIKE sfdf_t.sfdf002     #sfde与sfdf数量的换算率 目标sfde
DEFINE l_idx        LIKE type_t.num5
DEFINE l_idx2       LIKE type_t.num5

   LET r_success = TRUE

   #CASE p_column
   #   WHEN 'sfdf007'  #数量
   #   WHEN 'sfdf009'  #参考单位数量
   #   WHEN 'ALL'      #单笔输入完后，储位、批号数量是否超出需求指定范围内的数量、参考单位数量
   #   OTHERWISE
   #        RETURN r_success
   #END CASE
   #RETURN r_success

   #检查
   IF cl_null(g_sfdf_d[l_ac].sfdf003)  #仓储批 仓库画面控制必须输入
   OR cl_null(g_sfdf_d[l_ac].sfdf006) OR cl_null(g_sfdf_d[l_ac].sfdf007) #单位、数量
   OR cl_null(g_sfdf_d[l_ac].sfdf008) OR cl_null(g_sfdf_d[l_ac].sfdf009) #单位、数量
   OR cl_null(g_sfdf_d[l_ac].sfdf002) THEN #换算率
      RETURN r_success  #不满足检查条件，不需要检查
   END IF

   IF cl_null(g_sfdf_d[l_ac].sfdf004) THEN LET g_sfdf_d[l_ac].sfdf004=' ' END IF
   IF cl_null(g_sfdf_d[l_ac].sfdf005) THEN LET g_sfdf_d[l_ac].sfdf005=' ' END IF
   
   #-------->取出sfdf对应的sfde，所对应所有sfdc
   #库位为必输的排除一部分，提高效能
   IF g_sfde_d[g_detail_idx].sfde009 IS NULL THEN
      LET l_sql = " SELECT sfdc012,sfdc013,sfdc014,SUM(sfdc007),SUM(sfdc010) ",
                  "   FROM sfdc_t ",
                  "  WHERE sfdcent   = ",g_enterprise,
                  "    AND sfdcdocno ='",g_sfda_m.sfdadocno,"' ",
                  "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",  #需求料号
                  "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",  #特征
                  "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "   #单位
                  #"    AND sfdc012   = '",g_sfdf_d[l_ac].sfdf003,"' "     #库位 #mark 141211
      IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
         LET l_sql = l_sql CLIPPED,
                  "   AND ((sfdc001,sfdc002,sfdc003) not in ",    #满足客供料：工单单号\项次\相序
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"') ",
                  "       or (sfdc001,sfdc002,sfdc003) in ",
                  "       (select sfbadocno,sfbaseq,sfbaseq1 from sfba_t ",
                  "         where sfbaent  = ",g_enterprise,
                  "           and sfbasite = '",g_site,"' ",
                  "           and sfba028 IS NULL)) "
      END IF
   ELSE
      LET l_sql = " SELECT sfdc012,sfdc013,sfdc014,SUM(sfdc007),SUM(sfdc010) ",
                  "   FROM sfdc_t,sfba_t ",
                  "  WHERE sfdcent   = sfbaent ",
                  "    AND sfdc001   = sfbadocno ",
                  "    AND sfdc002   = sfbaseq ",
                  "    AND sfdc003   = sfbaseq1 ",
                  "    AND sfdcent   = ",g_enterprise,
                  "    AND sfdcdocno ='",g_sfda_m.sfdadocno,"' ",
                  "    AND sfdc004   = '",g_sfde_d[g_detail_idx].sfde001,"' ",  #需求料号
                  "    AND sfdc005   = '",g_sfde_d[g_detail_idx].sfde002,"' ",  #特征
                  "    AND sfdc006   = '",g_sfde_d[g_detail_idx].sfde003,"' "   #单位
                  #"    AND sfdc012   = '",g_sfdf_d[l_ac].sfdf003,"' "     #库位 #mark 141211
      IF g_prog[1,6] = 'asft31' THEN  #退料不记录客供料
         LET l_sql = l_sql CLIPPED," AND sfba028 = '",g_sfde_d[g_detail_idx].sfde009,"' "    #客供料
      END IF
   END IF
   IF g_sfde_d[g_detail_idx].sfde006 IS NULL THEN
      LET l_sql = l_sql CLIPPED," AND sfdc009 IS NULL "
   ELSE
      LET l_sql = l_sql CLIPPED," AND sfdc009 = '",g_sfde_d[g_detail_idx].sfde006,"' "
   END IF
   LET l_sql = l_sql CLIPPED,"  GROUP BY sfdc012,sfdc013,sfdc014 ",
                             "  ORDER BY sfdc014 desc,sfdc013 desc "
   LET l_cnt_sfdc = 0
   PREPARE asft310_chk_ware_range_qty_p1 FROM l_sql
   DECLARE asft310_chk_ware_range_qty_c1 CURSOR FOR asft310_chk_ware_range_qty_p1
   FOREACH asft310_chk_ware_range_qty_c1 INTO l_sfdc012,l_sfdc013,l_sfdc014,l_sfdc007,l_sfdc010
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF
      
      LET l_cnt_sfdc = l_cnt_sfdc + 1
      LET l_sfdc_d[l_cnt_sfdc].sfdc012 = l_sfdc012  #仓
      LET l_sfdc_d[l_cnt_sfdc].sfdc013 = l_sfdc013  #储
      LET l_sfdc_d[l_cnt_sfdc].sfdc014 = l_sfdc014  #批
      LET l_sfdc_d[l_cnt_sfdc].sfdc007 = l_sfdc007  #数量--申请的
      LET l_sfdc_d[l_cnt_sfdc].sfdc010 = l_sfdc010  #参考单位数量--申请的
   END FOREACH

   #-------->取出当前sfdf单身除当笔sfdf外所有sfdf
   #库位为必输的排除一部分，提高效能
   LET l_sql = " SELECT * FROM sfdf_t ",
               "  WHERE sfdfent   = ",g_enterprise,
               "    AND sfdfdocno ='",g_sfda_m.sfdadocno,"' ",
               "    AND sfdfseq   = '",g_sfde_d[g_detail_idx].sfdeseq,"' "   #项次
   IF NOT cl_null(g_sfdf_d_t.sfdfseq1) THEN #修改去除当笔
      LET l_sql = l_sql CLIPPED," AND sfdfseq1 != ",g_sfdf_d_t.sfdfseq1
   END IF
   LET l_sql = l_sql CLIPPED," ORDER BY sfdf005 desc,sfdf004 desc "
   PREPARE asft310_chk_ware_range_qty_p2 FROM l_sql
   DECLARE asft310_chk_ware_range_qty_c2 CURSOR FOR asft310_chk_ware_range_qty_p2
   LET l_cnt_sfdf = 0
   FOREACH asft310_chk_ware_range_qty_c2 INTO l_sfdf.*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF
      
      #计算sfde与sfdf数量的换算率l_rate
      #mod 150101
      #IF g_sfde_d[g_detail_idx].sfde001 = l_sfdf.sfdf001 THEN   #需求料=发料料号
      #   IF g_sfde_d[g_detail_idx].sfde003 = l_sfdf.sfdf006 THEN  #需求单位=实际发料单位
      #      LET l_rate = 1
      #   ELSE
      #      CALL s_aimi190_get_convert(l_sfdf.sfdf001,l_sfdf.sfdf006,g_sfde_d[g_detail_idx].sfde003) RETURNING r_success,l_rate
      #      IF NOT r_success THEN
      #         RETURN r_success
      #      END IF 
      #   END IF
      #ELSE
      #   LET l_rate = 1/l_sfdf.sfdf002
      #END IF
      #LET l_sfdc007 = l_sfdf.sfdf007 * l_rate #按换算率折算成sfdc的数量
      #LET l_sfdc010 = l_sfdf.sfdf009 * l_rate #按换算率折算成sfdc的参考单位数量
      IF g_sfde_d[g_detail_idx].sfde001 = l_sfdf.sfdf001 THEN   #需求料=发料料号
         IF g_sfde_d[g_detail_idx].sfde003 = l_sfdf.sfdf006 THEN  #需求单位=实际发料单位
            LET l_sfdc007 = l_sfdf.sfdf007 
            LET l_sfdc010 = l_sfdf.sfdf009 
         ELSE
            CALL s_aooi250_convert_qty(l_sfdf.sfdf001,l_sfdf.sfdf006,g_sfde_d[g_detail_idx].sfde003,l_sfdf.sfdf007)
               RETURNING r_success,l_sfdc007
            IF NOT r_success THEN
               RETURN r_success
            END IF 
            CALL s_aooi250_convert_qty(l_sfdf.sfdf001,l_sfdf.sfdf006,g_sfde_d[g_detail_idx].sfde003,l_sfdf.sfdf009)
               RETURNING r_success,l_sfdc010
            IF NOT r_success THEN
               RETURN r_success
            END IF 
         END IF
      ELSE
         LET l_sfdc007 = l_sfdf.sfdf007 / l_sfdf.sfdf002
         LET l_sfdc010 = l_sfdf.sfdf009 / l_sfdf.sfdf002
      END IF
      #mod 150101 end
      
      LET l_cnt_sfdf = l_cnt_sfdf + 1
      LET l_sfdf_d[l_cnt_sfdf].sfdf003 = l_sfdf.sfdf003  #仓
      LET l_sfdf_d[l_cnt_sfdf].sfdf004 = l_sfdf.sfdf004  #储
      LET l_sfdf_d[l_cnt_sfdf].sfdf005 = l_sfdf.sfdf005  #批
      LET l_sfdf_d[l_cnt_sfdf].sfdf007 = l_sfdc007  #按换算率折算成sfdc的数量
      LET l_sfdf_d[l_cnt_sfdf].sfdf009 = l_sfdc010  #按换算率折算成sfdc的参考单位数量
   END FOREACH
   #剩余当前异动笔sfdf
   #计算sfde与sfdf数量的换算率l_rate
   #mod 150101
   #IF g_sfde_d[g_detail_idx].sfde001 = g_sfdf_d[l_ac].sfdf001 THEN   #需求料=发料料号
   #   IF g_sfde_d[g_detail_idx].sfde003 = g_sfdf_d[l_ac].sfdf006 THEN  #需求单位=实际发料单位
   #      LET l_rate = 1
   #   ELSE
   #      CALL s_aimi190_get_convert(g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf006,g_sfde_d[g_detail_idx].sfde003) RETURNING r_success,l_rate
   #      IF NOT r_success THEN
   #         RETURN r_success
   #      END IF 
   #   END IF
   #ELSE
   #   LET l_rate = 1/g_sfdf_d[l_ac].sfdf002
   #END IF
   #LET l_sfdc007 = g_sfdf_d[l_ac].sfdf007 * l_rate #按换算率折算成sfdc的数量
   #LET l_sfdc010 = g_sfdf_d[l_ac].sfdf009 * l_rate #按换算率折算成sfdc的参考单位数量
   IF g_sfde_d[g_detail_idx].sfde001 = g_sfdf_d[l_ac].sfdf001 THEN   #需求料=发料料号
      IF g_sfde_d[g_detail_idx].sfde003 = g_sfdf_d[l_ac].sfdf006 THEN  #需求单位=实际发料单位
         LET l_sfdc007 = g_sfdf_d[l_ac].sfdf007
         LET l_sfdc010 = g_sfdf_d[l_ac].sfdf009
      ELSE
         CALL s_aooi250_convert_qty(g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf006,g_sfde_d[g_detail_idx].sfde003,g_sfdf_d[l_ac].sfdf007)
            RETURNING r_success,l_sfdc007
         IF NOT r_success THEN
            RETURN r_success
         END IF
         CALL s_aooi250_convert_qty(g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf006,g_sfde_d[g_detail_idx].sfde003,g_sfdf_d[l_ac].sfdf009)
            RETURNING r_success,l_sfdc010
         IF NOT r_success THEN
            RETURN r_success
         END IF 
      END IF
   ELSE
      LET l_sfdc007 = g_sfdf_d[l_ac].sfdf007/g_sfdf_d[l_ac].sfdf002
      LET l_sfdc010 = g_sfdf_d[l_ac].sfdf009/g_sfdf_d[l_ac].sfdf002
   END IF
   #mod 150101 end
   
   LET l_cnt_sfdf = l_cnt_sfdf + 1
   LET l_sfdf_d[l_cnt_sfdf].sfdf003 = g_sfdf_d[l_ac].sfdf003  #仓
   LET l_sfdf_d[l_cnt_sfdf].sfdf004 = g_sfdf_d[l_ac].sfdf004  #储
   LET l_sfdf_d[l_cnt_sfdf].sfdf005 = g_sfdf_d[l_ac].sfdf005  #批
   LET l_sfdf_d[l_cnt_sfdf].sfdf007 = l_sfdc007  #按换算率折算成sfdc的数量
   LET l_sfdf_d[l_cnt_sfdf].sfdf009 = l_sfdc010  #按换算率折算成sfdc的参考单位数量
   
   #-------->检查库位、储位、批号的范围(sfdf)，是否在需求指定发料库位、储位、批号允许的数量内(sfdc)
   #--将sfdf分配给sfdc，分配顺序：储位和批号都是空->储位为空/批号非空->储位非空/批号为空->储位和批号都非空
   #将sfdf中“储位和批号都是空”的资料分配,扣减sfdc中:储位和批号都是空的数量
   FOR l_idx = 1 TO l_cnt_sfdf
       IF cl_null(l_sfdf_d[l_idx].sfdf004) AND cl_null(l_sfdf_d[l_idx].sfdf005) THEN
          #对sfdc进行分配
          FOR l_idx2 = 1 TO l_cnt_sfdc
              IF l_sfdc_d[l_idx2].sfdc007 = 0 THEN
                 CONTINUE FOR
              END IF
              #扣减sfdc中:储位和批号都是空的数量
              IF cl_null(l_sfdc_d[l_idx2].sfdc013) AND cl_null(l_sfdc_d[l_idx2].sfdc014) THEN
                 IF l_sfdf_d[l_idx].sfdf007 > l_sfdc_d[l_idx2].sfdc007 THEN
                    LET l_sfdf_d[l_idx].sfdf007 = l_sfdf_d[l_idx].sfdf007 - l_sfdc_d[l_idx2].sfdc007
                    LET l_sfdf_d[l_idx].sfdf009 = l_sfdf_d[l_idx].sfdf009 - l_sfdc_d[l_idx2].sfdc010
                    LET l_sfdc_d[l_idx2].sfdc007 = 0
                    LET l_sfdc_d[l_idx2].sfdc010 = 0
                    CONTINUE FOR
                 ELSE
                    LET l_sfdf_d[l_idx].sfdf007 = 0
                    LET l_sfdf_d[l_idx].sfdf009 = 0
                    LET l_sfdc_d[l_idx2].sfdc007 = l_sfdc_d[l_idx2].sfdc007 - l_sfdf_d[l_idx].sfdf007
                    LET l_sfdc_d[l_idx2].sfdc010 = l_sfdc_d[l_idx2].sfdc010 - l_sfdf_d[l_idx].sfdf009
                    EXIT FOR
                 END IF
              END IF
          END FOR
          #若sfdf有未分配掉的，代表sfdf超出范围了
          IF l_sfdf_d[l_idx].sfdf007 > 0 OR l_sfdf_d[l_idx].sfdf009 > 0 THEN
             #输入资料不在需求指定发料库位、储位、批号允许的数量范围内，请查看“发料需求”页签资料，并重新输入
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = 'asf-00133'
             LET g_errparam.extend = ''
             LET g_errparam.popup = TRUE
             CALL cl_err()
             LET r_success = FALSE
             RETURN r_success
          END IF
       END IF
   END FOR
   #将sfdf中“储位为空/批号非空”的资料分配,按顺序扣减sfdc中:1.储位是空+批号为输入批号的资料
   #                                                   2.储位+批号都是空的资料
   FOR l_idx = 1 TO l_cnt_sfdf
       IF cl_null(l_sfdf_d[l_idx].sfdf004) AND NOT cl_null(l_sfdf_d[l_idx].sfdf005) THEN
          #对sfdc进行分配：1.扣减sfdc中:储位是空+批号为输入批号的数量
          FOR l_idx2 = 1 TO l_cnt_sfdc
              IF l_sfdc_d[l_idx2].sfdc007 = 0 THEN
                 CONTINUE FOR
              END IF
              IF cl_null(l_sfdc_d[l_idx2].sfdc013) AND l_sfdc_d[l_idx2].sfdc014=l_sfdf_d[l_idx].sfdf005 THEN
                 IF l_sfdf_d[l_idx].sfdf007 > l_sfdc_d[l_idx2].sfdc007 THEN
                    LET l_sfdf_d[l_idx].sfdf007 = l_sfdf_d[l_idx].sfdf007 - l_sfdc_d[l_idx2].sfdc007
                    LET l_sfdf_d[l_idx].sfdf009 = l_sfdf_d[l_idx].sfdf009 - l_sfdc_d[l_idx2].sfdc010
                    LET l_sfdc_d[l_idx2].sfdc007 = 0
                    LET l_sfdc_d[l_idx2].sfdc010 = 0
                    CONTINUE FOR
                 ELSE
                    LET l_sfdf_d[l_idx].sfdf007 = 0
                    LET l_sfdf_d[l_idx].sfdf009 = 0
                    LET l_sfdc_d[l_idx2].sfdc007 = l_sfdc_d[l_idx2].sfdc007 - l_sfdf_d[l_idx].sfdf007
                    LET l_sfdc_d[l_idx2].sfdc010 = l_sfdc_d[l_idx2].sfdc010 - l_sfdf_d[l_idx].sfdf009
                    EXIT FOR
                 END IF
              END IF
          END FOR
          #若sfdf都已分配掉，则继续分配下笔sfdf
          IF l_sfdf_d[l_idx].sfdf007 = 0 THEN
              CONTINUE FOR
          END IF
          #对sfdc进行分配,2.扣减sfdc中:储位和批号都是空的数量
          FOR l_idx2 = 1 TO l_cnt_sfdc
              IF l_sfdc_d[l_idx2].sfdc007 = 0 THEN
                 CONTINUE FOR
              END IF
              IF cl_null(l_sfdc_d[l_idx2].sfdc013) AND cl_null(l_sfdc_d[l_idx2].sfdc014) THEN
                 IF l_sfdf_d[l_idx].sfdf007 > l_sfdc_d[l_idx2].sfdc007 THEN
                    LET l_sfdf_d[l_idx].sfdf007 = l_sfdf_d[l_idx].sfdf007 - l_sfdc_d[l_idx2].sfdc007
                    LET l_sfdf_d[l_idx].sfdf009 = l_sfdf_d[l_idx].sfdf009 - l_sfdc_d[l_idx2].sfdc010
                    LET l_sfdc_d[l_idx2].sfdc007 = 0
                    LET l_sfdc_d[l_idx2].sfdc010 = 0
                    CONTINUE FOR
                 ELSE
                    LET l_sfdf_d[l_idx].sfdf007 = 0
                    LET l_sfdf_d[l_idx].sfdf009 = 0
                    LET l_sfdc_d[l_idx2].sfdc007 = l_sfdc_d[l_idx2].sfdc007 - l_sfdf_d[l_idx].sfdf007
                    LET l_sfdc_d[l_idx2].sfdc010 = l_sfdc_d[l_idx2].sfdc010 - l_sfdf_d[l_idx].sfdf009
                    EXIT FOR
                 END IF
              END IF
          END FOR
          #若sfdf有未分配掉的，代表sfdf超出范围了
          IF l_sfdf_d[l_idx].sfdf007 > 0 OR l_sfdf_d[l_idx].sfdf009 > 0 THEN
             #输入资料不在需求指定发料库位、储位、批号允许的数量范围内，请查看“发料需求”页签资料，并重新输入
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = 'asf-00133'
             LET g_errparam.extend = ''
             LET g_errparam.popup = TRUE
             CALL cl_err()

             LET r_success = FALSE
             RETURN r_success
          END IF
       END IF
   END FOR
   #将sfdf中“储位非空/批号为空”的资料分配,按顺序扣减sfdc中:1.储位为输入储位+批号是空的资料
   #                                                   2.储位+批号都是空的资料
   FOR l_idx = 1 TO l_cnt_sfdf
       IF NOT cl_null(l_sfdf_d[l_idx].sfdf004) AND cl_null(l_sfdf_d[l_idx].sfdf005) THEN
          #对sfdc进行分配：1.扣减sfdc中:储位为输入储位+批号是空的数量
          FOR l_idx2 = 1 TO l_cnt_sfdc
              IF l_sfdc_d[l_idx2].sfdc007 = 0 THEN
                 CONTINUE FOR
              END IF
              IF l_sfdc_d[l_idx2].sfdc013=l_sfdf_d[l_idx].sfdf004 AND cl_null(l_sfdc_d[l_idx2].sfdc014) THEN
                 IF l_sfdf_d[l_idx].sfdf007 > l_sfdc_d[l_idx2].sfdc007 THEN
                    LET l_sfdf_d[l_idx].sfdf007 = l_sfdf_d[l_idx].sfdf007 - l_sfdc_d[l_idx2].sfdc007
                    LET l_sfdf_d[l_idx].sfdf009 = l_sfdf_d[l_idx].sfdf009 - l_sfdc_d[l_idx2].sfdc010
                    LET l_sfdc_d[l_idx2].sfdc007 = 0
                    LET l_sfdc_d[l_idx2].sfdc010 = 0
                    CONTINUE FOR
                 ELSE
                    LET l_sfdf_d[l_idx].sfdf007 = 0
                    LET l_sfdf_d[l_idx].sfdf009 = 0
                    LET l_sfdc_d[l_idx2].sfdc007 = l_sfdc_d[l_idx2].sfdc007 - l_sfdf_d[l_idx].sfdf007
                    LET l_sfdc_d[l_idx2].sfdc010 = l_sfdc_d[l_idx2].sfdc010 - l_sfdf_d[l_idx].sfdf009
                    EXIT FOR
                 END IF
              END IF
          END FOR
          #若sfdf都已分配掉，则继续分配下笔sfdf
          IF l_sfdf_d[l_idx].sfdf007 = 0 THEN
              CONTINUE FOR
          END IF
          #对sfdc进行分配,2.扣减sfdc中:储位和批号都是空的数量
          FOR l_idx2 = 1 TO l_cnt_sfdc
              IF l_sfdc_d[l_idx2].sfdc007 = 0 THEN
                 CONTINUE FOR
              END IF
              IF cl_null(l_sfdc_d[l_idx2].sfdc013) AND cl_null(l_sfdc_d[l_idx2].sfdc014) THEN
                 IF l_sfdf_d[l_idx].sfdf007 > l_sfdc_d[l_idx2].sfdc007 THEN
                    LET l_sfdf_d[l_idx].sfdf007 = l_sfdf_d[l_idx].sfdf007 - l_sfdc_d[l_idx2].sfdc007
                    LET l_sfdf_d[l_idx].sfdf009 = l_sfdf_d[l_idx].sfdf009 - l_sfdc_d[l_idx2].sfdc010
                    LET l_sfdc_d[l_idx2].sfdc007 = 0
                    LET l_sfdc_d[l_idx2].sfdc010 = 0
                    CONTINUE FOR
                 ELSE
                    LET l_sfdf_d[l_idx].sfdf007 = 0
                    LET l_sfdf_d[l_idx].sfdf009 = 0
                    LET l_sfdc_d[l_idx2].sfdc007 = l_sfdc_d[l_idx2].sfdc007 - l_sfdf_d[l_idx].sfdf007
                    LET l_sfdc_d[l_idx2].sfdc010 = l_sfdc_d[l_idx2].sfdc010 - l_sfdf_d[l_idx].sfdf009
                    EXIT FOR
                 END IF
              END IF
          END FOR
          #若sfdf有未分配掉的，代表sfdf超出范围了
          IF l_sfdf_d[l_idx].sfdf007 > 0 OR l_sfdf_d[l_idx].sfdf009 > 0 THEN
             #输入资料不在需求指定发料库位、储位、批号允许的数量范围内，请查看“发料需求”页签资料，并重新输入
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = 'asf-00133'
             LET g_errparam.extend = ''
             LET g_errparam.popup = TRUE
             CALL cl_err()

             LET r_success = FALSE
             RETURN r_success
          END IF
       END IF
   END FOR
   #将sfdf中“储位和批号都非空”的资料分配,按顺序扣减sfdc中:1.储位+批号都为输入的资料
   #                                                  2.储位为输入储位+批号是空的资料
   #                                                  3.储位是空+批号为输入批号的资料
   #                                                  4.储位+批号都是空的资料
   FOR l_idx = 1 TO l_cnt_sfdf
       IF NOT cl_null(l_sfdf_d[l_idx].sfdf004) AND NOT cl_null(l_sfdf_d[l_idx].sfdf005) THEN
          #对sfdc进行分配：1.扣减sfdc中:储位+批号都为输入的资料
          FOR l_idx2 = 1 TO l_cnt_sfdc
              IF l_sfdc_d[l_idx2].sfdc007 = 0 THEN
                 CONTINUE FOR
              END IF
              IF l_sfdc_d[l_idx2].sfdc013=l_sfdf_d[l_idx].sfdf004 AND l_sfdc_d[l_idx2].sfdc014=l_sfdf_d[l_idx].sfdf005 THEN
                 IF l_sfdf_d[l_idx].sfdf007 > l_sfdc_d[l_idx2].sfdc007 THEN
                    LET l_sfdf_d[l_idx].sfdf007 = l_sfdf_d[l_idx].sfdf007 - l_sfdc_d[l_idx2].sfdc007
                    LET l_sfdf_d[l_idx].sfdf009 = l_sfdf_d[l_idx].sfdf009 - l_sfdc_d[l_idx2].sfdc010
                    LET l_sfdc_d[l_idx2].sfdc007 = 0
                    LET l_sfdc_d[l_idx2].sfdc010 = 0
                    CONTINUE FOR
                 ELSE
                    LET l_sfdf_d[l_idx].sfdf007 = 0
                    LET l_sfdf_d[l_idx].sfdf009 = 0
                    LET l_sfdc_d[l_idx2].sfdc007 = l_sfdc_d[l_idx2].sfdc007 - l_sfdf_d[l_idx].sfdf007
                    LET l_sfdc_d[l_idx2].sfdc010 = l_sfdc_d[l_idx2].sfdc010 - l_sfdf_d[l_idx].sfdf009
                    EXIT FOR
                 END IF
              END IF
          END FOR
          #若sfdf都已分配掉，则继续分配下笔sfdf
          IF l_sfdf_d[l_idx].sfdf007 = 0 THEN
              CONTINUE FOR
          END IF

          #对sfdc进行分配,2.扣减sfdc中:位为输入储位+批号是空的资料
          FOR l_idx2 = 1 TO l_cnt_sfdc
              IF l_sfdc_d[l_idx2].sfdc007 = 0 THEN
                 CONTINUE FOR
              END IF
              IF l_sfdc_d[l_idx2].sfdc013=l_sfdf_d[l_idx].sfdf004 AND cl_null(l_sfdc_d[l_idx2].sfdc014) THEN
                 IF l_sfdf_d[l_idx].sfdf007 > l_sfdc_d[l_idx2].sfdc007 THEN
                    LET l_sfdf_d[l_idx].sfdf007 = l_sfdf_d[l_idx].sfdf007 - l_sfdc_d[l_idx2].sfdc007
                    LET l_sfdf_d[l_idx].sfdf009 = l_sfdf_d[l_idx].sfdf009 - l_sfdc_d[l_idx2].sfdc010
                    LET l_sfdc_d[l_idx2].sfdc007 = 0
                    LET l_sfdc_d[l_idx2].sfdc010 = 0
                    CONTINUE FOR
                 ELSE
                    LET l_sfdf_d[l_idx].sfdf007 = 0
                    LET l_sfdf_d[l_idx].sfdf009 = 0
                    LET l_sfdc_d[l_idx2].sfdc007 = l_sfdc_d[l_idx2].sfdc007 - l_sfdf_d[l_idx].sfdf007
                    LET l_sfdc_d[l_idx2].sfdc010 = l_sfdc_d[l_idx2].sfdc010 - l_sfdf_d[l_idx].sfdf009
                    EXIT FOR
                 END IF
              END IF
          END FOR
          #若sfdf都已分配掉，则继续分配下笔sfdf
          IF l_sfdf_d[l_idx].sfdf007 = 0 THEN
              CONTINUE FOR
          END IF

          #对sfdc进行分配,3.扣减sfdc中:储位是空+批号为输入批号的资料
          FOR l_idx2 = 1 TO l_cnt_sfdc
              IF l_sfdc_d[l_idx2].sfdc007 = 0 THEN
                 CONTINUE FOR
              END IF
              
              IF cl_null(l_sfdc_d[l_idx2].sfdc013) AND l_sfdc_d[l_idx2].sfdc014=l_sfdf_d[l_idx].sfdf005 THEN
                 IF l_sfdf_d[l_idx].sfdf007 > l_sfdc_d[l_idx2].sfdc007 THEN
                    LET l_sfdf_d[l_idx].sfdf007 = l_sfdf_d[l_idx].sfdf007 - l_sfdc_d[l_idx2].sfdc007
                    LET l_sfdf_d[l_idx].sfdf009 = l_sfdf_d[l_idx].sfdf009 - l_sfdc_d[l_idx2].sfdc010
                    LET l_sfdc_d[l_idx2].sfdc007 = 0
                    LET l_sfdc_d[l_idx2].sfdc010 = 0
                    CONTINUE FOR
                 ELSE
                    LET l_sfdf_d[l_idx].sfdf007 = 0
                    LET l_sfdf_d[l_idx].sfdf009 = 0
                    LET l_sfdc_d[l_idx2].sfdc007 = l_sfdc_d[l_idx2].sfdc007 - l_sfdf_d[l_idx].sfdf007
                    LET l_sfdc_d[l_idx2].sfdc010 = l_sfdc_d[l_idx2].sfdc010 - l_sfdf_d[l_idx].sfdf009
                    EXIT FOR
                 END IF
              END IF
          END FOR
          #若sfdf都已分配掉，则继续分配下笔sfdf
          IF l_sfdf_d[l_idx].sfdf007 = 0 THEN
              CONTINUE FOR
          END IF

          #对sfdc进行分配,4.扣减sfdc中:储位+批号都是空的资料
          FOR l_idx2 = 1 TO l_cnt_sfdc
              IF l_sfdc_d[l_idx2].sfdc007 = 0 THEN
                 CONTINUE FOR
              END IF
              IF cl_null(l_sfdc_d[l_idx2].sfdc013) AND cl_null(l_sfdc_d[l_idx2].sfdc014) THEN
                 IF l_sfdf_d[l_idx].sfdf007 > l_sfdc_d[l_idx2].sfdc007 THEN
                    LET l_sfdf_d[l_idx].sfdf007 = l_sfdf_d[l_idx].sfdf007 - l_sfdc_d[l_idx2].sfdc007
                    LET l_sfdf_d[l_idx].sfdf009 = l_sfdf_d[l_idx].sfdf009 - l_sfdc_d[l_idx2].sfdc010
                    LET l_sfdc_d[l_idx2].sfdc007 = 0
                    LET l_sfdc_d[l_idx2].sfdc010 = 0
                    CONTINUE FOR
                 ELSE
                    LET l_sfdf_d[l_idx].sfdf007 = 0
                    LET l_sfdf_d[l_idx].sfdf009 = 0
                    LET l_sfdc_d[l_idx2].sfdc007 = l_sfdc_d[l_idx2].sfdc007 - l_sfdf_d[l_idx].sfdf007
                    LET l_sfdc_d[l_idx2].sfdc010 = l_sfdc_d[l_idx2].sfdc010 - l_sfdf_d[l_idx].sfdf009
                    EXIT FOR
                 END IF
              END IF
          END FOR
          #若sfdf有未分配掉的，代表sfdf超出范围了
          IF l_sfdf_d[l_idx].sfdf007 > 0 OR l_sfdf_d[l_idx].sfdf009 > 0 THEN
             #输入资料不在需求指定发料库位、储位、批号允许的数量范围内，请查看“发料需求”页签资料，并重新输入
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = 'asf-00133'
             LET g_errparam.extend = ''
             LET g_errparam.popup = TRUE
             CALL cl_err()
             LET r_success = FALSE
             RETURN r_success
          END IF
       END IF
   END FOR

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asft310_chk_sfdd_amt" order="68" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#检查sfdd数量汇总是否超过sfdc的数量，超过则检查失败
#在编辑状态时使用
#参考单位数量不检查，预留
PRIVATE FUNCTION asft310_chk_sfdd_amt(p_cmd,p_column)
DEFINE p_cmd            LIKE type_t.chr1
DEFINE p_column         LIKE type_t.chr10
DEFINE r_success        LIKE type_t.num5   #TRUE/FALSE
DEFINE l_sql            STRING
DEFINE l_sfdc007        LIKE sfdc_t.sfdc007   #申请数量
DEFINE l_sfdc010        LIKE sfdc_t.sfdc010   #参考单位申请数量
DEFINE l_sfdd001        LIKE sfdd_t.sfdd001  #发料料号
DEFINE l_sfdd013        LIKE sfdd_t.sfdd013  #发料料号产品特征
DEFINE l_sfdd002        LIKE sfdd_t.sfdd002  #替代率
DEFINE l_sfdd006        LIKE sfdd_t.sfdd006  #单位
DEFINE l_sfdd007        LIKE sfdd_t.sfdd007  #数量
DEFINE l_sfdd008        LIKE sfdd_t.sfdd008  #参考单位
DEFINE l_sfdd009        LIKE sfdd_t.sfdd009  #参考数量
DEFINE l_success        LIKE type_t.num5
DEFINE l_rate1          LIKE sfdd_t.sfdd002  #对sfdc006单位的换算率
DEFINE l_rate2          LIKE sfdd_t.sfdd002  #对sfdc009参考单位的换算率

   LET r_success = TRUE
   LET l_sfdc007 = 0
   LET l_sfdc010 = 0
   
   #获取除当笔以外其他所有笔数量的总和
   LET l_sql = " SELECT sfdd001,sfdd013,sfdd002,sfdd006,sfdd007,sfdd008,sfdd009 FROM sfdd_t ",
               " WHERE sfddent   = ",g_enterprise,
               "   AND sfdddocno = '",g_sfda_m.sfdadocno,"' ",
               "   AND sfddseq   = ",g_sfdc4_d[g_detail_idx].sfdcseq
   IF p_cmd = 'u' THEN
      LET l_sql = l_sql CLIPPED," AND sfddseq1 != ",g_sfdd_d_t.sfddseq1
   END IF
   PREPARE asft310_chk_sfdd_amt_p1 FROM l_sql
   DECLARE asft310_chk_sfdd_amt_c1 CURSOR FOR asft310_chk_sfdd_amt_p1
   FOREACH asft310_chk_sfdd_amt_c1 INTO l_sfdd001,l_sfdd013,l_sfdd002,l_sfdd006,l_sfdd007,l_sfdd008,l_sfdd009
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'asft310_chk_sfdd_amt_c1'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
      IF cl_null(l_sfdd007) THEN LET l_sfdd007 = 0 END IF
      IF cl_null(l_sfdd009) THEN LET l_sfdd009 = 0 END IF
      
      #--取当笔数量
      IF l_sfdd001 = g_sfdc4_d[g_detail_idx].sfdc004 THEN
         #没取替代,考虑单位不一致的情况
         #mod 150101
         ##计算对sfdc009单位的换算率l_rate1
         #IF l_sfdd006 = g_sfdc4_d[g_detail_idx].sfdc006 THEN
         #   LET l_rate1 = 1
         #ELSE
         #   CALL s_aimi190_get_convert(l_sfdd001,l_sfdd006,g_sfdc4_d[g_detail_idx].sfdc006) RETURNING l_success,l_rate1
         #   IF NOT l_success THEN
         #      LET l_rate1 = 1
         #   END IF
         #END IF
         ##计算对sfdc009参考单位的换算率l_rate2
         #IF cl_null(l_sfdd008) OR cl_null(g_sfdc4_d[g_detail_idx].sfdc009) THEN
         #   LET l_rate2 = 1
         #ELSE
         #   IF l_sfdd008 = g_sfdc4_d[g_detail_idx].sfdc009 THEN
         #      LET l_rate2 = 1
         #   ELSE
         #      CALL s_aimi190_get_convert(l_sfdd001,l_sfdd008,g_sfdc4_d[g_detail_idx].sfdc009) RETURNING l_success,l_rate2
         #      IF NOT l_success THEN
         #         LET l_rate2 = 1
         #      END IF
         #   END IF
         #END IF
         #LET l_sfdd007 = l_sfdd007 * l_rate1
         #LET l_sfdd009 = l_sfdd009 * l_rate2
         #计算对sfdc009单位的换算率l_rate1
         IF l_sfdd006 != g_sfdc4_d[g_detail_idx].sfdc006 THEN
            CALL s_aooi250_convert_qty(l_sfdd001,l_sfdd006,g_sfdc4_d[g_detail_idx].sfdc006,l_sfdd007)
               RETURNING l_success,g_qty_t
            IF l_success THEN
               LET l_sfdd007 = g_qty_t
            END IF
         END IF
         #计算对sfdc009参考单位的换算率l_rate2
         IF NOT cl_null(l_sfdd008) AND NOT cl_null(g_sfdc4_d[g_detail_idx].sfdc009) THEN
            IF l_sfdd008 != g_sfdc4_d[g_detail_idx].sfdc009 THEN
               CALL s_aooi250_convert_qty(l_sfdd001,l_sfdd008,g_sfdc4_d[g_detail_idx].sfdc009,l_sfdd009)
                  RETURNING l_success,g_qty_t
               IF l_success THEN
                  LET l_sfdd009 = g_qty_t
               END IF
            END IF
         END IF
         #mod 150101 end
      ELSE
         #取替代了,直接考虑取替代率
         LET l_sfdd007 = l_sfdd007 / l_sfdd002
         LET l_sfdd009 = l_sfdd009 / l_sfdd002
      END IF
      
      #计算汇总数量
      LET l_sfdc007 = l_sfdc007 + l_sfdd007
      LET l_sfdc010 = l_sfdc010 + l_sfdd009
   END FOREACH
   
   #取当前编辑笔的数量
   IF g_sfdd_d[l_ac].sfdd001 = g_sfdc4_d[g_detail_idx].sfdc004 THEN
      #没取替代,考虑单位不一致的情况
      #mod 150101
      ##计算对sfdc006单位的换算率l_rate1
      #IF g_sfdd_d[l_ac].sfdd006 = g_sfdc4_d[g_detail_idx].sfdc006 THEN
      #   LET l_rate1 = 1
      #ELSE
      #   CALL s_aimi190_get_convert(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd006,g_sfdc4_d[g_detail_idx].sfdc006) RETURNING l_success,l_rate1
      #   IF NOT l_success THEN
      #      LET l_rate1 = 1
      #   END IF
      #END IF
      ##计算对sfdc009参考单位的换算率l_rate2
      #IF cl_null(g_sfdd_d[l_ac].sfdd008) OR cl_null(g_sfdc4_d[g_detail_idx].sfdc009) THEN
      #   LET l_rate2 = 1
      #ELSE
      #   IF g_sfdd_d[l_ac].sfdd008 = g_sfdc4_d[g_detail_idx].sfdc009 THEN
      #      LET l_rate2 = 1
      #   ELSE
      #      CALL s_aimi190_get_convert(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd008,g_sfdc4_d[g_detail_idx].sfdc009) RETURNING l_success,l_rate2
      #      IF NOT l_success THEN
      #         LET l_rate2 = 1
      #      END IF
      #   END IF
      #END IF
      #LET l_sfdd007 = g_sfdd_d[l_ac].sfdd007 * l_rate1
      #LET l_sfdd009 = g_sfdd_d[l_ac].sfdd009 * l_rate2
      #计算对sfdc006单位的换算率l_rate1
      IF g_sfdd_d[l_ac].sfdd006 = g_sfdc4_d[g_detail_idx].sfdc006 THEN
         LET l_sfdd007 = g_sfdd_d[l_ac].sfdd007
      ELSE
         CALL s_aooi250_convert_qty(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd006,g_sfdc4_d[g_detail_idx].sfdc006,g_sfdd_d[l_ac].sfdd007)
            RETURNING l_success,l_sfdd007
         IF NOT l_success THEN
            LET l_sfdd007 = g_sfdd_d[l_ac].sfdd007
         END IF
      END IF
      #计算对sfdc009参考单位的换算率l_rate2
      IF cl_null(g_sfdd_d[l_ac].sfdd008) OR cl_null(g_sfdc4_d[g_detail_idx].sfdc009) THEN
         LET l_sfdd009 = g_sfdd_d[l_ac].sfdd009
      ELSE
         IF g_sfdd_d[l_ac].sfdd008 = g_sfdc4_d[g_detail_idx].sfdc009 THEN
            LET l_sfdd009 = g_sfdd_d[l_ac].sfdd009
         ELSE
            CALL s_aooi250_convert_qty(g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd008,g_sfdc4_d[g_detail_idx].sfdc009,g_sfdd_d[l_ac].sfdd009)
               RETURNING l_success,l_sfdd009
            IF NOT l_success THEN
               LET l_sfdd009 = g_sfdd_d[l_ac].sfdd009
            END IF
         END IF
      END IF
      #mod 150101 end
   ELSE
      #取替代了,直接考虑取替代率
      LET l_sfdd007 = g_sfdd_d[l_ac].sfdd007 / g_sfdd_d[l_ac].sfdd002
      LET l_sfdd009 = g_sfdd_d[l_ac].sfdd009 / g_sfdd_d[l_ac].sfdd002
   END IF
   
   #判断
   CASE p_column
      WHEN 'sfdd007'
           #數量總數不可超過申請數量sfdc007
           IF l_sfdc007 + l_sfdd007 > g_sfdc4_d[g_detail_idx].sfdc007 THEN
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = 'asr-00010'
              LET g_errparam.extend = ''
              LET g_errparam.popup = TRUE
              CALL cl_err()
              LET r_success = FALSE
              RETURN r_success
           END IF
      WHEN 'sfdd009'
           #數量總數不可超過申請數量sfdc010
           IF l_sfdc010 + l_sfdd009 > g_sfdc4_d[g_detail_idx].sfdc010 THEN
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = 'asr-00010'
              LET g_errparam.extend = ''
              LET g_errparam.popup = TRUE
              CALL cl_err()
              LET r_success = FALSE
              RETURN r_success
           END IF
   END CASE
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asft310_chk_sfdf_amt" order="69" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#检查sfdf数量汇总是否超过sfde的数量，超过则检查失败
#在编辑状态时使用
##参考单位数量不检查，预留
PRIVATE FUNCTION asft310_chk_sfdf_amt(p_cmd,p_column)
DEFINE p_cmd            LIKE type_t.chr1
DEFINE p_column         LIKE type_t.chr10
DEFINE r_success        LIKE type_t.num5   #TRUE/FALSE
DEFINE l_sql            STRING
DEFINE l_sfde004        LIKE sfde_t.sfde004   #申请数量
DEFINE l_sfde007        LIKE sfde_t.sfde007   #参考单位申请数量
DEFINE l_sfdf001        LIKE sfdf_t.sfdf001  #发料料号
DEFINE l_sfdf013        LIKE sfdf_t.sfdf013  #产品特征
DEFINE l_sfdf002        LIKE sfdf_t.sfdf002  #替代率
DEFINE l_sfdf006        LIKE sfdf_t.sfdf006  #单位
DEFINE l_sfdf007        LIKE sfdf_t.sfdf007  #数量
DEFINE l_sfdf008        LIKE sfdf_t.sfdf008  #参考单位
DEFINE l_sfdf009        LIKE sfdf_t.sfdf009  #参考数量
DEFINE l_success        LIKE type_t.num5
DEFINE l_rate1          LIKE sfdd_t.sfdd002  #对sfde004单位的换算率
DEFINE l_rate2          LIKE sfdd_t.sfdd002  #对sfde006参考单位的换算率

   LET r_success = TRUE

   LET l_sfde004 = 0
   LET l_sfde007 = 0
   
   #获取除当笔以外其他所有笔数量的总和
   LET l_sql = " SELECT sfdf001,sfdf013,sfdf002,sfdf006,sfdf007,sfdf008,sfdf009 FROM sfdf_t ",
               " WHERE sfdfent   = ",g_enterprise,
               "   AND sfdfdocno = '",g_sfda_m.sfdadocno,"' ",
               "   AND sfdfseq   = ",g_sfde_d[g_detail_idx].sfdeseq
   IF p_cmd = 'u' THEN
      LET l_sql = l_sql CLIPPED," AND sfdfseq1 != ",g_sfdf_d_t.sfdfseq1
   END IF
   PREPARE asft310_chk_sfdf_amt_p1 FROM l_sql
   DECLARE asft310_chk_sfdf_amt_c1 CURSOR FOR asft310_chk_sfdf_amt_p1
   FOREACH asft310_chk_sfdf_amt_c1 INTO l_sfdf001,l_sfdf013,l_sfdf002,l_sfdf006,l_sfdf007,l_sfdf008,l_sfdf009
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach asft310_chk_sfdf_amt_c1'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN r_success
      END IF
      IF cl_null(l_sfdf007) THEN LET l_sfdf007 = 0 END IF
      IF cl_null(l_sfdf009) THEN LET l_sfdf009 = 0 END IF
      
      #--取当笔数量
      IF l_sfdf001 = g_sfde_d[g_detail_idx].sfde001 AND l_sfdf013 = g_sfde_d[g_detail_idx].sfde002 THEN
         #没取替代,考虑单位不一致的情况
         #mod 150101
         ##计算对sfde004单位的换算率l_rate1
         #IF l_sfdf006 = g_sfde_d[g_detail_idx].sfde003 THEN
         #   LET l_rate1 = 1
         #ELSE
         #   CALL s_aimi190_get_convert(l_sfdf001,l_sfdf006,g_sfde_d[g_detail_idx].sfde003) RETURNING l_success,l_rate1
         #   IF NOT l_success THEN
         #      LET l_rate1 = 1
         #   END IF
         #END IF
         ##计算对sfde006参考单位的换算率l_rate2
         #IF cl_null(l_sfdf008) OR cl_null(g_sfde_d[g_detail_idx].sfde006) THEN
         #   LET l_rate2 = 1
         #ELSE
         #   IF l_sfdf008 = g_sfde_d[g_detail_idx].sfde006 THEN
         #      LET l_rate2 = 1
         #   ELSE
         #      CALL s_aimi190_get_convert(l_sfdf001,l_sfdf008,g_sfde_d[g_detail_idx].sfde006) RETURNING l_success,l_rate2
         #      IF NOT l_success THEN
         #         LET l_rate2 = 1
         #      END IF
         #   END IF
         #END IF
         #LET l_sfdf007 = l_sfdf007 * l_rate1
         #LET l_sfdf009 = l_sfdf009 * l_rate2
         #计算对sfde004单位的换算率l_rate1
         IF l_sfdf006 != g_sfde_d[g_detail_idx].sfde003 THEN
            CALL s_aooi250_convert_qty(l_sfdf001,l_sfdf006,g_sfde_d[g_detail_idx].sfde003,l_sfdf007)
               RETURNING l_success,g_qty_t
            IF l_success THEN
               LET l_sfdf007 = g_qty_t
            END IF
         END IF
         #计算对sfde006参考单位的换算率l_rate2
         IF NOT cl_null(l_sfdf008) AND NOT cl_null(g_sfde_d[g_detail_idx].sfde006) THEN
            IF l_sfdf008 != g_sfde_d[g_detail_idx].sfde006 THEN
               CALL s_aooi250_convert_qty(l_sfdf001,l_sfdf008,g_sfde_d[g_detail_idx].sfde006,l_sfdf009)
                  RETURNING l_success,g_qty_t
               IF l_success THEN
                  LET l_sfdf009 = g_qty_t
               END IF
            END IF
         END IF
         #mod 150101 end
      ELSE
         #取替代了,直接考虑取替代率
         LET l_sfdf007 = l_sfdf007 / l_sfdf002
         LET l_sfdf009 = l_sfdf009 / l_sfdf002
      END IF
      
      #计算汇总数量
      LET l_sfde004 = l_sfde004 + l_sfdf007
      LET l_sfde007 = l_sfde007 + l_sfdf009
   END FOREACH
   
   #取当前编辑笔的数量
   IF g_sfdf_d[l_ac].sfdf001 = g_sfde_d[g_detail_idx].sfde001 AND g_sfdf_d[l_ac].sfdf013 = g_sfde_d[g_detail_idx].sfde002 THEN
      #没取替代,考虑单位不一致的情况
      #mod 150101
      ##计算对sfde006单位的换算率l_rate1
      #IF g_sfdf_d[l_ac].sfdf006 = g_sfde_d[g_detail_idx].sfde003 THEN
      #   LET l_rate1 = 1
      #ELSE
      #   CALL s_aimi190_get_convert(g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf006,g_sfde_d[g_detail_idx].sfde003) RETURNING l_success,l_rate1
      #   IF NOT l_success THEN
      #      LET l_rate1 = 1
      #   END IF
      #END IF
      ##计算对sfde006参考单位的换算率l_rate2
      #IF cl_null(g_sfdf_d[l_ac].sfdf008) OR cl_null(g_sfde_d[g_detail_idx].sfde006) THEN
      #   LET l_rate2 = 1
      #ELSE
      #   IF g_sfdf_d[l_ac].sfdf008 = g_sfde_d[g_detail_idx].sfde006 THEN
      #      LET l_rate2 = 1
      #   ELSE
      #      CALL s_aimi190_get_convert(g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf008,g_sfde_d[g_detail_idx].sfde006) RETURNING l_success,l_rate2
      #      IF NOT l_success THEN
      #         LET l_rate2 = 1
      #      END IF
      #   END IF
      #END IF
      #LET l_sfdf007 = g_sfdf_d[l_ac].sfdf007 * l_rate1
      #LET l_sfdf009 = g_sfdf_d[l_ac].sfdf009 * l_rate2
      #计算对sfde006单位的换算率l_rate1
      IF g_sfdf_d[l_ac].sfdf006 = g_sfde_d[g_detail_idx].sfde003 THEN
         LET l_sfdf007 = g_sfdf_d[l_ac].sfdf007
      ELSE
         CALL s_aooi250_convert_qty(g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf006,g_sfde_d[g_detail_idx].sfde003,g_sfdf_d[l_ac].sfdf007)
            RETURNING l_success,l_sfdf007
         IF NOT l_success THEN
            LET l_sfdf007 = g_sfdf_d[l_ac].sfdf007
         END IF
      END IF
      #计算对sfde006参考单位的换算率l_rate2
      IF cl_null(g_sfdf_d[l_ac].sfdf008) OR cl_null(g_sfde_d[g_detail_idx].sfde006) THEN
         LET l_sfdf009 = g_sfdf_d[l_ac].sfdf009
      ELSE
         IF g_sfdf_d[l_ac].sfdf008 = g_sfde_d[g_detail_idx].sfde006 THEN
            LET l_sfdf009 = g_sfdf_d[l_ac].sfdf009
         ELSE
            CALL s_aooi250_convert_qty(g_sfdf_d[l_ac].sfdf001,g_sfdf_d[l_ac].sfdf008,g_sfde_d[g_detail_idx].sfde006,g_sfdf_d[l_ac].sfdf009)
               RETURNING l_success,l_sfdf009
            IF NOT l_success THEN
               LET l_sfdf009 = g_sfdf_d[l_ac].sfdf009
            END IF
         END IF
      END IF
      #mod 150101 end
   ELSE
      #取替代了,直接考虑取替代率
      LET l_sfdf007 = g_sfdf_d[l_ac].sfdf007 / g_sfdf_d[l_ac].sfdf002
      LET l_sfdf009 = g_sfdf_d[l_ac].sfdf009 / g_sfdf_d[l_ac].sfdf002
   END IF
   
   #判断
   CASE p_column
      WHEN 'sfdf007'
           #數量總數不可超過申請數量sfde004
           IF l_sfde004 + l_sfdf007 > g_sfde_d[g_detail_idx].sfde004 THEN
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = 'asr-00010'
              LET g_errparam.extend = ''
              LET g_errparam.popup = TRUE
              CALL cl_err()
              LET r_success = FALSE
           END IF
      WHEN 'sfdf009'
           #數量總數不可超過申請數量sfde007
           IF l_sfde007 + l_sfdf009 > g_sfde_d[g_detail_idx].sfde007 THEN
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = 'asr-00010'
              LET g_errparam.extend = ''
              LET g_errparam.popup = TRUE
              CALL cl_err()
              LET r_success = FALSE
           END IF
   END CASE

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asft310_def_sfdc014" order="70" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#退料预设值:若发料批号只有一个，预设发料的批号
PRIVATE FUNCTION asft310_def_sfdc014()
DEFINE l_cnt     LIKE type_t.num5
   
   IF g_prog[1,6] != 'asft32' THEN
      RETURN
   END IF
   
   SELECT COUNT(unique sfdd005) INTO l_cnt
     FROM sfdd_t,sfdc_t
    WHERE sfdcent  = sfddent
      AND sfdcdocno= sfdddocno
      AND sfdcseq  = sfddseq
      AND sfdcent  = g_enterprise
      AND sfdcsite = g_site
      AND sfdc001  = g_sfdc_d[l_ac].sfdc001  #工单
      AND sfdc002  = g_sfdc_d[l_ac].sfdc002  #项次
      AND sfdc003  = g_sfdc_d[l_ac].sfdc003  #项序
      AND sfdd001  = g_sfdc_d[l_ac].sfdc004  #发料料号
      AND sfdd013  = g_sfdc_d[l_ac].sfdc005  #发料料号产品特征
      AND sfdd003  = g_sfdc_d[l_ac].sfdc012  #库位
      AND sfdd004  = g_sfdc_d[l_ac].sfdc013  #储位
   IF l_cnt = 1 THEN
      SELECT unique sfdd005 INTO g_sfdc_d[l_ac].sfdc014
        FROM sfdd_t,sfdc_t
       WHERE sfdcent  = sfddent
         AND sfdcdocno= sfdddocno
         AND sfdcseq  = sfddseq
         AND sfdcent  = g_enterprise
         AND sfdcsite = g_site
         AND sfdc001  = g_sfdc_d[l_ac].sfdc001  #工单
         AND sfdc002  = g_sfdc_d[l_ac].sfdc002  #项次
         AND sfdc003  = g_sfdc_d[l_ac].sfdc003  #项序
         AND sfdd001  = g_sfdc_d[l_ac].sfdc004  #发料料号
         AND sfdd013  = g_sfdc_d[l_ac].sfdc005  #发料料号产品特征
         AND sfdd003  = g_sfdc_d[l_ac].sfdc012  #库位
         AND sfdd004  = g_sfdc_d[l_ac].sfdc013  #储位
   END IF
END FUNCTION]]>
  </point>
  <point name="function.asft310_def_sfdb007" order="71" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_def_sfdb007()
   #实际套数
   IF g_sfda_m.sfda002 = '11' OR g_sfda_m.sfda002 = '21' THEN
      LET g_sfdb_d[g_detail_idx].sfdb007 = g_sfdb_d[g_detail_idx].sfdb006
   ELSE
      LET g_sfdb_d[g_detail_idx].sfdb007 = 0
   END IF
   DISPLAY BY NAME g_sfdb_d[g_detail_idx].sfdb007

END FUNCTION]]>
  </point>
  <point name="function.asft310_set_pk_array" order="72" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[# 給予pk_array內容
PRIVATE FUNCTION asft310_set_pk_array()
   
   CALL g_pk_array.clear()
   #LET g_pk_array[1].values = g_enterprise
   #LET g_pk_array[1].column = "sfdaent"
   #LET g_pk_array[2].values = g_sfda_m.sfdadocno
   #LET g_pk_array[2].column = "sfdadocno"
   LET g_pk_array[1].values = g_sfda_m.sfdadocno
   LET g_pk_array[1].column = "sfdadocno"
   #mod 见其他作业pattern的写法未将~ent的算进去，再，若算进去了待追踪的链接打开作业，带不出资料，所以这里也取消~ent
END FUNCTION]]>
  </point>
  <point name="function.asft310_get_doc_default" order="73" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 取aooi200中BY单据别设定的栏位预设值
# Memo...........:
# Usage..........: CALL asft310_get_doc_default()
#                       RETURNING NULL
# Input parameter: NULL
# Return code....: NULL
# Date & Author..: 2014/06/23 By zhangllc
# Modify.........:
################################################################################
PRIVATE FUNCTION asft310_get_doc_default()
   LET g_sfda_m.sfdadocdt  = s_aooi200_get_doc_default(g_site,'1',g_sfda_m.sfdadocno,'sfdadocdt',g_sfda_m.sfdadocdt)     #單據日期
   LET g_sfda_m.sfda001    = s_aooi200_get_doc_default(g_site,'1',g_sfda_m.sfdadocno,'sfda001'  ,g_sfda_m.sfda001  )     #過帳日期
   LET g_sfda_m.sfda002    = s_aooi200_get_doc_default(g_site,'1',g_sfda_m.sfdadocno,'sfda002'  ,g_sfda_m.sfda002  )     #发退料类别
   LET g_sfda_m.sfda003    = s_aooi200_get_doc_default(g_site,'1',g_sfda_m.sfdadocno,'sfda003'  ,g_sfda_m.sfda003  )     #部門
   LET g_sfda_m.sfda004    = s_aooi200_get_doc_default(g_site,'1',g_sfda_m.sfdadocno,'sfda004'  ,g_sfda_m.sfda004  )     #申請人
   LET g_sfda_m.sfda005    = s_aooi200_get_doc_default(g_site,'1',g_sfda_m.sfdadocno,'sfda005'  ,g_sfda_m.sfda005  )     #PBI編號

   DISPLAY BY NAME g_sfda_m.sfdadocdt
   DISPLAY BY NAME g_sfda_m.sfda001
   DISPLAY BY NAME g_sfda_m.sfda002
   DISPLAY BY NAME g_sfda_m.sfda003
   DISPLAY BY NAME g_sfda_m.sfda004
   DISPLAY BY NAME g_sfda_m.sfda005
   
   #作业特殊性限制
   CASE g_prog
      WHEN 'asft311'
           LET g_sfda_m.sfda002 = '11'
      WHEN 'asft312'
           LET g_sfda_m.sfda002 = '12'
      WHEN 'asft313'
           LET g_sfda_m.sfda002 = '13'
      WHEN 'asft314'
           LET g_sfda_m.sfda002 = '14'
      WHEN 'asft315'
           LET g_sfda_m.sfda002 = '15'
      WHEN 'asft321'
           LET g_sfda_m.sfda002 = '21'
      WHEN 'asft322'
           LET g_sfda_m.sfda002 = '22'
      WHEN 'asft323'
           LET g_sfda_m.sfda002 = '23'
      WHEN 'asft324'
           LET g_sfda_m.sfda002 = '24'
      WHEN 'asft325'
           LET g_sfda_m.sfda002 = '25'
      OTHERWISE
   END CASE
   
   #部门说明
   IF g_sfda_m.sfda002 = '15' OR g_sfda_m.sfda002 = '25' THEN  #製程中委外時，顯示名稱為委外廠商
      #帶值:廠商名稱
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = g_sfda_m.sfda003
      CALL cl_ref_val("v_pmaal004")
      LET g_sfda_m.sfda003_desc = g_chkparam.return1
      DISPLAY BY NAME g_sfda_m.sfda003_desc
   ELSE
      #帶值:部门名稱
      CALL s_desc_get_department_desc(g_sfda_m.sfda003) RETURNING g_sfda_m.sfda003_desc
      DISPLAY BY NAME g_sfda_m.sfda003_desc
   END IF
   
   #申请人说明
   CALL s_desc_get_person_desc(g_sfda_m.sfda004) RETURNING g_sfda_m.sfda004_desc
   DISPLAY BY NAME g_sfda_m.sfda004_desc
END FUNCTION]]>
  </point>
  <point name="function.asft310_chk_replace" order="74" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#取替代检查
PRIVATE FUNCTION asft310_chk_replace(p_column)
   DEFINE p_column         LIKE type_t.chr20
   DEFINE r_success        LIKE type_t.num5
   DEFINE l_bmea           RECORD LIKE bmea_t.*
   DEFINE l_cnt            LIKE type_t.num5
   DEFINE l_sfaa009        LIKE sfaa_t.sfaa009   #参考客户
   DEFINE l_sql            STRING
   DEFINE l_success        LIKE type_t.num5

   LET r_success = TRUE
   IF cl_null(g_sfdd_d[l_ac].sfdd001) THEN #替代料
      RETURN r_success
   END IF
   IF g_sfdd_d[l_ac].sfdd001 = g_sfdc4_d[g_detail_idx].sfdc004 THEN #发料等於需求料號，未做取替代
      RETURN r_success
   END IF
   
   #检查是否存在取替代料
   IF cl_null(g_sfdd_d[l_ac].sfdd013) THEN #替代料产品特征
      SELECT COUNT(*) INTO l_cnt FROM bmea_t
       WHERE bmeaent = g_enterprise
         AND bmeasite = g_site
         AND (
              (bmea001 =g_sfaa.sfaa010       #主件料號
               AND bmea002 = g_sfaa.sfaa011  #特性
               AND bmea003 = g_sfdc4_d[g_detail_idx].sfdc004  #元件料號
               AND bmea004 = g_sfdc4_d[g_detail_idx].sfba002  #部位
               AND bmea005 = g_sfdc4_d[g_detail_idx].sfba003  #作業
               AND bmea006 = g_sfdc4_d[g_detail_idx].sfba004  #製程序
               AND bmea008 = g_sfdd_d[l_ac].sfdd001)   #替代料
               OR 
              (bmea001 ='ALL' AND bmea003 = g_sfdc4_d[g_detail_idx].sfdc004   #主件、元件料號
               AND bmea008 = g_sfdd_d[l_ac].sfdd001)   #替代料
             )
         AND bmea009<= g_today
         AND (bmea010 > g_today OR bmea010 IS NULL )
   ELSE
      SELECT COUNT(*) INTO l_cnt FROM bmea_t
       WHERE bmeaent = g_enterprise
         AND bmeasite = g_site
         AND (
              (bmea001 =g_sfaa.sfaa010       #主件料號
               AND bmea002 = g_sfaa.sfaa011  #特性
               AND bmea003 = g_sfdc4_d[g_detail_idx].sfdc004  #元件料號
               AND bmea004 = g_sfdc4_d[g_detail_idx].sfba002  #部位
               AND bmea005 = g_sfdc4_d[g_detail_idx].sfba003  #作業
               AND bmea006 = g_sfdc4_d[g_detail_idx].sfba004  #製程序
               AND bmea008 = g_sfdd_d[l_ac].sfdd001    #替代料
               AND bmea019 = g_sfdd_d[l_ac].sfdd013)   #替代料产品特征
               OR 
              (bmea001 ='ALL' AND bmea003 = g_sfdc4_d[g_detail_idx].sfdc004   #主件、元件料號
               AND bmea008 = g_sfdd_d[l_ac].sfdd001)   #替代料
             )
         AND bmea009<= g_today
         AND (bmea010 > g_today OR bmea010 IS NULL )
   END IF
   IF l_cnt <= 0  THEN
      #輸入的資料不存在與 取替代料檔 中！，請檢查輸入是否正確，或至[產品結構維護作業abmm200]維護后，重新輸入！
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'abm-00088'
      LET g_errparam.extend = g_sfdd_d[l_ac].sfdd001
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success
   END IF

   IF p_column='sfdd001' THEN
      RETURN r_success   #sfdd013若尚未输入，下面元件中应该抓不到值的
   END IF
   #抓取替代档资料
   #LET l_sql = "SELECT * FROM bmea_t ",
   #            " WHERE bmeaent = ",g_enterprise,
   #            "   AND bmeasite = '",g_site,"' ",
   #            #"   AND bmea001 = '",p_item,"' ",     #主件料號
   #            #"   AND bmea002 = '",p_feature,"' ",  #特性
   #            #"   AND bmea003 = '",p_sitem,"' ",   #元件料號
   #            #"   AND bmea004 = '",p_bmea004,"' ",  #部位
   #            #"   AND bmea005 = '",p_bmea005,"' ",  #作業
   #            #"   AND bmea006 = '",p_bmea006,"' ",  #製程序
   #            #"   AND bmea008 = '",p_sitem_repl,"' ",  #替代料号
   #            "   AND ( ",
   #            "        (bmea001 = '",g_sfaa.sfaa010,"' ",       #主件料號
   #            "         AND bmea002 = '",g_sfaa.sfaa011,"' ",  #特性
   #            "         AND bmea003 = '",g_sfdc4_d[g_detail_idx].sfdc004,"' ",  #元件料號
   #            "         AND bmea004 = '",g_sfdc4_d[g_detail_idx].sfba002,"' ",  #部位
   #            "         AND bmea005 = '",g_sfdc4_d[g_detail_idx].sfba003,"' ",  #作業
   #            "         AND bmea006 = '",g_sfdc4_d[g_detail_idx].sfba004,"' ",  #製程序
   #            "         AND bmea008 = '",g_sfdd_d[l_ac].sfdd001,"') ",   #替代料
   #            "         OR ",
   #            "        (bmea001 ='ALL' AND bmea003 = '",g_sfdc4_d[g_detail_idx].sfdc004,"' ",   #主件、元件料號
   #            "         AND bmea008 = '",g_sfdd_d[l_ac].sfdd001,"') ",   #替代料
   #            "       ) ",
   #            "   AND bmea009<= '",g_today,"' ",
   #            "   AND (bmea010 > '",g_today,"' OR bmea010 IS NULL ) "
   #
   #DECLARE asft310_chk_replace_c1 SCROLL CURSOR FROM l_sql
   #IF SQLCA.sqlcode THEN
   #   #CALL cl_err('',SQLCA.sqlcode,1)
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code = SQLCA.sqlcode
   #   LET g_errparam.extend = ''
   #   LET g_errparam.popup = TRUE
   #   CALL cl_err()
   #   LET r_success = FALSE
   #   RETURN r_success
   #END IF
   #OPEN asft310_chk_replace_c1
   #IF SQLCA.sqlcode THEN
   #   #CALL cl_err('',SQLCA.sqlcode,1)
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code = SQLCA.sqlcode
   #   LET g_errparam.extend = ''
   #   LET g_errparam.popup = TRUE
   #   CALL cl_err()
   #   LET r_success = FALSE
   #   RETURN r_success
   #END IF
   #FETCH FIRST asft310_chk_replace_c1 INTO l_bmea.*
   #IF SQLCA.sqlcode THEN
   #   #CALL cl_err('',SQLCA.sqlcode,1)
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code = SQLCA.sqlcode
   #   LET g_errparam.extend = ''
   #   LET g_errparam.popup = TRUE
   #   CALL cl_err()
   #   LET r_success = FALSE
   #   RETURN r_success
   #END IF
   #CLOSE asft310_chk_replace_c1
   CALL s_asft310_get_bmea(g_sfaa.sfaa010,g_sfaa.sfaa011,g_sfdc4_d[g_detail_idx].sfdc004,g_sfdc4_d[g_detail_idx].sfba002,g_sfdc4_d[g_detail_idx].sfba003,g_sfdc4_d[g_detail_idx].sfba004,g_sfdd_d[l_ac].sfdd001,g_sfdd_d[l_ac].sfdd013)
      RETURNING l_success,l_bmea.*
   IF NOT l_success THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #替代料有限定客戶,需检查
   IF l_bmea.bmea014 = 'Y' THEN
      SELECT sfaa009 INTO l_sfaa009 FROM sfaa_t
       WHERE sfaaent   = g_enterprise
         AND sfaadocno = g_sfdc4_d[g_detail_idx].sfdc001
      IF NOT cl_null(l_sfaa009) THEN
         SELECT COUNT(*) INTO l_cnt FROM bmeb_t
          WHERE bmebent  = l_bmea.bmeaent
            AND bmebsite = l_bmea.bmeasite
            AND bmeb001  = l_bmea.bmea001
            AND bmeb002  = l_bmea.bmea002
            AND bmeb003  = l_bmea.bmea003
            AND bmeb004  = l_bmea.bmea004
            AND bmeb005  = l_bmea.bmea005
            AND bmeb006  = l_bmea.bmea006
            AND bmeb007  = l_bmea.bmea007
            AND bmeb008  = l_bmea.bmea008
            AND bmeb010  = l_bmea.bmea019
            AND bmeb009  = l_sfaa009
         IF l_cnt = 0 THEN
            #替代料已作限定客户控制，此客户不在客户限定范围内！请检查[产品结构取替代维护作业abmm211]！
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'asf-00344'
            LET g_errparam.extend = l_sfaa009
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asft310_get_sfdd007_replace" order="75" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#替换料件折合成元件的数量之总和
PRIVATE FUNCTION asft310_get_sfdd007_replace(p_cmd)
DEFINE p_cmd            LIKE type_t.chr1
DEFINE r_success        LIKE type_t.num5
DEFINE r_sfdd007        LIKE sfdd_t.sfdd007  #數量
DEFINE r_sfdd009        LIKE sfdd_t.sfdd009  #參考單位數量
DEFINE l_sql            STRING
DEFINE l_sfdd001        LIKE sfdd_t.sfdd001  #发料料号
DEFINE l_sfdd013        LIKE sfdd_t.sfdd013  #产品特征
DEFINE l_sfdd002        LIKE sfdd_t.sfdd002  #替代率
DEFINE l_sfdd006        LIKE sfdd_t.sfdd006  #单位
DEFINE l_sfdd007        LIKE sfdd_t.sfdd007  #数量
DEFINE l_sfdd008        LIKE sfdd_t.sfdd008  #参考单位
DEFINE l_sfdd009        LIKE sfdd_t.sfdd009  #参考数量
DEFINE l_success        LIKE type_t.num5
DEFINE l_rate1          LIKE sfdd_t.sfdd002  #对sfdc006单位的换算率
DEFINE l_rate2          LIKE sfdd_t.sfdd002  #对sfdc009参考单位的换算率

   LET r_success = TRUE
   LET r_sfdd007 = 0
   LET r_sfdd009 = 0
   
   IF cl_null(g_sfdd_d[l_ac].sfdd013) THEN LET g_sfdd_d[l_ac].sfdd013 = ' ' END IF  #替代料产品特征
   #获取除当笔以外其他所有同替代料的数量的总和
   LET l_sql = " SELECT sfdd001,sfdd013,sfdd002,sfdd006,sfdd007,sfdd008,sfdd009 FROM sfdd_t ",
               " WHERE sfddent   = ",g_enterprise,
               "   AND sfdddocno = '",g_sfda_m.sfdadocno,"' ",
               "   AND sfddseq   = ",g_sfdc4_d[g_detail_idx].sfdcseq,
               "   AND sfdd001   ='",g_sfdd_d[l_ac].sfdd001,"' "
   IF NOT cl_null(g_sfdd_d[l_ac].sfdd013) THEN
      LET l_sql = l_sql CLIPPED," AND sfdd013   ='",g_sfdd_d[l_ac].sfdd013,"' "
   END IF
   IF p_cmd = 'u' THEN
      LET l_sql = l_sql CLIPPED," AND sfddseq1 != ",g_sfdd_d_t.sfddseq1
   END IF
   PREPARE asft310_get_sfdd007_replace_p1 FROM l_sql
   DECLARE asft310_get_sfdd007_replace_c1 CURSOR FOR asft310_get_sfdd007_replace_p1
   FOREACH asft310_get_sfdd007_replace_c1 INTO l_sfdd001,l_sfdd013,l_sfdd002,l_sfdd006,l_sfdd007,l_sfdd008,l_sfdd009
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach asft310_get_sfdd007_replace_c1'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success,r_sfdd007,r_sfdd009
      END IF
      IF cl_null(l_sfdd007) THEN LET l_sfdd007 = 0 END IF
      IF cl_null(l_sfdd009) THEN LET l_sfdd009 = 0 END IF
      
      #取替代了,直接考虑取替代率
      LET l_sfdd007 = l_sfdd007 / l_sfdd002
      LET l_sfdd009 = l_sfdd009 / l_sfdd002
      
      #计算汇总数量
      LET r_sfdd007 = r_sfdd007 + l_sfdd007
      LET r_sfdd009 = r_sfdd009 + l_sfdd009
   END FOREACH
   
   #取当前编辑笔的数量
   #取替代了,直接考虑取替代率
   LET l_sfdd007 = g_sfdd_d[l_ac].sfdd007 / g_sfdd_d[l_ac].sfdd002
   LET l_sfdd009 = g_sfdd_d[l_ac].sfdd009 / g_sfdd_d[l_ac].sfdd002
   #计算汇总数量
   LET r_sfdd007 = r_sfdd007 + l_sfdd007
   LET r_sfdd009 = r_sfdd009 + l_sfdd009
   
   RETURN r_success,r_sfdd007,r_sfdd009
END FUNCTION]]>
  </point>
  <point name="function.asft310_del_inao" order="76" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION asft310_del_inao()
DEFINE r_success  LIKE type_t.num5

   LET r_success = TRUE

   DELETE FROM inao_t
    WHERE inaoent = g_enterprise AND inaosite = g_site
      AND inaodocno = g_sfda_m.sfdadocno
      AND inaoseq = g_sfdc4_d[g_detail_idx].sfdcseq #項次
      AND inaoseq1 = g_sfdd_d_t.sfddseq1 #项序
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "DELETE inao"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asft310_chk_feature2" order="77" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#检查传入特征可退数量（已发-已退-待退）
#add 141209
PRIVATE FUNCTION asft310_chk_feature2()
   DEFINE r_success  LIKE type_t.num5
   DEFINE l_imaa005  LIKE imaa_t.imaa005
   DEFINE l_sql      STRING
   DEFINE l_sfdd006  LIKE sfdd_t.sfdd006  #退料单位
   DEFINE l_sfdd007  LIKE sfdd_t.sfdd007  #发料数量
   DEFINE l_qty      LIKE sfdc_t.sfdc007  #此特征可退量
   DEFINE l_qty1     LIKE sfdc_t.sfdc007  #已发量
   DEFINE l_qty2     LIKE sfdc_t.sfdc007  #已退量
   DEFINE l_rate     LIKE inaj_t.inaj014  #单位换算率
   
   LET r_success = TRUE
   #做产品特征管理的料件检查该特征的退料量不可超过已发量
   IF cl_null(g_sfdc_d[l_ac].sfdc001) OR cl_null(g_sfdc_d[l_ac].sfdc002) OR cl_null(g_sfdc_d[l_ac].sfdc003)
   OR cl_null(g_sfdc_d[l_ac].sfdc004) OR cl_null(g_sfdc_d[l_ac].sfdc005) 
   OR cl_null(g_sfdc_d[l_ac].sfdc006)   #单位
   OR cl_null(g_sfdc_d[l_ac].sfdc007) OR g_sfdc_d[l_ac].sfdc007=0 THEN
      RETURN r_success
   END IF
   
   SELECT imaa005 INTO l_imaa005 FROM imaa_t 
    WHERE imaaent = g_enterprise
      AND imaa001 = g_sfdc_d[l_ac].sfdc004
   IF cl_null(l_imaa005) THEN
      RETURN r_success  #不做特征管理的不需要检查
   END IF
   
   #计算已发量，折算成此次退料的量
   LET l_sql = "SELECT sfdd006,SUM(sfdd007) ",
               "  FROM sfdd_t,sfdc_t,sfda_t ",
               " WHERE sfddent   = sfdcent ",
               "   AND sfdddocno = sfdcdocno ",
               "   AND sfddseq   = sfdcseq ",
               "   AND sfddent   = sfdaent ",
               "   AND sfdddocno = sfdadocno ",
               "   AND sfdcent   = ",g_enterprise,
               "   AND sfdc001   = '",g_sfdc_d[l_ac].sfdc001,"' ", #工单
               "   AND sfdc002   = ",g_sfdc_d[l_ac].sfdc002,         #项次
               "   AND sfdd001   = '",g_sfdc_d[l_ac].sfdc004,"' ",
               "   AND sfdd013   = '",g_sfdc_d[l_ac].sfdc005,"' ",
               "   AND sfdd012   = -1 ",   #发料
               "   AND sfdastus  = 'S' ",  #已扣帐的
               " GROUP BY sfdd006 "
   PREPARE asft310_chk_feature2_qty_p1 FROM l_sql
   DECLARE asft310_chk_feature2_qty_c1 CURSOR FOR asft310_chk_feature2_qty_p1
   LET l_qty1 = 0
   FOREACH asft310_chk_feature2_qty_c1 INTO l_sfdd006,l_sfdd007
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach asft310_chk_feature2_qty_c1 err'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         EXIT FOREACH
      END IF

      #统一折算成此次退料的单位进行计算
      IF l_sfdd006 != g_sfdc_d[l_ac].sfdc006 THEN   #发料单位，工单单位
         #mod 150101
         #CALL s_aimi190_get_convert(g_sfdc_d[l_ac].sfdc004,l_sfdd006,g_sfdc_d[l_ac].sfdc006)
         #  RETURNING l_success,l_rate
         #IF NOT l_success THEN
         #   LET l_rate = 1
         #END IF
         #LET l_sfdd007 = l_sfdd007 * l_rate  #发料数量
         CALL s_aooi250_convert_qty(g_sfdc_d[l_ac].sfdc004,l_sfdd006,g_sfdc_d[l_ac].sfdc006,l_sfdd007)
           RETURNING l_success,g_qty_t
         IF l_success THEN
            LET l_sfdd007 = g_qty_t
         END IF
         #mod 150101 end
      END IF
      
      LET l_qty1 = l_qty1 + l_sfdd007
   END FOREACH
   
   #计算已退量，折算成此次退料的量
   #  2.1其他退料单的
   LET l_sql = "SELECT sfdd006,SUM(sfdd007) ",
               " FROM sfdd_t,sfdc_t,sfda_t ",
               " WHERE sfddent   = sfdcent ",
               "   AND sfdddocno = sfdcdocno ",
               "   AND sfddseq   = sfdcseq ",
               "   AND sfddent   = sfdaent ",
               "   AND sfdddocno = sfdadocno ",
               "   AND sfdcent   = ",g_enterprise,
               "   AND sfdcdocno != '",g_sfda_m.sfdadocno,"' ",  #退料单号
               "   AND sfdc001   = '",g_sfdc_d[l_ac].sfdc001,"' ", #工单
               "   AND sfdc002   = ",g_sfdc_d[l_ac].sfdc002,         #项次
               "   AND sfdc003   = ",g_sfdc_d[l_ac].sfdc003,        #项序
               "   AND sfdd001   = '",g_sfdc_d[l_ac].sfdc004,"' ", #料号
               "   AND sfdd013   = '",g_sfdc_d[l_ac].sfdc005,"' ", #特征
               "   AND sfdd012   = 1 ",   #退料
               "   AND sfdastus != 'X' ", #作废
               " GROUP BY sfdd006 ",
               " UNION ",
   #  2.2本张退料单实体表中的
               "SELECT sfdc006,SUM(sfdc007) ",
               " FROM sfdc_t ",
               " WHERE sfdcent   = ",g_enterprise,
               "   AND sfdcdocno = '",g_sfda_m.sfdadocno,"' ",  #退料单号
               "   AND sfdc001   = '",g_sfdc_d[l_ac].sfdc001,"' ", #工单
               "   AND sfdc002   = ",g_sfdc_d[l_ac].sfdc002,         #项次
               "   AND sfdc003   = ",g_sfdc_d[l_ac].sfdc003,        #项序
               "   AND sfdc004   = '",g_sfdc_d[l_ac].sfdc004,"' ",  #料号
               "   AND sfdc005   = '",g_sfdc_d[l_ac].sfdc005,"' "   #特征
               IF NOT cl_null(g_sfdc_d_t.sfdcseq) AND g_sfdc_d_t.sfdcseq != 0 THEN  #排除当前笔
                  LET l_sql = l_sql CLIPPED," AND sfdcseq  != ",g_sfdc_d_t.sfdcseq
               END IF
               LET l_sql = l_sql CLIPPED," GROUP BY sfdc006 "
   PREPARE asft310_chk_feature2_qty_p2 FROM l_sql
   DECLARE asft310_chk_feature2_qty_c2 CURSOR FOR asft310_chk_feature2_qty_p2
   LET l_qty2 = 0
   FOREACH asft310_chk_feature2_qty_c2 INTO l_sfdd006,l_sfdd007
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach asft310_chk_feature2_qty_c2 err'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      #统一折算成此次退料的单位进行计算
      IF l_sfdd006 != g_sfdc_d[l_ac].sfdc006 THEN   #发料单位，工单单位
         #mod 150101
         #CALL s_aimi190_get_convert(g_sfdc_d[l_ac].sfdc004,l_sfdd006,g_sfdc_d[l_ac].sfdc006)
         #  RETURNING l_success,l_rate
         #IF NOT l_success THEN
         #   LET l_rate = 1
         #END IF
         #LET l_sfdd007 = l_sfdd007 * l_rate  #发料数量
         CALL s_aooi250_convert_qty(g_sfdc_d[l_ac].sfdc004,l_sfdd006,g_sfdc_d[l_ac].sfdc006,l_sfdd007)
           RETURNING l_success,g_qty_t
         IF l_success THEN
            LET l_sfdd007 = g_qty_t
         END IF
         #mod 150101 end
      END IF
      
      LET l_qty2 = l_qty2 + l_sfdd007
   END FOREACH
   
   LET l_qty = l_qty1-l_qty2  #已发-已退=此特征可退量l_qty
   IF l_qty < g_sfdc_d[l_ac].sfdc007 THEN
      #此特征总退料量不可大于已发料数量，最多可退量为%1
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00648'
      LET g_errparam.extend = g_sfdc_d[l_ac].sfdc005
      LET g_errparam.popup = TRUE
      LET g_errparam.replace[1] = l_qty
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asft310_show_sfda_ooff013" order="78" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#单头备注显示
#add 141222
PRIVATE FUNCTION asft310_show_sfda_ooff013()
   IF cl_null(g_sfda_m.sfdadocno) THEN
      RETURN
   END IF

   CALL s_aooi360_sel('6',g_sfda_m.sfdadocno,'','','','','','','','','','4')
      RETURNING l_success,g_sfda_m.sfda_ooff013
   DISPLAY BY NAME g_sfda_m.sfda_ooff013
END FUNCTION]]>
  </point>
  <point name="function.asft310_show_sfdc_ooff013" order="79" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#sfdc单身备注显示
#add 141222
PRIVATE FUNCTION asft310_show_sfdc_ooff013(p_ac)
   DEFINE p_ac        LIKE type_t.num5

   IF cl_null(g_sfda_m.sfdadocno) OR cl_null(g_sfdc_d[p_ac].sfdcseq) THEN
      RETURN
   END IF

   #bom单身备注
   CALL s_aooi360_sel('7',g_sfda_m.sfdadocno,g_sfdc_d[p_ac].sfdcseq,'','','','','','','','','4')
      RETURNING l_success,g_sfdc_d[p_ac].sfdc_ooff013
   DISPLAY BY NAME g_sfdc_d[l_ac].sfdc_ooff013
END FUNCTION]]>
  </point>
  <point name="function.asft310_show_sfdd_ooff013" order="80" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#单身备注显示
#141222
PRIVATE FUNCTION asft310_show_sfdd_ooff013(p_ac)
   DEFINE p_ac        LIKE type_t.num5

   IF cl_null(g_sfda_m.sfdadocno) OR cl_null(g_sfdc4_d[g_detail_idx].sfdcseq) OR cl_null(g_sfdd_d[p_ac].sfddseq1) THEN
      RETURN
   END IF

   #bom单身备注
   CALL s_aooi360_sel('7',g_sfda_m.sfdadocno,g_sfdc4_d[g_detail_idx].sfdcseq,g_sfdd_d[p_ac].sfddseq1,'','','','','','','','4')
      RETURNING l_success,g_sfdd_d[p_ac].sfdd_ooff013
   DISPLAY BY NAME g_sfdd_d[l_ac].sfdd_ooff013
END FUNCTION]]>
  </point>
  <point name="function.asft310_update_ooff_key" order="81" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#add 141222
PRIVATE FUNCTION asft310_update_ooff_key(p_type)
DEFINE p_type       LIKE type_t.chr1   #a:sfda修改引起（预留） c:sfdc修改引起 d:sfdd修改引起
DEFINE r_success    LIKE type_t.num5
DEFINE l_imaa009    LIKE imaa_t.imaa009  #产品分类
DEFINE l_ooff003    LIKE ooff_t.ooff003
DEFINE l_ooff004    LIKE ooff_t.ooff004

   LET r_success = TRUE

   CASE p_type
      WHEN "a"   #bmaa修改引起  预留，暂定单头key值不可修改
         #单头备注
         UPDATE ooff_t SET ooff002 = g_sfda_m.sfdadocno
          WHERE ooffent = g_enterprise AND ooff001 = '6'
            AND ooff002 = g_sfdadocno_t
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF

         #单身备注sfdd,sfdc
         UPDATE ooff_t SET ooff002 = g_sfda_m.sfdadocno
          WHERE ooffent = g_enterprise AND ooff001 = '7'
            AND ooff002 = g_sfdadocno_t
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
      WHEN "c"   #sfdc修改引起  预留，暂定单头key值不可修改
         #单身备注sfdd,sfdc
         LET l_ooff003 = g_sfdc_d_t.sfdcseq
         UPDATE ooff_t SET ooff003 = g_sfdc_d[l_ac].sfdcseq
          WHERE ooffent = g_enterprise AND ooff001 = '7'
            AND ooff002 = g_sfda_m.sfdadocno
            AND ooff003 = l_ooff003
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
      WHEN "d"   #bmba修改引起
         #单身备注sfdd
         LET l_ooff003 = g_sfdc4_d[g_detail_idx].sfdcseq
         LET l_ooff004 = g_sfdd_d_t.sfddseq1
         UPDATE ooff_t SET ooff004 = g_sfdd_d[l_ac].sfddseq1
          WHERE ooffent = g_enterprise AND ooff001 = '7'
            AND ooff002 = g_sfda_m.sfdadocno
            AND ooff003 = l_ooff003
            AND ooff004 = l_ooff004
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
   END CASE
   IF NOT r_success THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE ooff_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()
   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asft310_chk_13" order="82" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#欠料補料之工單有無欠料資訊
#add 141226
PRIVATE FUNCTION asft310_chk_13(p_workno)
   DEFINE p_workno      LIKE sfaa_t.sfaadocno  #工单单号
   DEFINE r_success     LIKE type_t.num5       #T:有 F：无
   DEFINE l_sql         STRING
   DEFINE l_sfba        RECORD LIKE sfba_t.*
   DEFINE l_sfaa049     LIKE sfaa_t.sfaa049
   DEFINE l_sfaa012     LIKE sfaa_t.sfaa012
   
   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   
   IF cl_null(p_workno) THEN
      LET r_success = TRUE
      RETURN r_success
   END IF
   
   LET l_sql = "SELECT sfba_t.*,sfaa049,sfaa012 FROM sfba_t,sfaa_t ",
               " WHERE sfaadocno = sfbadocno AND sfaaent = sfbaent ",
               "   AND sfbadocno = '",p_workno,"' ",
               "   AND sfbaent   = ",g_enterprise,
               "   AND sfba009  = 'N' ",          #倒扣料
               "   AND (sfba013 - sfba015) >0 ",  #应发-委外代买量>0
               "   AND sfba008 != '4' "           #非参考材料
   PREPARE asft310_chk_13_p FROM l_sql
   DECLARE asft310_chk_13_c CURSOR FOR asft310_chk_13_p
   FOREACH asft310_chk_13_c INTO l_sfba.*,l_sfaa049,l_sfaa012
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach asft310_chk_13_c err'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF
      
      CALL asft310_chk_13_detail(l_sfba.*,l_sfaa049,l_sfaa012) RETURNING l_success
      IF l_success THEN
         LET r_success = TRUE
         RETURN r_success
      END IF
   END FOREACH
   FREE asft310_chk_13_p
   
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asft310_chk_13_detail" order="83" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#工单单身明细有无欠料资讯
#add 141226
PRIVATE FUNCTION asft310_chk_13_detail(p_sfba,p_sfaa049,p_sfaa012)
   DEFINE p_sfba        RECORD LIKE sfba_t.*
   DEFINE p_sfaa049     LIKE sfaa_t.sfaa049    #已發套數
   DEFINE p_sfaa012     LIKE sfaa_t.sfaa012    #生產數量
   DEFINE r_success     LIKE type_t.num5       #T:有 F：无
   DEFINE issue_qty     LIKE sfba_t.sfba013
   DEFINE l_sfdc007     LIKE sfdc_t.sfdc007
   
   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   
   #计算发料单上已产生的发料数量
   #不用考虑不同单位、取替代,因为sfdc上的单位默认带出工单单位不能修改，sfdc上也不能增加取替代，在sfdd上才有这个功能
   SELECT SUM(sfdc007) INTO l_sfdc007 FROM sfdc_t
    WHERE sfdcent = g_enterprise
      AND sfdcdocno=g_sfda_m.sfdadocno
      AND sfdc001 = p_sfba.sfbadocno  #工单单号
      AND sfdc002 = p_sfba.sfbaseq    #工单项次
      AND sfdc003 = p_sfba.sfbaseq1   #工单项序
   IF cl_null(l_sfdc007 ) THEN LET l_sfdc007  = 0 END IF
   
   #工单单身某笔总共应发=应发-扣除委外代買量
   LET p_sfba.sfba013=p_sfba.sfba013-p_sfba.sfba015
   
   #欠料补料把已发套数中不足的部分补发出去
   IF p_sfaa049 = p_sfaa012 THEN  #已發套數=生產數量,即要把剩余
      #應發總數量-已發數量-发料单上已产生的发料数量
      LET issue_qty = p_sfba.sfba013 - p_sfba.sfba016 - l_sfdc007 
   ELSE
      LET issue_qty = p_sfaa049 * p_sfba.sfba010 / p_sfba.sfba011 - p_sfba.sfba016 - l_sfdc007 
   END IF
   
   #发料时的應發量 > 应发 - 已发
   IF issue_qty>(p_sfba.sfba013-p_sfba.sfba016) THEN
      LET issue_qty=(p_sfba.sfba013-p_sfba.sfba016)
   END IF
   
   IF issue_qty > 0 THEN #有欠料量
      LET r_success = TRUE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asft310_chk_sfda005" order="84" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 检查 PBI sfda005 值的合法性
# Memo...........:
# Usage..........: CALL asft310_chk_sfda005()
#                       RETURNING r_success
# Input parameter: NULL
# Return code....: r_success 检查通过否标识位
# Date & Author..: 2014-12-29 By zhangllc
# Modify.........:
################################################################################
PRIVATE FUNCTION asft310_chk_sfda005()
   DEFINE r_success      LIKE type_t.num5
   DEFINE l_sfqastus     LIKE sfqa_t.sfqastus
   DEFINE l_success      LIKE type_t.num5
   DEFINE l_errno        LIKE gzze_t.gzze001
   DEFINE l_cnt          LIKE type_t.num5

   WHENEVER ERROR CONTINUE
   LET r_success = FALSE

   SELECT sfqastus INTO l_sfqastus FROM sfqa_t
    WHERE sfqaent   = g_enterprise
      AND sfqadocno = g_sfda_m.sfda005
   CASE
      WHEN SQLCA.sqlcode = 100  LET l_errno = 'asf-00470'   #无此PBI编号
      WHEN l_sfqastus <> 'Y'    LET l_errno = 'sub-00180'   #此笔资料未审核
      OTHERWISE                 LET l_errno = SQLCA.SQLCODE USING '-----'
   END CASE
   IF NOT cl_null(l_errno) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = l_errno
      LET g_errparam.extend = g_sfda_m.sfda005
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN r_success
   END IF
   
   #检查单身是否有非本BPI的工单
   SELECT COUNT(*) INTO l_cnt FROM sfdb_t
    WHERE sfdbent   = g_enterprise
      AND sfdbdocno = g_sfda_m.sfdadocno
      AND sfdb001 NOT IN (SELECT UNIQUE sfqb001 FROM sfqb_t
                           WHERE sfqbent   = g_enterprise
                             AND sfqbdocno = g_sfda_m.sfda005 
                         )
   IF l_cnt > 0 THEN
      #单身已有工资料，与此PBI不匹配；请先删除单身
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00472'
      LET g_errparam.extend = g_sfda_m.sfda005
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN r_success
   END IF
   SELECT COUNT(*) INTO l_cnt FROM sfdc_t
    WHERE sfdcent   = g_enterprise
      AND sfdcdocno = g_sfda_m.sfdadocno
      AND sfdc001 NOT IN (SELECT UNIQUE sfqb001 FROM sfqb_t
                           WHERE sfqbent   = g_enterprise
                             AND sfqbdocno = g_sfda_m.sfda005 
                         )
   IF l_cnt > 0 THEN
      #单身已有工资料，与此PBI不匹配；请先删除单身
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00472'
      LET g_errparam.extend = g_sfda_m.sfda005
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN r_success
   END IF

   LET r_success = TRUE
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asft310_gen_b_sfda005" order="85" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 根据单头PBI编号自动产生单身资料
# Memo...........:
# Usage..........: CALL asft310_gen_b_sfda005()
# Input parameter: NULL
# Return code....: NULL
# Date & Author..: 2014/12/29 By zhangllc
# Modify.........:
################################################################################
PRIVATE FUNCTION asft310_gen_b_sfda005()
   DEFINE l_sfqb001   LIKE sfqb_t.sfqb001  #工單單號
   DEFINE l_sql       STRING
   DEFINE l_sfdb      RECORD LIKE sfdb_t.*
   DEFINE l_sfdc      RECORD LIKE sfdc_t.*
   
   WHENEVER ERROR CONTINUE
   
   IF cl_null(g_sfda_m.sfda005) THEN
      RETURN
   END IF
   
   #倒扣料和一般退料不预设
   IF g_sfda_m.sfda002='14' OR g_sfda_m.sfda002='23' OR g_sfda_m.sfda002= '24' THEN
      RETURN
   END IF
   
   #自动产生sfdb
   LET l_sql = "SELECT sfqb001 FROM sfqb_t ",
               " WHERE sfqbent   = ",g_enterprise,
               "   AND sfqbdocno = '",g_sfda_m.sfda005,"' "
   PREPARE asft310_gen_b_sfda005_p FROM l_sql
   DECLARE asft310_gen_b_sfda005_c CURSOR FOR asft310_gen_b_sfda005_p
   
   CALL cl_err_collect_init()
   #CALL s_transaction_begin()
   
   FOREACH asft310_gen_b_sfda005_c INTO l_sfqb001
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach asft310_gen_b_sfda005_c err'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF
      
      #检查是否存在工单中，且为发放状态
      IF NOT s_asft300_chk_stus(l_sfqb001,'F') THEN
         CONTINUE FOREACH
      END IF
       
      #欠料补料检查是否有需补料的
      IF g_sfda_m.sfda002 = '13' THEN
         IF NOT asft310_chk_13(l_sfqb001) THEN
            #无欠料，不需补料
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'asf-00665'
            LET g_errparam.extend = l_sfqb001
            LET g_errparam.popup = FALSE
            CALL cl_err()
            CONTINUE FOREACH
         END IF
      END IF

      INITIALIZE l_sfdb.* TO NULL
      LET l_sfdb.sfdbent   = g_enterprise   #企業編號
      LET l_sfdb.sfdbsite  = g_site         #營運據點
      LET l_sfdb.sfdbdocno = g_sfda_m.sfdadocno   #發退料單號
      LET l_sfdb.sfdb001   = l_sfqb001   #工單單號
      LET l_sfdb.sfdb002   = ''   #Run Card
      LET l_sfdb.sfdb003   = ' '   #部位
      LET l_sfdb.sfdb004   = ' '   #作業
      LET l_sfdb.sfdb005   = ' '   #作業序
      LET l_sfdb.sfdb006   = 0   #預計套數
      LET l_sfdb.sfdb007   = 0   #實際套數
      IF g_prog[1,6]='asft31' THEN
         LET l_sfdb.sfdb008 = -1  #正负 发料-1
      END IF
      IF g_prog[1,6]='asft32' THEN
         LET l_sfdb.sfdb008 = 1   #正负 退料1
      END IF

      #runcard
      SELECT sfca001 INTO l_sfdb.sfdb002 FROM sfca_t
       WHERE sfcaent = g_enterprise
         AND sfcasite= g_site
         AND sfcadocno=l_sfqb001   #工单单号
      
      #预计套数
      IF g_sfda_m.sfda002 = '11' THEN
         CALL s_asft310_get_max_set('a','11',g_sfda_m.sfdadocno,
                                    l_sfdb.sfdb001,l_sfdb.sfdb002,l_sfdb.sfdb003,
                                    l_sfdb.sfdb004,l_sfdb.sfdb005,
                                    '','','','','','')
            RETURNING l_sfdb.sfdb006
      ELSE
         LET l_sfdb.sfdb006 = 0
      END IF
      IF g_sfda_m.sfda002 = '15' THEN #制程中委外发料
         CALL s_asft310_get_max_set('a','15',g_sfda_m.sfdadocno,
                                    l_sfdb.sfdb001,l_sfdb.sfdb002,l_sfdb.sfdb003,
                                    l_sfdb.sfdb004,l_sfdb.sfdb005,
                                    '','','','','','')
            RETURNING l_sfdb.sfdb006
      END IF

      #实际套数
      IF g_sfda_m.sfda002 = '11' OR g_sfda_m.sfda002 = '21' THEN
         LET l_sfdb.sfdb007 = l_sfdb.sfdb006
      ELSE
         LET l_sfdb.sfdb007 = 0
      END IF
      
      INSERT INTO sfdb_t VALUES l_sfdb.*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'insert sfdb'
         LET g_errparam.popup = FALSE
         CALL cl_err()
         CONTINUE FOREACH
      END IF
   END FOREACH
   FREE asft310_gen_b_sfda005_p
   
   #CALL s_transaction_end('Y','0')
   CALL cl_err_collect_show()
END FUNCTION]]>
  </point>
  <point name="function.asft310_b_show" order="86" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#单身单笔的formonly显示
#150121 add
PRIVATE FUNCTION asft310_b_show(p_table,p_ac)
DEFINE p_table     LIKE type_t.chr4
DEFINE p_ac        LIKE type_t.num5
DEFINE l_sfba001   LIKE sfba_t.sfba001  #生产料号
DEFINE l_sfaa011   LIKE sfaa_t.sfaa011  #特性

   CASE p_table
      WHEN 'sfdb'
           #部位说明
           INITIALIZE g_chkparam.* TO NULL
           LET g_chkparam.arg1 = '215'
           LET g_chkparam.arg2 = g_sfdb_d[p_ac].sfdb003
           CALL cl_ref_val("v_oocql002")
           LET g_sfdb_d[p_ac].sfdb003_desc = g_chkparam.return1
     
           #作业说明
           INITIALIZE g_chkparam.* TO NULL
           LET g_chkparam.arg1 = '221'
           LET g_chkparam.arg2 = g_sfdb_d[p_ac].sfdb004
           CALL cl_ref_val("v_oocql002")
           LET g_sfdb_d[p_ac].sfdb004_desc = g_chkparam.return1
     
           SELECT sfaa010,imaal003,imaal004,sfaa013,sfaa012
             INTO g_sfdb_d[p_ac].sfaa010,g_sfdb_d[p_ac].sfaa010_desc,g_sfdb_d[p_ac].sfaa010_desc2,
                  g_sfdb_d[p_ac].sfaa013,g_sfdb_d[p_ac].sfaa012
             FROM sfaa_t LEFT JOIN imaal_t ON sfaaent = imaalent AND sfaa010 = imaal001 AND imaal002 = g_dlang
            WHERE sfaaent   = g_enterprise
              AND sfaasite  = g_site
              AND sfaadocno = g_sfdb_d[p_ac].sfdb001
      WHEN 'sfdc'
           #单位
           CALL s_desc_get_unit_desc(g_sfdc_d[p_ac].sfdc006) RETURNING g_sfdc_d[p_ac].sfdc006_desc
           
           #参考单位
           CALL s_desc_get_unit_desc(g_sfdc_d[p_ac].sfdc009) RETURNING g_sfdc_d[p_ac].sfdc009_desc
           
           #理由码
           INITIALIZE g_ref_fields TO NULL
           LET g_ref_fields[1] = g_sfdc_d[p_ac].sfdc015
           CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='226' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
           LET g_sfdc_d[p_ac].sfdc015_desc = '', g_rtn_fields[1] , ''
           
           #需求料号品名规格
           CALL s_desc_get_item_desc(g_sfdc_d[p_ac].sfdc004) RETURNING g_sfdc_d[p_ac].sfdc004_desc,g_sfdc_d[p_ac].sfdc004_desc2
           #显示产品特征说明
           CALL s_feature_description(g_sfdc_d[p_ac].sfdc004,g_sfdc_d[p_ac].sfdc005)
              RETURNING l_success,g_sfdc_d[p_ac].sfdc005_desc
           IF NOT l_success THEN
              LET g_sfdc_d[p_ac].sfdc005_desc = ''
           END IF

           #保税料
           SELECT imaf034
             INTO g_sfdc_d[p_ac].imaf034
             FROM imaf_t
            WHERE imafent = g_enterprise
              AND imafsite= g_site
              AND imaf001 = g_sfdc_d[p_ac].sfdc004
           
           #发料前调拨
           SELECT imae092 INTO g_sfdc_d[p_ac].imae092
             FROM imae_t
            WHERE imaeent = g_enterprise
              AND imaesite= g_site
              AND imae001 = g_sfdc_d[p_ac].sfdc004
           
           #差异数量
           LET g_sfdc_d[p_ac].diff  = g_sfdc_d[p_ac].sfdc007 - g_sfdc_d[p_ac].sfdc008
           #参考单位差异数量
           LET g_sfdc_d[p_ac].diff2 = g_sfdc_d[p_ac].sfdc010  - g_sfdc_d[p_ac].sfdc011
           
           #库位名称
           CALL s_desc_get_stock_desc(g_site,g_sfdc_d[p_ac].sfdc012) RETURNING g_sfdc_d[p_ac].sfdc012_desc
           
           #储位名称
           IF NOT cl_null(g_sfdc_d[p_ac].sfdc013) THEN
              CALL s_desc_get_locator_desc(g_site,g_sfdc_d[p_ac].sfdc012,g_sfdc_d[p_ac].sfdc013) RETURNING g_sfdc_d[p_ac].sfdc013_desc
           END IF

           #工单信息-部位、作业、作业序、客供料、应发料、已发量
           SELECT sfba002,sfba003,sfba004,sfba028,
                  sfba013,sfba016,sfba001,sfaa011
             INTO g_sfdc_d[p_ac].sfba002,g_sfdc_d[p_ac].sfba003,g_sfdc_d[p_ac].sfba004,g_sfdc_d[p_ac].sfba028,
                  g_sfdc_d[p_ac].sfba013,g_sfdc_d[p_ac].sfba016,l_sfba001,l_sfaa011
             FROM sfba_t,sfaa_t
            WHERE sfbaent = sfaaent
              AND sfbasite= sfaasite
              AND sfbadocno=sfaadocno
              AND sfbaent = g_enterprise
              AND sfbasite= g_site
              AND sfbadocno=g_sfdc_d[p_ac].sfdc001
              AND sfbaseq = g_sfdc_d[p_ac].sfdc002
              AND sfbaseq1= g_sfdc_d[p_ac].sfdc003

           #部位说明
           INITIALIZE g_chkparam.* TO NULL
           LET g_chkparam.arg1 = '215'
           LET g_chkparam.arg2 = g_sfdc_d[p_ac].sfba002
           CALL cl_ref_val("v_oocql002")
           LET g_sfdc_d[p_ac].sfba002_desc = g_chkparam.return1
           
           #作业说明
           INITIALIZE g_chkparam.* TO NULL
           LET g_chkparam.arg1 = '221'
           LET g_chkparam.arg2 = g_sfdc_d[p_ac].sfba003
           CALL cl_ref_val("v_oocql002")
           LET g_sfdc_d[p_ac].sfba003_desc = g_chkparam.return1
           
           #replace取替代建议
           CALL s_abmm201_get_proposal(g_site,l_sfba001,l_sfaa011,g_sfdc_d[p_ac].sfdc004,g_sfdc_d[p_ac].sfba002,g_sfdc_d[p_ac].sfba003,g_sfdc_d[p_ac].sfba004) RETURNING g_sfdc_d[p_ac].replace 
           
           CALL asft310_show_sfdc_ooff013(p_ac) #add 141222 备注说明
      WHEN 'sfdf'
           #发料料号
           CALL s_desc_get_item_desc(g_sfdf_d[p_ac].sfdf001) RETURNING g_sfdf_d[p_ac].sfdf001_desc,g_sfdf_d[p_ac].sfdf001_desc2
           #显示产品特征说明
           CALL s_feature_description(g_sfdf_d[p_ac].sfdf001,g_sfdf_d[p_ac].sfdf013)
              RETURNING l_success,g_sfdf_d[p_ac].sfdf013_desc
           IF NOT l_success THEN
              LET g_sfdf_d[p_ac].sfdf013_desc = ''
           END IF
     
           #库位
           INITIALIZE g_ref_fields TO NULL
           LET g_ref_fields[1] = g_site
           LET g_ref_fields[2] = g_sfdf_d[p_ac].sfdf003
           CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
           LET g_sfdf_d[p_ac].sfdf003_desc = '', g_rtn_fields[1] , ''
           DISPLAY BY NAME g_sfdf_d[p_ac].sfdf003_desc
     
           #储位
           IF NOT cl_null(g_sfdf_d[p_ac].sfdf004) THEN
              INITIALIZE g_ref_fields TO NULL
              LET g_ref_fields[1] = g_site
              LET g_ref_fields[2] = g_sfdf_d[p_ac].sfdf003
              LET g_ref_fields[3] = g_sfdf_d[p_ac].sfdf004
              CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inabsite=? AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
              LET g_sfdf_d[p_ac].sfdf004_desc = '', g_rtn_fields[1] , ''
              DISPLAY BY NAME g_sfdf_d[p_ac].sfdf004_desc
           END IF

           #单位
           CALL s_desc_get_unit_desc(g_sfdf_d[p_ac].sfdf006) RETURNING g_sfdf_d[p_ac].sfdf006_desc
           DISPLAY BY NAME g_sfdf_d[p_ac].sfdf006_desc
     
           #参考单位
           CALL s_desc_get_unit_desc(g_sfdf_d[p_ac].sfdf008) RETURNING g_sfdf_d[p_ac].sfdf008_desc
           DISPLAY BY NAME g_sfdf_d[p_ac].sfdf008_desc
      WHEN 'sfdd'
           #发料料号
           CALL s_desc_get_item_desc(g_sfdd_d[p_ac].sfdd001) RETURNING g_sfdd_d[p_ac].sfdd001_desc,g_sfdd_d[p_ac].sfdd001_desc2
           DISPLAY BY NAME g_sfdd_d[p_ac].sfdd001_desc
           DISPLAY BY NAME g_sfdd_d[p_ac].sfdd001_desc2
           #显示产品特征说明
           CALL s_feature_description(g_sfdd_d[p_ac].sfdd001,g_sfdd_d[p_ac].sfdd013)
              RETURNING l_success,g_sfdd_d[p_ac].sfdd013_desc
           IF NOT l_success THEN
              LET g_sfdd_d[p_ac].sfdd013_desc = ''
           END IF
           DISPLAY BY NAME g_sfdd_d[p_ac].sfdd013_desc
           
           #库位
           INITIALIZE g_ref_fields TO NULL
           LET g_ref_fields[1] = g_site
           LET g_ref_fields[2] = g_sfdd_d[p_ac].sfdd003
           CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
           LET g_sfdd_d[p_ac].sfdd003_desc = '', g_rtn_fields[1] , ''
           DISPLAY BY NAME g_sfdd_d[p_ac].sfdd003_desc

           #储位
           IF NOT cl_null(g_sfdd_d[p_ac].sfdd004) THEN
              INITIALIZE g_ref_fields TO NULL
              LET g_ref_fields[1] = g_site
              LET g_ref_fields[2] = g_sfdd_d[p_ac].sfdd003
              LET g_ref_fields[3] = g_sfdd_d[p_ac].sfdd004
              CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inabsite=? AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
              LET g_sfdd_d[p_ac].sfdd004_desc = '', g_rtn_fields[1] , ''
              DISPLAY BY NAME g_sfdd_d[p_ac].sfdd004_desc
           END IF

           #单位
           CALL s_desc_get_unit_desc(g_sfdd_d[p_ac].sfdd006) RETURNING g_sfdd_d[p_ac].sfdd006_desc
           DISPLAY BY NAME g_sfdd_d[p_ac].sfdd006_desc

           #参考单位
           CALL s_desc_get_unit_desc(g_sfdd_d[p_ac].sfdd008) RETURNING g_sfdd_d[p_ac].sfdd008_desc
           DISPLAY BY NAME g_sfdd_d[p_ac].sfdd008_desc
           
           CALL asft310_show_sfdd_ooff013(p_ac) #add 141222 备注说明
   END CASE

END FUNCTION]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE l_sfba001     LIKE sfba_t.sfba001
DEFINE l_sfaa011     LIKE sfaa_t.sfaa011]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="b_fill.sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #zll上面sql不对,这边本来可以重新赋值一下
      LET g_sql = "SELECT  UNIQUE sfdb001,sfdb002,sfdb003,'',sfdb004,'',sfdb005,'','','','','',sfdb006,sfdb007,sfdb008 FROM sfdb_t",   
                  #" INNER JOIN sfda_t ON sfdadocno = sfdbdocno AND sfdasite = sfdbsite AND sfdaent = sfdbent",
                  " WHERE sfdbent=? AND sfdbsite=? AND sfdbdocno=?"
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      #子單身的WC
      LET g_sql = g_sql, " ORDER BY sfdb_t.sfdb001,sfdb_t.sfdb002,sfdb_t.sfdb003,sfdb_t.sfdb004,sfdb_t.sfdb005"]]>
  </point>
  <point name="b_fill.sql2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #zll上面sql不对,这边本来可以重新赋值一下
      LET g_sql = "SELECT  UNIQUE sfdcseq,sfdc001,sfdc002,sfdc003,'','','','','','',sfdc004,'','',sfdc005,'','','',sfdc006,'','','',sfdc007,sfdc008,'',sfdc009,'',sfdc010,sfdc011,'',sfdc012,'',sfdc013,'',sfdc014,sfdc016,sfdc015,'',sfdc017,'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','' FROM sfdc_t",   
                  #" INNER JOIN sfda_t ON sfdadocno = sfdcdocno AND sfdasite = sfdcsite AND sfdaent = sfdcent ",
                  " LEFT JOIN sfdd_t ON sfdcent = sfddent AND sfdcsite = sfddsite AND sfdcdocno = sfdddocno AND sfdcseq = sfddseq ",
                  " WHERE sfdcent=? AND sfdcsite=? AND sfdcdocno=?"   
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      #子單身的WC
      IF NOT cl_null(g_wc2_table6) THEN 
         LET g_sql = g_sql CLIPPED," AND ", g_wc2_table6 CLIPPED
      END IF 
      LET g_sql = g_sql, " ORDER BY sfdc_t.sfdcseq"]]>
  </point>
  <point name="b_fill.sql3" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #zll上面sql不对,这边本来可以重新赋值一下
      LET g_sql = "SELECT  UNIQUE sfdeseq,sfde001,'','',sfde002,'','',sfde009,sfde003,'',sfde004,sfde005,'',sfde006,'',sfde007,sfde008,'',sfde010 FROM sfde_t",   
                  #" INNER JOIN sfda_t ON sfdadocno = sfdedocno AND sfdasite = sfdesite AND sfdaent = sfdeent ",
                  " LEFT JOIN sfdf_t ON sfdeent = sfdfent AND sfdesite = sfdfsite AND sfdedocno = sfdfdocno AND sfdeseq = sfdfseq ",
                  " WHERE sfdeent=? AND sfdesite=? AND sfdedocno=?"   
      IF NOT cl_null(g_wc2_table3) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
      END IF
      #子單身的WC
      IF NOT cl_null(g_wc2_table5) THEN 
         LET g_sql = g_sql CLIPPED," AND ", g_wc2_table5 CLIPPED
      END IF 
      LET g_sql = g_sql, " ORDER BY sfde_t.sfdeseq"]]>
  </point>
  <point name="b_fill.sql4" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #zll上面sql不对,这边本来可以重新赋值一下
      LET g_sql = "SELECT  UNIQUE inaoseq,inaoseq1,inaoseq2,inao000,inao001,'','',inao008,inao009,inao010,inao012 FROM inao_t",   
                  #" INNER JOIN sfda_t ON sfdadocno = inaodocno AND sfdasite = inaosite AND sfdaent = inaoent ",
                  " WHERE inaoent=? AND inaosite=? AND inaodocno=?"   
      IF NOT cl_null(g_wc2_table4) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
      END IF
      #子單身的WC
      LET g_sql = g_sql, " ORDER BY inao_t.inaoseq,inao_t.inaoseq1,inao_t.inaoseq2,inao_t.inao000"]]>
  </point>
  <point name="b_fill2.before_fill5" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         IF cl_null(g_detail_idx) OR g_detail_idx=0 THEN
            LET g_detail_idx = 1
         END IF]]>
  </point>
  <point name="b_fill2.before_fill6" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         IF cl_null(g_detail_idx) OR g_detail_idx=0 THEN
            LET g_detail_idx = 1
         END IF]]>
  </point>
  <point name="b_fill2.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         #zll foreach那边到sfdc017后面又重复了
]]>
  </point>
  <point name="b_fill2.fill5" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="b_fill3.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="b_fill4.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="browser_fill.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="browser_fill.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #部门
      IF g_browser[g_cnt].b_sfda002 != '15' THEN  #製程中委外發料時，顯示名稱為委外廠商
         #帶值:廠商名稱
         INITIALIZE g_chkparam.* TO NULL
         LET g_chkparam.arg1 = g_browser[g_cnt].b_sfda003
         CALL cl_ref_val("v_pmaal004")
         LET g_browser[g_cnt].b_sfda003_desc = g_chkparam.return1
         DISPLAY BY NAME g_browser[g_cnt].b_sfda003_desc
      ELSE
         #帶值:部门名稱
         CALL s_desc_get_department_desc(g_browser[g_cnt].b_sfda003) RETURNING g_browser[g_cnt].b_sfda003_desc
         DISPLAY BY NAME g_browser[g_cnt].b_sfda003_desc
      END IF]]>
  </point>
  <point name="browser_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="construct.a.page2.sfdc016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #库存管理特征
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdcsite ='",g_site,"' "
            CALL q_sfdc016()
            DISPLAY g_qryparam.return1 TO sfdc016
            NEXT FIELD sfdc016                     #返回原欄位]]>
  </point>
  <point name="construct.a.sfdadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="construct.b.page2.sfdc015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #理由码
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdcsite ='",g_site,"' "
            CALL q_sfdc015()
            DISPLAY g_qryparam.return1 TO sfdc015
            NEXT FIELD sfdc015                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.sfdb001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfaasite ='",g_site,"' "
            CALL q_sfaadocno_3()
            DISPLAY g_qryparam.return1 TO sfdb001
            NEXT FIELD sfdb001                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.sfdb002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #查询不提供开窗功能]]>
  </point>
  <point name="construct.c.page1.sfdb003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "215"
            LET g_qryparam.where = " sfaasite ='",g_site,"' "
            CALL q_oocq002_4()
            DISPLAY g_qryparam.return1 TO sfdb003
            NEXT FIELD sfdb003                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.sfdb004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "221"
            LET g_qryparam.where = " sfaasite ='",g_site,"' "
            CALL q_oocq002_4()
            DISPLAY g_qryparam.return1 TO sfdb004
            NEXT FIELD sfdb004                     #返回原欄位]]>
  </point>
  <point name="construct.c.page2.sfdc001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #工单单号
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfbasite ='",g_site,"' "
            CALL q_sfba001()
            DISPLAY g_qryparam.return1 TO sfdc001
            NEXT FIELD sfdc001                     #返回原欄位]]>
  </point>
  <point name="construct.c.page2.sfdc004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #需求料号
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdcsite ='",g_site,"' "
            CALL q_sfdc004()
            DISPLAY g_qryparam.return1 TO sfdc004
            NEXT FIELD sfdc004                     #返回原欄位]]>
  </point>
  <point name="construct.c.page2.sfdc005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #特征
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdcsite ='",g_site,"' "
            CALL q_sfdc005()
            DISPLAY g_qryparam.return1 TO sfdc005
            NEXT FIELD sfdc005                     #返回原欄位]]>
  </point>
  <point name="construct.c.page2.sfdc006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #单位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdcsite ='",g_site,"' "
            CALL q_sfdc006()
            DISPLAY g_qryparam.return1 TO sfdc006
            NEXT FIELD sfdc006                     #返回原欄位]]>
  </point>
  <point name="construct.c.page2.sfdc009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #单位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdcsite ='",g_site,"' "
            CALL q_sfdc009()
            DISPLAY g_qryparam.return1 TO sfdc009
            NEXT FIELD sfdc009                     #返回原欄位]]>
  </point>
  <point name="construct.c.page2.sfdc012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #库位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdcsite ='",g_site,"' "
            CALL q_sfdc012()
            DISPLAY g_qryparam.return1 TO sfdc012
            NEXT FIELD sfdc012                     #返回原欄位]]>
  </point>
  <point name="construct.c.page2.sfdc013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #储位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdcsite ='",g_site,"' "
            CALL q_sfdc013()
            DISPLAY g_qryparam.return1 TO sfdc013
            NEXT FIELD sfdc013                     #返回原欄位]]>
  </point>
  <point name="construct.c.page2.sfdc014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #批号
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdcsite ='",g_site,"' "
            CALL q_sfdc014()
            DISPLAY g_qryparam.return1 TO sfdc014
            NEXT FIELD sfdc014                     #返回原欄位]]>
  </point>
  <point name="construct.c.page3.sfde001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #需求料号
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdesite ='",g_site,"' "
            CALL q_sfde001()
            DISPLAY g_qryparam.return1 TO sfde001
            NEXT FIELD sfde001                     #返回原欄位]]>
  </point>
  <point name="construct.c.page3.sfde002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #特征
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdesite ='",g_site,"' "
            CALL q_sfde002()
            DISPLAY g_qryparam.return1 TO sfde002
            NEXT FIELD sfde002                     #返回原欄位]]>
  </point>
  <point name="construct.c.page3.sfde003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #单位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdesite ='",g_site,"' "
            CALL q_sfde003()
            DISPLAY g_qryparam.return1 TO sfde003
            NEXT FIELD sfde003                     #返回原欄位]]>
  </point>
  <point name="construct.c.page3.sfde006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #参考单位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdesite ='",g_site,"' "
            CALL q_sfde006()
            DISPLAY g_qryparam.return1 TO sfde006
            NEXT FIELD sfde006                     #返回原欄位]]>
  </point>
  <point name="construct.c.page5.sfdf001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #发料料号
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdfsite ='",g_site,"' "
            CALL q_sfdf001()
            DISPLAY g_qryparam.return1 TO sfdf001
            NEXT FIELD sfdf001                     #返回原欄位]]>
  </point>
  <point name="construct.c.page5.sfdf003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #库位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdfsite ='",g_site,"' "
            CALL q_sfdf003()
            DISPLAY g_qryparam.return1 TO sfdf003
            NEXT FIELD sfdf003                    #返回原欄位]]>
  </point>
  <point name="construct.c.page5.sfdf004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #储位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdfsite ='",g_site,"' "
            CALL q_sfdf004()
            DISPLAY g_qryparam.return1 TO sfdf004
            NEXT FIELD sfdf004                    #返回原欄位]]>
  </point>
  <point name="construct.c.page5.sfdf005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #批号
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdfsite ='",g_site,"' "
            CALL q_sfdf005()
            DISPLAY g_qryparam.return1 TO sfdf005
            NEXT FIELD sfdf005                    #返回原欄位]]>
  </point>
  <point name="construct.c.page5.sfdf006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #单位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdfsite ='",g_site,"' "
            CALL q_sfdf006()
            DISPLAY g_qryparam.return1 TO sfdf006
            NEXT FIELD sfdf006                    #返回原欄位]]>
  </point>
  <point name="construct.c.page5.sfdf008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #参考单位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdfsite ='",g_site,"' "
            CALL q_sfdf008()
            DISPLAY g_qryparam.return1 TO sfdf008
            NEXT FIELD sfdf008                    #返回原欄位]]>
  </point>
  <point name="construct.c.page5.sfdf010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #库存管理特征
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdfsite ='",g_site,"' "
            CALL q_sfdf010()
            DISPLAY g_qryparam.return1 TO sfdf010
            NEXT FIELD sfdf010                    #返回原欄位]]>
  </point>
  <point name="construct.c.page5.sfdf011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #包装容器
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfdfsite ='",g_site,"' "
            CALL q_sfdf011()
            DISPLAY g_qryparam.return1 TO sfdf011
            NEXT FIELD sfdf011                    #返回原欄位]]>
  </point>
  <point name="construct.c.page6.sfdd001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #发料料号
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfddsite ='",g_site,"' "
            CALL q_sfdd001()
            DISPLAY g_qryparam.return1 TO sfdd001
            NEXT FIELD sfdd001                    #返回原欄位]]>
  </point>
  <point name="construct.c.page6.sfdd003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #库位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfddsite ='",g_site,"' "
            CALL q_sfdd003()
            DISPLAY g_qryparam.return1 TO sfdd003
            NEXT FIELD sfdd003                    #返回原欄位]]>
  </point>
  <point name="construct.c.page6.sfdd004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #储位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfddsite ='",g_site,"' "
            CALL q_sfdd004()
            DISPLAY g_qryparam.return1 TO sfdd004
            NEXT FIELD sfdd004                    #返回原欄位]]>
  </point>
  <point name="construct.c.page6.sfdd005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #批号
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfddsite ='",g_site,"' "
            CALL q_sfdd005()
            DISPLAY g_qryparam.return1 TO sfdd005
            NEXT FIELD sfdd005                    #返回原欄位]]>
  </point>
  <point name="construct.c.page6.sfdd006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #单位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfddsite ='",g_site,"' "
            CALL q_sfdd006()
            DISPLAY g_qryparam.return1 TO sfdd006
            NEXT FIELD sfdd006                    #返回原欄位]]>
  </point>
  <point name="construct.c.page6.sfdd008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #参考单位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfddsite ='",g_site,"' "
            CALL q_sfdd008()
            DISPLAY g_qryparam.return1 TO sfdd008
            NEXT FIELD sfdd008                    #返回原欄位]]>
  </point>
  <point name="construct.c.page6.sfdd010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #库存管理特征
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfddsite ='",g_site,"' "
            CALL q_sfdd010()
            DISPLAY g_qryparam.return1 TO sfdd010
            NEXT FIELD sfdd010                    #返回原欄位]]>
  </point>
  <point name="construct.c.page6.sfdd011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #包装容器
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sfddsite ='",g_site,"' "
            CALL q_sfdd011()
            DISPLAY g_qryparam.return1 TO sfdd011
            NEXT FIELD sfdd011                    #返回原欄位]]>
  </point>
  <point name="construct.c.sfda003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CASE g_prog
               WHEN 'asft310'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('11','12','13','14','15')"
               WHEN 'asft311'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('11')"
               WHEN 'asft312'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('12')"
               WHEN 'asft313'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('13')"
               WHEN 'asft314'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('14')"
               WHEN 'asft315'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('15')"
               WHEN 'asft320'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('21','22','23','24','25')"
            END CASE
            CALL q_sfda003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfda003  #顯示到畫面上
            NEXT FIELD sfda003                     #返回原欄位]]>
  </point>
  <point name="construct.c.sfda004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfda004  #顯示到畫面上
            NEXT FIELD sfda004                     #返回原欄位]]>
  </point>
  <point name="construct.c.sfdadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CASE g_prog
               WHEN 'asft310'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('11','12','13','14','15')"
               WHEN 'asft311'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('11')"
               WHEN 'asft312'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('12')"
               WHEN 'asft313'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('13')"
               WHEN 'asft314'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('14')"
               WHEN 'asft315'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('15')"
               WHEN 'asft320'
                    LET g_qryparam.where = " sfdasite ='",g_site,"' AND sfda002 in ('21','22','23','24','25')"
            END CASE
            CALL q_sfdadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfdadocno  #顯示到畫面上
            NEXT FIELD sfdadocno                     #返回原欄位]]>
  </point>
  <point name="cs.after_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF cl_null(g_wc) THEN LET g_wc = " 1=1" END IF
   CASE g_prog
      WHEN 'asft310'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('11','12','13','14','15')"
      WHEN 'asft311'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('11')"
      WHEN 'asft312'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('12')"
      WHEN 'asft313'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('13')"
      WHEN 'asft314'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('14')"
      WHEN 'asft315'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('15')"
      WHEN 'asft320'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('21','22','23','24','25')"
   END CASE]]>
  </point>
  <point name="cs.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="cs.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="default_search.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CASE g_prog
      WHEN 'asft310'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('11','12','13','14','15')"
      WHEN 'asft311'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('11')"
      WHEN 'asft312'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('12')"
      WHEN 'asft313'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('13')"
      WHEN 'asft314'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('14')"
      WHEN 'asft315'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('15')"
      WHEN 'asft320'
           LET g_wc = g_wc CLIPPED," AND sfdasite ='",g_site,"' AND sfda002 in ('21','22','23','24','25')"
   END CASE]]>
  </point>
  <point name="default_search.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="default_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="delete_b.a_delete3" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #zll delete sfde 需同时delete sfdf]]>
  </point>
  <point name="free_style.variable" order="" ver="11" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[{<Module define>}

#單頭 type 宣告
 type type_g_sfda_m        RECORD
       sfdadocno LIKE sfda_t.sfdadocno,
   oobal004 LIKE type_t.chr80,
   sfdadocdt LIKE sfda_t.sfdadocdt,
   sfda001 LIKE sfda_t.sfda001,
   sfda002 LIKE sfda_t.sfda002,
   sfda003 LIKE sfda_t.sfda003,
   sfda003_desc LIKE type_t.chr80,
   sfda004 LIKE sfda_t.sfda004,
   sfda004_desc LIKE type_t.chr80,
   sfda005 LIKE sfda_t.sfda005,
   sfda015 LIKE sfda_t.sfda015,
   sfda014 LIKE sfda_t.sfda014,
   sfdastus LIKE sfda_t.sfdastus,
   sfda_ooff013     LIKE ooff_t.ooff013, #add 141222
   sfdaownid LIKE sfda_t.sfdaownid,
   sfdaownid_desc LIKE type_t.chr80,
   sfdaowndp LIKE sfda_t.sfdaowndp,
   sfdaowndp_desc LIKE type_t.chr80,
   sfdacrtid LIKE sfda_t.sfdacrtid,
   sfdacrtid_desc LIKE type_t.chr80,
   sfdacrtdp LIKE sfda_t.sfdacrtdp,
   sfdacrtdp_desc LIKE type_t.chr80,
   sfdacrtdt DATETIME YEAR TO SECOND,
   sfdamodid LIKE sfda_t.sfdamodid,
   sfdamodid_desc LIKE type_t.chr80,
   sfdamoddt DATETIME YEAR TO SECOND,
   sfdacnfid LIKE sfda_t.sfdacnfid,
   sfdacnfid_desc LIKE type_t.chr80,
   sfdacnfdt DATETIME YEAR TO SECOND,
   sfdapstid LIKE sfda_t.sfdapstid,
   sfdapstid_desc LIKE type_t.chr80,
   sfdapstdt DATETIME YEAR TO SECOND
       END RECORD

#單身 type 宣告
 TYPE type_g_sfdb_d        RECORD 
       sfdb001 LIKE sfdb_t.sfdb001,
   sfdb002 LIKE sfdb_t.sfdb002,
   sfdb003 LIKE sfdb_t.sfdb003,
   sfdb003_desc LIKE type_t.chr500,
   sfdb004 LIKE sfdb_t.sfdb004,
   sfdb004_desc LIKE type_t.chr500,
   sfdb005 LIKE sfdb_t.sfdb005,
   sfaa010 LIKE type_t.chr80,
   sfaa010_desc LIKE type_t.chr80,
   sfaa010_desc2 LIKE type_t.chr80,
   sfaa012 LIKE type_t.chr80,
   sfaa013 LIKE type_t.chr80,
   sfdb006 LIKE sfdb_t.sfdb006,
   sfdb007 LIKE sfdb_t.sfdb007,
   sfdb008 LIKE sfdb_t.sfdb008
       END RECORD
 TYPE type_g_sfdc_d RECORD
       sfdcseq LIKE sfdc_t.sfdcseq,
   sfdc001 LIKE sfdc_t.sfdc001,
   sfdc002 LIKE sfdc_t.sfdc002,
   sfdc003 LIKE sfdc_t.sfdc003,
   sfba002 LIKE sfba_t.sfba002,
   sfba002_desc LIKE type_t.chr500,
   sfba003 LIKE sfba_t.sfba003,
   sfba003_desc LIKE type_t.chr500,
   sfba004 LIKE sfba_t.sfba004,
   replace LIKE type_t.chr1,
   sfdc004 LIKE sfdc_t.sfdc004,
   sfdc004_desc LIKE type_t.chr500,
   sfdc004_desc2 LIKE type_t.chr500,
   sfdc005 LIKE sfdc_t.sfdc005,
   sfdc005_desc LIKE type_t.chr500,
   imaf034 LIKE imaf_t.imaf034,
   imae092 LIKE imae_t.imae092,
   sfba028 LIKE sfba_t.sfba028,
   sfdc006 LIKE sfdc_t.sfdc006,
   sfdc006_desc LIKE type_t.chr500,
   sfba013 LIKE sfba_t.sfba013,
   sfba016 LIKE sfba_t.sfba016,
   sfdc007 LIKE sfdc_t.sfdc007,
   sfdc008 LIKE sfdc_t.sfdc008,
   diff LIKE sfdc_t.sfdc007,
   sfdc009 LIKE sfdc_t.sfdc009,
   sfdc009_desc LIKE type_t.chr500,
   sfdc010 LIKE sfdc_t.sfdc010,
   sfdc011 LIKE sfdc_t.sfdc011,
   diff2 LIKE sfdc_t.sfdc007,
   sfdc012 LIKE sfdc_t.sfdc012,
   sfdc012_desc LIKE type_t.chr500,
   sfdc013 LIKE sfdc_t.sfdc013,
   sfdc013_desc LIKE type_t.chr500,
   sfdc014 LIKE sfdc_t.sfdc014,
   sfdc016 LIKE sfdc_t.sfdc016,
   sfdc015 LIKE sfdc_t.sfdc015,
   sfdc015_desc LIKE type_t.chr500,
   sfdc017 LIKE sfdc_t.sfdc017,
   sfdc_ooff013     LIKE ooff_t.ooff013  #add 141222
       END RECORD

 TYPE type_g_sfde_d RECORD
       sfdeseq LIKE sfde_t.sfdeseq,
   sfde001 LIKE sfde_t.sfde001,
   sfde001_desc LIKE type_t.chr500,
   sfde001_desc2 LIKE type_t.chr80,
   sfde002 LIKE sfde_t.sfde002,
   sfde002_desc LIKE type_t.chr500,
   imaf034 LIKE imaf_t.imaf034,
   imae092 LIKE imae_t.imae092,
   sfde009 LIKE sfde_t.sfde009,
   sfde003 LIKE sfde_t.sfde003,
   sfde003_desc LIKE type_t.chr500,
   sfde004 LIKE sfde_t.sfde004,
   sfde005 LIKE sfde_t.sfde005,
   diff03 LIKE type_t.chr80,
   sfde006 LIKE sfde_t.sfde006,
   sfde006_desc LIKE type_t.chr500,
   sfde007 LIKE sfde_t.sfde007,
   sfde008 LIKE sfde_t.sfde008,
   diff23 LIKE type_t.chr80,
   sfde010 LIKE sfde_t.sfde010
       END RECORD

 TYPE type_g_sfdc4_d RECORD
       sfdcseq LIKE sfdc_t.sfdcseq,
   sfdc001 LIKE sfdc_t.sfdc001,
   sfdc002 LIKE sfdc_t.sfdc002,
   sfdc003 LIKE sfdc_t.sfdc003,
   sfba002 LIKE sfba_t.sfba002,
   sfba002_desc LIKE type_t.chr500,
   sfba003 LIKE sfba_t.sfba003,
   sfba003_desc LIKE type_t.chr500,
   sfba004 LIKE sfba_t.sfba004,
   replace LIKE type_t.chr1,
   sfdc004 LIKE sfdc_t.sfdc004,
   sfdc004_desc LIKE type_t.chr500,
   sfdc004_desc2 LIKE type_t.chr500,
   sfdc005 LIKE sfdc_t.sfdc005,
   sfdc005_desc LIKE type_t.chr500,
   imaf034 LIKE imaf_t.imaf034,
   imae092 LIKE imae_t.imae092,
   sfba028 LIKE sfba_t.sfba028,
   sfdc006 LIKE sfdc_t.sfdc006,
   sfdc006_desc LIKE type_t.chr500,
   sfba013 LIKE sfba_t.sfba013,
   sfba016 LIKE sfba_t.sfba016,
   sfdc007 LIKE sfdc_t.sfdc007,
   sfdc008 LIKE sfdc_t.sfdc008,
   diff LIKE sfdc_t.sfdc007,
   sfdc009 LIKE sfdc_t.sfdc009,
   sfdc009_desc LIKE type_t.chr500,
   sfdc010 LIKE sfdc_t.sfdc010,
   sfdc011 LIKE sfdc_t.sfdc011,
   diff2 LIKE sfdc_t.sfdc007,
   sfdc012 LIKE sfdc_t.sfdc012,
   sfdc012_desc LIKE type_t.chr500,
   sfdc013 LIKE sfdc_t.sfdc013,
   sfdc013_desc LIKE type_t.chr500,
   sfdc014 LIKE sfdc_t.sfdc014,
   sfdc016 LIKE sfdc_t.sfdc016,
   sfdc015 LIKE sfdc_t.sfdc015,
   sfdc015_desc LIKE type_t.chr500,
   sfdc017 LIKE sfdc_t.sfdc017,
   sfdc_ooff013     LIKE ooff_t.ooff013  #add 141222
       END RECORD

 TYPE type_g_sfdf_d RECORD
       sfdfseq1 LIKE sfdf_t.sfdfseq1,
   sfdf001 LIKE sfdf_t.sfdf001,
   sfdf001_desc LIKE type_t.chr80,
   sfdf001_desc2 LIKE type_t.chr80,
   sfdf013 LIKE sfdf_t.sfdf013,
   sfdf013_desc LIKE type_t.chr80,
   sfdf002 LIKE sfdf_t.sfdf002,
   sfdf003 LIKE sfdf_t.sfdf003,
   sfdf003_desc LIKE type_t.chr500,
   sfdf004 LIKE sfdf_t.sfdf004,
   sfdf004_desc LIKE type_t.chr500,
   sfdf005 LIKE sfdf_t.sfdf005,
   sfdf010 LIKE sfdf_t.sfdf010,
   sfdf006 LIKE sfdf_t.sfdf006,
   sfdf006_desc LIKE type_t.chr500,
   sfdf007 LIKE sfdf_t.sfdf007,
   sfdf008 LIKE sfdf_t.sfdf008,
   sfdf008_desc LIKE type_t.chr500,
   sfdf009 LIKE sfdf_t.sfdf009,
   sfdf011 LIKE sfdf_t.sfdf011,
   sfdf012 LIKE sfdf_t.sfdf012
       END RECORD

 TYPE type_g_sfdd_d RECORD
       sfddseq1 LIKE sfdd_t.sfddseq1,
   sfdd001 LIKE sfdd_t.sfdd001,
   sfdd001_desc LIKE type_t.chr500,
   sfdd001_desc2 LIKE type_t.chr80,
   sfdd013 LIKE sfdd_t.sfdd013,
   sfdd013_desc LIKE type_t.chr500,
   sfdd002 LIKE sfdd_t.sfdd002,
   sfdd003 LIKE sfdd_t.sfdd003,
   sfdd003_desc LIKE type_t.chr500,
   sfdd004 LIKE sfdd_t.sfdd004,
   sfdd004_desc LIKE type_t.chr500,
   sfdd005 LIKE sfdd_t.sfdd005,
   sfdd010 LIKE sfdd_t.sfdd010,
   sfdd006 LIKE sfdd_t.sfdd006,
   sfdd006_desc LIKE type_t.chr500,
   sfdd007 LIKE sfdd_t.sfdd007,
   sfdd008 LIKE sfdd_t.sfdd008,
   sfdd008_desc LIKE type_t.chr500,
   sfdd009 LIKE sfdd_t.sfdd009,
   sfdd011 LIKE sfdd_t.sfdd011,
   sfdd012 LIKE sfdd_t.sfdd012,
   sfdd_ooff013     LIKE ooff_t.ooff013  #add 141222
       END RECORD

 TYPE type_g_inao_d RECORD
       inaoseq LIKE inao_t.inaoseq,
   inaoseq1 LIKE inao_t.inaoseq1,
   inaoseq2 LIKE inao_t.inaoseq2,
   inao000 LIKE inao_t.inao000,
   inao001 LIKE inao_t.inao001,
   inao001_desc LIKE type_t.chr500,
   inao001_desc2 LIKE type_t.chr80,
   inao008 LIKE inao_t.inao008,
   inao009 LIKE inao_t.inao009,
   inao010 LIKE inao_t.inao010,
   inao012 LIKE inao_t.inao012
       END RECORD



#模組變數(Module Variables)
DEFINE g_sfda_m          type_g_sfda_m
DEFINE g_sfda_m_t        type_g_sfda_m

   DEFINE g_sfdadocno_t LIKE sfda_t.sfdadocno


DEFINE g_sfdb_d          DYNAMIC ARRAY OF type_g_sfdb_d
DEFINE g_sfdb_d_t        type_g_sfdb_d
DEFINE g_sfdb_d_o        type_g_sfdb_d
DEFINE g_sfdc_d   DYNAMIC ARRAY OF type_g_sfdc_d
DEFINE g_sfdc_d_t        type_g_sfdc_d
DEFINE g_sfdc_d_o        type_g_sfdc_d

DEFINE g_sfde_d   DYNAMIC ARRAY OF type_g_sfde_d
DEFINE g_sfde_d_t type_g_sfde_d

DEFINE g_sfdc4_d   DYNAMIC ARRAY OF type_g_sfdc4_d
DEFINE g_sfdc4_d_t type_g_sfdc4_d

DEFINE g_sfdf_d   DYNAMIC ARRAY OF type_g_sfdf_d
DEFINE g_sfdf_d_t type_g_sfdf_d
DEFINE g_sfdf_d_o type_g_sfdf_d

DEFINE g_sfdd_d   DYNAMIC ARRAY OF type_g_sfdd_d
DEFINE g_sfdd_d_t type_g_sfdd_d
DEFINE g_sfdd_d_o type_g_sfdd_d

DEFINE g_inao_d   DYNAMIC ARRAY OF type_g_inao_d
DEFINE g_inao_d_t type_g_inao_d



DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位
         b_statepic     LIKE type_t.chr50,
            b_sfdadocno LIKE sfda_t.sfdadocno,
      b_sfdadocdt LIKE sfda_t.sfdadocdt,
      b_sfda001 LIKE sfda_t.sfda001,
      b_sfda002 LIKE sfda_t.sfda002,
      b_sfda003 LIKE sfda_t.sfda003,
   b_sfda003_desc LIKE type_t.chr80,
      b_sfda004 LIKE sfda_t.sfda004,
   b_sfda004_desc LIKE type_t.chr80,
      b_sfda005 LIKE sfda_t.sfda005
         #,rank           LIKE type_t.num10
      END RECORD

DEFINE g_browser_f  RECORD    #資料瀏覽之欄位
         b_statepic     LIKE type_t.chr50,
            b_sfdadocno LIKE sfda_t.sfdadocno,
      b_sfdadocdt LIKE sfda_t.sfdadocdt,
      b_sfda001 LIKE sfda_t.sfda001,
      b_sfda002 LIKE sfda_t.sfda002,
      b_sfda003 LIKE sfda_t.sfda003,
   b_sfda003_desc LIKE type_t.chr80,
      b_sfda004 LIKE sfda_t.sfda004,
   b_sfda004_desc LIKE type_t.chr80,
      b_sfda005 LIKE sfda_t.sfda005
         #,rank           LIKE type_t.num10
      END RECORD

DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
DEFINE g_wc2_table3   STRING
DEFINE g_wc2_table5   STRING
DEFINE g_wc2_table6   STRING

DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING

DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10
DEFINE g_jump                LIKE type_t.num10
DEFINE g_no_ask              LIKE type_t.num5
DEFINE g_rec_b               LIKE type_t.num5
DEFINE l_ac                  LIKE type_t.num5
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
DEFINE g_aw                  STRING                        #確定當下點擊的單身

DEFINE g_pagestart           LIKE type_t.num5
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING

DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)

DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位

DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page

DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5

DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢

{</Module define>}]]>
  </point>
  <point name="global.import" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[IMPORT util
#IMPORT FGL sub_s_lot]]>
  </point>
  <point name="global.memo" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#  memo.......: 1.g_sfdc_d[n].sfba028栏位只有在超領工單領工單不存在的料件时，才会是空的，否则不应该空，应查看工单资料是否正确
#                 各表间联动等应注意为null的情况
#               2.sfdc009 参考单位，当参数或料件设置为不做参考单位管理时，会有null的情况
#                 各表间联动等应注意为null的情况
#141204 料件做产品特征管理时，产品特征栏位不允许空白
#       发退料的产品特征要控制住对应的特征数量，否则容易造成库存错乱
#141211 asft310_01原沒有庫位的就不會產生到單身
#       改成
#       沒有庫位資料的也產生到單身去，只是實際數量為0，然後要可以確認、過帳
#       （实务说明：申請的人輸入單據，確認；到倉庫那確實沒有庫存，那實際量就0，其他的有庫存還是要發）
#141222 增加单头单身备注
#141226 欠料補料輸入工單時，如果無欠料資訊請提出警示，並不允許輸入，如輸入後在自動產生申請資料時，如果找不到資料也給提示
#150101 单位转换率改写
#150107 补足仓储批开窗管控，工单指定的开窗筛选，不可直接为空格
#150109 提高效能
#150115 对数量做单位取位
#150121 因150109提高效能，单身进入的显示，需重新获取下信息
#150304 检查工单的开单日期是否大于等于发退料的单据日期
#150309 在申请数量处增加欠料补料的检查]]>
  </point>
  <point name="global.variable" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_docdt               LIKE type_t.dat
DEFINE l_success             LIKE type_t.num5
DEFINE l_success_tot         LIKE type_t.num5
DEFINE g_para                LIKE type_t.chr80
DEFINE g_ref_unit            LIKE type_t.chr1   #是否启用参考单位
DEFINE g_ooba002             LIKE ooba_t.ooba002  #单别
DEFINE g_sfaa                RECORD LIKE sfaa_t.*  #工单单头

DEFINE la_param  RECORD
         prog   STRING,
         param  DYNAMIC ARRAY OF STRING
                END RECORD
DEFINE ls_js  STRING

GLOBALS
   DEFINE g_d_idx_display   LIKE type_t.num5   #製造批序號明細所在筆數
   DEFINE g_d_cnt_display   LIKE type_t.num5   #製造批序號明細總筆數
   DEFINE g_appoint_idx     LIKE type_t.num5   #指定進入單身行數
END GLOBALS

DEFINE g_sfdc012_switch   LIKE type_t.chr1   #庫位        可输入性 Y可输入 N不可输入
DEFINE g_sfdc013_switch   LIKE type_t.chr1   #儲位        可输入性 Y可输入 N不可输入
DEFINE g_sfdc014_switch   LIKE type_t.chr1   #批號        可输入性 Y可输入 N不可输入
DEFINE g_sfdc016_switch   LIKE type_t.chr1   #庫存管理特徵 可输入性 Y可输入 N不可输入

DEFINE g_sfdf003_switch   LIKE type_t.chr1   #庫位        可输入性 Y可输入 N不可输入
DEFINE g_sfdf004_switch   LIKE type_t.chr1   #儲位        可输入性 Y可输入 N不可输入
DEFINE g_sfdf005_switch   LIKE type_t.chr1   #批號        可输入性 Y可输入 N不可输入
DEFINE g_sfdf010_switch   LIKE type_t.chr1   #庫存管理特徵 可输入性 Y可输入 N不可输入

DEFINE g_sfdd003_switch   LIKE type_t.chr1   #庫位        可输入性 Y可输入 N不可输入 add 141211
DEFINE g_sfdd004_switch   LIKE type_t.chr1   #儲位        可输入性 Y可输入 N不可输入
DEFINE g_sfdd005_switch   LIKE type_t.chr1   #批號        可输入性 Y可输入 N不可输入
DEFINE g_sfdd010_switch   LIKE type_t.chr1   #庫存管理特徵 可输入性 Y可输入 N不可输入

DEFINE g_qty_t          LIKE sfdc_t.sfdc007  #add 150101数量 中间变量
DEFINE g_ooca002     LIKE ooca_t.ooca002  #小數位數  #add 150115
DEFINE g_ooca004     LIKE ooca_t.ooca004  #捨入類型  #add 150115]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_prog[1,6] = 'asft31' THEN
      CALL cl_set_combo_scc_part('sfda002','4013','11,12,13,14,15')
   END IF
   #當整體參數有使用參考單位時才顯示
   IF g_ref_unit = 'N' THEN
      CALL cl_set_comp_visible("sfdc009,sfdc010,sfdc011",FALSE) #參考單位
   END IF]]>
  </point>
  <point name="input.a.page2.sfdc001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfdb2_d[l_ac].sfdc001) THEN
               IF g_sfda_m.sfda002='11' OR g_sfda_m.sfda002='13' OR g_sfda_m.sfda002='21' THEN
                  #检查工单需存在发料套数单身
                  SELECT COUNT(*) INTO l_cnt FROM sfdb_t
                   WHERE sfdbent = g_enterprise
                     AND sfdbsite= g_site
                     AND sfdbdocno=g_sfda_m.sfdadocno
                     AND sfdb001 = g_sfdb2_d[l_ac].sfdc001
                  IF l_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00043'
                     LET g_errparam.extend = g_sfdb2_d[l_ac].sfdc001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     NEXT FIELD CURRENT
                  END IF
               ELSE
                  #检查是否存在工单中，且为发放状态
                  IF NOT s_asft300_chk_stus(g_sfdb2_d[l_ac].sfdc001,'F') THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF NOT cl_null(g_sfdb2_d[l_ac].sfdc002) AND NOT cl_null(g_sfdb2_d[l_ac].sfdc003) THEN
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdb2_d[l_ac].sfdc001 != g_sfdb2_d_t.sfdc001)) THEN
                     CALL asft310_sfdc003_reference(l_cmd) RETURNING l_success
                     IF NOT l_success THEN
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            
            CALL asft310_set_no_entry_b_sfdc(l_cmd)]]>
  </point>
  <point name="input.a.page2.sfdc002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfdb2_d[l_ac].sfdc002) THEN
               IF NOT cl_null(g_sfdb2_d[l_ac].sfdc001) THEN
                  #工单号号+项次需存在工单项次中
                  SELECT COUNT(*) INTO l_cnt FROM sfba_t
                   WHERE sfbaent = g_enterprise
                     AND sfbasite= g_site
                     AND sfbadocno=g_sfdb2_d[l_ac].sfdc001
                     AND sfbaseq = g_sfdb2_d[l_ac].sfdc002
                  LET l_cnt_t = l_cnt
                  IF l_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00044'
                     LET g_errparam.extend = g_sfdb2_d[l_ac].sfdc001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF NOT cl_null(g_sfdb2_d[l_ac].sfdc001) AND NOT cl_null(g_sfdb2_d[l_ac].sfdc003) THEN
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdb2_d[l_ac].sfdc002 != g_sfdb2_d_t.sfdc002)) THEN
                     CALL asft310_sfdc003_reference(l_cmd) RETURNING l_success
                     IF NOT l_success THEN
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            
            CALL asft310_set_no_entry_b_sfdc(l_cmd)]]>
  </point>
  <point name="input.a.page2.sfdc003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfdb2_d[l_ac].sfdc003) THEN
               IF NOT cl_null(g_sfdb2_d[l_ac].sfdc001) AND NOT cl_null(g_sfdb2_d[l_ac].sfdc002) THEN
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfdb2_d[l_ac].sfdc003 != g_sfdb2_d_t.sfdc003)) THEN
                     CALL asft310_sfdc003_reference(l_cmd) RETURNING l_success
                     IF NOT l_success THEN
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF

            CALL asft310_set_no_entry_b_sfdc(l_cmd)]]>
  </point>
  <point name="input.a.page2.sfdc007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #申请数量
            IF NOT cl_null(g_sfdb2_d[l_ac].sfdc007) THEN
               #不可小于等于0
               IF g_sfdb2_d[l_ac].sfdc007 <= 0 THEN
                  #资料不可小于等于0,请检查！请录入大于0的资料
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axc-00025'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD CURRENT
               END IF
               #检查是否可超过 可发数量
               IF NOT asft310_chk_sfdc007(l_cmd) THEN
                  NEXT FIELD CURRENT
               END IF
               #更新相关栏位-差异数量
               LET g_sfdb2_d[l_ac].diff = g_sfdb2_d[l_ac].sfdc007 - g_sfdb2_d[l_ac].sfdc008
               #更新相关栏位-参考单位申请数量，参考单位差异数量
               IF NOT cl_null(g_sfdb2_d[l_ac].sfdc009) THEN
                  #参考单位申请数量=申请数量经过转换率换算为参考单位的数量
                  CALL s_aimi190_get_convert(g_sfdb2_d[l_ac].sfdc004,g_sfdb2_d[l_ac].sfdc006,g_sfdb2_d[l_ac].sfdc009) RETURNING l_success,l_rate
                  IF NOT l_success THEN
                     LET l_rate = 1
                  END IF
                  LET g_sfdb2_d[l_ac].sfdc010 = g_sfdb2_d[l_ac].sfdc007 * l_rate
                  LET g_sfdb2_d[l_ac].diff2 = g_sfdb2_d[l_ac].sfdc010  - g_sfdb2_d[l_ac].sfdc011  #参考单位差异数量
               END IF
            END IF]]>
  </point>
  <point name="input.a.page2.sfdc011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.page2.sfdc014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #批号]]>
  </point>
  <point name="input.a.page2.sfdc016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfdb2_d[l_ac].sfdc016) THEN
               IF cl_null(g_sfdb2_d[l_ac].sfdc012) THEN LET g_sfdb2_d[l_ac].sfdc012=' ' END IF
               IF cl_null(g_sfdb2_d[l_ac].sfdc013) THEN LET g_sfdb2_d[l_ac].sfdc013=' ' END IF
               IF cl_null(g_sfdb2_d[l_ac].sfdc014) THEN LET g_sfdb2_d[l_ac].sfdc014=' ' END IF
               SELECT COUNT(*) INTO l_cnt FROM inag_t
                WHERE inagent = g_sfdaent
                  AND inagsite= g_sfdasite
                  AND inag001 = g_sfdb2_d[l_ac].sfdc001
                  AND inag003 = g_sfdb2_d[l_ac].sfdc016
                  AND inag004 = g_sfdb2_d[l_ac].sfdc012
                  AND inag005 = g_sfdb2_d[l_ac].sfdc013
                  AND inag006 = g_sfdb2_d[l_ac].sfdc014
               IF l_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'asf-00071'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_sfdb2_d[l_ac].sfdc016 = g_sfdb2_d_t.sfdc016
                  NEXT FIELD sfdc012
               END IF
            END IF]]>
  </point>
  <point name="input.a.page5.sfdf011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #包装容器
            #輸入值須存在[T:料件包裝資料檔].[C:包裝容器編號]，錯誤訊息「此料沒有這種包裝方式，請重新輸入」
            IF NOT cl_null(g_sfdb5_d[l_ac].sfdf011) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfdb5_d[l_ac].sfdf011
               IF NOT cl_chk_exist("v_imaa001_3") THEN
                  LET g_sfdb5_d[l_ac].sfdf011 = g_sfdb5_d_t.sfdf011
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
  </point>
  <point name="input.a.page6.sfdd011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #包装容器
            #輸入值須存在[T:料件包裝資料檔].[C:包裝容器編號]，錯誤訊息「此料沒有這種包裝方式，請重新輸入」
            IF NOT cl_null(g_sfdb6_d[l_ac].sfdd011) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfdb6_d[l_ac].sfdd011
               IF NOT cl_chk_exist("v_imaa001_3") THEN
                  LET g_sfdb6_d[l_ac].sfdd011 = g_sfdb6_d_t.sfdd011
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
  </point>
  <point name="input.a.sfda001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfda_m.sfda001) THEN
               #不可小于关帐日期
               IF g_sfda_m.sfda001 < g_docdt THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'asr-00004'
                  LET g_errparam.extend = g_sfda_m.sfda001
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_sfda_m.sfda001 = g_sfda_m_t.sfda001
                  NEXT FIELD sfda001
               END IF
            END IF ]]>
  </point>
  <point name="input.a.sfdadocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfda_m.sfdadocdt) THEN
               #不可小于关帐日期
               IF g_sfda_m.sfdadocdt < g_docdt THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'asr-00004'
                  LET g_errparam.extend = g_sfda_m.sfdadocdt
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_sfda_m.sfdadocdt = g_sfda_m_t.sfdadocdt
                  NEXT FIELD sfdadocdt
               END IF
            END IF]]>
  </point>
  <point name="input.b.page2.sfdc001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL asft310_set_entry_b_sfdc(l_cmd)]]>
  </point>
  <point name="input.b.page2.sfdc002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL asft310_set_entry_b_sfdc(l_cmd)]]>
  </point>
  <point name="input.b.page2.sfdc003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #工单单号+项次若只有一个项序时，自动带出
            IF cl_null(g_sfdb2_d[l_ac].sfdc003) THEN
               #IF l_cnt_t = 1 THEN  #zll 有多笔的话，应该就不会赋值成功吧
                  SELECT sfdc003 INTO g_sfdb2_d[l_ac].sfdc003 FROM sfba_t
                      WHERE sfbaent = g_enterprise
                        AND sfbasite= g_site
                        AND sfbadocno=g_sfdb2_d[l_ac].sfdc001
                        AND sfbaseq = g_sfdb2_d[l_ac].sfdc002
               #END IF
            END IF
            
            CALL asft310_set_entry_b_sfdc(l_cmd)]]>
  </point>
  <point name="input.b.page2.sfdc004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.b.page2.sfdcseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_sfdb2_d[l_ac].sfdcseq IS NULL OR g_sfdb2_d[l_ac].sfdcseq = 0 THEN
                SELECT MAX(sfdcseq) INTO g_sfdb2_d[l_ac].sfdcseq
                  FROM sfdc_t
                 WHERE sfdcent = g_enterprise
                   AND sfdcsite= g_site
                   AND sfdcdocno=g_sfda_m.sfdadocno
                IF g_sfdb2_d[l_ac].sfdcseq IS NULL THEN
                   LET g_sfdb2_d[l_ac].sfdcseq = 0
                END IF
                LET g_sfdb2_d[l_ac].sfdcseq = g_sfdb2_d[l_ac].sfdcseq + 1
            END IF
]]>
  </point>
  <point name="input.b.page5.sfdfseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.b.page6.sfddseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_sfdb6_d[l_ac].sfddseq1 IS NULL OR g_sfdb6_d[l_ac].sfddseq1 = 0 THEN
                SELECT MAX(sfddseq1) INTO g_sfdb6_d[l_ac].sfddseq1
                  FROM sfdd_t
                 WHERE sfddent = g_enterprise
                   AND sfddsite= g_site
                   AND sfdddocno=g_sfda_m.sfdadocno
                   AND sfddseq = g_sfdb4_d[g_detail_idx].sfdcseq
                IF g_sfdb6_d[l_ac].sfddseq1 IS NULL THEN
                   LET g_sfdb6_d[l_ac].sfddseq1 = 0
                END IF
                LET g_sfdb6_d[l_ac].sfddseq1 = g_sfdb6_d[l_ac].sfddseq1 + 1
            END IF]]>
  </point>
  <point name="input.body.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_sfdb_d[l_ac].sfdb002) THEN
               LET g_sfdb_d[l_ac].sfdb002 = 0   #zll runcard先空给0，需确认有工单是不是会自动给个runcard号，没有就为0
            END IF
            IF cl_null(g_sfdb_d[l_ac].sfdb003) THEN
               LET g_sfdb_d[l_ac].sfdb003 = ' '
            END IF
            IF cl_null(g_sfdb_d[l_ac].sfdb004) THEN
               LET g_sfdb_d[l_ac].sfdb004 = ' '
            END IF
            IF cl_null(g_sfdb_d[l_ac].sfdb005) THEN
               LET g_sfdb_d[l_ac].sfdb005 = ' '
            END IF]]>
  </point>
  <point name="input.body.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL cl_set_comp_visible("sfdb002,sfdb003,sfdb003_desc",TRUE)
            CALL cl_set_comp_required("sfdb004,sfdb005",FALSE)
            CALL cl_set_comp_entry("sfdb005",FALSE)
            CALL cl_set_comp_entry("sfdb006",TRUE)
            
            #sfdb002 run card栏位，在发料类别=15.制程中委外发料时才显示，其他类别隐藏
            IF g_sfda_m.sfda002 != '15' THEN
               CALL cl_set_comp_visible("sfdb002",FALSE)
            END IF
            #sfdb003部位栏位，发料类别=15.制程中委外发料时，隐藏不显示
            IF g_sfda_m.sfda002 = '15' THEN 
               CALL cl_set_comp_visible("sfdb003,sfdb003_desc",FALSE)
            END IF
            
            #发料类别=15.制程中委外发料时，不可以空白，其他的允许空白
            IF g_sfda_m.sfda002 = '15' THEN 
               CALL cl_set_comp_required("sfdb004,sfdb005",TRUE)
            END IF
            
            IF g_sfda_m.sfda002 = '13' THEN 
               CALL cl_set_comp_entry("sfdb006",FALSE)
            END IF]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_sfdb_d[l_ac].sfdb003 = ' '  #部位
            LET g_sfdb_d[l_ac].sfdb004 = ' '  #作业
            LET g_sfdb_d[l_ac].sfdb005 = ' '  #制程序]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #sfdb005 制程序：输入性：有输入作业时才可以输入
            CALL cl_set_comp_entry("sfdb005",FALSE)
            IF NOT cl_null(g_sfdb_d[g_detail_idx].sfdb004) THEN
               CALL cl_set_comp_entry("sfdb005",TRUE)
            END IF]]>
  </point>
  <point name="input.body2.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  LET l_success_tot = TRUE
                  CALL asft310_del_sfdd() RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
                  CALL asft310_del_sfde() RETURNING l_success  #此处del不是代表删除sfde，而是因del sfdc引起sfde的变动
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
                  IF NOT l_success_tot THEN
                     CALL s_transaction_end('N','0')      
                     LET g_rec_b = g_rec_b + 1   #执行失败则将前面已减去的加回来      
                     CANCEL DELETE  
                  END IF  #如果有走到s_transaction_end('N','0')就不回再走下面的s_transaction_end('Y','0')了，g_intrans控制住了]]>
  </point>
  <point name="input.body2.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #关联表处理
               IF g_intrans = 'Y' THEN  #若事务还没走rollback则(上面没有走commit)
                  LET l_success_tot = TRUE
                  CALL asft310_upd_sfdd() RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
                  CALL asft310_upd_sfde() RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
                  IF NOT l_success_tot THEN
                     CALL s_transaction_end('N','0')   
                     LET g_sfdb2_d[l_ac].* = g_sfdb2_d_t.* 
                  END IF                  
               END IF]]>
  </point>
  <point name="input.body2.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET l_success_tot = TRUE
               CALL asft310_ins_sfdd() RETURNING l_success
               IF NOT l_success THEN
                  LET l_success_tot = FALSE
               END IF
               CALL asft310_ins_sfde() RETURNING l_success
               IF NOT l_success THEN
                  LET l_success_tot = FALSE
               END IF
               IF NOT l_success_tot THEN
                  CALL s_transaction_end('N','0')                    
                  CANCEL INSERT
                  #cancel insert了就不往下走了，都则就需要写LET g_rec_b = g_rec_b - 1来补救
               END IF
               ]]>
  </point>
  <point name="input.body2.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body2.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #由發料單別參數"發料理由碼不可空白"控制理由碼是不是一定要輸入
            CALL cl_set_comp_required("sfdc015",FALSE)
            #参数：發料理由碼不可空白
            CALL cl_get_doc_para(g_enterprise,g_site,g_sfda_m.sfdadocno,'D-MFG-0032') RETURNING g_para
            IF g_para = 'Y' THEN
               CALL cl_set_comp_required("sfdc015",TRUE)
            END IF]]>
  </point>
  <point name="input.body2.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET l_cnt_t = 0
            #料件有使用庫存管理特徵才可輸入
            CALL asft310_set_entry_b_sfdc(l_cmd)
            CALL asft310_set_no_entry_b_sfdc(l_cmd)]]>
  </point>
  <point name="input.body3.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL DIALOG.setCurrentRow("s_detail5",l_ac)
            NEXT FIELD sfdfseq1]]>
  </point>
  <point name="input.body3.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body3.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #zll delete sfde 需同时delete sfdf]]>
  </point>
  <point name="input.body4.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL DIALOG.setCurrentRow("s_detail6",l_ac)
            NEXT FIELD sfddseq1]]>
  </point>
  <point name="input.body4.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body5.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#zll觉得不能新增吧，规格中项次栏位是NOENTRY的
            #自动流水号
            IF g_sfdb5_d[l_ac].sfdfseq1 IS NULL OR g_sfdb5_d[l_ac].sfdfseq1 = 0 THEN
                SELECT MAX(sfdfseq1) INTO g_sfdb5_d[l_ac].sfdfseq1
                  FROM sfdc_t
                 WHERE sfdfent = g_enterprise
                   AND sfdfsite= g_site
                   AND sfdfdocno=g_sfda_m.sfdadocno
                   AND sfdfseq=g_sfdb3_d[g_detail_idx].sfdeseq
                IF g_sfdb5_d[l_ac].sfdfseq1 IS NULL THEN
                   LET g_sfdb5_d[l_ac].sfdfseq1 = 0
                END IF
                LET g_sfdb5_d[l_ac].sfdfseq1 = g_sfdb5_d[l_ac].sfdfseq1 + 1
            END IF
            {#zll一下有些没预设的不预设，卡控就好了
            #发料料号：预设带出需求料号
            LET g_sfdb5_d[l_ac].sfdf001 = g_sfdb3_d[g_detail_idx].sfde001
            CALL s_desc_get_item_desc(g_sfdb5_d[l_ac].sfdf001) RETURNING g_sfdb5_d[l_ac].sfdf001_desc,g_sfdb5_d[l_ac].sfdf001_desc2
            #替代率预设1
            LET g_sfdb5_d[l_ac].sfdf002 = 1
            ##库位：发料需求指定的库位
            #LET g_sfdb5_d[l_ac].sfdf003 = 
            #CALL s_desc_get_stock_desc(g_sfdb5_d[l_ac].sfdf003) RETURNING g_sfdb5_d[l_ac].sfdf003_desc
            ##儲位：發料需求的指定儲位
            #LET g_sfdb5_d[l_ac].sfdf004 = 
            #CALL s_desc_get_locator_desc(g_sfdb5_d[l_ac].sfdf003,g_sfdb5_d[l_ac].sfdf004) RETURNING g_sfdb5_d[l_ac].sfdf004_desc
            ##批號：發料需求的指定批號
            #LET g_sfdb5_d[l_ac].sfdf005 = 
            #庫存管理特徵：發料需求的庫存管理特徵
            LET g_sfdb5_d[l_ac].sfdf010 = 
            #单位：發料申請單身的單位
            LET g_sfdb5_d[l_ac].sfdf006 = 
            #參考單位：發料申請單身的參考單位
            LET g_sfdb5_d[l_ac].sfdf008 = 
            #参考数量：數量*單位轉換率
            LET g_sfdb5_d[l_ac].sfdf009 = 
            }]]>
  </point>
  <point name="input.body5.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL asft310_set_entry_b_sfdf(l_cmd)
            CALL asft310_set_no_entry_b_sfdf(l_cmd)]]>
  </point>
  <point name="input.body6.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_sfdb6_d[l_ac].sfdd001 = g_sfdb4_d[g_detail_idx].sfdc004  #需求料号
            CALL s_desc_get_item_desc(g_sfdb6_d[l_ac].sfdd001) RETURNING g_sfdb6_d[l_ac].sfdd001_desc,g_sfdb6_d[l_ac].sfdd001_desc2
            DISPLAY BY NAME g_sfdb6_d[l_ac].sfdd001_desc
            DISPLAY BY NAME g_sfdb6_d[l_ac].sfdd001_desc2
            LET g_sfdb6_d[l_ac].sfdd002 = 1  #替代率
            LET g_sfdb6_d[l_ac].sfdd003 = g_sfdb4_d[g_detail_idx].sfdc012  #库位
            LET g_sfdb6_d[l_ac].sfdd004 = g_sfdb4_d[g_detail_idx].sfdc013  #储位
            LET g_sfdb6_d[l_ac].sfdd005 = g_sfdb4_d[g_detail_idx].sfdc014  #批号
            LET g_sfdb6_d[l_ac].sfdd010 = g_sfdb4_d[g_detail_idx].sfdc016  #库存管理特征
            LET g_sfdb6_d[l_ac].sfdd006 = g_sfdb4_d[g_detail_idx].sfdc006  #单位
            LET g_sfdb6_d[l_ac].sfdd008 = g_sfdb4_d[g_detail_idx].sfdc009  #参考单位
            ]]>
  </point>
  <point name="input.body6.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL asft310_set_entry_b_sfdd(l_cmd)
            CALL asft310_set_no_entry_b_sfdd(l_cmd)]]>
  </point>
  <point name="input.c.page1.sfdb001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            ### 工單單號開窗查詢### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb_d[l_ac].sfdb001
            LET g_qryparam.where = " sfaasite ='",g_site,"' AND sfaastus='F'"
            CALL q_sfaadocno_3()
            LET g_sfdb_d[l_ac].sfdb001 = g_qryparam.return1
            DISPLAY g_sfdb_d[l_ac].sfdb001 TO sfdb001
            ### 工單單號開窗查詢### end ###]]>
  </point>
  <point name="input.c.page1.sfdb002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ### 開窗查詢Run Card單號### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb_d[l_ac].sfdb002
            LET g_qryparam.where = " sfcasite ='",g_site,"'"
            IF NOT cl_null(g_sfdb_d[l_ac].sfdb001) THEN
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfcadocno='",g_sfdb_d[l_ac].sfdb001,"'"
            END IF
            CALL q_sfca001_2()
            LET g_sfdb_d[l_ac].sfdb002 = g_qryparam.return1
            DISPLAY g_sfdb_d[l_ac].sfdb002 TO sfdb002
            ### 開窗查詢Run Card單號### end ###
]]>
  </point>
  <point name="input.c.page1.sfdb003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #部位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb_d[l_ac].sfdb003
            LET g_qryparam.where = " sfbasite ='",g_site,"'"
            IF NOT cl_null(g_sfdb_d[l_ac].sfdb001) THEN
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfbadocno='",g_sfdb_d[l_ac].sfdb001,"'"
            END IF
            IF NOT cl_null(g_sfdb_d[l_ac].sfdb004) THEN  #作业编号
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfba003='",g_sfdb_d[l_ac].sfdb004,"'"
            END IF
            CALL q_sfba002()
            LET g_sfdb_d[l_ac].sfdb003 = g_qryparam.return1
            DISPLAY g_sfdb_d[l_ac].sfdb003 TO sfdb003]]>
  </point>
  <point name="input.c.page1.sfdb004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[             #作业编号
             INITIALIZE g_qryparam.* TO NULL 
             LET g_qryparam.state = "i"
             LET g_qryparam.reqry = FALSE
             LET g_qryparam.default1 = g_sfdb_d[l_ac].sfdb004
             LET g_qryparam.where = " sfbasite ='",g_site,"'"
             IF NOT cl_null(g_sfdb_d[l_ac].sfdb001) THEN
                LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfbadocno='",g_sfdb_d[l_ac].sfdb001,"'"
             END IF
             IF NOT cl_null(g_sfdb_d[l_ac].sfdb003) THEN  #部位
                LET g_qryparam.where = g_qryparam.where CLIPPED," AND sfba002='",g_sfdb_d[l_ac].sfdb003,"'"
             END IF
             CALL q_sfba003()
             LET g_sfdb_d[l_ac].sfdb004 = g_qryparam.return1
             DISPLAY g_sfdb_d[l_ac].sfdb004 TO sfdb004]]>
  </point>
  <point name="input.c.page2.sfdc001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #工单单号
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb2_d[l_ac].sfdc001
            LET g_qryparam.default2 = g_sfdb2_d[l_ac].sfdc002
            LET g_qryparam.default3 = g_sfdb2_d[l_ac].sfdc003
            LET g_qryparam.where = " sfbasite ='",g_site,"'"
            CALL q_sfba001_1()
            LET g_sfdb2_d[l_ac].sfdc001 = g_qryparam.return1
            LET g_sfdb2_d[l_ac].sfdc002 = g_qryparam.return2
            LET g_sfdb2_d[l_ac].sfdc003 = g_qryparam.return3
            DISPLAY g_sfdb2_d[l_ac].sfdc001 TO sfdc001
            DISPLAY g_sfdb2_d[l_ac].sfdc002 TO sfdc002
            DISPLAY g_sfdb2_d[l_ac].sfdc003 TO sfdc003]]>
  </point>
  <point name="input.c.page2.sfdc002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #项次
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb2_d[l_ac].sfdc001
            LET g_qryparam.default2 = g_sfdb2_d[l_ac].sfdc002
            LET g_qryparam.default3 = g_sfdb2_d[l_ac].sfdc003
            LET g_qryparam.where = " sfbasite ='",g_site,"'"
            CALL q_sfba001_1()
            LET g_sfdb2_d[l_ac].sfdc001 = g_qryparam.return1
            LET g_sfdb2_d[l_ac].sfdc002 = g_qryparam.return2
            LET g_sfdb2_d[l_ac].sfdc003 = g_qryparam.return3
            DISPLAY g_sfdb2_d[l_ac].sfdc001 TO sfdc001
            DISPLAY g_sfdb2_d[l_ac].sfdc002 TO sfdc002
            DISPLAY g_sfdb2_d[l_ac].sfdc003 TO sfdc003]]>
  </point>
  <point name="input.c.page2.sfdc003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #项序
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb2_d[l_ac].sfdc001
            LET g_qryparam.default2 = g_sfdb2_d[l_ac].sfdc002
            LET g_qryparam.default3 = g_sfdb2_d[l_ac].sfdc003
            LET g_qryparam.where = " sfbasite ='",g_site,"'"
            CALL q_sfba001_1()
            LET g_sfdb2_d[l_ac].sfdc001 = g_qryparam.return1
            LET g_sfdb2_d[l_ac].sfdc002 = g_qryparam.return2
            LET g_sfdb2_d[l_ac].sfdc003 = g_qryparam.return3
            DISPLAY g_sfdb2_d[l_ac].sfdc001 TO sfdc001
            DISPLAY g_sfdb2_d[l_ac].sfdc002 TO sfdc002
            DISPLAY g_sfdb2_d[l_ac].sfdc003 TO sfdc003]]>
  </point>
  <point name="input.c.page2.sfdc009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #参考单位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb2_d[l_ac].sfdc009
            CALL q_ooca001_1()
            LET g_sfdb2_d[l_ac].sfdc009 = g_qryparam.return1
            DISPLAY g_sfdb2_d[l_ac].sfdc009 TO sfdc009]]>
  </point>
  <point name="input.c.page2.sfdc012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #仓库
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb2_d[l_ac].sfdc012
            CALL q_inaa001_2()
            LET g_sfdb2_d[l_ac].sfdc012 = g_qryparam.return1
            DISPLAY g_sfdb2_d[l_ac].sfdc012 TO sfdc012]]>
  </point>
  <point name="input.c.page2.sfdc013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #储位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb2_d[l_ac].sfdc013
            IF cl_null(g_sfdb2_d[l_ac].sfdc012) THEN
               CALL q_inab002_1()
            ELSE
               LET g_qryparam.arg1 = g_sfdb2_d[l_ac].sfdc012
               CALL q_inab002_3()
            END IF
            LET g_sfdb2_d[l_ac].sfdc013 = g_qryparam.return1
            DISPLAY g_sfdb2_d[l_ac].sfdc013 TO sfdc013]]>
  </point>
  <point name="input.c.page2.sfdc014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ##批号
            #INITIALIZE g_qryparam.* TO NULL 
            #LET g_qryparam.state = "i"
            #LET g_qryparam.reqry = FALSE
            #LET g_qryparam.default1 = g_sfdb2_d[l_ac].sfdc014
            #CALL q_ooca001_1()
            #LET g_sfdb2_d[l_ac].sfdc014 = g_qryparam.return1
            #DISPLAY g_sfdb2_d[l_ac].sfdc014 TO sfdc014]]>
  </point>
  <point name="input.c.page2.sfdc015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #理由码
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb2_d[l_ac].sfdc015
            LET g_qryparam.arg1 = '226'
            CALL q_oocq002_5()
            LET g_sfdb2_d[l_ac].sfdc015 = g_qryparam.return1     #將開窗取得的值回傳到變數
            NEXT FIELD sfdc015  ]]>
  </point>
  <point name="input.c.page2.sfdc016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ##库存管理特征
            #INITIALIZE g_qryparam.* TO NULL 
            #LET g_qryparam.state = "i"
            #LET g_qryparam.reqry = FALSE
            #LET g_qryparam.default1 = g_sfdb2_d[l_ac].sfdc016
            #CALL q_ooca001_1()
            #LET g_sfdb2_d[l_ac].sfdc016 = g_qryparam.return1
            #DISPLAY g_sfdb2_d[l_ac].sfdc016 TO sfdc016]]>
  </point>
  <point name="input.c.page5.sfdf003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #仓库
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb5_d[l_ac].sfdf003
            CALL q_inaa001_2()
            LET g_sfdb5_d[l_ac].sfdf003 = g_qryparam.return1
            DISPLAY g_sfdb5_d[l_ac].sfdf003 TO sfdf003]]>
  </point>
  <point name="input.c.page5.sfdf004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #储位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb5_d[l_ac].sfdf004
            IF cl_null(g_sfdb5_d[l_ac].sfdf003) THEN
               CALL q_inab002_1()
            ELSE
               LET g_qryparam.arg1 = g_sfdb5_d[l_ac].sfdf003
               CALL q_inab002_3()
            END IF
            LET g_sfdb5_d[l_ac].sfdf004 = g_qryparam.return1
            DISPLAY g_sfdb5_d[l_ac].sfdf004 TO sfdf004]]>
  </point>
  <point name="input.c.page5.sfdf006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #单位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb5_d[l_ac].sfdf006
            CALL q_ooca001_1()
            LET g_sfdb5_d[l_ac].sfdf006 = g_qryparam.return1
            DISPLAY g_sfdb5_d[l_ac].sfdf006 TO sfdf006]]>
  </point>
  <point name="input.c.page5.sfdf008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #参考单位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb5_d[l_ac].sfdf008
            CALL q_ooca001_1()
            LET g_sfdb5_d[l_ac].sfdf008 = g_qryparam.return1
            DISPLAY g_sfdb5_d[l_ac].sfdf008 TO sfdf008]]>
  </point>
  <point name="input.c.page5.sfdf011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb5_d[l_ac].sfdf011
            CALL q_imaa001_11()
            LET g_sfdb5_d[l_ac].sfdf011 = g_qryparam.return1     #將開窗取得的值>
            NEXT FIELD sfdf011]]>
  </point>
  <point name="input.c.page6.sfdd003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #仓库
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb6_d[l_ac].sfdd003
            CALL q_inaa001_2()
            LET g_sfdb6_d[l_ac].sfdd003 = g_qryparam.return1
            DISPLAY g_sfdb6_d[l_ac].sfdd003 TO sfdd003]]>
  </point>
  <point name="input.c.page6.sfdd004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #储位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb6_d[l_ac].sfdd004
            IF cl_null(g_sfdb6_d[l_ac].sfdd003) THEN
               CALL q_inab002_1()
            ELSE
               LET g_qryparam.arg1 = g_sfdb6_d[l_ac].sfdd003
               CALL q_inab002_3()
            END IF
            LET g_sfdb6_d[l_ac].sfdd004 = g_qryparam.return1
            DISPLAY g_sfdb6_d[l_ac].sfdd004 TO sfdd004]]>
  </point>
  <point name="input.c.page6.sfdd006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #单位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb6_d[l_ac].sfdd006
            CALL q_ooca001_1()
            LET g_sfdb6_d[l_ac].sfdd006 = g_qryparam.return1
            DISPLAY g_sfdb6_d[l_ac].sfdd006 TO sfdd006]]>
  </point>
  <point name="input.c.page6.sfdd008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #参考单位
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb6_d[l_ac].sfdd008
            CALL q_ooca001_1()
            LET g_sfdb6_d[l_ac].sfdd008 = g_qryparam.return1
            DISPLAY g_sfdb6_d[l_ac].sfdd008 TO sfdd008]]>
  </point>
  <point name="input.c.page6.sfdd011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfdb6_d[l_ac].sfdd011
            CALL q_imaa001_11()
            LET g_sfdb6_d[l_ac].sfdd011 = g_qryparam.return1     #將開窗取得的值>
            NEXT FIELD sfdd011]]>
  </point>
  <point name="input.c.sfda003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_sfda_m.sfda002 = '15' THEN  #15.製程中委外發料時，顯示名稱為委外廠商
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_sfda_m.sfda003             #給予default值
               CALL q_pmaa001_3()                                #呼叫開窗
               LET g_sfda_m.sfda003 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_sfda_m.sfda003 TO sfda003              #顯示到畫面上
               #帶值:廠商名稱
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfda_m.sfda003
               CALL cl_ref_val("v_pmaal004")
               LET g_sfda_m.sfda003_desc = g_chkparam.return1
               DISPLAY BY NAME g_sfda_m.sfda003_desc
               NEXT FIELD sfda003                          #返回原欄位
            ELSE
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_sfda_m.sfda003             #給予default值
               #給予arg
               LET g_qryparam.arg1 = g_sfda_m.sfdadocdt  #
               CALL q_ooeg001()                                #呼叫開窗
               LET g_sfda_m.sfda003 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_sfda_m.sfda003 TO sfda003              #顯示到畫面上
               #帶值:部门名稱
               CALL s_desc_get_department_desc(g_sfda_m.sfda003) RETURNING g_sfda_m.sfda003_desc
               DISPLAY BY NAME g_sfda_m.sfda003_desc
               NEXT FIELD sfda003                          #返回原欄位
            END IF]]>
  </point>
  <point name="input.c.sfda004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfda_m.sfda004             #給予default值
            LET g_qryparam.default2 = "" #g_sfda_m.oofa011 #全名
            #給予arg
            CALL q_ooag001_2()                                #呼叫開窗
            LET g_sfda_m.sfda004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_sfda_m.sfda004 TO sfda004              #顯示到畫面上
            CALL s_desc_get_person_desc(g_sfda_m.sfda004) RETURNING g_sfda_m.sfda004_desc
            DISPLAY BY NAME g_sfda_m.sfda004_desc
            NEXT FIELD sfda004                          #返回原欄位]]>
  </point>
  <point name="input.c.sfdadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfda_m.sfdadocno             #給予default值
            #給予arg
            SELECT ooef004 INTO l_ooef004
              FROM ooef_t
             WHERE ooef001 = g_site
               AND ooefent  = g_enterprise
            LET g_qryparam.arg1 = l_ooef004 #參照表編號
            LET g_qryparam.arg2 = g_prog    #作业代号
            CALL q_ooba002_1()                                #呼叫開窗
            LET g_sfda_m.sfdadocno = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_sfda_m.sfdadocno TO sfdadocno              #顯示到畫面上
            NEXT FIELD sfdadocno                          #返回原欄位]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_ooef004        LIKE ooef_t.ooef004
   DEFINE l_sfdb006        LIKE sfdb_t.sfdb006
   DEFINE l_cnt_t          LIKE type_t.num5
   DEFINE l_inaa015        LIKE inaa_t.inaa015  #保税仓否
   DEFINE l_inaa010        LIKE inaa_t.inaa010  #成本库否
   DEFINE l_imaf034        LIKE imaf_t.imaf034  #生产料号是否保税料
   DEFINE l_sfaa010        LIKE sfaa_t.sfaa010  #生产料号
   DEFINE l_rate           LIKE inaj_t.inaj014  #单位换算率
   DEFINE l_imaa006        LIKE imaa_t.imaa006  #基础单位
   DEFINE l_bmea011        LIKE bmea_t.bmea011
   DEFINE l_bmea012        LIKE bmea_t.bmea012
   DEFINE l_bmea013        LIKE bmea_t.bmea013
   DEFINE l_bmba010        LIKE bmba_t.bmba010 ]]>
  </point>
  <point name="input.detail_input.page2.action_2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.g.page5.sfdf011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.g.sfda002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfda_m.sfda003) THEN
               IF NOT asft310_chk_sfda003() THEN
                  NEXT FIELD sfda003
               END IF   
            END IF]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  CALL s_aooi200_gen_docno(g_site,g_sfda_m.sfdadocno,g_sfda_m.sfdadocdt,g_prog)
                       RETURNING l_success,g_sfda_m.sfdadocno
                  IF NOT l_success THEN
                     NEXT FIELD sfebdocno
                  END IF]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_sfda_m.sfdadocdt = g_today
      LET g_sfda_m.sfda001 = g_today
      CASE g_prog
         WHEN 'asft310'
              LET g_sfda_m.sfda002 = '11'
         WHEN 'asft311'
              LET g_sfda_m.sfda002 = '11'
         WHEN 'asft312'
              LET g_sfda_m.sfda002 = '12'
         WHEN 'asft313'
              LET g_sfda_m.sfda002 = '13'
         WHEN 'asft314'
              LET g_sfda_m.sfda002 = '14'
         WHEN 'asft315'
              LET g_sfda_m.sfda002 = '15'
         OTHERWISE
      END CASE
      
      IF g_sfda_m.sfda002 != '15' THEN  #製程中委外發料時，顯示名稱為委外廠商
         LET g_sfda_m.sfda003 = g_dept
         CALL s_desc_get_department_desc(g_sfda_m.sfda003) RETURNING g_sfda_m.sfda003_desc
         DISPLAY BY NAME g_sfda_m.sfda003_desc
      END IF
      
      LET g_sfda_m.sfda004 = g_user
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_sfda_m.sfda004
      CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
      LET g_sfda_m.sfda004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_sfda_m.sfda004_desc
      
      LET g_sfda_m.sfdastus = "N"]]>
  </point>
  <point name="insert_b.before_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #zll pattern产生的以下insert错，所以这边想办法不走这一段，下面加另一段
      IF 1=2 THEN]]>
  </point>
  <point name="insert_b.m_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      END IF
      INSERT INTO sfdc_t
                  (sfdcent, sfdcsite,sfdcdocno,sfdcseq
                   ,sfdc001,sfdc002,sfdc003,sfdc004,sfdc005,sfdc006,sfdc007,sfdc008,sfdc009,sfdc010,sfdc011,sfdc012,sfdc013,sfdc014,sfdc016,sfdc015,sfdc017) 
            VALUES(g_enterprise, g_site,ps_keys[1],ps_keys[2]
                   ,g_sfdb2_d[g_detail_idx].sfdc001,g_sfdb2_d[g_detail_idx].sfdc002,g_sfdb2_d[g_detail_idx].sfdc003,g_sfdb2_d[g_detail_idx].sfdc004,g_sfdb2_d[g_detail_idx].sfdc005,g_sfdb2_d[g_detail_idx].sfdc006,g_sfdb2_d[g_detail_idx].sfdc007,g_sfdb2_d[g_detail_idx].sfdc008,g_sfdb2_d[g_detail_idx].sfdc009,g_sfdb2_d[g_detail_idx].sfdc010,g_sfdb2_d[g_detail_idx].sfdc011,g_sfdb2_d[g_detail_idx].sfdc012,g_sfdb2_d[g_detail_idx].sfdc013,g_sfdb2_d[g_detail_idx].sfdc014,g_sfdb2_d[g_detail_idx].sfdc016,g_sfdb2_d[g_detail_idx].sfdc015,g_sfdb2_d[g_detail_idx].sfdc017)]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5]]>
  </point>
  <point name="main.define_sql" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #建立临时表
   #CALL asft310_crt_temp_table() RETURNING l_success
   CALL s_asft310_create_table1() RETURNING l_success
   IF NOT l_success THEN
      EXIT PROGRAM
   END IF
  
   
   LET g_forupd_sql = "SELECT sfdadocno,'',sfdadocdt,sfda001,sfda002,sfda003,'',sfda004,'',sfda005,sfda015,sfda014,sfdastus, 
       sfdaownid,'',sfdaowndp,'',sfdacrtid,'',sfdacrtdp,'',sfdacrtdt,sfdamodid,'',sfdamoddt,sfdacnfid, 
       '',sfdacnfdt,sfdapstid,'',sfdapstdt FROM sfda_t WHERE sfdaent= ? AND sfdadocno=?  
       FOR UPDATE"]]>
  </point>
  <point name="main.exit" order="" ver="11" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   #CALL asft310_drop_temp_table()
   CALL s_asft310_drop_table1() RETURNING l_success
   CALL s_aooi390_drop_tmp_table()   #add--2015/05/08 By shiun]]>
  </point>
  <point name="main.init" order="" ver="11" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_get_para(g_enterprise,g_site,'S-MFG-0031') RETURNING g_docdt     #库存关帐日期
   IF cl_null(g_docdt) THEN
      #获取库存关账日期失败!请至【aoos020营运据点参数设定作业】中维护“库存关账日期”！
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00149'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      EXIT PROGRAM
   END IF
   CALL cl_get_para(g_enterprise,g_site,'S-BAS-0028') RETURNING g_ref_unit  #是否启用参考单位
   CALL s_aooi390_cre_tmp_table() RETURNING l_success   #add--2015/05/08 By shiun]]>
  </point>
  <point name="main.servicecall" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="menu.action_1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.action_2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.bpm_status" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="menu.delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.modify" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.modify_detail" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.output" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.query" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="menu.serialnum" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="send.after_send" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="send.before_send" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("sfda002",TRUE)]]>
  </point>
  <point name="set_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_prog != 'asft310' THEN
      CALL cl_set_comp_entry("sfda002",FALSE)
   END IF]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE l_sfba001   LIKE sfba_t.sfba001  #生产料号
DEFINE l_sfaa011   LIKE sfaa_t.sfaa011  #特性]]>
  </point>
  <point name="statechange.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="statechange.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="statechange.approved" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="statechange.invalid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="statechange.more_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="statechange.rejection" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="statechange.signing" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="statechange.withdraw" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="ui_browser_refresh.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="ui_detailshow.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="ui_detailshow.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="ui_detailshow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="ui_headershow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="unlock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="update_b.after_update6" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #   ]]>
  </point>
  <point name="update_b.key.after_update5" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #   ]]>
  </point>
  <point name="update_b.key.after_update6" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #   ]]>
  </point>
  <point name="update_b.key.before_update5" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #   ]]>
  </point>
  <point name="update_b.key.before_update6" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #   ]]>
  </point>
  <point name="update_b.key.m_update5" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #   ]]>
  </point>
  <point name="update_b.key.m_update6" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #   ]]>
  </point>
  <point name="update_b.m_update6" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #   ]]>
  </point>
  <section id="asft310.description" ver="176" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:11,PR版次:11) Build-000671
#+ 
#+ Filename...: asft310
#+ Description: 工單發料維護作業
#+ Creator....: 00768(2013-11-26 11:13:32)
#+ Modifier...: 00768(2015-04-10 16:39:58) -SD/PR-
]]>
  </section>
  <section id="asft310.global" ver="4" status="" src="s" readonly="">
    <![CDATA[#應用 i00 樣板自動產生(Version:3)
{<point name="global.memo" />}
 
IMPORT os
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:free_style模組變數(Module Variable)
{<point name="free_style.variable"/>}
#end add-point
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
]]>
  </section>
  <section id="asft310.main" ver="1" status="" src="m" readonly="">
    <![CDATA[#+ 作業開始
MAIN
   #add-point:main段define
{<point name="main.define"/>}
   #end add-point    
 
   #定義在其他link的程式則無效
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("asf","")
 
   #add-point:作業初始化
{<point name="main.init"/>}
   #end add-point
 
   #add-point:SQL_define
{<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)    #轉換不同資料庫語法
   DECLARE asft310_cl CURSOR FROM g_forupd_sql 
   
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
{<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_asft310 WITH FORM cl_ap_formpath("asf",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL asft310_init()
   
      #進入選單 Menu (='N')
      CALL asft310_ui_dialog()
   
      #畫面關閉
      CLOSE WINDOW w_asft310
   END IF
 
   #add-point:作業離開前
{<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
 
END MAIN
]]>
  </section>
  <section id="asft310.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
  </section>
</add_points>
