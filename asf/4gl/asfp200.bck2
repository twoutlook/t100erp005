#該程式未解開Section, 採用最新樣板產出!
{<section id="asfp200.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0002(2014-12-16 10:43:42), PR版次:0002(2016-04-11 17:23:47)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000069
#+ Filename...: asfp200
#+ Description: 工單派工作業
#+ Creator....: 01534(2014-12-11 11:27:15)
#+ Modifier...: 01534 -SD/PR- 07675
 
{</section>}
 
{<section id="asfp200.global" >}
#應用 p02 樣板自動產生(Version:19)
#add-point:填寫註解說明
#160318-00025#3   2016/04/11  By 07675       將重複內容的錯誤訊息置換為公用錯誤訊息(r.v）
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc" 
#add-point:增加匯入變數檔
#
##end add-point
 
#模組變數(Module Variables)
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10              
DEFINE l_ac_d               LIKE type_t.num10             #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num10             #目前所在頁數
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num10
 
TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   
   #end add-point
        wc               STRING
                     END RECORD
 
TYPE type_g_detail_d RECORD
#add-point:自定義模組變數(Module Variable)  #注意要在add-point內寫入END RECORD
       sel                   LIKE type_t.chr1,
       sfcbdocno             LIKE sfcb_t.sfcbdocno,
       sfcb044               LIKE sfcb_t.sfcb044,   
       sfcb045               LIKE sfcb_t.sfcb045,  
       sfaa010               LIKE sfaa_t.sfaa010,
       b_sfaa010_desc        LIKE type_t.chr500,
       b_sfaa010_desc_desc   LIKE type_t.chr500, 
       sfcb001               LIKE sfcb_t.sfcb001,
       sfcb003               LIKE sfcb_t.sfcb003,
       b_sfcb003_desc        LIKE type_t.chr500,
       sfcb004               LIKE sfcb_t.sfcb004,
       sfcb027               LIKE sfcb_t.sfcb027,
       sent_num              LIKE sfcb_t.sfcb027,
       sent_nonum            LIKE sfcb_t.sfcb027,
       sfcb020               LIKE sfcb_t.sfcb020,
       b_sfcb020_desc        LIKE type_t.chr500, 
       sfcb024               LIKE sfcb_t.sfcb024,
       hours                 LIKE sfcb_t.sfcb024,
       sfcb023               LIKE sfcb_t.sfcb023
                   END RECORD
DEFINE g_sfpb000             LIKE sfpb_t.sfpb000
DEFINE g_sfpb001             LIKE sfpb_t.sfpb001
DEFINE g_sfpb002             LIKE sfpb_t.sfpb002
DEFINE g_sfpb003             LIKE sfpb_t.sfpb003
DEFINE g_sfpb004             LIKE sfpb_t.sfpb004
DEFINE g_sfpb005             LIKE sfpb_t.sfpb005
DEFINE g_sfpb002_desc        LIKE type_t.chr500
DEFINE g_sfpb003_desc        LIKE type_t.chr500
DEFINE g_sfpb004_desc        LIKE type_t.chr500
DEFINE g_sfpb005_desc        LIKE type_t.chr500
DEFINE g_sfpb002_t           LIKE sfpb_t.sfpb002
DEFINE g_sfpb003_t           LIKE sfpb_t.sfpb003
DEFINE g_sfpb004_t           LIKE sfpb_t.sfpb004
DEFINE g_sfpb005_t           LIKE sfpb_t.sfpb005
DEFINE g_detail_idx          LIKE type_t.num5
DEFINE g_detail_idx2         LIKE type_t.num5
DEFINE l_ac2                 LIKE type_t.num5

TYPE type_g_detail2_d RECORD
     sel01               LIKE type_t.chr1,
     sfpb006             LIKE sfpb_t.sfpb006,
     sfpb007             LIKE sfpb_t.sfpb007,
     sfaa010             LIKE type_t.chr500,
     sfaa010_a_desc      LIKE type_t.chr500,
     sfaa010_a_desc_desc LIKE type_t.chr500,
     sfpb008             LIKE sfpb_t.sfpb008,     
     sfpb008_desc        LIKE type_t.chr500,
     sfpb009             LIKE sfpb_t.sfpb009,
     sfpb010             LIKE sfpb_t.sfpb010,     
     sfpb011             LIKE sfpb_t.sfpb011, 
     sfpb011_desc        LIKE type_t.chr500,    
     sfpb012             LIKE sfpb_t.sfpb012,
     sfpb013             LIKE sfpb_t.sfpb013,
     sfcb044             LIKE sfcb_t.sfcb044,
     sfcb045             LIKE sfcb_t.sfcb045,
     sfcb027             LIKE sfcb_t.sfcb027,  
     num                 LIKE sfcb_t.sfcb027,
     sfcb023             LIKE sfcb_t.sfcb023     
                     END RECORD
DEFINE g_detail2_d           DYNAMIC ARRAY OF type_g_detail2_d 
DEFINE g_detail_cnt2         LIKE type_t.num5  
DEFINE g_cnt2                LIKE type_t.num5
DEFINE g_detail_d_t          type_g_detail_d
DEFINE g_detail2_d_t         type_g_detail2_d
DEFINE g_flag                LIKE type_t.chr1
DEFINE g_s_sfpb010           LIKE sfpb_t.sfpb010
DEFINE g_s_sfpb013           LIKE sfpb_t.sfpb013
DEFINE g_s_used              LIKE sfpb_t.sfpb013
DEFINE g_s_rate              LIKE sfpb_t.sfpb010
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
DEFINE g_detail_cnt         LIKE type_t.num10              #單身 總筆數(所有資料)
DEFINE g_detail_d  DYNAMIC ARRAY OF type_g_detail_d
 
#add-point:傳入參數說明
 
#end add-point
 
{</section>}
 
{<section id="asfp200.main" >}
#+ 作業開始 
MAIN
   DEFINE ls_js  STRING
   #add-point:main段define
   
   #end add-point   
   #add-point:main段define
   
   #end add-point   
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("asf","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_asfp200 WITH FORM cl_ap_formpath("asf",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL asfp200_init()   
 
      #進入選單 Menu (="N")
      CALL asfp200_ui_dialog() 
 
      #add-point:畫面關閉前
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_asfp200
   END IF 
   
   #add-point:作業離開前
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="asfp200.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION asfp200_init()
   #add-point:init段define
   
   #end add-point   
   #add-point:init段define
   
   #end add-point   
   
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
 
   #add-point:畫面資料初始化
   CALL cl_set_combo_scc('sfpb000','4044')
   LET g_sfpb000 = '1'
   LET g_sfpb001 = g_today
   DROP TABLE asfp200_temp

   IF NOT (SQLCA.sqlcode = 0 OR SQLCA.sqlcode = -206) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'drop asfp200_temp'
      LET g_errparam.popup = TRUE
      CALL cl_err()
   END IF   
   CREATE TEMP TABLE asfp200_temp(
       sel                   LIKE type_t.chr1,
       sfcbdocno             LIKE sfcb_t.sfcbdocno,
       sfcb044               LIKE sfcb_t.sfcb044,   
       sfcb045               LIKE sfcb_t.sfcb045,  
       sfaa010               LIKE sfaa_t.sfaa010,
       b_sfaa010_desc        LIKE type_t.chr500,
       b_sfaa010_desc_desc   LIKE type_t.chr500, 
       sfcb001               LIKE sfcb_t.sfcb001,
       sfcb003               LIKE sfcb_t.sfcb003,
       b_sfcb003_desc        LIKE type_t.chr500,
       sfcb004               LIKE sfcb_t.sfcb004,
       sfcb027               LIKE sfcb_t.sfcb027,
       sent_num              LIKE sfcb_t.sfcb027,
       sent_nonum            LIKE sfcb_t.sfcb027,
       sfcb020               LIKE sfcb_t.sfcb020,
       b_sfcb020_desc        LIKE type_t.chr500, 
       sfcb024               LIKE sfcb_t.sfcb024,
       hours                 LIKE sfcb_t.sfcb024,
       sfcb023               LIKE sfcb_t.sfcb023       
          )

   IF SQLCA.sqlcode != 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'create asfp200_temp'
      LET g_errparam.popup = TRUE
      CALL cl_err()
   END IF      
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="asfp200.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION asfp200_ui_dialog()
   DEFINE li_idx   LIKE type_t.num10
   #add-point:ui_dialog段define
   
   #end add-point 
   #add-point:ui_dialog段define
   
   #end add-point 
   
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   LET g_detail_cnt = g_detail_d.getLength()
   #add-point:ui_dialog段before dialog 
   LET g_errshow = 1 
   #end add-point
   
   WHILE TRUE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_detail_d.clear()
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL asfp200_init()
      END IF
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:ui_dialog段construct
#         INPUT BY NAME g_sfpb000,g_sfpb001,g_sfpb002,g_sfpb003,g_sfpb004,g_sfpb005 ATTRIBUTE(WITHOUT DEFAULTS)
         INPUT g_sfpb000,g_sfpb001,g_sfpb002,g_sfpb003,g_sfpb004,g_sfpb005  FROM sfpb000,sfpb001,sfpb002,sfpb003,sfpb004,sfpb005 ATTRIBUTE(WITHOUT DEFAULTS)   
         
            BEFORE INPUT
               IF cl_null(g_sfpb002) THEN LET g_sfpb002 = ' ' END IF
               IF cl_null(g_sfpb003) THEN LET g_sfpb003 = ' ' END IF
               IF cl_null(g_sfpb004) THEN LET g_sfpb004 = ' ' END IF
               IF cl_null(g_sfpb005) THEN LET g_sfpb005 = ' ' END IF
            AFTER FIELD sfpb002 
               CALL asfp200_sfpb002_desc()
               IF NOT cl_null(g_sfpb002) THEN
                  INITIALIZE g_chkparam.* TO NULL
                 
                  #設定g_chkparam.*的參數
                 
                  LET g_chkparam.arg1 = g_sfpb002
                  #160318-00025#3--add--str
                  LET g_errshow = TRUE 
                  LET g_chkparam.err_str[1] = "aec-00010:sub-01302|aeci001|",cl_get_progname("aeci001",g_lang,"2"),"|:EXEPROGaeci001"
                  #160318-00025#3--add--end
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ecaa001_1") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME
                  ELSE
                     #檢查失敗時後續處理
                     LET g_sfpb002 = g_sfpb002_t
                     CALL asfp200_sfpb002_desc()
                     NEXT FIELD CURRENT
                  END IF                              
               END IF
               CALL asfp200_sfpb002_desc()
               
            AFTER FIELD sfpb003 
               CALL asfp200_sfpb003_desc()
               IF NOT cl_null(g_sfpb003) THEN
                  INITIALIZE g_chkparam.* TO NULL
                 
                  #設定g_chkparam.*的參數
                 
                  LET g_chkparam.arg1 = g_sfpb003
                  #160318-00025#3--add--str
                  LET g_errshow = TRUE 
                  LET g_chkparam.err_str[1] = "amr-00004:sub-01302|amrm200|",cl_get_progname("amrm200",g_lang,"2"),"|:EXEPROGamrm200"
                  #160318-00025#3--add--end
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_mrba001_13") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME
                  ELSE
                     #檢查失敗時後續處理
                     LET g_sfpb003 = g_sfpb003_t
                     CALL asfp200_sfpb003_desc()
                     NEXT FIELD CURRENT
                  END IF                              
               END IF        
               CALL asfp200_sfpb003_desc()
               
            AFTER FIELD sfpb004 
               CALL asfp200_sfpb004_desc()
               IF NOT cl_null(g_sfpb004) THEN
                  INITIALIZE g_chkparam.* TO NULL
                 
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = g_sfpb004
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_oogd001") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME
                  ELSE
                     #檢查失敗時後續處理
                     LET g_sfpb004 = g_sfpb004_t
                     CALL asfp200_sfpb004_desc()
                     NEXT FIELD CURRENT
                  END IF                              
               END IF 
               CALL asfp200_sfpb004_desc()
               
            AFTER FIELD sfpb005 
               CALL asfp200_sfpb005_desc()
               IF NOT cl_null(g_sfpb005) THEN
                  INITIALIZE g_chkparam.* TO NULL
                 
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_sfpb005
                  #160318-00025#3--add--str
                  LET g_errshow = TRUE 
                  LET g_chkparam.err_str[1] = "aoo-00068:sub-01302|aooi427|",cl_get_progname("aooi427",g_lang,"2"),"|:EXEPROGaooi427"
                  #160318-00025#3--add--end
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooge001_1") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME
                  ELSE
                     #檢查失敗時後續處理
                     LET g_sfpb005 = g_sfpb005_t
                     CALL asfp200_sfpb005_desc()
                     NEXT FIELD CURRENT
                  END IF                              
               END IF 
               CALL asfp200_sfpb005_desc()
               
         ON ACTION controlp INFIELD sfpb002
         
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfpb002             #給予default值

            #給予arg

            CALL q_ecaa001_1()                                #呼叫開窗

            LET g_sfpb002 = g_qryparam.return1

            DISPLAY g_sfpb002 TO sfpb002            #

            NEXT FIELD sfpb002                          #返回原欄位
            
         ON ACTION controlp INFIELD sfpb003
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfpb003             #給予default值

            CALL q_mrba001_6()                                #呼叫開窗

            LET g_sfpb003 = g_qryparam.return1

            DISPLAY g_sfpb003 TO sfpb003              #

            NEXT FIELD sfpb003                        #返回原欄位     

         ON ACTION controlp INFIELD sfpb004
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfpb004            #給予default值

            CALL q_oogd001()                                #呼叫開窗

            LET g_sfpb004 = g_qryparam.return1

            DISPLAY g_sfpb004 TO sfpb004             #

            NEXT FIELD sfpb004                        #返回原欄位  
            
         ON ACTION controlp INFIELD sfpb005
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfpb005            #給予default值

            CALL q_ooge001()                                #呼叫開窗

            LET g_sfpb005 = g_qryparam.return1

            DISPLAY g_sfpb005 TO sfpb005             #

            NEXT FIELD sfpb005                        #返回原欄位              
            AFTER INPUT
               IF cl_null(g_sfpb002) THEN LET g_sfpb002 = ' ' END IF
               IF cl_null(g_sfpb003) THEN LET g_sfpb003 = ' ' END IF
               IF cl_null(g_sfpb004) THEN LET g_sfpb004 = ' ' END IF
               IF cl_null(g_sfpb005) THEN LET g_sfpb005 = ' ' END IF
         END INPUT
#         #螢幕上取條件
         CONSTRUCT BY NAME g_wc ON sfcbdocno,sfaa010,sfcb044,sfcb045,sfaa002,sfaa017,sfcb003
      
            BEFORE CONSTRUCT 
            
            ON ACTION controlp INFIELD sfcbdocno
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_sfcadocno()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO sfcbdocno      #顯示到畫面上
               NEXT FIELD sfcbdocno                         #返回原欄位
               
            ON ACTION controlp INFIELD sfaa010
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_imaa001_9()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO sfaa010      #顯示到畫面上
               NEXT FIELD sfaa010 
               
            ON ACTION controlp INFIELD sfaa002
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooag001_2()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO sfaa002      #顯示到畫面上
               NEXT FIELD sfaa002
               
            ON ACTION controlp INFIELD sfaa017
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooeg001_1()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO sfaa017      #顯示到畫面上
               NEXT FIELD sfaa017

            ON ACTION controlp INFIELD sfcb003
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.arg1 = '221'
               CALL q_oocq002()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO sfcb003      #顯示到畫面上
               NEXT FIELD sfcb003
               
         END CONSTRUCT   
         #end add-point
         #add-point:ui_dialog段input
         INPUT ARRAY g_detail_d FROM s_detail1.*
             ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                  INSERT ROW = FALSE,
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
         
            BEFORE INPUT
               CALL asfp200_b_fill_temp01()  
               IF l_ac = 0 THEN
                  LET l_ac = 1
               END IF
               LET g_detail_cnt = g_detail_d.getLength()
               IF g_detail_d.getLength() > 0 THEN
                  CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
                  CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
               ELSE
                  CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
                  CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
               END IF   
               CALL cl_set_comp_visible("sel",TRUE)    
#               LET g_detail_d_t.* = g_detail_d[l_ac].*  #BACKUP 
               DISPLAY l_ac TO FORMONLY.h_index
               DISPLAY g_detail_cnt TO FORMONLY.h_count
               
            BEFORE ROW

               LET l_ac = ARR_CURR()
               IF l_ac = 0 THEN
                  LET l_ac = 1
               END IF            
               LET g_detail_cnt = g_detail_d.getLength()
               LET g_detail_d_t.* = g_detail_d[l_ac].*
               DISPLAY l_ac TO FORMONLY.h_index
         
            AFTER FIELD sel
               IF l_ac <> 0 THEN
                  IF NOT cl_null(g_detail_d[l_ac].sel) THEN
                     IF g_detail_d[l_ac].sel NOT MATCHES '[YN]' THEN
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               
            AFTER FIELD sent_nonum
               IF l_ac <> 0 THEN 
               IF NOT cl_null(g_detail_d[l_ac].sent_nonum) THEN
                  IF NOT cl_ap_chk_range(g_detail_d[l_ac].sent_nonum,"0","0","","","azz-00079",1) THEN
                     NEXT FIELD sent_nonum
                  END IF                   
                  IF g_sfpb000 MATCHES'[12]' THEN
                     IF g_detail_d[l_ac].sent_nonum > g_detail_d[l_ac].sfcb027-g_detail_d[l_ac].sent_num THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'ain-00401'
                        LET g_errparam.extend = g_detail_d[l_ac].sent_nonum
                        LET g_errparam.popup = TRUE 
                        CALL cl_err()                     
                        LET g_detail_d[l_ac].sent_nonum = g_detail_d_t.sent_nonum
                        NEXT FIELD sent_nonum
                     END IF                     
                  END IF
        
                  LET g_detail_d[l_ac].hours = g_detail_d[l_ac].sfcb023 + g_detail_d[l_ac].sfcb024*g_detail_d[l_ac].sent_nonum 
               END IF 
               LET g_detail_d_t.sent_nonum = g_detail_d[l_ac].sent_nonum  
               LET g_detail_d_t.hours = g_detail_d[l_ac].hours 
               END IF               
               
            ON ROW CHANGE
               IF INT_FLAG THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 9001
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET INT_FLAG = 0
                  NEXT FIELD sel
               END IF
#               UPDATE asfp200_temp SET sent_nonum = g_detail_d[l_ac].sent_nonum,
#                                       hours = g_detail_d[l_ac].hours
#                WHERE sfcbdocno = g_detail_d[l_ac].sfcbdocno
#                  AND sfcb044 = g_detail_d[l_ac].sfcb044
#                  AND sfcb045 = g_detail_d[l_ac].sfcb045
#                  AND sfaa010 = g_detail_d[l_ac].sfaa010
#                  AND sfcb001 = g_detail_d[l_ac].sfcb001
#                  AND sfcb003 = g_detail_d[l_ac].sfcb003
#                  AND sfcb004 = g_detail_d[l_ac].sfcb004
#                  AND sfcb027 = g_detail_d[l_ac].sfcb027    
#                  AND sent_num = g_detail_d[l_ac].sent_num         
#                  AND sent_nonum = g_detail_d_t.sent_nonum         
#                  AND sfcb020 = g_detail_d[l_ac].sfcb020   
#                  AND sfcb024 = g_detail_d[l_ac].sfcb024
#                  AND hours = g_detail_d_t.hours 
#                  AND sfcb023 = g_detail_d[l_ac].sfcb023                                       
               
            AFTER FIELD hours
               IF l_ac <> 0 THEN 
               IF NOT cl_ap_chk_range(g_detail_d[l_ac].hours,"0","0","","","azz-00079",1) THEN
                  NEXT FIELD hours
               END IF  
               LET g_detail_d_t.hours = g_detail_d[l_ac].hours                
               END IF   
            AFTER ROW
               IF 1=1 THEN
               END IF               
            AFTER INPUT
    
         END INPUT  
         
         INPUT ARRAY g_detail2_d FROM s_detail2.*
             ATTRIBUTE(COUNT = g_detail_cnt2,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                  INSERT ROW = FALSE,
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
         
            BEFORE INPUT
               
               LET g_detail_cnt2 = g_detail2_d.getLength()
#               IF g_detail_d.getLength() > 0 THEN
#                  CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
#                  CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
#               ELSE
#                  CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
#                  CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
#               END IF   
               CALL cl_set_comp_visible("sel01",TRUE)    
               DISPLAY g_detail_cnt2 TO FORMONLY.h_count
               DISPLAY l_ac2 TO FORMONLY.h_index
#               CALL fgl_set_arr_curr(l_ac2)
               
            BEFORE ROW

               LET l_ac2 = ARR_CURR()
            
               LET g_detail_cnt2 = g_detail2_d.getLength()

               LET g_detail2_d_t.* = g_detail2_d[l_ac2].*  #BACKUP    
               
               DISPLAY g_detail_cnt2 TO FORMONLY.h_count
               DISPLAY l_ac2 TO FORMONLY.h_index
               
            AFTER FIELD sel01
               IF l_ac2 <> 0 THEN
                  IF NOT cl_null(g_detail2_d[l_ac2].sel01) THEN
                     IF g_detail2_d[l_ac2].sel01 NOT MATCHES '[YN]' THEN
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               
            AFTER ROW
                  
            AFTER INPUT
    
         END INPUT                          
         #end add-point
         #add-point:ui_dialog段自定義display array
#         DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
# 
#            BEFORE DISPLAY
#               
#            BEFORE ROW
#               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
#               LET l_ac = g_detail_idx
#               DISPLAY g_detail_idx TO FORMONLY.h_index
#               DISPLAY g_detail_d.getLength() TO FORMONLY.h_count
#               CALL asfp200_fetch()
#                 
#         END DISPLAY  
         
#         DISPLAY ARRAY g_detail2_d TO s_detail2.* ATTRIBUTE(COUNT=g_detail_cnt2)
# 
#            BEFORE DISPLAY
#               
#            BEFORE ROW
#               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail2")
#               LET l_ac2 = g_detail_idx2
#               DISPLAY g_detail_idx2 TO FORMONLY.h_index
#               DISPLAY g_detail2_d.getLength() TO FORMONLY.h_count
#                 
#         END DISPLAY           
         #end add-point
 
         BEFORE DIALOG
            IF g_detail_d.getLength() > 0 THEN
               CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
            ELSE
               CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
            END IF
            #add-point:ui_dialog段before_dialog2
            IF NOT cl_null(g_sfpb001) THEN
               LET g_sfpb001 = g_today
            END IF
            DISPLAY g_sfpb001 TO sfpb001
            DISPLAY g_s_sfpb010 TO s_sfpb010
            DISPLAY g_s_sfpb013 TO s_sfpb013
            DISPLAY g_s_used TO s_used
            DISPLAY g_s_rate TO s_rate              
            #end add-point
 
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            #add-point:ui_dialog段on action selall
            
            #end add-point            
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "Y"
               #add-point:ui_dialog段on action selall
               
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selall
#            CALL DIALOG.setSelectionRange("s_detail2", 1, -1, 1)
#            FOR li_idx = 1 TO g_detail2_d.getLength()
#               IF DIALOG.isRowSelected("s_detail2", li_idx) THEN
#                  LET g_detail2_d[li_idx].sel01 = "Y"
#               END IF
#            END FOR
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "N"
               #add-point:ui_dialog段on action selnone
               
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selnone
            
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "Y"
               END IF
            END FOR
            #add-point:ui_dialog段on action sel
#            FOR li_idx = 1 TO g_detail2_d.getLength()
#               IF DIALOG.isRowSelected("s_detail2", li_idx) THEN
#                  LET g_detail2_d[li_idx].sel01 = "Y"
#               END IF
#            END FOR
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "N"
               END IF
            END FOR
            #add-point:ui_dialog段on action unsel
 
            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL asfp200_filter()
            #add-point:ON ACTION filter
            
            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION accept
            #add-point:ui_dialog段accept之前
            CALL g_detail2_d.clear()
            #end add-point
            CALL asfp200_query()
             
         # 條件清除
         ON ACTION qbeclear
            #add-point:ui_dialog段
            
            #end add-point
 
         # 重新整理
         ON ACTION datarefresh
            LET g_error_show = 1
            #add-point:ui_dialog段datarefresh
            
            #end add-point
            CALL asfp200_b_fill()
 
         #add-point:ui_dialog段action

         ON ACTION batch_execute    
            CALL asfp200_batch_sfpb()
            
         ON ACTION in01   #派工     
            LET g_flag = 'Y'          
            CALL asfp200_batch_sfpb_temp()
            CALL asfp200_b_fill_temp01()
            CALL ui.interface.refresh()
         
         ON ACTION out01  #取消派工
            LET g_flag = 'N'    
            CALL asfp200_batch_sfpb_temp_01()
            CALL asfp200_b_fill_temp01()
            CALL ui.interface.refresh()
        
         ON ACTION up01  #升序
            CALL asfp200_sfpb_asc()
         ON ACTION down01  #降序        
            CALL asfp200_sfpb_des()            
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
 
{</section>}
 
{<section id="asfp200.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION asfp200_query()
   DEFINE ls_wc      STRING
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   
   #end add-point 
   #add-point:query段define
   
   #end add-point 
    
   #add-point:cs段after_construct
   
   #end add-point
        
   LET g_error_show = 1
   CALL asfp200_b_fill()
   LET l_ac = g_master_idx
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   END IF
   
   #add-point:cs段after_query
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="asfp200.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION asfp200_b_fill()
 
   DEFINE ls_wc           STRING
   #add-point:b_fill段define
   DEFINE l_sfcb023       LIKE sfcb_t.sfcb023
   #end add-point
   #add-point:b_fill段define
   
   #end add-point
 
   #add-point:b_fill段sql_before
   
   IF cl_null(g_wc) THEN LET g_wc = " 1=1" END IF
   LET g_sql = " SELECT 'N',sfcbdocno,sfcb044,sfcb045,sfaa010,'','',sfcb001,sfcb003,'',sfcb004,sfcb027,0,0,sfcb020,'',sfcb024,0,sfcb023 FROM sfcb_t ",
               "   LEFT OUTER JOIN sfaa_t ON sfaadocno = sfcbdocno AND sfaaent = sfcbent AND sfaasite = sfcbsite ",
               "  WHERE sfcbent = ? ",
               "    AND sfcbsite = '",g_site,"'",
               "    AND sfaastus = 'F' ",
               "    AND ", g_wc,
               "  ORDER BY sfcbdocno,sfcb044,sfcb045,sfaa010,sfcb001,sfcb003,sfcb004"               
   #end add-point
 
   PREPARE asfp200_sel FROM g_sql
   DECLARE b_fill_curs CURSOR FOR asfp200_sel
   
   CALL g_detail_d.clear()
   #add-point:b_fill段其他頁簽清空
   DELETE FROM asfp200_temp 
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs USING g_enterprise INTO 
   #add-point:b_fill段foreach_into
                       g_detail_d[l_ac].sel,g_detail_d[l_ac].sfcbdocno,g_detail_d[l_ac].sfcb044,g_detail_d[l_ac].sfcb045,g_detail_d[l_ac].sfaa010,g_detail_d[l_ac].b_sfaa010_desc,
                       g_detail_d[l_ac].b_sfaa010_desc_desc,g_detail_d[l_ac].sfcb001,g_detail_d[l_ac].sfcb003,g_detail_d[l_ac].b_sfcb003_desc,
                       g_detail_d[l_ac].sfcb004,g_detail_d[l_ac].sfcb027,g_detail_d[l_ac].sent_num,g_detail_d[l_ac].sent_nonum,g_detail_d[l_ac].sfcb020,
                       g_detail_d[l_ac].b_sfcb020_desc,g_detail_d[l_ac].sfcb024,g_detail_d[l_ac].hours,g_detail_d[l_ac].sfcb023
   #end add-point
   
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      #add-point:b_fill段資料填充
      IF cl_null(g_detail_d[l_ac].sfcb023) THEN LET g_detail_d[l_ac].sfcb023 = 0 END IF
      #已派工数量
      SELECT SUM(sfpb010) INTO g_detail_d[l_ac].sent_num FROM sfpb_t
       WHERE sfpbent = g_enterprise
         AND sfpbsite = g_site
         AND sfpb006 = g_detail_d[l_ac].sfcbdocno
         AND sfpb007 = g_detail_d[l_ac].sfcb001
         AND sfpb008 = g_detail_d[l_ac].sfcb003
         AND sfpb009 = g_detail_d[l_ac].sfcb004
      IF cl_null(g_detail_d[l_ac].sent_num) THEN
         LET g_detail_d[l_ac].sent_num = 0
      END IF
      LET g_detail_d[l_ac].sent_nonum = g_detail_d[l_ac].sfcb027-g_detail_d[l_ac].sent_num  
      IF g_detail_d[l_ac].sent_nonum = 0 THEN
         CONTINUE FOREACH
      END IF      
      LET g_detail_d[l_ac].hours = g_detail_d[l_ac].sfcb023 + g_detail_d[l_ac].sfcb024*g_detail_d[l_ac].sent_nonum 
      CALL s_desc_get_item_desc(g_detail_d[l_ac].sfaa010) RETURNING g_detail_d[l_ac].b_sfaa010_desc,g_detail_d[l_ac].b_sfaa010_desc_desc
      CALL s_desc_get_acc_desc('221',g_detail_d[l_ac].sfcb003) RETURNING g_detail_d[l_ac].b_sfcb003_desc
      CALL s_desc_get_unit_desc(g_detail_d[l_ac].sfcb020) RETURNING g_detail_d[l_ac].b_sfcb020_desc     
      INSERT INTO asfp200_temp (sel,sfcbdocno,sfcb044,sfcb045,sfaa010,b_sfaa010_desc,b_sfaa010_desc_desc,sfcb001,sfcb003,b_sfcb003_desc,
                                sfcb004,sfcb027,sent_num,sent_nonum,sfcb020,b_sfcb020_desc,sfcb024,hours,sfcb023)       
                     VALUES('N',g_detail_d[l_ac].sfcbdocno,g_detail_d[l_ac].sfcb044,g_detail_d[l_ac].sfcb045,
                            g_detail_d[l_ac].sfaa010,g_detail_d[l_ac].b_sfaa010_desc,
                            g_detail_d[l_ac].b_sfaa010_desc_desc,g_detail_d[l_ac].sfcb001,g_detail_d[l_ac].sfcb003,g_detail_d[l_ac].b_sfcb003_desc,
                            g_detail_d[l_ac].sfcb004,g_detail_d[l_ac].sfcb027,g_detail_d[l_ac].sent_num,g_detail_d[l_ac].sent_nonum,g_detail_d[l_ac].sfcb020,
                            g_detail_d[l_ac].b_sfcb020_desc,g_detail_d[l_ac].sfcb024,g_detail_d[l_ac].hours,g_detail_d[l_ac].sfcb023)
                                          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "INSERT INTO asfp200_temp:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()    
      END IF         
      #end add-point
      
      CALL asfp200_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
   #add-point:b_fill段資料填充(其他單身)
   CALL g_detail_d.deleteElement(g_detail_d.getLength())
   LET g_cnt = 1
   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE asfp200_sel
   
   LET l_ac = 1
   CALL asfp200_fetch()
   #add-point:b_fill段資料填充(其他單身)
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="asfp200.fetch" >}
#+ 單身陣列填充2
PRIVATE FUNCTION asfp200_fetch()
 
   DEFINE li_ac           LIKE type_t.num10
   #add-point:fetch段define
   DEFINE l_sql           STRING
   DEFINE l_used          LIKE sfpb_t.sfpb010
   DEFINE l_sfpb001       LIKE sfpb_t.sfpb001
   DEFINE l_sfpb002       LIKE sfpb_t.sfpb002
   DEFINE l_sfpb003       LIKE sfpb_t.sfpb003
   DEFINE l_mrbh004       LIKE mrbh_t.mrbh004
   DEFINE l_mrbh003       LIKE mrbh_t.mrbh003
   #end add-point
   #add-point:fetch段define
   
   #end add-point
   
   LET li_ac = l_ac 
   
   #add-point:單身填充後
   RETURN 
   CALL g_detail2_d.clear()  
   IF l_ac = 0 THEN
      LET l_ac = 1
   END IF      
   LET l_sql = " SELECT DISTINCT 'N',sfpb006,sfpb007,sfaa010,'','',sfpb008,'',sfpb009,sfpb010,sfpb011,'',sfpb012,sfpb013 FROM sfpb_t ",
               "   LEFT OUTER JOIN sfaa_t ON sfaadocno = sfpb006 AND sfaaent = sfpbent AND sfaasite = sfpbsite ",
               "  WHERE sfpbent = '",g_enterprise,"'",
               "    AND sfpbsite = '",g_site,"'",
               "    AND sfpb006 = '",g_detail_d[l_ac].sfcbdocno,"'",
               "    AND sfpb007 = '",g_detail_d[l_ac].sfcb001,"'",
               "    AND sfpb008 = '",g_detail_d[l_ac].sfcb003,"'",
               "    AND sfpb009 = '",g_detail_d[l_ac].sfcb004,"'"
                              
   PREPARE asfp200_sel_sfpb FROM l_sql
   DECLARE b_fill_curs_sfpb CURSOR FOR asfp200_sel_sfpb  
   LET g_cnt2 = l_ac2
   LET l_ac2 = 1      
   LET g_s_sfpb010 = 0
   LET g_s_sfpb013 = 0
   FOREACH b_fill_curs_sfpb INTO g_detail2_d[l_ac2].sel01,g_detail2_d[l_ac2].sfpb006,g_detail2_d[l_ac2].sfpb007,g_detail2_d[l_ac2].sfaa010,g_detail2_d[l_ac2].sfaa010_a_desc,
                            g_detail2_d[l_ac2].sfaa010_a_desc_desc,g_detail2_d[l_ac2].sfpb008,g_detail2_d[l_ac2].sfpb008_desc,g_detail2_d[l_ac2].sfpb009,
                            g_detail2_d[l_ac2].sfpb010,g_detail2_d[l_ac2].sfpb011,g_detail2_d[l_ac2].sfpb011_desc,g_detail2_d[l_ac2].sfpb012,
                            g_detail2_d[l_ac2].sfpb013
                            
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      LET g_s_sfpb010 = g_s_sfpb010 + g_detail2_d[l_ac2].sfpb010
      LET g_s_sfpb013 = g_s_sfpb013 + g_detail2_d[l_ac2].sfpb013
      CALL s_desc_get_item_desc(g_detail2_d[l_ac2].sfaa010) RETURNING g_detail2_d[l_ac2].sfaa010_a_desc,g_detail2_d[l_ac2].sfaa010_a_desc_desc
      CALL s_desc_get_unit_desc(g_detail2_d[l_ac2].sfpb011) RETURNING g_detail2_d[l_ac2].sfpb011_desc
      CALL s_desc_get_acc_desc('221',g_detail2_d[l_ac2].sfpb008) RETURNING g_detail2_d[l_ac2].sfpb008_desc
      LET l_ac2 = l_ac2 + 1
      IF l_ac2 > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
    
   LET g_detail_cnt2 = l_ac2 - 1 
   DISPLAY g_detail_cnt2 TO FORMONLY.h_count
   DISPLAY g_s_sfpb010 TO s_sfpb010
   IF cl_null(g_s_sfpb013) THEN
      LET g_s_sfpb013 = 0
   END IF   
   DISPLAY g_s_sfpb013 TO s_sfpb013
   LET l_ac2 = g_cnt2
   LET g_cnt2= 0
   
   CLOSE b_fill_curs_sfpb
   FREE asfp200_sel_sfpb
   
   LET l_ac2 = 1   
   
   LET l_sql = " SELECT DISTINCT sfpb001,sfpb002,sfpb003 FROM sfpb_t ",
               "  WHERE sfpbent = '",g_enterprise,"'",
               "    AND sfpbsite = '",g_site,"'",
               "    AND sfpb006 = '",g_detail_d[l_ac].sfcbdocno,"'",
               "    AND sfpb007 = '",g_detail_d[l_ac].sfcb001,"'",
               "    AND sfpb008 = '",g_detail_d[l_ac].sfcb003,"'",
               "    AND sfpb009 = '",g_detail_d[l_ac].sfcb004,"'"   
   PREPARE asfp200_sel_sfpb01 FROM l_sql
   DECLARE b_fill_curs_sfpb01 CURSOR FOR asfp200_sel_sfpb01
   LET g_s_used = 0
   FOREACH b_fill_curs_sfpb01 INTO l_sfpb001,l_sfpb002,l_sfpb003
      SELECT mrbh004,mrbh003 INTO l_mrbh004,l_mrbh003 FROM mrbh_t
       WHERE mrbhent = g_enterprise
         AND mrbhsite = g_site
         AND mrbh001 = l_sfpb003
         AND mrbh002 = l_sfpb001
         AND mrbh005 = 'Y'
         AND mrbh006 = l_sfpb002
      CALL asfp200_get_time01(l_mrbh003,l_mrbh004) RETURNING l_used 
      IF cl_null(l_used) THEN LET l_used = 0 END IF
      LET g_s_used = g_s_used + l_used     
   END FOREACH
   LET g_s_rate = g_s_sfpb013/g_s_used
   IF cl_null(g_s_rate) THEN 
      LET g_s_rate = 0
   END IF   
   #end add-point 
   
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="asfp200.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION asfp200_detail_show()
   #add-point:show段define
   
   #end add-point
   #add-point:show段define
   
   #end add-point
   
   #add-point:detail_show段
   CALL s_desc_get_item_desc(g_detail_d[l_ac].sfaa010) RETURNING g_detail_d[l_ac].b_sfaa010_desc,g_detail_d[l_ac].b_sfaa010_desc_desc
   CALL s_desc_get_acc_desc('221',g_detail_d[l_ac].sfcb003) RETURNING g_detail_d[l_ac].b_sfcb003_desc
   CALL s_desc_get_unit_desc(g_detail_d[l_ac].sfcb020) RETURNING g_detail_d[l_ac].b_sfcb020_desc
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="asfp200.filter" >}
#+ filter過濾功能
PRIVATE FUNCTION asfp200_filter()
   #add-point:filter段define
   
   #end add-point    
   #add-point:filter段define
   
   #end add-point    
   
   DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
      ON UPDATE
 
   END DISPLAY
 
   LET l_ac = 1
   LET g_detail_cnt = 1
   #add-point:filter段define
   
   #end add-point    
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
   
   CALL asfp200_b_fill()
   
END FUNCTION
 
{</section>}
 
{<section id="asfp200.filter_parser" >}
#+ filter欄位解析
PRIVATE FUNCTION asfp200_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   
   #end add-point    
   #add-point:filter段define
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="asfp200.filter_show" >}
#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION asfp200_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = asfp200_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="asfp200.other_function" readonly="Y" >}
#add-point:自定義元件(Function)

################################################################################
# Descriptions...: 產生工單派工記錄檔
# Memo...........:
# Usage..........: CALL asfp200_batch_sfpb()
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION asfp200_batch_sfpb()
DEFINE   i           LIKE type_t.num5
DEFINE   l_sfpb      RECORD LIKE sfpb_t.*
DEFINE   r_success   LIKE type_t.num5
DEFINE   l_cnt       LIKE type_t.num5
DEFINE   l_flag      LIKE type_t.chr1
DEFINE   l_count     LIKE type_t.num5
DEFINE   l_sfpb010   LIKE sfpb_t.sfpb010
DEFINE   l_sfpb013   LIKE sfpb_t.sfpb013

#工單派工
   LET r_success = TRUE
   LET l_count = 0
   LET l_flag = 'N'
   CALL cl_err_collect_init()
#   FOR i = 1 TO g_detail_d.getLength()
#      IF g_detail_d[i].sel = 'N' THEN
#         CONTINUE FOR
#      END IF
#      LET l_cnt = 0
#      SELECT COUNT(*) INTO l_cnt FROM sfpb_t 
#       WHERE sfpbent = g_enterprise
#         AND sfpbsite = g_site
#         AND sfpb001 = g_sfpb001
#         AND sfpb002 = g_sfpb002
#         AND sfpb003 = g_sfpb003
#         AND sfpb004 = g_sfpb004
#         AND sfpb005 = g_sfpb005
#         AND sfpb006 = g_detail_d[i].sfcbdocno
#         AND sfpb007 = g_detail_d[i].sfcb001
#         AND sfpb008 = g_detail_d[i].sfcb003
#         AND sfpb009 = g_detail_d[i].sfcb004
#         
#      CALL s_transaction_begin()
#      IF l_cnt = 0 THEN
#         LET l_sfpb.sfpbent = g_enterprise
#         LET l_sfpb.sfpbsite = g_site
#         LET l_sfpb.sfpb001 = g_sfpb001
#         LET l_sfpb.sfpb002 = g_sfpb002
#         LET l_sfpb.sfpb003 = g_sfpb003
#         LET l_sfpb.sfpb004 = g_sfpb004
#         LET l_sfpb.sfpb005 = g_sfpb005
#         LET l_sfpb.sfpb006 = g_detail_d[i].sfcbdocno
#         LET l_sfpb.sfpb007 = g_detail_d[i].sfcb001
#         LET l_sfpb.sfpb008 = g_detail_d[i].sfcb003
#         LET l_sfpb.sfpb009 = g_detail_d[i].sfcb004
#         LET l_sfpb.sfpb010 = g_detail_d[i].sent_nonum
#         LET l_sfpb.sfpb011 = g_detail_d[i].sfcb020
#         LET l_sfpb.sfpb012 = g_detail_d[i].sfcb024
#         LET l_sfpb.sfpb013 = g_detail_d[i].hours
#         INSERT INTO sfpb_t (sfpbent,sfpbsite,sfpb001,sfpb002,sfpb003,sfpb004,sfpb005,sfpb006,sfpb007,
#                             sfpb008,sfpb009,sfpb010,sfpb011,sfpb012,sfpb013)
#                     VALUES (l_sfpb.sfpbent,l_sfpb.sfpbsite,l_sfpb.sfpb001,l_sfpb.sfpb002,l_sfpb.sfpb003,l_sfpb.sfpb004,
#                             l_sfpb.sfpb005,l_sfpb.sfpb006,l_sfpb.sfpb007,l_sfpb.sfpb008,l_sfpb.sfpb009,l_sfpb.sfpb010,
#                             l_sfpb.sfpb011,l_sfpb.sfpb012,l_sfpb.sfpb013)
#         IF SQLCA.SQLCODE THEN
#            LET r_success = FALSE  
#            CALL s_transaction_end('N','0') 
#            INITIALIZE g_errparam TO NULL
#            LET g_errparam.code = 'std-00009'
#            LET g_errparam.extend = g_detail_d[i].sfcbdocno
#            LET g_errparam.popup = TRUE
#            CALL cl_err()           
#         ELSE
#            CALL s_transaction_end('Y','0') 
#            LET l_flag = 'Y'
#            LET l_count = l_count + 1            
#         END IF
#      ELSE
#         UPDATE sfpb_t SET sfpb010 = sfpb010 + l_sfpb.sfpb010,
#                           sfpb013 = sfpb013 + l_sfpb.sfpb013
#          WHERE sfpbent = g_enterprise
#            AND sfpbsite = g_site
#            AND sfpb001 = g_sfpb001
#            AND sfpb002 = g_sfpb002
#            AND sfpb003 = g_sfpb003
#            AND sfpb004 = g_sfpb004
#            AND sfpb005 = g_sfpb005
#            AND sfpb006 = g_detail_d[i].sfcbdocno
#            AND sfpb007 = g_detail_d[i].sfcb001
#            AND sfpb008 = g_detail_d[i].sfcb003
#            AND sfpb009 = g_detail_d[i].sfcb004  
#            
#         IF SQLCA.SQLCODE THEN
#            LET r_success = FALSE  
#            CALL s_transaction_end('N','0') 
#            INITIALIZE g_errparam TO NULL
#            LET g_errparam.code = 'std-00009'
#            LET g_errparam.extend = g_detail_d[i].sfcbdocno
#            LET g_errparam.popup = TRUE
#            CALL cl_err()           
#         ELSE
#            CALL s_transaction_end('Y','0')   
#            LET l_flag = 'Y'
#            LET l_count = l_count + 1             
#         END IF            
#      END IF
#   END FOR 
   IF cl_null(g_sfpb002) THEN LET g_sfpb002 = ' ' END IF
   IF cl_null(g_sfpb003) THEN LET g_sfpb003 = ' ' END IF
   IF cl_null(g_sfpb004) THEN LET g_sfpb004 = ' ' END IF
   IF cl_null(g_sfpb005) THEN LET g_sfpb005 = ' ' END IF
   FOR i = 1 TO g_detail2_d.getLength()

      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt FROM sfpb_t 
       WHERE sfpbent = g_enterprise
         AND sfpbsite = g_site
         AND sfpb001 = g_sfpb001
         AND sfpb002 = g_sfpb002
         AND sfpb003 = g_sfpb003
         AND sfpb004 = g_sfpb004
         AND sfpb005 = g_sfpb005
         AND sfpb006 = g_detail2_d[i].sfpb006
         AND sfpb007 = g_detail2_d[i].sfpb007
         AND sfpb008 = g_detail2_d[i].sfpb008
         AND sfpb009 = g_detail2_d[i].sfpb009
         
      CALL s_transaction_begin()
      LET l_sfpb.sfpb010 = g_detail2_d[i].sfpb010
      LET l_sfpb.sfpb013 = g_detail2_d[i].sfpb013
      IF l_cnt = 0 THEN
         LET l_sfpb.sfpbent = g_enterprise
         LET l_sfpb.sfpbsite = g_site
         LET l_sfpb.sfpb001 = g_sfpb001
         LET l_sfpb.sfpb002 = g_sfpb002
         LET l_sfpb.sfpb003 = g_sfpb003
         LET l_sfpb.sfpb004 = g_sfpb004
         LET l_sfpb.sfpb005 = g_sfpb005
         LET l_sfpb.sfpb006 = g_detail2_d[i].sfpb006
         LET l_sfpb.sfpb007 = g_detail2_d[i].sfpb007
         LET l_sfpb.sfpb008 = g_detail2_d[i].sfpb008
         LET l_sfpb.sfpb009 = g_detail2_d[i].sfpb009
         LET l_sfpb.sfpb010 = g_detail2_d[i].sfpb010
         LET l_sfpb.sfpb011 = g_detail2_d[i].sfpb011
         LET l_sfpb.sfpb012 = g_detail2_d[i].sfpb012
         LET l_sfpb.sfpb013 = g_detail2_d[i].sfpb013
         INSERT INTO sfpb_t (sfpbent,sfpbsite,sfpb000,sfpb001,sfpb002,sfpb003,sfpb004,sfpb005,sfpb006,sfpb007,
                             sfpb008,sfpb009,sfpb010,sfpb011,sfpb012,sfpb013)
                     VALUES (l_sfpb.sfpbent,l_sfpb.sfpbsite,g_sfpb000,l_sfpb.sfpb001,l_sfpb.sfpb002,l_sfpb.sfpb003,l_sfpb.sfpb004,
                             l_sfpb.sfpb005,l_sfpb.sfpb006,l_sfpb.sfpb007,l_sfpb.sfpb008,l_sfpb.sfpb009,l_sfpb.sfpb010,
                             l_sfpb.sfpb011,l_sfpb.sfpb012,l_sfpb.sfpb013)
         IF SQLCA.SQLCODE THEN
            LET r_success = FALSE  
            CALL s_transaction_end('N','0') 
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'std-00009'
            LET g_errparam.extend = g_detail2_d[i].sfpb006
            LET g_errparam.popup = TRUE
            CALL cl_err()           
         ELSE
            CALL s_transaction_end('Y','0') 
            LET l_flag = 'Y'
            LET l_count = l_count + 1            
         END IF
      ELSE
         SELECT sfpb010,sfpb013 INTO l_sfpb010,l_sfpb013 FROM sfpb_t
          WHERE sfpbent = g_enterprise
            AND sfpbsite = g_site
            AND sfpb001 = g_sfpb001
            AND sfpb002 = g_sfpb002
            AND sfpb003 = g_sfpb003
            AND sfpb004 = g_sfpb004
            AND sfpb005 = g_sfpb005
            AND sfpb006 = g_detail2_d[i].sfpb006
            AND sfpb007 = g_detail2_d[i].sfpb007
            AND sfpb008 = g_detail2_d[i].sfpb008
            AND sfpb009 = g_detail2_d[i].sfpb009 
         IF cl_null(l_sfpb010) THEN LET l_sfpb010 = 0 END IF
         IF cl_null(l_sfpb013) THEN LET l_sfpb013 = 0 END IF         
         UPDATE sfpb_t SET sfpb010 = l_sfpb010 + l_sfpb.sfpb010,
                           sfpb013 = l_sfpb013 + l_sfpb.sfpb013
          WHERE sfpbent = g_enterprise
            AND sfpbsite = g_site
            AND sfpb001 = g_sfpb001
            AND sfpb002 = g_sfpb002
            AND sfpb003 = g_sfpb003
            AND sfpb004 = g_sfpb004
            AND sfpb005 = g_sfpb005
            AND sfpb006 = g_detail2_d[i].sfpb006
            AND sfpb007 = g_detail2_d[i].sfpb007
            AND sfpb008 = g_detail2_d[i].sfpb008
            AND sfpb009 = g_detail2_d[i].sfpb009
            
         IF SQLCA.SQLCODE THEN
            LET r_success = FALSE  
            CALL s_transaction_end('N','0') 
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'std-00009'
            LET g_errparam.extend = g_detail2_d[i].sfpb006
            LET g_errparam.popup = TRUE
            CALL cl_err()           
         ELSE
            CALL s_transaction_end('Y','0')   
            LET l_flag = 'Y'
            LET l_count = l_count + 1             
         END IF            
      END IF
   END FOR 
   CALL cl_err_collect_show()
   IF l_flag = 'Y' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ain-00398'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      LET g_errparam.replace[1] = l_count
      CALL cl_err()  
      CALL g_detail2_d.clear()  
      LET g_s_sfpb010 = 0
      LET g_s_sfpb013 = 0
      LET g_s_used = 0
      LET g_s_rate = 0
      DISPLAY 0 TO FORMONLY.h_count
      DISPLAY g_s_sfpb010 TO s_sfpb010
      DISPLAY g_s_sfpb013 TO s_sfpb013
      DISPLAY g_s_used TO s_used
      DISPLAY g_s_rate TO s_rate      
   END IF   
END FUNCTION

################################################################################
# Descriptions...: 取消派工
# Memo...........:
# Usage..........: CALL asfp200_batch_sfpb_undo()
#                  RETURNING r_success
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION asfp200_batch_sfpb_undo()
DEFINE i           LIKE type_t.num5
DEFINE r_success   LIKE type_t.num5

   LET r_success = TRUE
   CALL cl_err_collect_init()
   FOR i = 1 TO g_detail_d.getLength()
      IF g_detail_d[i].sel = 'N' THEN
         CONTINUE FOR
      END IF
      CALL s_transaction_begin()
#      LET l_sfpb.sfpbent = g_enterprise
#      LET l_sfpb.sfpbsite = g_site
#      LET l_sfpb.sfpb001 = g_sfpb001
#      LET l_sfpb.sfpb002 = g_sfpb002
#      LET l_sfpb.sfpb003 = g_sfpb003
#      LET l_sfpb.sfpb004 = g_sfpb004
#      LET l_sfpb.sfpb005 = g_sfpb005
#      LET l_sfpb.sfpb006 = g_detail_d[i].sfcbdocno
#      LET l_sfpb.sfpb007 = g_detail_d[i].sfcb001
#      LET l_sfpb.sfpb008 = g_detail_d[i].sfcb003
#      LET l_sfpb.sfpb009 = g_detail_d[i].sfcb004
#      LET l_sfpb.sfpb010 = g_detail_d[i].sent_nonum
#      LET l_sfpb.sfpb011 = g_detail_d[i].sfcb020
#      LET l_sfpb.sfpb012 = g_detail_d[i].sfcb024
#      LET l_sfpb.sfpb013 = g_detail_d[i].hours
      DELETE FROM sfpb_t WHERE sfpbent = g_enterprise
                           AND sfpbsite = g_site
                           AND sfpb006 = g_detail_d[i].sfcbdocno
                           AND sfpb007 = g_detail_d[i].sfcb001
                           AND sfpb008 = g_detail_d[i].sfcb003
                           AND sfpb009 = g_detail_d[i].sfcb004
      IF SQLCA.SQLCODE THEN
         LET r_success = FALSE  
         CALL s_transaction_end('N','0') 
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'std-00009'
         LET g_errparam.extend = g_detail_d[i].sfcbdocno
         LET g_errparam.popup = TRUE
         CALL cl_err()           
      ELSE
         CALL s_transaction_end('Y','0')          
      END IF
   END FOR 
   CALL cl_err_collect_show()      
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL asfp200_sfpb002_desc()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION asfp200_sfpb002_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_site
   LET g_ref_fields[2] = g_sfpb002
   CALL ap_ref_array2(g_ref_fields,"SELECT ecaa002 FROM ecaa_t WHERE ecaaent='"||g_enterprise||"' AND ecaasite=? AND ecaa001=? ","") RETURNING g_rtn_fields
   LET g_sfpb002_desc = '', g_rtn_fields[1] , ''
   DISPLAY g_sfpb002_desc TO sfpb002_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL asfp200_sfpb003_desc()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION asfp200_sfpb003_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_sfpb003
   CALL ap_ref_array2(g_ref_fields,"SELECT mrba004 FROM mrba_t WHERE mrbaent='"||g_enterprise||"' AND mrbasite = '"||g_site||"' AND mrba001=? ","") RETURNING g_rtn_fields
   LET g_sfpb003_desc = '', g_rtn_fields[1] , ''
   DISPLAY g_sfpb003_desc TO sfpb003_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL asfp200_sfpb004_desc()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION asfp200_sfpb004_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_site
   LET g_ref_fields[2] = g_sfpb004
   CALL ap_ref_array2(g_ref_fields,"SELECT oogd002 FROM oogd_t WHERE oogdent='"||g_enterprise||"' AND oogdsite=? AND oogd001=? ","") RETURNING g_rtn_fields
   LET g_sfpb004_desc = '', g_rtn_fields[1] , ''
   DISPLAY g_sfpb004_desc TO sfpb004_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL asfp200_sfpb005_desc()
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION asfp200_sfpb005_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_site
   LET g_ref_fields[2] = g_sfpb005
   CALL ap_ref_array2(g_ref_fields,"SELECT ooge002 FROM ooge_t WHERE oogeent='"||g_enterprise||"' AND oogesite=? AND ooge001=? ","") RETURNING g_rtn_fields
   LET g_sfpb005_desc = '', g_rtn_fields[1] , ''
   DISPLAY g_sfpb005_desc TO sfpb005_desc
END FUNCTION

################################################################################
# Descriptions...: 派工
# Memo...........:
# Usage..........: CALL asfp200_batch_sfpb_temp()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION asfp200_batch_sfpb_temp()
DEFINE   i           LIKE type_t.num5
DEFINE   j           LIKE type_t.num5
DEFINE   m           LIKE type_t.num5
DEFINE   r_success   LIKE type_t.num5
DEFINE   l_used      LIKE sfpb_t.sfpb010
DEFINE   l_ac3       LIKE type_t.num5
DEFINE   l_ac4       LIKE type_t.num5
DEFINE   l_mrbh004   LIKE mrbh_t.mrbh004
DEFINE   l_mrbh003   LIKE mrbh_t.mrbh003
#工單派工
   LET r_success = TRUE
   LET j = g_detail2_d.getLength() + 1
   LET g_s_sfpb010 = 0
   LET g_s_sfpb013 = 0
   LET g_s_used = 0
   FOR i = 1 TO g_detail_d.getLength()
      LET l_ac3 = i
      IF g_detail_d[l_ac3].sel = 'N' THEN
         CONTINUE FOR
      END IF
      LET l_ac4 = j
      LET g_detail2_d[l_ac4].sel01 = 'N'
      LET g_detail2_d[l_ac4].sfpb006 = g_detail_d[l_ac3].sfcbdocno
      LET g_detail2_d[l_ac4].sfpb007 = g_detail_d[l_ac3].sfcb001
      LET g_detail2_d[l_ac4].sfpb008 = g_detail_d[l_ac3].sfcb003
      LET g_detail2_d[l_ac4].sfpb008_desc = g_detail_d[l_ac3].b_sfcb003_desc
      LET g_detail2_d[l_ac4].sfpb009 = g_detail_d[l_ac3].sfcb004
      LET g_detail2_d[l_ac4].sfpb010 = g_detail_d[l_ac3].sent_nonum
      LET g_detail2_d[l_ac4].sfpb011 = g_detail_d[l_ac3].sfcb020
      LET g_detail2_d[l_ac4].sfpb011_desc = g_detail_d[l_ac3].b_sfcb020_desc 
      LET g_detail2_d[l_ac4].sfpb012 = g_detail_d[l_ac3].sfcb024
      LET g_detail2_d[l_ac4].sfpb013 = g_detail_d[l_ac3].hours
      LET g_detail2_d[l_ac4].sfaa010 = g_detail_d[l_ac3].sfaa010
      LET g_detail2_d[l_ac4].sfaa010_a_desc = g_detail_d[l_ac3].b_sfaa010_desc
      LET g_detail2_d[l_ac4].sfaa010_a_desc_desc = g_detail_d[l_ac3].b_sfaa010_desc_desc
      LET g_detail2_d[l_ac4].sfcb044 = g_detail_d[l_ac3].sfcb044
      LET g_detail2_d[l_ac4].sfcb045 = g_detail_d[l_ac3].sfcb045
      LET g_detail2_d[l_ac4].sfcb027 = g_detail_d[l_ac3].sfcb027
      LET g_detail2_d[l_ac4].num = g_detail_d[l_ac3].sent_num
      LET g_detail2_d[l_ac4].sfcb023 = g_detail_d[l_ac3].sfcb023

       
      
#      SELECT sfaa010 INTO g_detail2_d[j].sfaa010  FROM sfpb_t 
#       WHERE sfaaent = g_enterprise
#         AND sfaasite = g_site
#         AND sfaadocno = g_detail_d[i].sfcbdocno
#      CALL s_desc_get_item_desc(g_detail2_d[j].sfaa010) RETURNING g_detail2_d[j].sfaa010_a_desc,g_detail2_d[j].sfaa010_a_desc_desc
#      CALL s_desc_get_unit_desc(g_detail2_d[j].sfpb011) RETURNING g_detail2_d[j].sfpb011_desc
#      CALL s_desc_get_acc_desc('221',g_detail2_d[j].sfpb008) RETURNING g_detail2_d[j].sfpb008_desc
      IF cl_null(g_detail2_d[l_ac4].sfpb010) THEN
         LET g_detail2_d[l_ac4].sfpb010 = 0
      END IF
      IF cl_null(g_detail2_d[l_ac4].sfpb013) THEN
         LET g_detail2_d[l_ac4].sfpb013 = 0
      END IF      
      LET g_s_sfpb010 = g_s_sfpb010 + g_detail2_d[l_ac4].sfpb010
      LET g_s_sfpb013 = g_s_sfpb013 + g_detail2_d[l_ac4].sfpb013
      LET j = j + 1
      DELETE FROM asfp200_temp 
       WHERE sfcbdocno = g_detail_d[l_ac3].sfcbdocno
         AND sfcb044 = g_detail_d[l_ac3].sfcb044
         AND sfcb045 = g_detail_d[l_ac3].sfcb045
         AND sfaa010 = g_detail_d[l_ac3].sfaa010
         AND sfcb001 = g_detail_d[l_ac3].sfcb001
         AND sfcb003 = g_detail_d[l_ac3].sfcb003
         AND sfcb004 = g_detail_d[l_ac3].sfcb004
         AND sfcb027 = g_detail_d[l_ac3].sfcb027    
         AND sent_num = g_detail_d[l_ac3].sent_num         
#         AND sent_nonum = g_detail_d[l_ac3].sent_nonum         
         AND sfcb020 = g_detail_d[l_ac3].sfcb020   
         AND sfcb024 = g_detail_d[l_ac3].sfcb024
#         AND hours = g_detail_d[l_ac3].hours 
         AND sfcb023 = g_detail_d[l_ac3].sfcb023
      IF SQLCA.sqlerrd[3] = 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "std-00009"
         LET g_errparam.extend = "DELETE FROM asfp200_temp"
         LET g_errparam.popup = TRUE
         CALL cl_err()               
      END IF   
   END FOR 
#   CALL g_detail_d.deleteElement(i)
#   LET i = i - 1   
   SELECT mrbh004,mrbh003 INTO l_mrbh004,l_mrbh003 FROM mrbh_t
    WHERE mrbhent = g_enterprise
      AND mrbhsite = g_site
      AND mrbh001 = g_sfpb003
      AND mrbh002 = g_sfpb001
      AND mrbh005 = 'Y'
      AND mrbh006 = g_sfpb002
   CALL asfp200_get_time01(l_mrbh003,l_mrbh004) RETURNING l_used    
   IF cl_null(l_used) THEN LET l_used = 0 END IF
   LET g_s_used = g_s_used + l_used     
   LET g_s_rate = g_s_sfpb013/g_s_used
   IF cl_null(g_s_rate) THEN 
      LET g_s_rate = 0
   END IF    
#   CALL g_detail2_d.deleteElement(g_detail2_d.getLength())
#   CALL g_detail2_d.deleteElement(j) 
#   LET j = j - 1

#mak by lixh
#   FOR i = 1 TO g_detail_d.getLength()
#      LET l_ac3 = i
#      IF g_detail_d[l_ac3].sel = 'Y' THEN
#         CALL g_detail_d.deleteElement(l_ac3) 
#         LET i = i - 1         
#      END IF
#   END FOR   
#mak by lixh

#   CALL g_detail_d.deleteElement(i)
#   LET i = i - 1
   
#   DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
# 
#      BEFORE DISPLAY
#         
#      BEFORE ROW
#         LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
#         LET l_ac = g_detail_idx
#         DISPLAY g_detail_idx TO FORMONLY.h_index
#         DISPLAY g_detail_d.getLength() TO FORMONLY.h_count
#         CALL asfp200_fetch()
#           
#   END DISPLAY  
#   
#   DISPLAY ARRAY g_detail2_d TO s_detail2.* ATTRIBUTE(COUNT=g_detail_cnt2)
# 
#      BEFORE DISPLAY
#         
#      BEFORE ROW
#         LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail2")
#         LET l_ac2 = g_detail_idx2
#         DISPLAY g_detail_idx2 TO FORMONLY.h_index
#         DISPLAY g_detail2_d.getLength() TO FORMONLY.h_count
#           
#   END DISPLAY    
   LET g_detail_cnt = g_detail_d.getLength()
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   DISPLAY g_s_sfpb010 TO s_sfpb010
   DISPLAY g_s_sfpb013 TO s_sfpb013
   DISPLAY g_s_used TO s_used
   DISPLAY g_s_rate TO s_rate
END FUNCTION

################################################################################
# Descriptions...: 取消派工
# Memo...........:
# Usage..........: CALL asfp200_batch_sfpb_temp_01()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION asfp200_batch_sfpb_temp_01()
DEFINE   l_sql     STRING
DEFINE   j         LIKE type_t.num5
DEFINE   i         LIKE type_t.num5
DEFINE   l_cnt     LIKE type_t.num5
DEFINE   l_used    LIKE sfpb_t.sfpb010
DEFINE   l_ac3     LIKE type_t.num5
DEFINE   l_ac4     LIKE type_t.num5
DEFINE   l_mrbh004 LIKE mrbh_t.mrbh004
DEFINE   l_mrbh003 LIKE mrbh_t.mrbh003
#   CALL g_detail2_d.clear()
#   LET l_sql = " SELECT sfpb006,sfpb007,sfaa010,'','',sfpb008,'',sfpb009,sfpb010,sfpb011,'',sfpb012,sfpb013 FROM sfpb_t ",
#               "   LEFT OUTER JOIN sfaa_t ON sfaadocno = sfpb006 AND sfaaent = sfpbent AND sfaasite = sfpbsite ",
#               "  WHERE sfpbent = '",g_enterprise,"'",
#               "    AND sfpbsite = '",g_site,"'",
#               "    AND sfpb006 = ? ",
#               "    AND sfpb007 = ? ",
#               "    AND sfpb008 = ? ",
#               "    AND sfpb009 = ? "
#               
#               
#   PREPARE asfp200_sel_sfpb_no FROM l_sql
#   DECLARE b_fill_curs_sfpb_no CURSOR FOR asfp200_sel_sfpb_no 
#   LET j = 1
#   FOR i = 1 TO g_detail_d.getLength()
#      IF g_detail_d[i].sel = 'N' THEN
#         CONTINUE FOR
#      END IF
#      
#      FOREACH b_fill_curs_sfpb_no USING g_detail_d[i].sfcbdocno,g_detail_d[i].sfcb001,g_detail_d[i].sfcb003,g_detail_d[i].sfcb004
#                       INTO g_detail2_d[l_ac2].sfpb006,g_detail2_d[l_ac2].sfpb007,g_detail2_d[l_ac2].sfaa010,g_detail2_d[l_ac2].sfaa010_a_desc,
#                            g_detail2_d[l_ac2].sfaa010_a_desc_desc,g_detail2_d[l_ac2].sfpb008,g_detail2_d[l_ac2].sfpb008_desc,g_detail2_d[l_ac2].sfpb009,
#                            g_detail2_d[l_ac2].sfpb010,g_detail2_d[l_ac2].sfpb011,g_detail2_d[l_ac2].sfpb011_desc,g_detail2_d[l_ac2].sfpb012,
#                            g_detail2_d[l_ac2].sfpb013   
#         LET g_s_sfpb010 = g_s_sfpb010 + g_detail2_d[j].sfpb010
#         LET g_s_sfpb013 = g_s_sfpb013 + g_detail2_d[j].sfpb013                           
#         LET j = j + 1
#      END FOREACH      
#   END FOR   
#   CALL g_detail_d.deleteElement(g_detail_d.getLength())

   LET l_cnt = g_detail_d.getLength()
   FOR i = 1 TO g_detail2_d.getLength()
      LET l_ac4 = i
      IF g_detail2_d[l_ac4].sel01 = 'N' THEN
         CONTINUE FOR
      END IF
#      LET l_cnt = l_cnt + 1
#      CALL g_detail_d.insertElement(l_cnt)
#      LET g_detail_d[l_cnt].sel = 'N'
#      LET g_detail_d[l_cnt].sfcbdocno = g_detail2_d[l_ac4].sfpb006
#      LET g_detail_d[l_cnt].sfcb001 = g_detail2_d[l_ac4].sfpb007
#      LET g_detail_d[l_cnt].sfcb003 = g_detail2_d[l_ac4].sfpb008
#      LET g_detail_d[l_cnt].b_sfcb003_desc = g_detail2_d[l_ac4].sfpb008_desc
#      LET g_detail_d[l_cnt].sfcb004 = g_detail2_d[l_ac4].sfpb009
#      LET g_detail_d[l_cnt].sent_nonum = g_detail2_d[l_ac4].sfpb010
#      LET g_detail_d[l_cnt].sfcb020 = g_detail2_d[l_ac4].sfpb011
#      LET g_detail_d[l_cnt].b_sfcb020_desc = g_detail2_d[l_ac4].sfpb011_desc
#      LET g_detail_d[l_cnt].sfcb024 = g_detail2_d[l_ac4].sfpb012
#      LET g_detail_d[l_cnt].hours = g_detail2_d[l_ac4].sfpb013
#      LET g_detail_d[l_cnt].sfaa010 = g_detail2_d[l_ac4].sfaa010 
#      LET g_detail_d[l_cnt].b_sfaa010_desc = g_detail2_d[l_ac4].sfaa010_a_desc
#      LET g_detail_d[l_cnt].b_sfaa010_desc_desc = g_detail2_d[l_ac4].sfaa010_a_desc_desc     
#      LET g_detail_d[l_cnt].sfcb044 = g_detail2_d[l_ac4].sfcb044
#      LET g_detail_d[l_cnt].sfcb045 = g_detail2_d[l_ac4].sfcb045
#      LET g_detail_d[l_cnt].sfcb027 = g_detail2_d[l_ac4].sfcb027
#      LET g_detail_d[l_cnt].sent_num = g_detail2_d[l_ac4].num
        
      INSERT INTO asfp200_temp (sel,sfcbdocno,sfcb044,sfcb045,sfaa010,b_sfaa010_desc,b_sfaa010_desc_desc,sfcb001,sfcb003,b_sfcb003_desc,
                                sfcb004,sfcb027,sent_num,sent_nonum,sfcb020,b_sfcb020_desc,sfcb024,hours,sfcb023)       
                     VALUES('N',g_detail2_d[l_ac4].sfpb006,g_detail2_d[l_ac4].sfcb044,g_detail2_d[l_ac4].sfcb045,
                            g_detail2_d[l_ac4].sfaa010,g_detail2_d[l_ac4].sfaa010_a_desc,
                            g_detail2_d[l_ac4].sfaa010_a_desc_desc,g_detail2_d[l_ac4].sfpb007,g_detail2_d[l_ac4].sfpb008,g_detail2_d[l_ac4].sfpb008_desc,
                            g_detail2_d[l_ac4].sfpb009,g_detail2_d[l_ac4].sfcb027,g_detail2_d[l_ac4].num,g_detail2_d[l_ac4].sfpb010,g_detail2_d[l_ac4].sfpb011,
                            g_detail2_d[l_ac4].sfpb011_desc,g_detail2_d[l_ac4].sfpb012,g_detail2_d[l_ac4].sfpb013,g_detail2_d[l_ac4].sfcb023)
      CALL g_detail2_d.deleteElement(l_ac4) 
      LET i = i - 1                             
   END FOR
   
   LET g_s_sfpb010 = 0
   LET g_s_sfpb013 = 0 
   LET g_s_used = 0
   FOR i = 1 TO g_detail2_d.getLength()
      LET l_ac4 = i
      LET g_s_sfpb010 = g_s_sfpb010 + g_detail2_d[l_ac4].sfpb010
      LET g_s_sfpb013 = g_s_sfpb013 + g_detail2_d[l_ac4].sfpb013             
   END FOR
   SELECT mrbh004,mrbh003 INTO l_mrbh004,l_mrbh003 FROM mrbh_t
    WHERE mrbhent = g_enterprise
      AND mrbhsite = g_site
      AND mrbh001 = g_sfpb003
      AND mrbh002 = g_sfpb001
      AND mrbh005 = 'Y'
      AND mrbh006 = g_sfpb002
   CALL asfp200_get_time01(l_mrbh003,l_mrbh004) RETURNING l_used    
   IF cl_null(l_used) THEN LET l_used = 0 END IF
   LET g_s_used = g_s_used + l_used     
   LET g_s_rate = g_s_sfpb013/g_s_used
   IF cl_null(g_s_rate) THEN 
      LET g_s_rate = 0
   END IF 
   LET g_detail_cnt2 = g_detail2_d.getLength()  
   DISPLAY g_detail_cnt2 TO FORMONLY.h_count   
   DISPLAY g_s_sfpb010 TO s_sfpb010
   DISPLAY g_s_sfpb013 TO s_sfpb013
   DISPLAY g_s_used TO s_used
   DISPLAY g_s_rate TO s_rate   
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL asfp200_sfpb_asc()
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION asfp200_sfpb_asc()
DEFINE   l_cnt    LIKE type_t.num5
DEFINE   i        LIKE type_t.num5  
 
   LET l_cnt = g_detail2_d.getLength()
    
   IF l_cnt > 1 THEN
      IF l_ac2 = 1 THEN   #第一筆
         LET g_detail2_d_t.* = g_detail2_d[l_ac2].*
         FOR i = 1 TO l_cnt-1 
            #把後一筆給前一筆
            LET g_detail2_d[i].* = g_detail2_d[i+1].*         
         END FOR  
         LET g_detail2_d[i].* = g_detail2_d_t.*   
      ELSE     
         LET g_detail2_d_t.* = g_detail2_d[l_ac2].*
         LET g_detail2_d[l_ac2].* = g_detail2_d[l_ac2-1].*
         LET g_detail2_d[l_ac2-1].* = g_detail2_d_t.*
      END IF
      IF l_ac2 > 1 THEN
         LET l_ac2 = l_ac2 - 1
         CALL fgl_set_arr_curr(l_ac2)
      END IF   
   END IF
   
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL asfp200_sfpb_des()
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION asfp200_sfpb_des()
DEFINE   l_cnt    LIKE type_t.num5
DEFINE   i        LIKE type_t.num5 
 
   LET l_cnt = g_detail2_d.getLength()
   IF l_cnt > 0 THEN
      IF l_ac2 = l_cnt THEN   #最後一筆
         LET g_detail2_d_t.* = g_detail2_d[l_ac2].*
         FOR i = l_cnt-1 TO 1 STEP -1
            LET g_detail2_d[i+1].* = g_detail2_d[i].*             
         END FOR
         LET g_detail2_d[1].* = g_detail2_d_t.*
      ELSE
         LET g_detail2_d_t.* = g_detail2_d[l_ac2].*
         LET g_detail2_d[l_ac2].* = g_detail2_d[l_ac2+1].*
         LET g_detail2_d[l_ac2+1].* = g_detail2_d_t.*
      END IF
      IF l_ac2 = l_cnt THEN
         LET l_ac2 = 1
      ELSE      
         LET l_ac2 = l_ac2 + 1         
      END IF   
      CALL fgl_set_arr_curr(l_ac2)
   END IF
   
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL asfp200_b_fill_temp01()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION asfp200_b_fill_temp01()
DEFINE   l_sql     STRING
DEFINE   l_used    LIKE sfpb_t.sfpb010
DEFINE   l_mrbh004 LIKE mrbh_t.mrbh004
DEFINE   l_mrbh003 LIKE mrbh_t.mrbh003

   LET l_sql = " SELECT * FROM asfp200_temp ",
               "  WHERE 1 =1 ",
               "  ORDER BY sfcbdocno,sfcb044,sfcb045,sfaa010,sfcb001,sfcb003,sfcb004"       
   PREPARE asfp200_sel01 FROM l_sql
   DECLARE asfp200_sel01_curs CURSOR FOR asfp200_sel01
  
   CALL g_detail_d.clear()
   LET l_ac = 1
   FOREACH asfp200_sel01_curs INTO 
                       g_detail_d[l_ac].sel,g_detail_d[l_ac].sfcbdocno,g_detail_d[l_ac].sfcb044,g_detail_d[l_ac].sfcb045,g_detail_d[l_ac].sfaa010,g_detail_d[l_ac].b_sfaa010_desc,
                       g_detail_d[l_ac].b_sfaa010_desc_desc,g_detail_d[l_ac].sfcb001,g_detail_d[l_ac].sfcb003,g_detail_d[l_ac].b_sfcb003_desc,
                       g_detail_d[l_ac].sfcb004,g_detail_d[l_ac].sfcb027,g_detail_d[l_ac].sent_num,g_detail_d[l_ac].sent_nonum,g_detail_d[l_ac].sfcb020,
                       g_detail_d[l_ac].b_sfcb020_desc,g_detail_d[l_ac].sfcb024,g_detail_d[l_ac].hours,g_detail_d[l_ac].sfcb023

     LET l_ac = l_ac + 1
   END FOREACH    
   CALL g_detail_d.deleteElement(l_ac)
   LET l_ac = l_ac - 1
   SELECT SUM(sfpb010),SUM(sfpb013) INTO g_s_sfpb010,g_s_sfpb013 FROM asfp200_temp
   LET l_used = 0
#   SELECT SUM(mrbh004-mrbh003) INTO l_used FROM mrbh_t
   SELECT mrbh004,mrbh003 INTO l_mrbh004,l_mrbh003 FROM mrbh_t
    WHERE mrbhent = g_enterprise
      AND mrbhsite = g_site
      AND mrbh001 = g_sfpb003
      AND mrbh002 = g_sfpb001
      AND mrbh005 = 'Y'
      AND mrbh006 = g_sfpb002
   CALL asfp200_get_time01(l_mrbh003,l_mrbh004) RETURNING l_used    
   IF cl_null(l_used) THEN LET l_used = 0 END IF
   LET g_s_used =  l_used     
   LET g_s_rate = g_s_sfpb013/g_s_used
   IF cl_null(g_s_rate) THEN 
      LET g_s_rate = 0
   END IF  
   LET g_detail_cnt = g_detail_d.getLength()
   DISPLAY g_detail_cnt TO FORMONLY.h_count   
   DISPLAY g_s_sfpb010 TO s_sfpb010
   DISPLAY g_s_sfpb013 TO s_sfpb013
   DISPLAY g_s_used TO s_used
   DISPLAY g_s_rate TO s_rate   
END FUNCTION

################################################################################
# Descriptions...: 計算可用時間(hr)
# Memo...........:
# Usage..........: CALL asfp200_get_time01(p_mrbh003,p_mrbh004)
#                  RETURNING r_time01
# Input parameter: p_mrbh003：開始時間
#                : p_mrbh004：結束時間
# Return code....: r_time01：可用時間
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION asfp200_get_time01(p_mrbh003,p_mrbh004)
   DEFINE p_mrbh003     LIKE mrbh_t.mrbh003
   DEFINE p_mrbh004     LIKE mrbh_t.mrbh004
   DEFINE r_time01      LIKE type_t.num15_3
   DEFINE l_mrbh003_h   LIKE type_t.num5       #開始時間的小時
   DEFINE l_mrbh004_h   LIKE type_t.num5       #結束時間的小時
   DEFINE l_mrbh003_m   LIKE type_t.num5       #開始時間的分鐘
   DEFINE l_mrbh004_m   LIKE type_t.num5       #結束時間的分鐘

   LET r_time01 = 0

   LET l_mrbh003_h = p_mrbh003[1,2]
   LET l_mrbh004_h = p_mrbh004[1,2]
   LET l_mrbh003_m = p_mrbh003[4,5]
   LET l_mrbh004_m = p_mrbh004[4,5]

   LET r_time01 = (l_mrbh004_h * 60 + l_mrbh004_m) -
                  (l_mrbh003_h * 60 + l_mrbh003_m)

   LET r_time01 = r_time01 / 60

   RETURN r_time01
END FUNCTION

#end add-point
 
{</section>}
 
