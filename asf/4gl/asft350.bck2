#該程式未解開Section, 採用最新樣板產出!
{<section id="asft350.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0017(2015-07-21 16:49:24), PR版次:0017(2016-08-15 16:05:32)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000231
#+ Filename...: asft350
#+ Description: 耗料盤存倒扣分攤作業
#+ Creator....: 01258(2014-04-18 15:03:09)
#+ Modifier...: 01258 -SD/PR- 06814
 
{</section>}
 
{<section id="asft350.global" >}
#應用 t01 樣板自動產生(Version:76)
#add-point:填寫註解說明
#151224-00025#2 15/12/24 By catmoon 手動輸入特徵碼同步新增inam_t[料件產品特徵明細檔]
#160314-00009#15   2016/03/28  By xujing  产品特征自动开窗增加参数判断
#160318-00025#22   2016/04/21  BY 07900   校验代码重复错误讯息的修改
#160613-00038#1    2016/06/14  By 06821   s_aooi200_chk_slip傳入值(原寫死程式代號)，改用g_prog處理
#160812-00017#4    2016/08/15  By 06814   在satatchange( )的FUNCTION中，有RETURN指令但沒有加上transaction_end( ) 造成transaction沒有結束就直接RETURN
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_sfma_m        RECORD
       sfmasite LIKE sfma_t.sfmasite, 
   sfmadocno LIKE sfma_t.sfmadocno, 
   oobxl003 LIKE type_t.chr80, 
   sfmadocdt LIKE sfma_t.sfmadocdt, 
   sfma001 LIKE sfma_t.sfma001, 
   sfma002 LIKE sfma_t.sfma002, 
   sfma003 LIKE sfma_t.sfma003, 
   sfma004 LIKE sfma_t.sfma004, 
   sfma004_desc LIKE type_t.chr80, 
   sfma005 LIKE sfma_t.sfma005, 
   sfma005_desc LIKE type_t.chr80, 
   sfmastus LIKE sfma_t.sfmastus, 
   sfmaownid LIKE sfma_t.sfmaownid, 
   sfmaownid_desc LIKE type_t.chr80, 
   sfmaowndp LIKE sfma_t.sfmaowndp, 
   sfmaowndp_desc LIKE type_t.chr80, 
   sfmacrtid LIKE sfma_t.sfmacrtid, 
   sfmacrtid_desc LIKE type_t.chr80, 
   sfmacrtdp LIKE sfma_t.sfmacrtdp, 
   sfmacrtdp_desc LIKE type_t.chr80, 
   sfmacrtdt LIKE sfma_t.sfmacrtdt, 
   sfmamodid LIKE sfma_t.sfmamodid, 
   sfmamodid_desc LIKE type_t.chr80, 
   sfmamoddt LIKE sfma_t.sfmamoddt, 
   sfmacnfid LIKE sfma_t.sfmacnfid, 
   sfmacnfid_desc LIKE type_t.chr80, 
   sfmacnfdt LIKE sfma_t.sfmacnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_sfmb_d        RECORD
       sfmbseq LIKE sfmb_t.sfmbseq, 
   sfmb001 LIKE sfmb_t.sfmb001, 
   sfmb001_desc LIKE type_t.chr500, 
   sfmb001_desc_1 LIKE type_t.chr500, 
   sfmb002 LIKE sfmb_t.sfmb002, 
   sfmb002_desc LIKE type_t.chr500, 
   sfmb005 LIKE sfmb_t.sfmb005, 
   sfmb006 LIKE sfmb_t.sfmb006, 
   sfmb007 LIKE sfmb_t.sfmb007, 
   sfmb007_desc LIKE type_t.chr500, 
   sfmb008 LIKE sfmb_t.sfmb008, 
   sfmb009 LIKE sfmb_t.sfmb009, 
   l_num LIKE type_t.num20_6, 
   l_num1 LIKE type_t.num20_6, 
   sfmb010 LIKE sfmb_t.sfmb010, 
   sfmb010_desc LIKE type_t.chr500, 
   sfmb011 LIKE sfmb_t.sfmb011, 
   sfmb012 LIKE sfmb_t.sfmb012, 
   l_num2 LIKE type_t.num20_6, 
   l_num3 LIKE type_t.num20_6, 
   sfmbsite LIKE sfmb_t.sfmbsite, 
   sfmb003 LIKE sfmb_t.sfmb003, 
   sfmb004 LIKE sfmb_t.sfmb004
       END RECORD
PRIVATE TYPE type_g_sfmb2_d RECORD
       sfmcseq LIKE sfmc_t.sfmcseq, 
   sfmcseq1 LIKE sfmc_t.sfmcseq1, 
   l_sfmb001 LIKE type_t.chr500, 
   l_sfmb001_desc LIKE type_t.chr500, 
   l_sfmb001_desc_1 LIKE type_t.chr500, 
   l_sfmb002 LIKE type_t.chr500, 
   l_sfmb002_desc LIKE type_t.chr500, 
   l_sfmb005 LIKE type_t.chr30, 
   l_sfmb006 LIKE type_t.chr500, 
   sfmc001 LIKE sfmc_t.sfmc001, 
   sfmc002 LIKE sfmc_t.sfmc002, 
   sfmc002_desc LIKE type_t.chr500, 
   sfmc002_desc_1 LIKE type_t.chr500, 
   sfmc003 LIKE sfmc_t.sfmc003, 
   sfmc004 LIKE sfmc_t.sfmc004, 
   l_sfba003 LIKE type_t.chr10, 
   l_sfba003_desc LIKE type_t.chr500, 
   l_sfba004 LIKE type_t.chr10, 
   sfmc005 LIKE sfmc_t.sfmc005, 
   sfmc006 LIKE sfmc_t.sfmc006, 
   sfmc007 LIKE sfmc_t.sfmc007, 
   sfmc008 LIKE sfmc_t.sfmc008, 
   sfmcsite LIKE sfmc_t.sfmcsite
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_sfmadocno LIKE sfma_t.sfmadocno,
      b_sfmasite LIKE sfma_t.sfmasite,
      b_sfmadocdt LIKE sfma_t.sfmadocdt,
      b_sfma001 LIKE sfma_t.sfma001,
      b_sfma002 LIKE sfma_t.sfma002,
      b_sfma003 LIKE sfma_t.sfma003,
      b_sfma004 LIKE sfma_t.sfma004,
   b_sfma004_desc LIKE type_t.chr80,
      b_sfma005 LIKE sfma_t.sfma005,
   b_sfma005_desc LIKE type_t.chr80
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
TYPE type_g_sfmb3_d RECORD
        inaoseq  LIKE inao_t.inaoseq,
        inaoseq1 LIKE inao_t.inaoseq1,
        inaoseq2 LIKE inao_t.inaoseq2,
        inao001  LIKE inao_t.inao001,
        inao001_desc LIKE imaal_t.imaal003,
        inao001_desc_1  LIKE imaal_t.imaal004,
        inao008  LIKE inao_t.inao008,
        inao009  LIKE inao_t.inao009,
        inao010  LIKE inao_t.inao010,
        inao012  LIKE inao_t.inao012
        END RECORD
TYPE type_g_sfmb4_d RECORD
        inaoseq_4  LIKE inao_t.inaoseq,
        inaoseq1_4 LIKE inao_t.inaoseq1,
        inaoseq2_4 LIKE inao_t.inaoseq2,
        inao001_4  LIKE inao_t.inao001,
        inao001_4_desc LIKE imaal_t.imaal003,
        inao001_4_desc_1  LIKE imaal_t.imaal004,
        inao008_4  LIKE inao_t.inao008,
        inao009_4  LIKE inao_t.inao009,
        inao010_4  LIKE inao_t.inao010,
        inao012_4  LIKE inao_t.inao012
        END RECORD

DEFINE g_sfmb3_d             DYNAMIC ARRAY OF type_g_sfmb3_d
DEFINE g_sfmb3_d_t           type_g_sfmb3_d
DEFINE g_sfmb4_d             DYNAMIC ARRAY OF type_g_sfmb3_d
DEFINE g_sfmb4_d_t           type_g_sfmb3_d
DEFINE g_wc2_table3          STRING
DEFINE g_wc2_table4          STRING

DEFINE g_flag1               LIKE type_t.chr1
DEFINE g_flag2               LIKE type_t.chr1
DEFINE g_flag3               LIKE type_t.chr1
DEFINE g_flag4               LIKE type_t.chr1
DEFINE g_flag5               LIKE type_t.chr1
DEFINE g_wc_qbe              STRING
DEFINE g_sffb007             LIKE sffb_t.sffb007
DEFINE g_sffb008             LIKE sffb_t.sffb008
#end add-point
       
#模組變數(Module Variables)
DEFINE g_sfma_m          type_g_sfma_m
DEFINE g_sfma_m_t        type_g_sfma_m
DEFINE g_sfma_m_o        type_g_sfma_m
DEFINE g_sfma_m_mask_o   type_g_sfma_m #轉換遮罩前資料
DEFINE g_sfma_m_mask_n   type_g_sfma_m #轉換遮罩後資料
 
   DEFINE g_sfmadocno_t LIKE sfma_t.sfmadocno
 
 
DEFINE g_sfmb_d          DYNAMIC ARRAY OF type_g_sfmb_d
DEFINE g_sfmb_d_t        type_g_sfmb_d
DEFINE g_sfmb_d_o        type_g_sfmb_d
DEFINE g_sfmb_d_mask_o   DYNAMIC ARRAY OF type_g_sfmb_d #轉換遮罩前資料
DEFINE g_sfmb_d_mask_n   DYNAMIC ARRAY OF type_g_sfmb_d #轉換遮罩後資料
DEFINE g_sfmb2_d          DYNAMIC ARRAY OF type_g_sfmb2_d
DEFINE g_sfmb2_d_t        type_g_sfmb2_d
DEFINE g_sfmb2_d_o        type_g_sfmb2_d
DEFINE g_sfmb2_d_mask_o   DYNAMIC ARRAY OF type_g_sfmb2_d #轉換遮罩前資料
DEFINE g_sfmb2_d_mask_n   DYNAMIC ARRAY OF type_g_sfmb2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="asft350.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("asf","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT sfmasite,sfmadocno,'',sfmadocdt,sfma001,sfma002,sfma003,sfma004,'',sfma005, 
       '',sfmastus,sfmaownid,'',sfmaowndp,'',sfmacrtid,'',sfmacrtdp,'',sfmacrtdt,sfmamodid,'',sfmamoddt, 
       sfmacnfid,'',sfmacnfdt", 
                      " FROM sfma_t",
                      " WHERE sfmaent= ? AND sfmadocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE asft350_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.sfmasite,t0.sfmadocno,t0.sfmadocdt,t0.sfma001,t0.sfma002,t0.sfma003, 
       t0.sfma004,t0.sfma005,t0.sfmastus,t0.sfmaownid,t0.sfmaowndp,t0.sfmacrtid,t0.sfmacrtdp,t0.sfmacrtdt, 
       t0.sfmamodid,t0.sfmamoddt,t0.sfmacnfid,t0.sfmacnfdt,t1.inaa002 ,t2.inab003 ,t3.ooag011 ,t4.ooefl003 , 
       t5.ooag011 ,t6.ooefl003 ,t7.ooag011 ,t8.ooag011",
               " FROM sfma_t t0",
                              " LEFT JOIN inaa_t t1 ON t1.inaaent="||g_enterprise||" AND t1.inaasite=t0.sfmasite AND t1.inaa001=t0.sfma004  ",
               " LEFT JOIN inab_t t2 ON t2.inabent="||g_enterprise||" AND t2.inabsite=t0.sfmasite AND t2.inab001=t0.sfma004 AND t2.inab002=t0.sfma005  ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=t0.sfmaownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=t0.sfmaowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=t0.sfmacrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent="||g_enterprise||" AND t6.ooefl001=t0.sfmacrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent="||g_enterprise||" AND t7.ooag001=t0.sfmamodid  ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent="||g_enterprise||" AND t8.ooag001=t0.sfmacnfid  ",
 
               " WHERE t0.sfmaent = " ||g_enterprise|| " AND t0.sfmadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE asft350_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_asft350 WITH FORM cl_ap_formpath("asf",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL asft350_init()   
 
      #進入選單 Menu (="N")
      CALL asft350_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_asft350
      
   END IF 
   
   CLOSE asft350_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="asft350.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION asft350_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('sfmastus','13','N,Y,A,D,R,W,X')
 
      CALL cl_set_combo_scc('sfma001','5401') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   CALL cl_set_combo_scc('b_sfma001','5401') 
   LET g_flag5 = 'N'
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0028')  = 'N' THEN
      CALL cl_set_comp_visible("sfmb010,sfmb010_desc,sfmb011,sfmb012,l_num2,l_num3,sfmc007",FALSE)
   END IF
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036')  = 'N' THEN
      CALL cl_set_comp_visible("sfmb002,sfmb002_desc,l_sfmb002,l_sfmb002_desc",FALSE)
   END IF
   #end add-point
   
   #初始化搜尋條件
   CALL asft350_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="asft350.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION asft350_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL asft350_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_sfma_m.* TO NULL
         CALL g_sfmb_d.clear()
         CALL g_sfmb2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL asft350_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL asft350_fetch('') # reload data
               LET l_ac = 1
               CALL asft350_ui_detailshow() #Setting the current row 
         
               CALL asft350_idx_chk()
               #NEXT FIELD sfmbseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_sfmb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL asft350_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL asft350_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_sfmb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL asft350_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL asft350_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
 
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         DISPLAY ARRAY g_sfmb3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)

            BEFORE ROW
               CALL asft350_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac

            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               CALL asft350_idx_chk()
               LET g_current_page = 3

         END DISPLAY
         
         DISPLAY ARRAY g_sfmb4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)

            BEFORE ROW
               CALL asft350_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac

            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               CALL asft350_idx_chk()
               LET g_current_page = 4

         END DISPLAY
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL asft350_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL asft350_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL asft350_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL asft350_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL asft350_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL asft350_set_act_visible()   
            CALL asft350_set_act_no_visible()
            IF NOT (g_sfma_m.sfmadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " sfmaent = " ||g_enterprise|| " AND",
                                  " sfmadocno = '", g_sfma_m.sfmadocno, "' "
 
               #填到對應位置
               CALL asft350_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "sfma_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "sfmb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "sfmc_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL asft350_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "sfma_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "sfmb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "sfmc_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL asft350_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL asft350_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL asft350_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL asft350_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asft350_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL asft350_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asft350_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL asft350_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asft350_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL asft350_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asft350_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL asft350_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asft350_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_sfmb_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_sfmb2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD sfmbseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION gen_sfmc
            LET g_action_choice="gen_sfmc"
            IF cl_auth_chk_act("gen_sfmc") THEN
               
               #add-point:ON ACTION gen_sfmc name="menu.gen_sfmc"
               LET g_flag5 = 'N'
               CALL asft350_gen_sfmc() 
               CALL asft350_show()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL asft350_modify()
               #add-point:ON ACTION modify name="menu.modify"
         
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL asft350_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL asft350_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL asft350_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               &include "erp/asf/asft350_rep.4gl"
               #add-point:ON ACTION output.after
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL asft350_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION gen_ft
            LET g_action_choice="gen_ft"
            IF cl_auth_chk_act("gen_ft") THEN
               
               #add-point:ON ACTION gen_ft name="menu.gen_ft"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL asft350_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION gen_pd
            LET g_action_choice="gen_pd"
            IF cl_auth_chk_act("gen_pd") THEN
               
               #add-point:ON ACTION gen_pd name="menu.gen_pd"
               
               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL asft350_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL asft350_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL asft350_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_sfma_m.sfmadocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="asft350.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION asft350_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   IF cl_null(g_wc) THEN
      LET g_wc = " sfmasite = '",g_site,"'"
   ELSE
      LET g_wc = g_wc," AND sfmasite = '",g_site,"'"
   END IF
   LET l_wc  = g_wc.trim()
   LET l_wc2 = g_wc2.trim()
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT sfmadocno ",
                      " FROM sfma_t ",
                      " ",
                      " LEFT JOIN sfmb_t ON sfmbent = sfmaent AND sfmadocno = sfmbdocno ", "  ",
                      #add-point:browser_fill段sql(sfmb_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
                      " LEFT JOIN sfmc_t ON sfmcent = sfmaent AND sfmadocno = sfmcdocno", "  ",
                      #add-point:browser_fill段sql(sfmc_t1) name="browser_fill.cnt.join.sfmc_t1"
                      
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " ",                      
 
 
 
                      " WHERE sfmaent = " ||g_enterprise|| " AND sfmbent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("sfma_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT sfmadocno ",
                      " FROM sfma_t ", 
                      "  ",
                      "  ",
                      " WHERE sfmaent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("sfma_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_sfma_m.* TO NULL
      CALL g_sfmb_d.clear()        
      CALL g_sfmb2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.sfmadocno,t0.sfmasite,t0.sfmadocdt,t0.sfma001,t0.sfma002,t0.sfma003,t0.sfma004,t0.sfma005 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.sfmastus,t0.sfmadocno,t0.sfmasite,t0.sfmadocdt,t0.sfma001,t0.sfma002, 
          t0.sfma003,t0.sfma004,t0.sfma005,t1.inaa002 ,t2.inab003 ",
                  " FROM sfma_t t0",
                  "  ",
                  "  LEFT JOIN sfmb_t ON sfmbent = sfmaent AND sfmadocno = sfmbdocno ", "  ", 
                  #add-point:browser_fill段sql(sfmb_t1) name="browser_fill.join.sfmb_t1"
                  
                  #end add-point
                  "  LEFT JOIN sfmc_t ON sfmcent = sfmaent AND sfmadocno = sfmcdocno", "  ", 
                  #add-point:browser_fill段sql(sfmc_t1) name="browser_fill.join.sfmc_t1"
                  
                  #end add-point
 
 
 
                  " ", 
                  " ",                      
 
 
 
                                 " LEFT JOIN inaa_t t1 ON t1.inaaent="||g_enterprise||" AND t1.inaasite=t0.sfmasite AND t1.inaa001=t0.sfma004  ",
               " LEFT JOIN inab_t t2 ON t2.inabent="||g_enterprise||" AND t2.inabsite=t0.sfmasite AND t2.inab001=t0.sfma004 AND t2.inab002=t0.sfma005  ",
 
                  " WHERE t0.sfmaent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("sfma_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.sfmastus,t0.sfmadocno,t0.sfmasite,t0.sfmadocdt,t0.sfma001,t0.sfma002, 
          t0.sfma003,t0.sfma004,t0.sfma005,t1.inaa002 ,t2.inab003 ",
                  " FROM sfma_t t0",
                  "  ",
                                 " LEFT JOIN inaa_t t1 ON t1.inaaent="||g_enterprise||" AND t1.inaasite=t0.sfmasite AND t1.inaa001=t0.sfma004  ",
               " LEFT JOIN inab_t t2 ON t2.inabent="||g_enterprise||" AND t2.inabsite=t0.sfmasite AND t2.inab001=t0.sfma004 AND t2.inab002=t0.sfma005  ",
 
                  " WHERE t0.sfmaent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("sfma_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY sfmadocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"sfma_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_sfmadocno,g_browser[g_cnt].b_sfmasite, 
          g_browser[g_cnt].b_sfmadocdt,g_browser[g_cnt].b_sfma001,g_browser[g_cnt].b_sfma002,g_browser[g_cnt].b_sfma003, 
          g_browser[g_cnt].b_sfma004,g_browser[g_cnt].b_sfma005,g_browser[g_cnt].b_sfma004_desc,g_browser[g_cnt].b_sfma005_desc 
 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
         #遮罩相關處理
         CALL asft350_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_sfmadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="asft350.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION asft350_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_sfma_m.sfmadocno = g_browser[g_current_idx].b_sfmadocno   
 
   EXECUTE asft350_master_referesh USING g_sfma_m.sfmadocno INTO g_sfma_m.sfmasite,g_sfma_m.sfmadocno, 
       g_sfma_m.sfmadocdt,g_sfma_m.sfma001,g_sfma_m.sfma002,g_sfma_m.sfma003,g_sfma_m.sfma004,g_sfma_m.sfma005, 
       g_sfma_m.sfmastus,g_sfma_m.sfmaownid,g_sfma_m.sfmaowndp,g_sfma_m.sfmacrtid,g_sfma_m.sfmacrtdp, 
       g_sfma_m.sfmacrtdt,g_sfma_m.sfmamodid,g_sfma_m.sfmamoddt,g_sfma_m.sfmacnfid,g_sfma_m.sfmacnfdt, 
       g_sfma_m.sfma004_desc,g_sfma_m.sfma005_desc,g_sfma_m.sfmaownid_desc,g_sfma_m.sfmaowndp_desc,g_sfma_m.sfmacrtid_desc, 
       g_sfma_m.sfmacrtdp_desc,g_sfma_m.sfmamodid_desc,g_sfma_m.sfmacnfid_desc
   
   CALL asft350_sfma_t_mask()
   CALL asft350_show()
      
END FUNCTION
 
{</section>}
 
{<section id="asft350.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION asft350_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="asft350.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION asft350_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_sfmadocno = g_sfma_m.sfmadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="asft350.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION asft350_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_sfma_m.* TO NULL
   CALL g_sfmb_d.clear()        
   CALL g_sfmb2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   CALL g_sfmb3_d.clear()
   CALL g_sfmb4_d.clear()
   INITIALIZE g_wc2_table3 TO NULL
   INITIALIZE g_wc2_table4 TO NULL
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON sfmasite,sfmadocno,oobxl003,sfmadocdt,sfma001,sfma002,sfma003,sfma004, 
          sfma005,sfmastus,sfmaownid,sfmaowndp,sfmacrtid,sfmacrtdp,sfmacrtdt,sfmamodid,sfmamoddt,sfmacnfid, 
          sfmacnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<sfmacrtdt>>----
         AFTER FIELD sfmacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<sfmamoddt>>----
         AFTER FIELD sfmamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<sfmacnfdt>>----
         AFTER FIELD sfmacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<sfmapstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmasite
            #add-point:BEFORE FIELD sfmasite name="construct.b.sfmasite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmasite
            
            #add-point:AFTER FIELD sfmasite name="construct.a.sfmasite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.sfmasite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmasite
            #add-point:ON ACTION controlp INFIELD sfmasite name="construct.c.sfmasite"
            
            #END add-point
 
 
         #Ctrlp:construct.c.sfmadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmadocno
            #add-point:ON ACTION controlp INFIELD sfmadocno name="construct.c.sfmadocno"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_sfmadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfmadocno  #顯示到畫面上
            NEXT FIELD sfmadocno                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmadocno
            #add-point:BEFORE FIELD sfmadocno name="construct.b.sfmadocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmadocno
            
            #add-point:AFTER FIELD sfmadocno name="construct.a.sfmadocno"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD oobxl003
            #add-point:BEFORE FIELD oobxl003 name="construct.b.oobxl003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD oobxl003
            
            #add-point:AFTER FIELD oobxl003 name="construct.a.oobxl003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.oobxl003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD oobxl003
            #add-point:ON ACTION controlp INFIELD oobxl003 name="construct.c.oobxl003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmadocdt
            #add-point:BEFORE FIELD sfmadocdt name="construct.b.sfmadocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmadocdt
            
            #add-point:AFTER FIELD sfmadocdt name="construct.a.sfmadocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.sfmadocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmadocdt
            #add-point:ON ACTION controlp INFIELD sfmadocdt name="construct.c.sfmadocdt"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfma001
            #add-point:BEFORE FIELD sfma001 name="construct.b.sfma001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfma001
            
            #add-point:AFTER FIELD sfma001 name="construct.a.sfma001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.sfma001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfma001
            #add-point:ON ACTION controlp INFIELD sfma001 name="construct.c.sfma001"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfma002
            #add-point:BEFORE FIELD sfma002 name="construct.b.sfma002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfma002
            
            #add-point:AFTER FIELD sfma002 name="construct.a.sfma002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.sfma002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfma002
            #add-point:ON ACTION controlp INFIELD sfma002 name="construct.c.sfma002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfma003
            #add-point:BEFORE FIELD sfma003 name="construct.b.sfma003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfma003
            
            #add-point:AFTER FIELD sfma003 name="construct.a.sfma003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.sfma003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfma003
            #add-point:ON ACTION controlp INFIELD sfma003 name="construct.c.sfma003"
            
            #END add-point
 
 
         #Ctrlp:construct.c.sfma004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfma004
            #add-point:ON ACTION controlp INFIELD sfma004 name="construct.c.sfma004"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfma004  #顯示到畫面上
            NEXT FIELD sfma004                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfma004
            #add-point:BEFORE FIELD sfma004 name="construct.b.sfma004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfma004
            
            #add-point:AFTER FIELD sfma004 name="construct.a.sfma004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.sfma005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfma005
            #add-point:ON ACTION controlp INFIELD sfma005 name="construct.c.sfma005"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inab002_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfma005  #顯示到畫面上
            NEXT FIELD sfma005                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfma005
            #add-point:BEFORE FIELD sfma005 name="construct.b.sfma005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfma005
            
            #add-point:AFTER FIELD sfma005 name="construct.a.sfma005"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmastus
            #add-point:BEFORE FIELD sfmastus name="construct.b.sfmastus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmastus
            
            #add-point:AFTER FIELD sfmastus name="construct.a.sfmastus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.sfmastus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmastus
            #add-point:ON ACTION controlp INFIELD sfmastus name="construct.c.sfmastus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.sfmaownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmaownid
            #add-point:ON ACTION controlp INFIELD sfmaownid name="construct.c.sfmaownid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfmaownid  #顯示到畫面上
            NEXT FIELD sfmaownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmaownid
            #add-point:BEFORE FIELD sfmaownid name="construct.b.sfmaownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmaownid
            
            #add-point:AFTER FIELD sfmaownid name="construct.a.sfmaownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.sfmaowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmaowndp
            #add-point:ON ACTION controlp INFIELD sfmaowndp name="construct.c.sfmaowndp"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfmaowndp  #顯示到畫面上
            NEXT FIELD sfmaowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmaowndp
            #add-point:BEFORE FIELD sfmaowndp name="construct.b.sfmaowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmaowndp
            
            #add-point:AFTER FIELD sfmaowndp name="construct.a.sfmaowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.sfmacrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmacrtid
            #add-point:ON ACTION controlp INFIELD sfmacrtid name="construct.c.sfmacrtid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfmacrtid  #顯示到畫面上
            NEXT FIELD sfmacrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmacrtid
            #add-point:BEFORE FIELD sfmacrtid name="construct.b.sfmacrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmacrtid
            
            #add-point:AFTER FIELD sfmacrtid name="construct.a.sfmacrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.sfmacrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmacrtdp
            #add-point:ON ACTION controlp INFIELD sfmacrtdp name="construct.c.sfmacrtdp"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfmacrtdp  #顯示到畫面上
            NEXT FIELD sfmacrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmacrtdp
            #add-point:BEFORE FIELD sfmacrtdp name="construct.b.sfmacrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmacrtdp
            
            #add-point:AFTER FIELD sfmacrtdp name="construct.a.sfmacrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmacrtdt
            #add-point:BEFORE FIELD sfmacrtdt name="construct.b.sfmacrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.sfmamodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmamodid
            #add-point:ON ACTION controlp INFIELD sfmamodid name="construct.c.sfmamodid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfmamodid  #顯示到畫面上
            NEXT FIELD sfmamodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmamodid
            #add-point:BEFORE FIELD sfmamodid name="construct.b.sfmamodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmamodid
            
            #add-point:AFTER FIELD sfmamodid name="construct.a.sfmamodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmamoddt
            #add-point:BEFORE FIELD sfmamoddt name="construct.b.sfmamoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.sfmacnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmacnfid
            #add-point:ON ACTION controlp INFIELD sfmacnfid name="construct.c.sfmacnfid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfmacnfid  #顯示到畫面上
            NEXT FIELD sfmacnfid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmacnfid
            #add-point:BEFORE FIELD sfmacnfid name="construct.b.sfmacnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmacnfid
            
            #add-point:AFTER FIELD sfmacnfid name="construct.a.sfmacnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmacnfdt
            #add-point:BEFORE FIELD sfmacnfdt name="construct.b.sfmacnfdt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON sfmbseq,sfmb001,sfmb002,sfmb005,sfmb006,sfmb007,sfmb008,sfmb009,l_num, 
          l_num1,sfmb010,sfmb011,sfmb012,l_num2,l_num3,sfmbsite,sfmb003,sfmb004
           FROM s_detail1[1].sfmbseq,s_detail1[1].sfmb001,s_detail1[1].sfmb002,s_detail1[1].sfmb005, 
               s_detail1[1].sfmb006,s_detail1[1].sfmb007,s_detail1[1].sfmb008,s_detail1[1].sfmb009,s_detail1[1].l_num, 
               s_detail1[1].l_num1,s_detail1[1].sfmb010,s_detail1[1].sfmb011,s_detail1[1].sfmb012,s_detail1[1].l_num2, 
               s_detail1[1].l_num3,s_detail1[1].sfmbsite,s_detail1[1].sfmb003,s_detail1[1].sfmb004
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmbseq
            #add-point:BEFORE FIELD sfmbseq name="construct.b.page1.sfmbseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmbseq
            
            #add-point:AFTER FIELD sfmbseq name="construct.a.page1.sfmbseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.sfmbseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmbseq
            #add-point:ON ACTION controlp INFIELD sfmbseq name="construct.c.page1.sfmbseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.sfmb001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb001
            #add-point:ON ACTION controlp INFIELD sfmb001 name="construct.c.page1.sfmb001"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfmb001  #顯示到畫面上
            NEXT FIELD sfmb001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb001
            #add-point:BEFORE FIELD sfmb001 name="construct.b.page1.sfmb001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb001
            
            #add-point:AFTER FIELD sfmb001 name="construct.a.page1.sfmb001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb002
            #add-point:BEFORE FIELD sfmb002 name="construct.b.page1.sfmb002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb002
            
            #add-point:AFTER FIELD sfmb002 name="construct.a.page1.sfmb002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.sfmb002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb002
            #add-point:ON ACTION controlp INFIELD sfmb002 name="construct.c.page1.sfmb002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb005
            #add-point:BEFORE FIELD sfmb005 name="construct.b.page1.sfmb005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb005
            
            #add-point:AFTER FIELD sfmb005 name="construct.a.page1.sfmb005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.sfmb005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb005
            #add-point:ON ACTION controlp INFIELD sfmb005 name="construct.c.page1.sfmb005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb006
            #add-point:BEFORE FIELD sfmb006 name="construct.b.page1.sfmb006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb006
            
            #add-point:AFTER FIELD sfmb006 name="construct.a.page1.sfmb006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.sfmb006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb006
            #add-point:ON ACTION controlp INFIELD sfmb006 name="construct.c.page1.sfmb006"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.sfmb007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb007
            #add-point:ON ACTION controlp INFIELD sfmb007 name="construct.c.page1.sfmb007"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfmb007  #顯示到畫面上
            NEXT FIELD sfmb007                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb007
            #add-point:BEFORE FIELD sfmb007 name="construct.b.page1.sfmb007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb007
            
            #add-point:AFTER FIELD sfmb007 name="construct.a.page1.sfmb007"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb008
            #add-point:BEFORE FIELD sfmb008 name="construct.b.page1.sfmb008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb008
            
            #add-point:AFTER FIELD sfmb008 name="construct.a.page1.sfmb008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.sfmb008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb008
            #add-point:ON ACTION controlp INFIELD sfmb008 name="construct.c.page1.sfmb008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb009
            #add-point:BEFORE FIELD sfmb009 name="construct.b.page1.sfmb009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb009
            
            #add-point:AFTER FIELD sfmb009 name="construct.a.page1.sfmb009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.sfmb009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb009
            #add-point:ON ACTION controlp INFIELD sfmb009 name="construct.c.page1.sfmb009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_num
            #add-point:BEFORE FIELD l_num name="construct.b.page1.l_num"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_num
            
            #add-point:AFTER FIELD l_num name="construct.a.page1.l_num"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.l_num
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_num
            #add-point:ON ACTION controlp INFIELD l_num name="construct.c.page1.l_num"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_num1
            #add-point:BEFORE FIELD l_num1 name="construct.b.page1.l_num1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_num1
            
            #add-point:AFTER FIELD l_num1 name="construct.a.page1.l_num1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.l_num1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_num1
            #add-point:ON ACTION controlp INFIELD l_num1 name="construct.c.page1.l_num1"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.sfmb010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb010
            #add-point:ON ACTION controlp INFIELD sfmb010 name="construct.c.page1.sfmb010"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfmb010  #顯示到畫面上
            NEXT FIELD sfmb010                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb010
            #add-point:BEFORE FIELD sfmb010 name="construct.b.page1.sfmb010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb010
            
            #add-point:AFTER FIELD sfmb010 name="construct.a.page1.sfmb010"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb011
            #add-point:BEFORE FIELD sfmb011 name="construct.b.page1.sfmb011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb011
            
            #add-point:AFTER FIELD sfmb011 name="construct.a.page1.sfmb011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.sfmb011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb011
            #add-point:ON ACTION controlp INFIELD sfmb011 name="construct.c.page1.sfmb011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb012
            #add-point:BEFORE FIELD sfmb012 name="construct.b.page1.sfmb012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb012
            
            #add-point:AFTER FIELD sfmb012 name="construct.a.page1.sfmb012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.sfmb012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb012
            #add-point:ON ACTION controlp INFIELD sfmb012 name="construct.c.page1.sfmb012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_num2
            #add-point:BEFORE FIELD l_num2 name="construct.b.page1.l_num2"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_num2
            
            #add-point:AFTER FIELD l_num2 name="construct.a.page1.l_num2"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.l_num2
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_num2
            #add-point:ON ACTION controlp INFIELD l_num2 name="construct.c.page1.l_num2"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_num3
            #add-point:BEFORE FIELD l_num3 name="construct.b.page1.l_num3"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_num3
            
            #add-point:AFTER FIELD l_num3 name="construct.a.page1.l_num3"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.l_num3
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_num3
            #add-point:ON ACTION controlp INFIELD l_num3 name="construct.c.page1.l_num3"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmbsite
            #add-point:BEFORE FIELD sfmbsite name="construct.b.page1.sfmbsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmbsite
            
            #add-point:AFTER FIELD sfmbsite name="construct.a.page1.sfmbsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.sfmbsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmbsite
            #add-point:ON ACTION controlp INFIELD sfmbsite name="construct.c.page1.sfmbsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb003
            #add-point:BEFORE FIELD sfmb003 name="construct.b.page1.sfmb003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb003
            
            #add-point:AFTER FIELD sfmb003 name="construct.a.page1.sfmb003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.sfmb003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb003
            #add-point:ON ACTION controlp INFIELD sfmb003 name="construct.c.page1.sfmb003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb004
            #add-point:BEFORE FIELD sfmb004 name="construct.b.page1.sfmb004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb004
            
            #add-point:AFTER FIELD sfmb004 name="construct.a.page1.sfmb004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.sfmb004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb004
            #add-point:ON ACTION controlp INFIELD sfmb004 name="construct.c.page1.sfmb004"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON sfmcseq,sfmcseq1,l_sfmb001,l_sfmb002,l_sfmb005,l_sfmb006,sfmc001,sfmc002, 
          sfmc003,sfmc004,l_sfba003,l_sfba004,sfmc005,sfmc006,sfmc007,sfmc008
           FROM s_detail2[1].sfmcseq,s_detail2[1].sfmcseq1,s_detail2[1].l_sfmb001,s_detail2[1].l_sfmb002, 
               s_detail2[1].l_sfmb005,s_detail2[1].l_sfmb006,s_detail2[1].sfmc001,s_detail2[1].sfmc002, 
               s_detail2[1].sfmc003,s_detail2[1].sfmc004,s_detail2[1].l_sfba003,s_detail2[1].l_sfba004, 
               s_detail2[1].sfmc005,s_detail2[1].sfmc006,s_detail2[1].sfmc007,s_detail2[1].sfmc008
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmcseq
            #add-point:BEFORE FIELD sfmcseq name="construct.b.page2.sfmcseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmcseq
            
            #add-point:AFTER FIELD sfmcseq name="construct.a.page2.sfmcseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.sfmcseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmcseq
            #add-point:ON ACTION controlp INFIELD sfmcseq name="construct.c.page2.sfmcseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmcseq1
            #add-point:BEFORE FIELD sfmcseq1 name="construct.b.page2.sfmcseq1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmcseq1
            
            #add-point:AFTER FIELD sfmcseq1 name="construct.a.page2.sfmcseq1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.sfmcseq1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmcseq1
            #add-point:ON ACTION controlp INFIELD sfmcseq1 name="construct.c.page2.sfmcseq1"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.l_sfmb001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_sfmb001
            #add-point:ON ACTION controlp INFIELD l_sfmb001 name="construct.c.page2.l_sfmb001"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_sfmb001  #顯示到畫面上
            NEXT FIELD l_sfmb001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_sfmb001
            #add-point:BEFORE FIELD l_sfmb001 name="construct.b.page2.l_sfmb001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_sfmb001
            
            #add-point:AFTER FIELD l_sfmb001 name="construct.a.page2.l_sfmb001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_sfmb002
            #add-point:BEFORE FIELD l_sfmb002 name="construct.b.page2.l_sfmb002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_sfmb002
            
            #add-point:AFTER FIELD l_sfmb002 name="construct.a.page2.l_sfmb002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.l_sfmb002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_sfmb002
            #add-point:ON ACTION controlp INFIELD l_sfmb002 name="construct.c.page2.l_sfmb002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_sfmb005
            #add-point:BEFORE FIELD l_sfmb005 name="construct.b.page2.l_sfmb005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_sfmb005
            
            #add-point:AFTER FIELD l_sfmb005 name="construct.a.page2.l_sfmb005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.l_sfmb005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_sfmb005
            #add-point:ON ACTION controlp INFIELD l_sfmb005 name="construct.c.page2.l_sfmb005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_sfmb006
            #add-point:BEFORE FIELD l_sfmb006 name="construct.b.page2.l_sfmb006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_sfmb006
            
            #add-point:AFTER FIELD l_sfmb006 name="construct.a.page2.l_sfmb006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.l_sfmb006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_sfmb006
            #add-point:ON ACTION controlp INFIELD l_sfmb006 name="construct.c.page2.l_sfmb006"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.sfmc001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmc001
            #add-point:ON ACTION controlp INFIELD sfmc001 name="construct.c.page2.sfmc001"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "sfaasite = '",g_site,"' "
            CALL q_sfaadocno_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfmc001  #顯示到畫面
            LET g_qryparam.where =  ""
            NEXT FIELD sfmc001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmc001
            #add-point:BEFORE FIELD sfmc001 name="construct.b.page2.sfmc001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmc001
            
            #add-point:AFTER FIELD sfmc001 name="construct.a.page2.sfmc001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.sfmc002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmc002
            #add-point:ON ACTION controlp INFIELD sfmc002 name="construct.c.page2.sfmc002"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfmc002  #顯示到畫面上
            NEXT FIELD sfmc002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmc002
            #add-point:BEFORE FIELD sfmc002 name="construct.b.page2.sfmc002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmc002
            
            #add-point:AFTER FIELD sfmc002 name="construct.a.page2.sfmc002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmc003
            #add-point:BEFORE FIELD sfmc003 name="construct.b.page2.sfmc003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmc003
            
            #add-point:AFTER FIELD sfmc003 name="construct.a.page2.sfmc003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.sfmc003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmc003
            #add-point:ON ACTION controlp INFIELD sfmc003 name="construct.c.page2.sfmc003"
 
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmc004
            #add-point:BEFORE FIELD sfmc004 name="construct.b.page2.sfmc004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmc004
            
            #add-point:AFTER FIELD sfmc004 name="construct.a.page2.sfmc004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.sfmc004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmc004
            #add-point:ON ACTION controlp INFIELD sfmc004 name="construct.c.page2.sfmc004"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.l_sfba003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_sfba003
            #add-point:ON ACTION controlp INFIELD l_sfba003 name="construct.c.page2.l_sfba003"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_sfba003  #顯示到畫面上
            NEXT FIELD l_sfba003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_sfba003
            #add-point:BEFORE FIELD l_sfba003 name="construct.b.page2.l_sfba003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_sfba003
            
            #add-point:AFTER FIELD l_sfba003 name="construct.a.page2.l_sfba003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_sfba004
            #add-point:BEFORE FIELD l_sfba004 name="construct.b.page2.l_sfba004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_sfba004
            
            #add-point:AFTER FIELD l_sfba004 name="construct.a.page2.l_sfba004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.l_sfba004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_sfba004
            #add-point:ON ACTION controlp INFIELD l_sfba004 name="construct.c.page2.l_sfba004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmc005
            #add-point:BEFORE FIELD sfmc005 name="construct.b.page2.sfmc005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmc005
            
            #add-point:AFTER FIELD sfmc005 name="construct.a.page2.sfmc005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.sfmc005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmc005
            #add-point:ON ACTION controlp INFIELD sfmc005 name="construct.c.page2.sfmc005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmc006
            #add-point:BEFORE FIELD sfmc006 name="construct.b.page2.sfmc006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmc006
            
            #add-point:AFTER FIELD sfmc006 name="construct.a.page2.sfmc006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.sfmc006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmc006
            #add-point:ON ACTION controlp INFIELD sfmc006 name="construct.c.page2.sfmc006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmc007
            #add-point:BEFORE FIELD sfmc007 name="construct.b.page2.sfmc007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmc007
            
            #add-point:AFTER FIELD sfmc007 name="construct.a.page2.sfmc007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.sfmc007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmc007
            #add-point:ON ACTION controlp INFIELD sfmc007 name="construct.c.page2.sfmc007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmc008
            #add-point:BEFORE FIELD sfmc008 name="construct.b.page2.sfmc008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmc008
            
            #add-point:AFTER FIELD sfmc008 name="construct.a.page2.sfmc008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.sfmc008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmc008
            #add-point:ON ACTION controlp INFIELD sfmc008 name="construct.c.page2.sfmc008"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "sfma_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "sfmb_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "sfmc_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="asft350.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION asft350_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON sfmadocno,sfmasite,sfmadocdt,sfma001,sfma002,sfma003,sfma004,sfma005
                          FROM s_browse[1].b_sfmadocno,s_browse[1].b_sfmasite,s_browse[1].b_sfmadocdt, 
                              s_browse[1].b_sfma001,s_browse[1].b_sfma002,s_browse[1].b_sfma003,s_browse[1].b_sfma004, 
                              s_browse[1].b_sfma005
 
         BEFORE CONSTRUCT
               DISPLAY asft350_filter_parser('sfmadocno') TO s_browse[1].b_sfmadocno
            DISPLAY asft350_filter_parser('sfmasite') TO s_browse[1].b_sfmasite
            DISPLAY asft350_filter_parser('sfmadocdt') TO s_browse[1].b_sfmadocdt
            DISPLAY asft350_filter_parser('sfma001') TO s_browse[1].b_sfma001
            DISPLAY asft350_filter_parser('sfma002') TO s_browse[1].b_sfma002
            DISPLAY asft350_filter_parser('sfma003') TO s_browse[1].b_sfma003
            DISPLAY asft350_filter_parser('sfma004') TO s_browse[1].b_sfma004
            DISPLAY asft350_filter_parser('sfma005') TO s_browse[1].b_sfma005
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL asft350_filter_show('sfmadocno')
   CALL asft350_filter_show('sfmasite')
   CALL asft350_filter_show('sfmadocdt')
   CALL asft350_filter_show('sfma001')
   CALL asft350_filter_show('sfma002')
   CALL asft350_filter_show('sfma003')
   CALL asft350_filter_show('sfma004')
   CALL asft350_filter_show('sfma005')
 
END FUNCTION
 
{</section>}
 
{<section id="asft350.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION asft350_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="asft350.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION asft350_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = asft350_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="asft350.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION asft350_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_sfmb_d.clear()
   CALL g_sfmb2_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL asft350_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL asft350_browser_fill("")
      CALL asft350_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL asft350_filter_show('sfmadocno')
   CALL asft350_filter_show('sfmasite')
   CALL asft350_filter_show('sfmadocdt')
   CALL asft350_filter_show('sfma001')
   CALL asft350_filter_show('sfma002')
   CALL asft350_filter_show('sfma003')
   CALL asft350_filter_show('sfma004')
   CALL asft350_filter_show('sfma005')
   CALL asft350_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL asft350_fetch("F") 
      #顯示單身筆數
      CALL asft350_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="asft350.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION asft350_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_sfma_m.sfmadocno = g_browser[g_current_idx].b_sfmadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE asft350_master_referesh USING g_sfma_m.sfmadocno INTO g_sfma_m.sfmasite,g_sfma_m.sfmadocno, 
       g_sfma_m.sfmadocdt,g_sfma_m.sfma001,g_sfma_m.sfma002,g_sfma_m.sfma003,g_sfma_m.sfma004,g_sfma_m.sfma005, 
       g_sfma_m.sfmastus,g_sfma_m.sfmaownid,g_sfma_m.sfmaowndp,g_sfma_m.sfmacrtid,g_sfma_m.sfmacrtdp, 
       g_sfma_m.sfmacrtdt,g_sfma_m.sfmamodid,g_sfma_m.sfmamoddt,g_sfma_m.sfmacnfid,g_sfma_m.sfmacnfdt, 
       g_sfma_m.sfma004_desc,g_sfma_m.sfma005_desc,g_sfma_m.sfmaownid_desc,g_sfma_m.sfmaowndp_desc,g_sfma_m.sfmacrtid_desc, 
       g_sfma_m.sfmacrtdp_desc,g_sfma_m.sfmamodid_desc,g_sfma_m.sfmacnfid_desc
   
   #遮罩相關處理
   LET g_sfma_m_mask_o.* =  g_sfma_m.*
   CALL asft350_sfma_t_mask()
   LET g_sfma_m_mask_n.* =  g_sfma_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL asft350_set_act_visible()   
   CALL asft350_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_sfma_m_t.* = g_sfma_m.*
   LET g_sfma_m_o.* = g_sfma_m.*
   
   LET g_data_owner = g_sfma_m.sfmaownid      
   LET g_data_dept  = g_sfma_m.sfmaowndp
   
   #重新顯示   
   CALL asft350_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="asft350.insert" >}
#+ 資料新增
PRIVATE FUNCTION asft350_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
DEFINE l_ooef004               LIKE ooef_t.ooef004
DEFINE l_n                     LIKE type_t.num5
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_sfmb_d.clear()   
   CALL g_sfmb2_d.clear()  
 
 
   INITIALIZE g_sfma_m.* TO NULL             #DEFAULT 設定
   
   LET g_sfmadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_sfma_m.sfmaownid = g_user
      LET g_sfma_m.sfmaowndp = g_dept
      LET g_sfma_m.sfmacrtid = g_user
      LET g_sfma_m.sfmacrtdp = g_dept 
      LET g_sfma_m.sfmacrtdt = cl_get_current()
      LET g_sfma_m.sfmamodid = g_user
      LET g_sfma_m.sfmamoddt = cl_get_current()
      LET g_sfma_m.sfmastus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_sfma_m.sfma001 = "1"
 
  
      #add-point:單頭預設值 name="insert.default"
      LET g_sfma_m.sfmasite = g_site
      LET g_sfma_m.sfmastus = "N"
      SELECT ooef004 INTO l_ooef004 FROM ooef_t
       WHERE ooefent = g_enterprise
         AND ooef001 = g_site
      SELECT COUNT(*) INTO l_n FROM ooba_t,oobx_t,oobl_t
       WHERE oobxent = oobaent AND oobx001 = ooba002 AND oobxent = ooblent AND oobx001 = oobl001
         AND oobaent = g_enterprise AND ooba001 = l_ooef004  AND oobl002 = 'asft350' 
         AND oobastus = 'Y' AND oobx005 = 'Y' 
      IF l_n = 1 THEN
         SELECT ooba002 INTO g_sfma_m.sfmadocno FROM ooba_t,oobx_t,oobl_t
          WHERE oobxent = oobaent AND oobx001 = ooba002 AND oobxent = ooblent AND oobx001 = oobl001
            AND oobaent = g_enterprise AND ooba001 = l_ooef004  AND oobl002 = 'asft350' 
            AND oobastus = 'Y' AND oobx005 = 'Y'
      END IF
      LET g_sfma_m.sfmadocdt = g_today 
      CALL s_date_get_first_date(g_today) RETURNING g_sfma_m.sfma002
      LET g_sfma_m.sfma003 = g_today
      LET g_sfma_m_t.* = g_sfma_m.*
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_sfma_m_t.* = g_sfma_m.*
      LET g_sfma_m_o.* = g_sfma_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_sfma_m.sfmastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL asft350_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_sfma_m.* TO NULL
         INITIALIZE g_sfmb_d TO NULL
         INITIALIZE g_sfmb2_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL asft350_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_sfmb_d.clear()
      #CALL g_sfmb2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL asft350_set_act_visible()   
   CALL asft350_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_sfmadocno_t = g_sfma_m.sfmadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " sfmaent = " ||g_enterprise|| " AND",
                      " sfmadocno = '", g_sfma_m.sfmadocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL asft350_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE asft350_cl
   
   CALL asft350_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE asft350_master_referesh USING g_sfma_m.sfmadocno INTO g_sfma_m.sfmasite,g_sfma_m.sfmadocno, 
       g_sfma_m.sfmadocdt,g_sfma_m.sfma001,g_sfma_m.sfma002,g_sfma_m.sfma003,g_sfma_m.sfma004,g_sfma_m.sfma005, 
       g_sfma_m.sfmastus,g_sfma_m.sfmaownid,g_sfma_m.sfmaowndp,g_sfma_m.sfmacrtid,g_sfma_m.sfmacrtdp, 
       g_sfma_m.sfmacrtdt,g_sfma_m.sfmamodid,g_sfma_m.sfmamoddt,g_sfma_m.sfmacnfid,g_sfma_m.sfmacnfdt, 
       g_sfma_m.sfma004_desc,g_sfma_m.sfma005_desc,g_sfma_m.sfmaownid_desc,g_sfma_m.sfmaowndp_desc,g_sfma_m.sfmacrtid_desc, 
       g_sfma_m.sfmacrtdp_desc,g_sfma_m.sfmamodid_desc,g_sfma_m.sfmacnfid_desc
   
   
   #遮罩相關處理
   LET g_sfma_m_mask_o.* =  g_sfma_m.*
   CALL asft350_sfma_t_mask()
   LET g_sfma_m_mask_n.* =  g_sfma_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_sfma_m.sfmasite,g_sfma_m.sfmadocno,g_sfma_m.oobxl003,g_sfma_m.sfmadocdt,g_sfma_m.sfma001, 
       g_sfma_m.sfma002,g_sfma_m.sfma003,g_sfma_m.sfma004,g_sfma_m.sfma004_desc,g_sfma_m.sfma005,g_sfma_m.sfma005_desc, 
       g_sfma_m.sfmastus,g_sfma_m.sfmaownid,g_sfma_m.sfmaownid_desc,g_sfma_m.sfmaowndp,g_sfma_m.sfmaowndp_desc, 
       g_sfma_m.sfmacrtid,g_sfma_m.sfmacrtid_desc,g_sfma_m.sfmacrtdp,g_sfma_m.sfmacrtdp_desc,g_sfma_m.sfmacrtdt, 
       g_sfma_m.sfmamodid,g_sfma_m.sfmamodid_desc,g_sfma_m.sfmamoddt,g_sfma_m.sfmacnfid,g_sfma_m.sfmacnfid_desc, 
       g_sfma_m.sfmacnfdt
   
   #add-point:新增結束後 name="insert.after"
   CALL asft350_show()
   #end add-point 
   
   LET g_data_owner = g_sfma_m.sfmaownid      
   LET g_data_dept  = g_sfma_m.sfmaowndp
   
   #功能已完成,通報訊息中心
   CALL asft350_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="asft350.modify" >}
#+ 資料修改
PRIVATE FUNCTION asft350_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_sfma_m_t.* = g_sfma_m.*
   LET g_sfma_m_o.* = g_sfma_m.*
   
   IF g_sfma_m.sfmadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_sfmadocno_t = g_sfma_m.sfmadocno
 
   CALL s_transaction_begin()
   
   OPEN asft350_cl USING g_enterprise,g_sfma_m.sfmadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN asft350_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE asft350_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE asft350_master_referesh USING g_sfma_m.sfmadocno INTO g_sfma_m.sfmasite,g_sfma_m.sfmadocno, 
       g_sfma_m.sfmadocdt,g_sfma_m.sfma001,g_sfma_m.sfma002,g_sfma_m.sfma003,g_sfma_m.sfma004,g_sfma_m.sfma005, 
       g_sfma_m.sfmastus,g_sfma_m.sfmaownid,g_sfma_m.sfmaowndp,g_sfma_m.sfmacrtid,g_sfma_m.sfmacrtdp, 
       g_sfma_m.sfmacrtdt,g_sfma_m.sfmamodid,g_sfma_m.sfmamoddt,g_sfma_m.sfmacnfid,g_sfma_m.sfmacnfdt, 
       g_sfma_m.sfma004_desc,g_sfma_m.sfma005_desc,g_sfma_m.sfmaownid_desc,g_sfma_m.sfmaowndp_desc,g_sfma_m.sfmacrtid_desc, 
       g_sfma_m.sfmacrtdp_desc,g_sfma_m.sfmamodid_desc,g_sfma_m.sfmacnfid_desc
   
   #檢查是否允許此動作
   IF NOT asft350_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_sfma_m_mask_o.* =  g_sfma_m.*
   CALL asft350_sfma_t_mask()
   LET g_sfma_m_mask_n.* =  g_sfma_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   IF g_sfma_m.sfmastus <> 'N' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'apm-00035'
      LET g_errparam.extend = g_sfma_m.sfmastus
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE asft350_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
 
   
   CALL asft350_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
 
    
   WHILE TRUE
      LET g_sfmadocno_t = g_sfma_m.sfmadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_sfma_m.sfmamodid = g_user 
LET g_sfma_m.sfmamoddt = cl_get_current()
LET g_sfma_m.sfmamodid_desc = cl_get_username(g_sfma_m.sfmamodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_sfma_m.sfmastus MATCHES "[DR]" THEN
         LET g_sfma_m.sfmastus = "N"
      END IF
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL asft350_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE sfma_t SET (sfmamodid,sfmamoddt) = (g_sfma_m.sfmamodid,g_sfma_m.sfmamoddt)
          WHERE sfmaent = g_enterprise AND sfmadocno = g_sfmadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_sfma_m.* = g_sfma_m_t.*
            CALL asft350_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_sfma_m.sfmadocno != g_sfma_m_t.sfmadocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE sfmb_t SET sfmbdocno = g_sfma_m.sfmadocno
 
          WHERE sfmbent = g_enterprise AND sfmbdocno = g_sfma_m_t.sfmadocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "sfmb_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "sfmb_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         
         #end add-point
         
         UPDATE sfmc_t
            SET sfmcdocno = g_sfma_m.sfmadocno
 
          WHERE sfmcent = g_enterprise AND
                sfmcdocno = g_sfmadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "sfmc_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "sfmc_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL asft350_set_act_visible()   
   CALL asft350_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " sfmaent = " ||g_enterprise|| " AND",
                      " sfmadocno = '", g_sfma_m.sfmadocno, "' "
 
   #填到對應位置
   CALL asft350_browser_fill("")
 
   CLOSE asft350_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL asft350_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="asft350.input" >}
#+ 資料輸入
PRIVATE FUNCTION asft350_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_ooef004             LIKE ooef_t.ooef004
   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_close_dd            LIKE sfma_t.sfmadocdt
   DEFINE  l_flag                LIKE type_t.num5
   DEFINE  l_inam                DYNAMIC ARRAY OF RECORD   #記錄產品特徵
              inam001            LIKE inam_t.inam001,
              inam002            LIKE inam_t.inam002,
              inam004            LIKE inam_t.inam004
                                 END RECORD
   DEFINE  l_sfmb                RECORD LIKE sfmb_t.*
   DEFINE  l_sfmb012             LIKE sfmb_t.sfmb012
   DEFINE  l_m                   LIKE type_t.num5
   DEFINE  l_where               STRING                    #160204-00004#4 Add By Ken 160222         
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_sfma_m.sfmasite,g_sfma_m.sfmadocno,g_sfma_m.oobxl003,g_sfma_m.sfmadocdt,g_sfma_m.sfma001, 
       g_sfma_m.sfma002,g_sfma_m.sfma003,g_sfma_m.sfma004,g_sfma_m.sfma004_desc,g_sfma_m.sfma005,g_sfma_m.sfma005_desc, 
       g_sfma_m.sfmastus,g_sfma_m.sfmaownid,g_sfma_m.sfmaownid_desc,g_sfma_m.sfmaowndp,g_sfma_m.sfmaowndp_desc, 
       g_sfma_m.sfmacrtid,g_sfma_m.sfmacrtid_desc,g_sfma_m.sfmacrtdp,g_sfma_m.sfmacrtdp_desc,g_sfma_m.sfmacrtdt, 
       g_sfma_m.sfmamodid,g_sfma_m.sfmamodid_desc,g_sfma_m.sfmamoddt,g_sfma_m.sfmacnfid,g_sfma_m.sfmacnfid_desc, 
       g_sfma_m.sfmacnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT sfmbseq,sfmb001,sfmb002,sfmb005,sfmb006,sfmb007,sfmb008,sfmb009,sfmb010, 
       sfmb011,sfmb012,sfmbsite,sfmb003,sfmb004 FROM sfmb_t WHERE sfmbent=? AND sfmbdocno=? AND sfmbseq=?  
       FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE asft350_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
   
   #end add-point    
   LET g_forupd_sql = "SELECT sfmcseq,sfmcseq1,sfmc001,sfmc002,sfmc003,sfmc004,sfmc005,sfmc006,sfmc007, 
       sfmc008,sfmcsite FROM sfmc_t WHERE sfmcent=? AND sfmcdocno=? AND sfmcseq=? AND sfmcseq1=? FOR  
       UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE asft350_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL asft350_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL asft350_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_sfma_m.sfmasite,g_sfma_m.sfmadocno,g_sfma_m.sfmadocdt,g_sfma_m.sfma001,g_sfma_m.sfma002, 
       g_sfma_m.sfma003,g_sfma_m.sfma004,g_sfma_m.sfma005,g_sfma_m.sfmastus
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="asft350.input.head" >}
      #單頭段
      INPUT BY NAME g_sfma_m.sfmasite,g_sfma_m.sfmadocno,g_sfma_m.sfmadocdt,g_sfma_m.sfma001,g_sfma_m.sfma002, 
          g_sfma_m.sfma003,g_sfma_m.sfma004,g_sfma_m.sfma005,g_sfma_m.sfmastus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN asft350_cl USING g_enterprise,g_sfma_m.sfmadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN asft350_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE asft350_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL asft350_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            CALL cl_set_comp_entry("sfma004,sfma005",TRUE)
            LET g_flag5 = 'N'
            #end add-point
            CALL asft350_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmasite
            #add-point:BEFORE FIELD sfmasite name="input.b.sfmasite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmasite
            
            #add-point:AFTER FIELD sfmasite name="input.a.sfmasite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmasite
            #add-point:ON CHANGE sfmasite name="input.g.sfmasite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmadocno
            #add-point:BEFORE FIELD sfmadocno name="input.b.sfmadocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmadocno
            
            #add-point:AFTER FIELD sfmadocno name="input.a.sfmadocno"
            #此段落由子樣板a05產生
            
            CALL s_aooi200_get_slip_desc(g_sfma_m.sfmadocno)
            RETURNING g_sfma_m.oobxl003
            DISPLAY BY NAME g_sfma_m.oobxl003
            IF  NOT cl_null(g_sfma_m.sfmadocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_sfma_m.sfmadocno != g_sfmadocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfma_t WHERE "||"sfmaent = '" ||g_enterprise|| "' AND "||"sfmadocno = '"||g_sfma_m.sfmadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_sfma_m.sfmadocno) THEN 
               #检查单别
               #CALL s_aooi200_chk_slip(g_site,'',g_sfma_m.sfmadocno,'asft350') #160613-00038#1 mark
               CALL s_aooi200_chk_slip(g_site,'',g_sfma_m.sfmadocno,g_prog)     #160613-00038#1 add
               RETURNING l_success
               IF NOT l_success THEN
                  LET g_sfma_m.sfmadocno = g_sfmadocno_t
                  CALL s_aooi200_get_slip_desc(g_sfma_m.sfmadocno)
                  RETURNING g_sfma_m.oobxl003
                  DISPLAY BY NAME g_sfma_m.oobxl003
                  NEXT FIELD CURRENT
               END IF
            END IF

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmadocno
            #add-point:ON CHANGE sfmadocno name="input.g.sfmadocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmadocdt
            #add-point:BEFORE FIELD sfmadocdt name="input.b.sfmadocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmadocdt
            
            #add-point:AFTER FIELD sfmadocdt name="input.a.sfmadocdt"
            IF NOT cl_null(g_sfma_m.sfmadocdt) AND (cl_null(g_sfma_m_t.sfmadocdt) OR g_sfma_m.sfmadocdt != g_sfma_m_t.sfmadocdt) THEN 
               LET l_close_dd = cl_get_para(g_enterprise,g_site,'S-MFG-0031')
               IF g_sfma_m.sfmadocdt < l_close_dd THEN
                  #日期不可小于关帐日期
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'asf-00008'
                  LET g_errparam.extend = g_sfma_m.sfmadocdt
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_sfma_m.sfmadocdt = g_sfma_m_t.sfmadocdt
                  DISPLAY BY NAME g_sfma_m.sfmadocdt
                  NEXT FIELD sfmadocdt
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmadocdt
            #add-point:ON CHANGE sfmadocdt name="input.g.sfmadocdt"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfma001
            #add-point:BEFORE FIELD sfma001 name="input.b.sfma001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfma001
            
            #add-point:AFTER FIELD sfma001 name="input.a.sfma001"
            CALL asft350_sfma001()            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfma001
            #add-point:ON CHANGE sfma001 name="input.g.sfma001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfma002
            #add-point:BEFORE FIELD sfma002 name="input.b.sfma002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfma002
            
            #add-point:AFTER FIELD sfma002 name="input.a.sfma002"
            IF NOT cl_null(g_sfma_m.sfma002) AND (cl_null(g_sfma_m_t.sfma002) OR g_sfma_m.sfma002 != g_sfma_m_t.sfma002) THEN 
               LET l_close_dd = cl_get_para(g_enterprise,g_site,'S-MFG-0031')
               IF g_sfma_m.sfma002 < l_close_dd THEN
                  #日期不可小于关帐日期
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'asf-00008'
                  LET g_errparam.extend = g_sfma_m.sfma002
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_sfma_m.sfma002 = g_sfma_m_t.sfma002
                  DISPLAY BY NAME g_sfma_m.sfma002
                  NEXT FIELD sfma002
               END IF
               IF NOT cl_null(g_sfma_m.sfma003) THEN
                  IF g_sfma_m.sfma002 > g_sfma_m.sfma003 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'agl-00116'
                     LET g_errparam.extend = g_sfma_m.sfma002
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_sfma_m.sfma002 = g_sfma_m_t.sfma002
                     DISPLAY BY NAME g_sfma_m.sfma002
                     NEXT FIELD sfma002
                  END IF
                  #分摊起讫日期不可跨月
                  IF YEAR(g_sfma_m.sfma002) != YEAR(g_sfma_m.sfma003) OR MONTH(g_sfma_m.sfma002) != MONTH(g_sfma_m.sfma003) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00277'
                     LET g_errparam.extend = g_sfma_m.sfma002
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_sfma_m.sfma002 = g_sfma_m_t.sfma002
                     DISPLAY BY NAME g_sfma_m.sfma002
                     NEXT FIELD sfma002
                  END IF
               END IF
               CALL asft350_sfma001()
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfma002
            #add-point:ON CHANGE sfma002 name="input.g.sfma002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfma003
            #add-point:BEFORE FIELD sfma003 name="input.b.sfma003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfma003
            
            #add-point:AFTER FIELD sfma003 name="input.a.sfma003"
            IF NOT cl_null(g_sfma_m.sfma003) AND (cl_null(g_sfma_m_t.sfma003) OR g_sfma_m.sfma003 != g_sfma_m_t.sfma003) THEN 
               LET l_close_dd = cl_get_para(g_enterprise,g_site,'S-MFG-0031')
               IF g_sfma_m.sfma003 < l_close_dd THEN
                  #日期不可小于关帐日期
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'asf-00008'
                  LET g_errparam.extend = g_sfma_m.sfma003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_sfma_m.sfma003 = g_sfma_m_t.sfma003
                  DISPLAY BY NAME g_sfma_m.sfma003
                  NEXT FIELD sfma003
               END IF
               IF NOT cl_null(g_sfma_m.sfma002) THEN
                  IF g_sfma_m.sfma002 > g_sfma_m.sfma003 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'agl-00116'
                     LET g_errparam.extend = g_sfma_m.sfma003
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_sfma_m.sfma003 = g_sfma_m_t.sfma003
                     DISPLAY BY NAME g_sfma_m.sfma003
                     NEXT FIELD sfma003
                  END IF
                  #分摊起讫日期不可跨月
                  IF YEAR(g_sfma_m.sfma002) != YEAR(g_sfma_m.sfma003) OR MONTH(g_sfma_m.sfma002) != MONTH(g_sfma_m.sfma003) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'asf-00277'
                     LET g_errparam.extend = g_sfma_m.sfma002
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_sfma_m.sfma003 = g_sfma_m_t.sfma003
                     DISPLAY BY NAME g_sfma_m.sfma003
                     NEXT FIELD sfma003
                  END IF
               END IF
               CALL asft350_sfma001()
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfma003
            #add-point:ON CHANGE sfma003 name="input.g.sfma003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfma004
            
            #add-point:AFTER FIELD sfma004 name="input.a.sfma004"
            LET g_sfma_m.sfma004_desc = s_desc_get_stock_desc(g_site,g_sfma_m.sfma004)
            DISPLAY BY NAME g_sfma_m.sfma004_desc
            IF NOT cl_null(g_sfma_m.sfma004) AND (cl_null(g_sfma_m_t.sfma004) OR g_sfma_m.sfma004 != g_sfma_m_t.sfma004) THEN 
               IF NOT asft350_chk_warehouses() THEN
                  LET g_sfma_m.sfma004 = g_sfma_m_t.sfma004 
                  LET g_sfma_m.sfma004_desc = s_desc_get_stock_desc(g_site,g_sfma_m.sfma004)
                  DISPLAY BY NAME g_sfma_m.sfma004_desc
                  NEXT FIELD CURRENT
               END IF
               #檢核輸入的倉庫儲位是否在單據別限制範圍內，若不在限制內則不允許使用此倉庫儲位
               IF g_sfma_m.sfma005 IS NOT NULL THEN
                  CALL s_control_chk_doc('6',g_sfma_m.sfmadocno,g_sfma_m.sfma004,g_sfma_m.sfma005,'','','') RETURNING l_success,l_flag
                  IF NOT l_success THEN
                     LET g_sfma_m.sfma004 = g_sfma_m_t.sfma004
                     LET g_sfma_m.sfma004_desc = s_desc_get_stock_desc(g_site,g_sfma_m.sfma004)
                     DISPLAY BY NAME g_sfma_m.sfma004_desc
                     NEXT FIELD CURRENT
                  ELSE
                     IF NOT l_flag THEN
                        LET g_sfma_m.sfma004 = g_sfma_m_t.sfma004 
                        LET g_sfma_m.sfma004_desc = s_desc_get_stock_desc(g_site,g_sfma_m.sfma004)
                        DISPLAY BY NAME g_sfma_m.sfma004_desc
                        NEXT FIELD CURRENT
                     END IF
                  END IF 
               END IF                  
            END IF

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfma004
            #add-point:BEFORE FIELD sfma004 name="input.b.sfma004"
            CALL cl_set_comp_entry('sfma004',TRUE)
            SELECT COUNT(*) INTO l_n FROM sfmb_t WHERE sfmbent=g_enterprise AND sfmbsite=g_site AND sfmbdocno=g_sfma_m.sfmadocno
            IF l_n > 0 THEN
               CALL cl_set_comp_entry('sfma004',FALSE)
            END IF
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfma004
            #add-point:ON CHANGE sfma004 name="input.g.sfma004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfma005
            
            #add-point:AFTER FIELD sfma005 name="input.a.sfma005"
            IF g_sfma_m.sfma005 IS NULL THEN
               LET g_sfma_m.sfma005 = ' '
            END IF
            LET g_sfma_m.sfma005_desc = s_desc_get_locator_desc(g_site,g_sfma_m.sfma004,g_sfma_m.sfma005)
            DISPLAY BY NAME g_sfma_m.sfma005_desc
            IF g_sfma_m.sfma005 IS NOT NULL AND (g_sfma_m_t.sfma005 IS NULL OR g_sfma_m.sfma005 != g_sfma_m_t.sfma005) THEN 
               IF NOT asft350_chk_warehouses() THEN
                  LET g_sfma_m.sfma005 = g_sfma_m_t.sfma005
                  LET g_sfma_m.sfma005_desc = s_desc_get_locator_desc(g_site,g_sfma_m.sfma004,g_sfma_m.sfma005)
                  DISPLAY BY NAME g_sfma_m.sfma005_desc
                  NEXT FIELD CURRENT
               END IF       
               #檢核輸入的倉庫儲位是否在單據別限制範圍內，若不在限制內則不允許使用此倉庫儲位
               IF g_sfma_m.sfma004 IS NOT NULL THEN
                  CALL s_control_chk_doc('6',g_sfma_m.sfmadocno,g_sfma_m.sfma004,g_sfma_m.sfma005,'','','') RETURNING l_success,l_flag
                  IF NOT l_success THEN
                     LET g_sfma_m.sfma005 = g_sfma_m_t.sfma005
                     LET g_sfma_m.sfma005_desc = s_desc_get_locator_desc(g_site,g_sfma_m.sfma004,g_sfma_m.sfma005)
                     DISPLAY BY NAME g_sfma_m.sfma005_desc
                     NEXT FIELD CURRENT
                  ELSE
                     IF NOT l_flag THEN
                        LET g_sfma_m.sfma005 = g_sfma_m_t.sfma005 
                        LET g_sfma_m.sfma005_desc = s_desc_get_locator_desc(g_site,g_sfma_m.sfma004,g_sfma_m.sfma005)
                        DISPLAY BY NAME g_sfma_m.sfma005_desc
                        NEXT FIELD CURRENT
                     END IF
                  END IF  
               END IF                  
            END IF

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfma005
            #add-point:BEFORE FIELD sfma005 name="input.b.sfma005"
            CALL cl_set_comp_entry('sfma005',TRUE)
            SELECT COUNT(*) INTO l_n FROM sfmb_t WHERE sfmbent=g_enterprise AND sfmbsite=g_site AND sfmbdocno=g_sfma_m.sfmadocno
            IF l_n > 0 THEN
               CALL cl_set_comp_entry('sfma005',FALSE)
            END IF
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfma005
            #add-point:ON CHANGE sfma005 name="input.g.sfma005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmastus
            #add-point:BEFORE FIELD sfmastus name="input.b.sfmastus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmastus
            
            #add-point:AFTER FIELD sfmastus name="input.a.sfmastus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmastus
            #add-point:ON CHANGE sfmastus name="input.g.sfmastus"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.sfmasite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmasite
            #add-point:ON ACTION controlp INFIELD sfmasite name="input.c.sfmasite"
            
            #END add-point
 
 
         #Ctrlp:input.c.sfmadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmadocno
            #add-point:ON ACTION controlp INFIELD sfmadocno name="input.c.sfmadocno"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfma_m.sfmadocno             #給予default值

            #給予arg
            SELECT ooef004 INTO l_ooef004 FROM ooef_t
             WHERE ooefent = g_enterprise
               AND ooef001 = g_site
            LET g_qryparam.arg1 = l_ooef004
            #LET g_qryparam.arg2 = 'asft350' #   #160705-00042#5 160711 by sakura mark
            LET g_qryparam.arg2 = g_prog         #160705-00042#5 160711 by sakura add
            
            CALL q_ooba002_1()                                #呼叫開窗

            LET g_sfma_m.sfmadocno = g_qryparam.return1              

            DISPLAY g_sfma_m.sfmadocno TO sfmadocno              #

            NEXT FIELD sfmadocno                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.sfmadocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmadocdt
            #add-point:ON ACTION controlp INFIELD sfmadocdt name="input.c.sfmadocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.sfma001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfma001
            #add-point:ON ACTION controlp INFIELD sfma001 name="input.c.sfma001"
            
            #END add-point
 
 
         #Ctrlp:input.c.sfma002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfma002
            #add-point:ON ACTION controlp INFIELD sfma002 name="input.c.sfma002"
            
            #END add-point
 
 
         #Ctrlp:input.c.sfma003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfma003
            #add-point:ON ACTION controlp INFIELD sfma003 name="input.c.sfma003"
            
            #END add-point
 
 
         #Ctrlp:input.c.sfma004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfma004
            #add-point:ON ACTION controlp INFIELD sfma004 name="input.c.sfma004"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfma_m.sfma004             #給予default值          
            CALL q_inaa001_2()                                #呼叫開窗
            LET g_sfma_m.sfma004 = g_qryparam.return1              
            DISPLAY g_sfma_m.sfma004 TO sfma004              #
            NEXT FIELD sfma004                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.sfma005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfma005
            #add-point:ON ACTION controlp INFIELD sfma005 name="input.c.sfma005"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfma_m.sfma005             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_sfma_m.sfma004           
            CALL q_inab002_3()                                #呼叫開窗
            LET g_sfma_m.sfma005 = g_qryparam.return1              
            DISPLAY g_sfma_m.sfma005 TO sfma005              #
            NEXT FIELD sfma005                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.sfmastus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmastus
            #add-point:ON ACTION controlp INFIELD sfmastus name="input.c.sfmastus"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_sfma_m.sfmadocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               CALL s_aooi200_gen_docno(g_site,g_sfma_m.sfmadocno,g_sfma_m.sfmadocdt,g_prog)
                    RETURNING l_success,g_sfma_m.sfmadocno
               IF NOT l_success THEN
                  NEXT FIELD sfmadocno
               END IF
               
               #储位如果为null，则说明没有进入此栏位,赋空格后进行栏位检查
               IF g_sfma_m.sfma005 IS NULL THEN
                  LET g_sfma_m.sfma005 = ' '
                  IF NOT asft350_chk_warehouses() THEN
                     LET g_sfma_m.sfma005 = g_sfma_m_t.sfma005
                     LET g_sfma_m.sfma005_desc = s_desc_get_locator_desc(g_site,g_sfma_m.sfma004,g_sfma_m.sfma005)
                     DISPLAY BY NAME g_sfma_m.sfma005_desc
                     NEXT FIELD sfma005
                  END IF       
                  #檢核輸入的倉庫儲位是否在單據別限制範圍內，若不在限制內則不允許使用此倉庫儲位
                  IF g_sfma_m.sfma004 IS NOT NULL THEN
                     CALL s_control_chk_doc('6',g_sfma_m.sfmadocno,g_sfma_m.sfma004,g_sfma_m.sfma005,'','','') RETURNING l_success,l_flag
                     IF NOT l_success THEN
                        LET g_sfma_m.sfma005 = g_sfma_m_t.sfma005
                        LET g_sfma_m.sfma005_desc = s_desc_get_locator_desc(g_site,g_sfma_m.sfma004,g_sfma_m.sfma005)
                        DISPLAY BY NAME g_sfma_m.sfma005_desc
                        NEXT FIELD sfma005
                     ELSE
                        IF NOT l_flag THEN
                           LET g_sfma_m.sfma005 = g_sfma_m_t.sfma005 
                           LET g_sfma_m.sfma005_desc = s_desc_get_locator_desc(g_site,g_sfma_m.sfma004,g_sfma_m.sfma005)
                           DISPLAY BY NAME g_sfma_m.sfma005_desc
                           NEXT FIELD sfma005
                        END IF
                     END IF  
                  END IF  
               END IF                  
               #end add-point
               
               INSERT INTO sfma_t (sfmaent,sfmasite,sfmadocno,sfmadocdt,sfma001,sfma002,sfma003,sfma004, 
                   sfma005,sfmastus,sfmaownid,sfmaowndp,sfmacrtid,sfmacrtdp,sfmacrtdt,sfmamodid,sfmamoddt, 
                   sfmacnfid,sfmacnfdt)
               VALUES (g_enterprise,g_sfma_m.sfmasite,g_sfma_m.sfmadocno,g_sfma_m.sfmadocdt,g_sfma_m.sfma001, 
                   g_sfma_m.sfma002,g_sfma_m.sfma003,g_sfma_m.sfma004,g_sfma_m.sfma005,g_sfma_m.sfmastus, 
                   g_sfma_m.sfmaownid,g_sfma_m.sfmaowndp,g_sfma_m.sfmacrtid,g_sfma_m.sfmacrtdp,g_sfma_m.sfmacrtdt, 
                   g_sfma_m.sfmamodid,g_sfma_m.sfmamoddt,g_sfma_m.sfmacnfid,g_sfma_m.sfmacnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_sfma_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               IF cl_ask_confirm('asr-00040') THEN
                  LET g_flag1 = 'N'
                  IF NOT asft350_gen_fill(g_sfma_m.sfmadocno,g_sfma_m.sfma004,g_sfma_m.sfma005) THEN
                     CALL s_transaction_end('N','0')
                     CONTINUE DIALOG
                  END IF
               ELSE
                  LET g_flag1 = 'N'
               END IF
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL asft350_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL asft350_b_fill()
                  CALL asft350_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               IF g_flag5 = 'Y' THEN
                  CALL asft350_gen_sfmc()
                  LET g_flag5 = 'N'
               END IF
               #end add-point
               
               #將遮罩欄位還原
               CALL asft350_sfma_t_mask_restore('restore_mask_o')
               
               UPDATE sfma_t SET (sfmasite,sfmadocno,sfmadocdt,sfma001,sfma002,sfma003,sfma004,sfma005, 
                   sfmastus,sfmaownid,sfmaowndp,sfmacrtid,sfmacrtdp,sfmacrtdt,sfmamodid,sfmamoddt,sfmacnfid, 
                   sfmacnfdt) = (g_sfma_m.sfmasite,g_sfma_m.sfmadocno,g_sfma_m.sfmadocdt,g_sfma_m.sfma001, 
                   g_sfma_m.sfma002,g_sfma_m.sfma003,g_sfma_m.sfma004,g_sfma_m.sfma005,g_sfma_m.sfmastus, 
                   g_sfma_m.sfmaownid,g_sfma_m.sfmaowndp,g_sfma_m.sfmacrtid,g_sfma_m.sfmacrtdp,g_sfma_m.sfmacrtdt, 
                   g_sfma_m.sfmamodid,g_sfma_m.sfmamoddt,g_sfma_m.sfmacnfid,g_sfma_m.sfmacnfdt)
                WHERE sfmaent = g_enterprise AND sfmadocno = g_sfmadocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "sfma_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL asft350_sfma_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_sfma_m_t)
               LET g_log2 = util.JSON.stringify(g_sfma_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_sfmadocno_t = g_sfma_m.sfmadocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="asft350.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_sfmb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_sfmb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL asft350_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_sfmb_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            IF g_rec_b = 0 AND g_flag1 != 'N' THEN           
               IF cl_ask_confirm('asr-00040') THEN
                  CALL s_transaction_begin()
                  IF NOT asft350_gen_fill(g_sfma_m.sfmadocno,g_sfma_m.sfma004,g_sfma_m.sfma005) THEN
                     CALL s_transaction_end('N','0')
                     CONTINUE DIALOG
                  END IF
                  CALL s_transaction_end('Y','0')
                  CALL asft350_b_fill()
                  LET g_rec_b = g_sfmb_d.getLength()
               END IF
            END IF
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN asft350_cl USING g_enterprise,g_sfma_m.sfmadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN asft350_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE asft350_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_sfmb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_sfmb_d[l_ac].sfmbseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_sfmb_d_t.* = g_sfmb_d[l_ac].*  #BACKUP
               LET g_sfmb_d_o.* = g_sfmb_d[l_ac].*  #BACKUP
               CALL asft350_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL asft350_set_no_entry_b(l_cmd)
               IF NOT asft350_lock_b("sfmb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH asft350_bcl INTO g_sfmb_d[l_ac].sfmbseq,g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb002, 
                      g_sfmb_d[l_ac].sfmb005,g_sfmb_d[l_ac].sfmb006,g_sfmb_d[l_ac].sfmb007,g_sfmb_d[l_ac].sfmb008, 
                      g_sfmb_d[l_ac].sfmb009,g_sfmb_d[l_ac].sfmb010,g_sfmb_d[l_ac].sfmb011,g_sfmb_d[l_ac].sfmb012, 
                      g_sfmb_d[l_ac].sfmbsite,g_sfmb_d[l_ac].sfmb003,g_sfmb_d[l_ac].sfmb004
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_sfmb_d_t.sfmbseq,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_sfmb_d_mask_o[l_ac].* =  g_sfmb_d[l_ac].*
                  CALL asft350_sfmb_t_mask()
                  LET g_sfmb_d_mask_n[l_ac].* =  g_sfmb_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL asft350_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_sfmb_d[l_ac].* TO NULL 
            INITIALIZE g_sfmb_d_t.* TO NULL 
            INITIALIZE g_sfmb_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
            
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_sfmb_d_t.* = g_sfmb_d[l_ac].*     #新輸入資料
            LET g_sfmb_d_o.* = g_sfmb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL asft350_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL asft350_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_sfmb_d[li_reproduce_target].* = g_sfmb_d[li_reproduce].*
 
               LET g_sfmb_d[li_reproduce_target].sfmbseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            SELECT MAX(sfmbseq) + 1 INTO g_sfmb_d[l_ac].sfmbseq FROM sfmb_t
             WHERE sfmbent = g_enterprise
               AND sfmbdocno = g_sfma_m.sfmadocno
            IF cl_null(g_sfmb_d[l_ac].sfmbseq) THEN
               LET g_sfmb_d[l_ac].sfmbseq = 1
            END IF
            LET g_sfmb_d[l_ac].sfmbsite = g_site
            LET g_sfmb_d[l_ac].sfmb008 = 0 
            LET g_sfmb_d[l_ac].sfmb003 = g_sfma_m.sfma004
            LET g_sfmb_d[l_ac].sfmb004 = g_sfma_m.sfma005
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            IF NOT asft350_chk_sfmb(g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb002,g_sfma_m.sfma004,g_sfma_m.sfma005,g_sfmb_d[l_ac].sfmb005,g_sfmb_d[l_ac].sfmb006,g_sfmb_d[l_ac].sfmb007,g_sfmb_d[l_ac].sfmb009,g_sfmb_d[l_ac].sfmb010,g_sfmb_d[l_ac].sfmb012) THEN
               CANCEL INSERT 
            END IF
            IF cl_null(g_sfmb_d[l_ac].sfmb002) THEN
               LET g_sfmb_d[l_ac].sfmb002 = ' '
            END IF
            IF cl_null(g_sfmb_d[l_ac].sfmb004) THEN
               LET g_sfmb_d[l_ac].sfmb004 = ' '
            END IF
            IF cl_null(g_sfmb_d[l_ac].sfmb005) THEN
               LET g_sfmb_d[l_ac].sfmb005 = ' '
            END IF
            IF cl_null(g_sfmb_d[l_ac].sfmb006) THEN
               LET g_sfmb_d[l_ac].sfmb006 = ' '
            END IF
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM sfmb_t 
             WHERE sfmbent = g_enterprise AND sfmbdocno = g_sfma_m.sfmadocno
 
               AND sfmbseq = g_sfmb_d[l_ac].sfmbseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfma_m.sfmadocno
               LET gs_keys[2] = g_sfmb_d[g_detail_idx].sfmbseq
               CALL asft350_insert_b('sfmb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               INITIALIZE g_sfmb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "sfmb_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL asft350_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               IF l_inam.getLength() > 1 THEN
                  SELECT * INTO l_sfmb.* FROM sfmb_t WHERE sfmbent=g_enterprise AND sfmbsite=g_site
                     AND sfmbdocno=g_sfma_m.sfmadocno AND sfmbseq=g_sfmb_d[l_ac].sfmbseq
                  FOR l_i = 2 TO l_inam.getLength()
                     SELECT MAX(sfmbseq) INTO l_sfmb.sfmbseq FROM sfmb_t WHERE sfmbent=g_enterprise AND sfmbsite=g_site
                        AND sfmbdocno=g_sfma_m.sfmadocno 
                     LET l_sfmb.sfmb002=l_inam[l_i].inam002
                     LET l_sfmb.sfmb009=l_inam[l_i].inam004
                     INSERT INTO sfmb_t VALUES l_sfmb.*
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "INSERT sfmb_t"
                        LET g_errparam.popup = FALSE
                        CALL cl_err()

                        CALL s_transaction_end('N','0')                    
                        CANCEL INSERT
                        EXIT FOR
                     END IF
                  END FOR
                  CALL asft350_b_fill()
                  LET g_rec_b = g_sfmb_d.getLength() - 1
               END IF
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               SELECT COUNT(*) INTO l_m FROM sfmc_t 
                WHERE sfmcent = g_enterprise AND sfmcsite = g_site
                  AND sfmcdocno = g_sfma_m.sfmadocno AND sfmcseq = g_sfmb_d_t.sfmbseq
               IF l_m > 0 THEN
                  IF NOT cl_ask_confirm("asf-00389") THEN
                     CANCEL DELETE
                  END IF
                  DELETE FROM sfmc_t WHERE sfmcent = g_enterprise AND sfmcsite = g_site
                     AND sfmcdocno = g_sfma_m.sfmadocno AND sfmcseq = g_sfmb_d_t.sfmbseq
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "DEL sfmc_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()               
                     CALL s_transaction_end('N','0')
                     CANCEL DELETE
                  END IF
               END IF
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_sfma_m.sfmadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_sfmb_d_t.sfmbseq
 
            
               #刪除同層單身
               IF NOT asft350_delete_b('sfmb_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE asft350_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT asft350_key_delete_b(gs_keys,'sfmb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE asft350_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE asft350_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_sfmb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_sfmb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmbseq
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_sfmb_d[l_ac].sfmbseq,"1","1","","","azz-00079",1) THEN
               NEXT FIELD sfmbseq
            END IF 
 
 
 
            #add-point:AFTER FIELD sfmbseq name="input.a.page1.sfmbseq"
            #此段落由子樣板a05產生
            IF  g_sfma_m.sfmadocno IS NOT NULL AND g_sfmb_d[g_detail_idx].sfmbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfma_m.sfmadocno != g_sfmadocno_t OR g_sfmb_d[g_detail_idx].sfmbseq != g_sfmb_d_t.sfmbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfmb_t WHERE "||"sfmbent = '" ||g_enterprise|| "' AND "||"sfmbdocno = '"||g_sfma_m.sfmadocno ||"' AND "|| "sfmbseq = '"||g_sfmb_d[g_detail_idx].sfmbseq ||"'",'std-00004',0) THEN 
                     LET g_sfmb_d[g_detail_idx].sfmbseq = g_sfmb_d_t.sfmbseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmbseq
            #add-point:BEFORE FIELD sfmbseq name="input.b.page1.sfmbseq"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmbseq
            #add-point:ON CHANGE sfmbseq name="input.g.page1.sfmbseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb001
            
            #add-point:AFTER FIELD sfmb001 name="input.a.page1.sfmb001"
            CALL asft350_b_desc()
            IF NOT cl_null(g_sfmb_d[l_ac].sfmb001) AND (cl_null(g_sfmb_d_t.sfmb001) OR g_sfmb_d[l_ac].sfmb001 != g_sfmb_d_t.sfmb001) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_sfmb_d[l_ac].sfmb001
               IF cl_chk_exist("v_imaf001_1") THEN
                  #檢查成功時後續處理
                  #檢核輸入的料件的生命週期是否在單據別限制範圍內，若不在限制內則不允許盘点此料
                  CALL s_control_chk_doc('4',g_sfma_m.sfmadocno,g_sfmb_d[l_ac].sfmb001,'','','','') RETURNING l_success,l_flag
                  IF NOT l_success THEN
                     LET g_sfmb_d[l_ac].sfmb001 = g_sfmb_d_t.sfmb001
                     CALL asft350_b_desc()
                     NEXT FIELD CURRENT
                  ELSE
                     IF NOT l_flag THEN
                        LET g_sfmb_d[l_ac].sfmb001 = g_sfmb_d_t.sfmb001
                        CALL asft350_b_desc()
                        NEXT FIELD CURRENT
                     END IF
                  END IF
         
                  #檢核輸入的料件的產品分類是否在單據別限制範圍內，若不在限制內則不允許盘点此料
                  CALL s_control_chk_doc('5',g_sfma_m.sfmadocno,g_sfmb_d[l_ac].sfmb001,'','','','') RETURNING l_success,l_flag
                  IF NOT l_success THEN
                     LET g_sfmb_d[l_ac].sfmb001 = g_sfmb_d_t.sfmb001
                     CALL asft350_b_desc()
                     NEXT FIELD CURRENT
                  ELSE
                     IF NOT l_flag THEN
                        LET g_sfmb_d[l_ac].sfmb001 = g_sfmb_d_t.sfmb001
                        CALL asft350_b_desc()
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               ELSE
                  #檢查失敗時後續處理
                  LET g_sfmb_d[l_ac].sfmb001 = g_sfmb_d_t.sfmb001
                  CALL asft350_b_desc()
                  NEXT FIELD CURRENT
               END IF
               
               #料号相关栏位开启关闭
               CALL asft350_chk_sfmb_entry(g_sfmb_d[l_ac].sfmb001)
               IF g_flag2 = 'Y' THEN
                  IF l_cmd = 'a' THEN
                     IF s_feature_auto_chk(g_sfmb_d[l_ac].sfmb001) THEN #160314-00009#15 add
                        CALL l_inam.clear()
                        CALL s_feature_multi(g_sfmb_d[l_ac].sfmb001,'','',g_site,g_sfma_m.sfmadocno) RETURNING l_success,l_inam
                        LET g_sfmb_d[l_ac].sfmb002 = l_inam[1].inam002
                        LET g_sfmb_d[l_ac].sfmb009 = l_inam[1].inam004
                        DISPLAY BY NAME g_sfmb_d[l_ac].sfmb002,g_sfmb_d[l_ac].sfmb009
                     END IF    #160314-00009#15 add
                  END IF
               END IF
               
               #检查产品特征
               IF NOT cl_null(g_sfmb_d[l_ac].sfmb002) THEN            
                  IF NOT s_feature_check(g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb002) THEN
                     NEXT FIELD sfmb002
                  END IF
                  #显示产品特征说明
                  CALL s_feature_description(g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb002)
                     RETURNING l_success,g_sfmb_d[l_ac].sfmb002_desc
                  IF NOT l_success THEN
                     LET g_sfmb_d[l_ac].sfmb002_desc = ''
                  END IF
               ELSE
                  LET g_sfmb_d[l_ac].sfmb002_desc = ''
               END IF
               
               SELECT imaf053,imaf015 INTO g_sfmb_d[l_ac].sfmb007,g_sfmb_d[l_ac].sfmb010 FROM imaf_t WHERE imafent=g_enterprise AND imafsite=g_site AND imaf001=g_sfmb_d[l_ac].sfmb001
               IF cl_null(g_sfmb_d[l_ac].sfmb007) THEN
                  SELECT imaa006 INTO g_sfmb_d[l_ac].sfmb007 FROM imaa_t WHERE imaaent=g_enterprise AND imaa001=g_sfmb_d[l_ac].sfmb001
               END IF
               IF NOT cl_null(g_sfmb_d[l_ac].sfmb010) THEN
                  LET g_sfmb_d[l_ac].sfmb011 = 0 
               END IF
               CALL asft350_def_sfmb008(g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb002,g_sfma_m.sfma004,g_sfma_m.sfma005,g_sfmb_d[l_ac].sfmb005,g_sfmb_d[l_ac].sfmb006,g_sfmb_d[l_ac].sfmb007)
               CALL asft350_b_desc()
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb001
            #add-point:BEFORE FIELD sfmb001 name="input.b.page1.sfmb001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmb001
            #add-point:ON CHANGE sfmb001 name="input.g.page1.sfmb001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb002
            
            #add-point:AFTER FIELD sfmb002 name="input.a.page1.sfmb002"
            IF cl_null(g_sfmb_d[l_ac].sfmb002) THEN
               LET g_sfmb_d[l_ac].sfmb002 = ' '
            END IF
            #检查产品特征
            IF NOT cl_null(g_sfmb_d[l_ac].sfmb002) AND NOT cl_null(g_sfmb_d[l_ac].sfmb001) THEN            
               IF NOT s_feature_check(g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb002) THEN
                  NEXT FIELD sfmb002
               END IF
               #151224-00025#2--add--start--
               IF NOT s_feature_direct_input(g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb002,g_sfmb_d_t.sfmb002,g_sfma_m.sfmadocno,g_sfma_m.sfmasite) THEN
                  NEXT FIELD CURRENT
               END IF 
               #151224-00025#2--add--end----
               #显示产品特征说明
               CALL s_feature_description(g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb002)
                  RETURNING l_success,g_sfmb_d[l_ac].sfmb002_desc
               IF NOT l_success THEN
                  LET g_sfmb_d[l_ac].sfmb002_desc = ''
               END IF
            ELSE
               LET g_sfmb_d[l_ac].sfmb002_desc = ''
            END IF
               
            IF g_sfmb_d[l_ac].sfmb002 IS NOT NULL AND (g_sfmb_d_t.sfmb002 IS NULL OR g_sfmb_d[l_ac].sfmb002 != g_sfmb_d_t.sfmb002) THEN
               CALL asft350_def_sfmb008(g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb002,g_sfma_m.sfma004,g_sfma_m.sfma005,g_sfmb_d[l_ac].sfmb005,g_sfmb_d[l_ac].sfmb006,g_sfmb_d[l_ac].sfmb007)
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb002
            #add-point:BEFORE FIELD sfmb002 name="input.b.page1.sfmb002"
            CALL asft350_chk_sfmb_entry(g_sfmb_d[l_ac].sfmb001) 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmb002
            #add-point:ON CHANGE sfmb002 name="input.g.page1.sfmb002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb005
            #add-point:BEFORE FIELD sfmb005 name="input.b.page1.sfmb005"
            CALL asft350_chk_sfmb_entry(g_sfmb_d[l_ac].sfmb001) 
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb005
            
            #add-point:AFTER FIELD sfmb005 name="input.a.page1.sfmb005"
            IF cl_null(g_sfmb_d[l_ac].sfmb005) THEN
               LET g_sfmb_d[l_ac].sfmb005 = ' '
            END IF
            IF g_sfmb_d[l_ac].sfmb005 IS NOT NULL AND (g_sfmb_d_t.sfmb005 IS NULL OR g_sfmb_d[l_ac].sfmb005 != g_sfmb_d_t.sfmb005) THEN
               CALL asft350_def_sfmb008(g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb002,g_sfma_m.sfma004,g_sfma_m.sfma005,g_sfmb_d[l_ac].sfmb005,g_sfmb_d[l_ac].sfmb006,g_sfmb_d[l_ac].sfmb007)
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmb005
            #add-point:ON CHANGE sfmb005 name="input.g.page1.sfmb005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb006
            #add-point:BEFORE FIELD sfmb006 name="input.b.page1.sfmb006"
            CALL asft350_chk_sfmb_entry(g_sfmb_d[l_ac].sfmb001) 
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb006
            
            #add-point:AFTER FIELD sfmb006 name="input.a.page1.sfmb006"
            IF cl_null(g_sfmb_d[l_ac].sfmb006) THEN
               LET g_sfmb_d[l_ac].sfmb006 = ' '
            END IF
            IF g_sfmb_d[l_ac].sfmb006 IS NOT NULL AND (g_sfmb_d_t.sfmb006 IS NULL OR g_sfmb_d[l_ac].sfmb006 != g_sfmb_d_t.sfmb006) THEN
               CALL asft350_def_sfmb008(g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb002,g_sfma_m.sfma004,g_sfma_m.sfma005,g_sfmb_d[l_ac].sfmb005,g_sfmb_d[l_ac].sfmb006,g_sfmb_d[l_ac].sfmb007)
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmb006
            #add-point:ON CHANGE sfmb006 name="input.g.page1.sfmb006"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb007
            
            #add-point:AFTER FIELD sfmb007 name="input.a.page1.sfmb007"
            CALL asft350_b_desc()
            IF NOT cl_null(g_sfmb_d[l_ac].sfmb007) AND (cl_null(g_sfmb_d_t.sfmb007) OR g_sfmb_d[l_ac].sfmb007 != g_sfmb_d_t.sfmb007) THEN
               IF asft350_chk_sfmb007() THEN
                  CALL asft350_def_sfmb008(g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb002,g_sfma_m.sfma004,g_sfma_m.sfma005,g_sfmb_d[l_ac].sfmb005,g_sfmb_d[l_ac].sfmb006,g_sfmb_d[l_ac].sfmb007)       
               ELSE
                  LET g_sfmb_d[l_ac].sfmb007 = g_sfmb_d_t.sfmb007
                  CALL asft350_b_desc()
               END IF            
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb007
            #add-point:BEFORE FIELD sfmb007 name="input.b.page1.sfmb007"
            CALL asft350_chk_sfmb_entry(g_sfmb_d[l_ac].sfmb001) 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmb007
            #add-point:ON CHANGE sfmb007 name="input.g.page1.sfmb007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb008
            #add-point:BEFORE FIELD sfmb008 name="input.b.page1.sfmb008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb008
            
            #add-point:AFTER FIELD sfmb008 name="input.a.page1.sfmb008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmb008
            #add-point:ON CHANGE sfmb008 name="input.g.page1.sfmb008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb009
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_sfmb_d[l_ac].sfmb009,"0","1","","","azz-00079",1) THEN
               NEXT FIELD sfmb009
            END IF 
 
 
 
            #add-point:AFTER FIELD sfmb009 name="input.a.page1.sfmb009"
            IF NOT cl_null(g_sfmb_d[l_ac].sfmb009) THEN
               #数量进行单位取位
               CALL s_aooi250_take_decimals(g_sfmb_d[l_ac].sfmb007,g_sfmb_d[l_ac].sfmb009) RETURNING l_success,g_sfmb_d[l_ac].sfmb009
               IF NOT l_success THEN
                  LET g_sfmb_d[l_ac].sfmb009 = g_sfmb_d_t.sfmb009
                  NEXT FIELD sfmb009
               END IF
               LET g_sfmb_d[l_ac].l_num = g_sfmb_d[l_ac].sfmb008 - g_sfmb_d[l_ac].sfmb009
            ELSE
               LET g_sfmb_d[l_ac].l_num = ''
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb009
            #add-point:BEFORE FIELD sfmb009 name="input.b.page1.sfmb009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmb009
            #add-point:ON CHANGE sfmb009 name="input.g.page1.sfmb009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_num
            #add-point:BEFORE FIELD l_num name="input.b.page1.l_num"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_num
            
            #add-point:AFTER FIELD l_num name="input.a.page1.l_num"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_num
            #add-point:ON CHANGE l_num name="input.g.page1.l_num"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_num1
            #add-point:BEFORE FIELD l_num1 name="input.b.page1.l_num1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_num1
            
            #add-point:AFTER FIELD l_num1 name="input.a.page1.l_num1"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_num1
            #add-point:ON CHANGE l_num1 name="input.g.page1.l_num1"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb010
            
            #add-point:AFTER FIELD sfmb010 name="input.a.page1.sfmb010"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfmb_d[l_ac].sfmb010
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfmb_d[l_ac].sfmb010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfmb_d[l_ac].sfmb010_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb010
            #add-point:BEFORE FIELD sfmb010 name="input.b.page1.sfmb010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmb010
            #add-point:ON CHANGE sfmb010 name="input.g.page1.sfmb010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb011
            #add-point:BEFORE FIELD sfmb011 name="input.b.page1.sfmb011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb011
            
            #add-point:AFTER FIELD sfmb011 name="input.a.page1.sfmb011"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmb011
            #add-point:ON CHANGE sfmb011 name="input.g.page1.sfmb011"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb012
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_sfmb_d[l_ac].sfmb012,"0","1","","","azz-00079",1) THEN
               NEXT FIELD sfmb012
            END IF 
 
 
 
            #add-point:AFTER FIELD sfmb012 name="input.a.page1.sfmb012"
            IF NOT cl_null(g_sfmb_d[l_ac].sfmb012) THEN
               #数量进行单位取位
               CALL s_aooi250_take_decimals(g_sfmb_d[l_ac].sfmb010,g_sfmb_d[l_ac].sfmb012) RETURNING l_success,g_sfmb_d[l_ac].sfmb012
               IF NOT l_success THEN
                  LET g_sfmb_d[l_ac].sfmb012 = g_sfmb_d_t.sfmb012
                  NEXT FIELD sfmb012
               END IF
               LET g_sfmb_d[l_ac].l_num2 = g_sfmb_d[l_ac].sfmb011 - g_sfmb_d[l_ac].sfmb012
            ELSE
               LET g_sfmb_d[l_ac].l_num2 = ''
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb012
            #add-point:BEFORE FIELD sfmb012 name="input.b.page1.sfmb012"
            CALL cl_set_comp_entry("sfmb012",TRUE)
            IF cl_null(g_sfmb_d[l_ac].sfmb010) THEN
               CALL cl_set_comp_entry("sfmb012",FALSE)
            END IF
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmb012
            #add-point:ON CHANGE sfmb012 name="input.g.page1.sfmb012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_num2
            #add-point:BEFORE FIELD l_num2 name="input.b.page1.l_num2"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_num2
            
            #add-point:AFTER FIELD l_num2 name="input.a.page1.l_num2"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_num2
            #add-point:ON CHANGE l_num2 name="input.g.page1.l_num2"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_num3
            #add-point:BEFORE FIELD l_num3 name="input.b.page1.l_num3"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_num3
            
            #add-point:AFTER FIELD l_num3 name="input.a.page1.l_num3"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_num3
            #add-point:ON CHANGE l_num3 name="input.g.page1.l_num3"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmbsite
            #add-point:BEFORE FIELD sfmbsite name="input.b.page1.sfmbsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmbsite
            
            #add-point:AFTER FIELD sfmbsite name="input.a.page1.sfmbsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmbsite
            #add-point:ON CHANGE sfmbsite name="input.g.page1.sfmbsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb003
            #add-point:BEFORE FIELD sfmb003 name="input.b.page1.sfmb003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb003
            
            #add-point:AFTER FIELD sfmb003 name="input.a.page1.sfmb003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmb003
            #add-point:ON CHANGE sfmb003 name="input.g.page1.sfmb003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmb004
            #add-point:BEFORE FIELD sfmb004 name="input.b.page1.sfmb004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmb004
            
            #add-point:AFTER FIELD sfmb004 name="input.a.page1.sfmb004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmb004
            #add-point:ON CHANGE sfmb004 name="input.g.page1.sfmb004"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.sfmbseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmbseq
            #add-point:ON ACTION controlp INFIELD sfmbseq name="input.c.page1.sfmbseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.sfmb001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb001
            #add-point:ON ACTION controlp INFIELD sfmb001 name="input.c.page1.sfmb001"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfmb_d[l_ac].sfmb001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_imaf001()                                #呼叫開窗

            LET g_sfmb_d[l_ac].sfmb001 = g_qryparam.return1              

            DISPLAY g_sfmb_d[l_ac].sfmb001 TO sfmb001              #

            NEXT FIELD sfmb001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.sfmb002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb002
            #add-point:ON ACTION controlp INFIELD sfmb002 name="input.c.page1.sfmb002"
            IF NOT cl_null(g_sfmb_d[l_ac].sfmb001) THEN
               CALL asft350_chk_sfmb_entry(g_sfmb_d[l_ac].sfmb001)
               IF g_flag2 = 'Y' THEN
                  IF l_cmd = 'a' THEN
                     CALL l_inam.clear()
                     CALL s_feature_multi(g_sfmb_d[l_ac].sfmb001,'','',g_site,g_sfma_m.sfmadocno) RETURNING l_success,l_inam
                     LET g_sfmb_d[l_ac].sfmb002 = l_inam[1].inam002
                     LET g_sfmb_d[l_ac].sfmb009 = l_inam[1].inam004
                     DISPLAY BY NAME g_sfmb_d[l_ac].sfmb002,g_sfmb_d[l_ac].sfmb009
                  END IF
                  IF l_cmd = 'u' THEN
                     CALL s_feature_single(g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb002,g_site,g_sfma_m.sfmadocno)
                        RETURNING l_success,g_sfmb_d[l_ac].sfmb002
                     DISPLAY BY NAME g_sfmb_d[l_ac].sfmb002
                  END IF
               END IF
            END IF
            #END add-point
 
 
         #Ctrlp:input.c.page1.sfmb005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb005
            #add-point:ON ACTION controlp INFIELD sfmb005 name="input.c.page1.sfmb005"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_sfmb_d[l_ac].sfmb005             #給予default值
            #給予arg
            LET g_qryparam.arg1 = "" #           
            CALL q_inag006()                                #呼叫開窗
            LET g_sfmb_d[l_ac].sfmb005 = g_qryparam.return1              
            DISPLAY g_sfmb_d[l_ac].sfmb005 TO sfmb005              #
            NEXT FIELD sfmb005                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page1.sfmb006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb006
            #add-point:ON ACTION controlp INFIELD sfmb006 name="input.c.page1.sfmb006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.sfmb007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb007
            #add-point:ON ACTION controlp INFIELD sfmb007 name="input.c.page1.sfmb007"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfmb_d[l_ac].sfmb007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_sfmb_d[l_ac].sfmb007 = g_qryparam.return1              

            DISPLAY g_sfmb_d[l_ac].sfmb007 TO sfmb007              #

            NEXT FIELD sfmb007                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.sfmb008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb008
            #add-point:ON ACTION controlp INFIELD sfmb008 name="input.c.page1.sfmb008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.sfmb009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb009
            #add-point:ON ACTION controlp INFIELD sfmb009 name="input.c.page1.sfmb009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.l_num
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_num
            #add-point:ON ACTION controlp INFIELD l_num name="input.c.page1.l_num"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.l_num1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_num1
            #add-point:ON ACTION controlp INFIELD l_num1 name="input.c.page1.l_num1"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.sfmb010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb010
            #add-point:ON ACTION controlp INFIELD sfmb010 name="input.c.page1.sfmb010"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfmb_d[l_ac].sfmb010             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_sfmb_d[l_ac].sfmb010 = g_qryparam.return1              

            DISPLAY g_sfmb_d[l_ac].sfmb010 TO sfmb010              #

            NEXT FIELD sfmb010                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.sfmb011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb011
            #add-point:ON ACTION controlp INFIELD sfmb011 name="input.c.page1.sfmb011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.sfmb012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb012
            #add-point:ON ACTION controlp INFIELD sfmb012 name="input.c.page1.sfmb012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.l_num2
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_num2
            #add-point:ON ACTION controlp INFIELD l_num2 name="input.c.page1.l_num2"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.l_num3
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_num3
            #add-point:ON ACTION controlp INFIELD l_num3 name="input.c.page1.l_num3"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.sfmbsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmbsite
            #add-point:ON ACTION controlp INFIELD sfmbsite name="input.c.page1.sfmbsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.sfmb003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb003
            #add-point:ON ACTION controlp INFIELD sfmb003 name="input.c.page1.sfmb003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.sfmb004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmb004
            #add-point:ON ACTION controlp INFIELD sfmb004 name="input.c.page1.sfmb004"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_sfmb_d[l_ac].* = g_sfmb_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE asft350_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_sfmb_d[l_ac].sfmbseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_sfmb_d[l_ac].* = g_sfmb_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               IF NOT asft350_chk_sfmb(g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb002,g_sfma_m.sfma004,g_sfma_m.sfma005,g_sfmb_d[l_ac].sfmb005,g_sfmb_d[l_ac].sfmb006,g_sfmb_d[l_ac].sfmb007,g_sfmb_d[l_ac].sfmb009,g_sfmb_d[l_ac].sfmb010,g_sfmb_d[l_ac].sfmb012) THEN
                  CLOSE asft350_bcl
                  CALL s_transaction_end('N','0')
                  IF g_flag3 = 'Y' THEN
                     NEXT FIELD sfmb001
                  END IF
                  IF g_flag4 = 'Y' THEN
                     NEXT FIELD sfmb012
                  END IF
               END IF
               IF cl_null(g_sfmb_d[l_ac].sfmb002) THEN
                  LET g_sfmb_d[l_ac].sfmb002 = ' '
               END IF
               IF cl_null(g_sfmb_d[l_ac].sfmb004) THEN
                  LET g_sfmb_d[l_ac].sfmb004 = ' '
               END IF
               IF cl_null(g_sfmb_d[l_ac].sfmb005) THEN
                  LET g_sfmb_d[l_ac].sfmb005 = ' '
               END IF
               IF cl_null(g_sfmb_d[l_ac].sfmb006) THEN
                  LET g_sfmb_d[l_ac].sfmb006 = ' '
               END IF
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL asft350_sfmb_t_mask_restore('restore_mask_o')
      
               UPDATE sfmb_t SET (sfmbdocno,sfmbseq,sfmb001,sfmb002,sfmb005,sfmb006,sfmb007,sfmb008, 
                   sfmb009,sfmb010,sfmb011,sfmb012,sfmbsite,sfmb003,sfmb004) = (g_sfma_m.sfmadocno,g_sfmb_d[l_ac].sfmbseq, 
                   g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb002,g_sfmb_d[l_ac].sfmb005,g_sfmb_d[l_ac].sfmb006, 
                   g_sfmb_d[l_ac].sfmb007,g_sfmb_d[l_ac].sfmb008,g_sfmb_d[l_ac].sfmb009,g_sfmb_d[l_ac].sfmb010, 
                   g_sfmb_d[l_ac].sfmb011,g_sfmb_d[l_ac].sfmb012,g_sfmb_d[l_ac].sfmbsite,g_sfmb_d[l_ac].sfmb003, 
                   g_sfmb_d[l_ac].sfmb004)
                WHERE sfmbent = g_enterprise AND sfmbdocno = g_sfma_m.sfmadocno 
 
                  AND sfmbseq = g_sfmb_d_t.sfmbseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_sfmb_d[l_ac].* = g_sfmb_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "sfmb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_sfmb_d[l_ac].* = g_sfmb_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "sfmb_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfma_m.sfmadocno
               LET gs_keys_bak[1] = g_sfmadocno_t
               LET gs_keys[2] = g_sfmb_d[g_detail_idx].sfmbseq
               LET gs_keys_bak[2] = g_sfmb_d_t.sfmbseq
               CALL asft350_update_b('sfmb_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL asft350_sfmb_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_sfmb_d[g_detail_idx].sfmbseq = g_sfmb_d_t.sfmbseq 
 
                  ) THEN
                  LET gs_keys[01] = g_sfma_m.sfmadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_sfmb_d_t.sfmbseq
 
                  CALL asft350_key_update_b(gs_keys,'sfmb_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_sfma_m),util.JSON.stringify(g_sfmb_d_t)
               LET g_log2 = util.JSON.stringify(g_sfma_m),util.JSON.stringify(g_sfmb_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL asft350_unlock_b("sfmb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_sfmb_d[li_reproduce_target].* = g_sfmb_d[li_reproduce].*
 
               LET g_sfmb_d[li_reproduce_target].sfmbseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_sfmb_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_sfmb_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_sfmb2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body2.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_sfmb2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL asft350_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_sfmb2_d.getLength()
            #add-point:資料輸入前 name="input.body2.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_sfmb2_d[l_ac].* TO NULL 
            INITIALIZE g_sfmb2_d_t.* TO NULL 
            INITIALIZE g_sfmb2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_sfmb2_d[l_ac].sfmc005 = "0"
 
            #add-point:modify段before備份 name="input.body2.insert.before_bak"
            
            #end add-point
            LET g_sfmb2_d_t.* = g_sfmb2_d[l_ac].*     #新輸入資料
            LET g_sfmb2_d_o.* = g_sfmb2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL asft350_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body2.insert.after_set_entry_b"
            
            #end add-point
            CALL asft350_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_sfmb2_d[li_reproduce_target].* = g_sfmb2_d[li_reproduce].*
 
               LET g_sfmb2_d[li_reproduce_target].sfmcseq = NULL
               LET g_sfmb2_d[li_reproduce_target].sfmcseq1 = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body2.before_insert"
            #项次预设盘点资料中项次最小的 且存在差异数量的
            SELECT MIN(sfmbseq) INTO g_sfmb2_d[l_ac].sfmcseq FROM sfmb_t WHERE sfmbent=g_enterprise AND sfmbsite=g_site
               AND sfmbdocno=g_sfma_m.sfmadocno AND sfmb008 IS NOT NULL AND sfmb009 IS NOT NULL AND sfmb008 != sfmb009
            IF cl_null(g_sfmb2_d[l_ac].sfmcseq) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'asf-00253'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               EXIT DIALOG
            END IF               
            CALL asft350_sfmcseq()
            LET g_sfmb2_d[l_ac].sfmcsite = g_site 
            CALL asft350_b_sfmc_desc() 
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body2.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[2] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN asft350_cl USING g_enterprise,g_sfma_m.sfmadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN asft350_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE asft350_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_sfmb2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_sfmb2_d[l_ac].sfmcseq IS NOT NULL
               AND g_sfmb2_d[l_ac].sfmcseq1 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_sfmb2_d_t.* = g_sfmb2_d[l_ac].*  #BACKUP
               LET g_sfmb2_d_o.* = g_sfmb2_d[l_ac].*  #BACKUP
               CALL asft350_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body2.after_set_entry_b"
               
               #end add-point  
               CALL asft350_set_no_entry_b(l_cmd)
               IF NOT asft350_lock_b("sfmc_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH asft350_bcl2 INTO g_sfmb2_d[l_ac].sfmcseq,g_sfmb2_d[l_ac].sfmcseq1,g_sfmb2_d[l_ac].sfmc001, 
                      g_sfmb2_d[l_ac].sfmc002,g_sfmb2_d[l_ac].sfmc003,g_sfmb2_d[l_ac].sfmc004,g_sfmb2_d[l_ac].sfmc005, 
                      g_sfmb2_d[l_ac].sfmc006,g_sfmb2_d[l_ac].sfmc007,g_sfmb2_d[l_ac].sfmc008,g_sfmb2_d[l_ac].sfmcsite 
 
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_sfmb2_d_mask_o[l_ac].* =  g_sfmb2_d[l_ac].*
                  CALL asft350_sfmc_t_mask()
                  LET g_sfmb2_d_mask_n[l_ac].* =  g_sfmb2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL asft350_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body2.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body2.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body2.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前 name="input.body2.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_sfma_m.sfmadocno
               LET gs_keys[gs_keys.getLength()+1] = g_sfmb2_d_t.sfmcseq
               LET gs_keys[gs_keys.getLength()+1] = g_sfmb2_d_t.sfmcseq1
            
               #刪除同層單身
               IF NOT asft350_delete_b('sfmc_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE asft350_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT asft350_key_delete_b(gs_keys,'sfmc_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE asft350_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身2刪除中 name="input.body2.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE asft350_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後 name="input.body2.a_delete"
               
               #end add-point
               LET l_count = g_sfmb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body2.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_sfmb2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前 name="input.body2.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM sfmc_t 
             WHERE sfmcent = g_enterprise AND sfmcdocno = g_sfma_m.sfmadocno
               AND sfmcseq = g_sfmb2_d[l_ac].sfmcseq
               AND sfmcseq1 = g_sfmb2_d[l_ac].sfmcseq1
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前 name="input.body2.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfma_m.sfmadocno
               LET gs_keys[2] = g_sfmb2_d[g_detail_idx].sfmcseq
               LET gs_keys[3] = g_sfmb2_d[g_detail_idx].sfmcseq1
               CALL asft350_insert_b('sfmc_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2 name="input.body2.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_sfmb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "sfmc_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL asft350_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body2.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_sfmb2_d[l_ac].* = g_sfmb2_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE asft350_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_sfmb2_d[l_ac].* = g_sfmb2_d_t.*
            ELSE
               #add-point:單身page2修改前 name="input.body2.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL asft350_sfmc_t_mask_restore('restore_mask_o')
                              
               UPDATE sfmc_t SET (sfmcdocno,sfmcseq,sfmcseq1,sfmc001,sfmc002,sfmc003,sfmc004,sfmc005, 
                   sfmc006,sfmc007,sfmc008,sfmcsite) = (g_sfma_m.sfmadocno,g_sfmb2_d[l_ac].sfmcseq,g_sfmb2_d[l_ac].sfmcseq1, 
                   g_sfmb2_d[l_ac].sfmc001,g_sfmb2_d[l_ac].sfmc002,g_sfmb2_d[l_ac].sfmc003,g_sfmb2_d[l_ac].sfmc004, 
                   g_sfmb2_d[l_ac].sfmc005,g_sfmb2_d[l_ac].sfmc006,g_sfmb2_d[l_ac].sfmc007,g_sfmb2_d[l_ac].sfmc008, 
                   g_sfmb2_d[l_ac].sfmcsite) #自訂欄位頁簽
                WHERE sfmcent = g_enterprise AND sfmcdocno = g_sfma_m.sfmadocno
                  AND sfmcseq = g_sfmb2_d_t.sfmcseq #項次 
                  AND sfmcseq1 = g_sfmb2_d_t.sfmcseq1
                  
               #add-point:單身page2修改中 name="input.body2.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_sfmb2_d[l_ac].* = g_sfmb2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "sfmc_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_sfmb2_d[l_ac].* = g_sfmb2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "sfmc_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfma_m.sfmadocno
               LET gs_keys_bak[1] = g_sfmadocno_t
               LET gs_keys[2] = g_sfmb2_d[g_detail_idx].sfmcseq
               LET gs_keys_bak[2] = g_sfmb2_d_t.sfmcseq
               LET gs_keys[3] = g_sfmb2_d[g_detail_idx].sfmcseq1
               LET gs_keys_bak[3] = g_sfmb2_d_t.sfmcseq1
               CALL asft350_update_b('sfmc_t',gs_keys,gs_keys_bak,"'2'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL asft350_sfmc_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_sfmb2_d[g_detail_idx].sfmcseq = g_sfmb2_d_t.sfmcseq 
                  AND g_sfmb2_d[g_detail_idx].sfmcseq1 = g_sfmb2_d_t.sfmcseq1 
                  ) THEN
                  LET gs_keys[01] = g_sfma_m.sfmadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_sfmb2_d_t.sfmcseq
                  LET gs_keys[gs_keys.getLength()+1] = g_sfmb2_d_t.sfmcseq1
                  CALL asft350_key_update_b(gs_keys,'sfmc_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_sfma_m),util.JSON.stringify(g_sfmb2_d_t)
               LET g_log2 = util.JSON.stringify(g_sfma_m),util.JSON.stringify(g_sfmb2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後 name="input.body2.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmcseq
            #add-point:BEFORE FIELD sfmcseq name="input.b.page2.sfmcseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmcseq
            
            #add-point:AFTER FIELD sfmcseq name="input.a.page2.sfmcseq"
            #此段落由子樣板a05產生
            IF  g_sfma_m.sfmadocno IS NOT NULL AND g_sfmb2_d[g_detail_idx].sfmcseq IS NOT NULL AND g_sfmb2_d[g_detail_idx].sfmcseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfma_m.sfmadocno != g_sfmadocno_t OR g_sfmb2_d[g_detail_idx].sfmcseq != g_sfmb2_d_t.sfmcseq OR g_sfmb2_d[g_detail_idx].sfmcseq1 != g_sfmb2_d_t.sfmcseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfmc_t WHERE "||"sfmcent = '" ||g_enterprise|| "' AND "||"sfmcdocno = '"||g_sfma_m.sfmadocno ||"' AND "|| "sfmcseq = '"||g_sfmb2_d[g_detail_idx].sfmcseq ||"' AND "|| "sfmcseq1 = '"||g_sfmb2_d[g_detail_idx].sfmcseq1 ||"'",'std-00004',0) THEN 
                     LET g_sfmb2_d[g_detail_idx].sfmcseq = g_sfmb2_d_t.sfmcseq
                     CALL asft350_b_sfmc_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            IF NOT cl_null(g_sfmb2_d[l_ac].sfmcseq) AND  (cl_null(g_sfmb2_d_t.sfmcseq) OR g_sfmb2_d[l_ac].sfmcseq != g_sfmb2_d_t.sfmcseq) THEN
               SELECT COUNT(*) INTO l_n FROM sfmb_t WHERE sfmbent=g_enterprise AND sfmbsite=g_site AND sfmbdocno=g_sfma_m.sfmadocno 
                  AND sfmb008 IS NOT NULL AND sfmb009 IS NOT NULL AND sfmb008 != sfmb009 AND sfmbseq = g_sfmb2_d[l_ac].sfmcseq
               IF l_n = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'asr-00043'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_sfmb2_d[l_ac].sfmcseq = g_sfmb2_d_t.sfmcseq
                  CALL asft350_b_sfmc_desc()
                  NEXT FIELD CURRENT
               END IF
               CALL asft350_sfmcseq()  
               CALL asft350_b_sfmc_desc()               
            END IF

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmcseq
            #add-point:ON CHANGE sfmcseq name="input.g.page2.sfmcseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmcseq1
            #add-point:BEFORE FIELD sfmcseq1 name="input.b.page2.sfmcseq1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmcseq1
            
            #add-point:AFTER FIELD sfmcseq1 name="input.a.page2.sfmcseq1"
            #此段落由子樣板a05產生
            IF  g_sfma_m.sfmadocno IS NOT NULL AND g_sfmb2_d[g_detail_idx].sfmcseq IS NOT NULL AND g_sfmb2_d[g_detail_idx].sfmcseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfma_m.sfmadocno != g_sfmadocno_t OR g_sfmb2_d[g_detail_idx].sfmcseq != g_sfmb2_d_t.sfmcseq OR g_sfmb2_d[g_detail_idx].sfmcseq1 != g_sfmb2_d_t.sfmcseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfmc_t WHERE "||"sfmcent = '" ||g_enterprise|| "' AND "||"sfmcdocno = '"||g_sfma_m.sfmadocno ||"' AND "|| "sfmcseq = '"||g_sfmb2_d[g_detail_idx].sfmcseq ||"' AND "|| "sfmcseq1 = '"||g_sfmb2_d[g_detail_idx].sfmcseq1 ||"'",'std-00004',0) THEN 
                     LET g_sfmb2_d[g_detail_idx].sfmcseq1 = g_sfmb2_d_t.sfmcseq1
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmcseq1
            #add-point:ON CHANGE sfmcseq1 name="input.g.page2.sfmcseq1"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmc001
            #add-point:BEFORE FIELD sfmc001 name="input.b.page2.sfmc001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmc001
            
            #add-point:AFTER FIELD sfmc001 name="input.a.page2.sfmc001"
            IF NOT cl_null(g_sfmb2_d[l_ac].sfmc001) AND (cl_null(g_sfmb2_d_t.sfmc001) OR g_sfmb2_d[l_ac].sfmc001 != g_sfmb2_d_t.sfmc001) THEN
               #160204-00004#4 Add By Ken 160222(S)
               IF NOT cl_null(g_sfma_m.sfmadocno) THEN
                  IF NOT s_aooi210_check_doc(g_site,'',g_sfmb2_d[l_ac].sfmc001,g_sfma_m.sfmadocno,'4','') THEN
                     LET g_sfmb2_d[l_ac].sfmc001 = g_sfmb2_d_t.sfmc001
                     NEXT FIELD CURRENT
                  END IF               
               END IF
               #160204-00004#4 Add By Ken 160222(E)
               IF NOT asft350_chk_sfmc001() THEN
                  LET g_sfmb2_d[l_ac].sfmc001 = g_sfmb2_d_t.sfmc001
                  NEXT FIELD CURRENT
               END IF
               
               CALL asft350_b_sfmc_desc()
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmc001
            #add-point:ON CHANGE sfmc001 name="input.g.page2.sfmc001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmc003
            #add-point:BEFORE FIELD sfmc003 name="input.b.page2.sfmc003"
            IF cl_null(g_sfmb2_d[l_ac].sfmc001) THEN
               NEXT FIELD sfmc001
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmc003
            
            #add-point:AFTER FIELD sfmc003 name="input.a.page2.sfmc003"
            IF NOT cl_null(g_sfmb2_d[l_ac].sfmc003) AND (cl_null(g_sfmb2_d_t.sfmc003) OR g_sfmb2_d[l_ac].sfmc003 != g_sfmb2_d_t.sfmc003) THEN
               IF NOT asft350_chk_sfmc001() THEN
                  LET g_sfmb2_d[l_ac].sfmc003 = g_sfmb2_d_t.sfmc003
                  NEXT FIELD CURRENT
               END IF             
            END IF 
            CALL asft350_b_sfmc_desc()
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmc003
            #add-point:ON CHANGE sfmc003 name="input.g.page2.sfmc003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmc004
            #add-point:BEFORE FIELD sfmc004 name="input.b.page2.sfmc004"
            IF cl_null(g_sfmb2_d[l_ac].sfmc001) THEN
               NEXT FIELD sfmc001
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmc004
            
            #add-point:AFTER FIELD sfmc004 name="input.a.page2.sfmc004"
            IF NOT cl_null(g_sfmb2_d[l_ac].sfmc004) AND (cl_null(g_sfmb2_d_t.sfmc004) OR g_sfmb2_d[l_ac].sfmc004 != g_sfmb2_d_t.sfmc004) THEN
               IF NOT asft350_chk_sfmc001() THEN
                  LET g_sfmb2_d[l_ac].sfmc004 = g_sfmb2_d_t.sfmc004
                  NEXT FIELD CURRENT
               END IF             
            END IF
            CALL asft350_b_sfmc_desc()
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmc004
            #add-point:ON CHANGE sfmc004 name="input.g.page2.sfmc004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_sfba003
            
            #add-point:AFTER FIELD l_sfba003 name="input.a.page2.l_sfba003"
 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_sfba003
            #add-point:BEFORE FIELD l_sfba003 name="input.b.page2.l_sfba003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_sfba003
            #add-point:ON CHANGE l_sfba003 name="input.g.page2.l_sfba003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_sfba004
            #add-point:BEFORE FIELD l_sfba004 name="input.b.page2.l_sfba004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_sfba004
            
            #add-point:AFTER FIELD l_sfba004 name="input.a.page2.l_sfba004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_sfba004
            #add-point:ON CHANGE l_sfba004 name="input.g.page2.l_sfba004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmc005
            #add-point:BEFORE FIELD sfmc005 name="input.b.page2.sfmc005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmc005
            
            #add-point:AFTER FIELD sfmc005 name="input.a.page2.sfmc005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmc005
            #add-point:ON CHANGE sfmc005 name="input.g.page2.sfmc005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmc006
            #add-point:BEFORE FIELD sfmc006 name="input.b.page2.sfmc006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmc006
            
            #add-point:AFTER FIELD sfmc006 name="input.a.page2.sfmc006"
            IF NOT cl_null(g_sfmb2_d[l_ac].sfmc006) AND (cl_null(g_sfmb2_d_t.sfmc006) OR g_sfmb2_d[l_ac].sfmc006 != g_sfmb2_d_t.sfmc006) THEN
               IF NOT asft350_chk_sfmc006() THEN
                  LET g_sfmb2_d[l_ac].sfmc006 = g_sfmb2_d_t.sfmc006
                  NEXT FIELD CURRENT
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmc006
            #add-point:ON CHANGE sfmc006 name="input.g.page2.sfmc006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmc007
            #add-point:BEFORE FIELD sfmc007 name="input.b.page2.sfmc007"
            CALL cl_set_comp_entry("sfmc007",TRUE)
            SELECT sfmb012 INTO l_sfmb012 FROM sfmb_t WHERE sfmbent=g_enterprise AND sfmbsite=g_site
               AND sfmbdocno=g_sfma_m.sfmadocno AND sfmbseq=g_sfmb2_d[l_ac].sfmcseq 
            IF cl_null(l_sfmb012) THEN
               CALL cl_set_comp_entry("sfmc007",FALSE)
            END IF 
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmc007
            
            #add-point:AFTER FIELD sfmc007 name="input.a.page2.sfmc007"
            IF NOT cl_null(g_sfmb2_d[l_ac].sfmc007) AND (cl_null(g_sfmb2_d_t.sfmc007) OR g_sfmb2_d[l_ac].sfmc007 != g_sfmb2_d_t.sfmc007) THEN
               IF NOT asft350_chk_sfmc007() THEN
                  LET g_sfmb2_d[l_ac].sfmc007 = g_sfmb2_d_t.sfmc007
                  NEXT FIELD CURRENT
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmc007
            #add-point:ON CHANGE sfmc007 name="input.g.page2.sfmc007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sfmc008
            #add-point:BEFORE FIELD sfmc008 name="input.b.page2.sfmc008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sfmc008
            
            #add-point:AFTER FIELD sfmc008 name="input.a.page2.sfmc008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sfmc008
            #add-point:ON CHANGE sfmc008 name="input.g.page2.sfmc008"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page2.sfmcseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmcseq
            #add-point:ON ACTION controlp INFIELD sfmcseq name="input.c.page2.sfmcseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.sfmcseq1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmcseq1
            #add-point:ON ACTION controlp INFIELD sfmcseq1 name="input.c.page2.sfmcseq1"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.sfmc001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmc001
            #add-point:ON ACTION controlp INFIELD sfmc001 name="input.c.page2.sfmc001"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfmb2_d[l_ac].sfmc001             #給予default值

            #給予arg
            LET g_qryparam.where = " sfaastus IN('N','Y','F')"
            #160204-00004#4 Add By Ken 160222(S)
            #組合過濾前後置單據資料SQL
            IF NOT cl_null(g_sfma_m.sfmadocno) THEN
               CALL s_aooi210_get_check_sql(g_site,'',g_sfma_m.sfmadocno,'4','','sfbadocno') RETURNING l_success,l_where
               IF l_success THEN
                  LET g_qryparam.where = g_qryparam.where," AND ",l_where
                  CALL q_sfbadocno()
               END IF
            END IF
            #160204-00004#4 Add By Ken 160222(E)            
            #CALL q_sfbadocno()        #160204-00004#4 Mark By Ken 160222                      #呼叫開窗
            LET g_sfmb2_d[l_ac].sfmc001 = g_qryparam.return1
            LET g_sfmb2_d[l_ac].sfmc003 = g_qryparam.return2  
            LET g_sfmb2_d[l_ac].sfmc004 = g_qryparam.return3
            DISPLAY g_sfmb2_d[l_ac].sfmc001 TO sfmc001            
            DISPLAY g_sfmb2_d[l_ac].sfmc003 TO sfmc003              #
            DISPLAY g_sfmb2_d[l_ac].sfmc004 TO sfmc004           
            CALL asft350_b_sfmc_desc()
            NEXT FIELD sfmc001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page2.sfmc003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmc003
            #add-point:ON ACTION controlp INFIELD sfmc003 name="input.c.page2.sfmc003"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfmb2_d[l_ac].sfmc003             #給予default值
            #給予arg      
            LET g_qryparam.where = " sfaastus IN('N','Y','F')"
            CALL q_sfbadocno()                              #呼叫開窗
            LET g_sfmb2_d[l_ac].sfmc001 = g_qryparam.return1
            LET g_sfmb2_d[l_ac].sfmc003 = g_qryparam.return2  
            LET g_sfmb2_d[l_ac].sfmc004 = g_qryparam.return3
            DISPLAY g_sfmb2_d[l_ac].sfmc001 TO sfmc001            
            DISPLAY g_sfmb2_d[l_ac].sfmc003 TO sfmc003              #
            DISPLAY g_sfmb2_d[l_ac].sfmc004 TO sfmc004 
            CALL asft350_b_sfmc_desc()
            NEXT FIELD sfmc003                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page2.sfmc004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmc004
            #add-point:ON ACTION controlp INFIELD sfmc004 name="input.c.page2.sfmc004"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfmb2_d[l_ac].sfmc004            #給予default值
            LET g_qryparam.where = " sfaastus IN('N','Y','F')"
            CALL q_sfbadocno()                              #呼叫開窗
            LET g_sfmb2_d[l_ac].sfmc001 = g_qryparam.return1
            LET g_sfmb2_d[l_ac].sfmc003 = g_qryparam.return2  
            LET g_sfmb2_d[l_ac].sfmc004 = g_qryparam.return3
            DISPLAY g_sfmb2_d[l_ac].sfmc001 TO sfmc001            
            DISPLAY g_sfmb2_d[l_ac].sfmc003 TO sfmc003              #
            DISPLAY g_sfmb2_d[l_ac].sfmc004 TO sfmc004 
            CALL asft350_b_sfmc_desc()
            NEXT FIELD sfmc004
            #END add-point
 
 
         #Ctrlp:input.c.page2.l_sfba003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_sfba003
            #add-point:ON ACTION controlp INFIELD l_sfba003 name="input.c.page2.l_sfba003"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfmb2_d[l_ac].l_sfba003             #給予default值
            LET g_qryparam.default2 = "" #g_sfmb2_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_sfmb2_d[l_ac].l_sfba003 = g_qryparam.return1              
            #LET g_sfmb2_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_sfmb2_d[l_ac].l_sfba003 TO l_sfba003              #
            #DISPLAY g_sfmb2_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD l_sfba003                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page2.l_sfba004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_sfba004
            #add-point:ON ACTION controlp INFIELD l_sfba004 name="input.c.page2.l_sfba004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.sfmc005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmc005
            #add-point:ON ACTION controlp INFIELD sfmc005 name="input.c.page2.sfmc005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.sfmc006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmc006
            #add-point:ON ACTION controlp INFIELD sfmc006 name="input.c.page2.sfmc006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.sfmc007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmc007
            #add-point:ON ACTION controlp INFIELD sfmc007 name="input.c.page2.sfmc007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.sfmc008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sfmc008
            #add-point:ON ACTION controlp INFIELD sfmc008 name="input.c.page2.sfmc008"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row name="input.body2.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_sfmb2_d[l_ac].* = g_sfmb2_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE asft350_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL asft350_unlock_b("sfmc_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2 name="input.body2.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body2.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_sfmb2_d[li_reproduce_target].* = g_sfmb2_d[li_reproduce].*
 
               LET g_sfmb2_d[li_reproduce_target].sfmcseq = NULL
               LET g_sfmb2_d[li_reproduce_target].sfmcseq1 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_sfmb2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_sfmb2_d.getLength()+1
            END IF
            
      END INPUT
 
      
 
 
 
 
{</section>}
 
{<section id="asft350.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         LET g_flag1 = 'Y'
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'2',"))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD sfmadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD sfmbseq
               WHEN "s_detail2"
                  NEXT FIELD sfmcseq
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="asft350.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION asft350_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE l_success   LIKE type_t.num5                 
   DEFINE l_slip      STRING
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL asft350_b_fill() #單身填充
      CALL asft350_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL asft350_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
            IF NOT cl_null(g_sfma_m.sfmadocno) THEN
               CALL s_aooi200_get_slip(g_sfma_m.sfmadocno) RETURNING l_success,l_slip
               CALL s_aooi200_get_slip_desc(l_slip) RETURNING g_sfma_m.oobxl003
               DISPLAY BY NAME g_sfma_m.oobxl003
            END IF
   #        LET g_sfma_m.sfma004_desc = s_desc_get_stock_desc(g_site,g_sfma_m.sfma004)
   #        DISPLAY BY NAME g_sfma_m.sfma004_desc
   #        LET g_sfma_m.sfma005_desc = s_desc_get_locator_desc(g_site,g_sfma_m.sfma004,g_sfma_m.sfma005)
   #        DISPLAY BY NAME g_sfma_m.sfma005_desc
   #              
   #        INITIALIZE g_ref_fields TO NULL
   #        LET g_ref_fields[1] = g_sfma_m.sfmaownid
   #        CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   #        LET g_sfma_m.sfmaownid_desc = '', g_rtn_fields[1] , ''
   #        DISPLAY BY NAME g_sfma_m.sfmaownid_desc
   #
   #        INITIALIZE g_ref_fields TO NULL
   #        LET g_ref_fields[1] = g_sfma_m.sfmaowndp
   #        CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   #        LET g_sfma_m.sfmaowndp_desc = '', g_rtn_fields[1] , ''
   #        DISPLAY BY NAME g_sfma_m.sfmaowndp_desc
   #
   #        INITIALIZE g_ref_fields TO NULL
   #        LET g_ref_fields[1] = g_sfma_m.sfmacrtid
   #        CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   #        LET g_sfma_m.sfmacrtid_desc = '', g_rtn_fields[1] , ''
   #        DISPLAY BY NAME g_sfma_m.sfmacrtid_desc
   #
   #        INITIALIZE g_ref_fields TO NULL
   #        LET g_ref_fields[1] = g_sfma_m.sfmacrtdp
   #        CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   #        LET g_sfma_m.sfmacrtdp_desc = '', g_rtn_fields[1] , ''
   #        DISPLAY BY NAME g_sfma_m.sfmacrtdp_desc
   #
   #        INITIALIZE g_ref_fields TO NULL
   #        LET g_ref_fields[1] = g_sfma_m.sfmamodid
   #        CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   #        LET g_sfma_m.sfmamodid_desc = '', g_rtn_fields[1] , ''
   #        DISPLAY BY NAME g_sfma_m.sfmamodid_desc
   #
   #        INITIALIZE g_ref_fields TO NULL
   #        LET g_ref_fields[1] = g_sfma_m.sfmacnfid
   #        CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   #        LET g_sfma_m.sfmacnfid_desc = '', g_rtn_fields[1] , ''
   #        DISPLAY BY NAME g_sfma_m.sfmacnfid_desc

           #INITIALIZE g_ref_fields TO NULL
           #LET g_ref_fields[1] = g_sfma_m.sfmapstid
           #CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
           #LET g_sfma_m.sfmapstid_desc = '', g_rtn_fields[1] , ''
           #DISPLAY BY NAME g_sfma_m.sfmapstid_desc

   #end add-point
   
   #遮罩相關處理
   LET g_sfma_m_mask_o.* =  g_sfma_m.*
   CALL asft350_sfma_t_mask()
   LET g_sfma_m_mask_n.* =  g_sfma_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_sfma_m.sfmasite,g_sfma_m.sfmadocno,g_sfma_m.oobxl003,g_sfma_m.sfmadocdt,g_sfma_m.sfma001, 
       g_sfma_m.sfma002,g_sfma_m.sfma003,g_sfma_m.sfma004,g_sfma_m.sfma004_desc,g_sfma_m.sfma005,g_sfma_m.sfma005_desc, 
       g_sfma_m.sfmastus,g_sfma_m.sfmaownid,g_sfma_m.sfmaownid_desc,g_sfma_m.sfmaowndp,g_sfma_m.sfmaowndp_desc, 
       g_sfma_m.sfmacrtid,g_sfma_m.sfmacrtid_desc,g_sfma_m.sfmacrtdp,g_sfma_m.sfmacrtdp_desc,g_sfma_m.sfmacrtdt, 
       g_sfma_m.sfmamodid,g_sfma_m.sfmamodid_desc,g_sfma_m.sfmamoddt,g_sfma_m.sfmacnfid,g_sfma_m.sfmacnfid_desc, 
       g_sfma_m.sfmacnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_sfma_m.sfmastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_sfmb_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      CALL s_feature_description(g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb002) RETURNING l_success,g_sfmb_d[l_ac].sfmb002_desc  #150720-00018#1
      IF cl_null(g_sfmb_d[l_ac].sfmb009) THEN
         LET g_sfmb_d[l_ac].l_num = ''
         LET g_sfmb_d[l_ac].l_num1 = ''
      ELSE
         LET g_sfmb_d[l_ac].l_num = g_sfmb_d[l_ac].sfmb008 - g_sfmb_d[l_ac].sfmb009
         SELECT SUM(sfmc006) INTO g_sfmb_d[l_ac].l_num1 FROM sfmc_t WHERE sfmcent=g_enterprise AND sfmcsite=g_site 
            AND sfmcdocno=g_sfma_m.sfmadocno AND sfmcseq=g_sfmb_d[l_ac].sfmbseq
         IF cl_null(g_sfmb_d[l_ac].l_num1) THEN
            LET g_sfmb_d[l_ac].l_num1 = 0
         END IF
      END IF
      IF cl_null(g_sfmb_d[l_ac].sfmb012) THEN
         LET g_sfmb_d[l_ac].l_num2 = ''
         LET g_sfmb_d[l_ac].l_num3 = ''
      ELSE
         LET g_sfmb_d[l_ac].l_num2 = g_sfmb_d[l_ac].sfmb011 - g_sfmb_d[l_ac].sfmb012
         SELECT SUM(sfmc007) INTO g_sfmb_d[l_ac].l_num3 FROM sfmc_t WHERE sfmcent=g_enterprise AND sfmcsite=g_site 
            AND sfmcdocno=g_sfma_m.sfmadocno AND sfmcseq=g_sfmb_d[l_ac].sfmbseq
         IF cl_null(g_sfmb_d[l_ac].l_num3) THEN
            LET g_sfmb_d[l_ac].l_num3 = 0
         END IF
      END IF
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_sfmb_d[l_ac].sfmb001
      CALL ap_ref_array2(g_ref_fields,"SELECT imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_sfmb_d[l_ac].sfmb001_desc_1 = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_sfmb_d[l_ac].sfmb001_desc_1   
    #  CALL asft350_b_desc()
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_sfmb2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      CALL asft350_b_sfmc_desc()
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL asft350_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="asft350.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION asft350_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="asft350.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION asft350_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE sfma_t.sfmadocno 
   DEFINE l_oldno     LIKE sfma_t.sfmadocno 
 
   DEFINE l_master    RECORD LIKE sfma_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE sfmb_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE sfmc_t.* #此變數樣板目前無使用
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_sfma_m.sfmadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_sfmadocno_t = g_sfma_m.sfmadocno
 
    
   LET g_sfma_m.sfmadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_sfma_m.sfmaownid = g_user
      LET g_sfma_m.sfmaowndp = g_dept
      LET g_sfma_m.sfmacrtid = g_user
      LET g_sfma_m.sfmacrtdp = g_dept 
      LET g_sfma_m.sfmacrtdt = cl_get_current()
      LET g_sfma_m.sfmamodid = g_user
      LET g_sfma_m.sfmamoddt = cl_get_current()
      LET g_sfma_m.sfmastus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   LET g_sfma_m.sfmacnfid=''
   LET g_sfma_m.sfmacnfdt=''
   LET g_sfma_m.sfmasite = g_site   
   CALL g_sfmb2_d.clear()
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_sfma_m.sfmastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL asft350_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_sfma_m.* TO NULL
      INITIALIZE g_sfmb_d TO NULL
      INITIALIZE g_sfmb2_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL asft350_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL asft350_set_act_visible()   
   CALL asft350_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_sfmadocno_t = g_sfma_m.sfmadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " sfmaent = " ||g_enterprise|| " AND",
                      " sfmadocno = '", g_sfma_m.sfmadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL asft350_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL asft350_idx_chk()
   
   LET g_data_owner = g_sfma_m.sfmaownid      
   LET g_data_dept  = g_sfma_m.sfmaowndp
   
   #功能已完成,通報訊息中心
   CALL asft350_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="asft350.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION asft350_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE sfmb_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE sfmc_t.* #此變數樣板目前無使用
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   DEFINE l_n        LIKE type_t.num5
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE asft350_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   #复制时应重新根据单头资料产生盘点资料，且分摊明细页签资料清空
   SELECT COUNT(*) INTO l_n FROM sfmb_t WHERE sfmbent = g_enterprise AND sfmbdocno = g_sfma_m.sfmadocno
   IF l_n > 0 THEN
      RETURN
   END IF   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM sfmb_t
    WHERE sfmbent = g_enterprise AND sfmbdocno = g_sfmadocno_t
 
    INTO TEMP asft350_detail
 
   #將key修正為調整後   
   UPDATE asft350_detail 
      #更新key欄位
      SET sfmbdocno = g_sfma_m.sfmadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO sfmb_t SELECT * FROM asft350_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   #根据最新的sfmb单身资料抓取最新的数量，并清空盘点数量
   CALL asft350_reproduce_upd() 
   RETURN        #复制时分摊明细页签资料清空
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE asft350_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM sfmc_t 
    WHERE sfmcent = g_enterprise AND sfmcdocno = g_sfmadocno_t
 
    INTO TEMP asft350_detail
 
   #將key修正為調整後   
   UPDATE asft350_detail SET sfmcdocno = g_sfma_m.sfmadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO sfmc_t SELECT * FROM asft350_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE asft350_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_sfmadocno_t = g_sfma_m.sfmadocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="asft350.delete" >}
#+ 資料刪除
PRIVATE FUNCTION asft350_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_sfma_m.sfmadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN asft350_cl USING g_enterprise,g_sfma_m.sfmadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN asft350_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE asft350_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE asft350_master_referesh USING g_sfma_m.sfmadocno INTO g_sfma_m.sfmasite,g_sfma_m.sfmadocno, 
       g_sfma_m.sfmadocdt,g_sfma_m.sfma001,g_sfma_m.sfma002,g_sfma_m.sfma003,g_sfma_m.sfma004,g_sfma_m.sfma005, 
       g_sfma_m.sfmastus,g_sfma_m.sfmaownid,g_sfma_m.sfmaowndp,g_sfma_m.sfmacrtid,g_sfma_m.sfmacrtdp, 
       g_sfma_m.sfmacrtdt,g_sfma_m.sfmamodid,g_sfma_m.sfmamoddt,g_sfma_m.sfmacnfid,g_sfma_m.sfmacnfdt, 
       g_sfma_m.sfma004_desc,g_sfma_m.sfma005_desc,g_sfma_m.sfmaownid_desc,g_sfma_m.sfmaowndp_desc,g_sfma_m.sfmacrtid_desc, 
       g_sfma_m.sfmacrtdp_desc,g_sfma_m.sfmamodid_desc,g_sfma_m.sfmacnfid_desc
   
   
   #檢查是否允許此動作
   IF NOT asft350_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_sfma_m_mask_o.* =  g_sfma_m.*
   CALL asft350_sfma_t_mask()
   LET g_sfma_m_mask_n.* =  g_sfma_m.*
   
   CALL asft350_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   IF g_sfma_m.sfmastus <> 'N' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'apm-00034'
      LET g_errparam.extend = g_sfma_m.sfmastus
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE asft350_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL asft350_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_sfmadocno_t = g_sfma_m.sfmadocno
 
 
      DELETE FROM sfma_t
       WHERE sfmaent = g_enterprise AND sfmadocno = g_sfma_m.sfmadocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_sfma_m.sfmadocno,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      IF NOT s_aooi200_del_docno(g_sfma_m.sfmadocno,g_sfma_m.sfmadocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM sfmb_t
       WHERE sfmbent = g_enterprise AND sfmbdocno = g_sfma_m.sfmadocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "sfmb_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
      
      #end add-point
      DELETE FROM sfmc_t
       WHERE sfmcent = g_enterprise AND
             sfmcdocno = g_sfma_m.sfmadocno
      #add-point:單身刪除中 name="delete.body.m_delete2"
      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "sfmc_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE asft350_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_sfmb_d.clear() 
      CALL g_sfmb2_d.clear()       
 
     
      CALL asft350_ui_browser_refresh()  
      #CALL asft350_ui_headershow()  
      #CALL asft350_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL asft350_browser_fill("")
         CALL asft350_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE asft350_cl
 
   #功能已完成,通報訊息中心
   CALL asft350_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="asft350.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION asft350_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   DEFINE l_success   LIKE type_t.num5
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_sfmb_d.clear()
   CALL g_sfmb2_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF asft350_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT sfmbseq,sfmb001,sfmb002,sfmb005,sfmb006,sfmb007,sfmb008,sfmb009, 
             sfmb010,sfmb011,sfmb012,sfmbsite,sfmb003,sfmb004 ,t1.imaal003 ,t2.imecl005 ,t3.oocal003 , 
             t4.oocal003 FROM sfmb_t",   
                     " INNER JOIN sfma_t ON sfmaent = " ||g_enterprise|| " AND sfmadocno = sfmbdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent="||g_enterprise||" AND t1.imaal001=sfmb001 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imecl_t t2 ON t2.imeclent="||g_enterprise||" AND t2.imecl003=sfmb002 AND t2.imecl004='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t3 ON t3.oocalent="||g_enterprise||" AND t3.oocal001=sfmb007 AND t3.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t4 ON t4.oocalent="||g_enterprise||" AND t4.oocal001=sfmb010 AND t4.oocal002='"||g_dlang||"' ",
 
                     " WHERE sfmbent=? AND sfmbdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY sfmb_t.sfmbseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE asft350_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR asft350_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_sfma_m.sfmadocno
                                               
      FOREACH b_fill_cs INTO g_sfmb_d[l_ac].sfmbseq,g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb002,g_sfmb_d[l_ac].sfmb005, 
          g_sfmb_d[l_ac].sfmb006,g_sfmb_d[l_ac].sfmb007,g_sfmb_d[l_ac].sfmb008,g_sfmb_d[l_ac].sfmb009, 
          g_sfmb_d[l_ac].sfmb010,g_sfmb_d[l_ac].sfmb011,g_sfmb_d[l_ac].sfmb012,g_sfmb_d[l_ac].sfmbsite, 
          g_sfmb_d[l_ac].sfmb003,g_sfmb_d[l_ac].sfmb004,g_sfmb_d[l_ac].sfmb001_desc,g_sfmb_d[l_ac].sfmb002_desc, 
          g_sfmb_d[l_ac].sfmb007_desc,g_sfmb_d[l_ac].sfmb010_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         CALL s_feature_description(g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb002) RETURNING l_success,g_sfmb_d[l_ac].sfmb002_desc  #150720-00018#1

         IF cl_null(g_sfmb_d[l_ac].sfmb009) THEN
            LET g_sfmb_d[l_ac].l_num = ''
            LET g_sfmb_d[l_ac].l_num1 = ''
         ELSE
            LET g_sfmb_d[l_ac].l_num = g_sfmb_d[l_ac].sfmb008 - g_sfmb_d[l_ac].sfmb009
            SELECT SUM(sfmc006) INTO g_sfmb_d[l_ac].l_num1 FROM sfmc_t WHERE sfmcent=g_enterprise AND sfmcsite=g_site 
               AND sfmcdocno=g_sfma_m.sfmadocno AND sfmcseq=g_sfmb_d[l_ac].sfmbseq
            IF cl_null(g_sfmb_d[l_ac].l_num1) THEN
               LET g_sfmb_d[l_ac].l_num1 = 0
            END IF
         END IF
         IF cl_null(g_sfmb_d[l_ac].sfmb012) THEN
            LET g_sfmb_d[l_ac].l_num2 = ''
            LET g_sfmb_d[l_ac].l_num3 = ''
         ELSE
            LET g_sfmb_d[l_ac].l_num2 = g_sfmb_d[l_ac].sfmb011 - g_sfmb_d[l_ac].sfmb012
            SELECT SUM(sfmc007) INTO g_sfmb_d[l_ac].l_num3 FROM sfmc_t WHERE sfmcent=g_enterprise AND sfmcsite=g_site 
               AND sfmcdocno=g_sfma_m.sfmadocno AND sfmcseq=g_sfmb_d[l_ac].sfmbseq
            IF cl_null(g_sfmb_d[l_ac].l_num3) THEN
               LET g_sfmb_d[l_ac].l_num3 = 0
            END IF
         END IF
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_sfmb_d[l_ac].sfmb001
         CALL ap_ref_array2(g_ref_fields,"SELECT imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_sfmb_d[l_ac].sfmb001_desc_1 = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_sfmb_d[l_ac].sfmb001_desc_1 
     #   CALL asft350_b_desc()
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF asft350_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT sfmcseq,sfmcseq1,sfmc001,sfmc002,sfmc003,sfmc004,sfmc005,sfmc006, 
             sfmc007,sfmc008,sfmcsite ,t7.imaal003 FROM sfmc_t",   
                     " INNER JOIN  sfma_t ON sfmaent = " ||g_enterprise|| " AND sfmadocno = sfmcdocno ",
 
                     "",
                     
                                    " LEFT JOIN imaal_t t7 ON t7.imaalent="||g_enterprise||" AND t7.imaal001=sfmc002 AND t7.imaal002='"||g_dlang||"' ",
 
                     " WHERE sfmcent=? AND sfmcdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY sfmc_t.sfmcseq,sfmc_t.sfmcseq1"
         
         #add-point:單身填充控制 name="b_fill.sql2"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE asft350_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR asft350_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_sfma_m.sfmadocno
                                               
      FOREACH b_fill_cs2 INTO g_sfmb2_d[l_ac].sfmcseq,g_sfmb2_d[l_ac].sfmcseq1,g_sfmb2_d[l_ac].sfmc001, 
          g_sfmb2_d[l_ac].sfmc002,g_sfmb2_d[l_ac].sfmc003,g_sfmb2_d[l_ac].sfmc004,g_sfmb2_d[l_ac].sfmc005, 
          g_sfmb2_d[l_ac].sfmc006,g_sfmb2_d[l_ac].sfmc007,g_sfmb2_d[l_ac].sfmc008,g_sfmb2_d[l_ac].sfmcsite, 
          g_sfmb2_d[l_ac].sfmc002_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
         CALL asft350_b_sfmc_desc()
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_sfmb_d.deleteElement(g_sfmb_d.getLength())
   CALL g_sfmb2_d.deleteElement(g_sfmb2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE asft350_pb
   FREE asft350_pb2
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_sfmb_d.getLength()
      LET g_sfmb_d_mask_o[l_ac].* =  g_sfmb_d[l_ac].*
      CALL asft350_sfmb_t_mask()
      LET g_sfmb_d_mask_n[l_ac].* =  g_sfmb_d[l_ac].*
   END FOR
   
   LET g_sfmb2_d_mask_o.* =  g_sfmb2_d.*
   FOR l_ac = 1 TO g_sfmb2_d.getLength()
      LET g_sfmb2_d_mask_o[l_ac].* =  g_sfmb2_d[l_ac].*
      CALL asft350_sfmc_t_mask()
      LET g_sfmb2_d_mask_n[l_ac].* =  g_sfmb2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="asft350.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION asft350_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM sfmb_t
       WHERE sfmbent = g_enterprise AND
         sfmbdocno = ps_keys_bak[1] AND sfmbseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_sfmb_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      
      #end add-point    
      DELETE FROM sfmc_t
       WHERE sfmcent = g_enterprise AND
             sfmcdocno = ps_keys_bak[1] AND sfmcseq = ps_keys_bak[2] AND sfmcseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "sfmc_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_sfmb2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="asft350.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION asft350_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO sfmb_t
                  (sfmbent,
                   sfmbdocno,
                   sfmbseq
                   ,sfmb001,sfmb002,sfmb005,sfmb006,sfmb007,sfmb008,sfmb009,sfmb010,sfmb011,sfmb012,sfmbsite,sfmb003,sfmb004) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_sfmb_d[g_detail_idx].sfmb001,g_sfmb_d[g_detail_idx].sfmb002,g_sfmb_d[g_detail_idx].sfmb005, 
                       g_sfmb_d[g_detail_idx].sfmb006,g_sfmb_d[g_detail_idx].sfmb007,g_sfmb_d[g_detail_idx].sfmb008, 
                       g_sfmb_d[g_detail_idx].sfmb009,g_sfmb_d[g_detail_idx].sfmb010,g_sfmb_d[g_detail_idx].sfmb011, 
                       g_sfmb_d[g_detail_idx].sfmb012,g_sfmb_d[g_detail_idx].sfmbsite,g_sfmb_d[g_detail_idx].sfmb003, 
                       g_sfmb_d[g_detail_idx].sfmb004)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "sfmb_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_sfmb_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      
      #end add-point 
      INSERT INTO sfmc_t
                  (sfmcent,
                   sfmcdocno,
                   sfmcseq,sfmcseq1
                   ,sfmc001,sfmc002,sfmc003,sfmc004,sfmc005,sfmc006,sfmc007,sfmc008,sfmcsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_sfmb2_d[g_detail_idx].sfmc001,g_sfmb2_d[g_detail_idx].sfmc002,g_sfmb2_d[g_detail_idx].sfmc003, 
                       g_sfmb2_d[g_detail_idx].sfmc004,g_sfmb2_d[g_detail_idx].sfmc005,g_sfmb2_d[g_detail_idx].sfmc006, 
                       g_sfmb2_d[g_detail_idx].sfmc007,g_sfmb2_d[g_detail_idx].sfmc008,g_sfmb2_d[g_detail_idx].sfmcsite) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "sfmc_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_sfmb2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="asft350.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION asft350_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "sfmb_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL asft350_sfmb_t_mask_restore('restore_mask_o')
               
      UPDATE sfmb_t 
         SET (sfmbdocno,
              sfmbseq
              ,sfmb001,sfmb002,sfmb005,sfmb006,sfmb007,sfmb008,sfmb009,sfmb010,sfmb011,sfmb012,sfmbsite,sfmb003,sfmb004) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_sfmb_d[g_detail_idx].sfmb001,g_sfmb_d[g_detail_idx].sfmb002,g_sfmb_d[g_detail_idx].sfmb005, 
                  g_sfmb_d[g_detail_idx].sfmb006,g_sfmb_d[g_detail_idx].sfmb007,g_sfmb_d[g_detail_idx].sfmb008, 
                  g_sfmb_d[g_detail_idx].sfmb009,g_sfmb_d[g_detail_idx].sfmb010,g_sfmb_d[g_detail_idx].sfmb011, 
                  g_sfmb_d[g_detail_idx].sfmb012,g_sfmb_d[g_detail_idx].sfmbsite,g_sfmb_d[g_detail_idx].sfmb003, 
                  g_sfmb_d[g_detail_idx].sfmb004) 
         WHERE sfmbent = g_enterprise AND sfmbdocno = ps_keys_bak[1] AND sfmbseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "sfmb_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "sfmb_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL asft350_sfmb_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "sfmc_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL asft350_sfmc_t_mask_restore('restore_mask_o')
               
      UPDATE sfmc_t 
         SET (sfmcdocno,
              sfmcseq,sfmcseq1
              ,sfmc001,sfmc002,sfmc003,sfmc004,sfmc005,sfmc006,sfmc007,sfmc008,sfmcsite) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_sfmb2_d[g_detail_idx].sfmc001,g_sfmb2_d[g_detail_idx].sfmc002,g_sfmb2_d[g_detail_idx].sfmc003, 
                  g_sfmb2_d[g_detail_idx].sfmc004,g_sfmb2_d[g_detail_idx].sfmc005,g_sfmb2_d[g_detail_idx].sfmc006, 
                  g_sfmb2_d[g_detail_idx].sfmc007,g_sfmb2_d[g_detail_idx].sfmc008,g_sfmb2_d[g_detail_idx].sfmcsite)  
 
         WHERE sfmcent = g_enterprise AND sfmcdocno = ps_keys_bak[1] AND sfmcseq = ps_keys_bak[2] AND sfmcseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update2"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "sfmc_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "sfmc_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL asft350_sfmc_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="asft350.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION asft350_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="asft350.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION asft350_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="asft350.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION asft350_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL asft350_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "sfmb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN asft350_bcl USING g_enterprise,
                                       g_sfma_m.sfmadocno,g_sfmb_d[g_detail_idx].sfmbseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "asft350_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "sfmc_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN asft350_bcl2 USING g_enterprise,
                                             g_sfma_m.sfmadocno,g_sfmb2_d[g_detail_idx].sfmcseq,g_sfmb2_d[g_detail_idx].sfmcseq1 
 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "asft350_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="asft350.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION asft350_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE asft350_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE asft350_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="asft350.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION asft350_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("sfmadocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("sfmadocno",TRUE)
      CALL cl_set_comp_entry("sfmadocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="asft350.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION asft350_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("sfmadocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("sfmadocno",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("sfmadocdt",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="asft350.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION asft350_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="asft350.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION asft350_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="asft350.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION asft350_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   CALL cl_set_act_visible("modify,delete,modify_detail", TRUE)
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="asft350.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION asft350_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:1)
   IF g_sfma_m.sfmastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF


   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="asft350.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION asft350_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="asft350.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION asft350_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="asft350.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION asft350_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " sfmadocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "sfma_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "sfmb_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "sfmc_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="asft350.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION asft350_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_sfma_m.sfmadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN asft350_cl USING g_enterprise,g_sfma_m.sfmadocno
   IF STATUS THEN
      CLOSE asft350_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN asft350_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE asft350_master_referesh USING g_sfma_m.sfmadocno INTO g_sfma_m.sfmasite,g_sfma_m.sfmadocno, 
       g_sfma_m.sfmadocdt,g_sfma_m.sfma001,g_sfma_m.sfma002,g_sfma_m.sfma003,g_sfma_m.sfma004,g_sfma_m.sfma005, 
       g_sfma_m.sfmastus,g_sfma_m.sfmaownid,g_sfma_m.sfmaowndp,g_sfma_m.sfmacrtid,g_sfma_m.sfmacrtdp, 
       g_sfma_m.sfmacrtdt,g_sfma_m.sfmamodid,g_sfma_m.sfmamoddt,g_sfma_m.sfmacnfid,g_sfma_m.sfmacnfdt, 
       g_sfma_m.sfma004_desc,g_sfma_m.sfma005_desc,g_sfma_m.sfmaownid_desc,g_sfma_m.sfmaowndp_desc,g_sfma_m.sfmacrtid_desc, 
       g_sfma_m.sfmacrtdp_desc,g_sfma_m.sfmamodid_desc,g_sfma_m.sfmacnfid_desc
   
 
   #檢查是否允許此動作
   IF NOT asft350_action_chk() THEN
      CLOSE asft350_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_sfma_m.sfmasite,g_sfma_m.sfmadocno,g_sfma_m.oobxl003,g_sfma_m.sfmadocdt,g_sfma_m.sfma001, 
       g_sfma_m.sfma002,g_sfma_m.sfma003,g_sfma_m.sfma004,g_sfma_m.sfma004_desc,g_sfma_m.sfma005,g_sfma_m.sfma005_desc, 
       g_sfma_m.sfmastus,g_sfma_m.sfmaownid,g_sfma_m.sfmaownid_desc,g_sfma_m.sfmaowndp,g_sfma_m.sfmaowndp_desc, 
       g_sfma_m.sfmacrtid,g_sfma_m.sfmacrtid_desc,g_sfma_m.sfmacrtdp,g_sfma_m.sfmacrtdp_desc,g_sfma_m.sfmacrtdt, 
       g_sfma_m.sfmamodid,g_sfma_m.sfmamodid_desc,g_sfma_m.sfmamoddt,g_sfma_m.sfmacnfid,g_sfma_m.sfmacnfid_desc, 
       g_sfma_m.sfmacnfdt
 
   CASE g_sfma_m.sfmastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_sfma_m.sfmastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
         CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
         #提交和抽單一開始先無條件關
         CALL cl_set_act_visible("signing,withdraw",FALSE)
         CASE g_sfma_m.sfmastus
            WHEN "N"
               #HIDE OPTION "open"
               CALL cl_set_act_visible("unconfirmed",FALSE)
               IF cl_bpm_chk() THEN
                  CALL cl_set_act_visible("signing",TRUE)
                  CALL cl_set_act_visible("confirmed",FALSE)
               END IF

            WHEN "X"
               #HIDE OPTION "invalid"
               CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)
               CALL s_transaction_end('N','0')   #160812-00017#4 20160815 add by beckxie
               RETURN

            WHEN "Y"
               #HIDE OPTION "confirmed"
               CALL cl_set_act_visible("invalid,confirmed",FALSE)
            
            #保留修改的功能(如作廢)，隱藏其他應用功能
            WHEN "R"
               CALL cl_set_act_visible("unconfirmed,confirmed",FALSE)
               
            WHEN "D"
               CALL cl_set_act_visible("unconfirmed,confirmed",FALSE)
         
            #送簽中只能顯示抽單;其餘應用功能皆隱藏
            WHEN "W"
               CALL cl_set_act_visible("withdraw",TRUE)
               CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)
            #已核准
            WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
                CALL cl_set_act_visible("confirmed ",TRUE)
                CALL cl_set_act_visible("unconfirmed,invalid",FALSE)
         END CASE
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT asft350_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE asft350_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT asft350_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE asft350_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            IF NOT cl_ask_confirm('aim-00110') THEN
               CALL s_transaction_end('N','0')   #160812-00017#4 20160815 add by beckxie
               RETURN
            ELSE
               CALL s_transaction_begin()
               IF NOT s_asft350_unconfirm(g_sfma_m.sfmadocno) THEN
                  CALL s_transaction_end('N',0)
                  RETURN
               END IF
               CALL s_transaction_end('Y',0)
            END IF
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            IF NOT cl_ask_confirm('aim-00108') THEN
               CALL s_transaction_end('N','0')   #160812-00017#4 20160815 add by beckxie
               RETURN
            ELSE
               CALL s_transaction_begin()
               IF NOT s_asft350_confirm(g_sfma_m.sfmadocno) THEN
                  CALL s_transaction_end('N',0)
                  RETURN
               END IF
               CALL s_transaction_end('Y',0)
            END IF
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            #仅当状态为 N.未审核 时,才可以切换为X.作废
            IF g_sfma_m.sfmastus NOT MATCHES '[N]' THEN
               CALL s_transaction_end('N','0')   #160812-00017#4 20160815 add by beckxie
               RETURN
            END IF
            IF NOT cl_ask_confirm('aim-00109') THEN
               CALL s_transaction_end('N','0')   #160812-00017#4 20160815 add by beckxie
               RETURN
            END IF
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_sfma_m.sfmastus = lc_state OR cl_null(lc_state) THEN
      CLOSE asft350_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   
   #end add-point
   
   LET g_sfma_m.sfmamodid = g_user
   LET g_sfma_m.sfmamoddt = cl_get_current()
   LET g_sfma_m.sfmastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE sfma_t 
      SET (sfmastus,sfmamodid,sfmamoddt) 
        = (g_sfma_m.sfmastus,g_sfma_m.sfmamodid,g_sfma_m.sfmamoddt)     
    WHERE sfmaent = g_enterprise AND sfmadocno = g_sfma_m.sfmadocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE asft350_master_referesh USING g_sfma_m.sfmadocno INTO g_sfma_m.sfmasite,g_sfma_m.sfmadocno, 
          g_sfma_m.sfmadocdt,g_sfma_m.sfma001,g_sfma_m.sfma002,g_sfma_m.sfma003,g_sfma_m.sfma004,g_sfma_m.sfma005, 
          g_sfma_m.sfmastus,g_sfma_m.sfmaownid,g_sfma_m.sfmaowndp,g_sfma_m.sfmacrtid,g_sfma_m.sfmacrtdp, 
          g_sfma_m.sfmacrtdt,g_sfma_m.sfmamodid,g_sfma_m.sfmamoddt,g_sfma_m.sfmacnfid,g_sfma_m.sfmacnfdt, 
          g_sfma_m.sfma004_desc,g_sfma_m.sfma005_desc,g_sfma_m.sfmaownid_desc,g_sfma_m.sfmaowndp_desc, 
          g_sfma_m.sfmacrtid_desc,g_sfma_m.sfmacrtdp_desc,g_sfma_m.sfmamodid_desc,g_sfma_m.sfmacnfid_desc 
 
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_sfma_m.sfmasite,g_sfma_m.sfmadocno,g_sfma_m.oobxl003,g_sfma_m.sfmadocdt,g_sfma_m.sfma001, 
          g_sfma_m.sfma002,g_sfma_m.sfma003,g_sfma_m.sfma004,g_sfma_m.sfma004_desc,g_sfma_m.sfma005, 
          g_sfma_m.sfma005_desc,g_sfma_m.sfmastus,g_sfma_m.sfmaownid,g_sfma_m.sfmaownid_desc,g_sfma_m.sfmaowndp, 
          g_sfma_m.sfmaowndp_desc,g_sfma_m.sfmacrtid,g_sfma_m.sfmacrtid_desc,g_sfma_m.sfmacrtdp,g_sfma_m.sfmacrtdp_desc, 
          g_sfma_m.sfmacrtdt,g_sfma_m.sfmamodid,g_sfma_m.sfmamodid_desc,g_sfma_m.sfmamoddt,g_sfma_m.sfmacnfid, 
          g_sfma_m.sfmacnfid_desc,g_sfma_m.sfmacnfdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   #顯示最新的資料
   EXECUTE asft350_master_referesh USING g_sfma_m.sfmadocno INTO g_sfma_m.sfmasite,g_sfma_m.sfmadocno, 
       g_sfma_m.sfmadocdt,g_sfma_m.sfma001,g_sfma_m.sfma002,g_sfma_m.sfma003,g_sfma_m.sfma004,g_sfma_m.sfma005, 
       g_sfma_m.sfmastus,g_sfma_m.sfmaownid,g_sfma_m.sfmaowndp,g_sfma_m.sfmacrtid,g_sfma_m.sfmacrtdp, 
       g_sfma_m.sfmacrtdt,g_sfma_m.sfmamodid,g_sfma_m.sfmamoddt,g_sfma_m.sfmacnfid,g_sfma_m.sfmacnfdt, 
       g_sfma_m.sfma004_desc,g_sfma_m.sfma005_desc,g_sfma_m.sfmaownid_desc,g_sfma_m.sfmaowndp_desc,g_sfma_m.sfmacrtid_desc, 
       g_sfma_m.sfmacrtdp_desc,g_sfma_m.sfmamodid_desc,g_sfma_m.sfmacnfid_desc
   CALL asft350_show()
   #end add-point  
 
   CLOSE asft350_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL asft350_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="asft350.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION asft350_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_sfmb_d.getLength() THEN
         LET g_detail_idx = g_sfmb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_sfmb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_sfmb_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_sfmb2_d.getLength() THEN
         LET g_detail_idx = g_sfmb2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_sfmb2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_sfmb2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="asft350.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION asft350_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL asft350_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="asft350.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION asft350_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="asft350.status_show" >}
PRIVATE FUNCTION asft350_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="asft350.mask_functions" >}
&include "erp/asf/asft350_mask.4gl"
 
{</section>}
 
{<section id="asft350.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION asft350_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   DEFINE l_success  LIKE type_t.num5
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
 
 
   CALL asft350_show()
   CALL asft350_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   CALL s_asft350_confirm(g_sfma_m.sfmadocno) RETURNING l_success
   IF NOT l_success THEN
      CLOSE asft350_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_sfma_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_sfmb_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_sfmb2_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL asft350_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL asft350_ui_headershow()
   CALL asft350_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION asft350_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL asft350_ui_headershow()  
   CALL asft350_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="asft350.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION asft350_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_sfma_m.sfmadocno
   LET g_pk_array[1].column = 'sfmadocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="asft350.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="asft350.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION asft350_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL asft350_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_sfma_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="asft350.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION asft350_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="asft350.other_function" readonly="Y" >}


##单身无资料时根据单头的仓库储位整批产生库存明细资料到单身档中
PRIVATE FUNCTION asft350_gen_fill(p_docno,p_inag004,p_inag005)
DEFINE p_docno                    LIKE sfma_t.sfmadocno
DEFINE p_inag004                  LIKE inag_t.inag004
DEFINE p_inag005                  LIKE inag_t.inag005
DEFINE r_success                  LIKE type_t.num5
DEFINE l_success                  LIKE type_t.num5
DEFINE l_sql                      STRING
DEFINE l_inag                     RECORD LIKE inag_t.*
DEFINE l_sfmb                     RECORD LIKE sfmb_t.*
DEFINE l_i                        LIKE type_t.num5
  
  LET r_success = FALSE
  IF cl_null(p_docno) OR cl_null(p_inag004) OR p_inag005 IS NULL THEN
     INITIALIZE g_errparam TO NULL
     LET g_errparam.code = 'sub-00001'
     LET g_errparam.extend = ''
     LET g_errparam.popup = TRUE
     CALL cl_err()

     RETURN r_success
  END IF
     
  LET l_sql = "SELECT * FROM inag_t WHERE inagent=",g_enterprise," AND inagsite='",g_site,"'",
              "   AND inag004='",p_inag004,"' AND inag005='",p_inag005,"' AND inag008>0"
  PREPARE asft350_gen_pre FROM l_sql
  DECLARE asft350_gen_cs CURSOR FOR asft350_gen_pre
  LET l_i = 0
  FOREACH asft350_gen_cs INTO l_inag.*
     IF SQLCA.sqlcode THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = SQLCA.sqlcode
        LET g_errparam.extend = "FOREACH:"
        LET g_errparam.popup = TRUE
        CALL cl_err()

        RETURN r_success
     END IF
     LET l_sfmb.sfmbent=l_inag.inagent
     LET l_sfmb.sfmbsite=l_inag.inagsite
     LET l_sfmb.sfmb001=l_inag.inag001
     LET l_sfmb.sfmb002=l_inag.inag002
     LET l_sfmb.sfmb003=l_inag.inag004
     LET l_sfmb.sfmb004=l_inag.inag005
     LET l_sfmb.sfmb005=l_inag.inag006
     LET l_sfmb.sfmb006=l_inag.inag003
     LET l_sfmb.sfmb007=l_inag.inag007
     LET l_sfmb.sfmb008=l_inag.inag008
     LET l_sfmb.sfmb010=l_inag.inag024
     LET l_sfmb.sfmb011=l_inag.inag025
     LET l_sfmb.sfmbdocno=p_docno
     #数量进行单位取位
     IF NOT cl_null(l_sfmb.sfmb007) AND NOT cl_null(l_sfmb.sfmb008) AND l_sfmb.sfmb008 != 0 THEN
        CALL s_aooi250_take_decimals(l_sfmb.sfmb007,l_sfmb.sfmb008) RETURNING l_success,l_sfmb.sfmb008
        IF NOT l_success THEN
           RETURN r_success
        END IF
     END IF
     IF NOT cl_null(l_sfmb.sfmb010) AND NOT cl_null(l_sfmb.sfmb011) AND l_sfmb.sfmb011 != 0 THEN
        CALL s_aooi250_take_decimals(l_sfmb.sfmb010,l_sfmb.sfmb011) RETURNING l_success,l_sfmb.sfmb011
        IF NOT l_success THEN
           RETURN r_success
        END IF
     END IF
     IF cl_null(l_sfmb.sfmb010) THEN
        SELECT imaf015 INTO l_sfmb.sfmb010 FROM imaf_t WHERE imafent=g_enterprise AND imafsite=g_site AND imaf001=l_sfmb.sfmb001
     END IF
     IF cl_null(l_sfmb.sfmb011) THEN
        LET l_sfmb.sfmb011 = 0
     END IF
     IF cl_null(l_sfmb.sfmb010) THEN
        LET l_sfmb.sfmb011 = ''
     END IF
     LET l_sfmb.sfmbseq=l_i+1
     INSERT INTO sfmb_t VALUES l_sfmb.*
     IF SQLCA.sqlcode THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = SQLCA.sqlcode
        LET g_errparam.extend = "INS sfmb_t"
        LET g_errparam.popup = TRUE
        CALL cl_err()

        RETURN r_success
     END IF
     LET l_i = l_i + 1
  END FOREACH
  IF l_i = 0 THEN
     INITIALIZE g_errparam TO NULL
     LET g_errparam.code = 'asr-00041'
     LET g_errparam.extend = ''
     LET g_errparam.popup = TRUE
     CALL cl_err()

  END IF
  LET r_success = TRUE
  RETURN r_success
END FUNCTION

#仓库库位检查
PRIVATE FUNCTION asft350_chk_warehouses()
   DEFINE r_success      LIKE type_t.num5

   LET r_success = FALSE

   #1.检查库位基础档
   IF NOT cl_null(g_sfma_m.sfma004) THEN
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = g_sfma_m.sfma004
      #160318-00025#22  by 07900 --add-str
      LET g_errshow = TRUE #是否開窗                   
      LET g_chkparam.err_str[1] ="aim-00065:sub-01302|aini001|",cl_get_progname("aini001",g_lang,"2"),"|:EXEPROGaini001"
      #160318-00025#22  by 07900 --add-end 
      IF NOT cl_chk_exist("v_inaa001_2") THEN
         RETURN r_success
      END IF
   END IF

   #2.检查储位
   IF NOT cl_null(g_sfma_m.sfma004) AND g_sfma_m.sfma005 IS NOT NULL THEN
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = g_site
      LET g_chkparam.arg2 = g_sfma_m.sfma004
      LET g_chkparam.arg3 = g_sfma_m.sfma005
      #160318-00025#22  by 07900 --add-str
      LET g_errshow = TRUE #是否開窗                   
      LET g_chkparam.err_str[1] ="aim-00063:sub-01302|aini002|",cl_get_progname("aini002",g_lang,"2"),"|:EXEPROGaini002"
      #160318-00025#22  by 07900 --add-end
      IF NOT cl_chk_exist("v_inab002") THEN
         RETURN r_success
      END IF
   END IF
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION


#盘点资料页签ref栏位显示
PRIVATE FUNCTION asft350_b_desc()
DEFINE l_success           LIKE type_t.num5

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_sfmb_d[l_ac].sfmb001
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_sfmb_d[l_ac].sfmb001_desc = '', g_rtn_fields[1] , ''
   LET g_sfmb_d[l_ac].sfmb001_desc_1 = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_sfmb_d[l_ac].sfmb001_desc,g_sfmb_d[l_ac].sfmb001_desc_1
   
   #显示产品特征说明
   CALL s_feature_description(g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb002)
      RETURNING l_success,g_sfmb_d[l_ac].sfmb002_desc
   IF NOT l_success THEN
      LET g_sfmb_d[l_ac].sfmb002_desc = ''
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_sfmb_d[l_ac].sfmb007
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_sfmb_d[l_ac].sfmb007_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_sfmb_d[l_ac].sfmb007_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_sfmb_d[l_ac].sfmb010
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_sfmb_d[l_ac].sfmb010_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_sfmb_d[l_ac].sfmb010_desc
END FUNCTION


#差异分摊明细页签ref栏位显示
PRIVATE FUNCTION asft350_b_sfmc_desc()
DEFINE l_success           LIKE type_t.num5

   SELECT sfmb001,sfmb002,sfmb005,sfmb006 INTO g_sfmb2_d[l_ac].l_sfmb001,g_sfmb2_d[l_ac].l_sfmb002,g_sfmb2_d[l_ac].l_sfmb005,g_sfmb2_d[l_ac].l_sfmb006 FROM sfmb_t
    WHERE sfmbent=g_enterprise  AND sfmbdocno=g_sfma_m.sfmadocno AND sfmbseq=g_sfmb2_d[l_ac].sfmcseq
    
   #显示产品特征说明
   CALL s_feature_description(g_sfmb2_d[l_ac].l_sfmb001,g_sfmb2_d[l_ac].l_sfmb002)
      RETURNING l_success,g_sfmb2_d[l_ac].l_sfmb002_desc
   IF NOT l_success THEN
      LET g_sfmb2_d[l_ac].l_sfmb002_desc = ''
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_sfmb2_d[l_ac].l_sfmb001
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_sfmb2_d[l_ac].l_sfmb001_desc = '', g_rtn_fields[1] , ''
   LET g_sfmb2_d[l_ac].l_sfmb001_desc_1 = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_sfmb2_d[l_ac].l_sfmb001_desc,g_sfmb2_d[l_ac].l_sfmb001_desc_1

   SELECT sfaa010 INTO g_sfmb2_d[l_ac].sfmc002 FROM sfaa_t
    WHERE sfaaent=g_enterprise AND sfaadocno=g_sfmb2_d[l_ac].sfmc001
    
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_sfmb2_d[l_ac].sfmc002
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_sfmb2_d[l_ac].sfmc002_desc = '', g_rtn_fields[1] , ''
   LET g_sfmb2_d[l_ac].sfmc002_desc_1 = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_sfmb2_d[l_ac].sfmc002_desc,g_sfmb2_d[l_ac].sfmc002_desc_1

   SELECT sfba003,sfba004 INTO g_sfmb2_d[l_ac].l_sfba003,g_sfmb2_d[l_ac].l_sfba004 FROM sfba_t
    WHERE sfbaent=g_enterprise AND sfbasite=g_site AND sfbadocno=g_sfmb2_d[l_ac].sfmc001
      AND sfbaseq=g_sfmb2_d[l_ac].sfmc003 AND sfbaseq1=g_sfmb2_d[l_ac].sfmc004
    
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_sfmb2_d[l_ac].l_sfba003
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_sfmb2_d[l_ac].l_sfba003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_sfmb2_d[l_ac].l_sfba003_desc
END FUNCTION


################################################################################
# Descriptions...: 根据料号判断产品特征，批号，库存管理特征开启关闭
# Memo...........:
# Usage..........: CALL asft350_chk_sfmb_entry(p_sfmb001)
# Input parameter: 1.p_sfmb001    LIKE sfmb_t.sfmb001
# Date & Author..: 2014/4/9 By wuxj
# Modify.........:
################################################################################
PRIVATE FUNCTION asft350_chk_sfmb_entry(p_sfmb001)
DEFINE p_sfmb001      LIKE sfmb_t.sfmb001
DEFINE l_imaa005      LIKE imaa_t.imaa005
DEFINE l_imaf054      LIKE imaf_t.imaf054
DEFINE l_imaf055      LIKE imaf_t.imaf055
DEFINE l_imaf061      LIKE imaf_t.imaf061

   CALL cl_set_comp_entry("sfmb002,sfmb0005,sfmb006,sfmb007",TRUE)
   IF cl_null(p_sfmb001) THEN
      CALL cl_set_comp_entry("sfmb002,sfmb0005,sfmb006,sfmb007",FALSE)
   END IF
   
   IF NOT cl_null(p_sfmb001) THEN
      LET l_imaf054 = ''
      LET l_imaf055 = ''
      LET l_imaf061 = ''
      LET l_imaa005 = ''
      LET g_flag2 = 'Y'
      
      SELECT imaa005 INTO l_imaa005 FROM imaa_t WHERE imaaent = g_enterprise AND imaa001 = p_sfmb001
      IF cl_null(l_imaa005) THEN
         LET g_flag2 = 'N'
         CALL cl_set_comp_entry("sfmb002",FALSE)
      END IF
      SELECT imaf054,imaf055,imaf061 INTO l_imaf054,l_imaf055,l_imaf061 FROM imaf_t
       WHERE imafent = g_enterprise AND imafsite = g_site
         AND imaf001 = p_sfmb001
      IF l_imaf054 = 'N' OR cl_null(l_imaf054) THEN
         CALL cl_set_comp_entry("sfmb007",FALSE)        
      END IF              
      IF l_imaf055 = '2' OR cl_null(l_imaf055) THEN
         CALL cl_set_comp_entry("sfmb006",FALSE)
      END IF
      IF l_imaf061 = '2' OR cl_null(l_imaf061) THEN
         CALL cl_set_comp_entry("sfmb005",FALSE)
      END IF                                
   END IF 
END FUNCTION


################################################################################
# Descriptions...: 根据料号，产品特征，库位储位等带出库存明细档中资料及单身相关栏位显示
# Memo...........:
# Usage..........: CALL asft350_def_sfmb008(p_sfmb001,p_sfmb002,p_sfmb003,p_sfmb004,p_sfmb005,p_sfmb006,p_sfmb007)
# Input parameter: 1.p_sfmb001              LIKE sfmb_t.sfmb001
#                : 2.p_sfmb002              LIKE sfmb_t.sfmb002
#                : 3.p_sfmb003              LIKE sfmb_t.sfmb003
#                : 4.p_sfmb004              LIKE sfmb_t.sfmb004
#                : 5.p_sfmb005              LIKE sfmb_t.sfmb005
#                : 6.p_sfmb006              LIKE sfmb_t.sfmb006
#                : 7.p_sfmb007              LIKE sfmb_t.sfmb007
# Date & Author..: 2014/4/10 By wuxja
# Modify.........:
################################################################################
PRIVATE FUNCTION asft350_def_sfmb008(p_sfmb001,p_sfmb002,p_sfmb003,p_sfmb004,p_sfmb005,p_sfmb006,p_sfmb007)
DEFINE p_sfmb001              LIKE sfmb_t.sfmb001
DEFINE p_sfmb002              LIKE sfmb_t.sfmb002
DEFINE p_sfmb003              LIKE sfmb_t.sfmb003
DEFINE p_sfmb004              LIKE sfmb_t.sfmb004
DEFINE p_sfmb005              LIKE sfmb_t.sfmb005
DEFINE p_sfmb006              LIKE sfmb_t.sfmb006
DEFINE p_sfmb007              LIKE sfmb_t.sfmb007
DEFINE l_n                    LIKE type_t.num5
DEFINE l_success              LIKE type_t.num5

   #料号、仓库、单位不可能为空或者空白
   IF cl_null(p_sfmb001) OR cl_null(p_sfmb003) OR cl_null(p_sfmb007) THEN
      RETURN
   END IF
   IF cl_null(p_sfmb002) THEN
      LET p_sfmb002 = ' '
   END IF
   IF cl_null(p_sfmb004) THEN
      LET p_sfmb004 = ' '
   END IF
   IF cl_null(p_sfmb005) THEN
      LET p_sfmb005 = ' '
   END IF
   IF cl_null(p_sfmb006) THEN
      LET p_sfmb006 = ' '
   END IF
   SELECT COUNT(*) INTO l_n FROM inag_t WHERE inagent=g_enterprise AND inagsite=g_site 
      AND inag001=p_sfmb001 AND inag002=p_sfmb002 AND inag003=p_sfmb006 AND inag004=p_sfmb003
      AND inag005=p_sfmb004 AND inag006=p_sfmb005 AND inag007=p_sfmb007
   IF l_n = 1 THEN
      SELECT inag008,inag024,inag025 INTO g_sfmb_d[l_ac].sfmb008,g_sfmb_d[l_ac].sfmb010,g_sfmb_d[l_ac].sfmb011 FROM inag_t
       WHERE inagent=g_enterprise AND inagsite=g_site 
         AND inag001=p_sfmb001 AND inag002=p_sfmb002 AND inag003=p_sfmb006 AND inag004=p_sfmb003
         AND inag005=p_sfmb004 AND inag006=p_sfmb005 AND inag007=p_sfmb007
      IF cl_null(g_sfmb_d[l_ac].sfmb008) THEN
         LET g_sfmb_d[l_ac].sfmb008 = 0
      END IF
      IF cl_null(g_sfmb_d[l_ac].sfmb010) THEN
         SELECT imaf015 INTO g_sfmb_d[l_ac].sfmb010 FROM imaf_t WHERE imafent=g_enterprise AND imafsite=g_site AND imaf001=p_sfmb001
      END IF
      IF cl_null(g_sfmb_d[l_ac].sfmb011) THEN
         LET g_sfmb_d[l_ac].sfmb011 = 0
      END IF
      IF cl_null(g_sfmb_d[l_ac].sfmb010) THEN
         LET g_sfmb_d[l_ac].sfmb011 = ''
         CALL cl_set_comp_entry("sfmb012",FALSE)
      ELSE
         CALL cl_set_comp_entry("sfmb012",TRUE)
      END IF
   ELSE
      LET g_sfmb_d[l_ac].sfmb008 = 0
      SELECT imaf015 INTO g_sfmb_d[l_ac].sfmb010 FROM imaf_t WHERE imafent=g_enterprise AND imafsite=g_site AND imaf001=p_sfmb001
      IF cl_null(g_sfmb_d[l_ac].sfmb010) THEN
         LET g_sfmb_d[l_ac].sfmb011 = ''
         CALL cl_set_comp_entry("sfmb012",FALSE)
      ELSE
         LET g_sfmb_d[l_ac].sfmb011 = 0
         CALL cl_set_comp_entry("sfmb012",TRUE)
      END IF
   END IF 
   #数量进行单位取位
   IF NOT cl_null(g_sfmb_d[l_ac].sfmb007) AND NOT cl_null(g_sfmb_d[l_ac].sfmb008) AND g_sfmb_d[l_ac].sfmb008 != 0 THEN
      CALL s_aooi250_take_decimals(g_sfmb_d[l_ac].sfmb007,g_sfmb_d[l_ac].sfmb008) RETURNING l_success,g_sfmb_d[l_ac].sfmb008
   END IF
   IF NOT cl_null(g_sfmb_d[l_ac].sfmb010) AND NOT cl_null(g_sfmb_d[l_ac].sfmb011) AND g_sfmb_d[l_ac].sfmb011 != 0 THEN
      CALL s_aooi250_take_decimals(g_sfmb_d[l_ac].sfmb010,g_sfmb_d[l_ac].sfmb011) RETURNING l_success,g_sfmb_d[l_ac].sfmb011
   END IF
   DISPLAY BY NAME g_sfmb_d[l_ac].sfmb008,g_sfmb_d[l_ac].sfmb010,g_sfmb_d[l_ac].sfmb011
END FUNCTION


#单位检查
PRIVATE FUNCTION asft350_chk_sfmb007()
   DEFINE r_success      LIKE type_t.num5
   DEFINE l_imaa006      LIKE imaa_t.imaa006
   DEFINE l_success      LIKE type_t.num5
   DEFINE l_rate         LIKE inaj_t.inaj014

   LET r_success = FALSE

   #1.检查单位资料档
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = g_sfmb_d[l_ac].sfmb007
   #160318-00025#22  by 07900 --add-str
   LET g_errshow = TRUE #是否開窗                   
   LET g_chkparam.err_str[1] ="aim-00005:sub-01302|aooi250|",cl_get_progname("aooi250",g_lang,"2"),"|:EXEPROGaooi250"
    #160318-00025#22  by 07900 --add-end
   IF NOT cl_chk_exist("v_ooca001") THEN
      RETURN r_success
   END IF

   #2.检查与基础单位是否有转换率
   SELECT imaa006 INTO l_imaa006 FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = g_sfmb_d[l_ac].sfmb001
   CALL s_aimi190_get_convert(g_sfmb_d[l_ac].sfmb001,g_sfmb_d[l_ac].sfmb007,l_imaa006)
        RETURNING l_success,l_rate
   IF NOT l_success THEN
      RETURN r_success
   END IF
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 检查料號+產品特徵+庫位+儲位+批號+庫存特徵+单位在同一張盤點單不可重覆; 當盤點數量有維護，且有使用參考單位的参考数量就一定要輸入
# Memo...........:
# Usage..........: CALL asrt350_chk_sfmb(p_sfmb001,p_sfmb002,p_sfmb003,p_sfmb004,p_sfmb005,p_sfmb006,p_sfmb007,p_sfmb009,p_sfmb010,p_sfmb012)
#                  RETURNING r_success
# Input parameter: 1.p_sfmb001           LIKE sfmb_t.sfmb001
#                : 2.p_sfmb002           LIKE sfmb_t.sfmb002
#                : 3.p_sfmb003           LIKE sfmb_t.sfmb003
#                : 4.p_sfmb004           LIKE sfmb_t.sfmb004
#                : 5.p_sfmb005           LIKE sfmb_t.sfmb005
#                : 6.p_sfmb006           LIKE sfmb_t.sfmb006
#                : 7.p_sfmb007           LIKE sfmb_t.sfmb007
#                : 8.p_sfmb009           LIKE sfmb_t.sfmb009
#                : 9.p_sfmb010           LIKE sfmb_t.sfmb010
#                : 10.p_sfmb012          LIKE sfmb_t.sfmb012
# Return code....: 1.r_success           LIKE type_t.num5
# Date & Author..: 2014/4/9 By wuxja
# Modify.........:
################################################################################
PRIVATE FUNCTION asft350_chk_sfmb(p_sfmb001,p_sfmb002,p_sfmb003,p_sfmb004,p_sfmb005,p_sfmb006,p_sfmb007,p_sfmb009,p_sfmb010,p_sfmb012)
DEFINE p_sfmb001           LIKE sfmb_t.sfmb001
DEFINE p_sfmb002           LIKE sfmb_t.sfmb002
DEFINE p_sfmb003           LIKE sfmb_t.sfmb003
DEFINE p_sfmb004           LIKE sfmb_t.sfmb004
DEFINE p_sfmb005           LIKE sfmb_t.sfmb005
DEFINE p_sfmb006           LIKE sfmb_t.sfmb006
DEFINE p_sfmb007           LIKE sfmb_t.sfmb007
DEFINE p_sfmb009           LIKE sfmb_t.sfmb009
DEFINE p_sfmb010           LIKE sfmb_t.sfmb010
DEFINE p_sfmb012           LIKE sfmb_t.sfmb012
DEFINE r_success           LIKE type_t.num5
DEFINE l_sql               STRING
DEFINE l_n                 LIKE type_t.num5

  LET r_success = FALSE
  IF cl_null(p_sfmb001) OR cl_null(p_sfmb003) OR cl_null(p_sfmb007) THEN
     LET r_success = TRUE
     RETURN r_success
  END IF
  IF cl_null(p_sfmb002) THEN
     LET p_sfmb002 = ' '
  END IF
  IF cl_null(p_sfmb004) THEN
     LET p_sfmb002 = ' '
  END IF
  IF cl_null(p_sfmb005) THEN
     LET p_sfmb002 = ' '
  END IF
  IF cl_null(p_sfmb006) THEN
     LET p_sfmb002 = ' '
  END IF
  LET g_flag3 = 'N'
  LET g_flag4 = 'N'
  IF p_sfmb001 != g_sfmb_d_t.sfmb001 OR p_sfmb002 != g_sfmb_d_t.sfmb002 OR p_sfmb005 != g_sfmb_d_t.sfmb005 OR p_sfmb006 != g_sfmb_d_t.sfmb006 OR p_sfmb007 != g_sfmb_d_t.sfmb007 OR cl_null(g_sfmb_d_t.sfmb001) THEN 
     LET l_sql = "SELECT COUNT(*) FROM sfmb_t WHERE sfmbent=",g_enterprise," AND sfmbsite='",g_site,"' AND sfmbdocno='",g_sfma_m.sfmadocno,"'",
                 "   AND sfmb001='",p_sfmb001,"' AND sfmb003='",p_sfmb003,"' AND sfmb007='",p_sfmb007,"'",
                 " AND sfmb002='",p_sfmb002,"' AND sfmb004='",p_sfmb004,"' AND sfmb005='",p_sfmb005,"' AND sfmb006='",p_sfmb006,"'"
     PREPARE asft350_chk_sfmb_pre FROM l_sql
     EXECUTE asft350_chk_sfmb_pre INTO l_n
     IF l_n > 0 THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = 'asr-00046'
        LET g_errparam.extend = ''
        LET g_errparam.popup = TRUE
        CALL cl_err()

        LET g_flag3 = 'Y'
        RETURN r_success
     END IF
  END IF
  
  IF cl_get_para(g_enterprise,g_site,'S-BAS-0028')  = 'Y' THEN
     IF NOT cl_null(p_sfmb010) AND NOT cl_null(p_sfmb009) AND cl_null(p_sfmb012) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = 'asr-00047'
        LET g_errparam.extend = ''
        LET g_errparam.popup = TRUE
        CALL cl_err()

        LET g_flag4 = 'Y'
        RETURN r_success
     END IF
  END IF
  LET r_success = TRUE
  RETURN r_success
END FUNCTION


#工单单号、作业编号、作业序检查
PRIVATE FUNCTION asft350_chk_sfmc001()
DEFINE l_sql                 STRING
DEFINE l_n                   LIKE type_t.num5

   IF cl_null(g_sfmb2_d[l_ac].sfmc001) THEN
      RETURN FALSE
   END IF
   LET l_sql = "SELECT COUNT(*) FROM sfaa_t,sfba_t WHERE sfaaent=sfbaent AND sfaadocno=sfbadocno",
               "   AND sfaaent=",g_enterprise," AND sfaasite='",g_site,"'",
               "   AND sfaadocno='",g_sfmb2_d[l_ac].sfmc001,"' AND sfaastus IN('N','Y','F')"
   IF g_sfmb2_d[l_ac].sfmc003 IS NOT NULL THEN
      LET l_sql = l_sql," AND sfbaseq='",g_sfmb2_d[l_ac].sfmc003,"'"
   END IF
   IF g_sfmb2_d[l_ac].sfmc004 IS NOT NULL THEN
      LET l_sql = l_sql," AND sfbaseq1='",g_sfmb2_d[l_ac].sfmc004,"'"
   END IF
   PREPARE asft350_chk_sfmc001_pre FROM l_sql
   EXECUTE asft350_chk_sfmc001_pre INTO l_n
   IF l_n = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00254'
      LET g_errparam.extend = g_sfmb2_d[l_ac].sfmc001
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   RETURN TRUE
END FUNCTION


#chk分摊数量
PRIVATE FUNCTION asft350_chk_sfmc006()
DEFINE l_success             LIKE type_t.num5
DEFINE l_sfmb007             LIKE sfmb_t.sfmb007
DEFINE l_sfmb008             LIKE sfmb_t.sfmb008
DEFINE l_sfmb009             LIKE sfmb_t.sfmb009
DEFINE l_sfmc006             LIKE sfmc_t.sfmc006

   SELECT sfmb007,sfmb008,sfmb009 INTO l_sfmb007,l_sfmb008,l_sfmb009 FROM sfmb_t WHERE sfmbent=g_enterprise AND sfmbsite=g_site
      AND sfmbdocno=g_sfma_m.sfmadocno AND sfmbseq=g_sfmb2_d[l_ac].sfmcseq
   #数量进行单位取位
   IF NOT cl_null(l_sfmb007) AND NOT cl_null(g_sfmb2_d[l_ac].sfmc006) AND g_sfmb2_d[l_ac].sfmc006 != 0 THEN
      CALL s_aooi250_take_decimals(l_sfmb007,g_sfmb2_d[l_ac].sfmc006) RETURNING l_success,g_sfmb2_d[l_ac].sfmc006
      IF NOT l_success THEN
         RETURN FALSE
      END IF
   END IF
   SELECT SUM(sfmc006) INTO l_sfmc006 FROM sfmc_t WHERE sfmcent=g_enterprise AND sfmcsite=g_site
      AND sfmcdocno=g_sfma_m.sfmadocno AND sfmcseq=g_sfmb2_d[l_ac].sfmcseq
   IF cl_null(g_sfmb2_d_t.sfmc006) THEN
      LET g_sfmb2_d_t.sfmc006 = 0
   END IF
   IF cl_null(l_sfmc006) THEN
      LET l_sfmc006 = 0 
   END IF
   IF l_sfmb008 - l_sfmb009 < 0 THEN
      IF g_sfmb2_d[l_ac].sfmc006 >= 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'asr-00044'
         LET g_errparam.extend = g_sfmb2_d[l_ac].sfmc006
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
      IF (l_sfmc006 - g_sfmb2_d_t.sfmc006 + g_sfmb2_d[l_ac].sfmc006) < (l_sfmb008 - l_sfmb009) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'asr-00045'
         LET g_errparam.extend = g_sfmb2_d[l_ac].sfmc006
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF 
   ELSE
      IF g_sfmb2_d[l_ac].sfmc006 <= 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'asr-00044'
         LET g_errparam.extend = g_sfmb2_d[l_ac].sfmc006
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
      IF (l_sfmc006 - g_sfmb2_d_t.sfmc006 + g_sfmb2_d[l_ac].sfmc006) > (l_sfmb008 - l_sfmb009) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'asr-00045'
         LET g_errparam.extend = g_sfmb2_d[l_ac].sfmc006
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
   RETURN TRUE 
END FUNCTION


#chk参考数量
PRIVATE FUNCTION asft350_chk_sfmc007()
DEFINE l_success             LIKE type_t.num5
DEFINE l_sfmb010             LIKE sfmb_t.sfmb010
DEFINE l_sfmb011             LIKE sfmb_t.sfmb011
DEFINE l_sfmb012             LIKE sfmb_t.sfmb012
DEFINE l_sfmc007             LIKE sfmc_t.sfmc007
   
   SELECT sfmb010,sfmb011,sfmb012 INTO l_sfmb010,l_sfmb011,l_sfmb012 FROM sfmb_t WHERE sfmbent=g_enterprise AND sfmbsite=g_site
      AND sfmbdocno=g_sfma_m.sfmadocno AND sfmbseq=g_sfmb2_d[l_ac].sfmcseq
   #数量进行单位取位
   IF NOT cl_null(l_sfmb010) AND NOT cl_null(g_sfmb2_d[l_ac].sfmc007) AND g_sfmb2_d[l_ac].sfmc007 != 0 THEN
      CALL s_aooi250_take_decimals(l_sfmb010,g_sfmb2_d[l_ac].sfmc007) RETURNING l_success,g_sfmb2_d[l_ac].sfmc007
      IF NOT l_success THEN
         RETURN FALSE
      END IF
   END IF
   SELECT SUM(sfmc007) INTO l_sfmc007 FROM sfmc_t WHERE sfmcent=g_enterprise AND sfmcsite=g_site
      AND sfmcdocno=g_sfma_m.sfmadocno AND sfmcseq=g_sfmb2_d[l_ac].sfmcseq
   IF cl_null(g_sfmb2_d_t.sfmc007) THEN
      LET g_sfmb2_d_t.sfmc007 = 0
   END IF
   IF cl_null(l_sfmc007) THEN
      LET l_sfmc007 = 0 
   END IF
   IF l_sfmb011 - l_sfmb012 < 0 THEN
      IF g_sfmb2_d[l_ac].sfmc007 >= 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'asr-00044'
         LET g_errparam.extend = g_sfmb2_d[l_ac].sfmc007
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
      IF (l_sfmc007 - g_sfmb2_d_t.sfmc007 + g_sfmb2_d[l_ac].sfmc007) < (l_sfmb011 - l_sfmb012) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'asr-00045'
         LET g_errparam.extend = g_sfmb2_d[l_ac].sfmc007
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF 
   ELSE
      IF g_sfmb2_d[l_ac].sfmc007 <= 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'asr-00044'
         LET g_errparam.extend = g_sfmb2_d[l_ac].sfmc007
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
      IF (l_sfmc007 - g_sfmb2_d_t.sfmc007 + g_sfmb2_d[l_ac].sfmc007) > (l_sfmb011 - l_sfmb012) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'asr-00045'
         LET g_errparam.extend = g_sfmb2_d[l_ac].sfmc007
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
   RETURN TRUE 
END FUNCTION

#根据项次带出预设值
PRIVATE FUNCTION asft350_sfmcseq()
DEFINE l_sfmb011             LIKE sfmb_t.sfmb011
DEFINE l_sfmb012             LIKE sfmb_t.sfmb012
DEFINE l_sfmc007             LIKE sfmc_t.sfmc007
DEFINE l_sfmb008             LIKE sfmb_t.sfmb008
DEFINE l_sfmb009             LIKE sfmb_t.sfmb009
DEFINE l_sfmc006             LIKE sfmc_t.sfmc006

   #预设项序
   SELECT MAX(sfmcseq1)+1 INTO g_sfmb2_d[l_ac].sfmcseq1 FROM sfmc_t WHERE sfmcent=g_enterprise AND sfmcsite=g_site
      AND sfmcdocno=g_sfma_m.sfmadocno AND sfmcseq=g_sfmb2_d[l_ac].sfmcseq
   IF cl_null(g_sfmb2_d[l_ac].sfmcseq1) THEN
      LET g_sfmb2_d[l_ac].sfmcseq1 = 1
   END IF
   
   #预设分摊数量
   SELECT sfmb008,sfmb009 INTO l_sfmb008,l_sfmb009 FROM sfmb_t WHERE sfmbent=g_enterprise AND sfmbsite=g_site
      AND sfmbdocno=g_sfma_m.sfmadocno AND sfmbseq=g_sfmb2_d[l_ac].sfmcseq
   SELECT SUM(sfmc006) INTO l_sfmc006 FROM sfmc_t WHERE sfmcent=g_enterprise AND sfmcsite=g_site
      AND sfmcdocno=g_sfma_m.sfmadocno AND sfmcseq=g_sfmb2_d[l_ac].sfmcseq
   IF cl_null(g_sfmb2_d_t.sfmc006) THEN
      LET g_sfmb2_d_t.sfmc006 = 0
   END IF
   IF cl_null(l_sfmc006) THEN
      LET l_sfmc006 = 0 
   END IF
   LET g_sfmb2_d[l_ac].sfmc006 = l_sfmb008 - l_sfmb009 - l_sfmc006
   
   #预设分摊参考数量
   SELECT sfmb011,sfmb012 INTO l_sfmb011,l_sfmb012 FROM sfmb_t WHERE sfmbent=g_enterprise AND sfmbsite=g_site
      AND sfmbdocno=g_sfma_m.sfmadocno AND sfmbseq=g_sfmb2_d[l_ac].sfmcseq
   SELECT SUM(sfmc007) INTO l_sfmc007 FROM sfmc_t WHERE sfmcent=g_enterprise AND sfmcsite=g_site
      AND sfmcdocno=g_sfma_m.sfmadocno AND sfmcseq=g_sfmb2_d[l_ac].sfmcseq
   IF cl_null(g_sfmb2_d_t.sfmc007) THEN
      LET g_sfmb2_d_t.sfmc007 = 0
   END IF
   IF cl_null(l_sfmc007) THEN
      LET l_sfmc007 = 0 
   END IF
   LET g_sfmb2_d[l_ac].sfmc007 = l_sfmb011 - l_sfmb012 - l_sfmc007
END FUNCTION


#产生分摊明细
PRIVATE FUNCTION asft350_gen_sfmc()
DEFINE l_m               LIKE type_t.num5
DEFINE l_n               LIKE type_t.num5
DEFINE l_sql             STRING
DEFINE l_sfmbseq         LIKE sfmb_t.sfmbseq

   IF cl_null(g_sfma_m.sfmadocno) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asr-00049'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF
   IF g_sfma_m.sfmastus != 'N' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asr-00049'
      LET g_errparam.extend = g_sfma_m.sfmadocno
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF
   
   SELECT COUNT(*) INTO l_m FROM sfmb_t WHERE sfmbent=g_enterprise AND sfmbsite=g_site
      AND sfmbdocno=g_sfma_m.sfmadocno AND sfmb008 IS NOT NULL AND sfmb009 IS NOT NULL AND sfmb008 != sfmb009
   IF l_m = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00278'
      LET g_errparam.extend = g_sfma_m.sfmadocno
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF
   
   SELECT COUNT(*) INTO l_n FROM sfmc_t WHERE sfmcent=g_enterprise AND sfmcsite=g_site AND sfmcdocno=g_sfma_m.sfmadocno
   IF l_n > 0 THEN
      IF g_flag5 = 'N' THEN
         IF NOT cl_ask_confirm('asr-00050') THEN
            RETURN
         END IF
      END IF
      DELETE FROM sfmc_t WHERE sfmcent=g_enterprise AND sfmcsite=g_site AND sfmcdocno=g_sfma_m.sfmadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "del sfmc_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN
      END IF
   END IF
   
   #弹出来源范围筛选窗口，由user选择
   CALL asft350_gen_sfmc_qbe()
   
   LET l_sql = "SELECT sfmbseq FROM sfmb_t WHERE sfmbent=",g_enterprise," AND sfmbsite='",g_site,"'",
               "   AND sfmbdocno='",g_sfma_m.sfmadocno,"' AND sfmb008 IS NOT NULL AND sfmb009 IS NOT NULL AND sfmb008 != sfmb009"
   PREPARE asft350_gen_sfmc_pre FROM l_sql
   DECLARE asft350_gen_sfmc_cs CURSOR FOR asft350_gen_sfmc_pre
   FOREACH asft350_gen_sfmc_cs INTO l_sfmbseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN 
      END IF
      
      IF g_sfma_m.sfma001 = '1' THEN
         IF NOT asft350_gen_sfmc_1(l_sfmbseq) THEN
            RETURN 
         END IF
      END IF
      
      IF g_sfma_m.sfma001 = '2' THEN
         IF NOT asft350_gen_sfmc_2(l_sfmbseq) THEN
            RETURN 
         END IF
      END IF
      
      IF g_sfma_m.sfma001 = '3' THEN
         IF NOT asft350_gen_sfmc_3(l_sfmbseq) THEN
            RETURN 
         END IF
      END IF
   END FOREACH
   
   INITIALIZE g_errparam TO NULL
   LET g_errparam.code = 'asf-00279'
   LET g_errparam.extend = ''
   LET g_errparam.popup = TRUE
   CALL cl_err()

END FUNCTION


#彈出“來源範圍篩選”窗口，由user選擇
PRIVATE FUNCTION asft350_gen_sfmc_qbe()
DEFINE lwin_curr    ui.Window
DEFINE lfrm_curr    ui.Form
DEFINE ls_path      STRING   
DEFINE l_sql        STRING
   
   #畫面開啟 (identifier)
   OPEN WINDOW w_asft350_s01 WITH FORM cl_ap_formpath("asf","asft350_s01")
   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   LET lwin_curr = ui.Window.getCurrent()
   LET lfrm_curr = lwin_curr.getForm()
   LET ls_path = os.Path.join(os.Path.join(FGL_GETENV("ERP"),"cfg"),"4tb")
   LET ls_path = os.Path.join(ls_path,"toolbar_lib.4tb")
   CALL lfrm_curr.loadToolBar(ls_path)
   CALL cl_set_combo_scc('l_r','5441')
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
     
     CONSTRUCT BY NAME g_wc_qbe ON sfaadocno,sfaa010,sfaa017,sfaa016
        ON ACTION controlp INFIELD sfaadocno
		     INITIALIZE g_qryparam.* TO NULL
           LET g_qryparam.state = 'c'
		     LET g_qryparam.reqry = FALSE
		     LET g_qryparam.where = " sfaasite = '",g_site,"'"
           CALL q_sfaadocno_1()                           #呼叫開窗
           DISPLAY g_qryparam.return1 TO sfaadocno  #顯示到畫面上
           NEXT FIELD sfaadocno                     #返回原欄位
           
        ON ACTION controlp INFIELD sfaa010
			  INITIALIZE g_qryparam.* TO NULL
           LET g_qryparam.state = 'c'
			  LET g_qryparam.reqry = FALSE
           CALL q_imaa001_9()                           #呼叫開窗
           DISPLAY g_qryparam.return1 TO sfaa010  #顯示到畫面上
           NEXT FIELD sfaa010                     #返回原欄位
           
        ON ACTION controlp INFIELD sfaa016
			  INITIALIZE g_qryparam.* TO NULL
           LET g_qryparam.state = 'c'
			  LET g_qryparam.reqry = FALSE
           CALL q_ecba002()                          #呼叫開窗
           DISPLAY g_qryparam.return1 TO sfaa016  #顯示到畫面上
           NEXT FIELD sfaa016                     #返回原欄位
           
        ON ACTION controlp INFIELD sfaa017
			  INITIALIZE g_qryparam.* TO NULL
           LET g_qryparam.state = 'c'
			  LET g_qryparam.reqry = FALSE
           CALL q_ooeg001_1()                          #呼叫開窗
           DISPLAY g_qryparam.return1 TO sfaa017  #顯示到畫面上
           NEXT FIELD sfaa017                     #返回原欄位
           

     END CONSTRUCT
     
     INPUT g_sffb007,g_sffb008 FROM sffb007,sffb008
     
        ON ACTION controlp INFIELD sffb007
           INITIALIZE g_qryparam.* TO NULL
           LET g_qryparam.state = 'i'
           LET g_qryparam.reqry = FALSE
           CALL q_sffb007()  
           LET g_sffb007 = g_qryparam.return1            #呼叫開窗
           LET g_sffb008 = g_qryparam.return2
           DISPLAY g_sffb007 TO sffb007 #顯示到畫面上
           DISPLAY g_sffb008 TO sffb008
           NEXT FIELD sffb007
           
        ON ACTION controlp INFIELD sffb008
           INITIALIZE g_qryparam.* TO NULL
           LET g_qryparam.state = 'i'
           LET g_qryparam.reqry = FALSE
           CALL q_sffb007()  
           LET g_sffb007 = g_qryparam.return1            #呼叫開窗
           LET g_sffb008 = g_qryparam.return2
           DISPLAY g_sffb007 TO sffb007 #顯示到畫面上
           DISPLAY g_sffb008 TO sffb008
           NEXT FIELD sffb008
     END INPUT
     
     BEFORE DIALOG 
        IF g_sfma_m.sfma001 = '3' THEN
           CALL cl_set_comp_entry("sffb007,sffb008",TRUE)
        ELSE
           CALL cl_set_comp_entry("sffb007,sffb008",FALSE)
        END IF
        
     ON ACTION accept
        ACCEPT DIALOG
     
     ON ACTION cancel
        LET INT_FLAG = TRUE
        EXIT DIALOG
   END DIALOG
   
   IF INT_FLAG THEN
      LET INT_FLAG = FALSE
      LET g_wc_qbe = " 1=1 "
   END IF
   
   IF cl_null(g_wc_qbe) THEN
      LET g_wc_qbe = " 1=1 "
   END IF
   
   LET l_sql = " SELECT COUNT(*) FROM sfaa_t,sfba_t WHERE sfaaent=sfbaent AND sfaasite=sfbasite AND sfaadocno=sfbadocno ",
               "    AND sfbaent=",g_enterprise," AND sfbasite='",g_site,"' AND sfbadocno=? AND sfbaseq=? AND sfbaseq1=?",
               "    AND ",g_wc_qbe
   PREPARE asft350_gen_sfmc_qbe_pre FROM l_sql
   
   CLOSE WINDOW w_asft350_s01  
END FUNCTION


#已入库量
PRIVATE FUNCTION asft350_gen_sfmc_1(p_sfmbseq)
DEFINE p_sfmbseq             LIKE sfmb_t.sfmbseq
DEFINE r_success             LIKE type_t.num5
DEFINE l_sfmb                RECORD LIKE sfmb_t.*
DEFINE l_sfmc                RECORD LIKE sfmc_t.*
DEFINE l_sql_0               STRING
DEFINE l_sql_1               STRING
DEFINE l_sql_where           STRING
DEFINE l_sfec                DYNAMIC ARRAY OF RECORD
       sfec001               LIKE sfec_t.sfec001,
       sfbaseq               LIKE sfec_t.sfecseq,
       sfbaseq1              LIKE sfec_t.sfecseq1,
       sum1                  LIKE sfmc_t.sfmc006,
       sum2                  LIKE sfmc_t.sfmc006
                             END RECORD
DEFINE l_sfec004             LIKE sfec_t.sfec004
DEFINE l_sfec005             LIKE sfec_t.sfec005
DEFINE l_sfec008             LIKE sfec_t.sfec008
DEFINE l_sfec009             LIKE sfec_t.sfec009
DEFINE l_sfec010             LIKE sfec_t.sfec010
DEFINE l_sfec011             LIKE sfec_t.sfec011
DEFINE l_sfec009_1           LIKE sfec_t.sfec009
DEFINE l_sfec011_1           LIKE sfec_t.sfec011
DEFINE l_sfba010             LIKE sfba_t.sfba010
DEFINE l_sfba011             LIKE sfba_t.sfba011
DEFINE l_sfac004             LIKE sfac_t.sfac004
DEFINE l_success             LIKE type_t.num5
DEFINE l_rate                LIKE sfmc_t.sfmc005
DEFINE l_sum1                LIKE sfmc_t.sfmc005
DEFINE l_sum2                LIKE sfmc_t.sfmc005
DEFINE l_sum3                LIKE sfmc_t.sfmc005
DEFINE l_sum4                LIKE sfmc_t.sfmc005
DEFINE l_i                   LIKE type_t.num5
DEFINE l_j                   LIKE type_t.num5
DEFINE l_n                   LIKE type_t.num5
DEFINE l_sfmc006             LIKE sfmc_t.sfmc006
DEFINE l_sfmc007             LIKE sfmc_t.sfmc007
DEFINE l_sfmc006_1           LIKE sfmc_t.sfmc006
DEFINE l_sfmc007_1           LIKE sfmc_t.sfmc007
DEFINE l_sfmc006_max         LIKE sfmc_t.sfmc006
DEFINE l_sfmc007_max         LIKE sfmc_t.sfmc007
DEFINE l_sfmcseq1_min        LIKE sfmc_t.sfmcseq1


   LET r_success = FALSE
   
   SELECT * INTO l_sfmb.* FROM sfmb_t WHERE sfmbent=g_enterprise AND sfmbsite=g_site AND sfmbdocno=g_sfma_m.sfmadocno AND sfmbseq=p_sfmbseq
   
   LET l_sql_0 = "SELECT UNIQUE sfec001,sfbaseq,sfbaseq1 FROM sfba_t,sfea_t,sfec_t"
   LET l_sql_where = " WHERE sfeaent=sfecent AND sfeadocno=sfecdocno AND sfeasite=sfecsite AND sfbaent=sfecent AND sfbadocno=sfec001 AND sfbasite=sfecsite ",
                 "   AND sfeaent=",g_enterprise," and sfeasite='",g_site,"' AND sfea001>='",g_sfma_m.sfma002,"'",
                 "   AND sfea001<='",g_sfma_m.sfma003,"' AND sfba006='",l_sfmb.sfmb001,"'",
                 "   AND sfeastus='S'",
                 "   AND (sfec004 = '1' OR sfec004 = '2') "   #一般+联产品，多产出主件不分摊
   LET l_sql_0 = l_sql_0,l_sql_where," GROUP BY sfec001,sfbaseq,sfbaseq1"
   PREPARE asft350_gen_sfmc_1_pre_1 FROM l_sql_0
   DECLARE asft350_gen_sfmc_1_cs_1 CURSOR FOR asft350_gen_sfmc_1_pre_1
  
   LET l_sql_1 = "SELECT sfec004,sfec005,sfec008,sfec009,sfec010,sfec011 FROM sfba_t,sfea_t,sfec_t" 
   LET l_sql_1 = l_sql_1,l_sql_where," AND sfec001=?"," ORDER BY sfec004,sfec005"
   PREPARE asft350_gen_sfmc_1_pre_2 FROM l_sql_1
   DECLARE asft350_gen_sfmc_1_cs_2 CURSOR FOR asft350_gen_sfmc_1_pre_2
   
   LET l_i = 1
   FOREACH asft350_gen_sfmc_1_cs_1 INTO l_sfec[l_i].sfec001,l_sfec[l_i].sfbaseq,l_sfec[l_i].sfbaseq1
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN r_success
      END IF
      
      #判断此单号是否在qbe范围内
      EXECUTE asft350_gen_sfmc_qbe_pre USING l_sfec[l_i].sfec001,l_sfec[l_i].sfbaseq,l_sfec[l_i].sfbaseq1 INTO l_n
      IF l_n = 0 THEN
         CONTINUE FOREACH
      END IF
      
      LET l_sum1 = 0    #入库量
      LET l_sum2 = 0    #参考入库量
      #抓取主件/联产品，总入库量    
      FOREACH asft350_gen_sfmc_1_cs_2 USING l_sfec[l_i].sfec001 INTO l_sfec004,l_sfec005,l_sfec008,l_sfec009,l_sfec010,l_sfec011
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

            RETURN r_success
         END IF
         SELECT sfac004 INTO l_sfac004 FROM sfac_t WHERE sfacent=g_enterprise AND sfacsite=g_site
            AND sfacdocno=l_sfec[l_i].sfec001 AND sfac001=l_sfec005 AND sfac002=l_sfec004
         IF NOT cl_null(l_sfac004) AND NOT cl_null(l_sfec008) AND NOT cl_null(l_sfec009) THEN
           #CALL s_aimi190_get_convert(l_sfec005,l_sfec008,l_sfac004) RETURNING l_success,l_rate 
           #IF NOT l_success THEN
           #   RETURN r_success
           #END IF             
           #LET l_sfec009_1 = l_sfec009 * l_rate
            CALL s_aooi250_convert_qty(l_sfec005,l_sfec008,l_sfac004,l_sfec009)
                 RETURNING l_success,l_sfec009_1 
            IF NOT l_success THEN
               RETURN r_success
            END IF
            LET l_sum1 = l_sum1 + l_sfec009_1
         END IF
         IF NOT cl_null(l_sfac004) AND NOT cl_null(l_sfec010) AND NOT cl_null(l_sfec011) THEN
           #CALL s_aimi190_get_convert(l_sfec005,l_sfec010,l_sfac004) RETURNING l_success,l_rate 
           #IF NOT l_success THEN
           #   RETURN r_success
           #END IF             
           #LET l_sfec011_1 = l_sfec011 * l_rate
            CALL s_aooi250_convert_qty(l_sfec005,l_sfec010,l_sfac004,l_sfec011)
                 RETURNING l_success,l_sfec011_1
            IF NOT l_success THEN
               RETURN r_success
            END IF
            LET l_sum2 = l_sum2 + l_sfec011_1
         END IF
      END FOREACH
      SELECT sfba010,sfba011 INTO l_sfba010,l_sfba011 FROM sfba_t WHERE sfbaent=g_enterprise AND sfbasite=g_site
         AND sfbadocno=l_sfec[l_i].sfec001 AND sfbaseq=l_sfec[l_i].sfbaseq AND sfbaseq1=l_sfec[l_i].sfbaseq1
      LET l_sum1 = l_sum1 * l_sfba010 / l_sfba011
      LET l_sum2 = l_sum2 * l_sfba010 / l_sfba011
      LET l_sfec[l_i].sum1 = l_sum1
      LET l_sfec[l_i].sum2 = l_sum2
      LET l_i = l_i + 1
   END FOREACH
   
   LET l_i = l_i - 1
   IF l_i = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00280'
      LET g_errparam.extend = p_sfmbseq
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN r_success
   END IF
   
   #计算总合计量
   LET l_sum3 = 0       #当前料号对应的总合计量
   LET l_sum4 = 0       #当前料号对应的总参考和计量
   FOR l_j = 1 TO l_i
      LET l_sum3 = l_sum3 + l_sfec[l_j].sum1
      LET l_sum4 = l_sum4 + l_sfec[l_j].sum2 
   END FOR
   
   #当前项次分摊insert
   FOR l_j = 1 TO l_i
      LET l_sfmc.sfmcent = l_sfmb.sfmbent
      LET l_sfmc.sfmcsite = l_sfmb.sfmbsite
      LET l_sfmc.sfmcdocno = l_sfmb.sfmbdocno
      LET l_sfmc.sfmcseq = l_sfmb.sfmbseq
      SELECT MAX(sfmcseq1)+1 INTO l_sfmc.sfmcseq1 FROM sfmc_t WHERE sfmcent=l_sfmc.sfmcent AND sfmcsite=l_sfmc.sfmcsite
         AND sfmcdocno=l_sfmc.sfmcdocno AND sfmcseq=l_sfmc.sfmcseq
      IF cl_null(l_sfmc.sfmcseq1) THEN
         LET l_sfmc.sfmcseq1 = 1 
      END IF
      LET l_sfmc.sfmc001 = l_sfec[l_j].sfec001
      SELECT sfaa010 INTO l_sfmc.sfmc002 FROM sfaa_t WHERE sfaaent = g_enterprise AND sfaasite = g_site
         AND sfaadocno = l_sfmc.sfmc001
      LET l_sfmc.sfmc003 = l_sfec[l_j].sfbaseq
      LET l_sfmc.sfmc004 = l_sfec[l_j].sfbaseq1
      LET l_sfmc.sfmc006 = (l_sfmb.sfmb008 - l_sfmb.sfmb009) * l_sfec[l_j].sum1 / l_sum3
      LET l_sfmc.sfmc007 = (l_sfmb.sfmb011 - l_sfmb.sfmb012) * l_sfec[l_j].sum1 / l_sum3
      #数量进行单位取位
      IF NOT cl_null(l_sfmb.sfmb007) AND NOT cl_null(l_sfmc.sfmc006) AND l_sfmc.sfmc006 != 0 THEN
         CALL s_aooi250_take_decimals(l_sfmb.sfmb007,l_sfmc.sfmc006) RETURNING l_success,l_sfmc.sfmc006
         IF NOT l_success THEN
            RETURN r_success
         END IF
      END IF
      IF NOT cl_null(l_sfmb.sfmb010) AND NOT cl_null(l_sfmc.sfmc007) AND l_sfmc.sfmc007 != 0 THEN
         CALL s_aooi250_take_decimals(l_sfmb.sfmb010,l_sfmc.sfmc007) RETURNING l_success,l_sfmc.sfmc007
         IF NOT l_success THEN
            RETURN r_success
         END IF
      END IF
      LET l_sfmc.sfmc005 = l_sfec[l_j].sum1
      INSERT INTO sfmc_t VALUES l_sfmc.*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "INS sfmc_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN r_success
      END IF
   END FOR 
   
   #全部分攤完後若分攤數量合計與差異數有小數尾差，將數量最大的一筆做調整，使分攤合計數與差異數相同
   SELECT SUM(sfmc006),SUM(sfmc007) INTO l_sfmc006,l_sfmc007 FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
      AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq
   IF l_sfmb.sfmb008 - l_sfmb.sfmb009 != l_sfmc006 THEN
      #计算出差异数量
      LET l_sfmc006_1 = l_sfmb.sfmb008 - l_sfmb.sfmb009 - l_sfmc006
      #找出数量最大的(若为负数的时候抓最小值），即绝对值最大，可能存在数量最大的有多笔情况,若存在，则调整项序小的那笔资料
      IF l_sfmb.sfmb008 - l_sfmb.sfmb009 > 0 THEN
         SELECT MAX(sfmc006) INTO l_sfmc006_max FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
            AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq
      ELSE
         SELECT MIN(sfmc006) INTO l_sfmc006_max FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
            AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq
      END IF
      SELECT MIN(sfmcseq1) INTO l_sfmcseq1_min FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
         AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq AND sfmc006=l_sfmc006_max
      UPDATE sfmc_t SET sfmc006=sfmc006+l_sfmc006_1 WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
         AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq AND sfmcseq1=l_sfmcseq1_min AND sfmc006=l_sfmc006_max
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "UPD sfmc_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN r_success
      END IF
   END IF
   IF l_sfmb.sfmb011 - l_sfmb.sfmb012 != l_sfmc007 THEN
      #计算出差异参考数量
      LET l_sfmc007_1 = l_sfmb.sfmb011 - l_sfmb.sfmb012 - l_sfmc007
      #找出数量最大的(若为负数的时候抓最小值），即绝对值最大，可能存在数量最大的有多笔情况,若存在，则调整项序小的那笔资料
      IF l_sfmb.sfmb011 - l_sfmb.sfmb012 > 0 THEN
         SELECT MAX(sfmc007) INTO l_sfmc007_max FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
            AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq
      ELSE
         SELECT MIN(sfmc007) INTO l_sfmc007_max FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
            AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq
      END IF
      SELECT MIN(sfmcseq1) INTO l_sfmcseq1_min FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
         AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq AND sfmc007=l_sfmc007_max
      UPDATE sfmc_t SET sfmc007=sfmc007+l_sfmc007_1 WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
         AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq AND sfmcseq1=l_sfmcseq1_min AND sfmc007=l_sfmc007_max
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "UPD sfmc_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN r_success
      END IF
   END IF
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION


##依发料量
PRIVATE FUNCTION asft350_gen_sfmc_2(p_sfmbseq)
DEFINE p_sfmbseq             LIKE sfmb_t.sfmbseq
DEFINE r_success             LIKE type_t.num5
DEFINE l_sfmb                RECORD LIKE sfmb_t.*
DEFINE l_sfmc                RECORD LIKE sfmc_t.*
DEFINE l_sql_0               STRING
DEFINE l_sql_1               STRING
DEFINE l_sql_where           STRING
DEFINE l_sfdc                DYNAMIC ARRAY OF RECORD
       sfdc001               LIKE sfdc_t.sfdc001,
       sfdc002               LIKE sfdc_t.sfdc002,
       sfdc003               LIKE sfdc_t.sfdc003,
       sum1                  LIKE sfmc_t.sfmc006,
       sum2                  LIKE sfmc_t.sfmc006
                             END RECORD
DEFINE l_sfda002             LIKE sfda_t.sfda002
DEFINE l_sfdd006             LIKE sfdd_t.sfdd006
DEFINE l_sfdd007             LIKE sfdd_t.sfdd007
DEFINE l_sfdd008             LIKE sfdd_t.sfdd008
DEFINE l_sfdd009             LIKE sfdd_t.sfdd009
DEFINE l_sfdd007_1           LIKE sfdd_t.sfdd007
DEFINE l_sfdd009_1           LIKE sfdd_t.sfdd009
DEFINE l_success             LIKE type_t.num5
DEFINE l_rate                LIKE sfmc_t.sfmc005
DEFINE l_sum1                LIKE sfmc_t.sfmc005
DEFINE l_sum2                LIKE sfmc_t.sfmc005
DEFINE l_sum3                LIKE sfmc_t.sfmc005
DEFINE l_sum4                LIKE sfmc_t.sfmc005
DEFINE l_i                   LIKE type_t.num5
DEFINE l_j                   LIKE type_t.num5
DEFINE l_n                   LIKE type_t.num5
DEFINE l_sfmc006             LIKE sfmc_t.sfmc006
DEFINE l_sfmc007             LIKE sfmc_t.sfmc007
DEFINE l_sfmc006_1           LIKE sfmc_t.sfmc006
DEFINE l_sfmc007_1           LIKE sfmc_t.sfmc007
DEFINE l_sfmc006_max         LIKE sfmc_t.sfmc006
DEFINE l_sfmc007_max         LIKE sfmc_t.sfmc007
DEFINE l_sfmcseq1_min        LIKE sfmc_t.sfmcseq1


   LET r_success = FALSE
   
   SELECT * INTO l_sfmb.* FROM sfmb_t WHERE sfmbent=g_enterprise AND sfmbsite=g_site AND sfmbdocno=g_sfma_m.sfmadocno AND sfmbseq=p_sfmbseq
   
   LET l_sql_0 = "SELECT UNIQUE sfdc001,sfdc002,sfdc003 FROM sfda_t,sfdc_t,sfdd_t"
   LET l_sql_1 = "SELECT sfda002,sfdd006,sfdd007,sfdd008,sfdd009 FROM sfda_t,sfdc_t,sfdd_t "
   LET l_sql_where = "  WHERE sfdaent=sfdcent AND sfdadocno=sfdcdocno AND sfdcent=sfddent AND sfdcdocno=sfdddocno AND sfdcseq=sfddseq ",
                     "   AND sfdaent=",g_enterprise," and sfdasite='",g_site,"' AND sfda001>='",g_sfma_m.sfma002,"'",
                     "   AND sfda001<='",g_sfma_m.sfma003,"' AND sfdd001='",l_sfmb.sfmb001,"'",
                     "   AND sfdastus='S'"
   IF cl_null(l_sfmb.sfmb002) THEN
      LET l_sql_0 = l_sql_0,l_sql_where," AND (sfdc005 IS NULL OR sfdc005 = ' ')"
      LET l_sql_1 = l_sql_1,l_sql_where," AND (sfdc005 IS NULL OR sfdc005 = ' ')"
   ELSE
      LET l_sql_0 = l_sql_0,l_sql_where," AND sfdc005 = '",l_sfmb.sfmb002,"'"
      LET l_sql_1 = l_sql_1,l_sql_where," AND sfdc005 = '",l_sfmb.sfmb002,"'"
   END IF
   LET l_sql_0 = l_sql_0," GROUP BY sfdc001,sfdc002,sfdc003"
   PREPARE asft350_gen_sfmc_2_pre_1 FROM l_sql_0
   DECLARE asft350_gen_sfmc_2_cs_1 CURSOR FOR asft350_gen_sfmc_2_pre_1 
   
   LET l_sql_1 = l_sql_1," AND sfdc001=? AND sfdc002=? AND sfdc003=? "," ORDER BY sfda002,sfdd006,sfdd007,sfdd008,sfdd009"
   PREPARE asft350_gen_sfmc_2_pre_2 FROM l_sql_1
   DECLARE asft350_gen_sfmc_2_cs_2 CURSOR FOR asft350_gen_sfmc_2_pre_2  
   
   LET l_i = 1
   FOREACH asft350_gen_sfmc_2_cs_1 INTO l_sfdc[l_i].sfdc001,l_sfdc[l_i].sfdc002,l_sfdc[l_i].sfdc003
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN r_success
      END IF
      
      #判断此单号是否在qbe范围内
      EXECUTE asft350_gen_sfmc_qbe_pre USING l_sfdc[l_i].sfdc001,l_sfdc[l_i].sfdc002,l_sfdc[l_i].sfdc003 INTO l_n
      IF l_n = 0 THEN
         CONTINUE FOREACH
      END IF

      LET l_sum1 = 0    #(发料量-退料量) 之和
      LET l_sum2 = 0    
      FOREACH asft350_gen_sfmc_2_cs_2 USING l_sfdc[l_i].sfdc001,l_sfdc[l_i].sfdc002,l_sfdc[l_i].sfdc003 INTO l_sfda002,l_sfdd006,l_sfdd007,l_sfdd008,l_sfdd009
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

            RETURN r_success
         END IF

         #单位转换
        #CALL s_aimi190_get_convert(l_sfmb.sfmb001,l_sfdd006,l_sfmb.sfmb007) RETURNING l_success,l_rate 
        #IF NOT l_success THEN
        #   RETURN r_success
        #END IF            
        #LET l_sfdd007_1 = l_sfdd007 * l_rate
         CALL s_aooi250_convert_qty(l_sfmb.sfmb001,l_sfdd006,l_sfmb.sfmb007,l_sfdd007) 
              RETURNING l_success,l_sfdd007_1
         IF NOT l_success THEN
            RETURN r_success
         END IF     
         #参考单位转换
        #CALL s_aimi190_get_convert(l_sfmb.sfmb001,l_sfdd008,l_sfmb.sfmb007) RETURNING l_success,l_rate 
        #IF NOT l_success THEN
        #   RETURN r_success
        #END IF            
        #LET l_sfdd009_1 = l_sfdd009 * l_rate
         CALL s_aooi250_convert_qty(l_sfmb.sfmb001,l_sfdd008,l_sfmb.sfmb007,l_sfdd009) 
              RETURNING l_success,l_sfdd009_1
         IF NOT l_success THEN
            RETURN r_success
         END IF
         IF l_sfda002[1,1] = '1' AND l_sfda002 != '16' THEN
            LET l_sum1 = l_sum1 + l_sfdd007_1
            LET l_sum2 = l_sum2 + l_sfdd009_1
         END IF
         IF l_sfda002[1,1] = '2' AND l_sfda002 != '26' THEN
            LET l_sum1 = l_sum1 - l_sfdd007_1
            LET l_sum2 = l_sum2 - l_sfdd009_1
         END IF
      END FOREACH

      IF l_sum1 < 0 THEN
         CONTINUE FOREACH
      END IF
      LET l_sfdc[l_i].sum1 = l_sum1
      LET l_sfdc[l_i].sum2 = l_sum2
      
      LET l_i = l_i + 1
   END FOREACH
   
   LET l_i = l_i - 1
   IF l_i = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00281'
      LET g_errparam.extend = p_sfmbseq
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN r_success
   END IF
   
   #计算总合计量
   LET l_sum3 = 0       #当前料号对应的总合计量
   LET l_sum4 = 0       #当前料号对应的总参考和计量
   FOR l_j = 1 TO l_i
      LET l_sum3 = l_sum3 + l_sfdc[l_j].sum1
      LET l_sum4 = l_sum4 + l_sfdc[l_j].sum2 
   END FOR
   
   #当前项次分摊insert
   FOR l_j = 1 TO l_i
      LET l_sfmc.sfmcent = l_sfmb.sfmbent
      LET l_sfmc.sfmcsite = l_sfmb.sfmbsite
      LET l_sfmc.sfmcdocno = l_sfmb.sfmbdocno
      LET l_sfmc.sfmcseq = l_sfmb.sfmbseq
      SELECT MAX(sfmcseq1)+1 INTO l_sfmc.sfmcseq1 FROM sfmc_t WHERE sfmcent=l_sfmc.sfmcent AND sfmcsite=l_sfmc.sfmcsite
         AND sfmcdocno=l_sfmc.sfmcdocno AND sfmcseq=l_sfmc.sfmcseq
      IF cl_null(l_sfmc.sfmcseq1) THEN
         LET l_sfmc.sfmcseq1 = 1 
      END IF
      LET l_sfmc.sfmc001 = l_sfdc[l_j].sfdc001
      SELECT sfaa010 INTO l_sfmc.sfmc002 FROM sfaa_t WHERE sfaaent = g_enterprise AND sfaasite = g_site
         AND sfaadocno = l_sfmc.sfmc001
      LET l_sfmc.sfmc003 = l_sfdc[l_j].sfdc002
      LET l_sfmc.sfmc004 = l_sfdc[l_j].sfdc003
      LET l_sfmc.sfmc006 = (l_sfmb.sfmb008 - l_sfmb.sfmb009) * l_sfdc[l_j].sum1 / l_sum3
      LET l_sfmc.sfmc007 = (l_sfmb.sfmb011 - l_sfmb.sfmb012) * l_sfdc[l_j].sum1 / l_sum3
      #数量进行单位取位
      IF NOT cl_null(l_sfmb.sfmb007) AND NOT cl_null(l_sfmc.sfmc006) AND l_sfmc.sfmc006 != 0 THEN
         CALL s_aooi250_take_decimals(l_sfmb.sfmb007,l_sfmc.sfmc006) RETURNING l_success,l_sfmc.sfmc006
         IF NOT l_success THEN
            RETURN r_success
         END IF
      END IF
      IF NOT cl_null(l_sfmb.sfmb010) AND NOT cl_null(l_sfmc.sfmc007) AND l_sfmc.sfmc007 != 0 THEN
         CALL s_aooi250_take_decimals(l_sfmb.sfmb010,l_sfmc.sfmc007) RETURNING l_success,l_sfmc.sfmc007
         IF NOT l_success THEN
            RETURN r_success
         END IF
      END IF
      LET l_sfmc.sfmc005 = l_sfdc[l_j].sum1
      INSERT INTO sfmc_t VALUES l_sfmc.*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "INS sfmc_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN r_success
      END IF
   END FOR 
   
   #全部分攤完後若分攤數量合計與差異數有小數尾差，將數量最大的一筆做調整，使分攤合計數與差異數相同
   SELECT SUM(sfmc006),SUM(sfmc007) INTO l_sfmc006,l_sfmc007 FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
      AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq
   IF l_sfmb.sfmb008 - l_sfmb.sfmb009 != l_sfmc006 THEN
      #计算出差异数量
      LET l_sfmc006_1 = l_sfmb.sfmb008 - l_sfmb.sfmb009 - l_sfmc006
      #找出数量最大的(若为负数的时候抓最小值），即绝对值最大，可能存在数量最大的有多笔情况,若存在，则调整项序小的那笔资料
      IF l_sfmb.sfmb008 - l_sfmb.sfmb009 > 0 THEN
         SELECT MAX(sfmc006) INTO l_sfmc006_max FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
            AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq
      ELSE
         SELECT MIN(sfmc006) INTO l_sfmc006_max FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
            AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq
      END IF
      SELECT MIN(sfmcseq1) INTO l_sfmcseq1_min FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
         AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq AND sfmc006=l_sfmc006_max
      UPDATE sfmc_t SET sfmc006=sfmc006+l_sfmc006_1 WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
         AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq AND sfmcseq1=l_sfmcseq1_min AND sfmc006=l_sfmc006_max
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "UPD sfmc_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN r_success
      END IF
   END IF
   IF l_sfmb.sfmb011 - l_sfmb.sfmb012 != l_sfmc007 THEN
      #计算出差异参考数量
      LET l_sfmc007_1 = l_sfmb.sfmb011 - l_sfmb.sfmb012 - l_sfmc007
      #找出数量最大的(若为负数的时候抓最小值），即绝对值最大，可能存在数量最大的有多笔情况,若存在，则调整项序小的那笔资料
      IF l_sfmb.sfmb011 - l_sfmb.sfmb012 > 0 THEN
         SELECT MAX(sfmc007) INTO l_sfmc007_max FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
            AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq
      ELSE
         SELECT MIN(sfmc007) INTO l_sfmc007_max FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
            AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq
      END IF
      SELECT MIN(sfmcseq1) INTO l_sfmcseq1_min FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
         AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq AND sfmc007=l_sfmc007_max
      UPDATE sfmc_t SET sfmc007=sfmc007+l_sfmc007_1 WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
         AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq AND sfmcseq1=l_sfmcseq1_min AND sfmc007=l_sfmc007_max
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "UPD sfmc_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN r_success
      END IF
   END IF
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION


#若存在分摊明细资料，修改分摊方式、分摊起讫日期时提示，选否时返回旧值，选是则在AFTER INPUT修改时重新产生分摊明细资料
PRIVATE FUNCTION asft350_sfma001()
DEFINE l_n       LIKE type_t.num5

  SELECT COUNT(*) INTO l_n FROM sfmc_t WHERE sfmcent=g_enterprise AND sfmcsite=g_site AND sfmcdocno=g_sfma_m.sfmadocno
  IF NOT cl_null(g_sfma_m.sfma001) AND g_sfma_m.sfma001 != g_sfma_m_t.sfma001 AND NOT cl_null(g_sfma_m_t.sfma001) THEN     
     IF l_n > 0 AND g_flag5 = 'N' THEN
        IF NOT cl_ask_confirm('asf-00289') THEN
           LET g_sfma_m.sfma001 = g_sfma_m_t.sfma001
        ELSE
           LET g_flag5 = 'Y'
        END IF
     END IF
  END IF
  IF NOT cl_null(g_sfma_m.sfma002) AND g_sfma_m.sfma002 != g_sfma_m_t.sfma002 AND NOT cl_null(g_sfma_m_t.sfma002) THEN
     IF l_n > 0 AND g_flag5 = 'N' THEN
        IF NOT cl_ask_confirm('asf-00289') THEN
           LET g_sfma_m.sfma002 = g_sfma_m_t.sfma002
        ELSE
           LET g_flag5 = 'Y'
        END IF
     END IF
  END IF
  IF NOT cl_null(g_sfma_m.sfma003) AND g_sfma_m.sfma003 != g_sfma_m_t.sfma003 AND NOT cl_null(g_sfma_m_t.sfma003) THEN
     IF l_n > 0 AND g_flag5 = 'N' THEN
        IF NOT cl_ask_confirm('asf-00289') THEN
           LET g_sfma_m.sfma003 = g_sfma_m_t.sfma003
        ELSE
           LET g_flag5 = 'Y'
        END IF
     END IF
  END IF
  DISPLAY BY NAME g_sfma_m.sfma001,g_sfma_m.sfma002,g_sfma_m.sfma003
END FUNCTION


#依报工单分摊
PRIVATE FUNCTION asft350_gen_sfmc_3(p_sfmbseq)
DEFINE p_sfmbseq             LIKE sfmb_t.sfmbseq
DEFINE r_success             LIKE type_t.num5
DEFINE l_sfmb                RECORD LIKE sfmb_t.*
DEFINE l_sfmc                RECORD LIKE sfmc_t.*
DEFINE l_sql_0               STRING
DEFINE l_sql_1               STRING
DEFINE l_sql_where           STRING
DEFINE l_sffb                DYNAMIC ARRAY OF RECORD
       sffb005               LIKE sffb_t.sffb005,
       sfbaseq               LIKE sfba_t.sfbaseq,
       sfbaseq1              LIKE sfba_t.sfbaseq1,
       sum1                  LIKE sfmc_t.sfmc006
                             END RECORD
DEFINE l_sffb017_sum         LIKE sfmc_t.sfmc006
DEFINE l_sffb017_sum1        LIKE sfmc_t.sfmc006
DEFINE l_sfba010             LIKE sfba_t.sfba010
DEFINE l_sfba011             LIKE sfba_t.sfba011
DEFINE l_success             LIKE type_t.num5
DEFINE l_i                   LIKE type_t.num5
DEFINE l_j                   LIKE type_t.num5
DEFINE l_n                   LIKE type_t.num5
DEFINE l_sfmc006             LIKE sfmc_t.sfmc006
DEFINE l_sfmc007             LIKE sfmc_t.sfmc007
DEFINE l_sfmc006_1           LIKE sfmc_t.sfmc006
DEFINE l_sfmc007_1           LIKE sfmc_t.sfmc007
DEFINE l_sfmc006_max         LIKE sfmc_t.sfmc006
DEFINE l_sfmc007_max         LIKE sfmc_t.sfmc007
DEFINE l_sfmcseq1_min        LIKE sfmc_t.sfmcseq1


   LET r_success = FALSE
   
   SELECT * INTO l_sfmb.* FROM sfmb_t WHERE sfmbent=g_enterprise AND sfmbsite=g_site AND sfmbdocno=g_sfma_m.sfmadocno AND sfmbseq=p_sfmbseq
   
   LET l_sql_0 = "SELECT UNIQUE sffb005,sfbaseq,sfbaseq1 FROM sfba_t,sffb_t"
   LET l_sql_where = " WHERE sfbaent=sffbent AND sfbadocno=sffb005 AND sfbasite=sffbsite ",
                 "   AND sffbent=",g_enterprise," and sffbsite='",g_site,"' AND sffbdocdt>='",g_sfma_m.sfma002,"'",
                 "   AND sffbdocdt<='",g_sfma_m.sfma003,"' AND sfba006='",l_sfmb.sfmb001,"'",
                 "   AND sffbstus='Y' AND sffb001 = '3' "
   IF NOT cl_null(g_sffb007) THEN
      LET l_sql_where = l_sql_where," AND sffb007='",g_sffb007,"'"
   ELSE
      LET l_sql_where = l_sql_where," AND sffb007 = ' '"
   END IF
   IF NOT cl_null(g_sffb008) THEN
      LET l_sql_where = l_sql_where," AND sffb008='",g_sffb008,"'"
   ELSE
      LET l_sql_where = l_sql_where," AND sffb008 = ' '"
   END IF
   LET l_sql_0 = l_sql_0,l_sql_where," GROUP BY sffb005,sfbaseq,sfbaseq1"
   PREPARE asft350_gen_sfmc_3_pre_1 FROM l_sql_0
   DECLARE asft350_gen_sfmc_3_cs_1 CURSOR FOR asft350_gen_sfmc_3_pre_1
  
   LET l_sql_1 = "SELECT SUM(sffb017) FROM sfba_t,sffb_t" 
   LET l_sql_1 = l_sql_1,l_sql_where," AND sffb005=?"
   PREPARE asft350_gen_sfmc_3_pre_2 FROM l_sql_1
   DECLARE asft350_gen_sfmc_3_cs_2 CURSOR FOR asft350_gen_sfmc_3_pre_2
   
   LET l_i = 1
   FOREACH asft350_gen_sfmc_3_cs_1 INTO l_sffb[l_i].sffb005,l_sffb[l_i].sfbaseq,l_sffb[l_i].sfbaseq1
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN r_success
      END IF
      
      #判断此单号是否在qbe范围内
      EXECUTE asft350_gen_sfmc_qbe_pre USING l_sffb[l_i].sffb005,l_sffb[l_i].sfbaseq,l_sffb[l_i].sfbaseq1 INTO l_n
      IF l_n = 0 THEN
         CONTINUE FOREACH
      END IF
      
      EXECUTE asft350_gen_sfmc_3_cs_2 USING l_sffb[l_i].sffb005 INTO l_sffb017_sum
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN r_success
      END IF

      SELECT sfba010,sfba011 INTO l_sfba010,l_sfba011 FROM sfba_t WHERE sfbaent=g_enterprise AND sfbasite=g_site
         AND sfbadocno=l_sffb[l_i].sffb005 AND sfbaseq=l_sffb[l_i].sfbaseq AND sfbaseq1=l_sffb[l_i].sfbaseq1
      LET l_sffb[l_i].sum1 = l_sffb017_sum * l_sfba010 / l_sfba011
      LET l_i = l_i + 1
   END FOREACH
   
   LET l_i = l_i - 1
   IF l_i = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00280'
      LET g_errparam.extend = p_sfmbseq
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN r_success
   END IF
   
   #计算总合计量
   LET l_sffb017_sum1 = 0       #当前料号对应的总合计量
   FOR l_j = 1 TO l_i
      LET l_sffb017_sum1 = l_sffb017_sum1 + l_sffb[l_j].sum1
   END FOR
   
   #当前项次分摊insert
   FOR l_j = 1 TO l_i
      LET l_sfmc.sfmcent = l_sfmb.sfmbent
      LET l_sfmc.sfmcsite = l_sfmb.sfmbsite
      LET l_sfmc.sfmcdocno = l_sfmb.sfmbdocno
      LET l_sfmc.sfmcseq = l_sfmb.sfmbseq
      SELECT MAX(sfmcseq1)+1 INTO l_sfmc.sfmcseq1 FROM sfmc_t WHERE sfmcent=l_sfmc.sfmcent AND sfmcsite=l_sfmc.sfmcsite
         AND sfmcdocno=l_sfmc.sfmcdocno AND sfmcseq=l_sfmc.sfmcseq
      IF cl_null(l_sfmc.sfmcseq1) THEN
         LET l_sfmc.sfmcseq1 = 1 
      END IF
      LET l_sfmc.sfmc001 = l_sffb[l_j].sffb005
      SELECT sfaa010 INTO l_sfmc.sfmc002 FROM sfaa_t WHERE sfaaent = g_enterprise AND sfaasite = g_site
         AND sfaadocno = l_sfmc.sfmc001
      LET l_sfmc.sfmc003 = l_sffb[l_j].sfbaseq
      LET l_sfmc.sfmc004 = l_sffb[l_j].sfbaseq1
      LET l_sfmc.sfmc006 = (l_sfmb.sfmb008 - l_sfmb.sfmb009) * l_sffb[l_j].sum1 / l_sffb017_sum1
      LET l_sfmc.sfmc007 = (l_sfmb.sfmb011 - l_sfmb.sfmb012) * l_sffb[l_j].sum1 / l_sffb017_sum1
      #数量进行单位取位
      IF NOT cl_null(l_sfmb.sfmb007) AND NOT cl_null(l_sfmc.sfmc006) AND l_sfmc.sfmc006 != 0 THEN
         CALL s_aooi250_take_decimals(l_sfmb.sfmb007,l_sfmc.sfmc006) RETURNING l_success,l_sfmc.sfmc006
         IF NOT l_success THEN
            RETURN r_success
         END IF
      END IF
      IF NOT cl_null(l_sfmb.sfmb010) AND NOT cl_null(l_sfmc.sfmc007) AND l_sfmc.sfmc007 != 0 THEN
         CALL s_aooi250_take_decimals(l_sfmb.sfmb010,l_sfmc.sfmc007) RETURNING l_success,l_sfmc.sfmc007
         IF NOT l_success THEN
            RETURN r_success
         END IF
      END IF
      LET l_sfmc.sfmc005 = l_sffb[l_j].sum1
      INSERT INTO sfmc_t VALUES l_sfmc.*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "INS sfmc_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN r_success
      END IF
   END FOR 
   
   #全部分攤完後若分攤數量合計與差異數有小數尾差，將數量最大的一筆做調整，使分攤合計數與差異數相同
   SELECT SUM(sfmc006),SUM(sfmc007) INTO l_sfmc006,l_sfmc007 FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
      AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq
   IF l_sfmb.sfmb008 - l_sfmb.sfmb009 != l_sfmc006 THEN
      #计算出差异数量
      LET l_sfmc006_1 = l_sfmb.sfmb008 - l_sfmb.sfmb009 - l_sfmc006
      #找出数量最大的(若为负数的时候抓最小值），即绝对值最大，可能存在数量最大的有多笔情况,若存在，则调整项序小的那笔资料
      IF l_sfmb.sfmb008 - l_sfmb.sfmb009 > 0 THEN
         SELECT MAX(sfmc006) INTO l_sfmc006_max FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
            AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq
      ELSE
         SELECT MIN(sfmc006) INTO l_sfmc006_max FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
            AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq
      END IF
      SELECT MIN(sfmcseq1) INTO l_sfmcseq1_min FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
         AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq AND sfmc006=l_sfmc006_max
      UPDATE sfmc_t SET sfmc006=sfmc006+l_sfmc006_1 WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
         AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq AND sfmcseq1=l_sfmcseq1_min AND sfmc006=l_sfmc006_max
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "UPD sfmc_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN r_success
      END IF
   END IF
   IF l_sfmb.sfmb011 - l_sfmb.sfmb012 != l_sfmc007 THEN
      #计算出差异参考数量
      LET l_sfmc007_1 = l_sfmb.sfmb011 - l_sfmb.sfmb012 - l_sfmc007
      #找出数量最大的(若为负数的时候抓最小值），即绝对值最大，可能存在数量最大的有多笔情况,若存在，则调整项序小的那笔资料
      IF l_sfmb.sfmb011 - l_sfmb.sfmb012 > 0 THEN
         SELECT MAX(sfmc007) INTO l_sfmc007_max FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
            AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq
      ELSE
         SELECT MIN(sfmc007) INTO l_sfmc007_max FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
            AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq
      END IF
      SELECT MIN(sfmcseq1) INTO l_sfmcseq1_min FROM sfmc_t WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
         AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq AND sfmc007=l_sfmc007_max
      UPDATE sfmc_t SET sfmc007=sfmc007+l_sfmc007_1 WHERE sfmcent=l_sfmb.sfmbent AND sfmcsite=l_sfmb.sfmbsite
         AND sfmcdocno=l_sfmb.sfmbdocno AND sfmcseq=l_sfmb.sfmbseq AND sfmcseq1=l_sfmcseq1_min AND sfmc007=l_sfmc007_max
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "UPD sfmc_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN r_success
      END IF
   END IF
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION


##根据最新的sfmb单身资料抓取最新的数量
PRIVATE FUNCTION asft350_reproduce_upd()
DEFINE l_sql             STRING
DEFINE l_inag008         LIKE inag_t.inag008
DEFINE l_inag024         LIKE inag_t.inag024
DEFINE l_inag025         LIKE inag_t.inag025
DEFINE l_sfmb            RECORD LIKE sfmb_t.*
DEFINE l_success         LIKE type_t.num5
DEFINE l_rate            LIKE sfmc_t.sfmc005

   LET l_sql = "SELECT * FROM sfmb_t WHERE sfmbent=",g_enterprise," AND sfmbdocno='",g_sfma_m.sfmadocno,"'"
   PREPARE asft350_reproduce_upd_pre FROM l_sql
   DECLARE asft350_reproduce_upd_cs CURSOR FOR asft350_reproduce_upd_pre
   FOREACH asft350_reproduce_upd_cs INTO l_sfmb.*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN 
      END IF
      SELECT inag008,inag024,inag025 INTO l_inag008,l_inag024,l_inag025 FROM inag_t WHERE inagent = g_enterprise AND inagsite = g_site
         AND inag001 = l_sfmb.sfmb001 AND inag002 = l_sfmb.sfmb002 AND inag003 = l_sfmb.sfmb006 AND inag004 = l_sfmb.sfmb003
         AND inag005 = l_sfmb.sfmb004 AND inag006 = l_sfmb.sfmb005 AND inag007 = l_sfmb.sfmb007 
      IF cl_null(l_inag008) THEN
         LET l_inag008 = 0
      END IF
      IF NOT cl_null(l_inag024) AND NOT cl_null(l_sfmb.sfmb010) THEN
        #CALL s_aimi190_get_convert(l_sfmb.sfmb001,l_inag024,l_sfmb.sfmb010) RETURNING l_success,l_rate 
        #IF NOT l_success THEN
        #   LET l_rate = 1
        #END IF             
        #LET l_inag025 = l_inag025 * l_rate
         CALL s_aooi250_convert_qty(l_sfmb.sfmb001,l_inag024,l_sfmb.sfmb010,l_inag025)
              RETURNING l_success,l_inag025
      END IF
      IF cl_null(l_inag025) THEN
         LET l_inag025 = 0
      END IF
      IF cl_null(l_sfmb.sfmb010) THEN
         LET l_inag025 = ''
      END IF
      UPDATE sfmb_t SET sfmb008=l_inag008,sfmb009='',sfmb011=l_inag025,sfmb012=''
       WHERE sfmbent=g_enterprise AND sfmbdocno=g_sfma_m.sfmadocno AND sfmbseq=l_sfmb.sfmbseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "UPD sfmb_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN
      END IF
   END FOREACH
END FUNCTION

 
{</section>}
 
