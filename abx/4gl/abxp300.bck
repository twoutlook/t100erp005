#該程式未解開Section, 採用最新樣板產出!
{<section id="abxp300.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0001(2016-02-17 13:43:02), PR版次:0001(2016-02-17 14:31:26)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000025
#+ Filename...: abxp300
#+ Description: 保稅機器設備擷取作業
#+ Creator....: 07024(2016-02-01 15:59:22)
#+ Modifier...: 07024 -SD/PR- 07024
 
{</section>}
 
{<section id="abxp300.global" >}
#應用 p02 樣板自動產生(Version:19)
#add-point:填寫註解說明
#Memos
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc" 
#add-point:增加匯入變數檔
#
##end add-point
 
#模組變數(Module Variables)
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10              
DEFINE l_ac_d               LIKE type_t.num10             #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num10             #目前所在頁數
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num10
 
TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   
   #end add-point
        wc               STRING
                     END RECORD
 
TYPE type_g_detail_d RECORD
#add-point:自定義模組變數(Module Variable)  #注意要在add-point內寫入END RECORD
   sel LIKE type_t.chr1,
   faah002 LIKE faah_t.faah002,
   faah003 LIKE faah_t.faah003,
   faah012 LIKE faah_t.faah012,
   faah013 LIKE faah_t.faah013,
   faah017 LIKE faah_t.faah017,
   faah017_desc LIKE oocal_t.oocal003,
   faah018 LIKE faah_t.faah018,
   faah026 LIKE faah_t.faah026,
   faah026_desc LIKE ooefl_t.ooefl003,
   faah025 LIKE faah_t.faah025,
   faah025_desc LIKE ooag_t.ooag011,
   faah027 LIKE faah_t.faah027,
   faah027_desc LIKE oocql_t.oocql004
END RECORD
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
DEFINE g_detail_cnt         LIKE type_t.num10              #單身 總筆數(所有資料)
DEFINE g_detail_d  DYNAMIC ARRAY OF type_g_detail_d
 
#add-point:傳入參數說明

#end add-point
 
{</section>}
 
{<section id="abxp300.main" >}
#+ 作業開始 
MAIN
   DEFINE ls_js  STRING
   #add-point:main段define
   
   #end add-point   
   #add-point:main段define
   
   #end add-point   
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("abx","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_abxp300 WITH FORM cl_ap_formpath("abx",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL abxp300_init()   
 
      #進入選單 Menu (="N")
      CALL abxp300_ui_dialog() 
 
      #add-point:畫面關閉前
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_abxp300
   END IF 
   
   #add-point:作業離開前
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="abxp300.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION abxp300_init()
   #add-point:init段define
   
   #end add-point   
   #add-point:init段define
   
   #end add-point   
   
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
 
   #add-point:畫面資料初始化
   LET g_wc = "1=1"
   #資產性質
   CALL cl_set_combo_scc('faah005','9903')
   #型態
   CALL cl_set_combo_scc_part('faah002','9911','1,2')
   CALL cl_set_combo_scc_part('b_faah002','9911','1,2')
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="abxp300.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION abxp300_ui_dialog()
   DEFINE li_idx   LIKE type_t.num10
   #add-point:ui_dialog段define
   
   #end add-point 
   #add-point:ui_dialog段define
   
   #end add-point 
   
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   LET g_detail_cnt = g_detail_d.getLength()
   #add-point:ui_dialog段before dialog 
   
   #end add-point
   
   WHILE TRUE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_detail_d.clear()
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL abxp300_init()
      END IF
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:ui_dialog段construct
         CONSTRUCT BY NAME g_wc ON faah006,faah007,faah005,faah002,faah003,faah026,faah025
            BEFORE CONSTRUCT
               
            ON ACTION controlp INFIELD faah006 #主要類型
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_faac001()
               DISPLAY g_qryparam.return1 TO faah006
               NEXT FIELD faah006
               
            ON ACTION controlp INFIELD faah007 #次要類型
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_faad001()
               DISPLAY g_qryparam.return1 TO faah007
               NEXT FIELD faah007
               
            ON ACTION controlp INFIELD faah003 #財產編號
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_faah003()
               DISPLAY g_qryparam.return1 TO faah003
               NEXT FIELD faah003
               
            ON ACTION controlp INFIELD faah026 #保管部門
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooeg001_4()
               DISPLAY g_qryparam.return1 TO faah026
               NEXT FIELD faah026
               
            ON ACTION controlp INFIELD faah025 #保管人員
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooag001()
               DISPLAY g_qryparam.return1 TO faah025
               NEXT FIELD faah025

         END CONSTRUCT
         #end add-point
         #add-point:ui_dialog段input
         INPUT ARRAY g_detail_d FROM s_detail1.*
            ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                      INSERT ROW = FALSE,
                      DELETE ROW = FALSE,
                      APPEND ROW = FALSE)
            
            BEFORE INPUT
               LET g_detail_cnt = g_detail_d.getLength()
           
            BEFORE ROW
               LET g_master_idx = ARR_CURR()
               DISPLAY g_master_idx TO FORMONLY.h_index
               LET g_detail_cnt = g_detail_d.getLength()
               CALL abxp300_fetch()
            
         END INPUT
         #end add-point
         #add-point:ui_dialog段自定義display array
         
         #end add-point
 
         BEFORE DIALOG
            IF g_detail_d.getLength() > 0 THEN
               CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
            ELSE
               CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
            END IF
            #add-point:ui_dialog段before_dialog2
            
            #end add-point
 
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            #add-point:ui_dialog段on action selall
            
            #end add-point            
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "Y"
               #add-point:ui_dialog段on action selall
               
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selall
            
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "N"
               #add-point:ui_dialog段on action selnone
               
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selnone
            
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "Y"
               END IF
            END FOR
            #add-point:ui_dialog段on action sel
            
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "N"
               END IF
            END FOR
            #add-point:ui_dialog段on action unsel
            
            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL abxp300_filter()
            #add-point:ON ACTION filter
            
            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION accept
            #add-point:ui_dialog段accept之前
            
            #end add-point
            CALL abxp300_query()
             
         # 條件清除
         ON ACTION qbeclear
            #add-point:ui_dialog段
            
            #end add-point
 
         # 重新整理
         ON ACTION datarefresh
            LET g_error_show = 1
            #add-point:ui_dialog段datarefresh
            
            #end add-point
            CALL abxp300_b_fill()
 
         #add-point:ui_dialog段action
         ON ACTION batch_execute
            CALL abxp300_process()
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
 
{</section>}
 
{<section id="abxp300.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION abxp300_query()
   DEFINE ls_wc      STRING
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   
   #end add-point 
   #add-point:query段define
   
   #end add-point 
    
   #add-point:cs段after_construct
   
   #end add-point
        
   LET g_error_show = 1
   CALL abxp300_b_fill()
   LET l_ac = g_master_idx
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   END IF
   
   #add-point:cs段after_query
   LET g_master_idx = ARR_CURR()
   DISPLAY g_master_idx TO FORMONLY.h_index
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="abxp300.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION abxp300_b_fill()
 
   DEFINE ls_wc           STRING
   #add-point:b_fill段define
   
   #end add-point
   #add-point:b_fill段define
   
   #end add-point
 
   #add-point:b_fill段sql_before
   LET g_sql = " SELECT 'N',faah002,faah003,faah012,faah013,faah017,oocal003,faah018,",
               "        faah026,ooefl003,faah025,ooag011,faah027,oocql004",
               "   FROM faah_t",
               "   LEFT OUTER JOIN oocal_t ON faahent=oocalent AND faah017=oocal001 AND oocal002='",g_dlang,"'",
               "   LEFT OUTER JOIN ooefl_t ON faahent=ooeflent AND faah026=ooefl001 AND ooefl002='",g_dlang,"'",
               "   LEFT OUTER JOIN ooag_t  ON faahent=ooagent  AND faah025=ooag001 ",
               "   LEFT OUTER JOIN oocql_t ON faahent=oocqlent AND oocql001='3900' AND faah027=oocql002 AND oocql003='",g_dlang,"'",
               "  WHERE faahent=? AND faah015 IN (1,2,3,4,7,9) AND faah002 IN (1,2) ",
               "    AND faahstus='Y' AND faah034='1' AND (faah047 ='N' OR faah047 IS NULL) AND ",g_wc,
               "  ORDER BY faah003 "
   #end add-point
 
   PREPARE abxp300_sel FROM g_sql
   DECLARE b_fill_curs CURSOR FOR abxp300_sel
   
   CALL g_detail_d.clear()
   #add-point:b_fill段其他頁簽清空
   
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs USING g_enterprise INTO 
   #add-point:b_fill段foreach_into
   g_detail_d[l_ac].*
   #end add-point
   
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      #add-point:b_fill段資料填充
      
      #end add-point
      
      CALL abxp300_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
   #add-point:b_fill段資料填充(其他單身)
   CALL g_detail_d.deleteElement(g_detail_d.getLength())
   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE abxp300_sel
   
   LET l_ac = 1
   CALL abxp300_fetch()
   #add-point:b_fill段資料填充(其他單身)
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="abxp300.fetch" >}
#+ 單身陣列填充2
PRIVATE FUNCTION abxp300_fetch()
 
   DEFINE li_ac           LIKE type_t.num10
   #add-point:fetch段define
   
   #end add-point
   #add-point:fetch段define
   
   #end add-point
   
   LET li_ac = l_ac 
   
   #add-point:單身填充後
   
   #end add-point 
   
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="abxp300.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION abxp300_detail_show()
   #add-point:show段define
   
   #end add-point
   #add-point:show段define
   
   #end add-point
   
   #add-point:detail_show段
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="abxp300.filter" >}
#+ filter過濾功能
PRIVATE FUNCTION abxp300_filter()
   #add-point:filter段define
   
   #end add-point    
   #add-point:filter段define
   
   #end add-point    
   
   DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
      ON UPDATE
 
   END DISPLAY
 
   LET l_ac = 1
   LET g_detail_cnt = 1
   #add-point:filter段define
   
   #end add-point    
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
   
   CALL abxp300_b_fill()
   
END FUNCTION
 
{</section>}
 
{<section id="abxp300.filter_parser" >}
#+ filter欄位解析
PRIVATE FUNCTION abxp300_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   
   #end add-point    
   #add-point:filter段define
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="abxp300.filter_show" >}
#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION abxp300_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = abxp300_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="abxp300.other_function" readonly="Y" >}
#add-point:自定義元件(Function)

################################################################################
# Descriptions...: 新增保稅機器設備資料
# Memo...........:
# Usage..........: CALL abxp300_process()
# Input parameter: 
# Return code....: 
# Date & Author..: 2016/02/16 By dorislai
# Modify.........:
################################################################################
PRIVATE FUNCTION abxp300_process()
   DEFINE l_ac        LIKE type_t.num5
   DEFINE l_cnt       LIKE type_t.num5
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_bxdb001   LIKE bxdb_t.bxdb001
   DEFINE l_bxdbcrtdt LIKE bxdb_t.bxdbcrtdt
   
   CALL cl_err_collect_init()
   
   FOR l_ac = 1 TO g_detail_d.getLength()
      CALL s_transaction_begin()
      LET l_cnt = 0
      LET l_success = TRUE
      IF g_detail_d[l_ac].sel = 'Y' THEN
         CASE g_detail_d[l_ac].faah002
            WHEN '1'
               LET l_bxdb001 = g_detail_d[l_ac].faah003
            WHEN '2'
               LET l_bxdb001 = g_detail_d[l_ac].faah003||'-'||g_detail_d[l_ac].faah002
         END CASE
         
         SELECT COUNT(*) INTO l_cnt
           FROM bxdb_t
          WHERE bxdbent = g_enterprise
            AND bxdbsite = g_site
            AND bxdb001 = l_bxdb001
            AND bxdb005 = g_detail_d[l_ac].faah002
         IF l_cnt = 0 THEN
            LET l_bxdbcrtdt = cl_get_current()
            INSERT INTO bxdb_t (bxdbstus,bxdbent,bxdbsite,bxdb001,bxdb002,bxdb004,bxdb005,bxdb006,bxdb008,
                                bxdb009,bxdb010,bxdb016,bxdbownid,bxdbowndp,bxdbcrtid,bxdbcrtdp,bxdbcrtdt)
                 VALUES ('N',g_enterprise,g_site,l_bxdb001,g_detail_d[l_ac].faah012,g_detail_d[l_ac].faah013,
                         g_detail_d[l_ac].faah002,g_detail_d[l_ac].faah003,g_detail_d[l_ac].faah017,
                         g_detail_d[l_ac].faah018,0,g_detail_d[l_ac].faah018,g_user,g_dept,g_user,g_dept,l_bxdbcrtdt)

            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "INSERT bxdb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
            ELSE
               INSERT INTO bxdc_t (bxdcent,bxdcsite,bxdc001,bxdc002,bxdc003,bxdc004,bxdc005,
                                   bxdc006,bxdc007,bxdc010,bxdc011,bxdc012,bxdc013)
                      VALUES (g_enterprise,g_site,l_bxdb001,1,g_detail_d[l_ac].faah026,
                              g_detail_d[l_ac].faah025,g_detail_d[l_ac].faah018,g_detail_d[l_ac].faah027,
                              g_detail_d[l_ac].faah018,0,0,0,0)
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "INSERT bxdc_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
               ELSE
                  UPDATE faah_t SET faah047 = 'Y'
                   WHERE faahent = g_enterprise
                     AND faah002 = g_detail_d[l_ac].faah002
                     AND faah003 = g_detail_d[l_ac].faah003
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "INSERT bxdc_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  END IF
               END IF                  
            END IF
         END IF
      END IF
   END FOR
   
   CALL s_transaction_end('Y','0')
   
   CALL cl_err_collect_show() 
   
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      CALL abxp300_b_fill()
      CALL cl_ask_pressanykey("std-00012")
   ELSE
      #背景作業完成處理
   END IF
   
END FUNCTION

#end add-point
 
{</section>}
 
